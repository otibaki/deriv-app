import { default as React } from 'react';
import { STATUS, TYPE } from '../../utils/notification-utils';
export interface NotificationProps extends Omit<React.HTMLProps<HTMLAnchorElement>, "title"> {
    className?: string;
    hasCloseButton?: boolean;
    icon?: React.ReactNode;
    iconBackgroundColor?: string;
    isBanner?: boolean;
    message?: React.ReactNode;
    onClose?: (e?: React.MouseEvent<HTMLButtonElement>) => void;
    onMarkAsRead?: (e?: React.MouseEvent<HTMLButtonElement>) => void;
    onSwipeDown?: () => void;
    onSwipeLeft?: () => void;
    onSwipeRight?: () => void;
    onSwipeUp?: () => void;
    redirectTo?: string;
    status?: (typeof STATUS)[keyof typeof STATUS];
    timestamp?: number;
    title?: React.ReactNode;
    type?: (typeof TYPE)[keyof typeof TYPE];
}
export declare const Notification: ({ className, hasCloseButton, icon, iconBackgroundColor, isBanner, message, onClose, onMarkAsRead, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, redirectTo, status, timestamp, title, type, ...rest }: NotificationProps) => React.JSX.Element;
