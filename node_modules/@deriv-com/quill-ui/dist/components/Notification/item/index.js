import { j as T } from "../../../jsx-runtime-DmTjM30f.js";
import { useState as m, useEffect as h } from "react";
import { c as D } from "../../../clsx-OuTLNxxd.js";
import { STATUS as i } from "../../../utils/notification-utils.js";
import { Notification as A } from "../base.js";
const o = {
  LEFT: "left",
  RIGHT: "right"
}, U = ({
  className: I,
  status: f,
  type: x = "info",
  isMobile: t,
  onClick: a,
  onClose: r,
  onMarkAsRead: l,
  onShowingButtons: c,
  showButtons: d,
  ...N
}) => {
  const [L, S] = m(!1), [p, E] = m(f === i.READ), [j, s] = m(!1);
  h(() => {
    E(f === i.READ);
  }, [f]), h(() => {
    s(d ?? !1);
  }, [d]);
  const _ = (e) => {
    u(), a == null || a(e);
  }, v = () => {
    S(!0), r == null || r();
  }, u = (e) => {
    s(!1), E(!0), l == null || l(e);
  }, R = (e) => {
    const n = e === o.LEFT;
    s(n), n && (c == null || c());
  };
  return /* @__PURE__ */ T.jsx(
    "div",
    {
      className: D(
        "quill-notification__item-wrapper",
        L && "deleted"
      ),
      children: /* @__PURE__ */ T.jsx(
        A,
        {
          ...N,
          className: D(
            `quill-notification__item${t ? "--mobile" : ""}`,
            t && j && `show-buttons${p ? "--read" : ""}`,
            I
          ),
          onBlur: () => s(!1),
          onClick: _,
          onClose: v,
          onMarkAsRead: u,
          onSwipeLeft: t ? () => R(o.LEFT) : void 0,
          onSwipeRight: t ? () => R(o.RIGHT) : void 0,
          status: p ? i.READ : i.UNREAD,
          type: x
        }
      )
    }
  );
};
export {
  U as NotificationItem,
  U as default
};
