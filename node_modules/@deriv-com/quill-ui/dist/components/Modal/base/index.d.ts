import { default as React, HTMLAttributes } from 'react';
import { TButtonColor } from '../../Button';
export interface ModalProps extends HTMLAttributes<HTMLDivElement> {
    isOpened?: boolean;
    isNonExpandable?: boolean;
    className?: string;
    containerClassName?: string;
    showHandleBar?: boolean;
    showCrossIcon?: boolean;
    showSecondaryButton?: boolean;
    shouldCloseOnPrimaryButtonClick?: boolean;
    shouldCloseOnSecondaryButtonClick?: boolean;
    shouldCloseModalOnSwipeDown?: boolean;
    disableCloseOnOverlay?: boolean;
    toggleModal?: (isOpened: boolean) => void;
    portalId?: string;
    buttonColor?: TButtonColor;
    showPrimaryButton?: boolean;
    primaryButtonLabel?: React.ReactNode;
    isPrimaryButtonDisabled?: boolean;
    isSecondaryButtonDisabled?: boolean;
    primaryButtonCallback?: () => void;
    secondaryButtonCallback?: () => void;
    secondaryButtonLabel?: React.ReactNode;
    isMobile?: boolean;
    hasFooter?: boolean;
    handleBarIndex?: number;
}
export declare const Modal: {
    (props: React.PropsWithChildren<ModalProps>): React.JSX.Element;
    Header: ({ className, height, image, src, style, title, }: React.PropsWithChildren<import('./modal-header').ModalHeaderProps>) => React.JSX.Element;
    Body: ({ children, className, }: React.PropsWithChildren<import('./modal-body').ModalBodyProps>) => React.JSX.Element;
};
