import { j as e } from "../../../jsx-runtime-DmTjM30f.js";
import { forwardRef as I } from "react";
import { c as a } from "../../../clsx-OuTLNxxd.js";
import { CaptionText as f } from "../../Typography/caption/index.js";
import "../../Typography/base.js";
import "../../Typography/heading/index.js";
import { useUniqueId as S } from "../../../hooks/useUniqueId.js";
import { a as C, F } from "../../../StandaloneTriangleExclamationBoldIcon-DbjkWWdj.js";
import '../../../assets/index4.css';const R = {
  neutral: "status-icon--neutral",
  success: "status-icon--success",
  error: "status-icon--error"
}, k = {
  success: /* @__PURE__ */ e.jsx(C, { iconSize: "sm" }),
  error: /* @__PURE__ */ e.jsx(F, { iconSize: "sm" })
}, D = I(
  (n, g) => {
    const {
      wrapperClassName: j,
      textAreaClassName: N,
      label: c,
      variant: m = "outline",
      leftIcon: t,
      rightIcon: q,
      placeholder: $,
      disabled: r,
      size: i = "md",
      message: d,
      maxLength: u,
      show_counter: x = !0,
      status: s = "neutral",
      value: _ = "",
      onChange: l,
      fieldMarker: b,
      required: p,
      resizable: v = !0,
      id: w
    } = n, o = (s === "success" || s === "error") && !r ? k[s] : q, h = w || S("quill-textarea");
    return /* @__PURE__ */ e.jsxs("div", { className: "quill-textarea__container", children: [
      /* @__PURE__ */ e.jsxs(
        "div",
        {
          className: a(
            j,
            "quill-textarea__wrapper",
            `quill-textarea__wrapper__variant--${m}`,
            `quill-textarea__wrapper__size--${i}`,
            `quill-textarea__wrapper__variant--${m}--${s}`,
            `quill-textarea__wrapper__resize--${v}`,
            !t && "no-left-icon",
            !o && "no-right-icon"
          ),
          children: [
            t && /* @__PURE__ */ e.jsx("span", { className: "left-icon", children: t }),
            /* @__PURE__ */ e.jsx(
              "textarea",
              {
                className: a(
                  "quill-textarea",
                  N,
                  _.toString().length > 0 && "has-value"
                ),
                placeholder: $,
                disabled: !!r,
                onChange: (z) => {
                  l == null || l(z);
                },
                ...n,
                id: h,
                ref: g
              }
            ),
            c && i === "md" && /* @__PURE__ */ e.jsxs(
              "label",
              {
                className: a("label", `label--${s}`),
                htmlFor: h,
                children: [
                  c,
                  b && /* @__PURE__ */ e.jsx(
                    "div",
                    {
                      className: a(
                        `label-field-marker__required--${p}`
                      ),
                      children: p ? "*" : "(optional)"
                    }
                  )
                ]
              }
            ),
            o && /* @__PURE__ */ e.jsx(
              "span",
              {
                className: a(
                  "right-icon",
                  R[s]
                ),
                children: o
              }
            )
          ]
        }
      ),
      /* @__PURE__ */ e.jsx("div", { className: "quill-textarea__resizer" }),
      (d || x) && /* @__PURE__ */ e.jsxs(
        "div",
        {
          className: a(
            "message__container",
            `message__container--${i}`
          ),
          children: [
            /* @__PURE__ */ e.jsx(
              f,
              {
                className: a(
                  `message--${s}`,
                  r && "message--disabled"
                ),
                children: d
              }
            ),
            x && u && /* @__PURE__ */ e.jsxs(
              f,
              {
                className: a(
                  `message--${s}`,
                  r && "message--disabled"
                ),
                children: [
                  _.toString().length,
                  "/",
                  u
                ]
              }
            )
          ]
        }
      )
    ] });
  }
);
export {
  D as TextArea,
  D as default
};
