import { default as React, ComponentProps } from 'react';
import { InputProps } from '../../base';
import { default as ActionSheet } from '../../../ActionSheet';
import { TimeWheelPickerContainer, TimeWheelPickerContainerProps, TTypeOfWheel, WheelPickerContainer as WheelPicker, WheelPickerContainerProps } from '../../../Atom';
type TContainer<T> = T extends "Generic" ? WheelPickerContainerProps : TimeWheelPickerContainerProps;
interface BaseWheelPickerContent extends InputProps {
    onClickDropdown?: (e: React.MouseEvent<HTMLDivElement>) => void;
    containerClassName?: string;
    actionSheetFooter?: ComponentProps<typeof ActionSheet.Footer>;
    values?: (string | number)[];
    wheelType: TTypeOfWheel;
    onValueChange?: (values: (string | number)[]) => void;
    is12Hour?: boolean;
    selectedTime?: string;
    startTimeIn24Format?: string;
    containerHeight?: string;
    locale?: string;
    hoursInterval?: number;
    minutesInterval?: number;
    container?: typeof TimeWheelPickerContainer | typeof WheelPicker;
}
export type TWheelPickerContent<T extends TTypeOfWheel> = BaseWheelPickerContent & TContainer<T>;
export declare const WheelPickerContent: React.ForwardRefExoticComponent<Omit<TWheelPickerContent<"Generic"> | TWheelPickerContent<"Time">, "inputValues" | "setInputValues"> & React.RefAttributes<HTMLDivElement>>;
export {};
