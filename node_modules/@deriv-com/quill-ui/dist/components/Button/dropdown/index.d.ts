import { ComponentProps } from 'react';
import { ButtonProps } from '../types';
import { TRegularSizes, TRegularSizesWithExtraLarge } from '../../../types.ts';
import { TCustomDropdown } from '../../Input';
export interface TSingleSelectItem extends Omit<ComponentProps<"button">, "ref" | "id"> {
    id: number | string;
    label: string | React.ReactNode;
    selected?: boolean;
    leftIcon?: React.ReactNode;
    rightIcon?: React.ReactNode;
}
export interface ButtonDropdownProps extends ButtonProps {
    options: TSingleSelectItem[];
    size?: TRegularSizesWithExtraLarge;
    checkbox?: boolean;
    closeContentOnClick?: boolean;
    contentTitle?: string | React.ReactNode;
    contentHeight?: TRegularSizes;
    contentClass?: string;
    onSelectionChange?: (item: TSingleSelectItem[]) => void;
    onItemClick?: (id: TSingleSelectItem["id"]) => void;
    onOpen?: () => void;
    onClose?: () => void;
    contentAlign?: TCustomDropdown["contentAlign"];
    actionSheetFooter?: TCustomDropdown["actionSheetFooter"];
    contentCenter?: boolean;
}
export declare const DropdownButton: import('react').ForwardRefExoticComponent<ButtonDropdownProps & import('react').RefAttributes<HTMLButtonElement>>;
export default DropdownButton;
