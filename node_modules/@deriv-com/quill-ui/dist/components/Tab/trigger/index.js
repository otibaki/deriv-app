import { j as s } from "../../../jsx-runtime-DmTjM30f.js";
import { useRef as $, useState as v, useContext as A, useEffect as C } from "react";
import { TabContext as z } from "../container/index.js";
import { c as N } from "../../../clsx-OuTLNxxd.js";
import "../../Typography/base.js";
import "../../Typography/heading/index.js";
import { Text as R } from "../../Typography/text/index.js";
import '../../../assets/index15.css';const S = ({
  children: b,
  icon: c,
  className: _,
  ...g
}) => {
  const t = $(null), [l, u] = v(!1), {
    activeTab: n,
    handleToggle: a,
    clickedTabRef: m,
    onTabClick: o,
    id: f,
    size: i,
    iconPosition: d,
    contentStyle: x
  } = A(z), T = (e) => {
    if (m && (m.current = t.current), e.currentTarget.parentElement) {
      const r = Array.from(
        e.currentTarget.parentElement.children
      ).indexOf(e.currentTarget);
      if (r === n) return;
      a == null || a(r), o == null || o(r);
    }
  };
  C(() => {
    var e, r;
    if (t.current && ((e = t.current) != null && e.parentElement)) {
      const p = Array.from((r = t.current.parentElement) == null ? void 0 : r.children), y = p.indexOf(t.current);
      n === y ? (t.current.setAttribute("aria-selected", "true"), u(!0)) : (t.current.setAttribute("aria-selected", "false"), u(!1)), p.forEach((E, j) => {
        E.id = `${f}-trigger-${j}`;
      });
    }
  }, [n, f, l]);
  const h = l ? "quill-typography__color--prominent" : "quill-typography__color--default";
  return /* @__PURE__ */ s.jsxs(
    "button",
    {
      onClick: T,
      role: "tab",
      ref: t,
      ...g,
      className: N(
        "tab-menu",
        x === "fill" ? `tab-menu__variants__fill-size-${i} ` : `tab-menu__variants__hug-size-${i}`,
        `tab-trigger__icon-position--${d}`,
        _
      ),
      children: [
        c && i && d && /* @__PURE__ */ s.jsx("div", { "data-testid": "dt-tab-trigger-icon", className: "tab__icon", children: c }),
        /* @__PURE__ */ s.jsx(R, { size: i, color: h, children: b })
      ]
    }
  );
};
S.displayName = "TabTrigger";
export {
  S as TabTrigger
};
