import { default as React, ChangeEvent } from 'react';
import { TMediumSizes, TLeftOrRight } from '../../../../types.ts';
interface IItem extends React.HTMLAttributes<HTMLDivElement> {
    disabled?: boolean;
    hasError?: boolean;
    hidden?: boolean;
    id?: string;
    label: React.ReactNode;
    value: string | number;
    radioButtonPosition?: TLeftOrRight;
}
interface IItemWrapper {
    shouldWrapItems?: boolean;
}
interface IRadioGroup extends IItemWrapper {
    className?: string;
    name?: string;
    onToggle?: (e: ChangeEvent<HTMLInputElement>) => void;
    required?: boolean;
    selected?: string | number;
    size?: TMediumSizes;
}
export declare const RadioGroup: {
    ({ children, className, name, onToggle, required, selected, shouldWrapItems, size, }: IRadioGroup & React.PropsWithChildren): React.JSX.Element;
    Item: React.FunctionComponent<IItem>;
};
export default RadioGroup;
