import { j as a } from "../../../../jsx-runtime-DmTjM30f.js";
import { useState as p, useEffect as E, createElement as j } from "react";
import { c as y } from "../../../../clsx-OuTLNxxd.js";
import { e as k } from "../../../../snackbar-controller-ChcV5SXl.js";
const N = ({
  className: t,
  checkboxGroupConfig: f
}) => {
  const [l, s] = p(f);
  E(() => {
    const e = structuredClone(l);
    g(e), s(e);
  }, [f]);
  const i = (e) => {
    if (!e.children) return;
    const n = e.children.reduce(
      (o, c) => o + (c.checked ? 1 : 0),
      0
    );
    n === e.children.length ? (e.checked = !0, e.indeterminate = !1) : n === 0 ? (e.checked = !1, e.indeterminate = !1) : e.indeterminate = !0;
  }, g = (e) => {
    e.forEach((n) => {
      n != null && n.children && (i(n), n.disabled && n.children.forEach(
        (o) => o.disabled = !0
      ));
    });
  }, u = (e, n, o) => {
    const c = structuredClone(l);
    c.forEach((r) => {
      var h;
      r.id === n && ((h = r.children) == null || h.forEach((d) => {
        var C;
        d.id === o && (d.checked = !d.checked, (C = d.onChange) == null || C.call(d, e));
      }), i(r));
    }), s(c);
  }, x = (e, n) => {
    const o = structuredClone(l);
    o.forEach((c) => {
      var r, h;
      c.id === n && (c.indeterminate ? (c.checked = !1, c.indeterminate = !1) : c.checked = !c.checked, (r = c.children) == null || r.forEach(
        (d) => d.checked = !!c.checked
      ), (h = c.onChange) == null || h.call(c, e));
    }), s(o);
  };
  return /* @__PURE__ */ a.jsx("div", { className: y("quill-checkbox-group", t), children: l.map(({ id: e, children: n, ...o }) => /* @__PURE__ */ a.jsxs("div", { children: [
    /* @__PURE__ */ a.jsx(
      k,
      {
        ...o,
        id: e + "",
        onChange: (c) => x(c, e)
      }
    ),
    n && /* @__PURE__ */ a.jsx("div", { className: "quill-checkbox-group__children-wrapper", children: n.map(({ id: c, ...r }) => /* @__PURE__ */ j(
      k,
      {
        ...r,
        key: c,
        id: c + "",
        onChange: (h) => u(h, e, c)
      }
    )) })
  ] }, e)) });
};
export {
  N as CheckboxGroup
};
