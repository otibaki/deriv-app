import { j as h } from "../../../../jsx-runtime-DmTjM30f.js";
import { useRef as k, useState as d, useMemo as z, useEffect as f } from "react";
import { c as g } from "../../../../clsx-OuTLNxxd.js";
import { D as R } from "../../../../index-C1BOoRZp.js";
import '../../../../assets/wheel-picker-base.css';import '../../../../assets/divider.css';/* empty css                           */
import "../../dropdown/title/index.js";
import "../../dropdown/item-container/index.js";
/* empty css                                     */
const C = ({
  data: s,
  selectedValue: a,
  setSelectedValue: b,
  handleKeyDown: I,
  isFocused: v,
  dropDownItemClassName: D,
  containerClassName: M,
  listClassName: T,
  position: j,
  containerHeight: q = "100%",
  ...u
}) => {
  const i = k([]), [n, E] = d([]), [y, x] = d(a), m = z(
    () => s.reduce(
      (e, c, t) => e.set(c.value, t),
      /* @__PURE__ */ new Map()
    ),
    [s]
  ), [p, N] = d(
    m.get(a) ?? 0
  ), r = k(null), w = (e) => {
    var l;
    if (!e.target) return;
    const c = Math.max(
      e.target.scrollTop,
      0
    ), t = Math.min(
      Math.max(Math.floor(c / 48), 0),
      n.length - 1
    );
    (l = i.current[t]) == null || l.focus({
      preventScroll: !0
    }), b(n[t].value), x(n[t].value);
  };
  return f(() => {
    var t, l;
    let e = null;
    const c = new ResizeObserver(() => {
      e && clearTimeout(e), e = setTimeout(() => {
        const o = Number(p);
        if (!(r != null && r.current) || o < 0 || o >= n.length) return;
        const _ = r.current.clientHeight;
        r.current.style.paddingTop = `${_ * 0.5}px`, r.current.style.paddingBottom = `${_ * 0.5}px`, i.current[o] && i.current[o].scrollIntoView({
          block: "center"
        });
      }, 0);
    });
    if (r.current)
      return b((t = n[p]) == null ? void 0 : t.value), x((l = n[p]) == null ? void 0 : l.value), c.observe(r.current), r.current.addEventListener("scroll", w), () => {
        var o;
        c.disconnect(), (o = r.current) == null || o.removeEventListener(
          "scroll",
          w
        );
      };
  }, [n]), f(() => {
    E(s), N(m.get(a) ?? 0);
  }, [s]), f(() => {
    var e;
    v && ((e = i.current[m.get(a)]) == null || e.focus());
  }, [v]), n.length > 0 ? /* @__PURE__ */ h.jsx(
    "div",
    {
      className: g(
        "quill-wheel-picker__container",
        (u == null ? void 0 : u.disabled) && "quill-wheel-picker__container-disabled",
        M
      ),
      style: { height: q },
      children: /* @__PURE__ */ h.jsx(
        "ul",
        {
          className: g(
            "quill-wheel-picker__data-items",
            `quill-wheel-picker__data-items-${j}`,
            T
          ),
          role: "listbox",
          ref: r,
          ...u,
          children: n.map(({ value: e, label: c }, t) => /* @__PURE__ */ h.jsx(
            R,
            {
              className: g(
                "quill-wheel-picker__data-item",
                D
              ),
              tabIndex: 0,
              label: c ?? e,
              role: "option",
              textAlignment: "center",
              ref: (l) => i.current[t] = l,
              onKeyDown: I,
              onClick: () => {
                var l, o;
                (l = i.current[t]) == null || l.scrollIntoView({
                  block: "center",
                  behavior: "smooth",
                  inline: "nearest"
                }), (o = i.current[t]) == null || o.focus();
              },
              disabled: n[t].value !== y,
              children: e
            },
            e
          ))
        }
      )
    }
  ) : null;
};
export {
  C as WheelPicker,
  C as default
};
