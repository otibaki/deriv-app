import { isValidElement as f } from "react";
const p = {
  ARROW_LEFT: "ArrowLeft",
  ARROW_RIGHT: "ArrowRight",
  ARROW_DOWN: "ArrowDown",
  ENTER: "Enter",
  SPACE: " ",
  TAB: "Tab",
  ESCAPE: "Escape"
}, s = (t) => {
  let n = "";
  return typeof t == "string" ? n = t : typeof t == "number" ? n = t.toString() : t instanceof Array ? t.forEach((r) => {
    n += s(r);
  }) : f(t) && (n += s(t.props.children)), n;
}, u = (t, n) => {
  const r = t.toString(), o = r.slice(
    0,
    r.indexOf(".") + n + 1
  );
  return Number(o);
}, E = (t, n, r = !0) => {
  if (!t) return t;
  const e = t.toString().split(".");
  if (e.length < 2 || e[1].length < n) return t;
  const i = Number(t);
  return isNaN(i) ? t : r ? i.toFixed(n) : u(i, n);
};
export {
  p as KEY,
  E as getFormatValue,
  s as reactNodeToString
};
