import { j as g } from "../../jsx-runtime-DmTjM30f.js";
import { useState as u, useEffect as n } from "react";
import { u as v } from "../../index-EY1gwl5O.js";
import { ThemeContext as b } from "./themeContext.js";
const j = ({
  children: l,
  theme: s,
  persistent: h
}) => {
  const [m, c] = u(
    s
  ), [o, f] = u(s ?? "light"), T = ["light", "dark"], e = typeof document < "u" ? document.documentElement : null, a = v("(prefers-color-scheme: dark)"), p = (t) => {
    c(t || (o === "dark" ? "light" : "dark"));
  }, i = () => {
    const t = m || (a ? "dark" : "light"), r = t === "dark" ? "light" : "dark";
    e == null || e.classList.add(t), e == null || e.classList.remove(r), f(t), c(t);
  };
  return n(() => {
    i();
  }, [m, a]), n(() => {
    c(s);
  }, [s]), n(() => {
    if (h) {
      const t = new MutationObserver((r) => {
        r.forEach((d) => {
          d.type === "attributes" && d.attributeName === "class" && (T.some(
            (k) => e == null ? void 0 : e.classList.contains(k)
          ) || i());
        });
      });
      return e && t.observe(e, { attributes: !0 }), () => {
        t.disconnect();
      };
    }
  }, []), /* @__PURE__ */ g.jsx(b.Provider, { value: { theme: o, toggleTheme: p }, children: l });
};
export {
  j as ThemeProvider,
  j as default
};
