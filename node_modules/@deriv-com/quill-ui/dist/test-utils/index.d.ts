import { ReactElement } from 'react';
import { queries, Queries, RenderHookOptions, RenderHookResult, RenderOptions } from '@testing-library/react';
declare const customRender: (ui: ReactElement, options?: Omit<RenderOptions, "wrapper">) => import('@testing-library/react').RenderResult<typeof queries, HTMLElement, HTMLElement>;
declare function customRenderHook<Result, Props, Q extends Queries = typeof queries, Container extends Element | DocumentFragment = HTMLElement, BaseElement extends Element | DocumentFragment = Container>(render: (initialProps: Props) => Result, options?: Omit<RenderHookOptions<Props, Q, Container, BaseElement>, "wrapper">): RenderHookResult<Result, Props>;
export * from '@testing-library/react';
export { customRender as render };
export { customRenderHook as renderHook };
