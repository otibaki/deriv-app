{"version":3,"file":"useHandlePrevValues.js","sourceRoot":"","sources":["../src/useHandlePrevValues.ts"],"names":[],"mappings":";;;AAAA,+BAA4C;AAGrC,IAAM,mBAAmB,GAAG,UAAC,KAA4B;IAC9D,IAAM,aAAa,GAAG,IAAA,cAAM,EAAC,KAAK,CAAC,SAAS,CAAC,CAAC;IAC9C,IAAM,cAAc,GAAG,IAAA,cAAM,EAAC,KAAK,CAAC,UAAU,CAAC,CAAC;IAChD,IAAM,iBAAiB,GAAG,IAAA,cAAM,EAAC,KAAK,CAAC,aAAa,CAAC,CAAC;IACtD,IAAM,aAAa,GAAG,IAAA,cAAM,EAAC,KAAK,CAAC,SAAS,CAAC,CAAC;IAC9C,IAAM,mBAAmB,GAAG,IAAA,cAAM,EAAC,KAAK,CAAC,eAAe,CAAC,CAAC;IAC1D,IAAM,iBAAiB,GAAG,IAAA,cAAM,EAAC,KAAK,CAAC,aAAa,CAAC,CAAC;IAEtD,IAAM,gBAAgB,GAAG,IAAA,mBAAW,EAAC;QACnC,aAAa,CAAC,OAAO,GAAG,KAAK,CAAC,SAAS,CAAC;QACxC,cAAc,CAAC,OAAO,GAAG,KAAK,CAAC,UAAU,CAAC;QAC1C,iBAAiB,CAAC,OAAO,GAAG,KAAK,CAAC,aAAa,CAAC;QAChD,aAAa,CAAC,OAAO,GAAG,KAAK,CAAC,SAAS,CAAC;QACxC,mBAAmB,CAAC,OAAO,GAAG,KAAK,CAAC,eAAe,CAAC;QACpD,iBAAiB,CAAC,OAAO,GAAG,KAAK,CAAC,aAAa,CAAC;IAClD,CAAC,EAAE;QACD,KAAK,CAAC,eAAe;QACrB,KAAK,CAAC,aAAa;QACnB,KAAK,CAAC,SAAS;QACf,KAAK,CAAC,UAAU;QAChB,KAAK,CAAC,SAAS;QACf,KAAK,CAAC,aAAa;KACpB,CAAC,CAAC;IAEH,OAAO;QACL,IAAI,EAAE;YACJ,SAAS,EAAE,aAAa,CAAC,OAAO;YAChC,UAAU,EAAE,cAAc,CAAC,OAAO;YAClC,aAAa,EAAE,iBAAiB,CAAC,OAAO;YACxC,SAAS,EAAE,aAAa,CAAC,OAAO;YAChC,eAAe,EAAE,mBAAmB,CAAC,OAAO;YAC5C,aAAa,EAAE,iBAAiB,CAAC,OAAO;SACzC;QACD,gBAAgB,kBAAA;KACjB,CAAC;AACJ,CAAC,CAAC;AAnCW,QAAA,mBAAmB,uBAmC9B","sourcesContent":["import { useCallback, useRef } from 'react';\nimport { PopoverProps } from '.';\n\nexport const useHandlePrevValues = (props: Partial<PopoverProps>) => {\n  const prevPositions = useRef(props.positions);\n  const prevReposition = useRef(props.reposition);\n  const prevTransformMode = useRef(props.transformMode);\n  const prevTransform = useRef(props.transform);\n  const prevBoundaryElement = useRef(props.boundaryElement);\n  const prevBoundaryInset = useRef(props.boundaryInset);\n\n  const updatePrevValues = useCallback(() => {\n    prevPositions.current = props.positions;\n    prevReposition.current = props.reposition;\n    prevTransformMode.current = props.transformMode;\n    prevTransform.current = props.transform;\n    prevBoundaryElement.current = props.boundaryElement;\n    prevBoundaryInset.current = props.boundaryInset;\n  }, [\n    props.boundaryElement,\n    props.boundaryInset,\n    props.positions,\n    props.reposition,\n    props.transform,\n    props.transformMode,\n  ]);\n\n  return {\n    prev: {\n      positions: prevPositions.current,\n      reposition: prevReposition.current,\n      transformMode: prevTransformMode.current,\n      transform: prevTransform.current,\n      boundaryElement: prevBoundaryElement.current,\n      boundaryInset: prevBoundaryInset.current,\n    },\n    updatePrevValues,\n  };\n};\n"]}