var o = Object.defineProperty;
var c = (n, t, e) => t in n ? o(n, t, { enumerable: !0, configurable: !0, writable: !0, value: e }) : n[t] = e;
var s = (n, t, e) => (c(n, typeof t != "symbol" ? t + "" : t, e), e);
class h {
  constructor(t) {
    s(this, "type");
    s(this, "cdnUrl");
    this.type = "backend", this.cdnUrl = t;
  }
  read(t, e, a) {
    fetch(this.cdnUrl + "/translations/" + t.toLowerCase() + ".json").then((r) => {
      if (!r.ok)
        throw new Error("Failed to fetch translations");
      return r.json();
    }).then((r) => {
      a(null, r);
    }).catch(() => {
      a(null, {});
    });
  }
}
export {
  h as default
};
