{"version":3,"file":"feature-repository.js","names":["cacheSettings","staleTTL","maxAge","cacheKey","backgroundSync","maxEntries","disableIdleStreams","idleStreamInterval","disableCache","polyfills","getPolyfills","helpers","fetchFeaturesCall","host","clientKey","headers","fetch","fetchRemoteEvalCall","payload","options","method","body","JSON","stringify","eventSourceCall","EventSource","startIdleListener","idleTimeout","isBrowser","window","document","onVisibilityChange","visibilityState","clearTimeout","onVisible","setTimeout","onHidden","addEventListener","removeEventListener","stopIdleListener","globalThis","localStorage","e","subscribedInstances","Map","cacheInitialized","cache","activeFetches","streams","supportsSSE","Set","setPolyfills","overrides","Object","assign","configureCache","clearAutoRefresh","clearCache","clear","updatePersistentCache","refreshFeatures","instance","timeout","skipCache","allowStale","fetchFeaturesWithCache","subscribe","key","getKey","subs","get","add","set","unsubscribe","forEach","s","delete","channel","state","disableChannel","enableChannel","setItem","Array","from","entries","getCacheKey","now","Date","minStaleAt","getTime","initializeCache","existing","undefined","staleAt","sse","fetchFeatures","startAutoRefresh","data","success","source","res","promiseTimeout","error","Error","apiHost","getApiInfo","baseKey","isRemoteEval","attributes","getAttributes","cacheKeyAttributes","getCacheKeyAttributes","keys","ca","fv","getForcedVariations","url","getUrl","value","getItem","parsed","parse","isArray","cleanupCache","cleanupFn","entriesWithTimestamps","map","sort","a","b","entriesToRemoveCount","Math","min","max","size","i","onNewFeatureData","version","dateUpdated","has","instances","refreshInstance","setPayload","getPayload","apiRequestHeaders","getApiHosts","getClientKey","remoteEval","promise","fetcher","forcedVariations","forcedFeatures","getForcedFeatures","then","ok","status","json","catch","process","env","NODE_ENV","log","message","forceSSE","streamingHost","streamingHostRequestHeaders","src","cb","event","type","errors","onSSEError","readyState","delay","pow","random","includes","onopen","onerror","close","destroyChannel","startStreaming","streaming"],"sources":["../../src/feature-repository.ts"],"sourcesContent":["import {\n  Attributes,\n  CacheSettings,\n  FeatureApiResponse,\n  FetchResponse,\n  Helpers,\n  Polyfills,\n} from \"./types/growthbook\";\nimport { getPolyfills, promiseTimeout } from \"./util\";\nimport type {\n  GrowthBook,\n  InitOptions,\n  InitSyncOptions,\n  GrowthBookClient,\n} from \".\";\n\ntype CacheEntry = {\n  data: FeatureApiResponse;\n  sse?: boolean;\n  version: string;\n  staleAt: Date;\n};\ntype ScopedChannel = {\n  src: EventSource | null;\n  cb: (event: MessageEvent<string>) => void;\n  host: string;\n  clientKey: string;\n  headers?: Record<string, string>;\n  errors: number;\n  state: \"active\" | \"idle\" | \"disabled\";\n};\n\n// Config settings\nconst cacheSettings: CacheSettings = {\n  // Consider a fetch stale after 1 minute\n  staleTTL: 1000 * 60,\n  // Max time to keep a fetch in cache (4 hours default)\n  maxAge: 1000 * 60 * 60 * 4,\n  cacheKey: \"gbFeaturesCache\",\n  backgroundSync: true,\n  maxEntries: 10,\n  disableIdleStreams: false,\n  idleStreamInterval: 20000,\n  disableCache: false,\n};\n\nconst polyfills = getPolyfills();\n\nexport const helpers: Helpers = {\n  fetchFeaturesCall: ({ host, clientKey, headers }) => {\n    return (polyfills.fetch as typeof globalThis.fetch)(\n      `${host}/api/features/${clientKey}`,\n      { headers }\n    );\n  },\n  fetchRemoteEvalCall: ({ host, clientKey, payload, headers }) => {\n    const options = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\", ...headers },\n      body: JSON.stringify(payload),\n    };\n    return (polyfills.fetch as typeof globalThis.fetch)(\n      `${host}/api/eval/${clientKey}`,\n      options\n    );\n  },\n  eventSourceCall: ({ host, clientKey, headers }) => {\n    if (headers) {\n      return new polyfills.EventSource(`${host}/sub/${clientKey}`, {\n        headers,\n      });\n    }\n    return new polyfills.EventSource(`${host}/sub/${clientKey}`);\n  },\n  startIdleListener: () => {\n    let idleTimeout: number | undefined;\n    const isBrowser =\n      typeof window !== \"undefined\" && typeof document !== \"undefined\";\n    if (!isBrowser) return;\n    const onVisibilityChange = () => {\n      if (document.visibilityState === \"visible\") {\n        window.clearTimeout(idleTimeout);\n        onVisible();\n      } else if (document.visibilityState === \"hidden\") {\n        idleTimeout = window.setTimeout(\n          onHidden,\n          cacheSettings.idleStreamInterval\n        );\n      }\n    };\n    document.addEventListener(\"visibilitychange\", onVisibilityChange);\n    return () =>\n      document.removeEventListener(\"visibilitychange\", onVisibilityChange);\n  },\n  stopIdleListener: () => {\n    // No-op, replaced by startIdleListener\n  },\n};\n\ntry {\n  if (globalThis.localStorage) {\n    polyfills.localStorage = globalThis.localStorage;\n  }\n} catch (e) {\n  // Ignore localStorage errors\n}\n\n// Global state\nconst subscribedInstances: Map<\n  string,\n  Set<GrowthBook | GrowthBookClient>\n> = new Map();\nlet cacheInitialized = false;\nconst cache: Map<string, CacheEntry> = new Map();\nconst activeFetches: Map<string, Promise<FetchResponse>> = new Map();\nconst streams: Map<string, ScopedChannel> = new Map();\nconst supportsSSE: Set<string> = new Set();\n\n// Public functions\nexport function setPolyfills(overrides: Partial<Polyfills>): void {\n  Object.assign(polyfills, overrides);\n}\nexport function configureCache(overrides: Partial<CacheSettings>): void {\n  Object.assign(cacheSettings, overrides);\n  if (!cacheSettings.backgroundSync) {\n    clearAutoRefresh();\n  }\n}\n\nexport async function clearCache(): Promise<void> {\n  cache.clear();\n  activeFetches.clear();\n  clearAutoRefresh();\n  cacheInitialized = false;\n  await updatePersistentCache();\n}\n\n// Get or fetch features and refresh the SDK instance\nexport async function refreshFeatures({\n  instance,\n  timeout,\n  skipCache,\n  allowStale,\n  backgroundSync,\n}: {\n  instance: GrowthBook | GrowthBookClient;\n  timeout?: number;\n  skipCache?: boolean;\n  allowStale?: boolean;\n  backgroundSync?: boolean;\n}): Promise<FetchResponse> {\n  if (!backgroundSync) {\n    cacheSettings.backgroundSync = false;\n  }\n\n  return fetchFeaturesWithCache({\n    instance,\n    allowStale,\n    timeout,\n    skipCache,\n  });\n}\n\n// Subscribe a GrowthBook instance to feature changes\nfunction subscribe(instance: GrowthBook | GrowthBookClient): void {\n  const key = getKey(instance);\n  const subs = subscribedInstances.get(key) || new Set();\n  subs.add(instance);\n  subscribedInstances.set(key, subs);\n}\nexport function unsubscribe(instance: GrowthBook | GrowthBookClient): void {\n  subscribedInstances.forEach((s) => s.delete(instance));\n}\n\nexport function onHidden() {\n  streams.forEach((channel) => {\n    if (!channel) return;\n    channel.state = \"idle\";\n    disableChannel(channel);\n  });\n}\n\nexport function onVisible() {\n  streams.forEach((channel) => {\n    if (!channel) return;\n    if (channel.state !== \"idle\") return;\n    enableChannel(channel);\n  });\n}\n\n// Private functions\n\nasync function updatePersistentCache() {\n  try {\n    if (!polyfills.localStorage) return;\n    await polyfills.localStorage.setItem(\n      cacheSettings.cacheKey,\n      JSON.stringify(Array.from(cache.entries()))\n    );\n  } catch (e) {\n    // Ignore localStorage errors\n  }\n}\n\n// SWR wrapper for fetching features. May indirectly or directly start SSE streaming.\nasync function fetchFeaturesWithCache({\n  instance,\n  allowStale,\n  timeout,\n  skipCache,\n}: {\n  instance: GrowthBook | GrowthBookClient;\n  allowStale?: boolean;\n  timeout?: number;\n  skipCache?: boolean;\n}): Promise<FetchResponse> {\n  const key = getKey(instance);\n  const cacheKey = getCacheKey(instance);\n  const now = new Date();\n\n  const minStaleAt = new Date(\n    now.getTime() - cacheSettings.maxAge + cacheSettings.staleTTL\n  );\n\n  await initializeCache();\n  const existing =\n    !cacheSettings.disableCache && !skipCache ? cache.get(cacheKey) : undefined;\n  if (\n    existing &&\n    (allowStale || existing.staleAt > now) &&\n    existing.staleAt > minStaleAt\n  ) {\n    // Restore from cache whether SSE is supported\n    if (existing.sse) supportsSSE.add(key);\n\n    // Reload features in the background if stale\n    if (existing.staleAt < now) {\n      fetchFeatures(instance);\n    }\n    // Otherwise, if we don't need to refresh now, start a background sync\n    else {\n      startAutoRefresh(instance);\n    }\n    return { data: existing.data, success: true, source: \"cache\" };\n  } else {\n    const res = await promiseTimeout(fetchFeatures(instance), timeout);\n    return (\n      res || {\n        data: null,\n        success: false,\n        source: \"timeout\",\n        error: new Error(\"Timeout\"),\n      }\n    );\n  }\n}\n\nfunction getKey(instance: GrowthBook | GrowthBookClient): string {\n  const [apiHost, clientKey] = instance.getApiInfo();\n  return `${apiHost}||${clientKey}`;\n}\n\nfunction getCacheKey(instance: GrowthBook | GrowthBookClient): string {\n  const baseKey = getKey(instance);\n  if (!(\"isRemoteEval\" in instance) || !instance.isRemoteEval()) return baseKey;\n\n  const attributes = instance.getAttributes();\n  const cacheKeyAttributes =\n    instance.getCacheKeyAttributes() || Object.keys(instance.getAttributes());\n  const ca: Attributes = {};\n  cacheKeyAttributes.forEach((key) => {\n    ca[key] = attributes[key];\n  });\n\n  const fv = instance.getForcedVariations();\n  const url = instance.getUrl();\n\n  return `${baseKey}||${JSON.stringify({\n    ca,\n    fv,\n    url,\n  })}`;\n}\n\n// Populate cache from localStorage (if available)\nasync function initializeCache(): Promise<void> {\n  if (cacheInitialized) return;\n  cacheInitialized = true;\n  try {\n    if (polyfills.localStorage) {\n      const value = await polyfills.localStorage.getItem(\n        cacheSettings.cacheKey\n      );\n      if (!cacheSettings.disableCache && value) {\n        const parsed: [string, CacheEntry][] = JSON.parse(value);\n        if (parsed && Array.isArray(parsed)) {\n          parsed.forEach(([key, data]) => {\n            cache.set(key, {\n              ...data,\n              staleAt: new Date(data.staleAt),\n            });\n          });\n        }\n        cleanupCache();\n      }\n    }\n  } catch (e) {\n    // Ignore localStorage errors\n  }\n  if (!cacheSettings.disableIdleStreams) {\n    const cleanupFn = helpers.startIdleListener();\n    if (cleanupFn) {\n      helpers.stopIdleListener = cleanupFn;\n    }\n  }\n}\n\n// Enforce the maxEntries limit\nfunction cleanupCache() {\n  const entriesWithTimestamps = Array.from(cache.entries())\n    .map(([key, value]) => ({\n      key,\n      staleAt: value.staleAt.getTime(),\n    }))\n    .sort((a, b) => a.staleAt - b.staleAt);\n\n  const entriesToRemoveCount = Math.min(\n    Math.max(0, cache.size - cacheSettings.maxEntries),\n    cache.size\n  );\n\n  for (let i = 0; i < entriesToRemoveCount; i++) {\n    cache.delete(entriesWithTimestamps[i].key);\n  }\n}\n\n// Called whenever new features are fetched from the API\nfunction onNewFeatureData(\n  key: string,\n  cacheKey: string,\n  data: FeatureApiResponse\n): void {\n  // If contents haven't changed, ignore the update, extend the stale TTL\n  const version = data.dateUpdated || \"\";\n  const staleAt = new Date(Date.now() + cacheSettings.staleTTL);\n  const existing = !cacheSettings.disableCache\n    ? cache.get(cacheKey)\n    : undefined;\n  if (existing && version && existing.version === version) {\n    existing.staleAt = staleAt;\n    updatePersistentCache();\n    return;\n  }\n\n  if (!cacheSettings.disableCache) {\n    // Update in-memory cache\n    cache.set(cacheKey, {\n      data,\n      version,\n      staleAt,\n      sse: supportsSSE.has(key),\n    });\n    cleanupCache();\n  }\n  // Update local storage (don't await this, just update asynchronously)\n  updatePersistentCache();\n\n  // Update features for all subscribed GrowthBook instances\n  const instances = subscribedInstances.get(key);\n  instances && instances.forEach((instance) => refreshInstance(instance, data));\n}\n\nasync function refreshInstance(\n  instance: GrowthBook | GrowthBookClient,\n  data: FeatureApiResponse | null\n): Promise<void> {\n  await instance.setPayload(data || instance.getPayload());\n}\n\n// Fetch the features payload from helper function or from in-mem injected payload\nasync function fetchFeatures(\n  instance: GrowthBook | GrowthBookClient\n): Promise<FetchResponse> {\n  const { apiHost, apiRequestHeaders } = instance.getApiHosts();\n  const clientKey = instance.getClientKey();\n  const remoteEval = \"isRemoteEval\" in instance && instance.isRemoteEval();\n  const key = getKey(instance);\n  const cacheKey = getCacheKey(instance);\n\n  let promise = activeFetches.get(cacheKey);\n  if (!promise) {\n    const fetcher: Promise<Response> = remoteEval\n      ? helpers.fetchRemoteEvalCall({\n          host: apiHost,\n          clientKey,\n          payload: {\n            attributes: instance.getAttributes(),\n            forcedVariations: instance.getForcedVariations(),\n            forcedFeatures: Array.from(instance.getForcedFeatures().entries()),\n            url: instance.getUrl(),\n          },\n          headers: apiRequestHeaders,\n        })\n      : helpers.fetchFeaturesCall({\n          host: apiHost,\n          clientKey,\n          headers: apiRequestHeaders,\n        });\n\n    // TODO: auto-retry if status code indicates a temporary error\n    promise = fetcher\n      .then((res) => {\n        if (!res.ok) {\n          throw new Error(`HTTP error: ${res.status}`);\n        }\n        if (res.headers.get(\"x-sse-support\") === \"enabled\") {\n          supportsSSE.add(key);\n        }\n        return res.json();\n      })\n      .then((data: FeatureApiResponse) => {\n        onNewFeatureData(key, cacheKey, data);\n        startAutoRefresh(instance);\n        activeFetches.delete(cacheKey);\n        return { data, success: true, source: \"network\" as const };\n      })\n      .catch((e) => {\n        process.env.NODE_ENV !== \"production\" &&\n          instance.log(\"Error fetching features\", {\n            apiHost,\n            clientKey,\n            error: e ? e.message : null,\n          });\n        activeFetches.delete(cacheKey);\n\n        return {\n          data: null,\n          source: \"error\" as const,\n          success: false,\n          error: e,\n        };\n      });\n    activeFetches.set(cacheKey, promise);\n  }\n  return promise;\n}\n\n// Start SSE streaming, listens to feature payload changes and triggers a refresh or re-fetch\nfunction startAutoRefresh(\n  instance: GrowthBook | GrowthBookClient,\n  forceSSE: boolean = false\n): void {\n  const key = getKey(instance);\n  const cacheKey = getCacheKey(instance);\n  const { streamingHost, streamingHostRequestHeaders } = instance.getApiHosts();\n  const clientKey = instance.getClientKey();\n\n  if (forceSSE) {\n    supportsSSE.add(key);\n  }\n\n  if (\n    cacheSettings.backgroundSync &&\n    supportsSSE.has(key) &&\n    polyfills.EventSource\n  ) {\n    if (streams.has(key)) return;\n    const channel: ScopedChannel = {\n      src: null,\n      host: streamingHost,\n      clientKey,\n      headers: streamingHostRequestHeaders,\n      cb: (event: MessageEvent<string>) => {\n        try {\n          if (event.type === \"features-updated\") {\n            const instances = subscribedInstances.get(key);\n            instances &&\n              instances.forEach((instance) => {\n                fetchFeatures(instance);\n              });\n          } else if (event.type === \"features\") {\n            const json: FeatureApiResponse = JSON.parse(event.data);\n            onNewFeatureData(key, cacheKey, json);\n          }\n          // Reset error count on success\n          channel.errors = 0;\n        } catch (e) {\n          process.env.NODE_ENV !== \"production\" &&\n            instance.log(\"SSE Error\", {\n              streamingHost,\n              clientKey,\n              error: e ? (e as Error).message : null,\n            });\n          onSSEError(channel);\n        }\n      },\n      errors: 0,\n      state: \"active\",\n    };\n    streams.set(key, channel);\n    enableChannel(channel);\n  }\n}\n\nfunction onSSEError(channel: ScopedChannel) {\n  if (channel.state === \"idle\") return;\n  channel.errors++;\n  if (channel.errors > 3 || (channel.src && channel.src.readyState === 2)) {\n    // exponential backoff after 4 errors, with jitter\n    const delay =\n      Math.pow(3, channel.errors - 3) * (1000 + Math.random() * 1000);\n    disableChannel(channel);\n    setTimeout(() => {\n      if ([\"idle\", \"active\"].includes(channel.state)) return;\n      enableChannel(channel);\n    }, Math.min(delay, 300000)); // 5 minutes max\n  }\n}\n\nfunction disableChannel(channel: ScopedChannel) {\n  if (!channel.src) return;\n  channel.src.onopen = null;\n  channel.src.onerror = null;\n  channel.src.close();\n  channel.src = null;\n  if (channel.state === \"active\") {\n    channel.state = \"disabled\";\n  }\n}\n\nfunction enableChannel(channel: ScopedChannel) {\n  channel.src = helpers.eventSourceCall({\n    host: channel.host,\n    clientKey: channel.clientKey,\n    headers: channel.headers,\n  }) as EventSource;\n  channel.state = \"active\";\n  channel.src.addEventListener(\"features\", channel.cb);\n  channel.src.addEventListener(\"features-updated\", channel.cb);\n  channel.src.onerror = () => onSSEError(channel);\n  channel.src.onopen = () => {\n    channel.errors = 0;\n  };\n}\n\nfunction destroyChannel(channel: ScopedChannel, key: string) {\n  disableChannel(channel);\n  streams.delete(key);\n}\n\nfunction clearAutoRefresh() {\n  // Clear list of which keys are auto-updated\n  supportsSSE.clear();\n\n  // Stop listening for any SSE events\n  streams.forEach(destroyChannel);\n\n  // Remove all references to GrowthBook instances\n  subscribedInstances.clear();\n\n  // Run the idle stream cleanup function\n  helpers.stopIdleListener();\n}\n\nexport function startStreaming(\n  instance: GrowthBook | GrowthBookClient,\n  options: InitOptions | InitSyncOptions\n) {\n  if (options.streaming) {\n    if (!instance.getClientKey()) {\n      throw new Error(\"Must specify clientKey to enable streaming\");\n    }\n    if (options.payload) {\n      startAutoRefresh(instance, true);\n    }\n    subscribe(instance);\n  }\n}\n"],"mappings":"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"}