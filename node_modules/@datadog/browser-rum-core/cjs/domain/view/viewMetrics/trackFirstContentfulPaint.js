"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FCP_MAXIMUM_DELAY = void 0;
exports.trackFirstContentfulPaint = trackFirstContentfulPaint;
var browser_core_1 = require("@datadog/browser-core");
var performanceObservable_1 = require("../../../browser/performanceObservable");
// Discard FCP timings above a certain delay to avoid incorrect data
// It happens in some cases like sleep mode or some browser implementations
exports.FCP_MAXIMUM_DELAY = 10 * browser_core_1.ONE_MINUTE;
function trackFirstContentfulPaint(configuration, firstHidden, callback) {
    var performanceSubscription = (0, performanceObservable_1.createPerformanceObservable)(configuration, {
        type: performanceObservable_1.RumPerformanceEntryType.PAINT,
        buffered: true,
    }).subscribe(function (entries) {
        var fcpEntry = (0, browser_core_1.find)(entries, function (entry) {
            return entry.name === 'first-contentful-paint' &&
                entry.startTime < firstHidden.timeStamp &&
                entry.startTime < exports.FCP_MAXIMUM_DELAY;
        });
        if (fcpEntry) {
            callback(fcpEntry.startTime);
        }
    });
    return {
        stop: performanceSubscription.unsubscribe,
    };
}
//# sourceMappingURL=trackFirstContentfulPaint.js.map