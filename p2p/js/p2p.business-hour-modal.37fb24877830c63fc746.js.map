{"version":3,"file":"p2p/js/p2p.business-hour-modal.37fb24877830c63fc746.js","mappings":"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A,EAAAA,IAAS,YAAaC,OAAOD,EAAAA,EAAAA,IAAS,aAC9C,CAAED,MAAMC,EAAAA,EAAAA,IAAS,YAAaC,OAAOD,EAAAA,EAAAA,IAAS,aAC9C,CAAED,MAAMC,EAAAA,EAAAA,IAAS,YAAaC,OAAOD,EAAAA,EAAAA,IAAS,aAC9C,CAAED,MAAMC,EAAAA,EAAAA,IAAS,YAAaC,OAAOD,EAAAA,EAAAA,IAAS,aAC9C,CAAED,MAAMC,EAAAA,EAAAA,IAAS,YAAaC,OAAOD,EAAAA,EAAAA,IAAS,aAC9C,CAAED,MAAMC,EAAAA,EAAAA,IAAS,YAAaC,OAAOD,EAAAA,EAAAA,IAAS,aAC9C,CAAED,MAAMC,EAAAA,EAAAA,IAAS,YAAaC,OAAOD,EAAAA,EAAAA,IAAS,aAC9C,CAAED,MAAMC,EAAAA,EAAAA,IAAS,YAAaC,OAAOD,EAAAA,EAAAA,IAAS,aAC9C,CAAED,MAAMC,EAAAA,EAAAA,IAAS,YAAaC,OAAOD,EAAAA,EAAAA,IAAS,aAC9C,CAAED,MAAMC,EAAAA,EAAAA,IAAS,YAAaC,OAAOD,EAAAA,EAAAA,IAAS,aAC9C,CAAED,MAAMC,EAAAA,EAAAA,IAAS,YAAaC,OAAOD,EAAAA,EAAAA,IAAS,aAC9C,CAAED,MAAMC,EAAAA,EAAAA,IAAS,YAAaC,OAAOD,EAAAA,EAAAA,IAAS,aAC9C,CAAED,MAAMC,EAAAA,EAAAA,IAAS,YAAaC,OAAOD,EAAAA,EAAAA,IAAS,aAC9C,CAAED,MAAMC,EAAAA,EAAAA,IAAS,YAAaC,OAAOD,EAAAA,EAAAA,IAAS,aAC9C,CAAED,MAAMC,EAAAA,EAAAA,IAAS,YAAaC,OAAOD,EAAAA,EAAAA,IAAS,aAC9C,CAAED,MAAMC,EAAAA,EAAAA,IAAS,YAAaC,OAAOD,EAAAA,EAAAA,IAAS,aAC9C,CAAED,MAAMC,EAAAA,EAAAA,IAAS,YAAaC,OAAOD,EAAAA,EAAAA,IAAS,aAC9C,CAAED,MAAMC,EAAAA,EAAAA,IAAS,YAAaC,OAAOD,EAAAA,EAAAA,IAAS,aAC9C,CAAED,MAAMC,EAAAA,EAAAA,IAAS,YAAaC,OAAOD,EAAAA,EAAAA,IAAS,aAC9C,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","sources":["webpack://@deriv/p2p/./src/components/modal-manager/modals/business-hour-modal/business-hour-modal-edit/business-hour-modal-edit.scss","webpack://@deriv/p2p/./src/components/modal-manager/modals/business-hour-modal/business-hour-modal-footer/business-hour-modal-footer.scss","webpack://@deriv/p2p/./src/components/modal-manager/modals/business-hour-modal/business-hour-modal-main/business-hour-modal-main.scss","webpack://@deriv/p2p/./src/components/modal-manager/modals/business-hour-modal/business-hour-modal.scss","webpack://@deriv/p2p/./src/components/modal-manager/modals/business-hour-modal/business-hour-modal-edit/business-hour-modal-edit.scss?e524","webpack://@deriv/p2p/./src/components/modal-manager/modals/business-hour-modal/business-hour-modal-footer/business-hour-modal-footer.scss?a5e1","webpack://@deriv/p2p/./src/components/modal-manager/modals/business-hour-modal/business-hour-modal-main/business-hour-modal-main.scss?f661","webpack://@deriv/p2p/./src/components/modal-manager/modals/business-hour-modal/business-hour-modal.scss?ddc5","webpack://@deriv/p2p/./src/constants/business-hour-times.ts","webpack://@deriv/p2p/./src/components/modal-manager/modals/business-hour-modal/business-hour-modal-edit/business-hour-modal-edit.tsx","webpack://@deriv/p2p/./src/components/modal-manager/modals/business-hour-modal/business-hour-modal-edit/index.ts","webpack://@deriv/p2p/./src/components/modal-manager/modals/business-hour-modal/business-hour-modal-footer/business-hour-modal-footer.tsx","webpack://@deriv/p2p/./src/components/modal-manager/modals/business-hour-modal/business-hour-modal-footer/index.ts","webpack://@deriv/p2p/./src/components/modal-manager/modals/business-hour-modal/business-hour-modal-main/business-hour-modal-main.tsx","webpack://@deriv/p2p/./src/components/modal-manager/modals/business-hour-modal/business-hour-modal-main/index.ts","webpack://@deriv/p2p/./src/components/modal-manager/modals/business-hour-modal/business-hour-modal.tsx","webpack://@deriv/p2p/./src/components/modal-manager/modals/business-hour-modal/index.ts"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".business-hour-modal-edit{display:flex;flex-direction:column;gap:1.6rem}.business-hour-modal-edit__days{display:flex;gap:.8rem}.business-hour-modal-edit__days-circle{display:flex;align-items:center;justify-content:center;min-height:3.2rem;min-width:3.2rem;border-radius:50%;background-color:#5c616d;border:none;cursor:pointer}.business-hour-modal-edit__days-circle--unselected{background-color:rgba(0,0,0,0);border:1px solid rgba(0,0,0,.08)}.business-hour-modal-edit__selector{display:flex;flex-direction:column;gap:.8rem}.business-hour-modal-edit__selector-item{display:flex;align-items:center;gap:.8rem}.business-hour-modal-edit__selector-item-text{width:9rem}.business-hour-modal-edit__selector-item__dropdown{background-color:var(--general-section-1);padding:.8rem 1.6rem;border-radius:4px;width:22rem;display:flex;justify-content:center}.business-hour-modal-edit__selector-item__dropdown .dc-dropdown-container{min-width:-moz-fit-content;min-width:fit-content}.business-hour-modal-edit__selector-item__dropdown .dc-dropdown__container{display:flex;gap:.8rem;align-items:center}.business-hour-modal-edit__selector-item__dropdown .dc-dropdown__display{height:auto;height:initial;background:rgba(0,0,0,0);border:none}.business-hour-modal-edit__selector-item__dropdown .dc-dropdown__display-text{font-size:1.2rem;padding:0;margin-right:2rem}.business-hour-modal-edit__selector-item__dropdown .dc-dropdown__select-arrow{right:2px}.business-hour-modal-edit__selector-item__dropdown .dc-dropdown--has-suffix-icon{margin-left:0}.business-hour-modal-edit__selector-item__dropdown .dc-dropdown--has-suffix-icon .suffix-icon{left:auto;left:initial;right:2px}.business-hour-modal-edit__selector-item__dropdown .dc-list{width:20rem;left:-12rem}.business-hour-modal-edit__selector-item__dropdown-group{display:flex;align-items:center;justify-content:center;gap:1.6rem}.business-hour-modal-edit__selector-item__dropdown-group--bold .dc-dropdown__display-text{font-weight:bold}.business-hour-modal-edit__selector-item__dropdown--single{display:flex;justify-content:center}.business-hour-modal-edit__selector-item__dropdown--single .dc-dropdown-container{width:10rem}.business-hour-modal-edit__selector-item__dropdown__open-text{display:flex;gap:.2rem}.business-hour-modal-edit__selector-item__icon{cursor:pointer}.business-hour-modal-edit__selector-item__icon--disabled{opacity:.4;cursor:not-allowed}.business-hour-modal-edit__selector-item .dc-tooltip[data-tooltip]{position:relative}.business-hour-modal-edit__selector-item .dc-tooltip[data-tooltip]:before{width:-moz-fit-content;width:fit-content;color:var(--text-general)}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/modal-manager/modals/business-hour-modal/business-hour-modal-edit/business-hour-modal-edit.scss\"],\"names\":[],\"mappings\":\"AAysBA,0BACI,YAAA,CACA,qBAAA,CACA,UAAA,CAEA,gCACI,YAAA,CACA,SAAA,CAEA,uCACI,YAAA,CACA,kBAAA,CACA,sBAAA,CACA,iBAAA,CACA,gBAAA,CACA,iBAAA,CACA,wBAAA,CACA,WAAA,CACA,cAAA,CAEA,mDACI,8BAAA,CACA,gCAAA,CAKZ,oCACI,YAAA,CACA,qBAAA,CACA,SAAA,CAEA,yCACI,YAAA,CACA,kBAAA,CACA,SAAA,CAEA,8CACI,UAAA,CAGJ,mDACI,yCAAA,CACA,oBAAA,CACA,iBAAA,CACA,WAAA,CACA,YAAA,CACA,sBAAA,CAGI,0EACI,0BAAA,CAAA,qBAAA,CAGJ,2EACI,YAAA,CACA,SAAA,CACA,kBAAA,CAGJ,yEACI,WAAA,CAAA,cAAA,CACA,wBAAA,CACA,WAAA,CAEA,8EACI,gBAAA,CACA,SAAA,CACA,iBAAA,CAIR,8EACI,SAAA,CAGJ,iFACI,aAAA,CAEA,8FACI,SAAA,CAAA,YAAA,CACA,SAAA,CAKZ,4DACI,WAAA,CACA,WAAA,CAGJ,yDACI,YAAA,CACA,kBAAA,CACA,sBAAA,CACA,UAAA,CAGI,0FACI,gBAAA,CAKZ,2DACI,YAAA,CACA,sBAAA,CAEA,kFACI,WAAA,CAIR,8DACI,YAAA,CACA,SAAA,CAIR,+CACI,cAAA,CAEA,yDACI,UAAA,CACA,kBAAA,CAIR,mEACI,iBAAA,CAEA,0EACI,sBAAA,CAAA,iBAAA,CACA,yBAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n.business-hour-modal-edit {\\n    display: flex;\\n    flex-direction: column;\\n    gap: 1.6rem;\\n\\n    &__days {\\n        display: flex;\\n        gap: 0.8rem;\\n\\n        &-circle {\\n            display: flex;\\n            align-items: center;\\n            justify-content: center;\\n            min-height: 3.2rem;\\n            min-width: 3.2rem;\\n            border-radius: 50%;\\n            background-color: #5c616d;\\n            border: none;\\n            cursor: pointer;\\n\\n            &--unselected {\\n                background-color: transparent;\\n                border: 1px solid rgba(0, 0, 0, 0.08);\\n            }\\n        }\\n    }\\n\\n    &__selector {\\n        display: flex;\\n        flex-direction: column;\\n        gap: 0.8rem;\\n\\n        &-item {\\n            display: flex;\\n            align-items: center;\\n            gap: 0.8rem;\\n\\n            &-text {\\n                width: 9rem;\\n            }\\n\\n            &__dropdown {\\n                background-color: var(--general-section-1);\\n                padding: 0.8rem 1.6rem;\\n                border-radius: 4px;\\n                width: 22rem;\\n                display: flex;\\n                justify-content: center;\\n\\n                .dc-dropdown {\\n                    &-container {\\n                        min-width: fit-content;\\n                    }\\n\\n                    &__container {\\n                        display: flex;\\n                        gap: 0.8rem;\\n                        align-items: center;\\n                    }\\n\\n                    &__display {\\n                        height: unset;\\n                        background: transparent;\\n                        border: none;\\n\\n                        &-text {\\n                            font-size: 1.2rem;\\n                            padding: 0;\\n                            margin-right: 2rem;\\n                        }\\n                    }\\n\\n                    &__select-arrow {\\n                        right: 2px;\\n                    }\\n\\n                    &--has-suffix-icon {\\n                        margin-left: 0;\\n\\n                        .suffix-icon {\\n                            left: unset;\\n                            right: 2px;\\n                        }\\n                    }\\n                }\\n\\n                .dc-list {\\n                    width: 20rem;\\n                    left: -12rem;\\n                }\\n\\n                &-group {\\n                    display: flex;\\n                    align-items: center;\\n                    justify-content: center;\\n                    gap: 1.6rem;\\n\\n                    &--bold {\\n                        .dc-dropdown__display-text {\\n                            font-weight: bold;\\n                        }\\n                    }\\n                }\\n\\n                &--single {\\n                    display: flex;\\n                    justify-content: center;\\n\\n                    .dc-dropdown-container {\\n                        width: 10rem;\\n                    }\\n                }\\n\\n                &__open-text {\\n                    display: flex;\\n                    gap: 0.2rem;\\n                }\\n            }\\n\\n            &__icon {\\n                cursor: pointer;\\n\\n                &--disabled {\\n                    opacity: 0.4;\\n                    cursor: not-allowed;\\n                }\\n            }\\n\\n            .dc-tooltip[data-tooltip] {\\n                position: relative;\\n\\n                &:before {\\n                    width: fit-content;\\n                    color: var(--text-general);\\n                }\\n            }\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".business-hour-modal-footer__buttons{padding-top:2.4rem}@media(min-width: 320px)and (max-width: 767px){.business-hour-modal-footer__buttons{padding:0;display:flex;width:100%;gap:.8rem}}@media(min-width: 320px)and (max-width: 767px){.business-hour-modal-footer__button{width:100%}}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/modal-manager/modals/business-hour-modal/business-hour-modal-footer/business-hour-modal-footer.scss\"],\"names\":[],\"mappings\":\"AA0sBI,qCACI,kBAAA,CAzEJ,+CAwEA,qCAIQ,SAAA,CACA,YAAA,CACA,UAAA,CACA,SAAA,CAAA,CA/ER,+CAmFA,oCAEQ,UAAA,CAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n.business-hour-modal-footer {\\n    &__buttons {\\n        padding-top: 2.4rem;\\n\\n        @include mobile {\\n            padding: 0;\\n            display: flex;\\n            width: 100%;\\n            gap: 0.8rem;\\n        }\\n    }\\n\\n    &__button {\\n        @include mobile {\\n            width: 100%;\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".business-hour-modal-main__days{display:flex;flex-direction:column;gap:1.6rem}.business-hour-modal-main__days__hours{display:flex}.business-hour-modal-main__days__hours-text{width:12rem}.business-hour-modal-main__hint{margin-top:auto}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/modal-manager/modals/business-hour-modal/business-hour-modal-main/business-hour-modal-main.scss\"],\"names\":[],\"mappings\":\"AA0sBI,gCACI,YAAA,CACA,qBAAA,CACA,UAAA,CAEA,uCACI,YAAA,CAEA,4CACI,WAAA,CAKZ,gCACI,eAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n.business-hour-modal-main {\\n    &__days {\\n        display: flex;\\n        flex-direction: column;\\n        gap: 1.6rem;\\n\\n        &__hours {\\n            display: flex;\\n\\n            &-text {\\n                width: 12rem;\\n            }\\n        }\\n    }\\n\\n    &__hint {\\n        margin-top: auto;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".business-hour-modal__body{display:flex;flex-direction:column;gap:1.6rem;padding-top:0}@media(min-width: 320px)and (max-width: 767px){.business-hour-modal__body{padding:1.6rem;height:calc(100vh - 21rem)}}.business-hour-modal__footer{padding:0 2.4rem 2.4rem}.dc-modal-header__title{padding:2.4rem}.dc-modal__container{overflow:visible;overflow:initial}.separator-container-line{flex:initial;margin:0}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/modal-manager/modals/business-hour-modal/business-hour-modal.scss\"],\"names\":[],\"mappings\":\"AA0sBI,2BACI,YAAA,CACA,qBAAA,CACA,UAAA,CACA,aAAA,CA5EJ,+CAwEA,2BAOQ,cAAA,CACA,0BAAA,CAAA,CAIR,6BACI,uBAAA,CAIR,wBACI,cAAA,CAGJ,qBACI,gBAAA,CAAA,gBAAA,CAGJ,0BACI,YAAA,CACA,QAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n.business-hour-modal {\\n    &__body {\\n        display: flex;\\n        flex-direction: column;\\n        gap: 1.6rem;\\n        padding-top: 0;\\n\\n        @include mobile {\\n            padding: 1.6rem;\\n            height: calc(100vh - 21rem);\\n        }\\n    }\\n\\n    &__footer {\\n        padding: 0 2.4rem 2.4rem;\\n    }\\n}\\n\\n.dc-modal-header__title {\\n    padding: 2.4rem;\\n}\\n\\n.dc-modal__container {\\n    overflow: unset;\\n}\\n\\n.separator-container-line {\\n    flex: unset;\\n    margin: 0;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","var api = require(\"!../../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./business-hour-modal-edit.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./business-hour-modal-footer.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./business-hour-modal-main.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./business-hour-modal.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","import { localize } from 'Components/i18next';\n\nexport const getHoursList = () => [\n    { text: localize('12:00 am'), value: localize('12:00 am') },\n    { text: localize('12:30 am'), value: localize('12:30 am') },\n    { text: localize('01:00 am'), value: localize('01:00 am') },\n    { text: localize('01:30 am'), value: localize('01:30 am') },\n    { text: localize('02:00 am'), value: localize('02:00 am') },\n    { text: localize('02:30 am'), value: localize('02:30 am') },\n    { text: localize('03:00 am'), value: localize('03:00 am') },\n    { text: localize('03:30 am'), value: localize('03:30 am') },\n    { text: localize('04:00 am'), value: localize('04:00 am') },\n    { text: localize('04:30 am'), value: localize('04:30 am') },\n    { text: localize('05:00 am'), value: localize('05:00 am') },\n    { text: localize('05:30 am'), value: localize('05:30 am') },\n    { text: localize('06:00 am'), value: localize('06:00 am') },\n    { text: localize('06:30 am'), value: localize('06:30 am') },\n    { text: localize('07:00 am'), value: localize('07:00 am') },\n    { text: localize('07:30 am'), value: localize('07:30 am') },\n    { text: localize('08:00 am'), value: localize('08:00 am') },\n    { text: localize('08:30 am'), value: localize('08:30 am') },\n    { text: localize('09:00 am'), value: localize('09:00 am') },\n    { text: localize('09:30 am'), value: localize('09:30 am') },\n    { text: localize('10:00 am'), value: localize('10:00 am') },\n    { text: localize('10:30 am'), value: localize('10:30 am') },\n    { text: localize('11:00 am'), value: localize('11:00 am') },\n    { text: localize('11:30 am'), value: localize('11:30 am') },\n    { text: localize('12:00 pm'), value: localize('12:00 pm') },\n    { text: localize('12:30 pm'), value: localize('12:30 pm') },\n    { text: localize('01:00 pm'), value: localize('01:00 pm') },\n    { text: localize('01:30 pm'), value: localize('01:30 pm') },\n    { text: localize('02:00 pm'), value: localize('02:00 pm') },\n    { text: localize('02:30 pm'), value: localize('02:30 pm') },\n    { text: localize('03:00 pm'), value: localize('03:00 pm') },\n    { text: localize('03:30 pm'), value: localize('03:30 pm') },\n    { text: localize('04:00 pm'), value: localize('04:00 pm') },\n    { text: localize('04:30 pm'), value: localize('04:30 pm') },\n    { text: localize('05:00 pm'), value: localize('05:00 pm') },\n    { text: localize('05:30 pm'), value: localize('05:30 pm') },\n    { text: localize('06:00 pm'), value: localize('06:00 pm') },\n    { text: localize('06:30 pm'), value: localize('06:30 pm') },\n    { text: localize('07:00 pm'), value: localize('07:00 pm') },\n    { text: localize('07:30 pm'), value: localize('07:30 pm') },\n    { text: localize('08:00 pm'), value: localize('08:00 pm') },\n    { text: localize('08:30 pm'), value: localize('08:30 pm') },\n    { text: localize('09:00 pm'), value: localize('09:00 pm') },\n    { text: localize('09:30 pm'), value: localize('09:30 pm') },\n    { text: localize('10:00 pm'), value: localize('10:00 pm') },\n    { text: localize('10:30 pm'), value: localize('10:30 pm') },\n    { text: localize('11:00 pm'), value: localize('11:00 pm') },\n    { text: localize('11:30 pm'), value: localize('11:30 pm') },\n];\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Dropdown, Icon, Text, Tooltip } from '@deriv/components';\nimport { Localize, localize } from 'Components/i18next';\nimport { getHoursList } from 'Constants/business-hour-times';\nimport SeparatorContainerLine from 'Components/separator-container-line';\nimport './business-hour-modal-edit.scss';\n\ntype TBusinessHourModalEditProps = {\n    data: {\n        day: JSX.Element;\n        short_day: JSX.Element;\n        time: JSX.Element;\n        start_time?: string | null;\n        end_time?: string | null;\n        value: string;\n    }[];\n};\n\nconst BusinessHourModalEdit = ({ data }: TBusinessHourModalEditProps) => {\n    const [selected_days, setSelectedDays] = React.useState<string[]>([]);\n    const today = new Date().getDay();\n\n    React.useEffect(() => {\n        const filtered_days = data\n            .filter(day => day.start_time !== undefined && day.end_time !== undefined)\n            .map(day => day.value);\n\n        setSelectedDays(filtered_days);\n    }, []);\n\n    const onSelectTime = () => {\n        // TODO: implement on select time when implementing BE\n    };\n\n    const onClickDay = () => {\n        // TODO: implement on select day when implementing BE\n    };\n\n    const onReset = () => {\n        // TODO: implement on reset when implementing BE\n    };\n\n    return (\n        <div className='business-hour-modal-edit'>\n            <div className='business-hour-modal-edit__days'>\n                {data.map(day => {\n                    const includes_day = selected_days.includes(day.value);\n\n                    return (\n                        <Text\n                            as='button'\n                            className={classNames('business-hour-modal-edit__days-circle', {\n                                'business-hour-modal-edit__days-circle--unselected': !includes_day,\n                            })}\n                            color={includes_day ? 'colored-background' : 'general'}\n                            key={day.value}\n                            onClick={onClickDay}\n                        >\n                            {day.short_day}\n                        </Text>\n                    );\n                })}\n            </div>\n            <SeparatorContainerLine />\n            <div className='business-hour-modal-edit__selector'>\n                {data.map((day, idx) => {\n                    const text_weight = idx === today - 1 ? 'bold' : 'normal';\n                    const includes_day = selected_days.includes(day.value);\n                    const are_times_undefined = day.start_time === undefined && day.end_time === undefined;\n                    const are_times_null = day.start_time === null && day.end_time === null;\n\n                    return (\n                        <div className='business-hour-modal-edit__selector-item' key={`${day.value}_${day.start_time}`}>\n                            <Text\n                                className='business-hour-modal-edit__selector-item-text'\n                                color={includes_day ? 'general' : 'less-prominent'}\n                                size='xxs'\n                                weight={text_weight}\n                            >\n                                {day.day}\n                            </Text>\n                            <div\n                                className={classNames('business-hour-modal-edit__selector-item__dropdown', {\n                                    'business-hour-modal-edit__selector-item__dropdown--single': !includes_day,\n                                })}\n                            >\n                                {includes_day && !are_times_null ? (\n                                    <div\n                                        className={classNames(\n                                            'business-hour-modal-edit__selector-item__dropdown-group',\n                                            {\n                                                'business-hour-modal-edit__selector-item__dropdown-group--bold':\n                                                    idx === today - 1,\n                                            }\n                                        )}\n                                    >\n                                        <Dropdown\n                                            is_align_text_left\n                                            list={getHoursList()}\n                                            onChange={onSelectTime}\n                                            should_animate_suffix_icon\n                                            suffix_icon='IcArrowDropDown'\n                                            value={day.start_time!}\n                                        />\n                                        <Text size='xxs'>\n                                            <Localize i18n_default_text='to' />\n                                        </Text>\n                                        <Dropdown\n                                            is_align_text_left\n                                            list={getHoursList()}\n                                            onChange={onSelectTime}\n                                            should_animate_suffix_icon\n                                            suffix_icon='IcArrowDropDown'\n                                            value={day.end_time!}\n                                        />\n                                    </div>\n                                ) : (\n                                    <div className='business-hour-modal-edit__selector-item__dropdown__open-text'>\n                                        <Text color={are_times_null ? 'general' : 'less-prominent'} size='xxs'>\n                                            <Localize i18n_default_text='Open 24 hours' />\n                                        </Text>\n                                        <Icon icon='IcArrowDropDown' />\n                                    </div>\n                                )}\n                            </div>\n                            <Tooltip alignment='top' message={localize('Reset')}>\n                                <Icon\n                                    className={classNames('business-hour-modal-edit__selector-item__icon', {\n                                        'business-hour-modal-edit__selector-item__icon--disabled':\n                                            !includes_day && are_times_undefined,\n                                    })}\n                                    icon='IcResetTime'\n                                    onClick={onReset}\n                                />\n                            </Tooltip>\n                        </div>\n                    );\n                })}\n            </div>\n        </div>\n    );\n};\n\nexport default BusinessHourModalEdit;\n","import BusinessHourModalEdit from './business-hour-modal-edit';\n\nexport default BusinessHourModalEdit;\n","import React from 'react';\nimport { Button } from '@deriv/components';\nimport { Localize } from 'Components/i18next';\nimport './business-hour-modal-footer.scss';\n\ntype TBusinessHourModalFooter = {\n    setShowEdit: (show_edit: boolean) => void;\n    show_edit: boolean;\n};\n\nconst BusinessHourModalFooter = ({ setShowEdit, show_edit }: TBusinessHourModalFooter) => {\n    if (show_edit) {\n        return (\n            <div className='business-hour-modal-footer__buttons'>\n                <Button\n                    className='business-hour-modal-footer__button'\n                    secondary\n                    onClick={() => setShowEdit(false)}\n                    large\n                >\n                    <Localize i18n_default_text='Cancel' />\n                </Button>\n                <Button className='business-hour-modal-footer__button' primary large>\n                    <Localize i18n_default_text='Edit' />\n                </Button>\n            </div>\n        );\n    }\n\n    return (\n        <Button className='business-hour-modal-footer__button' secondary onClick={() => setShowEdit(true)} large>\n            <Localize i18n_default_text='Edit' />\n        </Button>\n    );\n};\n\nexport default BusinessHourModalFooter;\n","import BusinessHourModalFooter from './business-hour-modal-footer';\n\nexport default BusinessHourModalFooter;\n","import React from 'react';\nimport { Text } from '@deriv/components';\nimport { Localize } from 'Components/i18next';\nimport SeparatorContainerLine from 'Components/separator-container-line';\nimport './business-hour-modal-main.scss';\n\ntype TBusinessHourModalMain = {\n    business_days: {\n        day: JSX.Element;\n        short_day: JSX.Element;\n        time: JSX.Element;\n        start_time?: string | null;\n        end_time?: string | null;\n        value: string;\n    }[];\n};\n\nconst BusinessHourModalMain = ({ business_days }: TBusinessHourModalMain) => {\n    const today = new Date().getDay();\n\n    return (\n        <>\n            <Text as='p' size='xs'>\n                <Localize i18n_default_text='Set the hours you’re available to accept orders. Your ads will only be visible to others during these times.' />\n            </Text>\n            <SeparatorContainerLine />\n            <div className='business-hour-modal-main__days'>\n                {business_days.map((day, idx) => {\n                    const text_weight = idx === today - 1 ? 'bold' : 'normal';\n\n                    return (\n                        <div key={day.value} className='business-hour-modal-main__days__hours'>\n                            <Text\n                                as='p'\n                                className='business-hour-modal-main__days__hours-text'\n                                size='xs'\n                                weight={text_weight}\n                            >\n                                {day.day}\n                            </Text>\n                            <Text as='p' size='xs' weight={text_weight}>\n                                {day.time}\n                            </Text>\n                        </div>\n                    );\n                })}\n            </div>\n            <Text as='p' className='business-hour-modal-main__hint' size='xxs'>\n                <Localize i18n_default_text='*Some ads may not be immediately visible to potential buyers due to order processing times.' />\n            </Text>\n        </>\n    );\n};\n\nexport default BusinessHourModalMain;\n","import BusinessHourModalMain from './business-hour-modal-main';\n\nexport default BusinessHourModalMain;\n","import React from 'react';\nimport { MobileFullPageModal, Modal, Text } from '@deriv/components';\nimport { useStore } from '@deriv/stores';\nimport { useModalManagerContext } from 'Components/modal-manager/modal-manager-context';\nimport { Localize } from 'Components/i18next';\nimport BusinessHourModalEdit from './business-hour-modal-edit';\nimport BusinessHourModalFooter from './business-hour-modal-footer';\nimport BusinessHourModalMain from './business-hour-modal-main';\nimport './business-hour-modal.scss';\n\n// TODO: delete these hardcoded data when implementing BE\nconst business_days = [\n    {\n        day: <Localize i18n_default_text='Monday' />,\n        short_day: <Localize i18n_default_text='M' />,\n        time: <Localize i18n_default_text='Open 24 hours' />,\n        start_time: null,\n        end_time: null,\n        value: 'monday',\n    },\n    {\n        day: <Localize i18n_default_text='Tuesday' />,\n        short_day: <Localize i18n_default_text='T' />,\n        time: <Localize i18n_default_text='Closed' />,\n        value: 'tuesday',\n    },\n    {\n        day: <Localize i18n_default_text='Wednesday' />,\n        short_day: <Localize i18n_default_text='W' />,\n        time: <Localize i18n_default_text='10:30 am - 11:30 pm' />,\n        start_time: '10:30 am',\n        end_time: '11:30 pm',\n        value: 'wednesday',\n    },\n    {\n        day: <Localize i18n_default_text='Thursday' />,\n        short_day: <Localize i18n_default_text='T' />,\n        time: <Localize i18n_default_text='10:30 am - 11:30 pm' />,\n        start_time: '10:30 am',\n        end_time: '11:30 pm',\n        value: 'thursday',\n    },\n    {\n        day: <Localize i18n_default_text='Friday' />,\n        short_day: <Localize i18n_default_text='F' />,\n        time: <Localize i18n_default_text='9:00 am - 9:00 pm' />,\n        start_time: '09:00 am',\n        end_time: '09:00 pm',\n        value: 'friday',\n    },\n    {\n        day: <Localize i18n_default_text='Saturday' />,\n        short_day: <Localize i18n_default_text='S' />,\n        time: <Localize i18n_default_text='Open 24 hours' />,\n        start_time: null,\n        end_time: null,\n        value: 'saturday',\n    },\n    {\n        day: <Localize i18n_default_text='Sunday' />,\n        short_day: <Localize i18n_default_text='S' />,\n        time: <Localize i18n_default_text='Closed' />,\n        value: 'sunday',\n    },\n];\n\nconst HeaderRenderer = ({ show_edit }: { show_edit: boolean }) => (\n    <Text weight='bold'>\n        {show_edit ? (\n            <Localize i18n_default_text='Edit business hour' />\n        ) : (\n            <Localize i18n_default_text='Business hour' />\n        )}\n    </Text>\n);\n\nconst BusinessHourModal = () => {\n    const [show_edit, setShowEdit] = React.useState(false);\n    const { hideModal, is_modal_open } = useModalManagerContext();\n    const {\n        ui: { is_mobile },\n    } = useStore();\n\n    if (is_mobile) {\n        return (\n            <MobileFullPageModal\n                body_className='business-hour-modal__body'\n                is_modal_open={is_modal_open}\n                renderPageFooterChildren={() => (\n                    <BusinessHourModalFooter setShowEdit={setShowEdit} show_edit={show_edit} />\n                )}\n                renderPageHeaderElement={<HeaderRenderer show_edit={show_edit} />}\n                pageHeaderReturnFn={() => (show_edit ? setShowEdit(false) : hideModal())}\n            >\n                {show_edit ? (\n                    <BusinessHourModalEdit data={business_days} />\n                ) : (\n                    <BusinessHourModalMain business_days={business_days} />\n                )}\n            </MobileFullPageModal>\n        );\n    }\n\n    return (\n        <Modal\n            className='business-hour-modal'\n            is_open={is_modal_open}\n            title={<HeaderRenderer show_edit={show_edit} />}\n            toggleModal={hideModal}\n            width='44rem'\n        >\n            <Modal.Body className='business-hour-modal__body'>\n                {show_edit ? (\n                    <BusinessHourModalEdit data={business_days} />\n                ) : (\n                    <BusinessHourModalMain business_days={business_days} />\n                )}\n            </Modal.Body>\n            <Modal.Footer className='business-hour-modal__footer'>\n                <BusinessHourModalFooter setShowEdit={setShowEdit} show_edit={show_edit} />\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default BusinessHourModal;\n","import BusinessHourModal from './business-hour-modal';\n\nexport default BusinessHourModal;\n"],"names":["___CSS_LOADER_EXPORT___","push","module","id","api","content","__esModule","default","options","exports","locals","getHoursList","text","localize","value","_ref","data","_React$useState2","_slicedToArray","React","selected_days","setSelectedDays","today","Date","getDay","filtered_days","filter","day","undefined","start_time","end_time","map","onSelectTime","onClickDay","onReset","className","includes_day","includes","Text","as","classNames","color","key","onClick","short_day","SeparatorContainerLine","idx","text_weight","are_times_undefined","are_times_null","concat","size","weight","Dropdown","is_align_text_left","list","onChange","should_animate_suffix_icon","suffix_icon","Localize","i18n_default_text","Icon","icon","Tooltip","alignment","message","setShowEdit","show_edit","Button","secondary","large","primary","business_days","time","HeaderRenderer","_useModalManagerConte","useModalManagerContext","hideModal","is_modal_open","useStore","ui","is_mobile","MobileFullPageModal","body_className","renderPageFooterChildren","BusinessHourModalFooter","renderPageHeaderElement","pageHeaderReturnFn","BusinessHourModalEdit","BusinessHourModalMain","Modal","is_open","title","toggleModal","width","Body","Footer"],"sourceRoot":""}