{"version":3,"file":"account/js/account.Sections_Profile_PhoneVerification_index_ts.e73abf50fb773bb3598e.js","mappings":"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","sources":["webpack://@deriv/account/../../../node_modules/@deriv-com/quill-ui/dist/components/Input/text-field-addon/index.js","webpack://@deriv/account/./Sections/Profile/PhoneVerification/validation.ts","webpack://@deriv/account/./Sections/Profile/PhoneVerification/confirm-phone-number.tsx","webpack://@deriv/account/./Sections/Profile/PhoneVerification/cancel-phone-verification-modal.tsx","webpack://@deriv/account/./Sections/Profile/PhoneVerification/resend-code-timer.tsx","webpack://@deriv/account/./Sections/Profile/PhoneVerification/didnt-get-the-code-modal.tsx","webpack://@deriv/account/./Sections/Profile/PhoneVerification/phone-number-verified-modal.tsx","webpack://@deriv/account/./Sections/Profile/PhoneVerification/cool-down-period-modal.tsx","webpack://@deriv/account/./Sections/Profile/PhoneVerification/otp-verification.tsx","webpack://@deriv/account/./Sections/Profile/PhoneVerification/session-timeout-modal.tsx","webpack://@deriv/account/./Sections/Profile/PhoneVerification/verification-link-expired-modal.tsx","webpack://@deriv/account/../../../node_modules/@deriv-com/quill-ui/dist/components/Tag/tagIcon/index.js","webpack://@deriv/account/../../../node_modules/@deriv-com/quill-ui/dist/components/Tag/index.js","webpack://@deriv/account/./Sections/Profile/PhoneVerification/phone-verification-card.tsx","webpack://@deriv/account/./Sections/Profile/PhoneVerification/index.ts","webpack://@deriv/account/./Sections/Profile/PhoneVerification/phone-verification-page.tsx"],"sourcesContent":["import { j as l } from \"../../../jsx-runtime-DmTjM30f.js\";\nimport { forwardRef as x } from \"react\";\nimport _ from \"../base/index.js\";\nimport { c as e } from \"../../../clsx-OuTLNxxd.js\";\nimport \"../../Typography/base.js\";\nimport \"../../Typography/heading/index.js\";\nimport { Text as u } from \"../../Typography/text/index.js\";\nimport '../../../assets/index3.css';const w = x(\n  ({\n    addOnPosition: r = \"left\",\n    variant: o = \"outline\",\n    fillAddonBorderColor: t,\n    rightIcon: n,\n    addonLabel: i,\n    inputSize: d = \"lg\",\n    disabled: s,\n    ...a\n  }, m) => {\n    const c = o === \"fill\" ? { borderColor: t } : {}, p = /* @__PURE__ */ l.jsx(\n      \"div\",\n      {\n        className: e(\n          \"quill-addon\",\n          `quill-addon__position--${r}`,\n          `quill-addon__position--${r}--${o}`,\n          `quill-addon__variant--${o}`\n        ),\n        style: c,\n        children: /* @__PURE__ */ l.jsx(\n          u,\n          {\n            size: d === \"lg\" ? \"md\" : d,\n            className: e(s && \"quill-addon__label--disabled\"),\n            children: i\n          }\n        )\n      }\n    ), f = /* @__PURE__ */ l.jsx(\"span\", { className: \"icon_wrapper\", children: n });\n    return /* @__PURE__ */ l.jsx(\n      _,\n      {\n        addOn: p,\n        disabled: s,\n        addOnIcon: f,\n        variant: o,\n        inputSize: d,\n        ref: m,\n        ...a\n      }\n    );\n  }\n);\nexport {\n  w as TextFieldAddon,\n  w as default\n};\n","import * as Yup from 'yup';\nimport { ValidationConstants } from '@deriv-com/utils';\nimport { localize } from '@deriv-com/translations';\n\nconst tempPhoneNumberValidation = /^[0-9]{5,15}$/;\n\nconst phoneNumberSchema = (isCountryCodeDropdownEnabled: boolean) =>\n    Yup.string().matches(\n        isCountryCodeDropdownEnabled ? tempPhoneNumberValidation : ValidationConstants.patterns.phoneNumber,\n        localize('Enter a valid phone number.')\n    );\n\nexport const validatePhoneNumber = (\n    phone_number: string,\n    setErrorMessage: (value: string) => void,\n    setIsDisabledRequestButton: (value: boolean) => void,\n    isCountryCodeDropdownEnabled: boolean\n) => {\n    phoneNumberSchema(isCountryCodeDropdownEnabled)\n        .validate(phone_number)\n        .then(() => {\n            setErrorMessage('');\n            setIsDisabledRequestButton(false);\n        })\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .catch(({ errors }: any) => {\n            setErrorMessage(errors);\n            setIsDisabledRequestButton(true);\n        });\n};\n","import { ChangeEvent, Fragment, useEffect, useState } from 'react';\nimport clsx from 'clsx';\n\nimport {\n    useGetPhoneNumberList,\n    useGrowthbookGetFeatureValue,\n    usePhoneNumberVerificationSetTimer,\n    usePhoneVerificationAnalytics,\n    useRequestPhoneNumberOTP,\n    useSettings,\n} from '@deriv/hooks';\nimport { VERIFICATION_SERVICES } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { Button, InputPhoneNumber, Snackbar, Text, TextFieldAddon } from '@deriv-com/quill-ui';\nimport { TCountryCodes } from '@deriv-com/quill-ui/dist/types';\nimport { Localize, useTranslations } from '@deriv-com/translations';\n\nimport { validatePhoneNumber } from './validation';\n\ntype TConfirmPhoneNumber = {\n    show_confirm_phone_number?: boolean;\n    setOtpVerification: (value: { show_otp_verification: boolean; phone_verification_type: string }) => void;\n};\n\nconst ConfirmPhoneNumber = observer(({ show_confirm_phone_number, setOtpVerification }: TConfirmPhoneNumber) => {\n    const [phone_number, setPhoneNumber] = useState('');\n    const [phone_verification_type, setPhoneVerificationType] = useState('');\n    const [isCountryCodeDropdownEnabled] = useGrowthbookGetFeatureValue({\n        featureFlag: 'enable_country_code_dropdown',\n    });\n    const [is_button_loading, setIsButtonLoading] = useState(false);\n    const {\n        requestOnSMS,\n        requestOnWhatsApp,\n        error_message,\n        setErrorMessage,\n        setUsersPhoneNumber,\n        is_email_verified,\n        email_otp_error,\n        is_disabled_request_button,\n        setIsDisabledRequestButton,\n    } = useRequestPhoneNumberOTP();\n    const {\n        is_global_sms_available,\n        is_global_whatsapp_available,\n        no_of_available_carriers,\n        formatted_countries_list,\n        short_code_selected,\n        selected_phone_code,\n        selected_country_list,\n        isLoading,\n    } = useGetPhoneNumberList();\n    const { data: account_settings, invalidate } = useSettings();\n    const [selectedCountryCode, setSelectedCountryCode] = useState<TCountryCodes>();\n    const { ui } = useStore();\n    const { setShouldShowPhoneNumberOTP } = ui;\n    const { next_phone_otp_request_timer, is_phone_otp_timer_loading } = usePhoneNumberVerificationSetTimer(true);\n    const { trackPhoneVerificationEvents } = usePhoneVerificationAnalytics();\n    const { localize } = useTranslations();\n    const only_1_carrier_supported = no_of_available_carriers === 1;\n\n    useEffect(() => {\n        if (show_confirm_phone_number) {\n            trackPhoneVerificationEvents({\n                action: 'open',\n                subform_name: 'verify_phone_screen',\n            });\n        }\n    }, [show_confirm_phone_number, trackPhoneVerificationEvents]);\n\n    useEffect(() => {\n        setPhoneNumber(account_settings?.phone?.replace(/\\D/g, '') || '');\n    }, [account_settings?.phone]);\n\n    useEffect(() => {\n        if (email_otp_error) {\n            trackPhoneVerificationEvents({\n                action: 'error',\n                subform_name: 'verify_phone_screen',\n                //@ts-expect-error will fix this later\n                error_code: email_otp_error.code,\n            });\n            invalidate('get_settings').then(() => setIsButtonLoading(false));\n        }\n        if (is_email_verified) {\n            setIsButtonLoading(false);\n            setOtpVerification({ show_otp_verification: true, phone_verification_type });\n            setShouldShowPhoneNumberOTP(true);\n        }\n    }, [is_email_verified, email_otp_error, invalidate, trackPhoneVerificationEvents]);\n\n    const handleOnChangePhoneNumber = (e: ChangeEvent<HTMLInputElement>) => {\n        setPhoneNumber(e.target.value);\n        validatePhoneNumber(\n            isCountryCodeDropdownEnabled ? e.target.value : `+${e.target.value}`,\n            setErrorMessage,\n            setIsDisabledRequestButton,\n            !!isCountryCodeDropdownEnabled\n        );\n    };\n\n    const handleOnChangeCountryCode = (item: TCountryCodes) => {\n        setSelectedCountryCode(item);\n    };\n\n    const handleSubmit = async (phone_verification_type: string) => {\n        setIsButtonLoading(true);\n        setPhoneVerificationType(phone_verification_type);\n        const { error } = await setUsersPhoneNumber({\n            phone: isCountryCodeDropdownEnabled ? phone_number : `+${phone_number}`,\n            ...(isCountryCodeDropdownEnabled\n                ? {\n                      calling_country_code: selectedCountryCode?.phone_code || selected_phone_code,\n                  }\n                : {}),\n        });\n\n        if (!error) {\n            trackPhoneVerificationEvents({\n                action: 'click_cta',\n                cta_name:\n                    phone_verification_type === VERIFICATION_SERVICES.SMS\n                        ? 'Get code via SMS'\n                        : 'Get code via WhatsApp',\n                subform_name: 'verify_phone_screen',\n            });\n            phone_verification_type === VERIFICATION_SERVICES.SMS ? requestOnSMS() : requestOnWhatsApp();\n        } else {\n            setIsButtonLoading(false);\n        }\n    };\n\n    const isSingularValue = (time: number) => {\n        return time === 1;\n    };\n\n    const resendPhoneOtpTimer = () => {\n        let resendPhoneOtpTimer = '';\n        if (next_phone_otp_request_timer) {\n            next_phone_otp_request_timer < 60\n                ? (resendPhoneOtpTimer = `${next_phone_otp_request_timer} ${\n                      isSingularValue(next_phone_otp_request_timer) ? localize('second') : localize('seconds')\n                  }`)\n                : (resendPhoneOtpTimer = `${Math.round(next_phone_otp_request_timer / 60)} ${\n                      isSingularValue(Math.round(next_phone_otp_request_timer / 60))\n                          ? localize('minute')\n                          : localize('minutes')\n                  }`);\n        } else {\n            resendPhoneOtpTimer = '';\n        }\n\n        return resendPhoneOtpTimer;\n    };\n\n    const isCarrierSupportedForSms =\n        !isCountryCodeDropdownEnabled ||\n        (selectedCountryCode\n            ? //@ts-expect-error carriers is not defined in TCountryCodes from quill-ui\n              selectedCountryCode?.carriers.includes('sms') && is_global_sms_available\n            : selected_country_list?.carriers.includes('sms') && is_global_sms_available);\n\n    const isCarrierSupportedForWhatsApp =\n        !isCountryCodeDropdownEnabled ||\n        (selectedCountryCode\n            ? //@ts-expect-error carriers is not defined in TCountryCodes from quill-ui\n              selectedCountryCode?.carriers.includes('whatsapp') && is_global_whatsapp_available\n            : selected_country_list?.carriers.includes('whatsapp') && is_global_whatsapp_available);\n\n    const getSMSButtonVariant = () => {\n        if (!isCountryCodeDropdownEnabled) return 'secondary';\n        return isCarrierSupportedForWhatsApp ? 'secondary' : 'primary';\n    };\n\n    const getSmsButtonColor = () => {\n        if (!isCountryCodeDropdownEnabled) return 'black-white';\n        return isCarrierSupportedForWhatsApp ? 'black-white' : 'coral';\n    };\n\n    const getSmsButtonTextColor = () => {\n        if (!isCountryCodeDropdownEnabled) return 'black';\n        return isCarrierSupportedForWhatsApp ? 'black' : 'white';\n    };\n\n    return (\n        <Fragment>\n            <Text bold>\n                <Localize i18n_default_text='Step 2 of 3: Confirm your phone number' />\n            </Text>\n            <div\n                className={clsx('phone-verification__card--inputfield', {\n                    'phone-verification__card--inputfield--error': error_message,\n                })}\n            >\n                {isCountryCodeDropdownEnabled ? (\n                    formatted_countries_list &&\n                    !isLoading && (\n                        <InputPhoneNumber\n                            showSearchBar\n                            codeIcon={false}\n                            countryCodes={formatted_countries_list}\n                            codeLabel={localize('Code')}\n                            shortCode={selectedCountryCode?.short_code || short_code_selected}\n                            onCodeChange={handleOnChangeCountryCode}\n                            value={phone_number}\n                            showFlags={false}\n                            label={localize('Phone number')}\n                            onChange={handleOnChangePhoneNumber}\n                            status={error_message ? 'error' : 'neutral'}\n                            message={error_message}\n                        />\n                    )\n                ) : (\n                    <TextFieldAddon\n                        type='number'\n                        label={localize('Phone number')}\n                        value={phone_number}\n                        status={error_message ? 'error' : 'neutral'}\n                        message={error_message}\n                        className='phone-verification__card--inputfield__phone-number-input'\n                        onChange={handleOnChangePhoneNumber}\n                        addonLabel='+'\n                    />\n                )}\n            </div>\n            <div\n                className={clsx('phone-verification__card--buttons_container', {\n                    'phone-verification__card--buttons_container--with-1-carrier': only_1_carrier_supported,\n                })}\n            >\n                {(isCountryCodeDropdownEnabled ? isCarrierSupportedForSms : true) && !isLoading && (\n                    <Button\n                        variant={getSMSButtonVariant()}\n                        color={getSmsButtonColor()}\n                        fullWidth={isCountryCodeDropdownEnabled ? isCarrierSupportedForWhatsApp : true}\n                        size='lg'\n                        onClick={() => handleSubmit(VERIFICATION_SERVICES.SMS)}\n                        disabled={\n                            is_button_loading ||\n                            !!next_phone_otp_request_timer ||\n                            is_disabled_request_button ||\n                            is_phone_otp_timer_loading\n                        }\n                    >\n                        <Text color={getSmsButtonTextColor()} bold>\n                            <Localize i18n_default_text='Get code via SMS' />\n                        </Text>\n                    </Button>\n                )}\n                {(isCountryCodeDropdownEnabled ? isCarrierSupportedForWhatsApp : true) && !isLoading && (\n                    <Button\n                        color='coral'\n                        fullWidth={isCountryCodeDropdownEnabled ? isCarrierSupportedForSms : true}\n                        size='lg'\n                        onClick={() => handleSubmit(VERIFICATION_SERVICES.WHATSAPP)}\n                        disabled={\n                            is_button_loading ||\n                            !!next_phone_otp_request_timer ||\n                            is_disabled_request_button ||\n                            is_phone_otp_timer_loading\n                        }\n                    >\n                        <Text color='white' bold>\n                            <Localize i18n_default_text='Get code via WhatsApp' />\n                        </Text>\n                    </Button>\n                )}\n            </div>\n            <Snackbar\n                hasCloseButton={false}\n                message={\n                    <Localize\n                        i18n_default_text='Request new code in {{next_phone_number_attempt_timestamp}}.'\n                        values={{ next_phone_number_attempt_timestamp: resendPhoneOtpTimer() }}\n                    />\n                }\n                isVisible={!!next_phone_otp_request_timer}\n            />\n        </Fragment>\n    );\n});\n\nexport default ConfirmPhoneNumber;\n","import { useEffect, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router';\nimport { observer, useStore } from '@deriv/stores';\nimport { useGrowthbookGetFeatureValue, useIsPhoneNumberVerified, usePhoneVerificationAnalytics } from '@deriv/hooks';\nimport { Modal, Text } from '@deriv-com/quill-ui';\nimport { Localize } from '@deriv-com/translations';\nimport { useDevice } from '@deriv-com/ui';\n\nconst CancelPhoneVerificationModal = observer(() => {\n    const history = useHistory();\n    const location = useLocation();\n    const [show_modal, setShowModal] = useState(false);\n    const [next_location, setNextLocation] = useState(location.pathname);\n    const { ui, client } = useStore();\n    const { setShouldShowPhoneNumberOTP, is_forced_to_exit_pnv } = ui;\n    const { setVerificationCode, is_virtual } = client;\n    const { isMobile } = useDevice();\n    const { trackPhoneVerificationEvents } = usePhoneVerificationAnalytics();\n    const { is_phone_number_verified } = useIsPhoneNumberVerified();\n    const [isPhoneNumberVerificationEnabled] = useGrowthbookGetFeatureValue({\n        featureFlag: 'phone_number_verification',\n    });\n\n    useEffect(() => {\n        const unblock = history.block((location: Location) => {\n            if (\n                !show_modal &&\n                !is_virtual &&\n                !is_forced_to_exit_pnv &&\n                !is_phone_number_verified &&\n                isPhoneNumberVerificationEnabled\n            ) {\n                setShowModal(true);\n                setNextLocation(location.pathname);\n                return false;\n            }\n            return true;\n        });\n\n        return () => unblock();\n    }, [\n        history,\n        show_modal,\n        is_virtual,\n        is_forced_to_exit_pnv,\n        is_phone_number_verified,\n        isPhoneNumberVerificationEnabled,\n    ]);\n\n    const handleStayAtPhoneVerificationPage = () => {\n        setShowModal(false);\n        setNextLocation(location.pathname);\n    };\n\n    const handleLeavePhoneVerificationPage = () => {\n        if (next_location) {\n            setVerificationCode('', 'phone_number_verification');\n            setShouldShowPhoneNumberOTP(false);\n            setShowModal(false);\n            trackPhoneVerificationEvents({\n                action: 'back',\n            });\n            history.push(next_location);\n        }\n    };\n\n    return (\n        <Modal\n            isMobile={isMobile}\n            showHandleBar\n            isOpened={show_modal}\n            isNonExpandable\n            shouldCloseModalOnSwipeDown\n            shouldCloseOnPrimaryButtonClick\n            primaryButtonLabel={<Localize i18n_default_text='Continue verification' />}\n            buttonColor='coral'\n            showSecondaryButton\n            showCrossIcon\n            toggleModal={handleStayAtPhoneVerificationPage}\n            secondaryButtonLabel={<Localize i18n_default_text='Cancel' />}\n            secondaryButtonCallback={handleLeavePhoneVerificationPage}\n        >\n            <Modal.Header title={<Localize i18n_default_text='Cancel phone number verification?' />} />\n            <Modal.Body>\n                <div className='phone-verification__cancel-modal--contents'>\n                    <Text>\n                        <Localize i18n_default_text=\"If you cancel, you'll lose all progress.\" />\n                    </Text>\n                </div>\n            </Modal.Body>\n        </Modal>\n    );\n});\n\nexport default CancelPhoneVerificationModal;\n","import React, { useCallback } from 'react';\nimport { usePhoneNumberVerificationSetTimer, useVerifyEmail } from '@deriv/hooks';\nimport { Button, CaptionText } from '@deriv-com/quill-ui';\nimport { Localize, useTranslations } from '@deriv-com/translations';\n\ntype TResendCodeTimer = {\n    is_button_disabled: boolean;\n    should_show_resend_code_button: boolean;\n    setIsButtonDisabled: (value: boolean) => void;\n    setShouldShowDidntGetTheCodeModal: (value: boolean) => void;\n    clearOtpValue: () => void;\n    reInitializeGetSettings: () => void;\n};\nconst ResendCodeTimer = ({\n    is_button_disabled,\n    should_show_resend_code_button,\n    clearOtpValue,\n    setIsButtonDisabled,\n    setShouldShowDidntGetTheCodeModal,\n    reInitializeGetSettings,\n}: TResendCodeTimer) => {\n    // @ts-expect-error this for now\n    const { sendPhoneNumberVerifyEmail, WS, error } = useVerifyEmail('phone_number_verification');\n    const { is_request_button_disabled, next_email_otp_request_timer, next_phone_otp_request_timer } =\n        usePhoneNumberVerificationSetTimer();\n    const { localize } = useTranslations();\n\n    React.useEffect(() => {\n        if (WS.isSuccess || error) reInitializeGetSettings();\n    }, [WS.isSuccess, reInitializeGetSettings, error]);\n\n    const resendCode = () => {\n        if (should_show_resend_code_button) {\n            clearOtpValue();\n            setIsButtonDisabled(true);\n            sendPhoneNumberVerifyEmail();\n        } else {\n            setShouldShowDidntGetTheCodeModal(true);\n        }\n    };\n\n    const resendCodeTimer = () => {\n        let resendCodeTimer = '';\n        if (next_email_otp_request_timer) {\n            next_email_otp_request_timer < 60\n                ? (resendCodeTimer = `${localize(' in ')}${next_email_otp_request_timer}s`)\n                : (resendCodeTimer = `${localize(' in ')}${Math.round(next_email_otp_request_timer / 60)}m`);\n        } else {\n            resendCodeTimer = '';\n        }\n\n        return resendCodeTimer;\n    };\n\n    const didntGetACodeTimer = () => {\n        let didntGetACodeTimer = '';\n        if (next_phone_otp_request_timer) {\n            next_phone_otp_request_timer < 60\n                ? (didntGetACodeTimer = ` (${next_phone_otp_request_timer}s)`)\n                : (didntGetACodeTimer = ` (${\n                      next_phone_otp_request_timer && Math.round(next_phone_otp_request_timer / 60)\n                  }m)`);\n        } else {\n            didntGetACodeTimer = '';\n        }\n\n        return didntGetACodeTimer;\n    };\n\n    const isButtonDisabled = useCallback(() => {\n        const disable_resend_code_button = !!next_email_otp_request_timer || is_button_disabled;\n        const disable_didnt_get_a_code_button =\n            !!next_phone_otp_request_timer || is_button_disabled || is_request_button_disabled;\n\n        return should_show_resend_code_button ? disable_resend_code_button : disable_didnt_get_a_code_button;\n    }, [\n        should_show_resend_code_button,\n        next_email_otp_request_timer,\n        next_phone_otp_request_timer,\n        is_button_disabled,\n        is_request_button_disabled,\n    ]);\n\n    return (\n        <Button variant='tertiary' onClick={resendCode} disabled={isButtonDisabled()} color='black'>\n            <CaptionText bold underlined>\n                {should_show_resend_code_button ? (\n                    <Localize\n                        i18n_default_text='Resend code{{resendCode}}'\n                        values={{\n                            resendCode: resendCodeTimer(),\n                        }}\n                    />\n                ) : (\n                    <Localize\n                        i18n_default_text=\"Didn't get the code?{{resendCode}}\"\n                        values={{\n                            resendCode: didntGetACodeTimer(),\n                        }}\n                    />\n                )}\n            </CaptionText>\n        </Button>\n    );\n};\n\nexport default ResendCodeTimer;\n","import { useEffect } from 'react';\nimport { TSocketError } from '@deriv/api/types';\nimport { VERIFICATION_SERVICES } from '@deriv/shared';\nimport { useTranslations, Localize } from '@deriv-com/translations';\nimport { Modal } from '@deriv-com/quill-ui';\nimport { useDevice } from '@deriv-com/ui';\nimport { convertPhoneTypeDisplay } from '../../../Helpers/utils';\n\ntype TDidntGetTheCodeModal = {\n    phone_verification_type: string;\n    should_show_didnt_get_the_code_modal: boolean;\n    setIsButtonDisabled: (value: boolean) => void;\n    setShouldShowDidntGetTheCodeModal: (value: boolean) => void;\n    requestOnSMS: () => void;\n    requestOnWhatsApp: () => void;\n    clearOtpValue: () => void;\n    is_email_verified: boolean;\n    email_otp_error: TSocketError<'phone_number_challenge'> | null;\n    setOtpVerification: (value: { show_otp_verification: boolean; phone_verification_type: string }) => void;\n    reInitializeGetSettings: () => void;\n};\n\nconst DidntGetTheCodeModal = ({\n    should_show_didnt_get_the_code_modal,\n    setShouldShowDidntGetTheCodeModal,\n    setIsButtonDisabled,\n    reInitializeGetSettings,\n    requestOnSMS,\n    requestOnWhatsApp,\n    clearOtpValue,\n    phone_verification_type,\n    is_email_verified,\n    email_otp_error,\n    setOtpVerification,\n}: TDidntGetTheCodeModal) => {\n    const { isMobile } = useDevice();\n    const { localize } = useTranslations();\n\n    useEffect(() => {\n        if (is_email_verified || email_otp_error) reInitializeGetSettings();\n    }, [is_email_verified, email_otp_error, reInitializeGetSettings]);\n\n    const setDidntGetACodeButtonDisabled = () => {\n        setIsButtonDisabled(true);\n    };\n\n    const handleResendCode = () => {\n        clearOtpValue();\n        setDidntGetACodeButtonDisabled();\n        phone_verification_type === VERIFICATION_SERVICES.SMS ? requestOnSMS() : requestOnWhatsApp();\n        setOtpVerification({ show_otp_verification: true, phone_verification_type });\n        setShouldShowDidntGetTheCodeModal(false);\n    };\n\n    const handleChangeOTPVerification = () => {\n        clearOtpValue();\n        setDidntGetACodeButtonDisabled();\n        const changed_phone_verification_type =\n            phone_verification_type === VERIFICATION_SERVICES.SMS\n                ? VERIFICATION_SERVICES.WHATSAPP\n                : VERIFICATION_SERVICES.SMS;\n\n        phone_verification_type === VERIFICATION_SERVICES.SMS ? requestOnWhatsApp() : requestOnSMS();\n\n        setOtpVerification({\n            show_otp_verification: true,\n            phone_verification_type: changed_phone_verification_type,\n        });\n        setShouldShowDidntGetTheCodeModal(false);\n    };\n\n    return (\n        <Modal\n            isMobile={isMobile}\n            showHandleBar\n            isOpened={should_show_didnt_get_the_code_modal}\n            isNonExpandable\n            shouldCloseModalOnSwipeDown\n            showSecondaryButton\n            primaryButtonCallback={handleResendCode}\n            secondaryButtonCallback={handleChangeOTPVerification}\n            primaryButtonLabel={<Localize i18n_default_text='Resend code' />}\n            buttonColor='coral'\n            secondaryButtonLabel={\n                <Localize\n                    i18n_default_text='Send code via {{phone_verification_type}}'\n                    values={{\n                        phone_verification_type: localize(\n                            convertPhoneTypeDisplay(\n                                phone_verification_type === VERIFICATION_SERVICES.SMS\n                                    ? VERIFICATION_SERVICES.WHATSAPP\n                                    : VERIFICATION_SERVICES.SMS\n                            )\n                        ),\n                    }}\n                />\n            }\n            showCrossIcon\n            toggleModal={() => setShouldShowDidntGetTheCodeModal(false)}\n        >\n            <Modal.Header title={<Localize i18n_default_text=\"Didn't receive a code?\" />} />\n        </Modal>\n    );\n};\n\nexport default DidntGetTheCodeModal;\n","import { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { useGrowthbookGetFeatureValue, usePhoneVerificationAnalytics } from '@deriv/hooks';\nimport { routes } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { Modal, Text } from '@deriv-com/quill-ui';\nimport { Localize } from '@deriv-com/translations';\nimport { useDevice } from '@deriv-com/ui';\n\ntype TPhoneNumberVerifiedModal = {\n    should_show_phone_number_verified_modal: boolean;\n};\n\nconst PhoneNumberVerifiedModal = observer(({ should_show_phone_number_verified_modal }: TPhoneNumberVerifiedModal) => {\n    const history = useHistory();\n    const previous_route = localStorage.getItem('routes_from_notification_to_pnv');\n    const should_route_back_to_previous =\n        previous_route !== routes.personal_details && previous_route !== routes.phone_verification && !!previous_route;\n\n    const handleDoneButton = () => {\n        localStorage.removeItem('routes_from_notification_to_pnv');\n\n        should_route_back_to_previous ? history.push(previous_route) : history.push(routes.traders_hub);\n    };\n    const [isCountryCodeDropdownEnabled] = useGrowthbookGetFeatureValue({\n        featureFlag: 'enable_country_code_dropdown',\n    });\n\n    const { isMobile } = useDevice();\n    const {\n        ui,\n        client: { account_settings },\n    } = useStore();\n    const { setIsPhoneVerificationCompleted, setShouldShowPhoneNumberOTP } = ui;\n    const { trackPhoneVerificationEvents } = usePhoneVerificationAnalytics();\n\n    useEffect(() => {\n        if (should_show_phone_number_verified_modal) {\n            trackPhoneVerificationEvents({\n                action: 'open',\n                subform_name: 'verification_successful',\n            });\n            setShouldShowPhoneNumberOTP(false);\n            setIsPhoneVerificationCompleted(true);\n        }\n    }, [should_show_phone_number_verified_modal, trackPhoneVerificationEvents]);\n\n    return (\n        <Modal\n            isMobile={isMobile}\n            isOpened={should_show_phone_number_verified_modal}\n            showHandleBar={false}\n            showCrossIcon={false}\n            isNonExpandable\n            buttonColor='coral'\n            primaryButtonCallback={handleDoneButton}\n            primaryButtonLabel={<Localize i18n_default_text='OK' />}\n            disableCloseOnOverlay\n        >\n            <Modal.Header title={<Localize i18n_default_text='Phone number verified' />} />\n            <Modal.Body>\n                <div className='phone-verification__verified-modal--contents'>\n                    <div className='phone-verification__verified-modal--contents__phone-number-container'>\n                        <div className='phone-verification__verified-modal--contents__phone-number-container__phone-number'>\n                            {isCountryCodeDropdownEnabled\n                                ? //@ts-expect-error account_settings.calling_country_code is not defined in GetSettings type\n                                  `+${account_settings?.calling_country_code}${account_settings?.phone}`\n                                : `${account_settings?.phone}`}\n                        </div>\n                        &nbsp;\n                        <Text>\n                            <Localize i18n_default_text=' is verified as your phone number.' />\n                        </Text>\n                    </div>\n                </div>\n            </Modal.Body>\n        </Modal>\n    );\n});\n\nexport default PhoneNumberVerifiedModal;\n","import { Modal, Text } from '@deriv-com/quill-ui';\nimport { Localize } from '@deriv-com/translations';\nimport { useDevice } from '@deriv-com/ui';\nimport { routes } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { useHistory } from 'react-router';\n\ntype TCoolDownPeriodModal = {\n    show_cool_down_period_modal: boolean;\n    setShowCoolDownPeriodModal: (value: boolean) => void;\n};\n\nconst CoolDownPeriodModal = observer(\n    ({ show_cool_down_period_modal, setShowCoolDownPeriodModal }: TCoolDownPeriodModal) => {\n        const { ui } = useStore();\n        const history = useHistory();\n        const previous_route = localStorage.getItem('routes_from_notification_to_pnv');\n        const should_route_back_to_previous =\n            previous_route !== routes.personal_details &&\n            previous_route !== routes.phone_verification &&\n            !!previous_route;\n\n        const { isMobile } = useDevice();\n        const { setIsForcedToExitPnv, setShouldShowPhoneNumberOTP } = ui;\n        const handleCloseCoolDownPeriodModal = () => {\n            setShouldShowPhoneNumberOTP(false);\n            setIsForcedToExitPnv(false);\n            setShowCoolDownPeriodModal(false);\n            localStorage.removeItem('routes_from_notification_to_pnv');\n\n            should_route_back_to_previous ? history.push(previous_route) : history.push(routes.traders_hub);\n        };\n        return (\n            <Modal\n                isOpened={show_cool_down_period_modal}\n                isMobile={isMobile}\n                showCrossIcon={false}\n                showHandleBar={false}\n                isNonExpandable\n                primaryButtonLabel={<Localize i18n_default_text='OK' />}\n                primaryButtonCallback={handleCloseCoolDownPeriodModal}\n                disableCloseOnOverlay\n                buttonColor='coral'\n            >\n                <Modal.Header title={<Localize i18n_default_text='OTP limit reached' />} />\n                <Modal.Body>\n                    <Text>\n                        <Localize i18n_default_text='Request a new OTP after 10 minutes.' />\n                    </Text>\n                </Modal.Body>\n            </Modal>\n        );\n    }\n);\n\nexport default CoolDownPeriodModal;\n","import { useEffect, useState, useCallback, Fragment } from 'react';\nimport {\n    useGrowthbookGetFeatureValue,\n    usePhoneNumberVerificationSetTimer,\n    usePhoneVerificationAnalytics,\n    useSendOTPVerificationCode,\n    useSettings,\n} from '@deriv/hooks';\nimport { Text, InputGroupButton, Button } from '@deriv-com/quill-ui';\nimport { observer, useStore } from '@deriv/stores';\nimport { Localize, useTranslations } from '@deriv-com/translations';\nimport { convertPhoneTypeDisplay } from '../../../Helpers/utils';\nimport ResendCodeTimer from './resend-code-timer';\nimport DidntGetTheCodeModal from './didnt-get-the-code-modal';\nimport PhoneNumberVerifiedModal from './phone-number-verified-modal';\nimport CoolDownPeriodModal from './cool-down-period-modal';\nimport { useIsMounted } from '@deriv/shared';\n\ntype TOTPVerification = {\n    phone_verification_type: string;\n    setOtpVerification: (value: { show_otp_verification: boolean; phone_verification_type: string }) => void;\n};\n\nconst OTPVerification = observer(({ phone_verification_type, setOtpVerification }: TOTPVerification) => {\n    const { client, ui } = useStore();\n    const { setVerificationCode, is_authorize } = client;\n    const { data: account_settings, invalidate } = useSettings();\n    const [should_show_didnt_get_the_code_modal, setShouldShowDidntGetTheCodeModal] = useState(false);\n    const [otp, setOtp] = useState('');\n    const [is_button_disabled, setIsButtonDisabled] = useState(false);\n    const { trackPhoneVerificationEvents } = usePhoneVerificationAnalytics();\n    const { localize } = useTranslations();\n    const isMounted = useIsMounted();\n    const [isCountryCodeDropdownEnabled] = useGrowthbookGetFeatureValue({\n        featureFlag: 'enable_country_code_dropdown',\n    });\n\n    const {\n        sendPhoneOTPVerification,\n        phone_otp_error_message,\n        setPhoneOtpErrorMessage,\n        is_phone_number_verified,\n        is_email_verified,\n        show_cool_down_period_modal,\n        setShowCoolDownPeriodModal,\n        sendEmailOTPVerification,\n        requestOnSMS,\n        requestOnWhatsApp,\n        email_otp_error,\n        reset,\n    } = useSendOTPVerificationCode();\n    const {\n        setNextEmailOtpRequestTimer,\n        is_email_otp_timer_loading,\n        setNextPhoneOtpRequestTimer,\n        is_phone_otp_timer_loading,\n    } = usePhoneNumberVerificationSetTimer();\n    const { should_show_phone_number_otp, setIsForcedToExitPnv } = ui;\n\n    const reInitializeGetSettings = useCallback(() => {\n        invalidate('get_settings').then(() => {\n            if (isMounted()) {\n                setIsButtonDisabled(false);\n            }\n        });\n    }, [invalidate]);\n\n    useEffect(() => {\n        if (email_otp_error) {\n            trackPhoneVerificationEvents({\n                action: 'error',\n                subform_name: should_show_phone_number_otp ? 'verify_phone_otp_screen' : 'verify_email_screen',\n                // @ts-expect-error will remove once solved\n                error_code: email_otp_error.code,\n            });\n        }\n    }, [email_otp_error, trackPhoneVerificationEvents, should_show_phone_number_otp]);\n\n    useEffect(() => {\n        if (should_show_phone_number_otp) {\n            trackPhoneVerificationEvents({\n                action: 'open',\n                subform_name: 'verify_phone_otp_screen',\n            });\n        } else {\n            trackPhoneVerificationEvents({\n                action: 'open',\n                subform_name: 'verify_email_screen',\n            });\n        }\n    }, [should_show_phone_number_otp, trackPhoneVerificationEvents]);\n\n    useEffect(() => {\n        if (is_authorize) {\n            setIsButtonDisabled(true);\n            reInitializeGetSettings();\n        }\n    }, [reInitializeGetSettings, is_authorize]);\n\n    useEffect(() => {\n        if (is_phone_number_verified) {\n            setIsForcedToExitPnv(true);\n        } else if (is_email_verified && !should_show_phone_number_otp) {\n            setVerificationCode(otp, 'phone_number_verification');\n            setOtpVerification({ show_otp_verification: false, phone_verification_type: '' });\n        }\n    }, [is_phone_number_verified, is_email_verified, setOtpVerification, should_show_phone_number_otp]);\n\n    const clearOtpValue = () => {\n        setOtp('');\n        setPhoneOtpErrorMessage('');\n        should_show_phone_number_otp ? setNextPhoneOtpRequestTimer(undefined) : setNextEmailOtpRequestTimer(undefined);\n        reset();\n    };\n\n    const handleGetOtpValue = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setOtp(e.target.value);\n        setPhoneOtpErrorMessage('');\n    };\n\n    const handleVerifyOTP = () => {\n        if (should_show_phone_number_otp) {\n            trackPhoneVerificationEvents({\n                action: 'click_cta',\n                subform_name: 'verify_phone_otp_screen',\n            });\n            sendPhoneOTPVerification(otp);\n        } else {\n            trackPhoneVerificationEvents({\n                action: 'click_cta',\n                subform_name: 'verify_email_screen',\n            });\n            sendEmailOTPVerification(otp);\n        }\n    };\n\n    const isTimerLoading = () => {\n        return should_show_phone_number_otp ? is_phone_otp_timer_loading : is_email_otp_timer_loading;\n    };\n\n    return (\n        <>\n            <CoolDownPeriodModal\n                show_cool_down_period_modal={show_cool_down_period_modal}\n                setShowCoolDownPeriodModal={setShowCoolDownPeriodModal}\n            />\n            <PhoneNumberVerifiedModal should_show_phone_number_verified_modal={is_phone_number_verified} />\n            {should_show_phone_number_otp && (\n                <DidntGetTheCodeModal\n                    clearOtpValue={clearOtpValue}\n                    setIsButtonDisabled={setIsButtonDisabled}\n                    reInitializeGetSettings={reInitializeGetSettings}\n                    requestOnSMS={requestOnSMS}\n                    requestOnWhatsApp={requestOnWhatsApp}\n                    email_otp_error={email_otp_error}\n                    is_email_verified={is_email_verified}\n                    should_show_didnt_get_the_code_modal={should_show_didnt_get_the_code_modal}\n                    setShouldShowDidntGetTheCodeModal={setShouldShowDidntGetTheCodeModal}\n                    phone_verification_type={phone_verification_type}\n                    setOtpVerification={setOtpVerification}\n                />\n            )}\n            <Text bold>\n                {should_show_phone_number_otp ? (\n                    <Localize i18n_default_text='Step 3 of 3: Verify your number' />\n                ) : (\n                    <Localize i18n_default_text='Step 1 of 3: Email verification needed' />\n                )}\n            </Text>\n            <div className='phone-verification__card--email-verification-content'>\n                {should_show_phone_number_otp ? (\n                    <Text size='sm'>\n                        <Localize\n                            i18n_default_text='Enter the 6-digit code sent to you via {{phone_verification_type}} at <1>{{users_phone_number}}</1>. <0></0>'\n                            values={{\n                                phone_verification_type: localize(convertPhoneTypeDisplay(phone_verification_type)),\n                                users_phone_number: isCountryCodeDropdownEnabled\n                                    ? //@ts-expect-error account_settings.calling_country_code is not defined in GetSettings type\n                                      `+${account_settings?.calling_country_code}${account_settings?.phone}`\n                                    : `${account_settings?.phone}`,\n                            }}\n                            components={[\n                                <Button\n                                    key={0}\n                                    variant='tertiary'\n                                    label={localize('Edit number')}\n                                    size='sm'\n                                    color='black-white'\n                                    onClick={() =>\n                                        setOtpVerification({ show_otp_verification: false, phone_verification_type })\n                                    }\n                                />,\n                                <span\n                                    key={1}\n                                    className='phone-verification__card--email-verification-content__phone-number'\n                                />,\n                            ]}\n                        />\n                    </Text>\n                ) : (\n                    <Fragment>\n                        <Text size='sm'>\n                            <Localize\n                                i18n_default_text=\"We've sent a verification code to <0>{{users_email}}</0>.\"\n                                values={{ users_email: account_settings?.email }}\n                                components={[<strong key={0} />]}\n                            />\n                        </Text>\n                        <Text size='sm'>\n                            <Localize i18n_default_text=\"Enter the code below to verify it's you.\" />\n                        </Text>\n                    </Fragment>\n                )}\n            </div>\n            <div className='phone-verification__card--email-verification-otp-container'>\n                <InputGroupButton\n                    status={phone_otp_error_message ? 'error' : 'neutral'}\n                    buttonLabel={localize('Verify')}\n                    label={should_show_phone_number_otp ? localize('OTP code') : localize('Verification code')}\n                    buttonCallback={handleVerifyOTP}\n                    onKeyDown={(e: React.KeyboardEvent<HTMLInputElement>) => {\n                        if (e.key === 'Enter') {\n                            handleVerifyOTP();\n                        }\n                    }}\n                    inputMode='numeric'\n                    buttonColor='coral'\n                    onChange={handleGetOtpValue}\n                    message={phone_otp_error_message}\n                    value={otp}\n                    type='number'\n                    maxLength={6}\n                    buttonDisabled={otp.length < 6}\n                />\n                <ResendCodeTimer\n                    clearOtpValue={clearOtpValue}\n                    is_button_disabled={is_button_disabled || isTimerLoading()}\n                    setIsButtonDisabled={setIsButtonDisabled}\n                    should_show_resend_code_button={!should_show_phone_number_otp}\n                    setShouldShowDidntGetTheCodeModal={setShouldShowDidntGetTheCodeModal}\n                    reInitializeGetSettings={reInitializeGetSettings}\n                />\n            </div>\n        </>\n    );\n});\n\nexport default OTPVerification;\n","import { useHistory } from 'react-router';\nimport { usePhoneNumberVerificationSessionTimer, usePhoneVerificationAnalytics } from '@deriv/hooks';\nimport { routes } from '@deriv/shared';\nimport { Modal, Text } from '@deriv-com/quill-ui';\nimport { Localize, useTranslations } from '@deriv-com/translations';\nimport { useDevice } from '@deriv-com/ui';\nimport { observer, useStore } from '@deriv/stores';\nimport { useEffect } from 'react';\n\nconst SessionTimeoutModal = observer(({ is_at_otp_verification }: { is_at_otp_verification: boolean }) => {\n    const { isMobile } = useDevice();\n    const history = useHistory();\n    const { localize } = useTranslations();\n    const { should_show_session_timeout_modal } = usePhoneNumberVerificationSessionTimer();\n    const { ui } = useStore();\n    const {\n        is_phone_verification_completed,\n        setShouldShowPhoneNumberOTP,\n        setIsForcedToExitPnv,\n        should_show_phone_number_otp,\n    } = ui;\n    const { trackPhoneVerificationEvents } = usePhoneVerificationAnalytics();\n\n    const getSubformName = () => {\n        if (is_at_otp_verification) {\n            return should_show_phone_number_otp ? 'verify_phone_otp_screen' : 'verify_email_screen';\n        }\n        return 'verify_phone_screen';\n    };\n\n    useEffect(() => {\n        if (should_show_session_timeout_modal) {\n            setIsForcedToExitPnv(true);\n            trackPhoneVerificationEvents({\n                action: 'open_session_expired_popup',\n                subform_name: getSubformName(),\n            });\n        }\n    }, [should_show_session_timeout_modal, trackPhoneVerificationEvents]);\n\n    const redirectBackToPersonalDetails = () => {\n        setIsForcedToExitPnv(false);\n        setShouldShowPhoneNumberOTP(false);\n        history.push(routes.personal_details);\n    };\n\n    return (\n        <Modal\n            isMobile={isMobile}\n            isOpened={should_show_session_timeout_modal && !is_phone_verification_completed}\n            showCrossIcon={false}\n            showHandleBar={false}\n            isNonExpandable\n            primaryButtonCallback={redirectBackToPersonalDetails}\n            primaryButtonLabel={<Localize i18n_default_text='OK' />}\n            buttonColor='coral'\n            title={localize('Session Expired')}\n            disableCloseOnOverlay\n        >\n            <Modal.Header title={<Localize i18n_default_text='Session expired' />} />\n            <Modal.Body>\n                <Text>\n                    <Localize i18n_default_text='Restart your phone number verification.' />\n                </Text>\n            </Modal.Body>\n        </Modal>\n    );\n});\n\nexport default SessionTimeoutModal;\n","import { useEffect } from 'react';\nimport { useHistory } from 'react-router';\nimport { usePhoneNumberVerificationSetTimer, useSettings, useVerifyEmail } from '@deriv/hooks';\nimport { Modal, Text } from '@deriv-com/quill-ui';\nimport { routes } from '@deriv/shared';\nimport { Localize, useTranslations } from '@deriv-com/translations';\nimport { useDevice } from '@deriv-com/ui';\nimport { observer, useStore } from '@deriv/stores';\n\ntype TVerificationLinkExpiredModal = {\n    should_show_verification_link_expired_modal: boolean;\n    setShouldShowVerificationLinkExpiredModal: (value: boolean) => void;\n};\n\nconst VerificationLinkExpiredModal = observer(\n    ({\n        should_show_verification_link_expired_modal,\n        setShouldShowVerificationLinkExpiredModal,\n    }: TVerificationLinkExpiredModal) => {\n        const history = useHistory();\n        const { ui } = useStore();\n        const { setIsForcedToExitPnv } = ui;\n        //@ts-expect-error ignore this until we add it in GetSettings api types\n        const { sendPhoneNumberVerifyEmail, WS } = useVerifyEmail('phone_number_verification');\n        const { next_email_otp_request_timer, is_email_otp_timer_loading, setNextEmailOtpRequestTimer } =\n            usePhoneNumberVerificationSetTimer();\n        const { invalidate } = useSettings();\n        const { isMobile } = useDevice();\n        const { localize } = useTranslations();\n\n        const handleCancelButton = () => {\n            setIsForcedToExitPnv(false);\n            setShouldShowVerificationLinkExpiredModal(false);\n            history.push(routes.personal_details);\n        };\n\n        const handleSendNewLinkButton = () => {\n            sendPhoneNumberVerifyEmail();\n            setNextEmailOtpRequestTimer(undefined);\n            setIsForcedToExitPnv(false);\n        };\n\n        const sendNewLinkTimer = () => {\n            let sendNewLinkTimer = '';\n            if (next_email_otp_request_timer) {\n                next_email_otp_request_timer < 60\n                    ? (sendNewLinkTimer = `${localize(' in ')}${next_email_otp_request_timer}s`)\n                    : (sendNewLinkTimer = `${localize(' in ')}${Math.round(next_email_otp_request_timer / 60)}m`);\n            } else {\n                sendNewLinkTimer = '';\n            }\n\n            return sendNewLinkTimer;\n        };\n\n        useEffect(() => {\n            if (WS.isSuccess) invalidate('get_settings').then(() => setShouldShowVerificationLinkExpiredModal(false));\n        }, [WS.isSuccess, invalidate]);\n\n        return (\n            <Modal\n                isMobile={isMobile}\n                isOpened={should_show_verification_link_expired_modal}\n                isPrimaryButtonDisabled={!!next_email_otp_request_timer || is_email_otp_timer_loading}\n                buttonColor='coral'\n                showCrossIcon={false}\n                showHandleBar={false}\n                disableCloseOnOverlay\n                isNonExpandable\n                primaryButtonCallback={handleSendNewLinkButton}\n                primaryButtonLabel={\n                    <Localize\n                        i18n_default_text='Send new link{{next_email_attempt_timestamp}}'\n                        values={{ next_email_attempt_timestamp: sendNewLinkTimer() }}\n                    />\n                }\n                toggleModal={() => setShouldShowVerificationLinkExpiredModal(false)}\n                showSecondaryButton\n                secondaryButtonLabel={<Localize i18n_default_text='Cancel' />}\n                secondaryButtonCallback={handleCancelButton}\n            >\n                <Modal.Header title={<Localize i18n_default_text='Link expired' />} />\n                <Modal.Body>\n                    <div className='phone-verification__cancel-modal--contents'>\n                        <Text>\n                            <Localize i18n_default_text='Request a new verification link via email.' />\n                        </Text>\n                    </div>\n                </Modal.Body>\n            </Modal>\n        );\n    }\n);\n\nexport default VerificationLinkExpiredModal;\n","import { j as r } from \"../../../jsx-runtime-DmTjM30f.js\";\nimport { c as o } from \"../../../clsx-OuTLNxxd.js\";\nimport * as e from \"react\";\nimport { forwardRef as n } from \"react\";\nimport { F as s } from \"../../../LabelPairedCircleInfoSmRegularIcon-CnUvtxa5.js\";\nimport '../../../assets/index23.css';const h = ({ title: a, titleId: l, ...t }, c) => e.createElement(\n  \"svg\",\n  { xmlns: \"http://www.w3.org/2000/svg\", width: 14, height: 22, viewBox: \"0 0 14 22\", role: \"img\", ref: c, \"aria-labelledby\": l, ...t },\n  a ? e.createElement(\"title\", { id: l }, a) : null,\n  e.createElement(\n    \"g\",\n    null,\n    e.createElement(\"path\", { d: \"M7 4.625a6.11 6.11 0 0 0-5.305 3.063c-1.12 1.914-1.12 4.238 0 6.125C2.79 15.727 4.785 16.875 7 16.875a6.04 6.04 0 0 0 5.277-3.062c1.121-1.887 1.121-4.211 0-6.126A6.1 6.1 0 0 0 7 4.626M7 17.75a6.96 6.96 0 0 1-6.07-3.5c-1.258-2.16-1.258-4.812 0-7A7.02 7.02 0 0 1 7 3.75c2.488 0 4.785 1.34 6.043 3.5 1.258 2.188 1.258 4.84 0 7A6.95 6.95 0 0 1 7 17.75m2.926-8.422-3.5 3.5a.463.463 0 0 1-.63 0l-1.75-1.75a.463.463 0 0 1 0-.629.463.463 0 0 1 .63 0l1.449 1.45 3.172-3.2a.463.463 0 0 1 .629 0 .463.463 0 0 1 0 .63\" })\n  ),\n  e.createElement(\n    \"defs\",\n    null,\n    e.createElement(\n      \"clipPath\",\n      { id: \"9dd3266b3a0417e9963724a864a443a9__a\" },\n      e.createElement(\"path\", { d: \"M0 0h14v22H0z\" })\n    )\n  )\n), g = n(h), E = ({ title: a, titleId: l, ...t }, c) => e.createElement(\n  \"svg\",\n  { xmlns: \"http://www.w3.org/2000/svg\", width: 14, height: 22, viewBox: \"0 0 14 22\", role: \"img\", ref: c, \"aria-labelledby\": l, ...t },\n  a ? e.createElement(\"title\", { id: l }, a) : null,\n  e.createElement(\n    \"g\",\n    null,\n    e.createElement(\"path\", { d: \"M7 5.063c-2.05 0-3.91 1.093-4.95 2.843a5.71 5.71 0 0 0 0 5.688A5.7 5.7 0 0 0 7 16.438a5.68 5.68 0 0 0 4.922-2.844 5.71 5.71 0 0 0 0-5.688C10.882 6.156 9.023 5.063 7 5.063M7 17.75a6.96 6.96 0 0 1-6.07-3.5c-1.258-2.16-1.258-4.812 0-7A7.02 7.02 0 0 1 7 3.75c2.488 0 4.785 1.34 6.043 3.5 1.258 2.188 1.258 4.84 0 7A6.95 6.95 0 0 1 7 17.75m3.09-8.285-3.5 3.5c-.274.273-.684.273-.93 0l-1.75-1.75a.6.6 0 0 1 0-.902c.246-.274.656-.274.93 0l1.285 1.285L9.16 8.562c.246-.273.656-.273.93 0a.644.644 0 0 1 0 .903\" })\n  ),\n  e.createElement(\n    \"defs\",\n    null,\n    e.createElement(\n      \"clipPath\",\n      { id: \"9667f2bfeac4e36d18c79ef42cdab30a__a\" },\n      e.createElement(\"path\", { d: \"M0 0h14v22H0z\" })\n    )\n  )\n), w = n(E), f = ({ title: a, titleId: l, ...t }, c) => e.createElement(\n  \"svg\",\n  { xmlns: \"http://www.w3.org/2000/svg\", width: 14, height: 22, viewBox: \"0 0 14 22\", role: \"img\", ref: c, \"aria-labelledby\": l, ...t },\n  a ? e.createElement(\"title\", { id: l }, a) : null,\n  e.createElement(\n    \"g\",\n    null,\n    e.createElement(\"path\", { d: \"M.93 15.262c-.055.082-.055.164-.055.246 0 .273.219.52.492.52h11.238c.274 0 .52-.247.52-.52a.44.44 0 0 0-.082-.246L7.547 5.828A.66.66 0 0 0 7 5.5a.67.67 0 0 0-.574.328zm-.766-.438L5.66 5.391A1.57 1.57 0 0 1 7 4.625c.52 0 1.04.3 1.313.766l5.496 9.433c.109.192.191.438.191.684 0 .765-.629 1.367-1.395 1.367H1.367A1.354 1.354 0 0 1 0 15.508c0-.246.055-.492.164-.684M7 8.125a.47.47 0 0 1 .438.438v3.5A.45.45 0 0 1 7 12.5a.43.43 0 0 1-.437-.437v-3.5A.45.45 0 0 1 7 8.124m-.656 6.125c0-.355.273-.656.656-.656.355 0 .656.3.656.656 0 .383-.3.656-.656.656a.63.63 0 0 1-.656-.656\" })\n  ),\n  e.createElement(\n    \"defs\",\n    null,\n    e.createElement(\n      \"clipPath\",\n      { id: \"0c2f8e90d9f75dcf30ea1d2e60f5d0d9__a\" },\n      e.createElement(\"path\", { d: \"M0 0h14v22H0z\" })\n    )\n  )\n), b = n(f), v = ({ title: a, titleId: l, ...t }, c) => e.createElement(\n  \"svg\",\n  { xmlns: \"http://www.w3.org/2000/svg\", width: 14, height: 22, viewBox: \"0 0 14 22\", role: \"img\", ref: c, \"aria-labelledby\": l, ...t },\n  a ? e.createElement(\"title\", { id: l }, a) : null,\n  e.createElement(\n    \"g\",\n    null,\n    e.createElement(\"path\", { d: \"m6.781 6.074-5.414 8.887c-.054.082-.054.137-.054.219 0 .218.164.383.382.383h10.582c.22 0 .41-.165.41-.383 0-.082-.027-.137-.082-.22L7.192 6.075A.21.21 0 0 0 7 5.938c-.11 0-.164.054-.219.136m-1.12-.683A1.57 1.57 0 0 1 7 4.625c.52 0 1.04.3 1.313.766l5.414 8.886c.164.274.273.575.273.903 0 .93-.766 1.695-1.723 1.695H1.695C.765 16.875 0 16.109 0 15.18q0-.493.246-.903zm2.214 8.422c0 .492-.41.874-.875.874a.864.864 0 0 1-.875-.874c0-.465.383-.876.875-.876a.9.9 0 0 1 .875.876M7.656 8.78v2.625c0 .383-.3.656-.656.656a.63.63 0 0 1-.656-.656V8.781c0-.355.273-.656.656-.656.355 0 .656.3.656.656\" })\n  ),\n  e.createElement(\n    \"defs\",\n    null,\n    e.createElement(\n      \"clipPath\",\n      { id: \"48f2db37f605b08a690e0494ee27901d__a\" },\n      e.createElement(\"path\", { d: \"M0 0h14v22H0z\" })\n    )\n  )\n), p = n(v), u = ({ title: a, titleId: l, ...t }, c) => e.createElement(\n  \"svg\",\n  { xmlns: \"http://www.w3.org/2000/svg\", width: 14, height: 22, viewBox: \"0 0 14 22\", role: \"img\", ref: c, \"aria-labelledby\": l, ...t },\n  a ? e.createElement(\"title\", { id: l }, a) : null,\n  e.createElement(\n    \"g\",\n    null,\n    e.createElement(\"path\", { d: \"M7 4.625a6.11 6.11 0 0 0-5.305 3.063c-1.12 1.914-1.12 4.238 0 6.125C2.79 15.727 4.785 16.875 7 16.875a6.04 6.04 0 0 0 5.277-3.062c1.121-1.887 1.121-4.211 0-6.126A6.1 6.1 0 0 0 7 4.626M7 17.75a6.96 6.96 0 0 1-6.07-3.5c-1.258-2.16-1.258-4.812 0-7A7.02 7.02 0 0 1 7 3.75c2.488 0 4.785 1.34 6.043 3.5 1.258 2.188 1.258 4.84 0 7A6.95 6.95 0 0 1 7 17.75m0-10.5a.47.47 0 0 1 .438.438v3.5a.45.45 0 0 1-.438.437.43.43 0 0 1-.437-.437v-3.5A.45.45 0 0 1 7 7.25m.656 6.125c0 .383-.3.656-.656.656a.63.63 0 0 1-.656-.656c0-.355.273-.656.656-.656.355 0 .656.3.656.656\" })\n  ),\n  e.createElement(\n    \"defs\",\n    null,\n    e.createElement(\n      \"clipPath\",\n      { id: \"a7482d221eb247f9f8bcd9c9acfe3778__a\" },\n      e.createElement(\"path\", { d: \"M0 0h14v22H0z\" })\n    )\n  )\n), x = n(u), _ = ({ title: a, titleId: l, ...t }, c) => e.createElement(\n  \"svg\",\n  { xmlns: \"http://www.w3.org/2000/svg\", width: 14, height: 22, viewBox: \"0 0 14 22\", role: \"img\", ref: c, \"aria-labelledby\": l, ...t },\n  a ? e.createElement(\"title\", { id: l }, a) : null,\n  e.createElement(\n    \"g\",\n    null,\n    e.createElement(\"path\", { d: \"M7 5.063c-2.05 0-3.91 1.093-4.95 2.843a5.71 5.71 0 0 0 0 5.688A5.7 5.7 0 0 0 7 16.438a5.68 5.68 0 0 0 4.922-2.844 5.71 5.71 0 0 0 0-5.688C10.882 6.156 9.023 5.063 7 5.063M7 17.75a6.96 6.96 0 0 1-6.07-3.5c-1.258-2.16-1.258-4.812 0-7A7.02 7.02 0 0 1 7 3.75c2.488 0 4.785 1.34 6.043 3.5 1.258 2.188 1.258 4.84 0 7A6.95 6.95 0 0 1 7 17.75m0-10.5c.355 0 .656.3.656.656v3.063c0 .383-.3.656-.656.656a.63.63 0 0 1-.656-.656V7.906c0-.355.273-.656.656-.656m.875 6.125c0 .492-.41.875-.875.875a.864.864 0 0 1-.875-.875c0-.465.383-.875.875-.875a.9.9 0 0 1 .875.875\" })\n  ),\n  e.createElement(\n    \"defs\",\n    null,\n    e.createElement(\n      \"clipPath\",\n      { id: \"899cb56538ebdf1d12f18f1e915b18f9__a\" },\n      e.createElement(\"path\", { d: \"M0 0h14v22H0z\" })\n    )\n  )\n), A = n(_), M = ({ title: a, titleId: l, ...t }, c) => e.createElement(\n  \"svg\",\n  { xmlns: \"http://www.w3.org/2000/svg\", width: 14, height: 22, viewBox: \"0 0 14 22\", role: \"img\", ref: c, \"aria-labelledby\": l, ...t },\n  a ? e.createElement(\"title\", { id: l }, a) : null,\n  e.createElement(\n    \"g\",\n    null,\n    e.createElement(\"path\", { d: \"M7 5.063c-2.05 0-3.91 1.093-4.95 2.843a5.71 5.71 0 0 0 0 5.688A5.7 5.7 0 0 0 7 16.438a5.68 5.68 0 0 0 4.922-2.844 5.71 5.71 0 0 0 0-5.688C10.882 6.156 9.023 5.063 7 5.063M7 17.75a6.96 6.96 0 0 1-6.07-3.5c-1.258-2.16-1.258-4.812 0-7A7.02 7.02 0 0 1 7 3.75c2.488 0 4.785 1.34 6.043 3.5 1.258 2.188 1.258 4.84 0 7A6.95 6.95 0 0 1 7 17.75m-1.094-4.812h.657v-1.75h-.657a.63.63 0 0 1-.656-.657c0-.355.273-.656.656-.656H7.22c.355 0 .656.3.656.656v2.406h.219c.355 0 .656.301.656.657 0 .383-.3.656-.656.656H5.906a.63.63 0 0 1-.656-.656c0-.356.273-.656.656-.656M7 9a.864.864 0 0 1-.875-.875c0-.465.383-.875.875-.875a.9.9 0 0 1 .875.875c0 .492-.41.875-.875.875\" })\n  ),\n  e.createElement(\n    \"defs\",\n    null,\n    e.createElement(\n      \"clipPath\",\n      { id: \"6bb7294d410046a35078a61ab3d31971__a\" },\n      e.createElement(\"path\", { d: \"M0 0h14v22H0z\" })\n    )\n  )\n), j = n(M), F = ({\n  icon: a,\n  size: l,\n  className: t,\n  isBold: c,\n  color: m\n}) => {\n  const i = {\n    error: {\n      bold: /* @__PURE__ */ r.jsx(p, {}),\n      regular: /* @__PURE__ */ r.jsx(b, {})\n    },\n    warning: {\n      bold: /* @__PURE__ */ r.jsx(A, {}),\n      regular: /* @__PURE__ */ r.jsx(x, {})\n    },\n    success: {\n      bold: /* @__PURE__ */ r.jsx(w, {}),\n      regular: /* @__PURE__ */ r.jsx(g, {})\n    },\n    info: {\n      bold: /* @__PURE__ */ r.jsx(j, {}),\n      regular: /* @__PURE__ */ r.jsx(s, {})\n    }\n  };\n  let d;\n  return m === \"custom\" ? d = a : d = i[m ?? \"success\"][c ? \"bold\" : \"regular\"], /* @__PURE__ */ r.jsx(r.Fragment, { children: a && m === \"custom\" ? /* @__PURE__ */ r.jsx(\n    \"div\",\n    {\n      className: o(\n        \"tag__icon\",\n        `tag__icon--${l}`,\n        t\n      ),\n      children: a\n    }\n  ) : /* @__PURE__ */ r.jsx(r.Fragment, { children: d && /* @__PURE__ */ r.jsx(\n    \"div\",\n    {\n      className: o(\n        \"tag__icon\",\n        `tag__color--${m}-svg`,\n        `tag__icon--${l}`\n      ),\n      children: d\n    }\n  ) }) });\n};\nexport {\n  F as TagIcon,\n  F as default\n};\n","import { j as o } from \"../../jsx-runtime-DmTjM30f.js\";\nimport { forwardRef as x } from \"react\";\nimport { c as g } from \"../../clsx-OuTLNxxd.js\";\nimport { CaptionText as n } from \"../Typography/caption/index.js\";\nimport \"../Typography/base.js\";\nimport \"../Typography/heading/index.js\";\nimport { Text as u } from \"../Typography/text/index.js\";\nimport { TagIcon as j } from \"./tagIcon/index.js\";\nconst _ = x(\n  ({\n    label: m,\n    className: e,\n    variant: s = \"fill\",\n    size: r = \"md\",\n    color: a = \"success\",\n    isBold: c = !1,\n    icon: d,\n    iconClassName: i,\n    showIcon: l = !0,\n    ...p\n  }, f) => {\n    const t = s === \"custom\" ? \"custom\" : a;\n    return /* @__PURE__ */ o.jsxs(\n      \"div\",\n      {\n        className: g(\n          e,\n          \"tag\",\n          `tag__size-${r}`,\n          `tag__color--${t}`,\n          `tag__color--${t}-${s}`\n        ),\n        style: s === \"custom\" ? { backgroundColor: a } : void 0,\n        ...p,\n        ref: f,\n        children: [\n          l && /* @__PURE__ */ o.jsx(\n            j,\n            {\n              isBold: c,\n              className: i,\n              icon: d,\n              color: t,\n              size: r\n            }\n          ),\n          typeof m != \"string\" ? m : /* @__PURE__ */ o.jsx(o.Fragment, { children: r === \"sm\" || r === \"xs\" ? /* @__PURE__ */ o.jsx(n, { bold: c, color: t, children: m }) : /* @__PURE__ */ o.jsx(\n            u,\n            {\n              size: r === \"md\" ? \"sm\" : \"md\",\n              bold: c,\n              color: t,\n              children: m\n            }\n          ) })\n        ]\n      }\n    );\n  }\n);\n_.displayName = \"Tag\";\nexport {\n  _ as Tag,\n  _ as default\n};\n","import { Tag } from '@deriv-com/quill-ui';\nimport { Localize } from '@deriv-com/translations';\nimport { usePhoneNumberVerificationSessionTimer } from '@deriv/hooks';\nimport clsx from 'clsx';\nimport React from 'react';\n\ntype TPhoneVerificationCard = {\n    is_small_card?: boolean;\n};\n\nconst PhoneVerificationCard = ({ children, is_small_card }: React.PropsWithChildren<TPhoneVerificationCard>) => {\n    const { formatted_time } = usePhoneNumberVerificationSessionTimer();\n    return (\n        <div className={clsx('phone-verification__card', { 'phone-verification__card--small-card': is_small_card })}>\n            <div className='phone-verification__card--session-timeout-component'>\n                <Tag\n                    showIcon={false}\n                    size='sm'\n                    variant='custom'\n                    color='#f5f5f5'\n                    label={\n                        <Localize\n                            i18n_default_text='Time remaining: {{time_remaining}}'\n                            values={{ time_remaining: formatted_time }}\n                        />\n                    }\n                />\n            </div>\n            {children}\n        </div>\n    );\n};\n\nexport default PhoneVerificationCard;\n","import PhoneVerificationPage from './phone-verification-page';\n\nexport default PhoneVerificationPage;\n","import { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Loading } from '@deriv/components';\nimport { useGrowthbookGetFeatureValue, useIsPhoneNumberVerified, useSendOTPVerificationCode } from '@deriv/hooks';\nimport { LabelPairedArrowLeftCaptionFillIcon } from '@deriv/quill-icons';\nimport { routes } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { Text, IconButton } from '@deriv-com/quill-ui';\nimport { useDevice } from '@deriv-com/ui';\nimport { Localize } from '@deriv-com/translations';\nimport ConfirmPhoneNumber from './confirm-phone-number';\nimport CancelPhoneVerificationModal from './cancel-phone-verification-modal';\nimport OTPVerification from './otp-verification';\nimport SessionTimeoutModal from './session-timeout-modal';\nimport VerificationLinkExpiredModal from './verification-link-expired-modal';\nimport './phone-verification.scss';\nimport PhoneVerificationCard from './phone-verification-card';\n\nconst PhoneVerificationPage = observer(() => {\n    const history = useHistory();\n    const [otp_verification, setOtpVerification] = useState({\n        show_otp_verification: true,\n        phone_verification_type: '',\n    });\n    const phone_verification_code = sessionStorage.getItem('phone_number_verification_code');\n    const [is_loading, setIsLoading] = useState(false);\n    const [should_show_verification_link_expired_modal, setShouldShowVerificationLinkExpiredModal] = useState(false);\n    const handleBackButton = () => {\n        history.push(routes.personal_details);\n    };\n    const { sendEmailOTPVerification, email_otp_error, is_email_verified } = useSendOTPVerificationCode();\n    const { is_phone_number_verified } = useIsPhoneNumberVerified();\n    const [isPhoneNumberVerificationEnabled, isPhoneNumberVerificationGBLoaded] = useGrowthbookGetFeatureValue({\n        featureFlag: 'phone_number_verification',\n    });\n    const [isCountryCodeDropdownEnabled, isCountryCodeDropdownGBLoaded] = useGrowthbookGetFeatureValue({\n        featureFlag: 'enable_country_code_dropdown',\n    });\n    const { isDesktop } = useDevice();\n    const { client, ui } = useStore();\n    const { is_redirected_from_email, setRedirectFromEmail, setIsForcedToExitPnv } = ui;\n    const {\n        verification_code: { phone_number_verification: phone_number_verification_code },\n        is_authorize,\n        is_virtual,\n        setVerificationCode,\n        phone_settings,\n    } = client;\n    const no_carriers_supported = phone_settings?.carriers && phone_settings?.carriers.length === 0;\n\n    useEffect(() => {\n        if (\n            (isPhoneNumberVerificationGBLoaded && !isPhoneNumberVerificationEnabled) ||\n            is_virtual ||\n            is_phone_number_verified ||\n            (isCountryCodeDropdownGBLoaded && !isCountryCodeDropdownEnabled && no_carriers_supported)\n        ) {\n            setIsForcedToExitPnv(true);\n            history.push(routes.personal_details);\n        }\n    }, [\n        isPhoneNumberVerificationGBLoaded,\n        isPhoneNumberVerificationEnabled,\n        is_virtual,\n        history,\n        is_phone_number_verified,\n    ]);\n\n    useEffect(() => {\n        if (is_redirected_from_email || phone_verification_code) {\n            setIsLoading(true);\n            if (email_otp_error) {\n                setIsLoading(false);\n                setIsForcedToExitPnv(true);\n                setShouldShowVerificationLinkExpiredModal(true);\n                setRedirectFromEmail(false);\n                sessionStorage.removeItem('phone_number_verification_code');\n            } else if (is_email_verified) {\n                setIsLoading(false);\n                setOtpVerification({\n                    show_otp_verification: false,\n                    phone_verification_type: '',\n                });\n                setRedirectFromEmail(false);\n                sessionStorage.removeItem('phone_number_verification_code');\n            } else if ((phone_number_verification_code || phone_verification_code) && is_authorize) {\n                if (phone_verification_code) setVerificationCode(phone_verification_code, 'phone_number_verification');\n                sendEmailOTPVerification(phone_verification_code || phone_number_verification_code);\n            }\n        }\n    }, [\n        email_otp_error,\n        is_email_verified,\n        phone_number_verification_code,\n        is_authorize,\n        is_redirected_from_email,\n        phone_verification_code,\n    ]);\n\n    if (is_loading || !isPhoneNumberVerificationGBLoaded) {\n        return <Loading is_fullscreen={false} />;\n    }\n\n    return (\n        <div>\n            <VerificationLinkExpiredModal\n                should_show_verification_link_expired_modal={should_show_verification_link_expired_modal}\n                setShouldShowVerificationLinkExpiredModal={setShouldShowVerificationLinkExpiredModal}\n            />\n            {!should_show_verification_link_expired_modal && (\n                <SessionTimeoutModal is_at_otp_verification={otp_verification.show_otp_verification} />\n            )}\n            <CancelPhoneVerificationModal />\n            {isDesktop && (\n                <div className='phone-verification__redirect_button'>\n                    <IconButton\n                        color='black-white'\n                        variant='tertiary'\n                        onClick={handleBackButton}\n                        icon={\n                            <LabelPairedArrowLeftCaptionFillIcon\n                                width={24}\n                                height={24}\n                                data-testid='dt_phone_verification_back_btn'\n                                className='phone-verification__redirect_button--icon'\n                            />\n                        }\n                    />\n                    <Text className='phone-verification__redirect_button--text' bold>\n                        <Localize i18n_default_text='Back to personal details' />\n                    </Text>\n                </div>\n            )}\n            <PhoneVerificationCard is_small_card={otp_verification.show_otp_verification}>\n                {otp_verification.show_otp_verification ? (\n                    <OTPVerification\n                        phone_verification_type={otp_verification.phone_verification_type}\n                        setOtpVerification={setOtpVerification}\n                    />\n                ) : (\n                    <ConfirmPhoneNumber\n                        show_confirm_phone_number={!otp_verification.show_otp_verification}\n                        setOtpVerification={setOtpVerification}\n                    />\n                )}\n            </PhoneVerificationCard>\n        </div>\n    );\n});\n\nexport default PhoneVerificationPage;\n"],"names":["w","addOnPosition","r","variant","o","fillAddonBorderColor","t","rightIcon","n","addonLabel","i","inputSize","d","disabled","s","a","m","c","borderColor","p","jsx","className","style","children","size","f","addOn","addOnIcon","ref","tempPhoneNumberValidation","validatePhoneNumber","phone_number","setErrorMessage","setIsDisabledRequestButton","isCountryCodeDropdownEnabled","Yup","matches","ValidationConstants","patterns","phoneNumber","localize","phoneNumberSchema","validate","then","catch","_ref","errors","observer","show_confirm_phone_number","setOtpVerification","setPhoneNumber","useState","phone_verification_type","setPhoneVerificationType","useGrowthbookGetFeatureValue","featureFlag","is_button_loading","setIsButtonLoading","requestOnSMS","requestOnWhatsApp","error_message","setUsersPhoneNumber","is_email_verified","email_otp_error","is_disabled_request_button","useRequestPhoneNumberOTP","is_global_sms_available","is_global_whatsapp_available","no_of_available_carriers","formatted_countries_list","short_code_selected","selected_phone_code","selected_country_list","isLoading","useGetPhoneNumberList","data","account_settings","invalidate","useSettings","selectedCountryCode","setSelectedCountryCode","ui","useStore","setShouldShowPhoneNumberOTP","next_phone_otp_request_timer","is_phone_otp_timer_loading","usePhoneNumberVerificationSetTimer","trackPhoneVerificationEvents","usePhoneVerificationAnalytics","useTranslations","only_1_carrier_supported","useEffect","action","subform_name","phone","replace","error_code","code","show_otp_verification","handleOnChangePhoneNumber","e","target","value","handleSubmit","async","error","calling_country_code","phone_code","cta_name","VERIFICATION_SERVICES","SMS","isSingularValue","time","isCarrierSupportedForSms","carriers","includes","isCarrierSupportedForWhatsApp","_jsxs","Fragment","_jsx","Text","bold","Localize","i18n_default_text","clsx","InputPhoneNumber","showSearchBar","codeIcon","countryCodes","codeLabel","shortCode","short_code","onCodeChange","item","showFlags","label","onChange","status","message","TextFieldAddon","type","Button","color","fullWidth","onClick","WHATSAPP","Snackbar","hasCloseButton","values","next_phone_number_attempt_timestamp","resendPhoneOtpTimer","Math","round","isVisible","history","useHistory","location","useLocation","show_modal","setShowModal","next_location","setNextLocation","pathname","client","is_forced_to_exit_pnv","setVerificationCode","is_virtual","isMobile","useDevice","is_phone_number_verified","useIsPhoneNumberVerified","isPhoneNumberVerificationEnabled","unblock","block","Modal","showHandleBar","isOpened","isNonExpandable","shouldCloseModalOnSwipeDown","shouldCloseOnPrimaryButtonClick","primaryButtonLabel","buttonColor","showSecondaryButton","showCrossIcon","toggleModal","handleStayAtPhoneVerificationPage","secondaryButtonLabel","secondaryButtonCallback","handleLeavePhoneVerificationPage","push","Header","title","Body","is_button_disabled","should_show_resend_code_button","clearOtpValue","setIsButtonDisabled","setShouldShowDidntGetTheCodeModal","reInitializeGetSettings","sendPhoneNumberVerifyEmail","WS","useVerifyEmail","is_request_button_disabled","next_email_otp_request_timer","React","isSuccess","isButtonDisabled","useCallback","resendCode","CaptionText","underlined","resendCodeTimer","didntGetACodeTimer","should_show_didnt_get_the_code_modal","setDidntGetACodeButtonDisabled","primaryButtonCallback","handleResendCode","handleChangeOTPVerification","changed_phone_verification_type","convertPhoneTypeDisplay","should_show_phone_number_verified_modal","previous_route","localStorage","getItem","should_route_back_to_previous","routes","personal_details","phone_verification","setIsPhoneVerificationCompleted","handleDoneButton","removeItem","traders_hub","disableCloseOnOverlay","show_cool_down_period_modal","setShowCoolDownPeriodModal","setIsForcedToExitPnv","handleCloseCoolDownPeriodModal","is_authorize","otp","setOtp","isMounted","useIsMounted","sendPhoneOTPVerification","phone_otp_error_message","setPhoneOtpErrorMessage","sendEmailOTPVerification","reset","useSendOTPVerificationCode","setNextEmailOtpRequestTimer","is_email_otp_timer_loading","setNextPhoneOtpRequestTimer","should_show_phone_number_otp","undefined","handleVerifyOTP","_Fragment","CoolDownPeriodModal","PhoneNumberVerifiedModal","DidntGetTheCodeModal","users_phone_number","components","users_email","email","InputGroupButton","buttonLabel","buttonCallback","onKeyDown","key","inputMode","maxLength","buttonDisabled","length","ResendCodeTimer","is_at_otp_verification","should_show_session_timeout_modal","usePhoneNumberVerificationSessionTimer","is_phone_verification_completed","redirectBackToPersonalDetails","should_show_verification_link_expired_modal","setShouldShowVerificationLinkExpiredModal","isPrimaryButtonDisabled","handleSendNewLinkButton","next_email_attempt_timestamp","sendNewLinkTimer","handleCancelButton","g","titleId","l","xmlns","width","height","viewBox","role","id","b","x","A","j","F","icon","isBold","regular","warning","success","info","iconClassName","showIcon","jsxs","backgroundColor","displayName","is_small_card","formatted_time","Tag","time_remaining","otp_verification","phone_verification_code","sessionStorage","is_loading","setIsLoading","isPhoneNumberVerificationGBLoaded","isCountryCodeDropdownGBLoaded","isDesktop","is_redirected_from_email","setRedirectFromEmail","verification_code","phone_number_verification","phone_number_verification_code","phone_settings","no_carriers_supported","Loading","is_fullscreen","VerificationLinkExpiredModal","SessionTimeoutModal","CancelPhoneVerificationModal","IconButton","handleBackButton","LabelPairedArrowLeftCaptionFillIcon","PhoneVerificationCard","OTPVerification","ConfirmPhoneNumber"],"sourceRoot":""}