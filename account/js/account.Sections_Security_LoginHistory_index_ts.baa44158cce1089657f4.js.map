{"version":3,"file":"account/js/account.Sections_Security_LoginHistory_index_ts.baa44158cce1089657f4.js","mappings":"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","sources":["webpack://@deriv/account/./Constants/get-login-history-table-headers.tsx","webpack://@deriv/account/./Sections/Security/LoginHistory/login-history-table-row.tsx","webpack://@deriv/account/./Sections/Security/LoginHistory/list-cell.tsx","webpack://@deriv/account/./Sections/Security/LoginHistory/login-history-list-row.tsx","webpack://@deriv/account/./Sections/Security/LoginHistory/login-history-content.tsx","webpack://@deriv/account/./Sections/Security/LoginHistory/login-history.tsx","webpack://@deriv/account/./Sections/Security/LoginHistory/index.ts"],"sourcesContent":["import { Localize } from '@deriv-com/translations';\n\nconst getLoginHistoryTableHeaders = () => ({\n    date_title: <Localize i18n_default_text='Date and time' />,\n    action_title: <Localize i18n_default_text='Action' />,\n    browser_title: <Localize i18n_default_text='Browser' />,\n    ip_title: <Localize i18n_default_text='IP address' />,\n    status_title: <Localize i18n_default_text='Status' />,\n});\n\nexport default getLoginHistoryTableHeaders;\n","import { Table, Text } from '@deriv/components';\nimport { Localize } from '@deriv-com/translations';\nimport { TLoginHistoryItems } from '../../../Types';\n\nconst LoginHistoryTableRow = ({ id, date, action, browser, ip, status }: TLoginHistoryItems) => {\n    return (\n        <Table.Row className='login-history__table__row' key={id}>\n            <Table.Cell>\n                <Text line_height='xs' size='xs'>\n                    {date}\n                </Text>\n            </Table.Cell>\n            <Table.Cell className='login-history__table__row__cell login-history__table__row__cell--action'>\n                <Localize i18n_default_text='{{action}}' values={{ action }} />\n            </Table.Cell>\n            <Table.Cell>{browser === 'Unknown' ? <Localize i18n_default_text='Unknown' /> : browser}</Table.Cell>\n            <Table.Cell>{ip}</Table.Cell>\n            <Table.Cell>\n                <Localize i18n_default_text='{{status}}' values={{ status }} />\n            </Table.Cell>\n        </Table.Row>\n    );\n};\n\nexport default LoginHistoryTableRow;\n","import { Fragment } from 'react';\nimport clsx from 'clsx';\nimport { Text } from '@deriv/components';\n\ntype TListCell = {\n    title: JSX.Element | string;\n    text: JSX.Element | string;\n    className?: string;\n    align?: 'left' | 'right';\n};\n\nconst ListCell = ({ title, text, className, align = 'left' }: TListCell) => (\n    <Fragment>\n        <Text as='h3' align={align} weight='bold' className='login-history__list__row__cell--title'>\n            {title}\n        </Text>\n        <Text\n            className={clsx(className, { 'login-history__list__row__cell--right': align === 'right' })}\n            line_height='xs'\n            size='xs'\n            align={align}\n        >\n            {text}\n        </Text>\n    </Fragment>\n);\n\nexport default ListCell;\n","import clsx from 'clsx';\nimport { TLoginHistoryItems } from '../../../Types';\nimport { Table } from '@deriv/components';\nimport { Localize } from '@deriv-com/translations';\nimport { useDevice } from '@deriv-com/ui';\nimport getLoginHistoryTableHeaders from '../../../Constants/get-login-history-table-headers';\nimport ListCell from './list-cell';\n\nconst LoginHistoryListRow = ({ id, date, action, browser, ip, status }: TLoginHistoryItems) => {\n    const { date_title, browser_title, action_title, ip_title, status_title } = getLoginHistoryTableHeaders();\n    const { isDesktop } = useDevice();\n\n    return (\n        <div className={clsx('login-history__list__wrapper')} key={id}>\n            <Table.Row className='login-history__list__row login-history__list__row--with-margin'>\n                <Table.Cell className='login-history__list__row__cell'>\n                    <ListCell title={date_title} text={date} />\n                </Table.Cell>\n            </Table.Row>\n            <Table.Row className='login-history__list__row login-history__list__row--with-margin'>\n                <Table.Cell className='login-history__list__row__cell'>\n                    <ListCell\n                        className='login-history__list__row__cell--browser'\n                        title={browser_title}\n                        text={browser === 'Unknown' ? <Localize i18n_default_text='Unknown' /> : browser}\n                    />\n                </Table.Cell>\n                <Table.Cell className='login-history__list__row__cell'>\n                    <ListCell\n                        className='login-history__list__row__cell--action'\n                        title={action_title}\n                        text={<Localize i18n_default_text='{{action}}' values={{ action }} />}\n                    />\n                </Table.Cell>\n            </Table.Row>\n            <Table.Row className='login-history__list__row'>\n                <Table.Cell className='login-history__list__row__cell'>\n                    <ListCell className='login-history__list__row__cell--ip-value' title={ip_title} text={ip} />\n                </Table.Cell>\n                {isDesktop && (\n                    <Table.Cell className='login-history__list__row__cell'>\n                        <ListCell\n                            title={status_title}\n                            text={<Localize i18n_default_text='{{status}}' values={{ status }} />}\n                        />\n                    </Table.Cell>\n                )}\n            </Table.Row>\n        </div>\n    );\n};\n\nexport default LoginHistoryListRow;\n","import { Table } from '@deriv/components';\nimport { useDevice } from '@deriv-com/ui';\nimport getLoginHistoryTableHeaders from '../../../Constants/get-login-history-table-headers';\nimport LoginHistoryTableRow from './login-history-table-row';\nimport LoginHistoryListRow from './login-history-list-row';\n\ntype TLoginHistoryData = {\n    id: number;\n    date: string;\n    action: string;\n    browser: string;\n    ip: string;\n    status: string;\n}[];\n\ntype TGetFields = {\n    [key: string]: JSX.Element;\n};\n\ntype TLoginHistoryContent = {\n    data: TLoginHistoryData;\n};\n\nconst LoginHistoryContent = ({ data }: TLoginHistoryContent) => {\n    const { isDesktop } = useDevice();\n\n    return isDesktop ? renderTable(getLoginHistoryTableHeaders(), data) : renderList(data);\n};\n\nconst renderTable = (fields: TGetFields, login_history: TLoginHistoryData) => (\n    <Table fixed className='login-history__table'>\n        <Table.Header>\n            <Table.Row className='login-history__table__header'>\n                {/* Getting values of key as string, field as JSX.Element from getLoginHistoryTableHeaders */}\n                {Object.entries(fields).map(([key, field]) => (\n                    <Table.Head key={key}>{field}</Table.Head>\n                ))}\n            </Table.Row>\n        </Table.Header>\n        <Table.Body>\n            {login_history.map(item => (\n                <LoginHistoryTableRow key={item.id} {...item} />\n            ))}\n        </Table.Body>\n    </Table>\n);\n\nconst renderList = (login_history: TLoginHistoryData) => (\n    <Table className='login-history__list'>\n        <Table.Body>\n            {login_history.map(item => (\n                <LoginHistoryListRow key={item.id} {...item} />\n            ))}\n        </Table.Body>\n    </Table>\n);\n\nexport default LoginHistoryContent;\n","import React from 'react';\nimport { Loading, ThemedScrollbars } from '@deriv/components';\nimport { observer, useStore } from '@deriv/stores';\nimport { WS, useIsMounted } from '@deriv/shared';\nimport { useDevice } from '@deriv-com/ui';\nimport LoadErrorMessage from '../../../Components/load-error-message';\nimport LoginHistoryContent from './login-history-content';\nimport { getLoginHistoryFormattedData } from '@deriv/utils';\n\ntype TLoginData = { id: number; date: string; action: string; browser: string; ip: string; status: string }[];\n\nconst LoginHistory = observer(() => {\n    const { client } = useStore();\n    const { isDesktop } = useDevice();\n    const { is_switching } = client;\n    const [is_loading, setLoading] = React.useState(true);\n    const [error, setError] = React.useState('');\n    const [data, setData] = React.useState<TLoginData>([]);\n    const isMounted = useIsMounted();\n\n    React.useEffect(() => {\n        const fetchData = async () => {\n            if (isMounted()) {\n                const api_res = await WS.authorized.fetchLoginHistory(50);\n                setLoading(false);\n                if (api_res.error) {\n                    setError(api_res.error.message);\n                } else {\n                    const formatted_data = getLoginHistoryFormattedData(api_res.login_history);\n                    setData(formatted_data);\n                }\n            }\n        };\n\n        fetchData();\n    }, []);\n\n    if (is_switching) return <Loading />;\n    if (is_loading) return <Loading is_fullscreen={false} className='account__initial-loader' />;\n    if (error) return <LoadErrorMessage error_message={error} />;\n\n    return (\n        <ThemedScrollbars is_bypassed={!isDesktop} className='login-history'>\n            {data.length > 0 ? <LoginHistoryContent data={data} /> : null}\n        </ThemedScrollbars>\n    );\n});\n\nexport default LoginHistory;\n","import LoginHistory from './login-history';\n\nexport default LoginHistory;\n"],"names":["getLoginHistoryTableHeaders","date_title","_jsx","Localize","i18n_default_text","action_title","browser_title","ip_title","status_title","_ref","id","date","action","browser","ip","status","_jsxs","Table","Row","className","children","Cell","Text","line_height","size","values","title","text","align","Fragment","as","weight","clsx","isDesktop","useDevice","ListCell","renderTable","fields","login_history","fixed","Header","Object","entries","map","_ref2","key","field","Head","Body","item","LoginHistoryTableRow","renderList","LoginHistoryListRow","data","observer","client","useStore","is_switching","is_loading","setLoading","React","error","setError","setData","isMounted","useIsMounted","async","api_res","WS","authorized","fetchLoginHistory","message","formatted_data","getLoginHistoryFormattedData","fetchData","Loading","is_fullscreen","LoadErrorMessage","error_message","ThemedScrollbars","is_bypassed","length","LoginHistoryContent"],"sourceRoot":""}