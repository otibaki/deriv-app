{"version":3,"file":"account/js/account.Sections_Security_TwoFactorAuthentication_index_ts.6424caf16246e5da4bc0.js","mappings":"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","sources":["webpack://@deriv/account/./Components/article/article.tsx","webpack://@deriv/account/./Components/article/index.ts","webpack://@deriv/account/./Sections/Security/TwoFactorAuthentication/digit-form.tsx","webpack://@deriv/account/./Sections/Security/TwoFactorAuthentication/two-factor-enabled.tsx","webpack://@deriv/account/../../../node_modules/qrcode.react/lib/esm/index.js","webpack://@deriv/account/./Sections/Security/TwoFactorAuthentication/two-factor-authentication-article.tsx","webpack://@deriv/account/./Sections/Security/TwoFactorAuthentication/two-factor-disabled.tsx","webpack://@deriv/account/./Sections/Security/TwoFactorAuthentication/index.ts","webpack://@deriv/account/./Sections/Security/TwoFactorAuthentication/two-factor-authentication.tsx"],"sourcesContent":["import { ReactNode, Fragment } from 'react';\nimport { Icon, Text } from '@deriv/components';\nimport { Localize } from '@deriv-com/translations';\nimport './article.scss';\nimport clsx from 'clsx';\n\nexport type TArticle = {\n    title: JSX.Element | string;\n    descriptions: Array<ReactNode>;\n    onClickLearnMore?: () => void;\n    className?: string;\n};\n\nconst Article = ({ title, descriptions, onClickLearnMore, className }: TArticle) => {\n    const has_descriptions: boolean = descriptions?.length > 0;\n    const has_single_description: boolean = descriptions?.length === 1;\n\n    return (\n        <article className={clsx('da-article', className)}>\n            <Text as='h4' color='prominent' line_height='m' size='xs' weight='bold' className='da-article__header'>\n                {title}\n            </Text>\n            {has_descriptions && (\n                <Fragment>\n                    {has_single_description ? (\n                        <Text as='p' size='xxs' line_height='m'>\n                            {descriptions[0]}\n                        </Text>\n                    ) : (\n                        <ul className='da-article__list'>\n                            {descriptions.map((description, idx) => (\n                                <li key={idx}>\n                                    <Text size='xxs' line_height='xs'>\n                                        {description}\n                                    </Text>\n                                </li>\n                            ))}\n                        </ul>\n                    )}\n                </Fragment>\n            )}\n            {onClickLearnMore && (\n                <div className='da-article__learn-more' onClick={onClickLearnMore}>\n                    <Text size='xxs' color='loss-danger' line_height='s'>\n                        <Localize i18n_default_text='Learn more' />\n                    </Text>\n                    <Icon icon='IcChevronRight' className='da-article__learn-more-icon' color='red' />\n                </div>\n            )}\n        </article>\n    );\n};\n\nexport default Article;\n","import AccountArticle from './article';\nimport './article.scss';\n\nexport default AccountArticle;\n","import { useRef, useState, useEffect, ChangeEvent } from 'react';\nimport clsx from 'clsx';\nimport { Formik, Form, Field, FormikProps, FormikHelpers, FieldProps } from 'formik';\nimport { Input, Button } from '@deriv/components';\nimport { getPropertyValue, WS } from '@deriv/shared';\nimport { useTranslations } from '@deriv-com/translations';\nimport { observer, useStore } from '@deriv/stores';\n\ntype TResponse = {\n    error?: {\n        message: string;\n        code: string;\n    };\n};\n\ntype TDigitFormValues = {\n    digit_code: string;\n};\n\nconst DigitForm = observer(() => {\n    const { client, common } = useStore();\n    const { localize } = useTranslations();\n    const { is_language_changing } = common;\n    const { has_enabled_two_fa, setTwoFAChangedStatus, setTwoFAStatus } = client;\n    const [is_success, setSuccess] = useState(false);\n    const [is_ready_for_verification, setReadyForVerification] = useState(false);\n\n    const button_text = has_enabled_two_fa ? localize('Disable') : localize('Enable');\n    const formik_ref = useRef<FormikProps<TDigitFormValues>>(null);\n    let enable_response: TResponse;\n\n    const initial_form = {\n        digit_code: '',\n    };\n\n    useEffect(() => {\n        if (is_language_changing) {\n            formik_ref.current?.setFieldTouched('digit_code');\n        }\n    }, [is_language_changing]);\n\n    const validateFields = async (values: TDigitFormValues) => {\n        const digit_code = values?.digit_code;\n        if (!digit_code) {\n            return { digit_code: localize('Digit code is required.') };\n        } else if (digit_code.length !== 6) {\n            return { digit_code: localize('Length of digit code must be 6 characters.') };\n        } else if (!/^\\d{6}$/g.test(digit_code)) {\n            return { digit_code: localize('Digit code must only contain numbers.') };\n        } else if (is_ready_for_verification && formik_ref.current?.isValid) {\n            const totp_action = has_enabled_two_fa ? 'disable' : 'enable';\n            enable_response = await WS.authorized.accountSecurity({\n                account_security: 1,\n                totp_action,\n                otp: values.digit_code,\n            });\n            if (enable_response?.error) {\n                const { code, message } = enable_response.error;\n                if (code === 'InvalidOTP')\n                    return { digit_code: localize(\"That's not the right code. Please try again.\") };\n                return { digit_code: message };\n            }\n        }\n        return {};\n    };\n\n    const handleSubmit = async (values: TDigitFormValues, { resetForm }: FormikHelpers<TDigitFormValues>) => {\n        if (!enable_response.error) {\n            const is_enabled_response = !!getPropertyValue(enable_response, ['account_security', 'totp', 'is_enabled']);\n            setSuccess(true);\n            resetForm();\n            setTwoFAStatus(is_enabled_response);\n            setTwoFAChangedStatus(true);\n        }\n    };\n\n    return (\n        <Formik initialValues={initial_form} onSubmit={handleSubmit} validate={validateFields} innerRef={formik_ref}>\n            {({ values, isValid, handleChange, handleBlur, isSubmitting, dirty }) => (\n                <Form noValidate>\n                    <div className='two-factor__input-group' data-testid='dt_digitform_2fa'>\n                        <Field name='digit_code'>\n                            {({ field, meta }: FieldProps) => (\n                                <Input\n                                    {...field}\n                                    data-lpignore='true'\n                                    type='text'\n                                    className='two-factor__input'\n                                    label={localize('Authentication code')}\n                                    value={values.digit_code}\n                                    onChange={(e: ChangeEvent<HTMLInputElement>) => {\n                                        handleChange(e);\n                                        setReadyForVerification(false);\n                                    }}\n                                    onBlur={handleBlur}\n                                    required\n                                    error={meta.touched ? meta.error : undefined}\n                                    maxLength={6}\n                                    autoComplete='off'\n                                />\n                            )}\n                        </Field>\n                        <Button\n                            className={clsx('two-factor__button', {\n                                'two-factor__button--success': is_success,\n                            })}\n                            type='submit'\n                            is_disabled={isSubmitting || !isValid || !dirty}\n                            has_effect\n                            is_loading={isSubmitting}\n                            is_submit_success={is_success}\n                            text={button_text}\n                            onClick={() => {\n                                setReadyForVerification(true);\n                            }}\n                            large\n                            primary\n                        />\n                    </div>\n                </Form>\n            )}\n        </Formik>\n    );\n});\n\nexport default DigitForm;\n","import { Icon, ThemedScrollbars, Text } from '@deriv/components';\nimport { useDevice } from '@deriv-com/ui';\nimport DigitForm from './digit-form';\nimport { Localize } from '@deriv-com/translations';\n\nconst TwoFactorEnabled = () => {\n    const { isDesktop } = useDevice();\n    return (\n        <ThemedScrollbars is_bypassed={!isDesktop} className='two-factor__scrollbars'>\n            <div className='two-factor__wrapper--enabled'>\n                <Icon icon='IcQrPhone' className='two-factor__icon' />\n                <Text as='h3' align='center' weight='bold' color='prominent' className='two-factor__qr--title'>\n                    <Localize i18n_default_text='2FA enabled' />\n                </Text>\n                <Text as='h4' size='xs' align='center' className='two-factor__qr--message'>\n                    <Localize i18n_default_text='You have enabled 2FA for your Deriv account.' />\n                </Text>\n                <Text as='h4' size='xs' align='center' className='two-factor__qr--message'>\n                    <Localize i18n_default_text='To disable 2FA, please enter the six-digit authentication code generated by your 2FA app below:' />\n                </Text>\n                <DigitForm />\n            </div>\n        </ThemedScrollbars>\n    );\n};\n\nexport default TwoFactorEnabled;\n","var __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\n\n// src/index.tsx\nimport React from \"react\";\n\n// src/third-party/qrcodegen/index.ts\n/**\n * @license QR Code generator library (TypeScript)\n * Copyright (c) Project Nayuki.\n * SPDX-License-Identifier: MIT\n */\nvar qrcodegen;\n((qrcodegen2) => {\n  const _QrCode = class {\n    constructor(version, errorCorrectionLevel, dataCodewords, msk) {\n      this.version = version;\n      this.errorCorrectionLevel = errorCorrectionLevel;\n      this.modules = [];\n      this.isFunction = [];\n      if (version < _QrCode.MIN_VERSION || version > _QrCode.MAX_VERSION)\n        throw new RangeError(\"Version value out of range\");\n      if (msk < -1 || msk > 7)\n        throw new RangeError(\"Mask value out of range\");\n      this.size = version * 4 + 17;\n      let row = [];\n      for (let i = 0; i < this.size; i++)\n        row.push(false);\n      for (let i = 0; i < this.size; i++) {\n        this.modules.push(row.slice());\n        this.isFunction.push(row.slice());\n      }\n      this.drawFunctionPatterns();\n      const allCodewords = this.addEccAndInterleave(dataCodewords);\n      this.drawCodewords(allCodewords);\n      if (msk == -1) {\n        let minPenalty = 1e9;\n        for (let i = 0; i < 8; i++) {\n          this.applyMask(i);\n          this.drawFormatBits(i);\n          const penalty = this.getPenaltyScore();\n          if (penalty < minPenalty) {\n            msk = i;\n            minPenalty = penalty;\n          }\n          this.applyMask(i);\n        }\n      }\n      assert(0 <= msk && msk <= 7);\n      this.mask = msk;\n      this.applyMask(msk);\n      this.drawFormatBits(msk);\n      this.isFunction = [];\n    }\n    static encodeText(text, ecl) {\n      const segs = qrcodegen2.QrSegment.makeSegments(text);\n      return _QrCode.encodeSegments(segs, ecl);\n    }\n    static encodeBinary(data, ecl) {\n      const seg = qrcodegen2.QrSegment.makeBytes(data);\n      return _QrCode.encodeSegments([seg], ecl);\n    }\n    static encodeSegments(segs, ecl, minVersion = 1, maxVersion = 40, mask = -1, boostEcl = true) {\n      if (!(_QrCode.MIN_VERSION <= minVersion && minVersion <= maxVersion && maxVersion <= _QrCode.MAX_VERSION) || mask < -1 || mask > 7)\n        throw new RangeError(\"Invalid value\");\n      let version;\n      let dataUsedBits;\n      for (version = minVersion; ; version++) {\n        const dataCapacityBits2 = _QrCode.getNumDataCodewords(version, ecl) * 8;\n        const usedBits = QrSegment.getTotalBits(segs, version);\n        if (usedBits <= dataCapacityBits2) {\n          dataUsedBits = usedBits;\n          break;\n        }\n        if (version >= maxVersion)\n          throw new RangeError(\"Data too long\");\n      }\n      for (const newEcl of [_QrCode.Ecc.MEDIUM, _QrCode.Ecc.QUARTILE, _QrCode.Ecc.HIGH]) {\n        if (boostEcl && dataUsedBits <= _QrCode.getNumDataCodewords(version, newEcl) * 8)\n          ecl = newEcl;\n      }\n      let bb = [];\n      for (const seg of segs) {\n        appendBits(seg.mode.modeBits, 4, bb);\n        appendBits(seg.numChars, seg.mode.numCharCountBits(version), bb);\n        for (const b of seg.getData())\n          bb.push(b);\n      }\n      assert(bb.length == dataUsedBits);\n      const dataCapacityBits = _QrCode.getNumDataCodewords(version, ecl) * 8;\n      assert(bb.length <= dataCapacityBits);\n      appendBits(0, Math.min(4, dataCapacityBits - bb.length), bb);\n      appendBits(0, (8 - bb.length % 8) % 8, bb);\n      assert(bb.length % 8 == 0);\n      for (let padByte = 236; bb.length < dataCapacityBits; padByte ^= 236 ^ 17)\n        appendBits(padByte, 8, bb);\n      let dataCodewords = [];\n      while (dataCodewords.length * 8 < bb.length)\n        dataCodewords.push(0);\n      bb.forEach((b, i) => dataCodewords[i >>> 3] |= b << 7 - (i & 7));\n      return new _QrCode(version, ecl, dataCodewords, mask);\n    }\n    getModule(x, y) {\n      return 0 <= x && x < this.size && 0 <= y && y < this.size && this.modules[y][x];\n    }\n    getModules() {\n      return this.modules;\n    }\n    drawFunctionPatterns() {\n      for (let i = 0; i < this.size; i++) {\n        this.setFunctionModule(6, i, i % 2 == 0);\n        this.setFunctionModule(i, 6, i % 2 == 0);\n      }\n      this.drawFinderPattern(3, 3);\n      this.drawFinderPattern(this.size - 4, 3);\n      this.drawFinderPattern(3, this.size - 4);\n      const alignPatPos = this.getAlignmentPatternPositions();\n      const numAlign = alignPatPos.length;\n      for (let i = 0; i < numAlign; i++) {\n        for (let j = 0; j < numAlign; j++) {\n          if (!(i == 0 && j == 0 || i == 0 && j == numAlign - 1 || i == numAlign - 1 && j == 0))\n            this.drawAlignmentPattern(alignPatPos[i], alignPatPos[j]);\n        }\n      }\n      this.drawFormatBits(0);\n      this.drawVersion();\n    }\n    drawFormatBits(mask) {\n      const data = this.errorCorrectionLevel.formatBits << 3 | mask;\n      let rem = data;\n      for (let i = 0; i < 10; i++)\n        rem = rem << 1 ^ (rem >>> 9) * 1335;\n      const bits = (data << 10 | rem) ^ 21522;\n      assert(bits >>> 15 == 0);\n      for (let i = 0; i <= 5; i++)\n        this.setFunctionModule(8, i, getBit(bits, i));\n      this.setFunctionModule(8, 7, getBit(bits, 6));\n      this.setFunctionModule(8, 8, getBit(bits, 7));\n      this.setFunctionModule(7, 8, getBit(bits, 8));\n      for (let i = 9; i < 15; i++)\n        this.setFunctionModule(14 - i, 8, getBit(bits, i));\n      for (let i = 0; i < 8; i++)\n        this.setFunctionModule(this.size - 1 - i, 8, getBit(bits, i));\n      for (let i = 8; i < 15; i++)\n        this.setFunctionModule(8, this.size - 15 + i, getBit(bits, i));\n      this.setFunctionModule(8, this.size - 8, true);\n    }\n    drawVersion() {\n      if (this.version < 7)\n        return;\n      let rem = this.version;\n      for (let i = 0; i < 12; i++)\n        rem = rem << 1 ^ (rem >>> 11) * 7973;\n      const bits = this.version << 12 | rem;\n      assert(bits >>> 18 == 0);\n      for (let i = 0; i < 18; i++) {\n        const color = getBit(bits, i);\n        const a = this.size - 11 + i % 3;\n        const b = Math.floor(i / 3);\n        this.setFunctionModule(a, b, color);\n        this.setFunctionModule(b, a, color);\n      }\n    }\n    drawFinderPattern(x, y) {\n      for (let dy = -4; dy <= 4; dy++) {\n        for (let dx = -4; dx <= 4; dx++) {\n          const dist = Math.max(Math.abs(dx), Math.abs(dy));\n          const xx = x + dx;\n          const yy = y + dy;\n          if (0 <= xx && xx < this.size && 0 <= yy && yy < this.size)\n            this.setFunctionModule(xx, yy, dist != 2 && dist != 4);\n        }\n      }\n    }\n    drawAlignmentPattern(x, y) {\n      for (let dy = -2; dy <= 2; dy++) {\n        for (let dx = -2; dx <= 2; dx++)\n          this.setFunctionModule(x + dx, y + dy, Math.max(Math.abs(dx), Math.abs(dy)) != 1);\n      }\n    }\n    setFunctionModule(x, y, isDark) {\n      this.modules[y][x] = isDark;\n      this.isFunction[y][x] = true;\n    }\n    addEccAndInterleave(data) {\n      const ver = this.version;\n      const ecl = this.errorCorrectionLevel;\n      if (data.length != _QrCode.getNumDataCodewords(ver, ecl))\n        throw new RangeError(\"Invalid argument\");\n      const numBlocks = _QrCode.NUM_ERROR_CORRECTION_BLOCKS[ecl.ordinal][ver];\n      const blockEccLen = _QrCode.ECC_CODEWORDS_PER_BLOCK[ecl.ordinal][ver];\n      const rawCodewords = Math.floor(_QrCode.getNumRawDataModules(ver) / 8);\n      const numShortBlocks = numBlocks - rawCodewords % numBlocks;\n      const shortBlockLen = Math.floor(rawCodewords / numBlocks);\n      let blocks = [];\n      const rsDiv = _QrCode.reedSolomonComputeDivisor(blockEccLen);\n      for (let i = 0, k = 0; i < numBlocks; i++) {\n        let dat = data.slice(k, k + shortBlockLen - blockEccLen + (i < numShortBlocks ? 0 : 1));\n        k += dat.length;\n        const ecc = _QrCode.reedSolomonComputeRemainder(dat, rsDiv);\n        if (i < numShortBlocks)\n          dat.push(0);\n        blocks.push(dat.concat(ecc));\n      }\n      let result = [];\n      for (let i = 0; i < blocks[0].length; i++) {\n        blocks.forEach((block, j) => {\n          if (i != shortBlockLen - blockEccLen || j >= numShortBlocks)\n            result.push(block[i]);\n        });\n      }\n      assert(result.length == rawCodewords);\n      return result;\n    }\n    drawCodewords(data) {\n      if (data.length != Math.floor(_QrCode.getNumRawDataModules(this.version) / 8))\n        throw new RangeError(\"Invalid argument\");\n      let i = 0;\n      for (let right = this.size - 1; right >= 1; right -= 2) {\n        if (right == 6)\n          right = 5;\n        for (let vert = 0; vert < this.size; vert++) {\n          for (let j = 0; j < 2; j++) {\n            const x = right - j;\n            const upward = (right + 1 & 2) == 0;\n            const y = upward ? this.size - 1 - vert : vert;\n            if (!this.isFunction[y][x] && i < data.length * 8) {\n              this.modules[y][x] = getBit(data[i >>> 3], 7 - (i & 7));\n              i++;\n            }\n          }\n        }\n      }\n      assert(i == data.length * 8);\n    }\n    applyMask(mask) {\n      if (mask < 0 || mask > 7)\n        throw new RangeError(\"Mask value out of range\");\n      for (let y = 0; y < this.size; y++) {\n        for (let x = 0; x < this.size; x++) {\n          let invert;\n          switch (mask) {\n            case 0:\n              invert = (x + y) % 2 == 0;\n              break;\n            case 1:\n              invert = y % 2 == 0;\n              break;\n            case 2:\n              invert = x % 3 == 0;\n              break;\n            case 3:\n              invert = (x + y) % 3 == 0;\n              break;\n            case 4:\n              invert = (Math.floor(x / 3) + Math.floor(y / 2)) % 2 == 0;\n              break;\n            case 5:\n              invert = x * y % 2 + x * y % 3 == 0;\n              break;\n            case 6:\n              invert = (x * y % 2 + x * y % 3) % 2 == 0;\n              break;\n            case 7:\n              invert = ((x + y) % 2 + x * y % 3) % 2 == 0;\n              break;\n            default:\n              throw new Error(\"Unreachable\");\n          }\n          if (!this.isFunction[y][x] && invert)\n            this.modules[y][x] = !this.modules[y][x];\n        }\n      }\n    }\n    getPenaltyScore() {\n      let result = 0;\n      for (let y = 0; y < this.size; y++) {\n        let runColor = false;\n        let runX = 0;\n        let runHistory = [0, 0, 0, 0, 0, 0, 0];\n        for (let x = 0; x < this.size; x++) {\n          if (this.modules[y][x] == runColor) {\n            runX++;\n            if (runX == 5)\n              result += _QrCode.PENALTY_N1;\n            else if (runX > 5)\n              result++;\n          } else {\n            this.finderPenaltyAddHistory(runX, runHistory);\n            if (!runColor)\n              result += this.finderPenaltyCountPatterns(runHistory) * _QrCode.PENALTY_N3;\n            runColor = this.modules[y][x];\n            runX = 1;\n          }\n        }\n        result += this.finderPenaltyTerminateAndCount(runColor, runX, runHistory) * _QrCode.PENALTY_N3;\n      }\n      for (let x = 0; x < this.size; x++) {\n        let runColor = false;\n        let runY = 0;\n        let runHistory = [0, 0, 0, 0, 0, 0, 0];\n        for (let y = 0; y < this.size; y++) {\n          if (this.modules[y][x] == runColor) {\n            runY++;\n            if (runY == 5)\n              result += _QrCode.PENALTY_N1;\n            else if (runY > 5)\n              result++;\n          } else {\n            this.finderPenaltyAddHistory(runY, runHistory);\n            if (!runColor)\n              result += this.finderPenaltyCountPatterns(runHistory) * _QrCode.PENALTY_N3;\n            runColor = this.modules[y][x];\n            runY = 1;\n          }\n        }\n        result += this.finderPenaltyTerminateAndCount(runColor, runY, runHistory) * _QrCode.PENALTY_N3;\n      }\n      for (let y = 0; y < this.size - 1; y++) {\n        for (let x = 0; x < this.size - 1; x++) {\n          const color = this.modules[y][x];\n          if (color == this.modules[y][x + 1] && color == this.modules[y + 1][x] && color == this.modules[y + 1][x + 1])\n            result += _QrCode.PENALTY_N2;\n        }\n      }\n      let dark = 0;\n      for (const row of this.modules)\n        dark = row.reduce((sum, color) => sum + (color ? 1 : 0), dark);\n      const total = this.size * this.size;\n      const k = Math.ceil(Math.abs(dark * 20 - total * 10) / total) - 1;\n      assert(0 <= k && k <= 9);\n      result += k * _QrCode.PENALTY_N4;\n      assert(0 <= result && result <= 2568888);\n      return result;\n    }\n    getAlignmentPatternPositions() {\n      if (this.version == 1)\n        return [];\n      else {\n        const numAlign = Math.floor(this.version / 7) + 2;\n        const step = this.version == 32 ? 26 : Math.ceil((this.version * 4 + 4) / (numAlign * 2 - 2)) * 2;\n        let result = [6];\n        for (let pos = this.size - 7; result.length < numAlign; pos -= step)\n          result.splice(1, 0, pos);\n        return result;\n      }\n    }\n    static getNumRawDataModules(ver) {\n      if (ver < _QrCode.MIN_VERSION || ver > _QrCode.MAX_VERSION)\n        throw new RangeError(\"Version number out of range\");\n      let result = (16 * ver + 128) * ver + 64;\n      if (ver >= 2) {\n        const numAlign = Math.floor(ver / 7) + 2;\n        result -= (25 * numAlign - 10) * numAlign - 55;\n        if (ver >= 7)\n          result -= 36;\n      }\n      assert(208 <= result && result <= 29648);\n      return result;\n    }\n    static getNumDataCodewords(ver, ecl) {\n      return Math.floor(_QrCode.getNumRawDataModules(ver) / 8) - _QrCode.ECC_CODEWORDS_PER_BLOCK[ecl.ordinal][ver] * _QrCode.NUM_ERROR_CORRECTION_BLOCKS[ecl.ordinal][ver];\n    }\n    static reedSolomonComputeDivisor(degree) {\n      if (degree < 1 || degree > 255)\n        throw new RangeError(\"Degree out of range\");\n      let result = [];\n      for (let i = 0; i < degree - 1; i++)\n        result.push(0);\n      result.push(1);\n      let root = 1;\n      for (let i = 0; i < degree; i++) {\n        for (let j = 0; j < result.length; j++) {\n          result[j] = _QrCode.reedSolomonMultiply(result[j], root);\n          if (j + 1 < result.length)\n            result[j] ^= result[j + 1];\n        }\n        root = _QrCode.reedSolomonMultiply(root, 2);\n      }\n      return result;\n    }\n    static reedSolomonComputeRemainder(data, divisor) {\n      let result = divisor.map((_) => 0);\n      for (const b of data) {\n        const factor = b ^ result.shift();\n        result.push(0);\n        divisor.forEach((coef, i) => result[i] ^= _QrCode.reedSolomonMultiply(coef, factor));\n      }\n      return result;\n    }\n    static reedSolomonMultiply(x, y) {\n      if (x >>> 8 != 0 || y >>> 8 != 0)\n        throw new RangeError(\"Byte out of range\");\n      let z = 0;\n      for (let i = 7; i >= 0; i--) {\n        z = z << 1 ^ (z >>> 7) * 285;\n        z ^= (y >>> i & 1) * x;\n      }\n      assert(z >>> 8 == 0);\n      return z;\n    }\n    finderPenaltyCountPatterns(runHistory) {\n      const n = runHistory[1];\n      assert(n <= this.size * 3);\n      const core = n > 0 && runHistory[2] == n && runHistory[3] == n * 3 && runHistory[4] == n && runHistory[5] == n;\n      return (core && runHistory[0] >= n * 4 && runHistory[6] >= n ? 1 : 0) + (core && runHistory[6] >= n * 4 && runHistory[0] >= n ? 1 : 0);\n    }\n    finderPenaltyTerminateAndCount(currentRunColor, currentRunLength, runHistory) {\n      if (currentRunColor) {\n        this.finderPenaltyAddHistory(currentRunLength, runHistory);\n        currentRunLength = 0;\n      }\n      currentRunLength += this.size;\n      this.finderPenaltyAddHistory(currentRunLength, runHistory);\n      return this.finderPenaltyCountPatterns(runHistory);\n    }\n    finderPenaltyAddHistory(currentRunLength, runHistory) {\n      if (runHistory[0] == 0)\n        currentRunLength += this.size;\n      runHistory.pop();\n      runHistory.unshift(currentRunLength);\n    }\n  };\n  let QrCode = _QrCode;\n  QrCode.MIN_VERSION = 1;\n  QrCode.MAX_VERSION = 40;\n  QrCode.PENALTY_N1 = 3;\n  QrCode.PENALTY_N2 = 3;\n  QrCode.PENALTY_N3 = 40;\n  QrCode.PENALTY_N4 = 10;\n  QrCode.ECC_CODEWORDS_PER_BLOCK = [\n    [-1, 7, 10, 15, 20, 26, 18, 20, 24, 30, 18, 20, 24, 26, 30, 22, 24, 28, 30, 28, 28, 28, 28, 30, 30, 26, 28, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30],\n    [-1, 10, 16, 26, 18, 24, 16, 18, 22, 22, 26, 30, 22, 22, 24, 24, 28, 28, 26, 26, 26, 26, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28],\n    [-1, 13, 22, 18, 26, 18, 24, 18, 22, 20, 24, 28, 26, 24, 20, 30, 24, 28, 28, 26, 30, 28, 30, 30, 30, 30, 28, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30],\n    [-1, 17, 28, 22, 16, 22, 28, 26, 26, 24, 28, 24, 28, 22, 24, 24, 30, 28, 28, 26, 28, 30, 24, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30]\n  ];\n  QrCode.NUM_ERROR_CORRECTION_BLOCKS = [\n    [-1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 4, 4, 4, 4, 4, 6, 6, 6, 6, 7, 8, 8, 9, 9, 10, 12, 12, 12, 13, 14, 15, 16, 17, 18, 19, 19, 20, 21, 22, 24, 25],\n    [-1, 1, 1, 1, 2, 2, 4, 4, 4, 5, 5, 5, 8, 9, 9, 10, 10, 11, 13, 14, 16, 17, 17, 18, 20, 21, 23, 25, 26, 28, 29, 31, 33, 35, 37, 38, 40, 43, 45, 47, 49],\n    [-1, 1, 1, 2, 2, 4, 4, 6, 6, 8, 8, 8, 10, 12, 16, 12, 17, 16, 18, 21, 20, 23, 23, 25, 27, 29, 34, 34, 35, 38, 40, 43, 45, 48, 51, 53, 56, 59, 62, 65, 68],\n    [-1, 1, 1, 2, 4, 4, 4, 5, 6, 8, 8, 11, 11, 16, 16, 18, 16, 19, 21, 25, 25, 25, 34, 30, 32, 35, 37, 40, 42, 45, 48, 51, 54, 57, 60, 63, 66, 70, 74, 77, 81]\n  ];\n  qrcodegen2.QrCode = QrCode;\n  function appendBits(val, len, bb) {\n    if (len < 0 || len > 31 || val >>> len != 0)\n      throw new RangeError(\"Value out of range\");\n    for (let i = len - 1; i >= 0; i--)\n      bb.push(val >>> i & 1);\n  }\n  function getBit(x, i) {\n    return (x >>> i & 1) != 0;\n  }\n  function assert(cond) {\n    if (!cond)\n      throw new Error(\"Assertion error\");\n  }\n  const _QrSegment = class {\n    constructor(mode, numChars, bitData) {\n      this.mode = mode;\n      this.numChars = numChars;\n      this.bitData = bitData;\n      if (numChars < 0)\n        throw new RangeError(\"Invalid argument\");\n      this.bitData = bitData.slice();\n    }\n    static makeBytes(data) {\n      let bb = [];\n      for (const b of data)\n        appendBits(b, 8, bb);\n      return new _QrSegment(_QrSegment.Mode.BYTE, data.length, bb);\n    }\n    static makeNumeric(digits) {\n      if (!_QrSegment.isNumeric(digits))\n        throw new RangeError(\"String contains non-numeric characters\");\n      let bb = [];\n      for (let i = 0; i < digits.length; ) {\n        const n = Math.min(digits.length - i, 3);\n        appendBits(parseInt(digits.substr(i, n), 10), n * 3 + 1, bb);\n        i += n;\n      }\n      return new _QrSegment(_QrSegment.Mode.NUMERIC, digits.length, bb);\n    }\n    static makeAlphanumeric(text) {\n      if (!_QrSegment.isAlphanumeric(text))\n        throw new RangeError(\"String contains unencodable characters in alphanumeric mode\");\n      let bb = [];\n      let i;\n      for (i = 0; i + 2 <= text.length; i += 2) {\n        let temp = _QrSegment.ALPHANUMERIC_CHARSET.indexOf(text.charAt(i)) * 45;\n        temp += _QrSegment.ALPHANUMERIC_CHARSET.indexOf(text.charAt(i + 1));\n        appendBits(temp, 11, bb);\n      }\n      if (i < text.length)\n        appendBits(_QrSegment.ALPHANUMERIC_CHARSET.indexOf(text.charAt(i)), 6, bb);\n      return new _QrSegment(_QrSegment.Mode.ALPHANUMERIC, text.length, bb);\n    }\n    static makeSegments(text) {\n      if (text == \"\")\n        return [];\n      else if (_QrSegment.isNumeric(text))\n        return [_QrSegment.makeNumeric(text)];\n      else if (_QrSegment.isAlphanumeric(text))\n        return [_QrSegment.makeAlphanumeric(text)];\n      else\n        return [_QrSegment.makeBytes(_QrSegment.toUtf8ByteArray(text))];\n    }\n    static makeEci(assignVal) {\n      let bb = [];\n      if (assignVal < 0)\n        throw new RangeError(\"ECI assignment value out of range\");\n      else if (assignVal < 1 << 7)\n        appendBits(assignVal, 8, bb);\n      else if (assignVal < 1 << 14) {\n        appendBits(2, 2, bb);\n        appendBits(assignVal, 14, bb);\n      } else if (assignVal < 1e6) {\n        appendBits(6, 3, bb);\n        appendBits(assignVal, 21, bb);\n      } else\n        throw new RangeError(\"ECI assignment value out of range\");\n      return new _QrSegment(_QrSegment.Mode.ECI, 0, bb);\n    }\n    static isNumeric(text) {\n      return _QrSegment.NUMERIC_REGEX.test(text);\n    }\n    static isAlphanumeric(text) {\n      return _QrSegment.ALPHANUMERIC_REGEX.test(text);\n    }\n    getData() {\n      return this.bitData.slice();\n    }\n    static getTotalBits(segs, version) {\n      let result = 0;\n      for (const seg of segs) {\n        const ccbits = seg.mode.numCharCountBits(version);\n        if (seg.numChars >= 1 << ccbits)\n          return Infinity;\n        result += 4 + ccbits + seg.bitData.length;\n      }\n      return result;\n    }\n    static toUtf8ByteArray(str) {\n      str = encodeURI(str);\n      let result = [];\n      for (let i = 0; i < str.length; i++) {\n        if (str.charAt(i) != \"%\")\n          result.push(str.charCodeAt(i));\n        else {\n          result.push(parseInt(str.substr(i + 1, 2), 16));\n          i += 2;\n        }\n      }\n      return result;\n    }\n  };\n  let QrSegment = _QrSegment;\n  QrSegment.NUMERIC_REGEX = /^[0-9]*$/;\n  QrSegment.ALPHANUMERIC_REGEX = /^[A-Z0-9 $%*+.\\/:-]*$/;\n  QrSegment.ALPHANUMERIC_CHARSET = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ $%*+-./:\";\n  qrcodegen2.QrSegment = QrSegment;\n})(qrcodegen || (qrcodegen = {}));\n((qrcodegen2) => {\n  let QrCode;\n  ((QrCode2) => {\n    const _Ecc = class {\n      constructor(ordinal, formatBits) {\n        this.ordinal = ordinal;\n        this.formatBits = formatBits;\n      }\n    };\n    let Ecc = _Ecc;\n    Ecc.LOW = new _Ecc(0, 1);\n    Ecc.MEDIUM = new _Ecc(1, 0);\n    Ecc.QUARTILE = new _Ecc(2, 3);\n    Ecc.HIGH = new _Ecc(3, 2);\n    QrCode2.Ecc = Ecc;\n  })(QrCode = qrcodegen2.QrCode || (qrcodegen2.QrCode = {}));\n})(qrcodegen || (qrcodegen = {}));\n((qrcodegen2) => {\n  let QrSegment;\n  ((QrSegment2) => {\n    const _Mode = class {\n      constructor(modeBits, numBitsCharCount) {\n        this.modeBits = modeBits;\n        this.numBitsCharCount = numBitsCharCount;\n      }\n      numCharCountBits(ver) {\n        return this.numBitsCharCount[Math.floor((ver + 7) / 17)];\n      }\n    };\n    let Mode = _Mode;\n    Mode.NUMERIC = new _Mode(1, [10, 12, 14]);\n    Mode.ALPHANUMERIC = new _Mode(2, [9, 11, 13]);\n    Mode.BYTE = new _Mode(4, [8, 16, 16]);\n    Mode.KANJI = new _Mode(8, [8, 10, 12]);\n    Mode.ECI = new _Mode(7, [0, 0, 0]);\n    QrSegment2.Mode = Mode;\n  })(QrSegment = qrcodegen2.QrSegment || (qrcodegen2.QrSegment = {}));\n})(qrcodegen || (qrcodegen = {}));\nvar qrcodegen_default = qrcodegen;\n\n// src/index.tsx\n/**\n * @license qrcode.react\n * Copyright (c) Paul O'Shannessy\n * SPDX-License-Identifier: ISC\n */\nvar ERROR_LEVEL_MAP = {\n  L: qrcodegen_default.QrCode.Ecc.LOW,\n  M: qrcodegen_default.QrCode.Ecc.MEDIUM,\n  Q: qrcodegen_default.QrCode.Ecc.QUARTILE,\n  H: qrcodegen_default.QrCode.Ecc.HIGH\n};\nvar DEFAULT_SIZE = 128;\nvar DEFAULT_LEVEL = \"L\";\nvar DEFAULT_BGCOLOR = \"#FFFFFF\";\nvar DEFAULT_FGCOLOR = \"#000000\";\nvar DEFAULT_INCLUDEMARGIN = false;\nvar MARGIN_SIZE = 4;\nvar DEFAULT_IMG_SCALE = 0.1;\nfunction generatePath(modules, margin = 0) {\n  const ops = [];\n  modules.forEach(function(row, y) {\n    let start = null;\n    row.forEach(function(cell, x) {\n      if (!cell && start !== null) {\n        ops.push(`M${start + margin} ${y + margin}h${x - start}v1H${start + margin}z`);\n        start = null;\n        return;\n      }\n      if (x === row.length - 1) {\n        if (!cell) {\n          return;\n        }\n        if (start === null) {\n          ops.push(`M${x + margin},${y + margin} h1v1H${x + margin}z`);\n        } else {\n          ops.push(`M${start + margin},${y + margin} h${x + 1 - start}v1H${start + margin}z`);\n        }\n        return;\n      }\n      if (cell && start === null) {\n        start = x;\n      }\n    });\n  });\n  return ops.join(\"\");\n}\nfunction excavateModules(modules, excavation) {\n  return modules.slice().map((row, y) => {\n    if (y < excavation.y || y >= excavation.y + excavation.h) {\n      return row;\n    }\n    return row.map((cell, x) => {\n      if (x < excavation.x || x >= excavation.x + excavation.w) {\n        return cell;\n      }\n      return false;\n    });\n  });\n}\nfunction getImageSettings(cells, size, includeMargin, imageSettings) {\n  if (imageSettings == null) {\n    return null;\n  }\n  const margin = includeMargin ? MARGIN_SIZE : 0;\n  const numCells = cells.length + margin * 2;\n  const defaultSize = Math.floor(size * DEFAULT_IMG_SCALE);\n  const scale = numCells / size;\n  const w = (imageSettings.width || defaultSize) * scale;\n  const h = (imageSettings.height || defaultSize) * scale;\n  const x = imageSettings.x == null ? cells.length / 2 - w / 2 : imageSettings.x * scale;\n  const y = imageSettings.y == null ? cells.length / 2 - h / 2 : imageSettings.y * scale;\n  let excavation = null;\n  if (imageSettings.excavate) {\n    let floorX = Math.floor(x);\n    let floorY = Math.floor(y);\n    let ceilW = Math.ceil(w + x - floorX);\n    let ceilH = Math.ceil(h + y - floorY);\n    excavation = { x: floorX, y: floorY, w: ceilW, h: ceilH };\n  }\n  return { x, y, h, w, excavation };\n}\nvar SUPPORTS_PATH2D = function() {\n  try {\n    new Path2D().addPath(new Path2D());\n  } catch (e) {\n    return false;\n  }\n  return true;\n}();\nfunction QRCodeCanvas(props) {\n  const _a = props, {\n    value,\n    size = DEFAULT_SIZE,\n    level = DEFAULT_LEVEL,\n    bgColor = DEFAULT_BGCOLOR,\n    fgColor = DEFAULT_FGCOLOR,\n    includeMargin = DEFAULT_INCLUDEMARGIN,\n    style,\n    imageSettings\n  } = _a, otherProps = __objRest(_a, [\n    \"value\",\n    \"size\",\n    \"level\",\n    \"bgColor\",\n    \"fgColor\",\n    \"includeMargin\",\n    \"style\",\n    \"imageSettings\"\n  ]);\n  const imgSrc = imageSettings == null ? void 0 : imageSettings.src;\n  const _canvas = React.useRef(null);\n  const _image = React.useRef(null);\n  const [isImgLoaded, setIsImageLoaded] = React.useState(false);\n  React.useEffect(() => {\n    if (_canvas.current != null) {\n      const canvas = _canvas.current;\n      const ctx = canvas.getContext(\"2d\");\n      if (!ctx) {\n        return;\n      }\n      let cells = qrcodegen_default.QrCode.encodeText(value, ERROR_LEVEL_MAP[level]).getModules();\n      const margin = includeMargin ? MARGIN_SIZE : 0;\n      const numCells = cells.length + margin * 2;\n      const calculatedImageSettings = getImageSettings(cells, size, includeMargin, imageSettings);\n      const image = _image.current;\n      const haveImageToRender = calculatedImageSettings != null && image !== null && image.complete && image.naturalHeight !== 0 && image.naturalWidth !== 0;\n      if (haveImageToRender) {\n        if (calculatedImageSettings.excavation != null) {\n          cells = excavateModules(cells, calculatedImageSettings.excavation);\n        }\n      }\n      const pixelRatio = window.devicePixelRatio || 1;\n      canvas.height = canvas.width = size * pixelRatio;\n      const scale = size / numCells * pixelRatio;\n      ctx.scale(scale, scale);\n      ctx.fillStyle = bgColor;\n      ctx.fillRect(0, 0, numCells, numCells);\n      ctx.fillStyle = fgColor;\n      if (SUPPORTS_PATH2D) {\n        ctx.fill(new Path2D(generatePath(cells, margin)));\n      } else {\n        cells.forEach(function(row, rdx) {\n          row.forEach(function(cell, cdx) {\n            if (cell) {\n              ctx.fillRect(cdx + margin, rdx + margin, 1, 1);\n            }\n          });\n        });\n      }\n      if (haveImageToRender) {\n        ctx.drawImage(image, calculatedImageSettings.x + margin, calculatedImageSettings.y + margin, calculatedImageSettings.w, calculatedImageSettings.h);\n      }\n    }\n  });\n  React.useEffect(() => {\n    setIsImageLoaded(false);\n  }, [imgSrc]);\n  const canvasStyle = __spreadValues({ height: size, width: size }, style);\n  let img = null;\n  if (imgSrc != null) {\n    img = /* @__PURE__ */ React.createElement(\"img\", {\n      src: imgSrc,\n      key: imgSrc,\n      style: { display: \"none\" },\n      onLoad: () => {\n        setIsImageLoaded(true);\n      },\n      ref: _image\n    });\n  }\n  return /* @__PURE__ */ React.createElement(React.Fragment, null, /* @__PURE__ */ React.createElement(\"canvas\", __spreadValues({\n    style: canvasStyle,\n    height: size,\n    width: size,\n    ref: _canvas\n  }, otherProps)), img);\n}\nfunction QRCodeSVG(props) {\n  const _a = props, {\n    value,\n    size = DEFAULT_SIZE,\n    level = DEFAULT_LEVEL,\n    bgColor = DEFAULT_BGCOLOR,\n    fgColor = DEFAULT_FGCOLOR,\n    includeMargin = DEFAULT_INCLUDEMARGIN,\n    imageSettings\n  } = _a, otherProps = __objRest(_a, [\n    \"value\",\n    \"size\",\n    \"level\",\n    \"bgColor\",\n    \"fgColor\",\n    \"includeMargin\",\n    \"imageSettings\"\n  ]);\n  let cells = qrcodegen_default.QrCode.encodeText(value, ERROR_LEVEL_MAP[level]).getModules();\n  const margin = includeMargin ? MARGIN_SIZE : 0;\n  const numCells = cells.length + margin * 2;\n  const calculatedImageSettings = getImageSettings(cells, size, includeMargin, imageSettings);\n  let image = null;\n  if (imageSettings != null && calculatedImageSettings != null) {\n    if (calculatedImageSettings.excavation != null) {\n      cells = excavateModules(cells, calculatedImageSettings.excavation);\n    }\n    image = /* @__PURE__ */ React.createElement(\"image\", {\n      xlinkHref: imageSettings.src,\n      height: calculatedImageSettings.h,\n      width: calculatedImageSettings.w,\n      x: calculatedImageSettings.x + margin,\n      y: calculatedImageSettings.y + margin,\n      preserveAspectRatio: \"none\"\n    });\n  }\n  const fgPath = generatePath(cells, margin);\n  return /* @__PURE__ */ React.createElement(\"svg\", __spreadValues({\n    height: size,\n    width: size,\n    viewBox: `0 0 ${numCells} ${numCells}`\n  }, otherProps), /* @__PURE__ */ React.createElement(\"path\", {\n    fill: bgColor,\n    d: `M0,0 h${numCells}v${numCells}H0z`,\n    shapeRendering: \"crispEdges\"\n  }), /* @__PURE__ */ React.createElement(\"path\", {\n    fill: fgColor,\n    d: fgPath,\n    shapeRendering: \"crispEdges\"\n  }), image);\n}\nvar QRCode = (props) => {\n  const _a = props, { renderAs } = _a, otherProps = __objRest(_a, [\"renderAs\"]);\n  if (renderAs === \"svg\") {\n    return /* @__PURE__ */ React.createElement(QRCodeSVG, __spreadValues({}, otherProps));\n  }\n  return /* @__PURE__ */ React.createElement(QRCodeCanvas, __spreadValues({}, otherProps));\n};\nexport {\n  QRCodeCanvas,\n  QRCodeSVG,\n  QRCode as default\n};\n","import { Localize, useTranslations } from '@deriv-com/translations';\nimport AccountArticle from '../../../Components/article';\n\nconst TwoFactorAuthenticationArticle = () => {\n    const { localize } = useTranslations();\n    return (\n        <AccountArticle\n            title={localize('Two-factor authentication (2FA)')}\n            descriptions={[\n                <Localize\n                    key={0}\n                    i18n_default_text='Protect your account with 2FA. Each time you log in to your account, you will need to enter your password and an authentication code generated by a 2FA app on your smartphone.'\n                />,\n            ]}\n        />\n    );\n};\n\nexport default TwoFactorAuthenticationArticle;\n","import { Fragment } from 'react';\nimport QRCodeSVG from 'qrcode.react';\nimport { ThemedScrollbars, Text, Timeline, Loading, Clipboard } from '@deriv/components';\nimport TwoFactorAuthenticationArticle from './two-factor-authentication-article';\nimport { Localize, useTranslations } from '@deriv-com/translations';\nimport { useDevice } from '@deriv-com/ui';\nimport DigitForm from './digit-form';\n\ntype TTwoFactorDisabled = {\n    secret_key: string;\n    qr_secret_key: string;\n    is_qr_loading: boolean;\n};\n\nconst TwoFactorDisabled = ({ secret_key, qr_secret_key, is_qr_loading }: TTwoFactorDisabled) => {\n    const { isDesktop } = useDevice();\n    const { localize } = useTranslations();\n    return (\n        <Fragment>\n            <ThemedScrollbars is_bypassed={!isDesktop} autohide className='two-factor__scrollbars'>\n                {!isDesktop && <TwoFactorAuthenticationArticle />}\n                <Text as='h2' color='prominent' weight='bold' className='two-factor__title'>\n                    <Localize i18n_default_text='How to set up 2FA for your Deriv account' />\n                </Text>\n                <Timeline className='two-factor__timeline' line_height='xs'>\n                    <Timeline.Item\n                        item_title={\n                            <Localize\n                                i18n_default_text='Scan the QR code below with your 2FA app. We recommend <0>Authy</0> or <1>Google Authenticator</1>.'\n                                components={[\n                                    <a\n                                        className='link two-factor__link'\n                                        href='https://authy.com/'\n                                        target='_blank'\n                                        rel='noopener noreferrer'\n                                        key={0}\n                                        aria-label={localize('Authy')}\n                                    />,\n                                    <a\n                                        className='link two-factor__link'\n                                        href='https://github.com/google/google-authenticator/wiki#implementations'\n                                        target='_blank'\n                                        rel='noopener noreferrer'\n                                        key={1}\n                                        aria-label={localize('Google Authenticator')}\n                                    />,\n                                ]}\n                            />\n                        }\n                    >\n                        <div className='two-factor__qr'>\n                            {is_qr_loading ? (\n                                <Loading is_fullscreen={false} />\n                            ) : (\n                                <Fragment>\n                                    {qr_secret_key && (\n                                        <div className='two-factor__qr--wrapper'>\n                                            <QRCodeSVG value={qr_secret_key} />\n                                        </div>\n                                    )}\n\n                                    {secret_key && (\n                                        <Fragment>\n                                            <Text as='h4' size='xs' align='center' className='two-factor__qr--message'>\n                                                <Localize i18n_default_text='If you are unable to scan the QR code, you can manually enter this code instead:' />\n                                            </Text>\n                                            <div className='two-factor__qr--code' data-testid='dt_2fa_clipboard'>\n                                                <Text size='xs'>{secret_key}</Text>\n                                                <Clipboard\n                                                    text_copy={secret_key}\n                                                    info_message={localize('Click here to copy key')}\n                                                    success_message={localize('Key copied!')}\n                                                    className='two-factor__qr--clipboard'\n                                                />\n                                            </div>\n                                        </Fragment>\n                                    )}\n                                </Fragment>\n                            )}\n                        </div>\n                    </Timeline.Item>\n                    <Timeline.Item\n                        item_title={\n                            <Localize i18n_default_text='Enter the authentication code generated by your 2FA app:' />\n                        }\n                    >\n                        <DigitForm />\n                    </Timeline.Item>\n                </Timeline>\n            </ThemedScrollbars>\n            {isDesktop && <TwoFactorAuthenticationArticle />}\n        </Fragment>\n    );\n};\n\nexport default TwoFactorDisabled;\n","import TwoFactorAuthentication from './two-factor-authentication';\n\nexport default TwoFactorAuthentication;\n","import { useState, useCallback, useEffect } from 'react';\nimport { getPropertyValue, WS } from '@deriv/shared';\nimport LoadErrorMessage from '../../../Components/load-error-message';\nimport { observer, useStore } from '@deriv/stores';\nimport { Loading } from '@deriv/components';\nimport TwoFactorEnabled from './two-factor-enabled';\nimport TwoFactorDisabled from './two-factor-disabled';\n\nconst TwoFactorAuthentication = observer(() => {\n    const { client } = useStore();\n    const { email_address, getTwoFAStatus, has_enabled_two_fa, is_switching } = client;\n\n    const [is_loading, setLoading] = useState(true);\n    const [is_qr_loading, setQrLoading] = useState(false);\n    const [error_message, setErrorMessage] = useState('');\n    const [secret_key, setSecretKey] = useState('');\n    const [qr_secret_key, setQrSecretKey] = useState('');\n\n    const generateQrCode = useCallback(async () => {\n        setQrLoading(true);\n        const generate_response = await WS.authorized.accountSecurity({\n            account_security: 1,\n            totp_action: 'generate',\n        });\n        setLoading(false);\n\n        if (generate_response?.error) {\n            setErrorMessage(generate_response.error.message);\n            return;\n        }\n        const secret_key_value = getPropertyValue(generate_response, ['account_security', 'totp', 'secret_key']);\n        const qr_secret_key_value = `otpauth://totp/${email_address}?secret=${secret_key_value}&issuer=Deriv.com`;\n\n        setSecretKey(secret_key_value);\n        setQrSecretKey(qr_secret_key_value);\n        setQrLoading(false);\n    }, [email_address]);\n\n    const getDigitStatus = useCallback(async () => {\n        const status_response = await getTwoFAStatus();\n        // status_response can be boolean or an error object\n        if (typeof status_response !== 'boolean') {\n            setErrorMessage(status_response?.error?.message);\n            setLoading(false);\n            return;\n        }\n\n        if (!status_response) generateQrCode();\n\n        setLoading(false);\n    }, [getTwoFAStatus, generateQrCode]);\n\n    useEffect(() => {\n        getDigitStatus();\n    }, [getDigitStatus, has_enabled_two_fa]);\n\n    if (is_loading || is_switching) return <Loading is_fullscreen={false} className='account__initial-loader' />;\n    if (error_message) return <LoadErrorMessage error_message={error_message} />;\n\n    return (\n        <section className='two-factor'>\n            <div className='two-factor__wrapper'>\n                {has_enabled_two_fa ? (\n                    <TwoFactorEnabled />\n                ) : (\n                    <TwoFactorDisabled\n                        secret_key={secret_key}\n                        qr_secret_key={qr_secret_key}\n                        is_qr_loading={is_qr_loading}\n                    />\n                )}\n            </div>\n        </section>\n    );\n});\n\nexport default TwoFactorAuthentication;\n"],"names":["_ref","title","descriptions","onClickLearnMore","className","has_descriptions","length","has_single_description","_jsxs","clsx","children","_jsx","Text","as","color","line_height","size","weight","Fragment","map","description","idx","onClick","Localize","i18n_default_text","Icon","icon","observer","client","common","useStore","localize","useTranslations","is_language_changing","has_enabled_two_fa","setTwoFAChangedStatus","setTwoFAStatus","is_success","setSuccess","useState","is_ready_for_verification","setReadyForVerification","button_text","formik_ref","useRef","enable_response","useEffect","current","setFieldTouched","Formik","initialValues","digit_code","onSubmit","async","values","resetForm","error","is_enabled_response","getPropertyValue","validate","test","isValid","totp_action","WS","authorized","accountSecurity","account_security","otp","code","message","innerRef","_ref2","handleChange","handleBlur","isSubmitting","dirty","Form","noValidate","Field","name","_ref3","field","meta","Input","type","label","value","onChange","e","onBlur","required","touched","undefined","maxLength","autoComplete","Button","is_disabled","has_effect","is_loading","is_submit_success","text","large","primary","TwoFactorEnabled","isDesktop","useDevice","ThemedScrollbars","is_bypassed","align","DigitForm","qrcodegen","__defProp","Object","defineProperty","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__objRest","source","exclude","target","indexOf","qrcodegen2","_QrCode","constructor","version","errorCorrectionLevel","dataCodewords","msk","this","modules","isFunction","MIN_VERSION","MAX_VERSION","RangeError","row","i","push","slice","drawFunctionPatterns","allCodewords","addEccAndInterleave","drawCodewords","minPenalty","applyMask","drawFormatBits","penalty","getPenaltyScore","assert","mask","encodeText","ecl","segs","QrSegment","makeSegments","encodeSegments","encodeBinary","data","seg","makeBytes","minVersion","maxVersion","boostEcl","dataUsedBits","dataCapacityBits2","getNumDataCodewords","usedBits","getTotalBits","newEcl","Ecc","MEDIUM","QUARTILE","HIGH","bb","appendBits","mode","modeBits","numChars","numCharCountBits","getData","dataCapacityBits","Math","min","padByte","forEach","getModule","x","y","getModules","setFunctionModule","drawFinderPattern","alignPatPos","getAlignmentPatternPositions","numAlign","j","drawAlignmentPattern","drawVersion","formatBits","rem","bits","getBit","floor","dy","dx","dist","max","abs","xx","yy","isDark","ver","numBlocks","NUM_ERROR_CORRECTION_BLOCKS","ordinal","blockEccLen","ECC_CODEWORDS_PER_BLOCK","rawCodewords","getNumRawDataModules","numShortBlocks","shortBlockLen","blocks","rsDiv","reedSolomonComputeDivisor","k","dat","ecc","reedSolomonComputeRemainder","concat","result","block","right","vert","invert","Error","runColor","runX","runHistory","PENALTY_N1","finderPenaltyAddHistory","finderPenaltyCountPatterns","PENALTY_N3","finderPenaltyTerminateAndCount","runY","PENALTY_N2","dark","reduce","sum","total","ceil","PENALTY_N4","step","pos","splice","degree","root","reedSolomonMultiply","divisor","_","factor","shift","coef","z","n","core","currentRunColor","currentRunLength","pop","unshift","QrCode","val","len","cond","_QrSegment","bitData","Mode","BYTE","makeNumeric","digits","isNumeric","parseInt","substr","NUMERIC","makeAlphanumeric","isAlphanumeric","temp","ALPHANUMERIC_CHARSET","charAt","ALPHANUMERIC","toUtf8ByteArray","makeEci","assignVal","ECI","NUMERIC_REGEX","ALPHANUMERIC_REGEX","ccbits","Infinity","str","encodeURI","charCodeAt","QrCode2","_Ecc","LOW","QrSegment2","_Mode","numBitsCharCount","KANJI","qrcodegen_default","ERROR_LEVEL_MAP","L","M","Q","H","DEFAULT_SIZE","DEFAULT_LEVEL","DEFAULT_BGCOLOR","DEFAULT_FGCOLOR","DEFAULT_INCLUDEMARGIN","generatePath","margin","ops","start","cell","join","excavateModules","excavation","h","w","getImageSettings","cells","includeMargin","imageSettings","numCells","defaultSize","scale","width","height","excavate","floorX","floorY","SUPPORTS_PATH2D","Path2D","addPath","QRCodeCanvas","props","_a","level","bgColor","fgColor","style","otherProps","imgSrc","src","_canvas","_image","isImgLoaded","setIsImageLoaded","canvas","ctx","getContext","calculatedImageSettings","image","haveImageToRender","complete","naturalHeight","naturalWidth","pixelRatio","window","devicePixelRatio","fillStyle","fillRect","fill","rdx","cdx","drawImage","canvasStyle","img","display","onLoad","ref","QRCodeSVG","xlinkHref","preserveAspectRatio","fgPath","viewBox","d","shapeRendering","QRCode","renderAs","TwoFactorAuthenticationArticle","AccountArticle","secret_key","qr_secret_key","is_qr_loading","autohide","Timeline","Item","item_title","components","href","rel","Loading","is_fullscreen","Clipboard","text_copy","info_message","success_message","email_address","getTwoFAStatus","is_switching","setLoading","setQrLoading","error_message","setErrorMessage","setSecretKey","setQrSecretKey","generateQrCode","useCallback","generate_response","secret_key_value","qr_secret_key_value","getDigitStatus","status_response","LoadErrorMessage","TwoFactorDisabled"],"sourceRoot":""}