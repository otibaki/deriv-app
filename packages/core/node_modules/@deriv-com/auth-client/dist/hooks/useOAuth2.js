import { useRef as d, useCallback as p } from "react";
import { getOAuthLogoutUrl as f } from "../constants/urls.js";
import { useIsOAuth2Enabled as g } from "./useIsOAuth2Enabled.js";
import { a as h } from "../js.cookie-OLEfuq_g.js";
const E = 1e4, A = (m, o) => {
  const { OAuth2EnabledApps: l, OAuth2EnabledAppsInitialised: u } = m, r = g(l, u), i = d(), n = () => {
    clearTimeout(i.current);
    const e = document.getElementById("logout-iframe");
    e && e.remove();
  };
  return { OAuth2Logout: p(async () => {
    if (!r) return o();
    const e = (s) => {
      if (s.data === "logout_complete") {
        const c = ["deriv.com", "binary.sx", "pages.dev", "localhost"], a = window.location.hostname.split(".").slice(-2).join(".");
        c.includes(a) && h.set("logged_state", "false", {
          expires: 30,
          path: "/",
          domain: a,
          secure: !0
        }), o(), window.removeEventListener("message", e), n();
      }
    };
    window.addEventListener("message", e);
    let t = document.getElementById("logout-iframe");
    t || (t = document.createElement("iframe"), t.id = "logout-iframe", t.style.display = "none", document.body.appendChild(t), i.current = setTimeout(() => {
      o(), window.removeEventListener("message", e), n();
    }, E)), t.src = f(), t.onerror = (s) => {
      console.error("There has been a problem with the logout: ", s), window.removeEventListener("message", e), n();
    };
  }, [r, o]) };
};
export {
  A as useOAuth2
};
