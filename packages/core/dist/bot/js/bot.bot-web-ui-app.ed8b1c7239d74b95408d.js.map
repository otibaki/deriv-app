{"version":3,"file":"bot/js/bot.bot-web-ui-app.ed8b1c7239d74b95408d.js","mappings":"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","sources":["webpack://@deriv/bot-web-ui/../bot-skeleton/src/constants/config.ts","webpack://@deriv/bot-web-ui/../bot-skeleton/src/constants/messages.ts","webpack://@deriv/bot-web-ui/../bot-skeleton/src/constants/save-type.ts","webpack://@deriv/bot-web-ui/../bot-skeleton/src/scratch/accumulators-proposal-handler.js","webpack://@deriv/bot-web-ui/../bot-skeleton/src/scratch/dbot-store.js","webpack://@deriv/bot-web-ui/../bot-skeleton/src/services/api/binary-utils.js","webpack://@deriv/bot-web-ui/../bot-skeleton/src/services/api/ticks_service.js","webpack://@deriv/bot-web-ui/../bot-skeleton/src/services/tradeEngine/utils/cliTools.js","webpack://@deriv/bot-web-ui/../bot-skeleton/src/services/tradeEngine/utils/sanitize.js","webpack://@deriv/bot-web-ui/../indicators/src/utils/math.js","webpack://@deriv/bot-web-ui/../indicators/src/indicators/simple-moving-average.js","webpack://@deriv/bot-web-ui/../indicators/src/indicators/bollinger-bands.js","webpack://@deriv/bot-web-ui/../indicators/src/indicators/exponential-moving-average.js","webpack://@deriv/bot-web-ui/../indicators/src/indicators/macd.js","webpack://@deriv/bot-web-ui/../indicators/src/indicators/relative-strength-index.js","webpack://@deriv/bot-web-ui/../bot-skeleton/src/services/tradeEngine/Interface/IndicatorsInterface.js","webpack://@deriv/bot-web-ui/../bot-skeleton/src/services/tradeEngine/Interface/ToolsInterface.js","webpack://@deriv/bot-web-ui/../bot-skeleton/src/services/tradeEngine/Interface/CandleInterface.js","webpack://@deriv/bot-web-ui/../bot-skeleton/src/services/tradeEngine/Interface/MiscInterface.js","webpack://@deriv/bot-web-ui/../bot-skeleton/src/services/tradeEngine/Interface/TicksInterface.js","webpack://@deriv/bot-web-ui/../bot-skeleton/src/services/tradeEngine/Interface/BotInterface.js","webpack://@deriv/bot-web-ui/../bot-skeleton/src/services/tradeEngine/trade/Balance.js","webpack://@deriv/bot-web-ui/../bot-skeleton/src/services/tradeEngine/trade/state/constants.js","webpack://@deriv/bot-web-ui/../bot-skeleton/src/services/tradeEngine/trade/state/actions/index.js","webpack://@deriv/bot-web-ui/../bot-skeleton/src/services/tradeEngine/trade/Purchase.js","webpack://@deriv/bot-web-ui/../bot-skeleton/src/services/tradeEngine/trade/state/reducers/index.js","webpack://@deriv/bot-web-ui/../bot-skeleton/src/services/tradeEngine/trade/Ticks.js","webpack://@deriv/bot-web-ui/../bot-skeleton/src/services/tradeEngine/trade/Total.js","webpack://@deriv/bot-web-ui/../bot-skeleton/src/services/tradeEngine/trade/index.js","webpack://@deriv/bot-web-ui/../bot-skeleton/src/services/tradeEngine/trade/Sell.js","webpack://@deriv/bot-web-ui/../bot-skeleton/src/services/tradeEngine/trade/OpenContract.js","webpack://@deriv/bot-web-ui/../bot-skeleton/src/services/tradeEngine/trade/Proposal.js","webpack://@deriv/bot-web-ui/../bot-skeleton/src/services/tradeEngine/Interface/index.js","webpack://@deriv/bot-web-ui/../bot-skeleton/src/services/tradeEngine/utils/interpreter.js","webpack://@deriv/bot-web-ui/../bot-skeleton/src/scratch/goog.js","webpack://@deriv/bot-web-ui/../bot-skeleton/src/scratch/blockly.js","webpack://@deriv/bot-web-ui/../bot-skeleton/src/scratch/dbot.js","webpack://@deriv/bot-web-ui/../bot-skeleton/src/scratch/hooks/colours.js","webpack://@deriv/bot-web-ui/../bot-skeleton/src/scratch/shared.js","webpack://@deriv/bot-web-ui/../bot-skeleton/src/scratch/backward-compatibility.js","webpack://@deriv/bot-web-ui/../bot-skeleton/src/scratch/utils/index.js","webpack://@deriv/bot-web-ui/../bot-skeleton/src/services/api/active-symbols.js","webpack://@deriv/bot-web-ui/../bot-skeleton/src/services/api/api-base.js","webpack://@deriv/bot-web-ui/../bot-skeleton/src/services/api/account-limits.js","webpack://@deriv/bot-web-ui/../bot-skeleton/src/services/api/api-helpers.js","webpack://@deriv/bot-web-ui/../bot-skeleton/src/services/api/api-middleware.js","webpack://@deriv/bot-web-ui/../bot-skeleton/src/services/api/appId.js","webpack://@deriv/bot-web-ui/../bot-skeleton/src/services/api/contracts-for.js","webpack://@deriv/bot-web-ui/../bot-skeleton/src/services/api/server_time.js","webpack://@deriv/bot-web-ui/../bot-skeleton/src/services/api/network_monitor.js","webpack://@deriv/bot-web-ui/../bot-skeleton/src/services/api/trading-times.js","webpack://@deriv/bot-web-ui/../bot-skeleton/src/services/tradeEngine/utils/broadcast.js","webpack://@deriv/bot-web-ui/../bot-skeleton/src/services/tradeEngine/utils/helpers.js","webpack://@deriv/bot-web-ui/../bot-skeleton/src/utils/error-config.js","webpack://@deriv/bot-web-ui/../bot-skeleton/src/utils/error.js","webpack://@deriv/bot-web-ui/../bot-skeleton/src/utils/contract.js","webpack://@deriv/bot-web-ui/../bot-skeleton/src/utils/html-helper.js","webpack://@deriv/bot-web-ui/../bot-skeleton/src/utils/date-time-helper.js","webpack://@deriv/bot-web-ui/../bot-skeleton/src/utils/strategy-helper.js","webpack://@deriv/bot-web-ui/../bot-skeleton/src/utils/error-handling.js","webpack://@deriv/bot-web-ui/../bot-skeleton/src/utils/local-storage.js","webpack://@deriv/bot-web-ui/../bot-skeleton/src/utils/observer.js","webpack://@deriv/bot-web-ui/../bot-skeleton/src/utils/pending-promise.js","webpack://@deriv/bot-web-ui/../bot-skeleton/src/utils/workspace.js","webpack://@deriv/bot-web-ui/./src/public-path.ts","webpack://@deriv/bot-web-ui/../stores/src/storeContext.ts","webpack://@deriv/bot-web-ui/../stores/src/useStore.ts","webpack://@deriv/bot-web-ui/./src/components/draggable/draggable-utils.ts","webpack://@deriv/bot-web-ui/./src/components/draggable/draggable.tsx","webpack://@deriv/bot-web-ui/./src/components/draggable/draggable-resize-wrapper.tsx","webpack://@deriv/bot-web-ui/./src/stores/app-store.ts","webpack://@deriv/bot-web-ui/./src/constants/bot-contents.ts","webpack://@deriv/bot-web-ui/./src/utils/settings.ts","webpack://@deriv/bot-web-ui/./src/stores/blockly-store.ts","webpack://@deriv/bot-web-ui/./src/stores/chart-store.ts","webpack://@deriv/bot-web-ui/./src/constants/quick-strategies/d_alembert.ts","webpack://@deriv/bot-web-ui/./src/constants/quick-strategies/martingale.ts","webpack://@deriv/bot-web-ui/./src/constants/quick-strategies/oscars_grind.ts","webpack://@deriv/bot-web-ui/./src/constants/quick-strategies/reverse_dalembert.ts","webpack://@deriv/bot-web-ui/./src/constants/quick-strategies/reverse_martingale.ts","webpack://@deriv/bot-web-ui/./src/constants/quick-strategies/strategy_1_3_2_6.ts","webpack://@deriv/bot-web-ui/./src/pages/tutorials/constants.ts","webpack://@deriv/bot-web-ui/./src/pages/tutorials/dbot-tours/utils.ts","webpack://@deriv/bot-web-ui/./src/stores/dashboard-store.ts","webpack://@deriv/bot-web-ui/./src/stores/data-collection-store.ts","webpack://@deriv/bot-web-ui/./src/utils/help-content/help-content.config.ts","webpack://@deriv/bot-web-ui/./src/utils/help-content/help-strings/after_purchase.ts","webpack://@deriv/bot-web-ui/./src/utils/help-content/help-strings/balance.ts","webpack://@deriv/bot-web-ui/./src/utils/help-content/help-strings/before_purchase.ts","webpack://@deriv/bot-web-ui/./src/utils/help-content/help-strings/check_direction.ts","webpack://@deriv/bot-web-ui/./src/utils/help-content/help-strings/console.ts","webpack://@deriv/bot-web-ui/./src/utils/help-content/help-strings/contract_check_result.ts","webpack://@deriv/bot-web-ui/./src/utils/help-content/help-strings/controls_flow_statements.ts","webpack://@deriv/bot-web-ui/./src/utils/help-content/help-strings/controls_for.ts","webpack://@deriv/bot-web-ui/./src/utils/help-content/help-strings/controls_forEach.ts","webpack://@deriv/bot-web-ui/./src/utils/help-content/help-strings/controls_if.ts","webpack://@deriv/bot-web-ui/./src/utils/help-content/help-strings/controls_whileUntil.ts","webpack://@deriv/bot-web-ui/./src/utils/help-content/help-strings/during_purchase.ts","webpack://@deriv/bot-web-ui/./src/utils/help-content/help-strings/epoch.ts","webpack://@deriv/bot-web-ui/./src/utils/help-content/help-strings/get_ohlc.ts","webpack://@deriv/bot-web-ui/./src/utils/help-content/help-strings/is_candle_black.ts","webpack://@deriv/bot-web-ui/./src/utils/help-content/help-strings/last_digit.ts","webpack://@deriv/bot-web-ui/./src/utils/help-content/help-strings/logic_operation.ts","webpack://@deriv/bot-web-ui/./src/utils/help-content/help-strings/math_arithmetic.ts","webpack://@deriv/bot-web-ui/./src/utils/help-content/help-strings/math_constrain.ts","webpack://@deriv/bot-web-ui/./src/utils/help-content/help-strings/math_single.ts","webpack://@deriv/bot-web-ui/./src/utils/help-content/help-strings/notify_telegram.ts","webpack://@deriv/bot-web-ui/./src/utils/help-content/help-strings/ohlc.ts","webpack://@deriv/bot-web-ui/./src/utils/help-content/help-strings/ohlc_values.ts","webpack://@deriv/bot-web-ui/./src/utils/help-content/help-strings/ohlc_values_in_list.ts","webpack://@deriv/bot-web-ui/./src/utils/help-content/help-strings/procedures_ifreturn.ts","webpack://@deriv/bot-web-ui/./src/utils/help-content/help-strings/read_details.ts","webpack://@deriv/bot-web-ui/./src/utils/help-content/help-strings/read_ohlc.ts","webpack://@deriv/bot-web-ui/./src/utils/help-content/help-strings/read_ohlc_obj.ts","webpack://@deriv/bot-web-ui/./src/utils/help-content/help-strings/sell_at_market.ts","webpack://@deriv/bot-web-ui/./src/utils/help-content/help-strings/sell_price.ts","webpack://@deriv/bot-web-ui/./src/utils/help-content/help-strings/sma_statement.ts","webpack://@deriv/bot-web-ui/./src/utils/help-content/help-strings/text_print.ts","webpack://@deriv/bot-web-ui/./src/utils/help-content/help-strings/text_prompt_ext.ts","webpack://@deriv/bot-web-ui/./src/utils/help-content/help-strings/tick_analysis.ts","webpack://@deriv/bot-web-ui/./src/utils/help-content/help-strings/todatetime.ts","webpack://@deriv/bot-web-ui/./src/utils/help-content/help-strings/totimestamp.ts","webpack://@deriv/bot-web-ui/./src/utils/help-content/help-strings/trade_again.ts","webpack://@deriv/bot-web-ui/./src/utils/help-content/help-strings/trade_definition.ts","webpack://@deriv/bot-web-ui/./src/utils/help-content/help-strings/trade_definition_multiplier.tsx","webpack://@deriv/bot-web-ui/./src/utils/help-content/help-strings/trade_definition_tradeoptions.ts","webpack://@deriv/bot-web-ui/./src/utils/help-content/help-strings/variables_set.ts","webpack://@deriv/bot-web-ui/./src/stores/flyout-help-store.ts","webpack://@deriv/bot-web-ui/./src/utils/gtm.ts","webpack://@deriv/bot-web-ui/./src/stores/flyout-store.ts","webpack://@deriv/bot-web-ui/./src/constants/button-status.ts","webpack://@deriv/bot-web-ui/./src/analytics/constants.ts","webpack://@deriv/bot-web-ui/./src/pages/bot-builder/quick-strategy/config.ts","webpack://@deriv/bot-web-ui/./src/pages/bot-builder/quick-strategy/localize_html.tsx","webpack://@deriv/bot-web-ui/./src/analytics/utils.ts","webpack://@deriv/bot-web-ui/./src/analytics/rudderstack-common-events.ts","webpack://@deriv/bot-web-ui/./src/stores/google-drive-store.ts","webpack://@deriv/bot-web-ui/./src/components/notify-item/notify-item.tsx","webpack://@deriv/bot-web-ui/./src/utils/journal-notifications.ts","webpack://@deriv/bot-web-ui/./src/utils/session-storage.ts","webpack://@deriv/bot-web-ui/./src/stores/journal-store.ts","webpack://@deriv/bot-web-ui/./src/constants/load-modal.ts","webpack://@deriv/bot-web-ui/./src/utils/dom-observer.ts","webpack://@deriv/bot-web-ui/./src/stores/load-modal-store.ts","webpack://@deriv/bot-web-ui/./src/utils/xml-dom-quick-strategy.ts","webpack://@deriv/bot-web-ui/./src/stores/quick-strategy-store.ts","webpack://@deriv/bot-web-ui/./src/stores/route-prompt-dialog-store.ts","webpack://@deriv/bot-web-ui/./src/constants/contract-stage.ts","webpack://@deriv/bot-web-ui/./src/constants/run-panel.ts","webpack://@deriv/bot-web-ui/./src/utils/bot-notifications.ts","webpack://@deriv/bot-web-ui/./src/utils/store-helpers.tsx","webpack://@deriv/bot-web-ui/./src/stores/run-panel-store.ts","webpack://@deriv/bot-web-ui/./src/stores/save-modal-store.ts","webpack://@deriv/bot-web-ui/./src/stores/self-exclusion-store.ts","webpack://@deriv/bot-web-ui/./src/constants/contract.ts","webpack://@deriv/bot-web-ui/./src/utils/multiplier.ts","webpack://@deriv/bot-web-ui/./src/stores/summary-card-store.ts","webpack://@deriv/bot-web-ui/./src/stores/toolbar-store.ts","webpack://@deriv/bot-web-ui/./src/stores/toolbox-store.ts","webpack://@deriv/bot-web-ui/./src/constants/transactions.ts","webpack://@deriv/bot-web-ui/./src/stores/transactions-store.ts","webpack://@deriv/bot-web-ui/./src/stores/root-store.ts","webpack://@deriv/bot-web-ui/./src/stores/useDBotStore.tsx","webpack://@deriv/bot-web-ui/./src/components/transaction-details/desktop-transaction-table.tsx","webpack://@deriv/bot-web-ui/./src/components/transaction-details/transaction-details-desktop.tsx","webpack://@deriv/bot-web-ui/./src/components/journal/journal-components/filters.tsx","webpack://@deriv/bot-web-ui/./src/components/journal/journal-components/filter-dialog.tsx","webpack://@deriv/bot-web-ui/./src/components/journal/journal-components/format-message.tsx","webpack://@deriv/bot-web-ui/./src/components/journal/journal-components/journal-item.tsx","webpack://@deriv/bot-web-ui/./src/components/journal/journal-components/date-item.tsx","webpack://@deriv/bot-web-ui/./src/components/journal/journal-components/journal-loader.tsx","webpack://@deriv/bot-web-ui/./src/utils/download.ts","webpack://@deriv/bot-web-ui/./src/components/download/download.tsx","webpack://@deriv/bot-web-ui/./src/components/download/index.ts","webpack://@deriv/bot-web-ui/./src/components/journal/journal-components/journal-tools.tsx","webpack://@deriv/bot-web-ui/./src/components/journal/journal.tsx","webpack://@deriv/bot-web-ui/./src/components/journal/index.ts","webpack://@deriv/bot-web-ui/./src/components/self-exclusion/self-exclusion.jsx","webpack://@deriv/bot-web-ui/./src/components/self-exclusion/index.ts","webpack://@deriv/bot-web-ui/./src/components/contract-card-loading/contract-card-running-bot.tsx","webpack://@deriv/bot-web-ui/./src/components/contract-card-loading/index.ts","webpack://@deriv/bot-web-ui/./src/components/contract-card-loading/contract-card-loading.tsx","webpack://@deriv/bot-web-ui/./src/components/summary/summary-card.tsx","webpack://@deriv/bot-web-ui/./src/components/summary/summary.tsx","webpack://@deriv/bot-web-ui/./src/components/summary/index.ts","webpack://@deriv/bot-web-ui/./src/components/contract-result-overlay/index.ts","webpack://@deriv/bot-web-ui/./src/components/contract-result-overlay/contract-result-overlay.tsx","webpack://@deriv/bot-web-ui/./src/components/trade-animation/circular-wrapper.tsx","webpack://@deriv/bot-web-ui/./src/components/trade-animation/contract-stage-text.tsx","webpack://@deriv/bot-web-ui/./src/components/trade-animation/trade-animation.tsx","webpack://@deriv/bot-web-ui/./src/components/trade-animation/index.ts","webpack://@deriv/bot-web-ui/./src/constants/z-indexes.ts","webpack://@deriv/bot-web-ui/./src/components/transactions/transaction.tsx","webpack://@deriv/bot-web-ui/./src/components/transactions/transactions.tsx","webpack://@deriv/bot-web-ui/./src/components/transactions/index.js","webpack://@deriv/bot-web-ui/./src/components/run-panel/run-panel.tsx","webpack://@deriv/bot-web-ui/./src/components/transaction-details/mobile-transaction-card.tsx","webpack://@deriv/bot-web-ui/./src/components/transaction-details/transaction-details-mobile.tsx","webpack://@deriv/bot-web-ui/./src/components/transaction-details/index.ts","webpack://@deriv/bot-web-ui/./src/components/transaction-details/transaction-details.tsx","webpack://@deriv/bot-web-ui/./src/components/audio/index.ts","webpack://@deriv/bot-web-ui/./src/components/audio/audio.tsx","webpack://@deriv/bot-web-ui/./src/components/blockly-loading/index.ts","webpack://@deriv/bot-web-ui/./src/components/blockly-loading/blockly-loading.tsx","webpack://@deriv/bot-web-ui/./src/components/bot-notification-messages/bot-notification-messages.tsx","webpack://@deriv/bot-web-ui/./src/components/bot-notification-messages/index.ts","webpack://@deriv/bot-web-ui/./src/components/bot-stopped.tsx","webpack://@deriv/bot-web-ui/./src/components/network-toast-popup/network-toast-popup.tsx","webpack://@deriv/bot-web-ui/./src/components/network-toast-popup/index.ts","webpack://@deriv/bot-web-ui/./src/components/route-prompt-dialog/route-prompt-dialog.tsx","webpack://@deriv/bot-web-ui/./src/components/route-prompt-dialog/index.ts","webpack://@deriv/bot-web-ui/./src/components/load-modal/google-drive/google-drive.tsx","webpack://@deriv/bot-web-ui/./src/components/load-modal/google-drive/index.ts","webpack://@deriv/bot-web-ui/./src/components/load-modal/local-footer.tsx","webpack://@deriv/bot-web-ui/./src/components/load-modal/section-message/index.ts","webpack://@deriv/bot-web-ui/./src/components/load-modal/section-message/section-message.tsx","webpack://@deriv/bot-web-ui/./src/components/load-modal/workspace-control.tsx","webpack://@deriv/bot-web-ui/./src/components/load-modal/local.tsx","webpack://@deriv/bot-web-ui/./src/components/load-modal/recent-workspace.tsx","webpack://@deriv/bot-web-ui/./src/components/load-modal/recent.tsx","webpack://@deriv/bot-web-ui/./src/components/load-modal/recent-footer.tsx","webpack://@deriv/bot-web-ui/./src/components/load-modal/load-modal.tsx","webpack://@deriv/bot-web-ui/./src/components/load-modal/index.ts","webpack://@deriv/bot-web-ui/./src/analytics/rudderstack-bot-builder.ts","webpack://@deriv/bot-web-ui/./src/pages/dashboard/bot-list/save-modal/icon-radio.tsx","webpack://@deriv/bot-web-ui/./src/pages/dashboard/bot-list/save-modal/save-modal.tsx","webpack://@deriv/bot-web-ui/./src/pages/tutorials/dbot-tours/common/react-joyride-wrapper.tsx","webpack://@deriv/bot-web-ui/./src/pages/tutorials/dbot-tours/common/tour-end-dialog.tsx","webpack://@deriv/bot-web-ui/./src/pages/tutorials/dbot-tours/common/tour-steps.tsx","webpack://@deriv/bot-web-ui/./src/pages/tutorials/dbot-tours/tour-content.tsx","webpack://@deriv/bot-web-ui/./src/pages/tutorials/dbot-tours/common/tour-start-dialog.tsx","webpack://@deriv/bot-web-ui/./src/pages/tutorials/dbot-tours/useTourHandler.tsx","webpack://@deriv/bot-web-ui/./src/pages/tutorials/dbot-tours/bot-builder-tour/bot-builder-tour-desktop.tsx","webpack://@deriv/bot-web-ui/./src/pages/tutorials/dbot-tours/common/tour-button.tsx","webpack://@deriv/bot-web-ui/./src/pages/tutorials/dbot-tours/bot-builder-tour/bot-builder-tour-mobile.tsx","webpack://@deriv/bot-web-ui/./src/pages/tutorials/dbot-tours/bot-builder-tour/index.tsx","webpack://@deriv/bot-web-ui/./src/analytics/rudderstack-quick-strategy.ts","webpack://@deriv/bot-web-ui/./src/pages/tutorials/dbot-tours/common/accordion.tsx","webpack://@deriv/bot-web-ui/./src/pages/bot-builder/quick-strategy/descriptions/strategy-description.tsx","webpack://@deriv/bot-web-ui/./src/pages/bot-builder/quick-strategy/form-wrappers/accordion-strategy-group.tsx","webpack://@deriv/bot-web-ui/./src/pages/bot-builder/quick-strategy/form-wrappers/strategy-tab-content.tsx","webpack://@deriv/bot-web-ui/./src/pages/bot-builder/quick-strategy/form-wrappers/useQsSubmitHandler.tsx","webpack://@deriv/bot-web-ui/./src/pages/bot-builder/quick-strategy/form-wrappers/trade-constants.ts","webpack://@deriv/bot-web-ui/./src/pages/bot-builder/quick-strategy/form-wrappers/qs-stepper.tsx","webpack://@deriv/bot-web-ui/./src/pages/bot-builder/quick-strategy/form-wrappers/strategy-list.tsx","webpack://@deriv/bot-web-ui/./src/pages/bot-builder/quick-strategy/form-wrappers/strategy-template-picker.tsx","webpack://@deriv/bot-web-ui/./src/pages/bot-builder/quick-strategy/form-wrappers/desktop-form-wrapper.tsx","webpack://@deriv/bot-web-ui/./src/pages/bot-builder/quick-strategy/form-wrappers/mobile-form-wrapper.tsx","webpack://@deriv/bot-web-ui/./src/pages/bot-builder/quick-strategy/parts/loss-threshold-warning-dialog.tsx","webpack://@deriv/bot-web-ui/./src/pages/bot-builder/quick-strategy/utils.ts","webpack://@deriv/bot-web-ui/./src/pages/bot-builder/quick-strategy/selects/symbol.tsx","webpack://@deriv/bot-web-ui/./src/pages/bot-builder/quick-strategy/selects/trade-type.tsx","webpack://@deriv/bot-web-ui/./src/pages/bot-builder/quick-strategy/selects/contract-type.tsx","webpack://@deriv/bot-web-ui/./src/pages/bot-builder/quick-strategy/selects/duration-type.tsx","webpack://@deriv/bot-web-ui/./src/pages/bot-builder/quick-strategy/inputs/qs-input.tsx","webpack://@deriv/bot-web-ui/./src/pages/bot-builder/quick-strategy/inputs/qs-toggle-switch.tsx","webpack://@deriv/bot-web-ui/./src/pages/bot-builder/quick-strategy/inputs/qs-input-label.tsx","webpack://@deriv/bot-web-ui/./src/pages/bot-builder/quick-strategy/selects/growth-rate-type.tsx","webpack://@deriv/bot-web-ui/./src/pages/bot-builder/quick-strategy/selects/sell-conditions-type.tsx","webpack://@deriv/bot-web-ui/./src/pages/bot-builder/quick-strategy/form.tsx","webpack://@deriv/bot-web-ui/./src/pages/bot-builder/quick-strategy/quick-strategy.tsx","webpack://@deriv/bot-web-ui/./src/pages/bot-builder/quick-strategy/index.ts","webpack://@deriv/bot-web-ui/./src/components/flyout/flyout-block.tsx","webpack://@deriv/bot-web-ui/./src/components/flyout/flyout-block-group.tsx","webpack://@deriv/bot-web-ui/./src/components/flyout/help-contents/flyout-img.tsx","webpack://@deriv/bot-web-ui/./src/components/flyout/help-contents/flyout-text.tsx","webpack://@deriv/bot-web-ui/./src/components/flyout/help-contents/flyout-video.tsx","webpack://@deriv/bot-web-ui/./src/components/flyout/help-contents/flyout-help-base.tsx","webpack://@deriv/bot-web-ui/./src/components/flyout/help-contents/index.ts","webpack://@deriv/bot-web-ui/./src/components/flyout/flyout.tsx","webpack://@deriv/bot-web-ui/./src/components/flyout/index.ts","webpack://@deriv/bot-web-ui/./src/pages/bot-builder/stop-bot-modal-content.tsx","webpack://@deriv/bot-web-ui/./src/pages/bot-builder/stop-bot-modal.tsx","webpack://@deriv/bot-web-ui/./src/pages/bot-builder/toolbar/toolbar-button.tsx","webpack://@deriv/bot-web-ui/./src/pages/bot-builder/toolbar/toolbar-icon.tsx","webpack://@deriv/bot-web-ui/./src/pages/bot-builder/toolbar/workspace-group.tsx","webpack://@deriv/bot-web-ui/./src/pages/bot-builder/toolbar/toolbar.tsx","webpack://@deriv/bot-web-ui/./src/pages/bot-builder/toolbar/index.ts","webpack://@deriv/bot-web-ui/./src/pages/bot-builder/toolbox/search-box/search-icon.tsx","webpack://@deriv/bot-web-ui/./src/pages/bot-builder/toolbox/search-box/search-box.tsx","webpack://@deriv/bot-web-ui/./src/pages/bot-builder/toolbox/search-box/index.ts","webpack://@deriv/bot-web-ui/./src/pages/bot-builder/toolbox/toolbox-items.tsx","webpack://@deriv/bot-web-ui/./src/pages/bot-builder/toolbox/toolbox.tsx","webpack://@deriv/bot-web-ui/./src/pages/bot-builder/toolbox/index.ts","webpack://@deriv/bot-web-ui/./src/pages/bot-builder/workspace-wrapper.tsx","webpack://@deriv/bot-web-ui/./src/pages/bot-builder/bot-builder.tsx","webpack://@deriv/bot-web-ui/./src/pages/bot-builder/index.ts","webpack://@deriv/bot-web-ui/./src/components/trading-view-chart/trading-view.tsx","webpack://@deriv/bot-web-ui/./src/components/trading-view-chart/trading-view-modal.tsx","webpack://@deriv/bot-web-ui/./src/components/run-panel/index.ts","webpack://@deriv/bot-web-ui/./src/pages/chart/v1.ts","webpack://@deriv/bot-web-ui/./src/pages/chart/toolbar-widgets.tsx","webpack://@deriv/bot-web-ui/./src/pages/chart/chart.tsx","webpack://@deriv/bot-web-ui/./src/pages/chart/index.ts","webpack://@deriv/bot-web-ui/./src/pages/chart/chart-modal/chart-modal-desktop.tsx","webpack://@deriv/bot-web-ui/./src/pages/chart/chart-modal/index.ts","webpack://@deriv/bot-web-ui/./src/pages/chart/chart-modal/chart-modal.tsx","webpack://@deriv/bot-web-ui/./src/pages/tutorials/dbot-tours/onboarding-tour/onboarding-tour-desktop.tsx","webpack://@deriv/bot-web-ui/./src/pages/tutorials/dbot-tours/onboarding-tour/onboarding-tour-mobile.tsx","webpack://@deriv/bot-web-ui/./src/pages/tutorials/dbot-tours/onboarding-tour/index.tsx","webpack://@deriv/bot-web-ui/./src/analytics/rudderstack-dashboard.ts","webpack://@deriv/bot-web-ui/./src/pages/dashboard/bot-list/delete-dialog/delete-dialog.tsx","webpack://@deriv/bot-web-ui/./src/pages/dashboard/bot-list/delete-dialog/index.ts","webpack://@deriv/bot-web-ui/./src/constants/dashboard.ts","webpack://@deriv/bot-web-ui/./src/pages/dashboard/bot-list/recent-workspace.tsx","webpack://@deriv/bot-web-ui/./src/hooks/useComponentVisibility.tsx","webpack://@deriv/bot-web-ui/./src/pages/dashboard/bot-list/dashboard-bot-list.tsx","webpack://@deriv/bot-web-ui/./src/pages/dashboard/cards.tsx","webpack://@deriv/bot-web-ui/./src/pages/dashboard/constants.ts","webpack://@deriv/bot-web-ui/./src/pages/dashboard/info-panel.tsx","webpack://@deriv/bot-web-ui/./src/pages/dashboard/announcements/announcement-components.tsx","webpack://@deriv/bot-web-ui/./src/pages/dashboard/announcements/config.tsx","webpack://@deriv/bot-web-ui/./src/pages/dashboard/announcements/utils/accumulator-helper-functions.ts","webpack://@deriv/bot-web-ui/./src/pages/dashboard/announcements/announcement-dialog.tsx","webpack://@deriv/bot-web-ui/./src/pages/dashboard/announcements/announcements.tsx","webpack://@deriv/bot-web-ui/./src/pages/dashboard/dashboard.tsx","webpack://@deriv/bot-web-ui/./src/pages/dashboard/index.ts","webpack://@deriv/bot-web-ui/./src/pages/dashboard/run-strategy.tsx","webpack://@deriv/bot-web-ui/./src/pages/tutorials/common/no-search-result-found/index.ts","webpack://@deriv/bot-web-ui/./src/pages/tutorials/common/no-search-result-found/no-search-result.tsx","webpack://@deriv/bot-web-ui/./src/pages/tutorials/quick-strategy-content/quick-strategy-guides-details.tsx","webpack://@deriv/bot-web-ui/./src/analytics/rudderstack-tutorials.ts","webpack://@deriv/bot-web-ui/./src/pages/tutorials/quick-strategy-content/quick-strategy-guides.tsx","webpack://@deriv/bot-web-ui/./src/pages/tutorials/faq-content/index.tsx","webpack://@deriv/bot-web-ui/./src/pages/tutorials/guide-content/index.ts","webpack://@deriv/bot-web-ui/./src/pages/tutorials/guide-content/guide-content.tsx","webpack://@deriv/bot-web-ui/./src/pages/tutorials/common/search-input/index.tsx","webpack://@deriv/bot-web-ui/./src/pages/tutorials/tutorials-tab-desktop.tsx","webpack://@deriv/bot-web-ui/./src/pages/tutorials/tutorials-tab-mobile.tsx","webpack://@deriv/bot-web-ui/./src/pages/tutorials/tutorials.tsx","webpack://@deriv/bot-web-ui/./src/pages/tutorials/index.ts","webpack://@deriv/bot-web-ui/./src/pages/main/main.tsx","webpack://@deriv/bot-web-ui/./src/pages/main/index.ts","webpack://@deriv/bot-web-ui/./src/app/app-content.jsx","webpack://@deriv/bot-web-ui/../api/src/utils/crypto.utils.ts","webpack://@deriv/bot-web-ui/../api/src/APIProvider.tsx","webpack://@deriv/bot-web-ui/../stores/src/stores/FeatureFlagsStore.ts","webpack://@deriv/bot-web-ui/../stores/src/stores/BaseStore.ts","webpack://@deriv/bot-web-ui/../stores/src/storeProvider.tsx","webpack://@deriv/bot-web-ui/./src/app/dbot-providers.tsx","webpack://@deriv/bot-web-ui/./src/app/app-main.tsx","webpack://@deriv/bot-web-ui/./src/components/bot-notification/bot-notification-utils.ts","webpack://@deriv/bot-web-ui/./src/components/bot-notification/bot-notification.tsx","webpack://@deriv/bot-web-ui/../bot-skeleton/src/scratch/xml/main.xml","webpack://@deriv/bot-web-ui/./src/xml/ lazy ^\\.\\/.*\\.xml$ chunkName: [request] namespace object"],"sourcesContent":["import { localize } from '@deriv/translations';\n\nconst CRYPTO_CURRENCIES = ['BTC', 'ETH', 'LTC', 'BCH', 'UST'];\n\nexport const config = {\n    lists: {\n        PAYOUTTYPE: [\n            // [localize('Payout'), 'payout'],\n            [localize('Stake'), 'stake'],\n        ],\n        CRYPTO_CURRENCIES,\n        DETAILS: [\n            [localize('deal reference id'), '1'],\n            [localize('purchase price'), '2'],\n            [localize('payout'), '3'],\n            [localize('profit'), '4'],\n            [localize('contract type'), '5'],\n            [localize('entry spot time'), '6'],\n            [localize('entry spot price'), '7'],\n            [localize('exit spot time'), '8'],\n            [localize('exit spot price'), '9'],\n            [localize('barrier'), '10'],\n            [localize('result'), '11'],\n        ],\n        CHECK_RESULT: [\n            [localize('Win'), 'win'],\n            [localize('Loss'), 'loss'],\n        ],\n        CHECK_DIRECTION: [\n            [localize('Rise'), 'rise'],\n            [localize('Fall'), 'fall'],\n            [localize('No Change'), ''],\n        ],\n        BALANCE_TYPE: [\n            [localize('string'), 'STR'],\n            [localize('number'), 'NUM'],\n        ],\n        NOTIFICATION_TYPE: [\n            [localize('green'), 'success'],\n            [localize('blue'), 'info'],\n            [localize('yellow'), 'warn'],\n            [localize('red'), 'error'],\n        ],\n        NOTIFICATION_SOUND: [\n            [localize('Silent'), 'silent'],\n            [localize('Announcement'), 'announcement'],\n            [localize('Earned money'), 'earned-money'],\n            [localize('Job done'), 'job-done'],\n            [localize('Error'), 'error'],\n            [localize('Severe error'), 'severe-error'],\n        ],\n        CURRENCY: ['USD', 'EUR', 'GBP', 'AUD', ...CRYPTO_CURRENCIES],\n    },\n    opposites: {\n        ACCUMULATOR: [\n            {\n                ACCU: localize('Buy'),\n            },\n        ],\n        MULTIPLIER: [\n            {\n                MULTUP: localize('Up'),\n            },\n            {\n                MULTDOWN: localize('Down'),\n            },\n        ],\n        CALLPUT: [\n            {\n                CALL: localize('Rise'),\n            },\n            {\n                PUT: localize('Fall'),\n            },\n        ],\n        CALLPUTEQUAL: [\n            {\n                CALLE: localize('Rise Equals'),\n            },\n            {\n                PUTE: localize('Fall Equals'),\n            },\n        ],\n        HIGHERLOWER: [\n            {\n                CALL: localize('Higher'),\n            },\n            {\n                PUT: localize('Lower'),\n            },\n        ],\n        TOUCHNOTOUCH: [\n            {\n                ONETOUCH: localize('Touch'),\n            },\n            {\n                NOTOUCH: localize('No Touch'),\n            },\n        ],\n        ENDSINOUT: [\n            {\n                EXPIRYRANGE: localize('Ends Between'),\n            },\n            {\n                EXPIRYMISS: localize('Ends Outside'),\n            },\n        ],\n        STAYSINOUT: [\n            {\n                RANGE: localize('Stays Between'),\n            },\n            {\n                UPORDOWN: localize('Goes Outside'),\n            },\n        ],\n        ASIANS: [\n            {\n                ASIANU: localize('Asian Up'),\n            },\n            {\n                ASIAND: localize('Asian Down'),\n            },\n        ],\n        MATCHESDIFFERS: [\n            {\n                DIGITMATCH: localize('Matches'),\n            },\n            {\n                DIGITDIFF: localize('Differs'),\n            },\n        ],\n        EVENODD: [\n            {\n                DIGITEVEN: localize('Even'),\n            },\n            {\n                DIGITODD: localize('Odd'),\n            },\n        ],\n        OVERUNDER: [\n            {\n                DIGITOVER: localize('Over'),\n            },\n            {\n                DIGITUNDER: localize('Under'),\n            },\n        ],\n        HIGHLOWTICKS: [\n            {\n                TICKHIGH: localize('High Tick'),\n            },\n            {\n                TICKLOW: localize('Low Tick'),\n            },\n        ],\n        RESET: [\n            {\n                RESETCALL: localize('Reset Call'),\n            },\n            {\n                RESETPUT: localize('Reset Put'),\n            },\n        ],\n        RUNS: [\n            {\n                RUNHIGH: localize('Only Ups'),\n            },\n            {\n                RUNLOW: localize('Only Downs'),\n            },\n        ],\n        CALLPUTSPREAD: [\n            {\n                CALLSPREAD: localize('Call Spread'),\n            },\n            {\n                PUTSPREAD: localize('Put Spread'),\n            },\n        ],\n    },\n    BARRIER_TYPES: [\n        ['Offset +', '+'],\n        ['Offset -', '-'],\n    ],\n    ohlcFields: [\n        [localize('Open'), 'open'],\n        [localize('High'), 'high'],\n        [localize('Low'), 'low'],\n        [localize('Close'), 'close'],\n        [localize('Open Time'), 'epoch'],\n    ],\n    candleIntervals: [\n        [localize('Default'), 'default'],\n        [localize('1 minute'), '60'],\n        [localize('2 minutes'), '120'],\n        [localize('3 minutes'), '180'],\n        [localize('5 minutes'), '300'],\n        [localize('10 minutes'), '600'],\n        [localize('15 minutes'), '900'],\n        [localize('30 minutes'), '1800'],\n        [localize('1 hour'), '3600'],\n        [localize('2 hours'), '7200'],\n        [localize('4 hours'), '14400'],\n        [localize('8 hours'), '28800'],\n        [localize('1 day'), '86400'],\n    ],\n    mainBlocks: ['trade_definition', 'before_purchase', 'during_purchase', 'after_purchase'],\n    mandatoryMainBlocks: ['trade_definition', 'purchase', 'before_purchase'],\n    procedureDefinitionBlocks: ['procedures_defnoreturn', 'procedures_defreturn'],\n    single_instance_blocks: ['trade_definition', 'before_purchase', 'during_purchase', 'after_purchase'],\n    TRADE_TYPE_TO_CONTRACT_CATEGORY_MAPPING: {\n        callput: ['callput', 'higherlower'],\n        asian: ['asians'],\n        digits: ['matchesdiffers', 'evenodd', 'overunder'],\n    },\n    TRADE_TYPE_CATEGORIES: {\n        multiplier: ['multiplier'],\n        callput: ['callput', 'callputequal', 'higherlower'],\n        touchnotouch: ['touchnotouch'],\n        inout: ['endsinout', 'staysinout'],\n        asian: ['asians'],\n        digits: ['matchesdiffers', 'evenodd', 'overunder'],\n        reset: ['reset'],\n        callputspread: ['callputspread'],\n        highlowticks: ['highlowticks'],\n        runs: ['runs'],\n        accumulator: ['accumulator'],\n    },\n    TRADE_TYPE_CATEGORY_NAMES: {\n        callput: localize('Up/Down'),\n        touchnotouch: localize('Touch/No Touch'),\n        inout: localize('In/Out'),\n        asian: localize('Asians'),\n        digits: localize('Digits'),\n        reset: localize('Reset Call/Reset Put'),\n        callputspread: localize('Call Spread/Put Spread'),\n        highlowticks: localize('High/Low Ticks'),\n        runs: localize('Only Ups/Only Downs'),\n        multiplier: localize('Multipliers'),\n        accumulator: localize('Accumulators'),\n    },\n    BARRIER_CATEGORIES: {\n        euro_atm: ['callput', 'callputequal'],\n        euro_non_atm: ['endsinout', 'higherlower', 'callputspread'],\n        american: ['staysinout', 'touchnotouch', 'highlowticks', 'runs', 'multiplier'],\n        non_financial: ['digits', 'overunder', 'evenodd', 'matchesdiffers'],\n        asian: ['asians'],\n        reset: ['reset'],\n        lookback: ['lookback'],\n        accumulator: ['accumulator'],\n    },\n    DEFAULT_DURATION_DROPDOWN_OPTIONS: [\n        [localize('Ticks'), 't'],\n        [localize('Seconds'), 's'],\n        [localize('Minutes'), 'm'],\n        [localize('Hours'), 'h'],\n        [localize('Days'), 'd'],\n    ],\n    BARRIER_LABELS: [localize('High barrier'), localize('Low barrier')],\n    ABSOLUTE_BARRIER_DROPDOWN_OPTION: [[localize('Absolute'), 'absolute']],\n    NOT_AVAILABLE_DROPDOWN_OPTIONS: [[localize('Not available'), 'na']],\n    NOT_AVAILABLE_DURATIONS: [{ display: localize('Not available'), unit: 'na', min: 0 }],\n    BARRIER_TRADE_TYPES: ['higherlower', 'touchnotouch', 'endsinout', 'staysinout', 'callputspread'],\n    PREDICTION_TRADE_TYPES: ['matchesdiffers', 'overunder', 'highlowticks'],\n    DIGIT_CATEGORIES: ['digits', 'highlowticks'],\n    INDEPEDENT_BLOCKS: ['block_holder', 'tick_analysis', 'loader', 'procedures_defreturn', 'procedures_defnoreturn'],\n    bbResult: [\n        [localize('upper'), '1'],\n        [localize('middle'), '0'],\n        [localize('lower'), '2'],\n    ],\n    macdFields: [\n        [localize('Histogram'), '0'],\n        [localize('MACD'), '1'],\n        [localize('Signal'), '2'],\n    ],\n    GOOGLE_DRIVE: {\n        SCOPE: 'https://www.googleapis.com/auth/drive.file',\n        DISCOVERY_DOCS: 'https://www.googleapis.com/discovery/v1/apis/drive/v3/rest',\n    },\n    workspaces: {\n        flyoutWorkspacesStartScale: 0.7,\n        mainWorkspaceStartScale: 0.9,\n        previewWorkspaceStartScale: 0.6,\n        indentWorkspace: { x: 0, y: 60 },\n    },\n    strategies: {\n        martingale: {\n            index: 0,\n            label: localize('Martingale'),\n            description: localize(\n                'The Martingale Strategy is a classic trading technique that has been used for more than a hundred years, popularised by the French mathematician Paul Pierre Levy in the 18th century.'\n            ),\n        },\n        dalembert: {\n            index: 1,\n            label: localize(\"D'Alembert\"),\n            description: localize(\n                'The concept of the D’Alembert Strategy is said to be similar to the Martingale Strategy where you will increase your contract size after a loss. With the D’Alembert Strategy, you will also decrease your contract size after a successful trade.'\n            ),\n        },\n        oscars_grind: {\n            index: 2,\n            label: localize(\"Oscar's Grind\"),\n            description: localize(\n                \"The Oscar's Grind Strategy is a low-risk positive progression strategy that first appeared in 1965. By using this strategy, the size of your contract will increase after successful trades, but remains unchanged after unsuccessful trades.\"\n            ),\n        },\n    },\n    default_file_name: localize('Untitled Bot'),\n    DISABLED_SYMBOLS: ['frxGBPNOK', 'frxUSDNOK', 'frxUSDNEK', 'frxUSDSEK'],\n    DISABLED_SUBMARKETS: ['energy'],\n    QUICK_STRATEGY: {\n        DISABLED: {\n            SYMBOLS: ['1HZ150V', '1HZ250V'],\n            SUBMARKETS: ['crash_index', 'non_stable_coin', 'step_index'],\n            BARRIER_TRADE_TYPES: [\n                'higherlower',\n                'touchnotouch',\n                'endsinout',\n                'staysinout',\n                'callputspread',\n                'accumulator',\n            ],\n            PREDICTION_TRADE_TYPES: ['highlowticks'],\n        },\n        DEFAULT: {\n            symbol: '1HZ100V',\n            tradetype: 'callput',\n            durationtype: 't',\n            size: 1,\n            unit: 1,\n            prediction: 0,\n        },\n    },\n};\n","export const unrecoverable_errors = [\n    'InsufficientBalance',\n    'CustomLimitsReached',\n    'OfferingsValidationError',\n    'InvalidCurrency',\n    'ContractBuyValidationError',\n    'NotDefaultCurrency',\n    'PleaseAuthenticate',\n    'FinancialAssessmentRequired',\n    'PositiveIntegerExpected',\n    'OptionError',\n    'IncorrectPayoutDecimals',\n    'IncorrectStakeDecimals',\n    'NoMFProfessionalClient',\n    'AuthorizationRequired',\n    'InvalidToken',\n    'DailyLossLimitExceeded',\n    'InputValidationFailed',\n    'ClientUnwelcome',\n    'PriceMoved',\n];\n\nexport enum MessageTypes {\n    ERROR = 'error',\n    NOTIFY = 'notify',\n    SUCCESS = 'success',\n}\n\nexport enum ErrorTypes {\n    RECOVERABLE_ERRORS = 'recoverable_errors',\n    UNRECOVERABLE_ERRORS = 'unrecoverable_errors',\n}\n\nexport enum LogTypes {\n    LOAD_BLOCK = 'load_block',\n    PURCHASE = 'purchase',\n    SELL = 'sell',\n    NOT_OFFERED = 'not_offered',\n    PROFIT = 'profit',\n    LOST = 'lost',\n    WELCOME_BACK = 'welcome_back',\n    WELCOME = 'welcome',\n}\n","export const save_types = Object.freeze({\n    UNSAVED: 'unsaved',\n    LOCAL: 'local',\n    GOOGLE_DRIVE: 'google drive',\n});\n","import { api_base } from '../services/api';\nimport DBotStore from './dbot-store';\n\nexport const DEFAULT_PROPOSAL_REQUEST = {\n    amount: undefined,\n    basis: 'stake',\n    contract_type: 'ACCU',\n    currency: undefined,\n    symbol: undefined,\n    growth_rate: undefined,\n    proposal: 1,\n    subscribe: 1,\n};\n\nexport const forgetAccumulatorsProposalRequest = async instance => {\n    if (instance && !instance.is_bot_running) {\n        await api_base?.api?.send({ forget_all: 'proposal' });\n        instance.subscription_id_for_accumulators = null;\n        instance.is_proposal_requested_for_accumulators = false;\n        window.Blockly.accumulators_request = {};\n    }\n};\n\nexport const handleProposalRequestForAccumulators = instance => {\n    const top_parent_block = instance?.getTopParent();\n    const market_block = top_parent_block?.getChildByType('trade_definition_market');\n    const symbol = market_block?.getFieldValue('SYMBOL_LIST');\n    const currency = DBotStore.instance.client.currency;\n    const growth_rate = instance?.getFieldValue('GROWTHRATE_LIST') || 0.01;\n    const amount = instance?.childBlocks_?.[0]?.getField('NUM')?.getValue() || 0;\n    const proposal_request = {\n        ...DEFAULT_PROPOSAL_REQUEST,\n        amount,\n        currency,\n        symbol,\n        growth_rate,\n    };\n    window.Blockly.accumulators_request = proposal_request;\n};\n\nexport const requestProposalForQS = (input_values, ws) => {\n    const { amount, currency, symbol, growth_rate, limit_order } = input_values;\n    const { take_profit } = limit_order;\n\n    const proposal_request = {\n        ...DEFAULT_PROPOSAL_REQUEST,\n        amount,\n        currency,\n        symbol,\n        growth_rate,\n        subscribe: undefined,\n        limit_order: {\n            take_profit,\n        },\n    };\n\n    return ws\n        ?.send(proposal_request)\n        .then(response => {\n            if (response.error) {\n                return Promise.reject(response.error);\n            }\n            return response;\n        })\n        .catch(error => {\n            throw error;\n        });\n};\n","import { reaction } from 'mobx';\nimport { api_base } from '../services/api/api-base';\n\nclass DBotStoreInterface {\n    // TODO here we are suppose to define an interface and implement fields of DBotStore.\n    handleFileChange = () => {\n        throw Error('handleFileChange has not been implemented.');\n    };\n\n    toggleStrategyModal = () => {\n        throw Error('handleFileChange has not been implemented.');\n    };\n}\n\nclass DBotStore extends DBotStoreInterface {\n    static singleton = null;\n\n    constructor(store) {\n        super();\n        this.is_mobile = store.is_mobile || false;\n        this.is_dark_mode_on = store.is_dark_mode_on || false;\n        this.client = store.client;\n        this.dashboard = store.dashboard;\n        this.flyout = store.flyout;\n        this.toolbar = store.toolbar;\n        this.toolbox = store.toolbox;\n        this.save_modal = store.save_modal;\n        this.load_modal = store.load_modal;\n        this.setContractUpdateConfig = store.setContractUpdateConfig;\n        this.toggleStrategyModal = store.toggleStrategyModal;\n        this.handleFileChange = store.handleFileChange;\n        this.setLoading = store.setLoading;\n\n        reaction(\n            () => this.client.loginid,\n            () => api_base.createNewInstance(this.client.loginid)\n        );\n    }\n\n    static setInstance(store) {\n        this.singleton = new DBotStore(store);\n        return this.instance;\n    }\n\n    static get instance() {\n        return this.singleton;\n    }\n}\n\nexport default DBotStore;\n","export const historyToTicks = history =>\n    history.times.map((t, idx) => ({\n        epoch: +t,\n        quote: +history.prices[idx],\n    }));\n\nexport const getLast = arr => arr && (arr.length === 0 ? undefined : arr[arr.length - 1]);\n\nexport const parseTick = tick => ({\n    epoch: +tick.epoch,\n    quote: +tick.quote,\n});\n\nexport const parseOhlc = ohlc => ({\n    open: +ohlc.open,\n    high: +ohlc.high,\n    low: +ohlc.low,\n    close: +ohlc.close,\n    epoch: +(ohlc.open_time || ohlc.epoch),\n});\n\nexport const parseCandles = candles => candles.map(t => parseOhlc(t));\n\nexport const updateTicks = (ticks, newTick) =>\n    getLast(ticks).epoch >= newTick.epoch ? ticks : [...ticks.slice(1), newTick];\n\nexport const updateCandles = (candles, ohlc) => {\n    const lastCandle = getLast(candles);\n    if (\n        (lastCandle.open === ohlc.open &&\n            lastCandle.high === ohlc.high &&\n            lastCandle.low === ohlc.low &&\n            lastCandle.close === ohlc.close &&\n            lastCandle.epoch === ohlc.epoch) ||\n        lastCandle.epoch > ohlc.epoch\n    ) {\n        return candles;\n    }\n    const prevCandles = lastCandle.epoch === ohlc.epoch ? candles.slice(0, -1) : candles.slice(1);\n    return [...prevCandles, ohlc];\n};\n\nexport const getType = isCandle => (isCandle ? 'candles' : 'ticks');\n","import { Map } from 'immutable';\nimport { doUntilDone, getUUID } from '../tradeEngine/utils/helpers';\nimport { observer as globalObserver } from '../../utils/observer';\nimport { api_base } from './api-base';\nimport {\n    historyToTicks,\n    parseTick,\n    parseOhlc,\n    parseCandles,\n    updateTicks,\n    updateCandles,\n    getType,\n} from './binary-utils';\n\nexport default class TicksService {\n    constructor() {\n        this.ticks = new Map();\n        this.candles = new Map();\n        this.tickListeners = new Map();\n        this.ohlcListeners = new Map();\n        this.subscriptions = new Map();\n        this.ticks_history_promise = null;\n        this.active_symbols_promise = null;\n        this.candles_promise = null;\n\n        this.observe();\n    }\n\n    requestPipSizes() {\n        if (this.pipSizes) {\n            return Promise.resolve(this.pipSizes);\n        }\n\n        if (!this.active_symbols_promise) {\n            this.active_symbols_promise = new Promise(resolve => {\n                this.pipSizes = api_base.pip_sizes;\n                resolve(this.pipSizes);\n            });\n        }\n        return this.active_symbols_promise;\n    }\n\n    async request(options) {\n        return new Promise((resolve, reject) => {\n            const { symbol, granularity } = options;\n\n            const style = getType(granularity);\n\n            if (style === 'ticks' && this.ticks.has(symbol)) {\n                resolve(this.ticks.get(symbol));\n            }\n\n            if (style === 'candles' && this.candles.hasIn([symbol, Number(granularity)])) {\n                resolve(this.candles.getIn([symbol, Number(granularity)]));\n            }\n            this.requestStream({ ...options, style })\n                .then(res => {\n                    resolve(res);\n                })\n                .catch(e => {\n                    reject(e);\n                });\n        });\n    }\n\n    monitor(options) {\n        return new Promise((resolve, reject) => {\n            const { symbol, granularity, callback } = options;\n\n            const type = getType(granularity);\n\n            const key = getUUID();\n            this.request(options)\n                .then(() => {\n                    if (type === 'ticks') {\n                        this.tickListeners = this.tickListeners.setIn([symbol, key], callback);\n                        globalObserver.emit('bot.bot_ready');\n                        api_base.toggleRunButton(false);\n                    } else {\n                        this.ohlcListeners = this.ohlcListeners.setIn([symbol, Number(granularity), key], callback);\n                    }\n                    resolve(key);\n                })\n                .catch(e => {\n                    globalObserver.emit('Error', e);\n                    this.ticks_history_promise = null;\n                    api_base.toggleRunButton(false);\n                    reject(e);\n                });\n        });\n    }\n\n    async stopMonitor(options) {\n        const { symbol, granularity, key } = options;\n        const type = getType(granularity);\n\n        if (type === 'ticks' && this.tickListeners.hasIn([symbol, key])) {\n            this.tickListeners = this.tickListeners.deleteIn([symbol, key]);\n        }\n\n        if (type === 'candles' && this.ohlcListeners.hasIn([symbol, Number(granularity), key])) {\n            this.ohlcListeners = this.ohlcListeners.deleteIn([symbol, Number(granularity), key]);\n        }\n\n        await this.unsubscribeIfEmptyListeners(options);\n    }\n\n    async unsubscribeIfEmptyListeners(options) {\n        const { symbol, granularity } = options;\n\n        let needToUnsubscribe = false;\n\n        const tickListener = this.tickListeners.get(symbol);\n\n        if (tickListener && !tickListener.size) {\n            this.tickListeners = this.tickListeners.delete(symbol);\n            this.ticks = this.ticks.delete(symbol);\n            needToUnsubscribe = true;\n        }\n\n        const ohlcListener = this.ohlcListeners.getIn([symbol, Number(granularity)]);\n\n        if (ohlcListener && !ohlcListener.size) {\n            this.ohlcListeners = this.ohlcListeners.deleteIn([symbol, Number(granularity)]);\n            this.candles = this.candles.deleteIn([symbol, Number(granularity)]);\n            needToUnsubscribe = true;\n        }\n\n        if (needToUnsubscribe) {\n            await this.unsubscribeAllAndSubscribeListeners(symbol);\n        }\n    }\n\n    unsubscribeAllAndSubscribeListeners(symbol) {\n        const ohlcSubscriptions = this.subscriptions.getIn(['ohlc', symbol]);\n\n        const subscription = [...(ohlcSubscriptions ? Array.from(ohlcSubscriptions.values()) : [])];\n\n        Promise.all(subscription.map(id => doUntilDone(() => api_base.api.forget(id))));\n\n        this.subscriptions = new Map();\n    }\n\n    updateTicksAndCallListeners(symbol, ticks) {\n        if (this.ticks.get(symbol) === ticks) {\n            return;\n        }\n        this.ticks = this.ticks.set(symbol, ticks);\n\n        const listeners = this.tickListeners.get(symbol);\n\n        if (listeners) {\n            listeners.forEach(callback => callback(this.ticks.get(symbol)));\n        }\n    }\n\n    updateCandlesAndCallListeners(address, candles) {\n        if (this.ticks.getIn(address) === candles) {\n            return;\n        }\n        this.candles = this.candles.setIn(address, candles);\n\n        const listeners = this.ohlcListeners.getIn(address);\n\n        if (listeners) {\n            listeners.forEach(callback => callback(this.candles.getIn(address)));\n        }\n    }\n\n    observe() {\n        if (api_base.api) {\n            const subscription = api_base.api.onMessage().subscribe(({ data }) => {\n                if (data.msg_type === 'tick') {\n                    const { tick } = data;\n                    const { symbol, id } = tick;\n                    if (this.ticks.has(symbol)) {\n                        this.subscriptions = this.subscriptions.setIn(['tick', symbol], id);\n                        this.updateTicksAndCallListeners(symbol, updateTicks(this.ticks.get(symbol), parseTick(tick)));\n                    }\n                }\n\n                if (data.msg_type === 'ohlc') {\n                    const { ohlc } = data;\n                    const { symbol, granularity, id } = ohlc;\n                    if (this.candles.hasIn([symbol, Number(granularity)])) {\n                        this.subscriptions = this.subscriptions.setIn(['ohlc', symbol, Number(granularity)], id);\n                        const address = [symbol, Number(granularity)];\n                        this.updateCandlesAndCallListeners(\n                            address,\n                            updateCandles(this.candles.getIn(address), parseOhlc(ohlc))\n                        );\n                    }\n                }\n            });\n            api_base.pushSubscription(subscription);\n        }\n    }\n\n    requestStream(options) {\n        const { style } = options;\n        const stringified_options = JSON.stringify(options);\n\n        if (style === 'ticks') {\n            if (this.ticks_history_promise?.stringified_options !== stringified_options) {\n                this.ticks_history_promise = {\n                    promise: this.requestPipSizes().then(() => this.requestTicks(options)),\n                    stringified_options,\n                };\n            }\n\n            return this.ticks_history_promise.promise;\n        }\n\n        if (style === 'candles') {\n            if (!this.candles_promise || this.candles_promise.stringified_options !== stringified_options) {\n                this.candles_promise = {\n                    promise: this.requestPipSizes().then(() => this.requestTicks(options)),\n                    stringified_options,\n                };\n            }\n\n            return this.candles_promise.promise;\n        }\n\n        return [];\n    }\n\n    requestTicks(options) {\n        const { symbol, granularity, style } = options;\n        const request_object = {\n            ticks_history: symbol,\n            subscribe: 1,\n            end: 'latest',\n            count: 1000,\n            granularity: granularity ? Number(granularity) : undefined,\n            style,\n        };\n        return new Promise((resolve, reject) => {\n            if (!api_base.api) resolve([]);\n            doUntilDone(() => api_base.api.send(request_object), [], api_base)\n                .then(r => {\n                    if (style === 'ticks') {\n                        const ticks = historyToTicks(r.history);\n\n                        this.updateTicksAndCallListeners(symbol, ticks);\n                        resolve(ticks);\n                    } else {\n                        const candles = parseCandles(r.candles);\n\n                        this.updateCandlesAndCallListeners([symbol, Number(granularity)], candles);\n\n                        resolve(candles);\n                    }\n                })\n                .catch(reject);\n        });\n    }\n\n    forget = () => {\n        return new Promise((resolve, reject) => {\n            if (api_base?.api) {\n                api_base.api\n                    .forgetAll('ticks')\n                    .then(() => {\n                        resolve();\n                    })\n                    .catch(reject);\n            } else {\n                resolve();\n            }\n        });\n    };\n\n    forgetCandleSubscription = () => {\n        return new Promise((resolve, reject) => {\n            if (api_base?.api) {\n                api_base.api\n                    .forgetAll('candles')\n                    .then(() => {\n                        resolve();\n                    })\n                    .catch(reject);\n            } else {\n                resolve();\n            }\n        });\n    };\n\n    unsubscribeFromTicksService() {\n        return new Promise((resolve, reject) => {\n            this.forget()\n                .then(() => {\n                    this.forgetCandleSubscription()\n                        .then(() => {\n                            resolve();\n                        })\n                        .catch(reject);\n                })\n                .catch(reject);\n            this.ticks_history_promise = null;\n        });\n    }\n}\n","import TicksService from '../../api/ticks_service';\nimport Observer from '../../../utils/observer';\n\nexport const createScope = () => {\n    const observer = new Observer();\n    const ticksService = new TicksService();\n    const stopped = false;\n    return { observer, ticksService, stopped };\n};\n","import { localize } from '@deriv/translations';\nimport { createError } from '../../../utils/error';\n\nconst isPositiveNumber = num => Number.isFinite(num) && num > 0;\n\nconst isPositiveInteger = num => isPositiveNumber(num) && Number.isInteger(num);\n\nexport const expectPositiveInteger = (num, msg) => {\n    if (!isPositiveInteger(num)) {\n        throw createError('PositiveIntegerExpected', msg);\n    }\n    return num;\n};\n\nconst expectOptions = options => {\n    const { symbol, contractTypes } = options;\n\n    if (!symbol) {\n        throw createError('OptionError', localize('Underlying market is not selected'));\n    }\n\n    if (!contractTypes[0]) {\n        throw createError('OptionError', localize('Contract type is not selected'));\n    }\n};\n\nexport const expectInitArg = args => {\n    const [token, options] = args;\n\n    if (!token) {\n        throw createError('LoginError', localize('Please login'));\n    }\n\n    expectOptions(options);\n\n    return args;\n};\n\nconst isCandle = candle =>\n    candle instanceof Object &&\n    ['open', 'high', 'low', 'close'].every(key => isPositiveNumber(candle[key])) &&\n    isPositiveInteger(candle.epoch);\n\nexport const expectCandle = candle => {\n    if (!isCandle(candle)) {\n        throw createError('CandleExpected', localize('Given candle is not valid'));\n    }\n    return candle;\n};\n\nexport const expectCandles = candles => {\n    if (!(candles instanceof Array) || !candles.every(c => isCandle(c))) {\n        throw createError('CandleListExpected', localize('Given candle list is not valid'));\n    }\n    return candles;\n};\n","// eslint-disable-next-line no-confusing-arrow\nexport const takeField = (arr, field) => arr.map(x => (field ? x[field] : x));\n\nexport const takeLast = (arr, n, field) => takeField(arr.slice(n > arr.length ? 0 : arr.length - n, arr.length), field);\n\nexport const sum = data => data.reduce((acc, x) => acc + x, 0);\n\nexport const mean = data => data.reduce((a, b) => a + b, 0) / data.length;\n\nexport const stddev = data => {\n    const data_mean = mean(data);\n    // eslint-disable-next-line prefer-exponentiation-operator\n    const sq_diff = data.map(n => Math.pow(n - data_mean, 2));\n    const avg_sq_diff = mean(sq_diff);\n    return Math.sqrt(avg_sq_diff);\n};\n","import { sequence } from '@deriv/shared';\nimport { sum, takeLast } from '../utils/math';\n\n/**\n * @param {Array} data\n * @param {Object} config of type\n * {\n *  periods: number,\n *  field?: 'open' | 'high' | 'low' | 'close',\n *  pipSize: number,\n * }\n */\nexport const simpleMovingAverage = (data, config) => {\n    const { periods, field } = config;\n\n    if (data.length < periods) {\n        throw new Error('Periods longer than data length');\n    }\n\n    const vals = takeLast(data, periods, field);\n\n    return sum(vals) / periods;\n};\n\n/**\n * @param {Array} data\n * @param {Object} config of type\n * {\n *  periods: number,\n *  field?: 'open' | 'high' | 'low' | 'close',\n *  pipSize: number,\n * }\n */\nexport const simpleMovingAverageArray = (data, config) => {\n    const { periods, pipSize = 2 } = config;\n    return sequence(data.length - periods + 1).map(\n        (x, i) => +simpleMovingAverage(data.slice(i, i + periods), config).toFixed(pipSize)\n    );\n};\n","import { sequence } from '@deriv/shared';\nimport { simpleMovingAverage } from './simple-moving-average';\nimport { stddev, takeLast } from '../utils/math';\n\n/**\n * @param {Array} data\n * @param {Object} config of type\n * {\n *  periods: number,\n *  field?: 'open' | 'high' | 'low' | 'close',\n *  type: 'SMA' | 'WMA' | 'EMA' | 'TEMA' | 'TRIMA',\n *  stdDevUp: number,\n *  stdDevDown: number,\n *  pipSize: number,\n * }\n */\nexport const bollingerBands = (data, config) => {\n    const { periods = 20, field, stdDevUp = 2, stdDevDown = 2, pipSize = 2 } = config;\n    const vals = takeLast(data, periods, field);\n    const middle = simpleMovingAverage(vals, { periods });\n    const std_dev = stddev(vals);\n    const upper = middle + std_dev * stdDevUp;\n    const lower = middle - std_dev * stdDevDown;\n\n    return [+middle.toFixed(pipSize), +upper.toFixed(pipSize), +lower.toFixed(pipSize)];\n};\n\n/**\n * @param {Array} data\n * @param {Object} config of type\n * {\n *  periods: number,\n *  field?: 'open' | 'high' | 'low' | 'close',\n *  type: 'SMA' | 'WMA' | 'EMA' | 'TEMA' | 'TRIMA',\n *  stdDevUp: number,\n *  stdDevDown: number,\n *  pipSize: number,\n * }\n */\nexport const bollingerBandsArray = (data, config) => {\n    const { periods } = config;\n    return sequence(data.length - periods + 1).map((x, i) => bollingerBands(data.slice(i, i + periods), config));\n};\n","import { takeField, mean } from '../utils/math';\n\n/**\n * @param {Array} data\n * @param {Object} config of type\n * {\n *  periods: number,\n *  field?: 'open' | 'high' | 'low' | 'close',\n *  pipSize: number,\n * }\n * @param {Number} init_val\n */\nexport const exponentialMovingAverage = (data, config, init_val) => {\n    const { periods, field, pipSize = 2 } = config;\n\n    const weighting_multiplier = 2 / (periods + 1);\n\n    const vals = takeField(data, field);\n\n    if (init_val) {\n        return (vals[0] - init_val) * weighting_multiplier + init_val;\n    }\n\n    if (data.length < periods) {\n        throw new Error('Periods longer than data length');\n    }\n\n    const mean_val = mean(takeField(data.slice(0, periods), field));\n\n    return +vals\n        .slice(periods)\n        .reduce((prev, e) => (e - prev) * weighting_multiplier + prev, mean_val)\n        .toFixed(pipSize);\n};\n\n/**\n * @param {Array} data\n * @param {Object} config of type\n * {\n *  periods: number,\n *  field?: 'open' | 'high' | 'low' | 'close',\n *  pipSize: number,\n * }\n */\nexport const exponentialMovingAverageArray = (data, config) => {\n    const { periods } = config;\n\n    let init_val = exponentialMovingAverage(data.slice(0, periods), config);\n\n    return (\n        data\n            .slice(periods - 1)\n            // eslint-disable-next-line no-confusing-arrow\n            .map((x, i) => (!i ? init_val : (init_val = exponentialMovingAverage([x], config, init_val))))\n    );\n};\n","import { exponentialMovingAverageArray } from './exponential-moving-average';\nimport { takeField } from '../utils/math';\n\nconst paddingLeft = (data, length) => {\n    const arr = [];\n    arr.length = length - data.length;\n    arr.fill(0);\n    return [...arr, ...data];\n};\n\n/**\n * @param {Array} data\n * @param {Object} config of type\n * {\n *  fastEmaPeriod: number,\n *  slowEmaPeriod: number,\n *  signalEmaPeriod: number\n *  field?: 'open' | 'high' | 'low' | 'close',\n *  pipSize: number,\n * }\n */\nexport const macdArray = (data, config) => {\n    const { field, fastEmaPeriod = 12, slowEmaPeriod = 26, signalEmaPeriod = 9, pipSize = 2 } = config;\n\n    const vals = takeField(data, field);\n\n    const length = vals.length;\n\n    const fast_ema_array = paddingLeft(\n        exponentialMovingAverageArray(\n            vals,\n            { periods: fastEmaPeriod, pipSize: 20, field }\n            // -------------------------- ^ set pipSize to 20 to prevent rounding\n        ),\n        length\n    );\n    const slow_ema_array = paddingLeft(\n        exponentialMovingAverageArray(vals, { periods: slowEmaPeriod, pipSize: 20, field }),\n        length\n    );\n\n    const macd_calc_array = paddingLeft(\n        slow_ema_array.map((x, i) => +(fast_ema_array[i] - x).toFixed(pipSize)),\n        length\n    );\n\n    const signal_ema_array = paddingLeft(\n        exponentialMovingAverageArray(macd_calc_array.slice(slowEmaPeriod - 1), {\n            periods: signalEmaPeriod,\n            pipSize: 20,\n            field,\n        }),\n        length\n    );\n\n    return macd_calc_array\n        .map((x, i) => [+(x - signal_ema_array[i]).toFixed(pipSize), x, +signal_ema_array[i].toFixed(pipSize)])\n        .slice(slowEmaPeriod + signalEmaPeriod - 2);\n};\n","import { sequence } from '@deriv/shared';\nimport { takeField } from '../utils/math';\n\n// eslint-disable-next-line no-confusing-arrow\nconst calcGain = (q1, q2) => (q2 > q1 ? q2 - q1 : 0);\n// eslint-disable-next-line no-confusing-arrow\nconst calcLoss = (q1, q2) => (q2 < q1 ? q1 - q2 : 0);\n\nconst calcFirstAvgDiff = (vals, comp, periods) => {\n    let prev;\n    return (\n        vals.reduce((r, q, i) => {\n            if (i === 1) {\n                prev = r;\n            }\n            const diff = comp(prev, q);\n            prev = q;\n            return diff + (i === 1 ? 0 : r);\n        }) / periods\n    );\n};\n\nconst calcSecondAvgDiff = (vals, comp, periods, init_avg) => {\n    let prev;\n    if (vals.length === 1) {\n        // There is no data to calc avg\n        return init_avg;\n    }\n    return vals.reduce((r, q, i) => {\n        if (i === 1) {\n            prev = r;\n        }\n        const diff = comp(prev, q);\n        prev = q;\n        const prev_avg = i === 1 ? init_avg : r;\n        return (prev_avg * (periods - 1) + diff) / periods;\n    });\n};\n\n/**\n * @param {Array} data\n * @param {Object} config of type\n * {\n *  periods: number,\n *  field?: 'open' | 'high' | 'low' | 'close',\n *  pipSize: number,\n * }\n * @param {any} memoized_diff\n */\nexport const relativeStrengthIndex = (data, config, memoized_diff) => {\n    const { periods, field } = config;\n\n    if (data.length < periods) {\n        throw new Error('Periods longer than data length');\n    }\n\n    if (data.length === periods) {\n        return 0;\n    }\n\n    const vals = takeField(data.slice(0, periods + 1), field);\n\n    let rest_seq, init_avg_gain, init_avg_loss;\n\n    if (memoized_diff && 'gain' in memoized_diff) {\n        rest_seq = takeField(data.slice(-2), field);\n\n        init_avg_gain = memoized_diff.gain;\n        init_avg_loss = memoized_diff.loss;\n    } else {\n        // include last element from above to calc diff\n        rest_seq = takeField(data.slice(periods, data.length), field);\n\n        init_avg_gain = calcFirstAvgDiff(vals, calcGain, periods);\n        init_avg_loss = calcFirstAvgDiff(vals, calcLoss, periods);\n    }\n\n    const avg_gain = calcSecondAvgDiff(rest_seq, calcGain, periods, init_avg_gain);\n    const avg_loss = calcSecondAvgDiff(rest_seq, calcLoss, periods, init_avg_loss);\n\n    if (memoized_diff) {\n        memoized_diff.gain = avg_gain;\n        memoized_diff.loss = avg_loss;\n    }\n\n    if (avg_gain === 0) {\n        return 0;\n    } else if (avg_loss === 0) {\n        return 100;\n    }\n\n    const RS = avg_gain / avg_loss;\n\n    return 100 - 100 / (1 + RS);\n};\n\n/**\n * @param {Array} data\n * @param {Object} config of type\n * {\n *  periods: number,\n *  field?: 'open' | 'high' | 'low' | 'close',\n *  pipSize: number,\n * }\n */\nexport const relativeStrengthIndexArray = (data, config) => {\n    const { periods, pipSize = 2 } = config;\n    const memoized_diff = {};\n    return sequence(data.length - periods).map(\n        (x, i) => +relativeStrengthIndex(data.slice(0, i + periods + 1), config, memoized_diff).toFixed(pipSize)\n    );\n};\n","import {\n    simpleMovingAverage as sma,\n    simpleMovingAverageArray as smaa,\n    bollingerBands as bb,\n    bollingerBandsArray as bba,\n    exponentialMovingAverage as ema,\n    exponentialMovingAverageArray as emaa,\n    relativeStrengthIndex as rsi,\n    relativeStrengthIndexArray as rsia,\n    macdArray as macda,\n} from '@deriv/indicators';\n\nconst decorate = (f, input, tradeEngine, config, ...args) => {\n    const pipSize = tradeEngine.getPipSize();\n    return f(input, { pipSize, ...config }, ...args);\n};\n\nconst getIndicatorsInterface = tradeEngine => {\n    return {\n        sma: (input, periods) => decorate(sma, input, tradeEngine, { periods }),\n        smaa: (input, periods) => decorate(smaa, input, tradeEngine, { periods }),\n        ema: (input, periods) => decorate(ema, input, tradeEngine, { periods }),\n        emaa: (input, periods) => decorate(emaa, input, tradeEngine, { periods }),\n        rsi: (input, periods) => decorate(rsi, input, tradeEngine, { periods }),\n        rsia: (input, periods) => decorate(rsia, input, tradeEngine, { periods }),\n        bb: (input, config, field) => decorate(bb, input, tradeEngine, config)[field],\n        bba: (input, config, field) => decorate(bba, input, tradeEngine, config).map(r => r[field]),\n        macda: (input, config, field) => decorate(macda, input, tradeEngine, config).map(r => r[field]),\n    };\n};\n\nexport default getIndicatorsInterface;\n","import { localize } from '@deriv/translations';\nimport getCandleInterface from './CandleInterface';\nimport getIndicatorsInterface from './IndicatorsInterface';\nimport getMiscInterface from './MiscInterface';\n\nconst getToolsInterface = tradeEngine => {\n    return {\n        dateTimeStringToTimestamp: datetime_string => {\n            const invalid_msg = localize('Invalid date/time: {{ datetime_string }}', { datetime_string });\n\n            if (typeof datetime_string !== 'string') {\n                return invalid_msg;\n            }\n\n            const date_time = datetime_string\n                .replace(/[^0-9.:-\\s]/g, '')\n                .replace(/\\s+/g, ' ')\n                .trim()\n                .split(' ');\n\n            const d = /^[12]\\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01])$/;\n            const t = /^(0[0-9]|1[0-9]|2[0-3]):([0-5][0-9])(:([0-5][0-9])?)?$/;\n\n            let validated_datetime;\n\n            if (date_time.length >= 2) {\n                validated_datetime =\n                    d.test(date_time[0]) && t.test(date_time[1]) ? `${date_time[0]}T${date_time[1]}` : null;\n            } else if (date_time.length === 1) {\n                validated_datetime = d.test(date_time[0]) ? date_time[0] : null;\n            } else {\n                validated_datetime = null;\n            }\n\n            if (validated_datetime) {\n                const date_obj = new Date(validated_datetime);\n                // eslint-disable-next-line no-restricted-globals\n                if (date_obj instanceof Date && !isNaN(date_obj)) {\n                    return date_obj.getTime() / 1000;\n                }\n            }\n\n            return invalid_msg;\n        },\n        getTime: () => parseInt(new Date().getTime() / 1000),\n        ...getCandleInterface(),\n        ...getMiscInterface(tradeEngine),\n        ...getIndicatorsInterface(tradeEngine),\n\n        // Highlight the block that is being executed\n        highlightBlock: block_id => {\n            const block = Blockly.derivWorkspace.getBlockById(block_id);\n            Blockly.BlockSvg.prototype.highlightExecutedBlock = function () {\n                const highlight_block_class = 'block--execution-highlighted';\n                if (!Blockly.utils.dom.hasClass(this.svgGroup_, highlight_block_class)) {\n                    Blockly.utils.dom.addClass(this.svgGroup_, highlight_block_class);\n                    setTimeout(() => {\n                        if (this.svgGroup_) {\n                            Blockly.utils.dom.removeClass(this.svgGroup_, highlight_block_class);\n                        }\n                    }, 1505);\n                }\n            };\n            if (block) {\n                block.highlightExecutedBlock(block);\n            }\n        },\n    };\n};\n\nexport default getToolsInterface;\n","import { expectCandle, expectCandles } from '../utils/sanitize';\n\nconst getCandleInterface = () => {\n    return {\n        isCandleBlack: candle => expectCandle(candle) && candle.close < candle.open,\n        candleValues: (ohlc, field) => expectCandles(ohlc).map(o => o[field]),\n        candleField: (candle, field) => expectCandle(candle)[field],\n    };\n};\n\nexport default getCandleInterface;\n","import { localize } from '@deriv/translations';\nimport { notify } from '../utils/broadcast';\nimport { observer as globalObserver } from '../../../utils/observer';\n\nconst getMiscInterface = tradeEngine => {\n    return {\n        notify: args => globalObserver.emit('ui.log.notify', args),\n        console: ({ type, message }) => console[type](message), // eslint-disable-line no-console\n        notifyTelegram: (access_token, chat_id, text) => {\n            const url = `https://api.telegram.org/bot${access_token}/sendMessage`;\n            const onError = () => notify('warn', localize('The Telegram notification could not be sent'));\n\n            fetch(url, {\n                method: 'POST',\n                mode: 'cors',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({ chat_id, text }),\n            })\n                .then(response => {\n                    if (!response.ok) {\n                        onError();\n                    }\n                })\n                .catch(onError);\n        },\n        getTotalRuns: () => tradeEngine.getTotalRuns(),\n        getBalance: type => tradeEngine.getBalance(type),\n        getTotalProfit: toString => tradeEngine.getTotalProfit(toString, tradeEngine.tradeOptions.currency),\n    };\n};\n\nexport default getMiscInterface;\n","const getTicksInterface = tradeEngine => {\n    return {\n        getDelayTickValue: (...args) => tradeEngine.getDelayTickValue(...args),\n        getCurrentStat: (...args) => tradeEngine.getCurrentStat(...args),\n        getStatList: (...args) => tradeEngine.getStatList(...args),\n        getLastTick: (...args) => tradeEngine.getLastTick(...args),\n        getLastDigit: (...args) => tradeEngine.getLastDigit(...args),\n        getTicks: (...args) => tradeEngine.getTicks(...args),\n        checkDirection: (...args) => tradeEngine.checkDirection(...args),\n        getOhlcFromEnd: (...args) => tradeEngine.getOhlcFromEnd(...args),\n        getOhlc: (...args) => tradeEngine.getOhlc(...args),\n        getLastDigitList: (...args) => tradeEngine.getLastDigitList(...args),\n    };\n};\n\nexport default getTicksInterface;\n","import { observer as globalObserver } from '../../../utils/observer';\nimport { createDetails } from '../utils/helpers';\n\nconst getBotInterface = tradeEngine => {\n    const getDetail = i => createDetails(tradeEngine.data.contract)[i];\n\n    return {\n        init: (...args) => tradeEngine.init(...args),\n        start: (...args) => tradeEngine.start(...args),\n        stop: (...args) => tradeEngine.stop(...args),\n        purchase: contract_type => tradeEngine.purchase(contract_type),\n        getAskPrice: contract_type => Number(getProposal(contract_type, tradeEngine).ask_price),\n        getPayout: contract_type => Number(getProposal(contract_type, tradeEngine).payout),\n        getPurchaseReference: () => tradeEngine.getPurchaseReference(),\n        isSellAvailable: () => tradeEngine.isSellAtMarketAvailable(),\n        sellAtMarket: () => tradeEngine.sellAtMarket(),\n        getSellPrice: () => getSellPrice(tradeEngine),\n        isResult: result => getDetail(10) === result,\n        isTradeAgain: result => globalObserver.emit('bot.trade_again', result),\n        readDetails: i => getDetail(i - 1),\n    };\n};\n\nconst getProposal = (contract_type, tradeEngine) => {\n    return tradeEngine.data.proposals.find(\n        proposal =>\n            proposal.contract_type === contract_type &&\n            proposal.purchase_reference === tradeEngine.getPurchaseReference()\n    );\n};\n\nconst getSellPrice = tradeEngine => {\n    return tradeEngine.getSellPrice();\n};\n\nexport default getBotInterface;\n","import { getFormattedText } from '@deriv/shared';\nimport { info } from '../utils/broadcast';\nimport DBotStore from '../../../scratch/dbot-store';\nimport { api_base } from '../../api/api-base';\n\nlet balance_string = '';\n\nexport default Engine =>\n    class Balance extends Engine {\n        observeBalance() {\n            if (!api_base.api) return;\n            const subscription = api_base.api.onMessage().subscribe(({ data }) => {\n                if (data?.msg_type === 'balance' && data?.balance) {\n                    const {\n                        balance: { balance: b, currency },\n                    } = data;\n\n                    balance_string = getFormattedText(b, currency);\n\n                    if (this.accountInfo) info({ accountID: this.accountInfo.loginid, balance: balance_string });\n                }\n            });\n            api_base.pushSubscription(subscription);\n        }\n\n        // eslint-disable-next-line class-methods-use-this\n        getBalance(type) {\n            const { client } = DBotStore.instance;\n            const balance = (client && client.balance) || 0;\n\n            balance_string = getFormattedText(balance, client.currency, false);\n            return type === 'STR' ? balance_string : balance;\n        }\n    };\n","export const BEFORE_PURCHASE = 'BEFORE_PURCHASE';\nexport const DURING_PURCHASE = 'DURING_PURCHASE';\nexport const PROPOSALS_READY = 'PROPOSALS_READY';\nexport const CLEAR_PROPOSALS = 'CLEAR_PROPOSALS';\nexport const PURCHASE_SUCCESSFUL = 'PURCHASE_SUCCESSFUL';\nexport const OPEN_CONTRACT = 'OPEN_CONTRACT';\nexport const INVALID_ACTION = 'INVALID_ACTION';\nexport const SELL = 'SELL';\nexport const START = 'START';\nexport const STOP = 'STOP';\nexport const NEW_TICK = 'NEW_TICK';\n","import * as constants from '../constants';\n\nconst dispatchIfScopeIs = ({ dispatch, getState, data, scope }) => {\n    const { scope: currentScope } = getState();\n    if (currentScope === scope) {\n        dispatch(data);\n    }\n};\n\nexport const start = () => (dispatch, getState) =>\n    dispatchIfScopeIs({ dispatch, getState, data: { type: constants.START }, scope: constants.STOP });\n\nexport const proposalsReady = () => ({ type: constants.PROPOSALS_READY });\n\nexport const clearProposals = () => ({ type: constants.CLEAR_PROPOSALS });\n\nconst dispatchIfScopeIsBeforePurchase = args => dispatchIfScopeIs({ ...args, scope: constants.BEFORE_PURCHASE });\n\nconst dispatchIfBeforePurchaseReady = args => {\n    const { getState } = args;\n    const { proposalsReady: beforePurchaseReady } = getState();\n\n    if (beforePurchaseReady) {\n        dispatchIfScopeIsBeforePurchase(args);\n    }\n\n    dispatchIfScopeIs({ ...args, scope: constants.BEFORE_PURCHASE });\n};\n\nexport const purchaseSuccessful = () => (dispatch, getState) =>\n    dispatchIfBeforePurchaseReady({ dispatch, getState, data: { type: constants.PURCHASE_SUCCESSFUL } });\n\nexport const openContractReceived = () => (dispatch, getState) => {\n    const { scope: currentScope } = getState();\n    if (currentScope === constants.DURING_PURCHASE) {\n        dispatch({ type: constants.OPEN_CONTRACT });\n    }\n    dispatchIfBeforePurchaseReady({ dispatch, getState, data: { type: constants.OPEN_CONTRACT } });\n};\n\nexport const sell = () => (dispatch, getState) =>\n    dispatchIfScopeIs({ dispatch, getState, data: { type: constants.SELL }, scope: constants.DURING_PURCHASE });\n","import { purchaseSuccessful } from './state/actions';\nimport { BEFORE_PURCHASE } from './state/constants';\nimport { contractStatus, info, log } from '../utils/broadcast';\nimport { getUUID, recoverFromError, doUntilDone, tradeOptionToBuy } from '../utils/helpers';\nimport { LogTypes } from '../../../constants/messages';\nimport { api_base } from '../../api/api-base';\n\nlet delayIndex = 0;\nlet purchase_reference;\n\nexport default Engine =>\n    class Purchase extends Engine {\n        purchase(contract_type) {\n            // Prevent calling purchase twice\n            if (this.store.getState().scope !== BEFORE_PURCHASE) {\n                return Promise.resolve();\n            }\n\n            const onSuccess = response => {\n                // Don't unnecessarily send a forget request for a purchased contract.\n                const { buy } = response;\n\n                contractStatus({\n                    id: 'contract.purchase_received',\n                    data: buy.transaction_id,\n                    buy,\n                });\n\n                this.contractId = buy.contract_id;\n                this.store.dispatch(purchaseSuccessful());\n\n                if (this.is_proposal_subscription_required) {\n                    this.renewProposalsOnPurchase();\n                }\n\n                delayIndex = 0;\n                log(LogTypes.PURCHASE, { longcode: buy.longcode, transaction_id: buy.transaction_id });\n                info({\n                    accountID: this.accountInfo.loginid,\n                    totalRuns: this.updateAndReturnTotalRuns(),\n                    transaction_ids: { buy: buy.transaction_id },\n                    contract_type,\n                    buy_price: buy.buy_price,\n                });\n            };\n\n            if (this.is_proposal_subscription_required) {\n                const { id, askPrice } = this.selectProposal(contract_type);\n\n                const action = () => api_base.api.send({ buy: id, price: askPrice });\n\n                this.isSold = false;\n\n                contractStatus({\n                    id: 'contract.purchase_sent',\n                    data: askPrice,\n                });\n\n                if (!this.options.timeMachineEnabled) {\n                    return doUntilDone(action).then(onSuccess);\n                }\n\n                return recoverFromError(\n                    action,\n                    (errorCode, makeDelay) => {\n                        // if disconnected no need to resubscription (handled by live-api)\n                        if (errorCode !== 'DisconnectError') {\n                            this.renewProposalsOnPurchase();\n                        } else {\n                            this.clearProposals();\n                        }\n\n                        const unsubscribe = this.store.subscribe(() => {\n                            const { scope, proposalsReady } = this.store.getState();\n                            if (scope === BEFORE_PURCHASE && proposalsReady) {\n                                makeDelay().then(() => this.observer.emit('REVERT', 'before'));\n                                unsubscribe();\n                            }\n                        });\n                    },\n                    ['PriceMoved', 'InvalidContractProposal'],\n                    delayIndex++\n                ).then(onSuccess);\n            }\n            const trade_option = tradeOptionToBuy(contract_type, this.tradeOptions);\n            const action = () => api_base.api.send(trade_option);\n\n            this.isSold = false;\n\n            contractStatus({\n                id: 'contract.purchase_sent',\n                data: this.tradeOptions.amount,\n            });\n\n            if (!this.options.timeMachineEnabled) {\n                return doUntilDone(action).then(onSuccess);\n            }\n\n            return recoverFromError(\n                action,\n                (errorCode, makeDelay) => {\n                    if (errorCode === 'DisconnectError') {\n                        this.clearProposals();\n                    }\n                    const unsubscribe = this.store.subscribe(() => {\n                        const { scope } = this.store.getState();\n                        if (scope === BEFORE_PURCHASE) {\n                            makeDelay().then(() => this.observer.emit('REVERT', 'before'));\n                            unsubscribe();\n                        }\n                    });\n                },\n                ['PriceMoved', 'InvalidContractProposal'],\n                delayIndex++\n            ).then(onSuccess);\n        }\n        getPurchaseReference = () => purchase_reference;\n        regeneratePurchaseReference = () => {\n            purchase_reference = getUUID();\n        };\n    };\n","import * as constants from '../constants';\n\nconst initialState = {\n    scope: constants.STOP,\n    proposalsReady: false,\n};\n\nconst signal = (state = initialState, action) => {\n    switch (action.type) {\n        case constants.START:\n            return {\n                scope: constants.BEFORE_PURCHASE,\n                proposalsReady: state.proposalsReady,\n            };\n        case constants.PROPOSALS_READY:\n            return {\n                ...state,\n                proposalsReady: true,\n            };\n        case constants.CLEAR_PROPOSALS:\n            return {\n                ...state,\n                proposalsReady: false,\n            };\n        case constants.PURCHASE_SUCCESSFUL:\n            return {\n                scope: constants.DURING_PURCHASE,\n                openContract: false,\n                proposalsReady: state.proposalsReady,\n            };\n        case constants.OPEN_CONTRACT:\n            return {\n                scope: constants.DURING_PURCHASE,\n                openContract: true,\n                proposalsReady: state.proposalsReady,\n            };\n        case constants.SELL:\n            return {\n                scope: constants.STOP,\n                proposalsReady: state.proposalsReady,\n            };\n        case constants.NEW_TICK:\n            return {\n                ...state,\n                newTick: action.payload,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default signal;\n","import { localize } from '@deriv/translations';\nimport * as constants from './state/constants';\nimport { getDirection, getLastDigit } from '../utils/helpers';\nimport { expectPositiveInteger } from '../utils/sanitize';\nimport { observer as globalObserver } from '../../../utils/observer';\nimport { api_base } from '../../api/api-base';\nimport debounce from 'lodash.debounce';\nimport { getLast } from '../../api/binary-utils';\n\nlet tickListenerKey;\n\nexport default Engine =>\n    class Ticks extends Engine {\n        async watchTicks(symbol) {\n            if (symbol && this.symbol !== symbol) {\n                this.symbol = symbol;\n                const { ticksService } = this.$scope;\n\n                await ticksService.stopMonitor({\n                    symbol,\n                    key: tickListenerKey,\n                });\n                const callback = ticks => {\n                    if (this.is_proposal_subscription_required) {\n                        this.checkProposalReady();\n                    }\n                    const lastTick = ticks.slice(-1)[0];\n                    const { epoch } = lastTick;\n                    this.store.dispatch({ type: constants.NEW_TICK, payload: epoch });\n                };\n\n                const key = await ticksService.monitor({ symbol, callback });\n                tickListenerKey = key;\n            }\n        }\n\n        checkTicksPromiseExists() {\n            return this.$scope.ticksService.ticks_history_promise;\n        }\n\n        getTicks(toString = false) {\n            return new Promise(resolve => {\n                this.$scope.ticksService.request({ symbol: this.symbol }).then(ticks => {\n                    const ticks_list = ticks.map(tick => {\n                        if (toString) {\n                            return tick.quote.toFixed(this.getPipSize());\n                        }\n                        return tick.quote;\n                    });\n\n                    resolve(ticks_list);\n                });\n            });\n        }\n\n        getLastTick(raw, toString = false) {\n            return new Promise(resolve =>\n                this.$scope.ticksService\n                    .request({ symbol: this.symbol })\n                    .then(ticks => {\n                        let last_tick = raw ? getLast(ticks) : getLast(ticks).quote;\n                        if (!raw && toString) {\n                            last_tick = last_tick.toFixed(this.getPipSize());\n                        }\n                        resolve(last_tick);\n                    })\n                    .catch(e => {\n                        if (e.code === 'MarketIsClosed') {\n                            globalObserver.emit('Error', e);\n                            resolve(e.code);\n                        }\n                    })\n            );\n        }\n\n        getLastDigit() {\n            return new Promise(resolve => this.getLastTick(false, true).then(tick => resolve(getLastDigit(tick))));\n        }\n\n        getLastDigitList() {\n            return new Promise(resolve => this.getTicks().then(ticks => resolve(this.getLastDigitsFromList(ticks))));\n        }\n        getLastDigitsFromList(ticks) {\n            const digits = ticks.map(tick => {\n                return getLastDigit(tick.toFixed(this.getPipSize()));\n            });\n            return digits;\n        }\n\n        checkDirection(dir) {\n            return new Promise(resolve =>\n                this.$scope.ticksService\n                    .request({ symbol: this.symbol })\n                    .then(ticks => resolve(getDirection(ticks) === dir))\n            );\n        }\n\n        getOhlc(args) {\n            const { granularity = this.options.candleInterval || 60, field } = args || {};\n\n            return new Promise(resolve =>\n                this.$scope.ticksService\n                    .request({ symbol: this.symbol, granularity })\n                    .then(ohlc => resolve(field ? ohlc.map(o => o[field]) : ohlc))\n            );\n        }\n\n        getOhlcFromEnd(args) {\n            const { index: i = 1 } = args || {};\n\n            const index = expectPositiveInteger(Number(i), localize('Index must be a positive integer'));\n\n            return new Promise(resolve => this.getOhlc(args).then(ohlc => resolve(ohlc.slice(-index)[0])));\n        }\n\n        getPipSize() {\n            return this.$scope.ticksService.pipSizes[this.symbol];\n        }\n\n        async requestAccumulatorStats() {\n            const subscription_id = this.subscription_id_for_accumulators;\n            const is_proposal_requested = this.is_proposal_requested_for_accumulators;\n            const proposal_request = {\n                ...window.Blockly.accumulators_request,\n                amount: this?.tradeOptions?.amount,\n                basis: this?.tradeOptions?.basis,\n                contract_type: 'ACCU',\n                currency: this?.tradeOptions?.currency,\n                growth_rate: this?.tradeOptions?.growth_rate,\n                proposal: 1,\n                subscribe: 1,\n                symbol: this?.tradeOptions?.symbol,\n            };\n            if (!subscription_id && !is_proposal_requested) {\n                this.is_proposal_requested_for_accumulators = true;\n                if (proposal_request) {\n                    await api_base?.api?.send(proposal_request);\n                }\n            }\n        }\n\n        async handleOnMessageForAccumulators() {\n            let ticks_stayed_in_list = [];\n            return new Promise(resolve => {\n                const subscription = api_base.api.onMessage().subscribe(({ data }) => {\n                    if (data.msg_type === 'proposal') {\n                        try {\n                            this.subscription_id_for_accumulators = data.subscription.id;\n                            // this was done because we can multile arrays in the respone and the list comes in reverse order\n                            const stat_list = (data.proposal.contract_details.ticks_stayed_in || []).flat().reverse();\n                            ticks_stayed_in_list = [...stat_list, ...ticks_stayed_in_list];\n                            if (ticks_stayed_in_list.length > 0) resolve(ticks_stayed_in_list);\n                        } catch (error) {\n                            globalObserver.emit('Unexpected message type or no proposal found:', error);\n                        }\n                    }\n                });\n                api_base.pushSubscription(subscription);\n            });\n        }\n\n        async fetchStatsForAccumulators() {\n            try {\n                // request stats for accumulators\n                const debouncedAccumulatorsRequest = debounce(() => this.requestAccumulatorStats(), 300);\n                debouncedAccumulatorsRequest();\n                // wait for proposal response\n                const ticks_stayed_in_list = await this.handleOnMessageForAccumulators();\n                return ticks_stayed_in_list;\n            } catch (error) {\n                globalObserver.emit('Error in subscription promise:', error);\n                throw error;\n            } finally {\n                // forget all proposal subscriptions so we can fetch new stats data on new call\n                await api_base?.api?.send({ forget_all: 'proposal' });\n                this.is_proposal_requested_for_accumulators = false;\n                this.subscription_id_for_accumulators = null;\n            }\n        }\n\n        async getCurrentStat() {\n            try {\n                const ticks_stayed_in = await this.fetchStatsForAccumulators();\n                return ticks_stayed_in?.[0];\n            } catch (error) {\n                globalObserver.emit('Error fetching current stat:', error);\n            }\n        }\n\n        async getStatList() {\n            try {\n                const ticks_stayed_in = await this.fetchStatsForAccumulators();\n                // we need to send only lastest 100 ticks\n                return ticks_stayed_in?.slice(0, 100);\n            } catch (error) {\n                globalObserver.emit('Error fetching current stat:', error);\n            }\n        }\n\n        async getDelayTickValue(tick_value) {\n            return new Promise((resolve, reject) => {\n                try {\n                    const ticks = [];\n                    const symbol = this.symbol;\n\n                    const resolveAndExit = () => {\n                        this.$scope.ticksService.stopMonitor({\n                            symbol,\n                            key: '',\n                        });\n                        resolve(ticks);\n                        ticks.length = 0;\n                    };\n\n                    const watchTicks = tick_list => {\n                        ticks.push(tick_list);\n                        const current_tick = ticks.length;\n                        if (current_tick === tick_value) {\n                            resolveAndExit();\n                        }\n                    };\n\n                    const delayExecution = tick_list => watchTicks(tick_list);\n\n                    if (Number(tick_value) <= 0) resolveAndExit();\n                    this.$scope.ticksService.monitor({ symbol, callback: delayExecution });\n                } catch (error) {\n                    reject(new Error(`Failed to start tick monitoring: ${error.message}`));\n                }\n            });\n        }\n    };\n","import { getRoundedNumber } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport { info, log } from '../utils/broadcast';\nimport { createError } from '../../../utils/error';\nimport { observer as globalObserver } from '../../../utils/observer';\nimport { LogTypes } from '../../../constants/messages';\n\nconst skeleton = {\n    totalProfit: 0,\n    totalWins: 0,\n    totalLosses: 0,\n    totalStake: 0,\n    totalPayout: 0,\n    totalRuns: 0,\n};\n\nconst globalStat = {};\n\nexport default Engine =>\n    class Total extends Engine {\n        constructor() {\n            super();\n            this.sessionRuns = 0;\n            this.sessionProfit = 0;\n\n            globalObserver.register('statistics.clear', this.clearStatistics.bind(this));\n        }\n\n        clearStatistics() {\n            this.sessionRuns = 0;\n            this.sessionProfit = 0;\n            if (!this.accountInfo) return;\n            const { loginid: accountID } = this.accountInfo;\n            globalStat[accountID] = { ...skeleton };\n        }\n\n        updateTotals(contract) {\n            const { sell_price: sellPrice, buy_price: buyPrice, currency } = contract;\n\n            const profit = getRoundedNumber(Number(sellPrice) - Number(buyPrice), currency);\n\n            const win = profit > 0;\n\n            const accountStat = this.getAccountStat();\n\n            accountStat.totalWins += win ? 1 : 0;\n\n            accountStat.totalLosses += !win ? 1 : 0;\n\n            this.sessionProfit = getRoundedNumber(Number(this.sessionProfit) + Number(profit), currency);\n\n            accountStat.totalProfit = getRoundedNumber(Number(accountStat.totalProfit) + Number(profit), currency);\n\n            accountStat.totalStake = getRoundedNumber(Number(accountStat.totalStake) + Number(buyPrice), currency);\n\n            accountStat.totalPayout = getRoundedNumber(Number(accountStat.totalPayout) + Number(sellPrice), currency);\n\n            info({\n                profit,\n                contract,\n                accountID: this.accountInfo.loginid,\n                totalProfit: accountStat.totalProfit,\n                totalWins: accountStat.totalWins,\n                totalLosses: accountStat.totalLosses,\n                totalStake: accountStat.totalStake,\n                totalPayout: accountStat.totalPayout,\n            });\n\n            log(win ? LogTypes.PROFIT : LogTypes.LOST, { currency, profit });\n        }\n\n        updateAndReturnTotalRuns() {\n            this.sessionRuns++;\n            const accountStat = this.getAccountStat();\n\n            return ++accountStat.totalRuns;\n        }\n\n        /* eslint-disable class-methods-use-this */\n        getTotalRuns() {\n            const accountStat = this.getAccountStat();\n            return accountStat.totalRuns;\n        }\n\n        getTotalProfit(toString, currency) {\n            const accountStat = this.getAccountStat();\n\n            return toString && accountStat.totalProfit !== 0\n                ? getRoundedNumber(+accountStat.totalProfit, currency)\n                : +accountStat.totalProfit;\n        }\n\n        /* eslint-enable */\n        checkLimits(tradeOption) {\n            if (!tradeOption.limitations) {\n                return;\n            }\n\n            const {\n                limitations: { maxLoss, maxTrades },\n            } = tradeOption;\n\n            if (maxLoss && maxTrades) {\n                if (this.sessionRuns >= maxTrades) {\n                    throw createError('CustomLimitsReached', localize('Maximum number of trades reached'));\n                }\n                if (this.sessionProfit <= -maxLoss) {\n                    throw createError('CustomLimitsReached', localize('Maximum loss amount reached'));\n                }\n            }\n        }\n\n        /* eslint-disable class-methods-use-this */\n        validateTradeOptions(tradeOptions) {\n            const take_profit = tradeOptions.take_profit;\n            const stop_loss = tradeOptions.stop_loss;\n\n            if (take_profit) {\n                tradeOptions.limit_order.take_profit = take_profit;\n            }\n            if (stop_loss) {\n                tradeOptions.limit_order.stop_loss = stop_loss;\n            }\n\n            return tradeOptions;\n        }\n\n        getAccountStat() {\n            const { loginid: accountID } = this.accountInfo;\n\n            if (!(accountID in globalStat)) {\n                globalStat[accountID] = { ...skeleton };\n            }\n\n            return globalStat[accountID];\n        }\n    };\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { localize } from '@deriv/translations';\nimport Balance from './Balance';\nimport OpenContract from './OpenContract';\nimport Proposal from './Proposal';\nimport Purchase from './Purchase';\nimport Sell from './Sell';\nimport { start, proposalsReady } from './state/actions';\nimport * as constants from './state/constants';\nimport rootReducer from './state/reducers';\nimport Ticks from './Ticks';\nimport Total from './Total';\nimport { doUntilDone, checkBlocksForProposalRequest } from '../utils/helpers';\nimport { expectInitArg } from '../utils/sanitize';\nimport { createError } from '../../../utils/error';\nimport { observer as globalObserver } from '../../../utils/observer';\nimport { api_base } from '../../api/api-base';\n\nconst watchBefore = store =>\n    watchScope({\n        store,\n        stopScope: constants.DURING_PURCHASE,\n        passScope: constants.BEFORE_PURCHASE,\n        passFlag: 'proposalsReady',\n    });\n\nconst watchDuring = store =>\n    watchScope({\n        store,\n        stopScope: constants.STOP,\n        passScope: constants.DURING_PURCHASE,\n        passFlag: 'openContract',\n    });\n\n/* The watchScope function is called randomly and resets the prevTick\n * which leads to the same problem we try to solve. So prevTick is isolated\n */\nlet prevTick;\nconst watchScope = ({ store, stopScope, passScope, passFlag }) => {\n    // in case watch is called after stop is fired\n    if (store.getState().scope === stopScope) {\n        return Promise.resolve(false);\n    }\n    return new Promise(resolve => {\n        const unsubscribe = store.subscribe(() => {\n            const newState = store.getState();\n\n            if (newState.newTick === prevTick) return;\n            prevTick = newState.newTick;\n\n            if (newState.scope === passScope && newState[passFlag]) {\n                unsubscribe();\n                resolve(true);\n            }\n\n            if (newState.scope === stopScope) {\n                unsubscribe();\n                resolve(false);\n            }\n        });\n    });\n};\n\nexport default class TradeEngine extends Balance(Purchase(Sell(OpenContract(Proposal(Ticks(Total(class {}))))))) {\n    constructor($scope) {\n        super();\n        this.observer = $scope.observer;\n        this.$scope = $scope;\n        this.observe();\n        this.data = {\n            contract: {},\n            proposals: [],\n        };\n        this.subscription_id_for_accumulators = null;\n        this.is_proposal_requested_for_accumulators = false;\n        this.store = createStore(rootReducer, applyMiddleware(thunk));\n    }\n\n    init(...args) {\n        const [token, options] = expectInitArg(args);\n        const { symbol } = options;\n\n        this.initArgs = args;\n        this.options = options;\n        this.startPromise = this.loginAndGetBalance(token);\n\n        if (!this.checkTicksPromiseExists()) this.watchTicks(symbol);\n    }\n\n    start(tradeOptions) {\n        if (!this.options) {\n            throw createError('NotInitialized', localize('Bot.init is not called'));\n        }\n\n        globalObserver.emit('bot.running');\n\n        const validated_trade_options = this.validateTradeOptions(tradeOptions);\n\n        this.tradeOptions = { ...validated_trade_options, symbol: this.options.symbol };\n        this.store.dispatch(start());\n        this.checkLimits(validated_trade_options);\n\n        this.makeDirectPurchaseDecision();\n    }\n\n    loginAndGetBalance(token) {\n        if (this.token === token) {\n            return Promise.resolve();\n        }\n        // for strategies using total runs, GetTotalRuns function is trying to get loginid and it gets called before Proposals calls.\n        // the below required loginid to be set in Proposal calls where loginAndGetBalance gets resolved.\n        // Earlier this used to happen as soon as we get ticks_history response and by the time GetTotalRuns gets called we have required info.\n        this.accountInfo = api_base.account_info;\n        this.token = api_base.token;\n        return new Promise(resolve => {\n            // Try to recover from a situation where API doesn't give us a correct response on\n            // \"proposal_open_contract\" which would make the bot run forever. When there's a \"sell\"\n            // event, wait a couple seconds for the API to give us the correct \"proposal_open_contract\"\n            // response, if there's none after x seconds. Send an explicit request, which _should_\n            // solve the issue. This is a backup!\n            const subscription = api_base.api.onMessage().subscribe(({ data }) => {\n                if (data.msg_type === 'transaction' && data.transaction.action === 'sell') {\n                    this.transaction_recovery_timeout = setTimeout(() => {\n                        const { contract } = this.data;\n                        const is_same_contract = contract.contract_id === data.transaction.contract_id;\n                        const is_open_contract = contract.status === 'open';\n                        if (is_same_contract && is_open_contract) {\n                            doUntilDone(() => {\n                                api_base.api.send({ proposal_open_contract: 1, contract_id: contract.contract_id });\n                            }, ['PriceMoved']);\n                        }\n                    }, 1500);\n                }\n                resolve();\n            });\n            api_base.pushSubscription(subscription);\n        });\n    }\n\n    observe() {\n        this.observeOpenContract();\n        this.observeBalance();\n        this.observeProposals();\n    }\n\n    watch(watchName) {\n        if (watchName === 'before') {\n            return watchBefore(this.store);\n        }\n        return watchDuring(this.store);\n    }\n\n    makeDirectPurchaseDecision() {\n        const { has_payout_block, is_basis_payout } = checkBlocksForProposalRequest();\n        this.is_proposal_subscription_required = has_payout_block || is_basis_payout;\n\n        if (this.is_proposal_subscription_required) {\n            this.makeProposals({ ...this.options, ...this.tradeOptions });\n            this.checkProposalReady();\n        } else {\n            this.store.dispatch(proposalsReady());\n        }\n    }\n}\n","import { DURING_PURCHASE } from './state/constants';\nimport { contractStatus, log } from '../utils/broadcast';\nimport { recoverFromError, doUntilDone } from '../utils/helpers';\nimport { LogTypes } from '../../../constants/messages';\nimport { observer as globalObserver } from '../../../utils/observer';\nimport { api_base } from '../../api/api-base';\n\nexport default Engine =>\n    class Sell extends Engine {\n        isSellAtMarketAvailable() {\n            return this.contractId && !this.isSold && this.isSellAvailable && !this.isExpired;\n        }\n\n        sellAtMarket() {\n            globalObserver.emit('bot.sell');\n\n            // Prevent calling sell twice\n            if (this.store.getState().scope !== DURING_PURCHASE) {\n                return Promise.resolve();\n            }\n\n            if (!this.isSellAtMarketAvailable()) {\n                log(LogTypes.NOT_OFFERED);\n                return Promise.resolve();\n            }\n\n            let delay_index = 1;\n\n            return new Promise(resolve => {\n                const onContractSold = sell_response => {\n                    delay_index = 1;\n\n                    if (sell_response) {\n                        const { sold_for } = sell_response.sell;\n                        log(LogTypes.SELL, { sold_for });\n                    }\n\n                    contractStatus('purchase.sold');\n                    this.waitForAfter();\n                    resolve();\n                };\n\n                const contract_id = this.contractId;\n\n                const sellContractAndGetContractInfo = () => {\n                    return doUntilDone(() => api_base.api.send({ sell: contract_id, price: 0 }))\n                        .then(sell_response => {\n                            doUntilDone(() => api_base.api.send({ proposal_open_contract: 1, contract_id })).then(\n                                () => sell_response\n                            );\n                        })\n                        .catch(e => {\n                            const error = e.error;\n                            if (error.code === 'InvalidOfferings') {\n                                // \"InvalidOfferings\" may occur when user tries to sell the contract too close\n                                // to the expiry time. We shouldn't interrupt the bot but instead let the contract\n                                // finish.\n                                return Promise.resolve();\n                            }\n\n                            const sell_error = {\n                                name: error.code,\n                                message: error.message,\n                                msg_type: e.msg_type,\n                                error: { ...error.error },\n                            };\n\n                            if (error.code === 'RateLimit') {\n                                return Promise.reject(sell_error);\n                            }\n\n                            // For every other error, check whether the contract is not actually already sold.\n                            return doUntilDone(() =>\n                                api_base.api.send({\n                                    proposal_open_contract: 1,\n                                    contract_id,\n                                })\n                            ).then(proposal_open_contract_response => {\n                                const { proposal_open_contract } = proposal_open_contract_response;\n\n                                if (!proposal_open_contract.is_sold) {\n                                    return Promise.reject(sell_error);\n                                }\n\n                                // If the contract is sold at this point it means there was a race condition.\n                                // Pretend this sell request was successful and mislead the trade engine into\n                                // moving onto the next scope.\n                                return Promise.resolve({\n                                    sell: {\n                                        sold_for: proposal_open_contract.sell_price,\n                                    },\n                                });\n                            });\n                        });\n                };\n\n                const errors_to_ignore = ['NoOpenPosition', 'InvalidSellContractProposal', 'UnrecognisedRequest'];\n\n                // Restart buy/sell on error is enabled, don't recover from sell error.\n                if (!this.options.timeMachineEnabled) {\n                    return doUntilDone(sellContractAndGetContractInfo, errors_to_ignore)\n                        .then(sell_response => onContractSold(sell_response))\n                        .catch(error => error);\n                }\n\n                // If above checkbox not checked, try to recover from sell error.\n                const recoverFn = (error_code, makeDelay) => {\n                    return makeDelay().then(() => this.observer.emit('REVERT', 'during'));\n                };\n                return recoverFromError(\n                    sellContractAndGetContractInfo,\n                    recoverFn,\n                    errors_to_ignore,\n                    delay_index++\n                ).then(sell_response => onContractSold(sell_response));\n            });\n        }\n    };\n","import { getRoundedNumber } from '@deriv/shared';\nimport { sell, openContractReceived } from './state/actions';\nimport { contractStatus, contract as broadcastContract } from '../utils/broadcast';\nimport { api_base } from '../../api/api-base';\n\nexport default Engine =>\n    class OpenContract extends Engine {\n        observeOpenContract() {\n            if (!api_base.api) return;\n            const subscription = api_base.api.onMessage().subscribe(({ data }) => {\n                if (data.msg_type === 'proposal_open_contract') {\n                    const contract = data.proposal_open_contract;\n\n                    if (!contract || !this.expectedContractId(contract?.contract_id)) {\n                        return;\n                    }\n\n                    this.setContractFlags(contract);\n\n                    this.data.contract = contract;\n\n                    broadcastContract({ accountID: api_base.account_info.loginid, ...contract });\n\n                    if (this.isSold) {\n                        this.contractId = '';\n                        clearTimeout(this.transaction_recovery_timeout);\n                        this.updateTotals(contract);\n                        contractStatus({\n                            id: 'contract.sold',\n                            data: contract.transaction_ids.sell,\n                            contract,\n                        });\n\n                        if (this.afterPromise) {\n                            this.afterPromise();\n                        }\n\n                        this.store.dispatch(sell());\n                    } else {\n                        this.store.dispatch(openContractReceived());\n                    }\n                }\n            });\n            api_base.pushSubscription(subscription);\n        }\n\n        waitForAfter() {\n            return new Promise(resolve => {\n                this.afterPromise = resolve;\n            });\n        }\n\n        setContractFlags(contract) {\n            const { is_expired, is_valid_to_sell, is_sold, entry_tick } = contract;\n\n            this.isSold = Boolean(is_sold);\n            this.isSellAvailable = !this.isSold && Boolean(is_valid_to_sell);\n            this.isExpired = Boolean(is_expired);\n            this.hasEntryTick = Boolean(entry_tick);\n        }\n\n        expectedContractId(contractId) {\n            return this.contractId && contractId === this.contractId;\n        }\n\n        getSellPrice() {\n            const { bid_price: bidPrice, buy_price: buyPrice, currency } = this.data.contract;\n            return getRoundedNumber(Number(bidPrice) - Number(buyPrice), currency);\n        }\n    };\n","import { localize } from '@deriv/translations';\nimport { proposalsReady, clearProposals } from './state/actions';\nimport { tradeOptionToProposal, doUntilDone } from '../utils/helpers';\nimport { api_base } from '../../api/api-base';\n\nexport default Engine =>\n    class Proposal extends Engine {\n        makeProposals(trade_option) {\n            if (!this.isNewTradeOption(trade_option)) {\n                return;\n            }\n\n            // Generate a purchase reference when trade options are different from previous trade options.\n            // This will ensure the bot doesn't mistakenly purchase the wrong proposal.\n            this.regeneratePurchaseReference();\n            this.trade_option = trade_option;\n            this.proposal_templates = tradeOptionToProposal(trade_option, this.getPurchaseReference());\n            this.renewProposalsOnPurchase();\n        }\n\n        selectProposal(contract_type) {\n            const { proposals } = this.data;\n\n            if (proposals.length === 0) {\n                throw Error(localize('Proposals are not ready'));\n            }\n\n            const to_buy = proposals.find(proposal => {\n                if (\n                    proposal.contract_type === contract_type &&\n                    proposal.purchase_reference === this.getPurchaseReference()\n                ) {\n                    // Below happens when a user has had one of the proposals return\n                    // with a ContractBuyValidationError. We allow the logic to continue\n                    // to here cause the opposite proposal may still be valid. Only once\n                    // they attempt to purchase the errored proposal we will intervene.\n                    if (proposal.error) {\n                        throw proposal.error;\n                    }\n\n                    return proposal;\n                }\n\n                return false;\n            });\n\n            if (!to_buy) {\n                throw new Error(localize('Selected proposal does not exist'));\n            }\n\n            return {\n                id: to_buy.id,\n                askPrice: to_buy.ask_price,\n            };\n        }\n\n        renewProposalsOnPurchase() {\n            this.data.proposals = [];\n            this.store.dispatch(clearProposals());\n            this.requestProposals();\n        }\n\n        requestProposals() {\n            // Since there are two proposals (in most cases), an error may be logged twice, to avoid this\n            // flip this boolean on error.\n            let has_informed_error = false;\n\n            Promise.all(\n                this.proposal_templates.map(proposal => {\n                    doUntilDone(() => api_base.api.send(proposal)).catch(error => {\n                        // We intercept ContractBuyValidationError as user may have specified\n                        // e.g. a DIGITUNDER 0 or DIGITOVER 9, while one proposal may be invalid\n                        // the other is valid. We will error on Purchase rather than here.\n\n                        if (error.error.code === 'ContractBuyValidationError') {\n                            this.data.proposals.push({\n                                ...error.error.echo_req,\n                                ...error.echo_req.passthrough,\n                                error,\n                            });\n\n                            return null;\n                        }\n                        if (!has_informed_error) {\n                            has_informed_error = true;\n                            this.$scope.observer.emit('Error', error.error);\n                        }\n                        return null;\n                    });\n                })\n            );\n        }\n\n        observeProposals() {\n            if (!api_base.api) return;\n            const subscription = api_base.api.onMessage().subscribe(response => {\n                if (response.data.msg_type === 'proposal') {\n                    const { passthrough, proposal } = response.data;\n                    if (proposal && this.data.proposals.findIndex(p => p.id === proposal.id) === -1) {\n                        // Add proposals based on the ID returned by the API.\n                        this.data.proposals.push({ ...proposal, ...passthrough });\n                        this.checkProposalReady();\n                    }\n                }\n            });\n            api_base.pushSubscription(subscription);\n        }\n\n        checkProposalReady() {\n            // Proposals are considered ready when the proposals in our memory match the ones\n            // we've requested from the API, we determine this by checking the passthrough of the response.\n            const { proposals } = this.data;\n\n            if (proposals.length > 0 && this.proposal_templates) {\n                const has_equal_proposals = this.proposal_templates.every(template => {\n                    return (\n                        proposals.findIndex(proposal => {\n                            return (\n                                proposal.purchase_reference === template.passthrough.purchase_reference &&\n                                proposal.contract_type === template.contract_type\n                            );\n                        }) !== -1\n                    );\n                });\n\n                if (has_equal_proposals) {\n                    this.startPromise.then(() => this.store.dispatch(proposalsReady()));\n                }\n            }\n        }\n\n        isNewTradeOption(trade_option) {\n            if (!this.trade_option) {\n                this.trade_option = trade_option;\n                return true;\n            }\n\n            // Compare incoming \"trade_option\" argument with \"this.trade_option\", if any\n            // of the values is different, this is a new tradeOption and new proposals\n            // should be generated.\n            return [\n                'amount',\n                'barrierOffset',\n                'basis',\n                'duration',\n                'duration_unit',\n                'prediction',\n                'secondBarrierOffset',\n                'symbol',\n            ].some(value => this.trade_option[value] !== trade_option[value]);\n        }\n    };\n","import getToolsInterface from './ToolsInterface';\nimport getTicksInterface from './TicksInterface';\nimport getBotInterface from './BotInterface';\nimport TradeEngine from '../trade';\n\nconst sleep = (observer, arg = 1) => {\n    return new Promise(\n        r =>\n            setTimeout(() => {\n                r();\n                setTimeout(() => observer.emit('CONTINUE'), 0);\n            }, arg * 1000),\n        () => {}\n    );\n};\n\nconst Interface = $scope => {\n    const tradeEngine = new TradeEngine($scope);\n    const { observer } = $scope;\n    const getInterface = () => {\n        return {\n            ...getBotInterface(tradeEngine),\n            ...getToolsInterface(tradeEngine),\n            getTicksInterface: getTicksInterface(tradeEngine),\n            watch: (...args) => tradeEngine.watch(...args),\n            sleep: (...args) => sleep(observer, ...args),\n            alert: (...args) => alert(...args), // eslint-disable-line no-alert\n            prompt: (...args) => prompt(...args), // eslint-disable-line no-alert\n            console: {\n                log(...args) {\n                    // eslint-disable-next-line no-console\n                    console.log(new Date().toLocaleTimeString(), ...args);\n                },\n            },\n        };\n    };\n    return { tradeEngine, observer, getInterface };\n};\n\nexport default Interface;\n","import { cloneThorough, isMultiplierContract } from '@deriv/shared';\nimport JSInterpreter from '@deriv/js-interpreter';\nimport { createScope } from './cliTools';\nimport Interface from '../Interface';\nimport { unrecoverable_errors } from '../../../constants/messages';\nimport { observer as globalObserver } from '../../../utils/observer';\nimport { api_base } from '../../api/api-base';\n\nJSInterpreter.prototype.takeStateSnapshot = function () {\n    const newStateStack = cloneThorough(this.stateStack, undefined, undefined, undefined, true);\n    return newStateStack;\n};\n\nJSInterpreter.prototype.restoreStateSnapshot = function (snapshot) {\n    this.stateStack = cloneThorough(snapshot, undefined, undefined, undefined, true);\n    this.global = this.stateStack[0].scope.object || this.stateStack[0].scope;\n    this.initFunc_(this, this.global);\n};\n\nconst botInitialized = bot => bot && bot.tradeEngine.options;\nconst botStarted = bot => botInitialized(bot) && bot.tradeEngine.tradeOptions;\nconst shouldRestartOnError = (bot, errorName = '') =>\n    !unrecoverable_errors.includes(errorName) && botInitialized(bot) && bot.tradeEngine.options.shouldRestartOnError;\n\nconst shouldStopOnError = (bot, errorName = '') => {\n    const stopErrors = ['SellNotAvailableCustom', 'ContractCreationFailure', 'InvalidtoBuy'];\n    if (stopErrors.includes(errorName) && botInitialized(bot)) {\n        return true;\n    }\n    return false;\n};\n\nconst timeMachineEnabled = bot => botInitialized(bot) && bot.tradeEngine.options.timeMachineEnabled;\n\n// TODO chek beforState & duringState & startState\nconst Interpreter = () => {\n    let $scope = createScope();\n    let bot = Interface($scope);\n    let interpreter = {};\n    let onFinish;\n\n    $scope.observer.register('REVERT', watchName =>\n        revert(watchName === 'before' ? $scope.beforeState : $scope.duringState)\n    );\n\n    function init() {\n        $scope = createScope();\n        bot = Interface($scope);\n        interpreter = {};\n        onFinish = () => {};\n    }\n\n    function revert(state) {\n        interpreter.restoreStateSnapshot(state);\n        interpreter.paused_ = false;\n        loop();\n    }\n\n    function loop() {\n        if ($scope.stopped || !interpreter.run()) {\n            onFinish(interpreter.pseudoToNative(interpreter.value));\n        }\n    }\n\n    function createAsync(js_interpreter, func) {\n        const asyncFunc = (...args) => {\n            const callback = args.pop();\n\n            // Workaround for unknown number of args\n            const reversed_args = args.slice().reverse();\n            const first_defined_arg_idx = reversed_args.findIndex(arg => arg !== undefined);\n\n            // Remove extra undefined args from end of the args\n            const function_args = first_defined_arg_idx < 0 ? [] : reversed_args.slice(first_defined_arg_idx).reverse();\n            // End of workaround\n\n            func(...function_args.map(arg => js_interpreter.pseudoToNative(arg)))\n                .then(rv => {\n                    callback(js_interpreter.nativeToPseudo(rv));\n                    loop();\n                })\n                .catch(e => {\n                    // e.error for errors get from API, e for code errors\n                    $scope.observer.emit('Error', e.error || e);\n                });\n        };\n\n        // TODO: This is a workaround, create issue on original repo, once fixed\n        // remove this. We don't know how many args are going to be passed, so we\n        // assume a max of 100.\n        const MAX_ACCEPTABLE_FUNC_ARGS = 100;\n        Object.defineProperty(asyncFunc, 'length', { value: MAX_ACCEPTABLE_FUNC_ARGS + 1 });\n        return js_interpreter.createAsyncFunction(asyncFunc);\n    }\n\n    function initFunc(js_interpreter, scope) {\n        const bot_interface = bot.getInterface();\n        const { getTicksInterface, alert, prompt, sleep, console: custom_console } = bot_interface;\n        const ticks_interface = getTicksInterface;\n\n        js_interpreter.setProperty(scope, 'console', js_interpreter.nativeToPseudo(custom_console));\n        js_interpreter.setProperty(scope, 'alert', js_interpreter.nativeToPseudo(alert));\n        js_interpreter.setProperty(scope, 'prompt', js_interpreter.nativeToPseudo(prompt));\n        js_interpreter.setProperty(\n            scope,\n            'getPurchaseReference',\n            js_interpreter.nativeToPseudo(bot_interface.getPurchaseReference)\n        );\n\n        const pseudo_bot_interface = js_interpreter.nativeToPseudo(bot_interface);\n\n        Object.entries(ticks_interface).forEach(([name, f]) =>\n            js_interpreter.setProperty(pseudo_bot_interface, name, createAsync(js_interpreter, f))\n        );\n\n        js_interpreter.setProperty(\n            pseudo_bot_interface,\n            'start',\n            js_interpreter.nativeToPseudo((...args) => {\n                const { start } = bot_interface;\n                if (shouldRestartOnError(bot)) {\n                    $scope.startState = js_interpreter.takeStateSnapshot();\n                }\n                start(...args);\n            })\n        );\n\n        js_interpreter.setProperty(\n            pseudo_bot_interface,\n            'purchase',\n            createAsync(js_interpreter, bot_interface.purchase)\n        );\n        js_interpreter.setProperty(\n            pseudo_bot_interface,\n            'sellAtMarket',\n            createAsync(js_interpreter, bot_interface.sellAtMarket)\n        );\n        js_interpreter.setProperty(scope, 'Bot', pseudo_bot_interface);\n        js_interpreter.setProperty(\n            scope,\n            'watch',\n            createAsync(js_interpreter, watchName => {\n                const { watch } = bot.getInterface();\n\n                if (timeMachineEnabled(bot)) {\n                    const snapshot = interpreter.takeStateSnapshot();\n                    if (watchName === 'before') {\n                        $scope.beforeState = snapshot;\n                    } else {\n                        $scope.duringState = snapshot;\n                    }\n                }\n\n                return watch(watchName);\n            })\n        );\n\n        js_interpreter.setProperty(scope, 'sleep', createAsync(js_interpreter, sleep));\n    }\n\n    async function stop() {\n        return new Promise((resolve, reject) => {\n            try {\n                const global_timeouts = globalObserver.getState('global_timeouts') ?? [];\n                const is_timeouts_cancellable = Object.keys(global_timeouts).every(\n                    timeout => global_timeouts[timeout].is_cancellable\n                );\n\n                if (!bot.tradeEngine.contractId && is_timeouts_cancellable) {\n                    api_base.is_stopping = true;\n                    // When user is rate limited, allow them to stop the bot immediately\n                    // granted there is no active contract.\n                    global_timeouts.forEach(timeout => clearTimeout(global_timeouts[timeout]));\n                    terminateSession().then(() => {\n                        api_base.is_stopping = false;\n                        resolve();\n                    });\n                } else if (\n                    bot.tradeEngine.isSold === false &&\n                    !$scope.is_error_triggered &&\n                    isMultiplierContract(bot?.tradeEngine?.data?.contract?.contract_type ?? '')\n                ) {\n                    globalObserver.register('contract.status', async contractStatus => {\n                        if (contractStatus.id === 'contract.sold') {\n                            terminateSession().then(() => resolve());\n                        }\n                    });\n                } else {\n                    api_base.is_stopping = true;\n                    terminateSession().then(() => {\n                        api_base.is_stopping = false;\n                        resolve();\n                    });\n                }\n            } catch (e) {\n                reject(e);\n            }\n        });\n    }\n\n    async function terminateSession() {\n        return new Promise((resolve, reject) => {\n            try {\n                $scope.stopped = true;\n                $scope.is_error_triggered = false;\n                globalObserver.emit('bot.stop');\n                const { ticksService } = $scope;\n                // Unsubscribe previous ticks_history subscription\n                // Unsubscribe the subscriptions from Proposal, Balance and OpenContract\n                api_base.clearSubscriptions();\n\n                ticksService.unsubscribeFromTicksService().then(() => {\n                    resolve();\n                });\n            } catch (error) {\n                reject(error);\n            }\n        });\n    }\n\n    async function unsubscribeFromTicksService() {\n        const { ticksService } = $scope;\n        return new Promise((resolve, reject) => {\n            try {\n                ticksService.unsubscribeFromTicksService().then(() => {\n                    resolve();\n                });\n            } catch (e) {\n                reject(e);\n            }\n        });\n    }\n\n    function run(code) {\n        return new Promise((resolve, reject) => {\n            const onError = e => {\n                if ($scope.stopped) {\n                    return;\n                }\n                // DBot handles 'InvalidToken' internally\n                if (e.code === 'InvalidToken') {\n                    globalObserver.emit('client.invalid_token');\n                    return;\n                }\n                if (shouldStopOnError(bot, e?.code)) {\n                    globalObserver.emit('ui.log.error', e.message);\n                    globalObserver.emit('bot.click_stop');\n                    return;\n                }\n\n                $scope.is_error_triggered = true;\n                if (!shouldRestartOnError(bot, e.code) || !botStarted(bot)) {\n                    reject(e);\n                    return;\n                }\n\n                globalObserver.emit('Error', e);\n                const { initArgs, tradeOptions } = bot.tradeEngine;\n                terminateSession();\n                init();\n                $scope.observer.register('Error', onError);\n                bot.tradeEngine.init(...initArgs);\n                bot.tradeEngine.start(tradeOptions);\n                revert($scope.startState);\n            };\n\n            $scope.observer.register('Error', onError);\n\n            interpreter = new JSInterpreter(code, initFunc);\n            onFinish = resolve;\n\n            loop();\n        });\n    }\n\n    return { stop, run, terminateSession, bot, unsubscribeFromTicksService };\n};\nexport default Interpreter;\n\nexport const createInterpreter = () => new Interpreter();\n","const goog = {};\n\ngoog.inherits = function (childCtor, parentCtor) {\n    function tempCtor() {}\n    tempCtor.prototype = parentCtor.prototype;\n    childCtor.superClass_ = parentCtor.prototype;\n    // eslint-disable-next-line new-cap\n    childCtor.prototype = new tempCtor();\n    childCtor.prototype.constructor = childCtor;\n\n    childCtor.base = function (me, methodName, ...args) {\n        return parentCtor.prototype[methodName].apply(me, args);\n    };\n};\n\ngoog.math = {};\n\ngoog.isDef = function (e) {\n    return e !== undefined;\n};\n\ngoog.math.Size = function (e, t) {\n    this.width = e;\n    this.height = t;\n};\n\ngoog.isNumber = function (e) {\n    return /^\\s*-?\\d+(\\.\\d+)?\\s*$/.test(e);\n};\n\ngoog.dom = {};\n\ngoog.dom.removeNode = function (node) {\n    if (node && node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n};\n\ngoog.math.Coordinate = function (e, t) {\n    this.x = goog.isDef(e) ? e : 0;\n    this.y = goog.isDef(t) ? t : 0;\n};\n\ngoog.math.Coordinate.prototype.scale = function (e, t) {\n    // eslint-disable-next-line no-param-reassign\n    t = goog.isNumber(t) ? t : e;\n    this.x *= e;\n    this.y *= t;\n    return this;\n};\n\ngoog.math.Coordinate.difference = function (coord1, coord2) {\n    return new goog.math.Coordinate(coord1.x - coord2.x, coord1.y - coord2.y);\n};\n\nexport default goog;\n","import goog from './goog.js';\nimport * as BlocklyJavaScript from 'blockly/javascript';\nimport { setColors } from './hooks/colours.js';\nimport { localize } from '@deriv/translations';\n\nwindow.goog = goog;\n\nconst modifyBlocklyWorkSpaceContextMenu = () => {\n    const exclude_item = ['blockInline'];\n    exclude_item.forEach(item_id => {\n        const option = Blockly.ContextMenuRegistry.registry.getItem(item_id);\n        option.preconditionFn = () => 'hidden';\n    });\n\n    const items_to_localize = {\n        undoWorkspace: localize('Undo'),\n        redoWorkspace: localize('Redo'),\n        cleanWorkspace: localize('Clean up Blocks'),\n        collapseWorkspace: localize('Collapse Blocks'),\n        expandWorkspace: localize('Expand Blocks'),\n        workspaceDelete: localize('Delete All Blocks'),\n    };\n\n    Object.keys(items_to_localize).forEach(item_id => {\n        const option = Blockly.ContextMenuRegistry.registry.getItem(item_id);\n        option.displayText = localize(items_to_localize[item_id]);\n    });\n};\n\nexport const loadBlockly = async () => {\n    const BlocklyModule = await import('blockly');\n    window.Blockly = BlocklyModule.default;\n    window.Blockly.Colours = {};\n    const BlocklyGenerator = new Blockly.Generator('code');\n    const BlocklyJavaScriptGenerator = {\n        ...BlocklyJavaScript,\n        ...BlocklyGenerator,\n    };\n    window.Blockly.JavaScript = BlocklyJavaScriptGenerator;\n    window.Blockly.Themes.zelos_renderer = Blockly.Theme.defineTheme('zelos_renderer', {\n        base: Blockly.Themes.Zelos,\n        componentStyles: {},\n    });\n    modifyBlocklyWorkSpaceContextMenu();\n    setColors();\n    await import('./hooks');\n    await import('./blocks');\n};\n","import { save_types } from '../constants';\nimport { config } from '../constants/config';\nimport { api_base } from '../services/api/api-base';\nimport ApiHelpers from '../services/api/api-helpers';\nimport Interpreter from '../services/tradeEngine/utils/interpreter';\nimport { compareXml, observer as globalObserver } from '../utils';\nimport { getSavedWorkspaces, saveWorkspaceToRecent } from '../utils/local-storage';\nimport { isDbotRTL } from '../utils/workspace';\n\nimport main_xml from './xml/main.xml';\nimport DBotStore from './dbot-store';\nimport { isAllRequiredBlocksEnabled, updateDisabledBlocks, validateErrorOnBlockDelete } from './utils';\n\nimport { loadBlockly } from './blockly';\nimport { forgetAccumulatorsProposalRequest } from './accumulators-proposal-handler';\n\nclass DBot {\n    constructor() {\n        this.interpreter = null;\n        this.workspace = null;\n        this.before_run_funcs = [];\n        this.symbol = null;\n        this.is_bot_running = false;\n    }\n\n    /**\n     * Initialises the workspace and mounts it to a container element (app_contents).\n     */\n    async initWorkspace(public_path, store, api_helpers_store, is_mobile, is_dark_mode) {\n        await loadBlockly(is_dark_mode);\n        const recent_files = await getSavedWorkspaces();\n        api_base.init();\n        this.interpreter = Interpreter();\n        const that = this;\n        Blockly.Blocks.trade_definition_tradetype.onchange = function (event) {\n            if (!this.workspace || Blockly.derivWorkspace.isFlyoutVisible || this.workspace.isDragging()) {\n                return;\n            }\n\n            this.enforceLimitations();\n\n            const { name, type } = event;\n\n            if (type === Blockly.Events.BLOCK_CHANGE) {\n                const is_symbol_list_change = name === 'SYMBOL_LIST';\n                const is_trade_type_cat_list_change = name === 'TRADETYPECAT_LIST';\n\n                if (is_symbol_list_change || is_trade_type_cat_list_change) {\n                    const { contracts_for } = ApiHelpers.instance;\n                    const top_parent_block = this.getTopParent();\n                    const market_block = top_parent_block.getChildByType('trade_definition_market');\n                    const market = market_block.getFieldValue('MARKET_LIST');\n                    const submarket = market_block.getFieldValue('SUBMARKET_LIST');\n                    const symbol = market_block.getFieldValue('SYMBOL_LIST');\n                    const category = this.getFieldValue('TRADETYPECAT_LIST');\n                    const trade_type = this.getFieldValue('TRADETYPE_LIST');\n                    const is_trade_type_accumulator = trade_type === 'accumulator';\n                    if (!is_trade_type_accumulator) forgetAccumulatorsProposalRequest(that);\n\n                    if (is_symbol_list_change) {\n                        contracts_for.getTradeTypeCategories(market, submarket, symbol).then(categories => {\n                            const category_field = this.getField('TRADETYPECAT_LIST');\n                            if (category_field) {\n                                category_field.updateOptions(categories, {\n                                    default_value: category,\n                                    should_pretend_empty: true,\n                                    event_group: event.group,\n                                });\n                            }\n                        });\n                        that.symbol = symbol;\n                        if (\n                            !that.is_bot_running &&\n                            that.interpreter &&\n                            !this.workspace.options.readOnly &&\n                            symbol !== that.interpreter.bot.tradeEngine.symbol\n                        ) {\n                            const run_button = document.querySelector('#db-animation__run-button');\n                            if (run_button) run_button.disabled = true;\n\n                            that.interpreter.unsubscribeFromTicksService().then(async () => {\n                                await that.interpreter?.bot.tradeEngine.watchTicks(symbol);\n                            });\n                        }\n                    } else if (is_trade_type_cat_list_change && event.blockId === this.id) {\n                        contracts_for.getTradeTypes(market, submarket, symbol, category).then(trade_types => {\n                            const trade_type_field = this.getField('TRADETYPE_LIST');\n                            trade_type_field.updateOptions(trade_types, {\n                                default_value: trade_type,\n                                should_pretend_empty: true,\n                                event_group: event.group,\n                            });\n                        });\n                    }\n                }\n            }\n        };\n\n        return new Promise((resolve, reject) => {\n            __webpack_public_path__ = public_path; // eslint-disable-line no-global-assign\n            ApiHelpers.setInstance(api_helpers_store);\n            DBotStore.setInstance(store);\n            const window_width = window.innerWidth;\n            try {\n                let workspaceScale = 0.7;\n\n                const { handleFileChange } = DBotStore.instance;\n                if (window_width < 1640) {\n                    if (is_mobile) {\n                        workspaceScale = 0.6;\n                    } else {\n                        const scratch_div_width = document.getElementById('scratch_div')?.offsetWidth;\n                        const zoom_scale = scratch_div_width / window_width / 1.5;\n                        workspaceScale = zoom_scale;\n                    }\n                }\n                const el_scratch_div = document.getElementById('scratch_div');\n                if (!el_scratch_div) {\n                    return;\n                }\n\n                this.workspace = Blockly.inject(el_scratch_div, {\n                    media: `${__webpack_public_path__}media/`,\n                    renderer: 'zelos',\n                    trashcan: !is_mobile,\n                    zoom: { wheel: true, startScale: workspaceScale },\n                    scrollbars: true,\n                    theme: Blockly.Themes.zelos_renderer,\n                });\n\n                this.workspace.RTL = isDbotRTL();\n\n                this.workspace.cached_xml = { main: main_xml };\n\n                this.workspace.addChangeListener(this.valueInputLimitationsListener.bind(this));\n                this.workspace.addChangeListener(event => updateDisabledBlocks(this.workspace, event));\n                this.workspace.addChangeListener(event => this.workspace.dispatchBlockEventEffects(event));\n                this.workspace.addChangeListener(event => {\n                    if (event.type === 'drag' && !event.isStart && !is_mobile) validateErrorOnBlockDelete();\n                    if (event.type == Blockly.Events.BLOCK_CHANGE) {\n                        const block = this.workspace.getBlockById(event.blockId);\n                        if (is_mobile && block && event.element == 'collapsed') {\n                            block.contextMenu = false;\n                        }\n                    }\n                });\n\n                Blockly.derivWorkspace = this.workspace;\n\n                const varDB = new Blockly.Names('window');\n                varDB.variableMap = Blockly.derivWorkspace.getVariableMap();\n\n                Blockly.JavaScript.variableDB_ = varDB;\n\n                this.addBeforeRunFunction(this.unselectBlocks.bind(this));\n                this.addBeforeRunFunction(this.disableStrayBlocks.bind(this));\n                this.addBeforeRunFunction(this.checkForErroredBlocks.bind(this));\n                this.addBeforeRunFunction(this.checkForRequiredBlocks.bind(this));\n\n                // Push main.xml to workspace and reset the undo stack.\n                this.workspace.current_strategy_id = Blockly.utils.idGenerator.genUid();\n\n                Blockly.derivWorkspace.strategy_to_load = main_xml;\n                Blockly.getMainWorkspace().strategy_to_load = main_xml;\n                Blockly.getMainWorkspace().RTL = isDbotRTL();\n\n                let file_name = config.default_file_name;\n                if (recent_files && recent_files.length) {\n                    const latest_file = recent_files[0];\n                    Blockly.derivWorkspace.strategy_to_load = latest_file.xml;\n                    Blockly.getMainWorkspace().strategy_to_load = latest_file.xml;\n                    file_name = latest_file.name;\n                    Blockly.derivWorkspace.current_strategy_id = latest_file.id;\n                    Blockly.getMainWorkspace().current_strategy_id = latest_file.id;\n                }\n\n                const event_group = `dbot-load${Date.now()}`;\n                Blockly.Events.setGroup(event_group);\n                Blockly.Xml.domToWorkspace(\n                    Blockly.utils.xml.textToDom(Blockly.derivWorkspace.strategy_to_load),\n                    this.workspace\n                );\n                const { save_modal } = DBotStore.instance;\n\n                save_modal.updateBotName(file_name);\n                this.workspace.cleanUp(0, is_mobile ? 60 : 56);\n                this.workspace.clearUndo();\n\n                window.dispatchEvent(new Event('resize'));\n                window.addEventListener('dragover', DBot.handleDragOver);\n                window.addEventListener('drop', e => DBot.handleDropOver(e, handleFileChange));\n                // disable overflow\n                el_scratch_div.parentNode.style.overflow = 'hidden';\n                resolve();\n            } catch (error) {\n                // TODO: Handle error.\n                reject(error);\n                throw error;\n            }\n        });\n    }\n\n    /** Compare stored strategy xml with currently running xml */\n    isStrategyUpdated(current_xml_dom, recent_files) {\n        if (recent_files && recent_files.length) {\n            const stored_strategy = recent_files.filter(\n                strategy => strategy?.id === this.workspace?.current_strategy_id\n            )?.[0];\n            if (stored_strategy?.xml) {\n                const stored_strategy_xml = stored_strategy?.xml;\n                const current_xml = Blockly.Xml.domToText(current_xml_dom);\n                const is_same_strategy = compareXml(stored_strategy_xml, current_xml);\n                if (is_same_strategy) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n\n    /** Saves the current workspace to local storage\n     * and update saved status if strategy changes  */\n    async saveRecentWorkspace() {\n        const current_xml_dom = this?.workspace ? Blockly?.Xml?.workspaceToDom(this.workspace) : null;\n        try {\n            const recent_files = await getSavedWorkspaces();\n            if (current_xml_dom && this.isStrategyUpdated(current_xml_dom, recent_files)) {\n                await saveWorkspaceToRecent(current_xml_dom, save_types.UNSAVED);\n            }\n        } catch (error) {\n            globalObserver.emit('Error', error);\n            await saveWorkspaceToRecent(current_xml_dom, save_types.UNSAVED);\n        }\n    }\n\n    /**\n     * Allows you to add a function that needs to be executed before running the bot. Each\n     * function needs to return true in order for the bot to run.\n     * @param {Function} func Function to execute which returns true/false.\n     */\n    addBeforeRunFunction(func) {\n        this.before_run_funcs.push(func);\n    }\n\n    shouldRunBot() {\n        return this.before_run_funcs.every(func => !!func());\n    }\n\n    async initializeInterpreter() {\n        if (this.interpreter) {\n            await this.interpreter.terminateSession();\n        }\n        this.interpreter = Interpreter();\n    }\n    /**\n     * Runs the bot. Does a sanity check before attempting to generate the\n     * JavaScript code that's fed to the interpreter.\n     */\n    runBot() {\n        if (api_base.is_stopping) return;\n\n        try {\n            api_base.is_stopping = false;\n            const code = this.generateCode();\n\n            if (!this.interpreter.bot.tradeEngine.checkTicksPromiseExists()) this.interpreter = Interpreter();\n\n            this.is_bot_running = true;\n\n            api_base.setIsRunning(true);\n            this.interpreter.run(code).catch(error => {\n                globalObserver.emit('Error', error);\n                this.stopBot();\n            });\n        } catch (error) {\n            globalObserver.emit('Error', error);\n\n            if (this.interpreter) {\n                this.stopBot();\n            }\n        }\n    }\n\n    /**\n     * Generates the code that is passed to the interpreter.\n     * @param {Object} limitations Optional limitations (legacy argument)\n     */\n    generateCode(limitations = {}) {\n        return `\n            var BinaryBotPrivateInit;\n            var BinaryBotPrivateStart;\n            var BinaryBotPrivateBeforePurchase; \n            var BinaryBotPrivateDuringPurchase;\n            var BinaryBotPrivateAfterPurchase;\n            var BinaryBotPrivateLastTickTime;\n            var BinaryBotPrivateTickAnalysisList = [];\n            var BinaryBotPrivateHasCalledTradeOptions = false;\n\n           \n            function recursiveList(list, final_list){\n                for(var i=0; i < list.length; i++){\n                    if(typeof(list[i]) === 'object'){\n                        recursiveList(list[i], final_list);\n                    }\n                    if(typeof(list[i]) == 'number'){\n                        final_list.push(list[i]);   \n                                  \n                    }\n                }\n                return final_list;\n            }\n\n            function BinaryBotPrivateRun(f, arg) {\n                if (f) return f(arg);\n                return false;\n            }\n            function BinaryBotPrivateTickAnalysis() {\n                var currentTickTime = Bot.getLastTick(true);\n                while (currentTickTime === 'MarketIsClosed') {\n                    sleep(5);\n                    currentTickTime = Bot.getLastTick(true);\n                }\n                currentTickTime = currentTickTime.epoch;\n                if (currentTickTime === BinaryBotPrivateLastTickTime) {\n                    return;\n                }\n                BinaryBotPrivateLastTickTime = currentTickTime;\n                for (var BinaryBotPrivateI = 0; BinaryBotPrivateI < BinaryBotPrivateTickAnalysisList.length; BinaryBotPrivateI++) {\n                    BinaryBotPrivateRun(BinaryBotPrivateTickAnalysisList[BinaryBotPrivateI]);\n                }\n            }\n            var BinaryBotPrivateLimitations = ${JSON.stringify(limitations)};\n            ${Blockly.JavaScript.javascriptGenerator.workspaceToCode(this.workspace)}\n            BinaryBotPrivateRun(BinaryBotPrivateInit);\n            while (true) {\n                BinaryBotPrivateTickAnalysis();\n                BinaryBotPrivateRun(BinaryBotPrivateStart);\n                if (!BinaryBotPrivateHasCalledTradeOptions) {\n                    sleep(1);\n                    continue;\n                }\n                while (watch('before')) {\n                    BinaryBotPrivateTickAnalysis();\n                    BinaryBotPrivateRun(BinaryBotPrivateBeforePurchase);\n                }\n                while (watch('during')) {\n                    BinaryBotPrivateTickAnalysis();\n                    BinaryBotPrivateRun(BinaryBotPrivateDuringPurchase);\n                }\n                BinaryBotPrivateTickAnalysis();\n                if (!BinaryBotPrivateRun(BinaryBotPrivateAfterPurchase)) {\n                    break;\n                }\n            }\n            \n            `;\n    }\n\n    /**\n     * Instructs the interpreter to stop the bot. If there is an active trade\n     * that trade will be completed first to reflect correct contract status in UI.\n     */\n    async stopBot() {\n        if (api_base.is_stopping) return;\n\n        api_base.setIsRunning(false);\n\n        await this.interpreter.stop();\n        this.is_bot_running = false;\n        this.interpreter = null;\n        this.interpreter = Interpreter();\n        await this.interpreter.bot.tradeEngine.watchTicks(this.symbol);\n        forgetAccumulatorsProposalRequest(this);\n    }\n\n    /**\n     * Immediately instructs the interpreter to terminate the WS connection and bot.\n     */\n    async terminateBot() {\n        if (this.interpreter) {\n            await this.interpreter.terminateSession();\n            this.interpreter = null;\n            this.interpreter = Interpreter();\n            await this.interpreter.bot.tradeEngine.watchTicks(this.symbol);\n        }\n    }\n\n    terminateConnection = () => {\n        api_base.terminate();\n    };\n\n    /**\n     * Unselects any selected block before running the bot.\n     */\n    // eslint-disable-next-line class-methods-use-this\n    unselectBlocks() {\n        if (Blockly.getSelected()) {\n            Blockly.getSelected().unselect();\n        }\n        return true;\n    }\n\n    /**\n     * Disable blocks outside of any main or independent blocks.\n     */\n    disableStrayBlocks() {\n        const top_blocks = this.workspace.getTopBlocks();\n\n        top_blocks.forEach(block => {\n            if (!block.isMainBlock() && !block.isIndependentBlock()) {\n                this.disableBlocksRecursively(block);\n            }\n        });\n\n        return true;\n    }\n\n    /**\n     * Disable blocks and their optional children.\n     */\n    disableBlocksRecursively(block) {\n        block.setDisabled(true);\n        if (block?.outputConnection?.targetConnection) {\n            this.disableBlocksRecursively(block?.outputConnection?.sourceBlock_);\n        }\n    }\n\n    /**\n     * Check if there are any blocks highlighted for errors.\n     */\n    checkForErroredBlocks() {\n        // Force a check on value inputs.\n        this.valueInputLimitationsListener({}, true);\n\n        const all_blocks = this.workspace.getAllBlocks(true);\n        const error_blocks = all_blocks\n            .filter(block => block.is_error_highlighted && !block.disabled)\n            // filter out duplicated error message\n            .filter((block, index, self) => index === self.findIndex(b => b.error_message === block.error_message));\n\n        if (!error_blocks.length) {\n            return true;\n        }\n\n        this.workspace.centerOnBlock(error_blocks[0].id);\n        error_blocks.forEach(block => {\n            globalObserver.emit('ui.log.error', block.error_message);\n        });\n\n        return false;\n    }\n\n    centerAndHighlightBlock(block_id, should_animate = false) {\n        const block_to_highlight = this.workspace.getBlockById(block_id);\n\n        if (!block_to_highlight) {\n            return;\n        }\n\n        const all_blocks = this.workspace.getAllBlocks();\n\n        all_blocks.forEach(block => block.setErrorHighlighted(false));\n        if (should_animate) {\n            block_to_highlight.blink();\n        }\n        block_to_highlight.setErrorHighlighted(true);\n\n        this.workspace.centerOnBlock(block_to_highlight.id);\n    }\n\n    unHighlightAllBlocks() {\n        this.workspace?.getAllBlocks().forEach(block => block.setErrorHighlighted(false));\n    }\n\n    /**\n     * Checks whether the workspace contains all required blocks before running the strategy.\n     */\n    checkForRequiredBlocks() {\n        return isAllRequiredBlocksEnabled(this.workspace);\n    }\n\n    /**\n     * Checks all blocks in the workspace to see if they need to be highlighted\n     * in case one of their inputs is not populated, returns an empty value, or doesn't\n     * pass the custom validator.\n     * Note: The value passed to the custom validator is always a string value\n     * @param {Blockly.Event} event Workspace event\n     */\n    valueInputLimitationsListener(event, force_check = false) {\n        if (!force_check && (!this.workspace || this.workspace.isDragging())) {\n            return;\n        }\n\n        Blockly.JavaScript.javascriptGenerator.init(this.workspace);\n\n        if (force_check) {\n            Blockly.hideChaff(false);\n        }\n\n        const isGlobalEndDragEvent = () => event.type === Blockly.Events.BLOCK_DRAG && !event.isStart;\n        const isGlobalDeleteEvent = () => event.type === Blockly.Events.BLOCK_DELETE;\n        const isGlobalCreateEvent = () => event.type === Blockly.Events.BLOCK_CREATE;\n        const isClickEvent = () =>\n            event.type === Blockly.Events.UI && (event.element === 'click' || event.element === 'selected');\n        const isChangeEvent = b => event.type === Blockly.Events.BLOCK_CHANGE && event.blockId === b.id;\n        const isChangeInMyInputs = b => {\n            if (event.type === Blockly.Events.BLOCK_CHANGE) {\n                return b.inputList.some(input => {\n                    if (input.connection) {\n                        const target_block = input.connection.targetBlock();\n                        return target_block && event.blockId === target_block.id;\n                    }\n                    return false;\n                });\n            }\n            return false;\n        };\n        const isParentEnabledEvent = b => {\n            if (event.type === Blockly.Events.BLOCK_CHANGE && event.element === 'disabled') {\n                let parent_block = b.getParent();\n\n                while (parent_block !== null) {\n                    if (parent_block.id === event.blockId) {\n                        return true;\n                    }\n\n                    parent_block = parent_block.getParent();\n                }\n            }\n            return false;\n        };\n\n        this.workspace.getAllBlocks(true).forEach(block => {\n            if (\n                force_check ||\n                isGlobalEndDragEvent() ||\n                isGlobalDeleteEvent() ||\n                isGlobalCreateEvent() ||\n                isClickEvent() ||\n                isChangeEvent(block) ||\n                isChangeInMyInputs(block) ||\n                isParentEnabledEvent(block)\n            ) {\n                // Unhighlight disabled blocks and their optional children.\n                if (block.disabled) {\n                    const unhighlightRecursively = child_blocks => {\n                        child_blocks.forEach(child_block => {\n                            child_block.setErrorHighlighted(false);\n                            unhighlightRecursively(child_block.getChildren());\n                        });\n                    };\n\n                    unhighlightRecursively([block]);\n                    return;\n                }\n\n                // No required inputs, ignore this block.\n                if (!block.getRequiredValueInputs) {\n                    return;\n                }\n\n                const required_inputs_object = block.getRequiredValueInputs();\n                const required_input_names = Object.keys(required_inputs_object);\n                const should_highlight = required_input_names.some(input_name => {\n                    const is_selected = Blockly.getSelected() === block; // Don't highlight selected blocks.\n                    const is_disabled = block.disabled || block.getInheritedDisabled(); // Don't highlight disabled blocks.\n\n                    if (is_selected || is_disabled) {\n                        return false;\n                    }\n\n                    // Don't unhighlight collapsed blocks with highlighted descendants.\n                    if (block.isCollapsed() && block.hasErrorHighlightedDescendant()) {\n                        return true;\n                    }\n\n                    const input = block.getInput(input_name);\n\n                    if (!input && !block.domToMutation) {\n                        // eslint-disable-next-line no-console\n                        console.warn('Detected a non-existent required input.', {\n                            input_name,\n                            type: block.type,\n                        });\n                    } else if (input.connection) {\n                        const order = Blockly.JavaScript.javascriptGenerator.ORDER_ATOMIC;\n                        const value = Blockly.JavaScript.javascriptGenerator.valueToCode(block, input_name, order);\n                        const inputValidatorFn = required_inputs_object[input_name];\n\n                        // If a custom validator was supplied, use this to determine whether\n                        // the block should be highlighted.\n                        if (typeof inputValidatorFn === 'function') {\n                            return !!inputValidatorFn(value);\n                        }\n\n                        // If there's no custom validator, only check if input was populated and\n                        // doesn't return an empty value.\n                        return !value;\n                    }\n\n                    return true;\n                });\n\n                if (should_highlight) {\n                    // Remove select highlight in favour of error highlight.\n                    block.removeSelect();\n                }\n\n                block.setErrorHighlighted(should_highlight, block.error_message || undefined);\n\n                // Automatically expand blocks that have been highlighted.\n                if (force_check && (block.is_error_highlighted || block.hasErrorHighlightedDescendant())) {\n                    let current_collapsed_block = block;\n                    while (current_collapsed_block) {\n                        current_collapsed_block.setCollapsed(false);\n                        current_collapsed_block = current_collapsed_block.getParent();\n                    }\n                }\n            }\n        });\n    }\n\n    /**\n     * Checks whether the workspace contains non-silent notification blocks. Returns array of names for audio files to be played.\n     */\n    getStrategySounds() {\n        const all_blocks = this.workspace.getAllBlocks();\n        const notify_blocks = all_blocks.filter(block => block.type === 'notify');\n        const strategy_sounds = [];\n\n        notify_blocks.forEach(block => {\n            const selected_sound = block.inputList[0].fieldRow[3].value_;\n\n            if (selected_sound !== 'silent') {\n                strategy_sounds.push(selected_sound);\n            }\n        });\n\n        return strategy_sounds;\n    }\n\n    static handleDragOver(event) {\n        event.stopPropagation();\n        event.preventDefault();\n        event.dataTransfer.dropEffect = 'copy'; // eslint-disable-line no-param-reassign\n    }\n\n    static handleDropOver(event, handleFileChange) {\n        const main_workspace_dom = document.getElementById('scratch_div');\n        const local_drag_zone = document.getElementById('load-strategy__local-dropzone-area');\n\n        if (main_workspace_dom.contains(event.target)) {\n            handleFileChange(event);\n        } else if (local_drag_zone && local_drag_zone.contains(event.target)) {\n            handleFileChange(event, false);\n        } else {\n            event.stopPropagation();\n            event.preventDefault();\n            event.dataTransfer.effectAllowed = 'none';\n            event.dataTransfer.dropEffect = 'none';\n        }\n    }\n}\n\nexport default new DBot();\n","const lightMode = () => {\n    const workspace = Blockly;\n    workspace.Colours.RootBlock = {\n        colour: '#064e72',\n        colourSecondary: '#064e72',\n        colourTertiary: '#6d7278',\n    };\n\n    workspace.Colours.Base = {\n        colour: '#e5e5e5',\n        colourSecondary: '#ffffff',\n        colourTertiary: '#6d7278',\n    };\n\n    workspace.Colours.Special1 = {\n        colour: '#e5e5e5',\n        colourSecondary: '#ffffff',\n        colourTertiary: '#6d7278',\n    };\n\n    workspace.Colours.Special2 = {\n        colour: '#e5e5e5',\n        colourSecondary: '#ffffff',\n        colourTertiary: '#6d7278',\n    };\n\n    workspace.Colours.Special3 = {\n        colour: '#e5e5e5',\n        colourSecondary: '#ffffff',\n        colourTertiary: '#6d7278',\n    };\n\n    workspace.Colours.Special4 = {\n        colour: '#e5e5e5',\n        colourSecondary: '#000000',\n        colourTertiary: '#0e0e0e',\n    };\n};\n\nexport const setColors = () => lightMode();\n","import filesaver from 'file-saver';\nimport { config } from '../constants/config';\n\nexport const saveAs = ({ data, filename, type }) => {\n    const blob = new Blob([data], { type });\n    filesaver.saveAs(blob, filename);\n};\n\nexport const getContractTypeOptions = (contract_type, trade_type) => {\n    const trade_types = config.opposites[trade_type.toUpperCase()];\n\n    if (!trade_types) {\n        return config.NOT_AVAILABLE_DROPDOWN_OPTIONS;\n    }\n\n    const contract_options = trade_types.map(type => Object.entries(type)[0].reverse());\n\n    // When user selected a specific contract, only return the contract type they selected.\n    if (contract_type !== 'both') {\n        return contract_options.filter(option => option[1] === contract_type);\n    }\n\n    return contract_options;\n};\n","import { localize } from '@deriv/translations';\nimport { config } from '../constants/config';\nimport ApiHelpers from '../services/api/api-helpers';\nimport { convertStrategyToIsDbot } from '../utils';\n\n/* eslint-disable no-underscore-dangle */\nexport default class BlockConversion {\n    constructor() {\n        this.blocks_pending_reconnect = {};\n        this.workspace = this.createWorkspace();\n        this.workspace_variables = {};\n        this.has_market_block = false;\n        this.exception_blocks = ['r_100'];\n    }\n\n    getConversions() {\n        const generateGrowingListBlock = (block_node, block_type, variable_name, child_value_input_name) => {\n            const block = this.workspace.newBlock(block_type);\n            const block_child_nodes = Array.from(block_node.children);\n            const mutation_dom = block_child_nodes.find(child_node => child_node.tagName.toLowerCase() === 'mutation');\n\n            if (mutation_dom) {\n                const items_amount = parseInt(mutation_dom.getAttribute('items')) || 0;\n\n                if (items_amount > 0) {\n                    // In DBot we have a statement block for each value part of the list, so we need to\n                    // generate blocks for these and connect them to the parent's statement.\n                    for (let i = 0; i < items_amount; i++) {\n                        block.onIconClick();\n                    }\n\n                    // Note that value_input_nodes.length can be different than the items_amount\n                    // user can have empty entries in their list!\n                    block_child_nodes\n                        .filter(child_node => child_node.tagName.toLowerCase() === 'value')\n                        .forEach(child_node => {\n                            const value_input_name = child_node.getAttribute('name');\n                            const value_input_index = parseInt(value_input_name.replace(/[^0-9]+/g, ''));\n\n                            Array.from(child_node.children).forEach(value_block_node => {\n                                const value_block = this.convertBlockNode(value_block_node, block);\n\n                                // Now connect this converted block to the new text_statement.\n                                const statement_block = block\n                                    .getBlocksInStatement('STACK')\n                                    .find((b, i) => value_input_index === i);\n                                const value_input = statement_block.getInput(child_value_input_name);\n\n                                value_input.connection.connect(value_block.outputConnection);\n                            });\n\n                            child_node.parentNode.removeChild(child_node);\n                        });\n                }\n            }\n\n            // Return variable block instead of statement.\n            const variable = this.generateUniqueVariable(variable_name);\n            const variable_block = this.workspace.newBlock('variables_get');\n\n            variable_block.setFieldValue(variable.getId(), 'VAR');\n            block.setFieldValue(variable.getId(), 'VARIABLE');\n\n            return {\n                block_to_attach: variable_block,\n                statement_blocks: [block],\n            };\n        };\n        const generateIndicatorBlock = (block_node, block_type, variable_name) => {\n            const block = this.workspace.newBlock(block_type);\n            const value_input_name_mappings = {\n                input_list: [{ old: 'INPUT', new: 'INPUT_LIST' }],\n                period: [{ old: 'PERIOD', new: 'PERIOD' }],\n                fast_ema_period: [{ old: 'FAST_EMA_PERIOD', new: 'FAST_EMA_PERIOD' }],\n                signal_ema_period: [\n                    // https://github.com/binary-com/binary-bot/pull/1123\n                    { old: 'SMA_PERIOD', new: 'SIGNAL_EMA_PERIOD' },\n                    { old: 'SIGNAL_EMA_PERIOD', new: 'SIGNAL_EMA_PERIOD' },\n                ],\n                slow_ema_period: [{ old: 'SLOW_EMA_PERIOD', new: 'SLOW_EMA_PERIOD' }],\n                std_dev_multiplier_up: [{ old: 'UPMULTIPLIER', new: 'UPMULTIPLIER' }],\n                std_dev_multiplier_down: [{ old: 'DOWNMULTIPLIER', new: 'DOWNMULTIPLIER' }],\n            };\n\n            // Bollinger Bands + MACDA have some fields we need to carry over.\n            switch (block_type) {\n                case 'bb_statement':\n                case 'bba_statement': {\n                    const bb_result_list = block.getField('BBRESULT_LIST');\n                    if (bb_result_list) {\n                        bb_result_list.setValue(this.getFieldValue(block_node, 'BBRESULT_LIST'));\n                    }\n                    break;\n                }\n                case 'macda_statement': {\n                    const macd_fields_list = block.getField('MACDFIELDS_LIST');\n                    if (macd_fields_list) {\n                        macd_fields_list.setValue(this.getFieldValue(block_node, 'MACDFIELDS_LIST'));\n                    }\n                    break;\n                }\n                default:\n                    break;\n            }\n\n            // Attach required child blocks (these are defined on each indicator block).\n            const required_child_blocks = block.required_child_blocks || [];\n\n            required_child_blocks.forEach(required_child_block_name => {\n                const child_block = this.workspace.newBlock(required_child_block_name);\n                const last_connection = block.getLastConnectionInStatement('STATEMENT');\n\n                last_connection.connect(child_block.previousConnection);\n            });\n\n            const blocks_in_statement = block.getBlocksInStatement('STATEMENT');\n\n            blocks_in_statement.forEach(block_in_statement => {\n                const value_name_mappings = value_input_name_mappings[block_in_statement.type];\n\n                if (value_name_mappings) {\n                    value_name_mappings.forEach(value_name_mapping => {\n                        const el_value = block_node.querySelector(`value[name=\"${value_name_mapping.old}\"]`);\n\n                        if (el_value) {\n                            const value_input = block_in_statement.getInput(value_name_mapping.new);\n\n                            Array.from(el_value.children).forEach(el_value_child => {\n                                const converted_block = this.convertBlockNode(el_value_child, block);\n                                const input_child_type = el_value_child.tagName.toLowerCase();\n\n                                if (input_child_type === 'shadow') {\n                                    converted_block.setShadow(true);\n                                }\n\n                                value_input.connection.connect(converted_block.outputConnection);\n                            });\n\n                            el_value.parentNode.removeChild(el_value);\n                        }\n                    });\n                }\n            });\n\n            // Return variable block instead of statement.\n            const variable = this.generateUniqueVariable(variable_name);\n            const variable_block = this.workspace.newBlock('variables_get');\n\n            variable_block.setFieldValue(variable.getId(), 'VAR');\n            block.setFieldValue(variable.getId(), 'VARIABLE');\n\n            return {\n                block_to_attach: variable_block,\n                statement_blocks: [block],\n            };\n        };\n        const tradeOptions = (block_node, is_symbol_type = false) => {\n            const block = this.workspace.newBlock('trade_definition_tradeoptions');\n            const block_node_to_use = block_node;\n\n            // Legacy symbol blocks used a statement \"CONDITION\" populated with a trade type block.\n            // This trade type block has the same structure as tradeOptions, hence we can use it here.\n            if (is_symbol_type) {\n                return false;\n            }\n\n            const fields = [\n                'DURATIONTYPE_LIST',\n                'CURRENCY_LIST',\n                'BARRIEROFFSETTYPE_LIST',\n                'SECONDBARRIEROFFSETTYPE_LIST',\n            ];\n            const block_child_nodes = Array.from(block_node_to_use.children);\n\n            let barrier_inputs = 0;\n            let has_prediction = false;\n\n            block_child_nodes\n                .filter(block_child_node => block_child_node.tagName.toLowerCase() === 'value')\n                .forEach(block_child_node => {\n                    const value_input_name = block_child_node.getAttribute('name');\n\n                    if (value_input_name === 'BARRIEROFFSET' || value_input_name === 'SECONDBARRIEROFFSET') {\n                        barrier_inputs++;\n                    } else if (value_input_name === 'PREDICTION') {\n                        has_prediction = true;\n                    }\n                });\n\n            if (barrier_inputs > 0) {\n                block.createBarrierInputs({\n                    allow_both_types: true,\n                    values: [1, -1],\n                });\n            }\n\n            if (has_prediction) {\n                block.createPredictionInput([0]);\n            }\n\n            fields.forEach(field_name => {\n                const field = block.getField(field_name);\n                if (field) {\n                    field.setValue(this.getFieldValue(block_node_to_use, field_name));\n                }\n            });\n\n            return { block_to_attach: block };\n        };\n        const conversions = {\n            bb: block_node => generateIndicatorBlock(block_node, 'bb_statement', 'bb'),\n            bba: block_node => generateIndicatorBlock(block_node, 'bba_statement', 'bba'),\n            ema: block_node => generateIndicatorBlock(block_node, 'ema_statement', 'ema'),\n            emaa: block_node => generateIndicatorBlock(block_node, 'emaa_statement', 'emaa'),\n            lists_create_with: block_node =>\n                generateGrowingListBlock(block_node, 'lists_create_with', localize('list'), 'VALUE'),\n            macda: block_node => generateIndicatorBlock(block_node, 'macda_statement', 'macda'),\n            market: block_node => {\n                this.has_market_block = true;\n                return tradeOptions(block_node);\n            },\n            rsi: block_node => generateIndicatorBlock(block_node, 'rsi_statement', 'rsi'),\n            rsia: block_node => generateIndicatorBlock(block_node, 'rsia_statement', 'rsia'),\n            sma: block_node => generateIndicatorBlock(block_node, 'sma_statement', 'sma'),\n            smaa: block_node => generateIndicatorBlock(block_node, 'smaa_statement', 'smaa'),\n            text_join: block_node => generateGrowingListBlock(block_node, 'text_join', localize('text'), 'TEXT'),\n            trade: block_node => {\n                const block = this.workspace.newBlock('trade_definition');\n                const block_fields = {\n                    trade_definition_market: ['MARKET_LIST', 'SUBMARKET_LIST', 'SYMBOL_LIST'],\n                    trade_definition_tradetype: ['TRADETYPECAT_LIST', 'TRADETYPE_LIST'],\n                    trade_definition_contracttype: ['TYPE_LIST'],\n                    trade_definition_candleinterval: ['CANDLEINTERVAL_LIST'],\n                    trade_definition_restartbuysell: ['TIME_MACHINE_ENABLED'],\n                    trade_definition_restartonerror: ['RESTARTONERROR'],\n                };\n\n                const blocks_to_connect = {};\n\n                Object.keys(block_fields).forEach(child_block_name => {\n                    const child_block = this.workspace.newBlock(child_block_name);\n\n                    block_fields[child_block_name].forEach(field_name => {\n                        child_block.setFieldValue(this.getFieldValue(block_node, field_name), field_name);\n                    });\n\n                    blocks_to_connect[child_block_name] = child_block;\n                });\n\n                Object.values(blocks_to_connect).forEach(child_block => {\n                    const last_connection = block.getLastConnectionInStatement('TRADE_OPTIONS');\n                    last_connection.connect(child_block.previousConnection);\n                });\n\n                return { block_to_attach: block };\n            },\n            tradeOptions,\n        };\n\n        return conversions;\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    getIllegalBlocks() {\n        const illegal_blocks = [];\n\n        // Legacy symbol + trade_type blocks are special cases, they are turned into multiple blocks.\n        // We don't convert these atm, as a workaround users can import to BBot, then export and load\n        // into DBot.\n        const { active_symbols } = ApiHelpers.instance.active_symbols;\n        const { opposites } = config;\n\n        active_symbols.forEach(active_symbol => {\n            const symbol_name = active_symbol.symbol.toLowerCase();\n            if (!illegal_blocks.includes(symbol_name)) {\n                illegal_blocks.push(symbol_name);\n            }\n        });\n\n        // All trade types blocks cannot be converted at this time.\n        Object.keys(opposites).forEach(opposites_name => illegal_blocks.push(opposites_name));\n\n        return illegal_blocks;\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    createWorkspace() {\n        const options = new Blockly.Options({ media: `${__webpack_public_path__}media/` });\n        const el_injection_div = new DocumentFragment();\n        const workspace = Blockly.createVirtualWorkspace_(el_injection_div, options, false, false);\n\n        return workspace;\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    getFieldValue(el_block, field_name) {\n        const el_field = el_block.querySelector(`field[name=\"${field_name}\"]`);\n        return el_field ? el_field.textContent : '';\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    getFirstBlockInStack(block) {\n        let current_previous_connection = block.previousConnection;\n        let previous_block = block.getPreviousBlock();\n\n        if (!current_previous_connection) {\n            return block;\n        }\n\n        while (previous_block) {\n            if (previous_block === block.getSurroundParent()) {\n                break;\n            }\n\n            current_previous_connection = previous_block.previousConnection;\n            previous_block = previous_block.getPreviousBlock();\n        }\n\n        return current_previous_connection.sourceBlock_;\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    updateRenamedFields(xml) {\n        const renamed_fields = {\n            MARKET_LIST: {\n                volidx: 'synthetic_index',\n            },\n            TRADETYPECAT_LIST: {\n                endsinout: 'inout',\n                staysinout: 'inout',\n                callputequal: 'callput',\n            },\n            TRADETYPE_LIST: {\n                risefall: 'callput',\n                risefallequals: 'callputequal',\n            },\n        };\n\n        Object.keys(renamed_fields).forEach(field_name => {\n            const el_field = xml.querySelector(`field[name=\"${field_name}\"]`);\n\n            if (el_field) {\n                const value = el_field.innerText;\n\n                Object.keys(renamed_fields[field_name]).forEach(old_name => {\n                    if (value === old_name) {\n                        el_field.innerText = renamed_fields[field_name][old_name];\n                    }\n                });\n            }\n        });\n\n        return xml;\n    }\n\n    naivelyFixLegacyStrategyAfterConversion() {\n        // For old \"market\" blocks, move everything in \"Trade options\" except \"DURATION\"\n        // to \"Run once at start\". Legacy \"market\" blocks had no such thing as \"Run once at start\"\n        // not moving everything would kill Martingale strategies as they'd be reinitialised each run.\n        const trade_definition_block = this.workspace?.getTradeDefinitionBlock();\n        const has_initialization_block = trade_definition_block?.getBlocksInStatement('INITIALIZATION').length > 0;\n        if (trade_definition_block) {\n            trade_definition_block.getBlocksInStatement('SUBMARKET').forEach(block => {\n                if (\n                    block.type !== 'trade_definition_tradeoptions' &&\n                    this.has_market_block &&\n                    !has_initialization_block\n                ) {\n                    const last_connection = trade_definition_block.getLastConnectionInStatement('INITIALIZATION');\n                    block.unplug(true);\n                    last_connection.connect(block.previousConnection);\n                }\n            });\n        }\n    }\n\n    generateUniqueVariable(variable_name) {\n        let current_name = variable_name;\n        let counter = 0;\n\n        while (Object.values(this.workspace_variables).includes(current_name)) {\n            counter++;\n            current_name = variable_name + counter;\n        }\n\n        const ws_variable = Blockly.Variables.getOrCreateVariablePackage(this.workspace, '', current_name, '');\n        this.workspace_variables[ws_variable.id_] = current_name; // eslint-disable-line\n\n        return ws_variable;\n    }\n\n    convertStrategy(strategy_node, showIncompatibleStrategyDialog) {\n        // Disable events (globally) to suppress block onchange listeners from firing.\n        Blockly.Events.disable();\n\n        // We only want to update renamed fields for modern strategies.\n        const xml = this.updateRenamedFields(strategy_node);\n\n        // Don't convert already compatible strategies.\n        if (strategy_node.hasAttribute('is_dbot') && strategy_node.getAttribute('is_dbot') === 'true') {\n            Blockly.Events.enable();\n            return xml;\n        }\n\n        const has_illegal_block = this.getIllegalBlocks().some(illegal_block_type => {\n            if (!this.exception_blocks.includes(illegal_block_type)) {\n                return !!xml.querySelector(`block[type=\"${illegal_block_type}\"]`);\n            }\n        });\n\n        if (has_illegal_block) {\n            if (showIncompatibleStrategyDialog) {\n                showIncompatibleStrategyDialog();\n            }\n            Blockly.Events.enable();\n            return Blockly.utils.xml.textToDom('<xml />');\n        }\n\n        const variable_nodes = [];\n        const block_nodes = [];\n\n        Array.from(xml.children).forEach(strategy_child_node => {\n            const tag_name = strategy_child_node.nodeName.toLowerCase();\n\n            switch (tag_name) {\n                case 'block':\n                case 'shadow': {\n                    block_nodes.push(strategy_child_node);\n                    break;\n                }\n                case 'variables': {\n                    variable_nodes.push(...strategy_child_node.children);\n                    break;\n                }\n                default:\n                    break;\n            }\n        });\n\n        const registerVariables = el_variables => {\n            el_variables.forEach(el_variable => {\n                const variable_id = el_variable.getAttribute('id');\n                const variable_name = el_variable.textContent;\n\n                if (!this.workspace_variables[variable_id]) {\n                    const variable = Blockly.Variables.getOrCreateVariablePackage(\n                        this.workspace,\n                        variable_id,\n                        variable_name,\n                        ''\n                    );\n                    this.workspace_variables[variable.id_] = variable.name;\n                }\n            });\n        };\n\n        // Register pre-existing variables taken from XML file. Users may register variables\n        // but not use them, we should not delete them nor create only the ones used in the strategy.\n        registerVariables(variable_nodes);\n\n        // Collection strategies don't pre-register variables, find these and register\n        // variable instances for them if they don't exist yet.\n        registerVariables(xml.querySelectorAll('field[name=\"VAR\"]'));\n\n        block_nodes.forEach(block_node => this.convertBlockNode(block_node));\n\n        // Re-connect blocks that have been transformed into multiples. i.e. in the case\n        // of old multiline blocks converted to statement blocks.\n        Object.keys(this.blocks_pending_reconnect).forEach(previous_sibling_id => {\n            const previous_sibling_block = this.workspace.getBlockById(previous_sibling_id);\n            const child_blocks = this.blocks_pending_reconnect[previous_sibling_id];\n            const sibling_previous_connection = previous_sibling_block.previousConnection;\n\n            if (sibling_previous_connection) {\n                const sibling_previous_target_connection = sibling_previous_connection.targetConnection;\n                let highest_previous_connection = sibling_previous_connection;\n\n                // Connect all the blocks to be connected in reverse, we do this to maintain\n                // the original order of statement blocks, although the order mostly doesn't\n                // matter. (This may change, it may matter for other statement blocks.)\n                child_blocks.reverse().forEach(child_block => {\n                    highest_previous_connection.connect(child_block.nextConnection);\n                    highest_previous_connection = child_block.previousConnection;\n                });\n\n                if (sibling_previous_target_connection) {\n                    // Reconnect the first block in this statement to the original parent connection.\n                    let current_previous_connection = previous_sibling_block.previousConnection;\n                    let previous_block = previous_sibling_block.getPreviousBlock();\n\n                    while (previous_block) {\n                        if (previous_block === previous_block.getSurroundParent()) {\n                            break;\n                        }\n\n                        current_previous_connection = previous_block.previousConnection;\n                        previous_block = previous_block.getPreviousBlock();\n                    }\n\n                    sibling_previous_target_connection.connect(current_previous_connection);\n                }\n            }\n        });\n\n        this.naivelyFixLegacyStrategyAfterConversion();\n\n        this.workspace.getAllBlocks(true).forEach(block => {\n            block.initSvg();\n            block.renderEfficiently();\n        });\n\n        this.workspace.cleanUp();\n\n        const converted_xml = Blockly.Xml.workspaceToDom(this.workspace);\n\n        convertStrategyToIsDbot(converted_xml);\n\n        this.workspace = null;\n\n        Blockly.Events.enable();\n\n        return converted_xml;\n    }\n\n    convertBlockNode(el_block, parent_block = null) {\n        const conversions = this.getConversions();\n        const block_type = el_block.getAttribute('type');\n        const is_old_block = Object.keys(conversions).includes(block_type);\n        let block = null;\n\n        const is_collapsed =\n            (el_block.getAttribute('collapsed') && el_block.getAttribute('collapsed') === 'true') || false;\n        const is_immovable = el_block.getAttribute('movable') && el_block.getAttribute('movable') === 'false';\n        const is_undeletable = el_block.getAttribute('deletable') && el_block.getAttribute('deletable') === 'false';\n        const is_disabled = el_block.getAttribute('disabled') && el_block.getAttribute('disabled') === 'true';\n\n        const setBlockAttributes = b => {\n            b.setCollapsed(is_collapsed);\n            b.setMovable(!is_immovable);\n            b.setDeletable(!is_undeletable);\n            b.setDisabled(is_disabled);\n        };\n\n        if (is_old_block) {\n            const conversion_obj = conversions[block_type](el_block);\n\n            // block is a value block that needs to be reattached. TODO?\n            if (conversion_obj.block_to_attach) {\n                block = conversion_obj.block_to_attach;\n                setBlockAttributes(block);\n            }\n\n            // Statement blocks coming from the conversion_obj need to be attached to the block's previousConnection.\n            if (parent_block && conversion_obj.statement_blocks) {\n                conversion_obj.statement_blocks.forEach(statement_block => {\n                    // Persist block attributes.\n                    setBlockAttributes(statement_block);\n\n                    const previous_connection = this.getClosestLegalPreviousConnection(parent_block);\n\n                    if (previous_connection) {\n                        const target_block = previous_connection.sourceBlock_;\n\n                        if (!this.blocks_pending_reconnect[target_block.id]) {\n                            this.blocks_pending_reconnect[target_block.id] = [];\n                        }\n\n                        this.blocks_pending_reconnect[target_block.id].push(statement_block);\n                    }\n                });\n            }\n        } else {\n            const is_legal_block = Object.keys(Blockly.Blocks).includes(block_type);\n\n            if (is_legal_block) {\n                block = this.workspace.newBlock(block_type);\n                setBlockAttributes(block);\n\n                // Ensure mutations are correctly rendered. This logic happens here because\n                // we should ignore mutations on blocks that are already converted i.e mutations\n                // will be taken care of in conversion, not here.\n                if (block) {\n                    const mutation_dom = Array.from(el_block.children).find(\n                        child_node => child_node.tagName.toLowerCase() === 'mutation'\n                    );\n\n                    if (mutation_dom && block.domToMutation) {\n                        block.domToMutation(mutation_dom);\n                    }\n                }\n            }\n        }\n\n        if (!block) {\n            console.warn('Unrecognised block found.', block_type); // eslint-disable-line no-console\n            return false;\n        }\n\n        // Keep track of parent_block, especially important for blocks\n        // nested in <next> statements. This property is only set during conversion.\n        if (parent_block) {\n            block.conversion_parent = parent_block;\n        }\n\n        Array.from(el_block.children).forEach(el_block_child => {\n            const tag_name = el_block_child.tagName.toLowerCase();\n\n            switch (tag_name) {\n                case 'field': {\n                    const field_name = el_block_child.getAttribute('name');\n                    const field = block.getField(field_name);\n\n                    if (field) {\n                        if (field instanceof Blockly.FieldVariable) {\n                            const variable_id = el_block_child.getAttribute('id');\n                            const variable_name = el_block_child.innerText.trim();\n                            const variable = Blockly.Variables.getOrCreateVariablePackage(\n                                this.workspace,\n                                variable_id,\n                                variable_name,\n                                ''\n                            );\n                            this.workspace_variables[variable.id_] = variable_name;\n                            field.setValue(variable.id_);\n                        } else {\n                            field.setValue(el_block_child.innerText);\n                        }\n                    }\n                    break;\n                }\n                case 'value': {\n                    this.processValueInputs(block, el_block_child);\n                    break;\n                }\n                case 'statement': {\n                    const statement_name = el_block_child.getAttribute('name');\n                    this.processStatementInputs(block, statement_name, el_block_child);\n                    break;\n                }\n                case 'next': {\n                    const closest_statement = el_block_child.closest('statement');\n\n                    if (closest_statement) {\n                        const statement_name = closest_statement.getAttribute('name');\n                        this.processStatementInputs(block, statement_name, el_block_child, block.conversion_parent);\n                    } else if (block.nextConnection) {\n                        Array.from(el_block_child.children).forEach(el_sibling_block => {\n                            const sibling_block = this.convertBlockNode(el_sibling_block);\n                            block.nextConnection.connect(sibling_block.previousConnection);\n                        });\n                    }\n                    break;\n                }\n                default:\n                    break;\n            }\n        });\n\n        return block;\n    }\n\n    // eslint-disable-next-line consistent-return\n    processValueInputs(block, el_input) {\n        const input_name = el_input.getAttribute('name');\n        const input = block.getInput(input_name);\n\n        if (!input) {\n            console.warn('Unrecognised value input', input_name); // eslint-disable-line no-console\n            return false;\n        }\n\n        // Each of the children of a value node is a shadow or block node. Recursively\n        // convert these block nodes to their new counterpart and re-connect them.\n        // eslint-disable-next-line consistent-return\n        Array.from(el_input.children).forEach(el_input_child_block => {\n            const input_child_block = this.convertBlockNode(el_input_child_block, block);\n\n            if (!input_child_block) {\n                // eslint-disable-next-line no-console\n                console.warn('Illegal child.', el_input_child_block.getAttribute('type'));\n                return false;\n            }\n\n            // Set shadow property for shadow blocks.\n            const input_child_type = el_input_child_block.tagName.toLowerCase();\n            if (input_child_type === 'shadow') {\n                input_child_block.setShadow(true);\n            }\n\n            // Re-connect the child block to the value input.\n            input.connection.connect(input_child_block.outputConnection);\n        });\n    }\n\n    // eslint-disable-next-line consistent-return\n    processStatementInputs(block, statement_name, el_node_with_children, block_to_search = null) {\n        const block_to_use = block_to_search || block;\n        const input = block_to_use.getInput(statement_name);\n\n        if (!input) {\n            console.warn('Unrecognised statement input', statement_name); // eslint-disable-line no-console\n            return false;\n        }\n\n        // Each of the children of a statement node is a block node. Recursively\n        // convert these block nodes to their new counterpart and reconnect them.\n        // eslint-disable-next-line consistent-return\n        Array.from(el_node_with_children.children).forEach(el_input_child_block => {\n            const input_child_block = this.convertBlockNode(el_input_child_block, block_to_use);\n            if (!input_child_block) {\n                // eslint-disable-next-line no-console\n                console.warn('Unrecognised child in statement', el_input_child_block.getAttribute('type'));\n                return false;\n            }\n\n            // Note that blocks are connected recursively so more deeply nested blocks\n            // (i.e. nested in <next>) will be connected before less nested blocks.\n            // Luckily Blockly API works in our favour and helps maintain the correct order.\n            const statement_input = block_to_use.getInput(statement_name);\n\n            if (statement_input && input_child_block.previousConnection) {\n                statement_input.connection.connect(input_child_block.previousConnection);\n            }\n        });\n    }\n\n    getClosestLegalPreviousConnection(supposed_parent_block) {\n        // Procedures are a bit special, it's hard to find the correct connection for them so we\n        // generate a (completely useless) filler block and connect it to the procedure's statement\n        // so we can return that useless block's previousConnection.\n        if (config.procedureDefinitionBlocks.includes(supposed_parent_block.type)) {\n            const blocks_in_statement = supposed_parent_block.getBlocksInStatement('STACK');\n\n            if (blocks_in_statement.length === 0) {\n                const input = supposed_parent_block.getInput('STACK');\n                const useless_block = this.workspace.newBlock('useless_block');\n\n                input.connection.connect(useless_block.previousConnection);\n\n                return useless_block.previousConnection;\n            }\n\n            return supposed_parent_block.getInputTargetBlock('STACK').previousConnection;\n        }\n\n        let current_block = this.getFirstBlockInStack(supposed_parent_block);\n        let is_protected_statement = this.isConnectedToProtectedStatementInput(current_block);\n\n        while (is_protected_statement) {\n            const new_parent = current_block.getParent();\n\n            if (new_parent) {\n                current_block = new_parent;\n                is_protected_statement = this.isConnectedToProtectedStatementInput(current_block);\n            }\n        }\n\n        if (current_block.previousConnection) {\n            return current_block.previousConnection;\n        }\n\n        if (supposed_parent_block.conversion_parent) {\n            return this.getClosestLegalPreviousConnection(supposed_parent_block.conversion_parent);\n        }\n\n        return false;\n    }\n\n    isConnectedToProtectedStatementInput(block) {\n        const first_block = this.getFirstBlockInStack(block);\n        const previous_connection = first_block.previousConnection;\n\n        if (previous_connection) {\n            const target_connection = previous_connection.targetConnection;\n\n            if (target_connection) {\n                const target_block = target_connection.sourceBlock_; // eslint-disable-line\n                const input = target_block.getInputWithConnection(target_connection);\n                const protected_statements = target_block.protected_statements || [];\n\n                if (input && protected_statements.includes(input.name)) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n}\n","import { localize } from '@deriv/translations';\nimport { saveAs } from '../shared';\nimport BlockConversion from '../backward-compatibility';\nimport { config } from '../../constants/config';\nimport { observer as globalObserver } from '../../utils/observer';\nimport { removeLimitedBlocks } from '../../utils/workspace';\nimport { saveWorkspaceToRecent } from '../../utils/local-storage';\nimport DBotStore from '../dbot-store';\nimport { LogTypes } from '../../constants/messages';\nimport { error_message_map } from '../../utils/error-config';\nimport { botNotification } from '@deriv/bot-web-ui/src/components/bot-notification/bot-notification';\nimport { notification_message } from '@deriv/bot-web-ui/src/components/bot-notification/bot-notification-utils';\nimport { getCurrencyDisplayCode } from '@deriv/shared';\n\nexport const inject_workspace_options = {\n    media: `${__webpack_public_path__}media/`,\n    zoom: {\n        wheel: true,\n        startScale: config.workspaces.previewWorkspaceStartScale,\n    },\n    readOnly: true,\n    scrollbars: true,\n    renderer: 'zelos',\n};\n\nexport const updateXmlValues = blockly_options => {\n    if (!window.Blockly) return;\n    const { strategy_id, convertedDom, file_name, from, block_string } = blockly_options;\n    window.Blockly.xmlValues = {\n        ...window.Blockly.xmlValues,\n        strategy_id,\n        convertedDom,\n        file_name,\n        from,\n        block_string,\n    };\n};\n\nexport const getSelectedTradeType = (workspace = Blockly.derivWorkspace) => {\n    const trade_type_block = workspace.getAllBlocks(true).find(block => block.type === 'trade_definition_tradetype');\n    const selected_trade_type = trade_type_block?.getFieldValue('TRADETYPE_LIST');\n    let mandatory_tradeoptions_block = 'trade_definition_tradeoptions';\n    if (selected_trade_type === 'multiplier') mandatory_tradeoptions_block = 'trade_definition_multiplier';\n    if (selected_trade_type === 'accumulator') mandatory_tradeoptions_block = 'trade_definition_accumulator';\n    return mandatory_tradeoptions_block;\n};\n\nexport const matchTranslateAttribute = translateString => {\n    const match = translateString.match(/translate\\((-?\\d+(?:\\.\\d+)?),\\s*(-?\\d+(?:\\.\\d+)?)\\)/);\n    if (match && match.length > 2) {\n        const x = parseFloat(match[1]);\n        const y = parseFloat(match[2]);\n        return { x, y };\n    }\n    return null; // Invalid or no match\n};\n\nexport const extractTranslateValues = () => {\n    const transform_value = Blockly?.derivWorkspace?.trashcan?.svgGroup.getAttribute('transform');\n    const translate_xy = matchTranslateAttribute(transform_value);\n\n    if (!translate_xy) {\n        globalObserver.emit('Error', 'Invalid String');\n    }\n\n    return {\n        translate_X: translate_xy.x,\n        translate_Y: translate_xy.y,\n    };\n};\n\nexport const validateErrorOnBlockDelete = () => {\n    // Get the bounding rectangle of the selected block\n    const { translate_X, translate_Y } = extractTranslateValues();\n    const blockRect = Blockly.getSelected()?.getSvgRoot().getBoundingClientRect();\n    const translate_offset = 200;\n    // Extract coordinates from the bounding rectangles\n    const blockX = blockRect?.left || 0;\n    const blockY = blockRect?.top || 0;\n    const mandatory_trade_option_block = getSelectedTradeType();\n    const required_block_types = [mandatory_trade_option_block, 'trade_definition', 'purchase', 'before_purchase'];\n    if (required_block_types?.includes(Blockly?.getSelected()?.type)) {\n        if (\n            blockY >= translate_Y - translate_offset &&\n            blockY <= translate_Y + translate_offset &&\n            blockX >= translate_X - translate_offset &&\n            blockX <= translate_X + translate_offset\n        ) {\n            globalObserver.emit('ui.log.error', error_message_map[Blockly?.getSelected()?.type]?.default);\n        }\n    }\n};\n\nexport const updateWorkspaceName = () => {\n    if (!DBotStore?.instance) return;\n    const { load_modal } = DBotStore.instance;\n    const file_name = load_modal?.dashboard_strategies?.[0]?.name ?? config.default_file_name;\n    if (document.title.indexOf('-') > -1) {\n        const string_to_replace = document.title.substr(document.title.indexOf('-'));\n        const new_document_title = document.title.replace(string_to_replace, `- ${file_name}`);\n\n        document.title = new_document_title;\n    } else {\n        document.title += ` - ${file_name}`;\n    }\n};\n\nexport const isMainBlock = block_type => config.mainBlocks.indexOf(block_type) >= 0;\n\nexport const oppositesToDropdownOptions = opposite_name => {\n    return opposite_name.map(contract_type => {\n        // i.e. [['CALL', localize('Rise')]] becomes [[localize('Rise'), 'CALL']];\n        return Object.entries(contract_type)[0].reverse();\n    });\n};\n\nexport const cleanUpOnLoad = (blocks_to_clean, drop_event, workspace) => {\n    const { clientX = 0, clientY = 0 } = drop_event || {};\n    const toolbar_height = 76;\n    const blockly_metrics = workspace.getMetrics();\n    const scale_cancellation = 1 / workspace.scale;\n    const blockly_left = blockly_metrics.absoluteLeft - blockly_metrics.viewLeft;\n    const blockly_top = document.body.offsetHeight - blockly_metrics.viewHeight - blockly_metrics.viewTop;\n    const cursor_x = clientX ? (clientX - blockly_left) * scale_cancellation : 0;\n    const cursor_y = clientY ? (clientY - blockly_top - toolbar_height) * scale_cancellation : 0;\n\n    workspace.cleanUp(cursor_x, cursor_y, blocks_to_clean);\n};\n\nexport const save = (filename = '@deriv/bot', collection = false, xmlDom) => {\n    xmlDom.setAttribute('is_dbot', 'true');\n    xmlDom.setAttribute('collection', collection ? 'true' : 'false');\n\n    const data = Blockly.Xml.domToPrettyText(xmlDom);\n    saveAs({ data, type: 'text/xml;charset=utf-8', filename: `${filename}.xml` });\n};\n\nconst delayExecution = ms => new Promise(resolve => setTimeout(resolve, ms));\n\nexport const load = async ({\n    block_string,\n    drop_event,\n    file_name,\n    strategy_id,\n    from,\n    workspace,\n    showIncompatibleStrategyDialog,\n}) => {\n    if (!DBotStore?.instance || !workspace) return;\n    const { setLoading, load_modal } = DBotStore.instance;\n    const { setOpenButtonDisabled, setLoadedLocalFile } = load_modal;\n\n    setLoading(true);\n    // Delay execution to allow fully previewing previous strategy if users quickly switch between strategies.\n    await delayExecution(100);\n    const showInvalidStrategyError = () => {\n        setLoadedLocalFile(null);\n        botNotification(notification_message.invalid_xml);\n        setLoading(false);\n        const error_message = localize('XML file contains unsupported elements. Please check or modify file.');\n        globalObserver.emit('ui.log.error', error_message);\n        return {\n            error: error_message,\n        };\n    };\n\n    // Check if XML can be parsed correctly.\n    try {\n        const xmlDoc = new DOMParser().parseFromString(block_string, 'application/xml');\n        if (xmlDoc.getElementsByTagName('parsererror').length) {\n            return showInvalidStrategyError();\n        }\n    } catch (e) {\n        return showInvalidStrategyError();\n    }\n\n    let xml;\n    // Check if XML can be parsed into a strategy.\n    try {\n        xml = Blockly.utils.xml.textToDom(block_string);\n    } catch (e) {\n        return showInvalidStrategyError();\n    }\n\n    const blockConversion = new BlockConversion();\n    xml = blockConversion.convertStrategy(xml, showIncompatibleStrategyDialog);\n    const blockly_xml = xml.querySelectorAll('block');\n\n    // Check if there are any blocks in this strategy.\n    if (!blockly_xml.length) {\n        return showInvalidStrategyError();\n    }\n\n    // Check if all block types in XML are allowed.\n    const has_invalid_blocks = Array.from(blockly_xml).some(block => {\n        const block_type = block.getAttribute('type');\n        return !Object.keys(Blockly.Blocks).includes(block_type);\n    });\n\n    if (has_invalid_blocks) {\n        return showInvalidStrategyError();\n    }\n\n    try {\n        const is_collection = xml.hasAttribute('collection') && xml.getAttribute('collection') === 'true';\n        const event_group = is_collection ? `load_collection${Date.now()}` : `dbot-load${Date.now()}`;\n\n        Blockly.Events.setGroup(event_group);\n        removeLimitedBlocks(\n            workspace,\n            Array.from(blockly_xml).map(xml_block => xml_block.getAttribute('type'))\n        );\n        updateXmlValues({ strategy_id, convertedDom: xml, file_name, from, block_string });\n        if (is_collection) {\n            loadBlocks(xml, drop_event, event_group, workspace);\n        } else {\n            await loadWorkspace(xml, event_group, workspace);\n\n            const is_main_workspace = workspace === Blockly.derivWorkspace;\n            if (is_main_workspace) {\n                const { save_modal } = DBotStore.instance;\n\n                save_modal.updateBotName(file_name);\n                workspace.clearUndo();\n                workspace.current_strategy_id = strategy_id || Blockly.utils.idGenerator.genUid();\n                await saveWorkspaceToRecent(xml, from);\n            }\n        }\n\n        // Set user disabled state on all disabled blocks. This ensures we don't change the disabled\n        // state through code, which was implemented for user experience.\n        workspace.getAllBlocks().forEach(block => {\n            if (block.disabled) {\n                block.is_user_disabled_state = true;\n            }\n        });\n\n        if (workspace === Blockly.derivWorkspace) {\n            globalObserver.emit('ui.log.success', { log_type: LogTypes.LOAD_BLOCK });\n        }\n    } catch (e) {\n        console.error(e); // eslint-disable-line\n        return showInvalidStrategyError();\n    } finally {\n        setLoading(false);\n        setOpenButtonDisabled(false);\n    }\n};\n\nexport const loadBlocks = (xml, drop_event, event_group, workspace) => {\n    Blockly.Events.setGroup(event_group);\n\n    const block_ids = Blockly.Xml.domToWorkspace(xml, workspace);\n    const added_blocks = block_ids.map(block_id => workspace.getBlockById(block_id));\n\n    if (drop_event && Object.keys(drop_event).length !== 0) {\n        cleanUpOnLoad(added_blocks, drop_event, workspace);\n    } else {\n        workspace.cleanUp();\n    }\n};\n\nexport const loadWorkspace = async (xml, event_group, workspace) => {\n    Blockly.Events.setGroup(event_group);\n    await workspace.asyncClear();\n    Blockly.Xml.domToWorkspace(xml, workspace);\n    workspace.cleanUp();\n};\n\nconst loadBlocksFromHeader = (xml_string, block) => {\n    // eslint-disable-next-line consistent-return\n    return new Promise((resolve, reject) => {\n        let xml;\n\n        try {\n            xml = Blockly.utils.xml.textToDom(xml_string);\n        } catch (error) {\n            return reject(localize('Unrecognized file format'));\n        }\n\n        try {\n            const is_collection = xml.hasAttribute('collection') && xml.getAttribute('collection') === 'true';\n\n            if (!is_collection) {\n                reject(localize('Remote blocks to load must be a collection.'));\n            }\n\n            addLoaderBlocksFirst(xml)\n                .then(() => {\n                    Array.from(xml.children).forEach(el_block => addDomAsBlock(el_block, block));\n                    resolve();\n                })\n                .catch(() => {\n                    reject();\n                });\n        } catch (e) {\n            reject(localize('Unable to load the block file.'));\n        }\n    });\n};\n\nexport const loadBlocksFromRemote = block => {\n    // eslint-disable-next-line consistent-return\n    return new Promise((resolve, reject) => {\n        let url = block.getFieldValue('URL');\n\n        if (url.indexOf('http') === -1) {\n            url = `http://${url}`;\n        }\n\n        const url_pattern = /[^/]*\\.[a-zA-Z]{3}$/;\n        const has_possible_missing_index_xml = url.slice(-1)[0] === '/';\n\n        if (!url.match(url_pattern) && !has_possible_missing_index_xml) {\n            return reject(localize('Target must be an XML file'));\n        }\n\n        if (has_possible_missing_index_xml) {\n            url += 'index.xml';\n        }\n\n        if (block.isKnownUrl(url)) {\n            block.setDisabled(true);\n            return reject(localize('This URL is already loaded'));\n        }\n\n        const onFetchError = () => reject(localize('An error occured while trying to load the URL'));\n\n        fetch(url)\n            .then(response => {\n                if (response.ok) {\n                    response.text().then(xml_string => {\n                        loadBlocksFromHeader(xml_string, block)\n                            .then(() => resolve(block))\n                            .catch(onFetchError);\n                    });\n                } else {\n                    onFetchError();\n                }\n            })\n            .catch(onFetchError);\n    });\n};\n\nexport const addLoaderBlocksFirst = xml => {\n    return new Promise((resolve, reject) => {\n        const promises = [];\n\n        Array.from(xml.children).forEach(el_block => {\n            const block_type = el_block.getAttribute('type');\n\n            if (block_type === 'loader') {\n                el_block.remove();\n                const loader = Blockly.Xml.domToBlock(el_block, Blockly.derivWorkspace);\n                promises.push(loadBlocksFromRemote(loader)); // eslint-disable-line no-use-before-define\n            }\n        });\n\n        if (promises.length) {\n            Promise.all(promises).then(resolve, reject);\n        } else {\n            resolve([]);\n        }\n    });\n};\n\nexport const addDomAsBlock = (el_block, parent_block = null) => {\n    if (el_block.tagName.toLowerCase() === 'variables') {\n        return Blockly.Xml.domToVariables(el_block, Blockly.derivWorkspace);\n    }\n\n    const block_type = el_block.getAttribute('type');\n    const block_conversion = new BlockConversion();\n    const block_xml = Blockly.Xml.blockToDom(block_conversion.convertBlockNode(el_block));\n\n    // Fix legacy Blockly `varid` attribute.\n    Array.from(block_xml.getElementsByTagName('arg')).forEach(el => {\n        if (el.hasAttribute('varid')) {\n            el.setAttribute('varId', el.getAttribute('varid'));\n        }\n    });\n\n    removeLimitedBlocks(Blockly.derivWorkspace, block_type);\n\n    const block = Blockly.Xml.domToBlock(block_xml, Blockly.derivWorkspace);\n\n    if (parent_block) {\n        parent_block.blocks_added_by_me.push(block);\n    }\n\n    return block;\n};\n\nconst getAllRequiredBlocks = (workspace, required_block_types) => {\n    return workspace.getAllBlocks().filter(block => {\n        if (required_block_types.includes(block.type)) {\n            return (\n                (block.childBlocks_.length === 0 && required_block_types.includes(block.category_)) ||\n                block.parentBlock_ === null\n            );\n        }\n    });\n};\n\nconst getMissingBlocks = (workspace, required_block_types) => {\n    return required_block_types.filter(blockType => {\n        return !workspace.getAllBlocks().some(block => block.type === blockType);\n    });\n};\n\nconst getDisabledBlocks = required_blocks_check => {\n    return required_blocks_check.filter(block => {\n        const hasDisabledChild =\n            block.childBlocks_ && block.childBlocks_.some(childBlock => childBlock.disabled === true);\n        return block.disabled === true || hasDisabledChild;\n    });\n};\n\nconst throwNewErrorMessage = (error_blocks, key) => {\n    return error_blocks.forEach(block => {\n        if (key === 'misplaced' && block) globalObserver.emit('ui.log.error', error_message_map[block?.type]?.[key]);\n        else if (key === 'missing' && block) globalObserver.emit('ui.log.error', error_message_map[block]?.[key]);\n        else if (key === 'disabled' && block) {\n            let parent_block_error = false;\n            const parent_error_message = error_message_map[block.type]?.[key];\n            if (block.disabled && parent_error_message) {\n                globalObserver.emit('ui.log.error', parent_error_message);\n                parent_block_error = true;\n            } else if (!parent_block_error && block.childBlocks_) {\n                block.childBlocks_.forEach(childBlock => {\n                    const child_error_message = error_message_map[childBlock.type]?.[key];\n                    if (child_error_message) globalObserver.emit('ui.log.error', child_error_message);\n                });\n            }\n        }\n    });\n};\n\nexport const isAllRequiredBlocksEnabled = workspace => {\n    if (!workspace) return false;\n\n    const mandatory_trade_option_block = getSelectedTradeType(workspace);\n    const { mandatoryMainBlocks } = config;\n    const required_block_types = [mandatory_trade_option_block, ...mandatoryMainBlocks];\n\n    const required_blocks_check = getAllRequiredBlocks(workspace, required_block_types);\n\n    const missing_blocks = getMissingBlocks(workspace, required_block_types);\n    const disabled_blocks = getDisabledBlocks(required_blocks_check);\n\n    if (missing_blocks) throwNewErrorMessage(missing_blocks, 'missing');\n    if (disabled_blocks) throwNewErrorMessage(disabled_blocks, 'disabled');\n\n    const error_blocks = [...missing_blocks, ...disabled_blocks];\n    const blocks_required = error_blocks.length === 0;\n\n    return blocks_required;\n};\n\nexport const scrollWorkspace = (workspace, scroll_amount, is_horizontal, is_chronological) => {\n    const ws_metrics = workspace.getMetrics();\n    let scroll_x = ws_metrics.viewLeft - ws_metrics.scrollLeft;\n    const delta_y = ws_metrics.viewTop - ws_metrics.scrollTop;\n    let scroll_y = delta_y;\n    if (is_horizontal) {\n        scroll_x += is_chronological ? scroll_amount : -scroll_amount;\n        if (!DBotStore.instance.is_mobile) {\n            scroll_y += -20;\n        }\n    } else {\n        scroll_x += -20;\n        scroll_y += is_chronological ? scroll_amount : -scroll_amount;\n    }\n    const is_RTL = workspace.RTL;\n    if (is_RTL) {\n        // For RTL scroll we need to adjust the scroll amount\n        scroll_x = scroll_amount;\n        // Adjust scroll_y to prevent scrolling vertically on every render\n        const toolbox_top = document.getElementById('gtm-toolbox')?.getBoundingClientRect()?.top;\n        const block_canvas_rect_top = workspace.svgBlockCanvas_?.getBoundingClientRect()?.top;\n        if (block_canvas_rect_top > toolbox_top) {\n            scroll_y = delta_y;\n        }\n\n        /* NOTE: This was done for mobile view since \n        when we try to calculate the scroll amount for RTL,\n        we need to realign the scroll to(0, 0) for the workspace.\n        Then, from the width of the canvas, we need to subtract the width of the block. \n        To Make the block visible in the view width\n        */\n\n        if (window.innerWidth < 768) {\n            workspace?.scrollbar?.set(0, scroll_y);\n            const calc_scroll =\n                workspace.svgBlockCanvas_?.getBoundingClientRect().width -\n                workspace.svgBlockCanvas_?.getBoundingClientRect().left +\n                60;\n            workspace?.scrollbar?.set(calc_scroll, scroll_y);\n            return;\n        }\n    }\n    workspace?.scrollbar?.set(scroll_x, scroll_y);\n};\n\n/**\n * Sets the Blockly.Events.group_ and executes the passed callBackFn. Mainly\n * used to ensure undo/redo actions are executed correctly.\n * @param {Boolean} use_existing_group Uses the existing event group if true.\n * @param {Function} callbackFn Logic to execute as part of this event group.\n */\nexport const runGroupedEvents = (use_existing_group, callbackFn, opt_group_name) => {\n    const group = (use_existing_group && Blockly.Events.getGroup()) || opt_group_name || true;\n\n    Blockly.Events.setGroup(group);\n    callbackFn();\n\n    if (!use_existing_group) {\n        Blockly.Events.setGroup(false);\n    }\n};\n\n/**\n * Sets the recordUndo flag to \"false\" globally, this will ensure any events\n * happening as part of the callbackFn logic cannot be undone.\n * @param {*} callbackFn Logic to execute as part of this event group.\n */\nexport const runIrreversibleEvents = callbackFn => {\n    const { recordUndo } = Blockly.Events;\n    Blockly.Events.setRecordUndo(false);\n\n    callbackFn();\n\n    Blockly.Events.setRecordUndo(recordUndo ?? true);\n};\n\n/**\n * Disables Blockly Events globally and runs the passed callbackFn.\n * (Preference should be given to runIrreversibleEvents).\n * @param {*} callbackFn Logic to completely hide from Blockly\n */\nexport const runInvisibleEvents = callbackFn => {\n    Blockly.Events.disable();\n    callbackFn();\n    Blockly.Events.enable();\n};\n\nexport const updateDisabledBlocks = (workspace, event) => {\n    if (event.type === Blockly.Events.BLOCK_DRAG && !event.isStart) {\n        workspace.getAllBlocks().forEach(block => {\n            if (!block.getParent() || block.is_user_disabled_state) {\n                return;\n            }\n\n            const restricted_parents = block.restricted_parents || [];\n            if (restricted_parents.length === 0) {\n                return;\n            }\n\n            const should_disable = !restricted_parents.some(restricted_parent =>\n                block.isDescendantOf(restricted_parent)\n            );\n\n            runGroupedEvents(\n                true,\n                () => {\n                    block.setDisabled(should_disable);\n                },\n                event.group\n            );\n\n            Blockly.Events.setGroup(false);\n        });\n    }\n};\n\nexport const emptyTextValidator = input => {\n    return !input || input === \"''\";\n};\n\n/* eslint-disable no-bitwise */\nexport const isDarkRgbColour = string_rgb => {\n    const values = string_rgb.substring(1);\n    const rgb = parseInt(values, 16);\n    const red = (rgb >> 16) & 0xff;\n    const green = (rgb >> 8) & 0xff;\n    const blue = (rgb >> 0) & 0xff;\n    const luma = 0.2126 * red + 0.7152 * green + 0.0722 * blue;\n    return luma < 160;\n};\n/* eslint-enable */\n\nexport const appendCollapsedMainBlocksFields = block_instance => {\n    try {\n        // Return if the block is not collapsed\n        if (!block_instance?.collapsed_) return;\n        const type_of_block = block_instance?.getField(block_instance.type);\n        if (type_of_block) return;\n\n        const [block_image, block_name] = block_instance?.inputList[0]?.fieldRow.map(field => field.value_);\n        const collapsed_field = block_instance?.getField(Blockly.constants.COLLAPSED_FIELD_NAME);\n        const collapsed_input = block_instance?.getInput(Blockly.constants.COLLAPSED_INPUT_NAME);\n\n        // Initialize the icon_added property if not already done\n        if (collapsed_input && collapsed_field) {\n            // Add the image and label fields\n            collapsed_input.appendField(new Blockly.FieldImage(block_image, 25, 25, '', ''));\n            collapsed_input.appendField(new Blockly.FieldLabel(block_name, 'blocklyTextRootBlockHeaderCollapsed'));\n\n            // Add the dropdown icon\n            const dropdown_path = `${block_instance?.workspace.options.pathToMedia}dropdown-arrow.svg`;\n            const field_expand_icon = new Blockly.FieldImage(dropdown_path, 16, 16, localize('Collapsed'), () =>\n                block_instance?.setCollapsed(false)\n            );\n            collapsed_input.appendField(field_expand_icon, block_instance.type);\n            collapsed_input.sourceBlock.width = 300;\n            // hide the default collapsed field generated by Blockly\n            collapsed_field.setVisible(false);\n        }\n    } catch (e) {\n        globalObserver.emit('ui.log.error', e);\n    }\n};\n\nexport const appendCollapsedProcedureBlocksFields = instance => {\n    const collapsed_input = instance.getInput('_TEMP_COLLAPSED_INPUT');\n    if (collapsed_input && instance.collapsed_ && !collapsed_input.icon_added) {\n        collapsed_input.icon_added = true;\n        const dropdown_path = `${instance.workspace.options.pathToMedia}dropdown-arrow.svg`;\n        const field_expand_icon = new Blockly.FieldImage(dropdown_path, 16, 16, localize('Collapsed'), () =>\n            instance.setCollapsed(false)\n        );\n        const function_name = instance.getFieldValue('NAME');\n        const args = ` (${instance?.arguments?.join(', ')})`;\n\n        collapsed_input\n            .appendField(new Blockly.FieldLabel(localize('function'), ''))\n            .appendField(new Blockly.FieldLabel(function_name + args, 'header__title'))\n            .appendField(field_expand_icon);\n\n        const remove_last_input = dummy_input => {\n            const tmp_array = dummy_input.fieldRow;\n            tmp_array[0]?.setVisible(false);\n            tmp_array[0]?.forceRerender();\n        };\n        remove_last_input(collapsed_input);\n    }\n};\n\nconst downloadBlock = () => {\n    const xml_block = Blockly?.getSelected()?.svgGroup_;\n    const xml_text = Blockly.Xml.domToPrettyText(xml_block);\n    saveAs({ data: xml_text, type: 'text/xml;charset=utf-8', filename: 'block.xml' });\n};\n\nconst download_option = {\n    text: localize('Download Block'),\n    enabled: true,\n    callback: downloadBlock,\n};\n\nexport const excludeOptionFromContextMenu = (menu, exclude_items) => {\n    for (let i = 0; i <= menu.length - 1; i++) {\n        const menu_text = localize(menu[i].text);\n        if (exclude_items.includes(menu_text)) {\n            menu.splice(i, 1);\n        } else {\n            menu[i].text = menu_text;\n        }\n    }\n};\n\nconst common_included_items = [download_option];\n\nconst all_context_menu_options = [\n    localize('Duplicate'),\n    localize('Add Comment'),\n    localize('Remove Comment'),\n    localize('Collapse Block'),\n    localize('Expand Block'),\n    localize('Disable Block'),\n    localize('Enable Block'),\n    localize('Download Block'),\n];\n\nconst deleteBlocksLocaleText = localize('Delete Block');\nconst deleteAllBlocksLocaleText = localize('Delete All Blocks');\n\nexport const modifyContextMenu = (menu, add_new_items = []) => {\n    const include_items = [...common_included_items, ...add_new_items];\n    include_items.forEach(item => {\n        menu.push({\n            text: item.text,\n            enabled: item.enabled,\n            callback: item.callback,\n        });\n    });\n\n    for (let i = 0; i < menu.length; i++) {\n        const menu_text = menu[i].text.toLowerCase();\n        if (menu_text.includes('delete')) {\n            if (menu_text.includes('block') && !menu_text.includes('blocks')) {\n                menu[i].text = deleteBlocksLocaleText;\n            } else {\n                menu[i].text = deleteAllBlocksLocaleText;\n            }\n        } else {\n            const localized_text = localize(menu[i].text);\n            if (all_context_menu_options.includes(localized_text)) {\n                menu[i].text = localized_text;\n            }\n        }\n    }\n};\n\nexport const evaluateExpression = value => {\n    if (!value) return 'invalid_input';\n    try {\n        // eslint-disable-next-line no-new-func\n        const result = new Function(`return ${value.trim()}`)();\n        return isNaN(result) ? 'invalid_input' : result;\n    } catch (e) {\n        return 'invalid_input';\n    }\n};\n\nexport const setCurrency = block_instance => {\n    const currency_field = block_instance.getField('CURRENCY_LIST');\n    const { currency } = DBotStore.instance.client;\n    currency_field?.setValue(getCurrencyDisplayCode(currency));\n};\n","import { localize } from '@deriv/translations';\nimport PendingPromise from '../../utils/pending-promise';\nimport { config } from '../../constants/config';\n\nexport default class ActiveSymbols {\n    constructor(ws, trading_times) {\n        this.active_symbols = [];\n        this.disabled_symbols = config.DISABLED_SYMBOLS;\n        this.disabled_submarkets = config.DISABLED_SUBMARKETS;\n        this.init_promise = new PendingPromise();\n        this.is_initialised = false;\n        this.processed_symbols = {};\n        this.trading_times = trading_times;\n        this.ws = ws;\n    }\n\n    async retrieveActiveSymbols(is_forced_update = false) {\n        await this.trading_times.initialise();\n\n        if (!is_forced_update && this.is_initialised) {\n            await this.init_promise;\n            return this.active_symbols;\n        }\n\n        this.is_initialised = true;\n\n        const { active_symbols } = await this.ws.authorized.activeSymbols();\n\n        this.active_symbols = active_symbols;\n        this.processed_symbols = this.processActiveSymbols();\n        this.trading_times.onMarketOpenCloseChanged = changes => {\n            Object.keys(changes).forEach(symbol_name => {\n                const symbol_obj = this.active_symbols[symbol_name];\n\n                if (symbol_obj) {\n                    symbol_obj.exchange_is_open = changes[symbol_name];\n                }\n            });\n\n            this.changes = changes;\n            this.processActiveSymbols();\n        };\n\n        this.init_promise.resolve();\n\n        return this.active_symbols;\n    }\n\n    processActiveSymbols() {\n        return this.active_symbols.reduce((processed_symbols, symbol) => {\n            if (\n                config.DISABLED_SYMBOLS.includes(symbol.symbol) ||\n                config.DISABLED_SUBMARKETS.includes(symbol.submarket)\n            ) {\n                return processed_symbols;\n            }\n\n            const isExistingValue = (object, prop) => Object.keys(object).findIndex(a => a === symbol[prop]) !== -1;\n\n            if (!isExistingValue(processed_symbols, 'market')) {\n                processed_symbols[symbol.market] = {\n                    display_name: symbol.market_display_name,\n                    submarkets: {},\n                };\n            }\n\n            const { submarkets } = processed_symbols[symbol.market];\n\n            if (!isExistingValue(submarkets, 'submarket')) {\n                submarkets[symbol.submarket] = {\n                    display_name: symbol.submarket_display_name,\n                    symbols: {},\n                };\n            }\n\n            const { symbols } = submarkets[symbol.submarket];\n\n            if (!isExistingValue(symbols, 'symbol')) {\n                symbols[symbol.symbol] = {\n                    display_name: symbol.display_name,\n                    pip_size: `${symbol.pip}`.length - 2,\n                    is_active: !symbol.is_trading_suspended && symbol.exchange_is_open,\n                };\n            }\n\n            return processed_symbols;\n        }, {});\n    }\n\n    /**\n     * Retrieves all symbols and returns an array of symbol objects consisting of symbol and their linked market + submarket.\n     * @returns {Array} Symbols and their submarkets + markets.\n     */\n    getAllSymbols(should_be_open = false) {\n        const all_symbols = [];\n\n        Object.keys(this.processed_symbols).forEach(market_name => {\n            if (should_be_open && this.isMarketClosed(market_name)) {\n                return;\n            }\n\n            const market = this.processed_symbols[market_name];\n            const { submarkets } = market;\n\n            Object.keys(submarkets).forEach(submarket_name => {\n                const submarket = submarkets[submarket_name];\n                const { symbols } = submarket;\n\n                Object.keys(symbols).forEach(symbol_name => {\n                    const symbol = symbols[symbol_name];\n\n                    all_symbols.push({\n                        market: market_name,\n                        market_display: market.display_name,\n                        submarket: submarket_name,\n                        submarket_display: submarket.display_name,\n                        symbol: symbol_name,\n                        symbol_display: symbol.display_name,\n                    });\n                });\n            });\n        });\n        this.getSymbolsForBot();\n        return all_symbols;\n    }\n\n    /**\n     *\n     * @returns {Array} Symbols and their submarkets + markets for deriv-bot\n     */\n    getSymbolsForBot() {\n        const { DISABLED } = config.QUICK_STRATEGY;\n        const symbols_for_bot = [];\n        Object.keys(this.processed_symbols).forEach(market_name => {\n            if (this.isMarketClosed(market_name)) return;\n\n            const market = this.processed_symbols[market_name];\n            const { submarkets } = market;\n\n            Object.keys(submarkets).forEach(submarket_name => {\n                if (DISABLED.SUBMARKETS.includes(submarket_name)) return;\n                const submarket = submarkets[submarket_name];\n                const { symbols } = submarket;\n\n                Object.keys(symbols).forEach(symbol_name => {\n                    if (DISABLED.SYMBOLS.includes(symbol_name)) return;\n                    const symbol = symbols[symbol_name];\n                    symbols_for_bot.push({\n                        group: submarket.display_name,\n                        text: symbol.display_name,\n                        value: symbol_name,\n                    });\n                });\n            });\n        });\n\n        return symbols_for_bot;\n    }\n\n    getMarketDropdownOptions() {\n        const market_options = [];\n\n        Object.keys(this.processed_symbols).forEach(market_name => {\n            const { display_name } = this.processed_symbols[market_name];\n            const market_display_name =\n                display_name + (this.isMarketClosed(market_name) ? ` ${localize('(Closed)')}` : '');\n            market_options.push([market_display_name, market_name]);\n        });\n\n        if (market_options.length === 0) {\n            return config.NOT_AVAILABLE_DROPDOWN_OPTIONS;\n        }\n        market_options.sort(a => (a[1] === 'synthetic_index' ? -1 : 1));\n\n        const has_closed_markets = market_options.some(market_option => this.isMarketClosed(market_option[1]));\n\n        if (has_closed_markets) {\n            const sorted_options = this.sortDropdownOptions(market_options, this.isMarketClosed);\n\n            if (this.isMarketClosed('forex')) {\n                return sorted_options.sort(a => (a[1] === 'synthetic_index' ? -1 : 1));\n            }\n\n            return sorted_options;\n        }\n\n        return market_options;\n    }\n\n    getSubmarketDropdownOptions(market) {\n        const submarket_options = [];\n        const market_obj = this.processed_symbols[market];\n\n        if (market_obj) {\n            const { submarkets } = market_obj;\n\n            Object.keys(submarkets).forEach(submarket_name => {\n                const { display_name } = submarkets[submarket_name];\n                const submarket_display_name =\n                    display_name + (this.isSubmarketClosed(submarket_name) ? ` ${localize('(Closed)')}` : '');\n                submarket_options.push([submarket_display_name, submarket_name]);\n            });\n        }\n\n        if (submarket_options.length === 0) {\n            return config.NOT_AVAILABLE_DROPDOWN_OPTIONS;\n        }\n        if (market === 'synthetic_index') {\n            submarket_options.sort(a => (a[1] === 'random_index' ? -1 : 1));\n        }\n\n        return this.sortDropdownOptions(submarket_options, this.isSubmarketClosed);\n    }\n\n    getSymbolDropdownOptions(submarket) {\n        const symbol_options = Object.keys(this.processed_symbols).reduce((accumulator, market_name) => {\n            const { submarkets } = this.processed_symbols[market_name];\n\n            Object.keys(submarkets).forEach(submarket_name => {\n                if (submarket_name === submarket) {\n                    const { symbols } = submarkets[submarket_name];\n                    Object.keys(symbols).forEach(symbol_name => {\n                        const { display_name } = symbols[symbol_name];\n                        const symbol_display_name =\n                            display_name + (this.isSymbolClosed(symbol_name) ? ` ${localize('(Closed)')}` : '');\n                        accumulator.push([symbol_display_name, symbol_name]);\n                    });\n                }\n            });\n\n            return accumulator;\n        }, []);\n\n        if (symbol_options.length === 0) {\n            return config.NOT_AVAILABLE_DROPDOWN_OPTIONS;\n        }\n\n        return this.sortDropdownOptions(symbol_options, this.isSymbolClosed);\n    }\n\n    isMarketClosed(market_name) {\n        const market = this.processed_symbols[market_name];\n\n        if (!market) {\n            return true;\n        }\n\n        return Object.keys(market.submarkets).every(submarket_name => this.isSubmarketClosed(submarket_name));\n    }\n\n    isSubmarketClosed(submarket_name) {\n        const market_name = Object.keys(this.processed_symbols).find(name => {\n            const market = this.processed_symbols[name];\n            return Object.keys(market.submarkets).includes(submarket_name);\n        });\n\n        if (!market_name) {\n            return true;\n        }\n\n        const market = this.processed_symbols[market_name];\n        const submarket = market.submarkets[submarket_name];\n\n        if (!submarket) {\n            return true;\n        }\n\n        const { symbols } = submarket;\n        return Object.keys(symbols).every(symbol_name => this.isSymbolClosed(symbol_name));\n    }\n\n    isSymbolClosed(symbol_name) {\n        return this.active_symbols.some(\n            active_symbol =>\n                active_symbol.symbol === symbol_name &&\n                (!active_symbol.exchange_is_open || active_symbol.is_trading_suspended)\n        );\n    }\n\n    sortDropdownOptions = (dropdown_options, closedFunc) => {\n        const options = [...dropdown_options];\n\n        options.sort((a, b) => {\n            const is_a_closed = closedFunc.call(this, a[1]);\n            const is_b_closed = closedFunc.call(this, b[1]);\n\n            if (is_a_closed && !is_b_closed) {\n                return 1;\n            } else if (is_a_closed === is_b_closed) {\n                return 0;\n            }\n            return -1;\n        });\n\n        return options;\n    };\n}\n","import { observer as globalObserver } from '../../utils/observer';\nimport { doUntilDone, socket_state } from '../tradeEngine/utils/helpers';\nimport { generateDerivApiInstance, getLoginId, getToken } from './appId';\n\nclass APIBase {\n    api;\n    token;\n    account_id;\n    pip_sizes = {};\n    account_info = {};\n    is_running = false;\n    subscriptions = [];\n    time_interval = null;\n    has_activeSymbols = false;\n    is_stopping = false;\n\n    async init(force_update = false) {\n        if (getLoginId()) {\n            this.toggleRunButton(true);\n            if (force_update) this.terminate();\n            this.api = generateDerivApiInstance();\n            this.initEventListeners();\n            await this.authorizeAndSubscribe();\n            if (this.time_interval) clearInterval(this.time_interval);\n            this.time_interval = null;\n            this.getTime();\n        }\n    }\n\n    getConnectionStatus() {\n        if (this.api?.connection) {\n            const ready_state = this.api.connection.readyState;\n            return socket_state[ready_state] || 'Unknown';\n        }\n        return 'Socket not initialized';\n    }\n\n    terminate() {\n        // eslint-disable-next-line no-console\n        console.log('connection terminated');\n        if (this.api) this.api.disconnect();\n    }\n\n    initEventListeners() {\n        if (window) {\n            window.addEventListener('online', this.reconnectIfNotConnected);\n            window.addEventListener('focus', this.reconnectIfNotConnected);\n        }\n    }\n\n    async createNewInstance(account_id) {\n        if (this.account_id !== account_id) {\n            await this.init(true);\n        }\n    }\n\n    reconnectIfNotConnected = () => {\n        // eslint-disable-next-line no-console\n        console.log('connection state: ', this.api.connection.readyState);\n        if (this.api.connection.readyState !== 1) {\n            // eslint-disable-next-line no-console\n            console.log('Info: Connection to the server was closed, trying to reconnect.');\n            this.init();\n        }\n    };\n\n    async authorizeAndSubscribe() {\n        const { token, account_id } = getToken();\n        if (token) {\n            this.token = token;\n            this.account_id = account_id;\n            this.api.authorize(this.token);\n            try {\n                const { authorize } = await this.api.expectResponse('authorize');\n                if (this.has_activeSymbols) {\n                    this.toggleRunButton(false);\n                } else {\n                    this.getActiveSymbols();\n                }\n                await this.subscribe();\n                this.account_info = authorize;\n            } catch (e) {\n                globalObserver.emit('Error', e);\n            }\n        }\n    }\n\n    async subscribe() {\n        await Promise.all([\n            doUntilDone(() => this.api.send({ balance: 1, subscribe: 1 })),\n            doUntilDone(() => this.api.send({ transaction: 1, subscribe: 1 })),\n            doUntilDone(() => this.api.send({ proposal_open_contract: 1, subscribe: 1 })),\n        ]);\n    }\n\n    getActiveSymbols = async () => {\n        doUntilDone(() => this.api.send({ active_symbols: 'brief' })).then(({ active_symbols = [] }) => {\n            const pip_sizes = {};\n            if (active_symbols.length) this.has_activeSymbols = true;\n            active_symbols.forEach(({ symbol, pip }) => {\n                pip_sizes[symbol] = +(+pip).toExponential().substring(3);\n            });\n            this.pip_sizes = pip_sizes;\n            this.toggleRunButton(false);\n        });\n    };\n\n    toggleRunButton = toggle => {\n        const run_button = document.querySelector('#db-animation__run-button');\n        if (!run_button) return;\n        run_button.disabled = toggle;\n    };\n\n    setIsRunning(toggle = false) {\n        this.is_running = toggle;\n    }\n\n    pushSubscription(subscription) {\n        this.subscriptions.push(subscription);\n    }\n\n    clearSubscriptions() {\n        this.subscriptions.forEach(s => s.unsubscribe());\n        this.subscriptions = [];\n\n        // Resetting timeout resolvers\n        const global_timeouts = globalObserver.getState('global_timeouts') ?? [];\n\n        global_timeouts.forEach((_, i) => {\n            clearTimeout(i);\n        });\n    }\n\n    getTime() {\n        if (!this.time_interval) {\n            this.time_interval = setInterval(() => {\n                this.api.send({ time: 1 });\n            }, 30000);\n        }\n    }\n}\n\nexport const api_base = new APIBase();\n","export default class AccountLimits {\n    constructor(store) {\n        this.ws = store.ws;\n    }\n    getStakePayoutLimits(currency = 'AUD', landing_company_shortcode = 'svg', selected_market) {\n        return this.ws\n            .send({\n                landing_company_details: landing_company_shortcode,\n            })\n            .then(landing_company => {\n                const currency_config = landing_company?.landing_company_details?.currency_config[selected_market];\n                return currency_config ? currency_config[currency] : {};\n            });\n    }\n}\n","import TradingTimes from './trading-times';\nimport ContractsFor from './contracts-for';\nimport ActiveSymbols from './active-symbols';\nimport AccountLimits from './account-limits';\n\nclass ApiHelpers {\n    static singleton = null;\n\n    constructor(api_helpers_store) {\n        this.trading_times = new TradingTimes(api_helpers_store);\n        this.contracts_for = new ContractsFor(api_helpers_store);\n        this.active_symbols = new ActiveSymbols(api_helpers_store.ws, this.trading_times);\n        this.account_limits = new AccountLimits(api_helpers_store);\n    }\n\n    static setInstance(api_helpers_store) {\n        if (!this.singleton) {\n            this.singleton = new ApiHelpers(api_helpers_store);\n        }\n\n        return this.instance;\n    }\n\n    static get instance() {\n        return this.singleton;\n    }\n}\n\nexport default ApiHelpers;\n","export const REQUESTS = [\n    'active_symbols',\n    'authorize',\n    'balance',\n    'buy',\n    'proposal',\n    'proposal_open_contract',\n    'transaction',\n    'ticks_history',\n    'history',\n];\n\nclass APIMiddleware {\n    constructor(config) {\n        this.config = config;\n        this.debounced_calls = {};\n    }\n\n    getRequestType = request => {\n        let req_type;\n        REQUESTS.forEach(type => {\n            if (type in request && !req_type) req_type = type;\n        });\n\n        return req_type;\n    };\n\n    defineMeasure = res_type => {\n        if (res_type) {\n            let measure;\n            if (res_type === 'history') {\n                performance.mark('ticks_history_end');\n                measure = performance.measure('ticks_history', 'ticks_history_start', 'ticks_history_end');\n            } else {\n                performance.mark(`${res_type}_end`);\n                measure = performance.measure(`${res_type}`, `${res_type}_start`, `${res_type}_end`);\n            }\n            return (measure.startTimeDate = new Date(Date.now() - measure.startTime));\n        }\n        return false;\n    };\n\n    sendIsCalled = ({ response_promise, args: [request] }) => {\n        const req_type = this.getRequestType(request);\n        if (req_type) performance.mark(`${req_type}_start`);\n        response_promise\n            .then(res => {\n                const res_type = this.getRequestType(res);\n                if (res_type) {\n                    this.defineMeasure(res_type);\n                }\n            })\n            .catch(() => {});\n        return response_promise;\n    };\n}\n\nexport default APIMiddleware;\n","import DerivAPIBasic from '@deriv/deriv-api/dist/DerivAPIBasic';\nimport { getAppId, getSocketURL, website_name } from '@deriv/shared';\nimport { getLanguage } from '@deriv/translations';\nimport APIMiddleware from './api-middleware';\n\nexport const generateDerivApiInstance = () => {\n    const socket_url = `wss://${getSocketURL()}/websockets/v3?app_id=${getAppId()}&l=${getLanguage()}&brand=${website_name.toLowerCase()}`;\n    const deriv_socket = new WebSocket(socket_url);\n    const deriv_api = new DerivAPIBasic({\n        connection: deriv_socket,\n        middleware: new APIMiddleware({}),\n    });\n    return deriv_api;\n};\n\nexport const getLoginId = () => {\n    const login_id = localStorage.getItem('active_loginid');\n    if (login_id && login_id !== 'null') return login_id;\n    return null;\n};\n\nexport const getToken = () => {\n    const active_loginid = getLoginId();\n    const client_accounts = JSON.parse(localStorage.getItem('client.accounts')) || undefined;\n    const active_account = (client_accounts && client_accounts[active_loginid]) || {};\n    return {\n        token: active_account?.token || undefined,\n        account_id: active_loginid || undefined,\n    };\n};\n","import { config } from '../../constants/config';\nimport PendingPromise from '../../utils/pending-promise';\n\nexport default class ContractsFor {\n    constructor({ ws, server_time }) {\n        this.cache_age_in_min = 10;\n        this.contracts_for = {};\n        this.ws = ws;\n        this.server_time = server_time;\n        // Below you can disable specific trade types and trade type categories, you may specify\n        // market, submarket, symbol, trade_type, and trade_type_category. If one of\n        // the props is left omitted, the rule applies to each of the values of the omitted prop.\n        // e.g. if market omitted, rule will apply to all markets.\n        this.disabled_options = [\n            {\n                submarket: 'forex_basket',\n                trade_type: 'higherlower',\n            },\n            {\n                submarket: 'minor_pairs',\n                trade_type: 'higherlower',\n            },\n            {\n                submarket: 'metals',\n                trade_type: 'callputequal',\n            },\n            {\n                market: 'indices',\n                trade_type: 'callputequal',\n            },\n            {\n                symbol: 'OTC_AS51',\n                trade_type_category: 'inout',\n            },\n            { trade_type_category: 'lookback' },\n            { trade_type_category: 'callputspread' },\n        ];\n        this.retrieving_contracts_for = {};\n    }\n\n    async getBarriers(symbol, trade_type, duration, barrier_types) {\n        const barriers = { values: [] };\n\n        if (!config.BARRIER_TRADE_TYPES.includes(trade_type)) {\n            return barriers;\n        }\n\n        const barrier_props = ['high_barrier', 'low_barrier'];\n        const contracts_for_category = await this.getContractsByTradeType(symbol, trade_type);\n        const durations = await this.getDurations(symbol, trade_type, false);\n        const offset_regexp = new RegExp('^[-|+]([0-9]+.[0-9]+)$');\n        const isOffset = input => input && offset_regexp.test(input.toString());\n\n        let has_absolute_default_value = true;\n\n        if (contracts_for_category.length > 0) {\n            barrier_types.forEach((barrier_type, index) => {\n                const has_selected_offset_type = ['+', '-'].includes(barrier_type);\n                const real_trade_type = this.getContractCategoryByTradeType(trade_type);\n\n                let contract = contracts_for_category.find(c => {\n                    const { BARRIER_CATEGORIES } = config;\n                    const barrier_category = Object.keys(BARRIER_CATEGORIES).find(b =>\n                        BARRIER_CATEGORIES[b].includes(trade_type)\n                    );\n\n                    const has_matching_category = c.contract_category === real_trade_type;\n                    const has_matching_duration = durations.findIndex(d => d.unit === duration) !== -1;\n                    const has_matching_barrier_category = c.barrier_category === barrier_category;\n                    const has_matching_barrier_type =\n                        // Match offset type barriers.\n                        (has_selected_offset_type && isOffset(c.barrier || c[barrier_props[index]])) ||\n                        // Match absolute type barriers.\n                        (!has_selected_offset_type && !isOffset(c.barrier || c[barrier_props[index]]));\n\n                    return (\n                        has_matching_category &&\n                        has_matching_duration &&\n                        has_matching_barrier_category &&\n                        has_matching_barrier_type\n                    );\n                });\n\n                // Fallback to smallest available barriers if no contract could be found.\n                if (!contract) {\n                    contract = contracts_for_category\n                        // Retrieve contracts with barriers.\n                        .filter(c => c.barrier || c.high_barrier)\n                        // Get contract with smallest barriers.\n                        .sort((a, b) => {\n                            const c = a.barrier || a.high_barrier;\n                            const d = b.barrier || b.high_barrier;\n                            return parseFloat(c) - parseFloat(d);\n                        })\n                        .shift();\n\n                    if (contract && !has_selected_offset_type) {\n                        has_absolute_default_value = false;\n                    }\n                }\n\n                if (contract) {\n                    const barrier_prop_name = contract.barriers === 1 ? 'barrier' : barrier_props[index];\n\n                    if (contract[barrier_prop_name]) {\n                        const barrier_match = `${contract[barrier_prop_name]}`.match(offset_regexp);\n                        barriers.values[index] = barrier_match ? barrier_match[1] : contract[barrier_prop_name];\n                    }\n\n                    Object.assign(barriers, {\n                        allow_both_types:\n                            ['intraday', 'tick'].includes(contract.expiry_type) &&\n                            isOffset(contract[barrier_prop_name]),\n                        allow_absolute_type: barrier_type === 'absolute' && !isOffset(contract[barrier_prop_name]),\n                    });\n\n                    // Finish this loop prematurely if we only have a single barrier.\n                    if (contract.barriers === 1) {\n                        barrier_types.splice(index + 1, 1);\n                    }\n                }\n            });\n\n            if (!has_absolute_default_value) {\n                barriers.values = barriers.values.map(() => false);\n            } else if (\n                barriers.values.length === 2 &&\n                barrier_types.every(barrier_type => barrier_type === barrier_types[0]) &&\n                barriers.values.every(barrier => barrier === barriers.values[0])\n            ) {\n                barriers.values[1] = (barriers.values[0] * 0.95).toFixed(1);\n            }\n        }\n\n        return barriers;\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    getContractCategoryByTradeType(trade_type) {\n        const { TRADE_TYPE_TO_CONTRACT_CATEGORY_MAPPING } = config;\n\n        return (\n            Object.keys(TRADE_TYPE_TO_CONTRACT_CATEGORY_MAPPING).find(category =>\n                TRADE_TYPE_TO_CONTRACT_CATEGORY_MAPPING[category].includes(trade_type)\n            ) || trade_type\n        );\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    getTradeTypeCategoryByTradeType(trade_type) {\n        const { TRADE_TYPE_CATEGORIES } = config;\n        const trade_type_category = Object.keys(TRADE_TYPE_CATEGORIES).find(t =>\n            TRADE_TYPE_CATEGORIES[t].includes(trade_type)\n        );\n\n        return trade_type_category || trade_type;\n    }\n\n    getTradeTypeCategoryNameByTradeType(trade_type) {\n        const { TRADE_TYPE_CATEGORY_NAMES } = config;\n        const trade_type_category = this.getTradeTypeCategoryByTradeType(trade_type);\n\n        return TRADE_TYPE_CATEGORY_NAMES[trade_type_category];\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    getBarrierCategoryByTradeType(trade_type) {\n        const { BARRIER_CATEGORIES } = config;\n        return Object.keys(BARRIER_CATEGORIES).find(barrier_category =>\n            BARRIER_CATEGORIES[barrier_category].includes(trade_type)\n        );\n    }\n\n    async getContractsByTradeType(symbol, trade_type) {\n        const contracts = await this.getContractsFor(symbol);\n        const contract_category = this.getContractCategoryByTradeType(trade_type);\n        const barrier_category = this.getBarrierCategoryByTradeType(trade_type);\n\n        return contracts.filter(contract => {\n            const has_matching_category = contract.contract_category === contract_category;\n            const has_matching_barrier = contract.barrier_category === barrier_category;\n\n            return has_matching_category && has_matching_barrier;\n        });\n    }\n\n    async getContractsFor(symbol) {\n        if (!symbol || symbol === 'na') {\n            return [];\n        }\n\n        const getContractsForFromApi = async () => {\n            if (this.retrieving_contracts_for[symbol]) {\n                await this.retrieving_contracts_for[symbol];\n                return this.contracts_for[symbol].contracts;\n            }\n\n            this.retrieving_contracts_for[symbol] = new PendingPromise();\n            const response = await this.ws.send({ contracts_for: symbol });\n\n            if (response.error) {\n                return [];\n            }\n\n            const {\n                contracts_for: { available: contracts },\n            } = response;\n\n            // We don't offer forward-starting contracts in bot.\n            const filtered_contracts = contracts.filter(c => c.start_type !== 'forward');\n\n            this.contracts_for[symbol] = {\n                contracts: filtered_contracts,\n                timestamp: this.server_time.unix(),\n            };\n\n            this.retrieving_contracts_for[symbol].resolve();\n            delete this.retrieving_contracts_for[symbol];\n\n            return filtered_contracts;\n        };\n\n        if (this.contracts_for[symbol]) {\n            const { contracts, timestamp } = this.contracts_for[symbol];\n            const is_expired = this.server_time.unix() - timestamp > this.cache_age_in_min * 60;\n\n            if (is_expired) {\n                getContractsForFromApi();\n            }\n\n            return contracts;\n        }\n\n        return getContractsForFromApi();\n    }\n\n    async getDurations(symbol, trade_type, convert_day_to_hours = true) {\n        if (trade_type === 'multiplier' || trade_type === 'accumulator') {\n            return [];\n        }\n\n        const contracts = await this.getContractsFor(symbol);\n        const { NOT_AVAILABLE_DURATIONS, DEFAULT_DURATION_DROPDOWN_OPTIONS } = config;\n\n        if (contracts.length === 0) {\n            return NOT_AVAILABLE_DURATIONS;\n        }\n\n        const contracts_for_category = await this.getContractsByTradeType(symbol, trade_type);\n        const durations = [];\n        const getDurationIndex = input =>\n            DEFAULT_DURATION_DROPDOWN_OPTIONS.findIndex(d => d[1] === input.replace(/\\d+/g, ''));\n        // convert 'duration' to 'unit_to_convert' e.g : convertDuration('10h', 's') will return 10*60*60s\n        const convertDuration = (duration, unit_to_convert) => {\n            const duration_value = duration.replace(/\\D/g, '');\n            const duration_index = getDurationIndex(duration);\n            const target_index = DEFAULT_DURATION_DROPDOWN_OPTIONS.findIndex(\n                default_duration => default_duration[1] === unit_to_convert\n            );\n\n            let converted_duration = parseInt(duration_value);\n\n            DEFAULT_DURATION_DROPDOWN_OPTIONS.slice(target_index + 1, duration_index + 1)\n                .reverse()\n                .forEach(default_duration => {\n                    switch (default_duration[1]) {\n                        case 'm':\n                        case 'h':\n                            converted_duration *= 60;\n                            break;\n                        case 'd':\n                            converted_duration *= 24;\n                            break;\n                        default:\n                            break;\n                    }\n                });\n\n            return converted_duration;\n        };\n\n        contracts_for_category.forEach(contract => {\n            if (!contract.min_contract_duration || !contract.max_contract_duration) {\n                return;\n            }\n\n            const start_index = getDurationIndex(contract.min_contract_duration);\n            const end_index = getDurationIndex(\n                contract.max_contract_duration === '1d' && convert_day_to_hours ? '24h' : contract.max_contract_duration\n            );\n\n            DEFAULT_DURATION_DROPDOWN_OPTIONS.slice(start_index, end_index + 1).forEach((default_duration, index) => {\n                const is_existing_duration = durations.findIndex(d => d.unit === default_duration[1]) !== -1;\n\n                if (!is_existing_duration) {\n                    durations.push({\n                        display: default_duration[0],\n                        unit: default_duration[1],\n                        min: index === 0 ? parseInt(contract.min_contract_duration.replace(/\\D/g, '')) : 1,\n                        max: convertDuration(contract.max_contract_duration, default_duration[1]),\n                    });\n                }\n            });\n        });\n\n        // If only intraday contracts available, remove day durations\n        if (contracts_for_category.every(contract => contract.expiry_type === 'intraday')) {\n            const day_duration_index = durations.findIndex(d => d[1] === 'd');\n\n            if (day_duration_index !== -1) {\n                durations.splice(day_duration_index, 1);\n            }\n        }\n\n        if (durations.length === 0) {\n            return NOT_AVAILABLE_DURATIONS;\n        }\n\n        // Maintain order based on duration unit\n        return durations.sort((a, b) => getDurationIndex(a.unit) - getDurationIndex(b.unit));\n    }\n\n    async getPredictionRange(symbol, trade_type) {\n        const contracts = await this.getContractsByTradeType(symbol, trade_type);\n        const contract_category = this.getContractCategoryByTradeType(trade_type);\n        const prediction_range = [];\n        const { DIGIT_CATEGORIES, opposites } = config;\n\n        if (DIGIT_CATEGORIES.includes(contract_category) && trade_type !== 'evenodd') {\n            const contract = contracts.find(c => {\n                const categories = Object.keys(opposites);\n\n                return categories.some(category =>\n                    opposites[category].map(subcategory => Object.keys(subcategory)[0]).includes(c.contract_type)\n                );\n            });\n\n            if (contract && contract.last_digit_range) {\n                prediction_range.push(...contract.last_digit_range);\n            } else {\n                prediction_range.push(1, 2, 3, 4, 5, 6, 7, 8);\n            }\n        }\n\n        return prediction_range;\n    }\n\n    getAccumulationRange = async () => {\n        return [0.01, 0.02, 0.03, 0.04, 0.05];\n    };\n\n    async getMultiplierRange(symbol, trade_type) {\n        const contracts = await this.getContractsByTradeType(symbol, trade_type);\n        const multiplier_range = [];\n        const { opposites } = config;\n\n        const contract = contracts.find(c => {\n            return Object.keys(opposites).some(category => {\n                return opposites[category].map(subcategory => Object.keys(subcategory)[0]).includes(c.contract_type);\n            });\n        });\n\n        if (contract?.multiplier_range) {\n            multiplier_range.push(...contract.multiplier_range);\n        }\n\n        return multiplier_range;\n    }\n\n    async getMarketBySymbol(symbol) {\n        const contracts = await this.getContractsFor(symbol);\n\n        if (!contracts.length) {\n            return 'na';\n        }\n\n        return contracts[0].market;\n    }\n\n    async getSubmarketBySymbol(symbol) {\n        const contracts = await this.getContractsFor(symbol);\n\n        if (!contracts.length) {\n            return 'na';\n        }\n\n        return contracts[0].submarket;\n    }\n\n    async getGroupedTradeTypes(symbol) {\n        const contracts = await this.getContractsFor(symbol);\n        const trade_type_options = {};\n\n        for (let i = 0; i < contracts.length; i++) {\n            const market = contracts[i].market;\n            const submarket = contracts[i].submarket;\n            const trade_type_category = this.getTradeTypeCategoryByTradeType(contracts[i].contract_category);\n            const trade_type_category_name = this.getTradeTypeCategoryNameByTradeType(contracts[i].contract_category);\n            // eslint-disable-next-line no-await-in-loop\n            const trade_types = await this.getTradeTypeByTradeCategory(market, submarket, symbol, trade_type_category);\n\n            if (trade_type_category_name) {\n                const is_disabled = this.isDisabledOption({\n                    market,\n                    submarket,\n                    symbol,\n                    trade_type_category,\n                });\n\n                if (!is_disabled) {\n                    trade_type_options[trade_type_category_name] = trade_types;\n                }\n            }\n        }\n\n        return trade_type_options;\n    }\n\n    async getTradeTypeByTradeCategory(market, submarket, symbol, trade_type_category) {\n        const { NOT_AVAILABLE_DURATIONS, TRADE_TYPE_CATEGORIES, opposites } = config;\n        const subcategories = TRADE_TYPE_CATEGORIES[trade_type_category];\n        const dropdown_options = [];\n\n        if (subcategories && subcategories.length) {\n            for (let i = 0; i < subcategories.length; i++) {\n                const trade_type = subcategories[i];\n                const durations = await this.getDurations(symbol, trade_type); // eslint-disable-line no-await-in-loop\n                const has_durations = JSON.stringify(durations) !== JSON.stringify(NOT_AVAILABLE_DURATIONS);\n                const is_disabled = this.isDisabledOption({\n                    market,\n                    submarket,\n                    symbol,\n                    trade_type_category,\n                    trade_type,\n                });\n\n                if (!is_disabled && has_durations) {\n                    const types = opposites[trade_type.toUpperCase()];\n                    const icons = [];\n                    const names = [];\n\n                    types.forEach(type => {\n                        icons.push(Object.keys(type)[0]);\n                        names.push(Object.values(type)[0]);\n                    });\n\n                    dropdown_options.push({\n                        name: names.join('/'),\n                        value: trade_type,\n                        icon: icons,\n                    });\n                }\n            }\n        }\n\n        return dropdown_options;\n    }\n\n    getHiddenCategories = trade_types => {\n        // TODO: Temporary filtering of barrier + prediction types. Should later\n        // render more inputs for these types. We should only filter out trade type\n        // categories which only feature prediction/barrier trade types. e.g.\n        // in Digits category, users can still purchase Even/Odd types.\n        let hidden_categories = 0;\n\n        for (let j = 0; j < trade_types.length; j++) {\n            const trade_type = trade_types[j];\n            const has_barrier = config.QUICK_STRATEGY.DISABLED.BARRIER_TRADE_TYPES.includes(trade_type.value);\n            const has_prediction = config.QUICK_STRATEGY.DISABLED.PREDICTION_TRADE_TYPES.includes(trade_type.value);\n\n            if (has_barrier || has_prediction) {\n                hidden_categories++;\n            }\n        }\n\n        return hidden_categories;\n    };\n\n    getTradeTypeOptions = (trade_types, trade_type_category) => {\n        const trade_type_options = [];\n        trade_types.forEach(trade_type => {\n            const has_barrier = config.QUICK_STRATEGY.DISABLED.BARRIER_TRADE_TYPES.includes(trade_type.value);\n            const has_prediction = config.QUICK_STRATEGY.DISABLED.PREDICTION_TRADE_TYPES.includes(trade_type.value);\n            const is_muliplier = ['multiplier'].includes(trade_type.value);\n\n            // TODO: Render extra inputs for barrier + prediction and multiplier types.\n            if (!has_barrier && !has_prediction && !is_muliplier) {\n                trade_type_options.push({\n                    text: trade_type.name,\n                    value: trade_type.value,\n                    group: trade_type_category[0],\n                    icon: trade_type.icon,\n                });\n            }\n        });\n        return trade_type_options;\n    };\n\n    async getTradeTypesForQuickStrategy(symbol, trade_type = '') {\n        const trade_type_options = [];\n        const filtered_trade_type_categories = [];\n        if (trade_type === 'ACCU') {\n            trade_type_options.push({\n                text: 'Buy',\n                value: 'ACCU',\n            });\n            return trade_type_options;\n        }\n        const market = await this.getMarketBySymbol(symbol);\n        const submarket = await this.getSubmarketBySymbol(symbol);\n        const trade_type_categories = await this.getTradeTypeCategories(market, submarket, symbol);\n\n        for (let i = 0; i < trade_type_categories.length; i++) {\n            const trade_type_category = trade_type_categories[i];\n            // eslint-disable-next-line no-await-in-loop\n            const trade_types = await this.getTradeTypeByTradeCategory(\n                market,\n                submarket,\n                symbol,\n                trade_type_category[1]\n            );\n\n            const hidden_categories = this.getHiddenCategories(trade_types);\n\n            if (hidden_categories < trade_types.length) {\n                filtered_trade_type_categories.push(trade_type_category);\n            }\n        }\n\n        for (let i = 0; i < filtered_trade_type_categories.length; i++) {\n            const trade_type_category = filtered_trade_type_categories[i]; // e.g. ['Up/Down', 'callput']\n            // eslint-disable-next-line no-await-in-loop\n            const trade_types = await this.getTradeTypeByTradeCategory(\n                market,\n                submarket,\n                symbol,\n                trade_type_category[1]\n            );\n\n            trade_type_options.push(...this.getTradeTypeOptions(trade_types, trade_type_category));\n        }\n        return trade_type_options;\n    }\n\n    async getTradeTypeCategories(market, submarket, symbol) {\n        const { TRADE_TYPE_CATEGORY_NAMES, NOT_AVAILABLE_DROPDOWN_OPTIONS } = config;\n        const contracts = await this.getContractsFor(symbol);\n        const trade_type_categories = [];\n\n        contracts.forEach(contract => {\n            const trade_type_category = this.getTradeTypeCategoryByTradeType(contract.contract_category);\n            const trade_type_category_name = this.getTradeTypeCategoryNameByTradeType(contract.contract_category);\n\n            if (trade_type_category_name) {\n                const is_disabled = this.isDisabledOption({\n                    market,\n                    submarket,\n                    symbol,\n                    trade_type_category,\n                });\n\n                if (!is_disabled) {\n                    const is_existing_category =\n                        trade_type_categories.findIndex(c => c[1] === trade_type_category) !== -1;\n\n                    if (!is_existing_category) {\n                        trade_type_categories.push([trade_type_category_name, trade_type_category]);\n                    }\n                }\n            }\n        });\n\n        if (trade_type_categories.length > 0) {\n            const category_names = Object.keys(TRADE_TYPE_CATEGORY_NAMES);\n\n            return trade_type_categories.sort((a, b) => {\n                const index_a = category_names.findIndex(c => c === a[1]);\n                const index_b = category_names.findIndex(c => c === b[1]);\n                return index_a - index_b;\n            });\n        }\n\n        return NOT_AVAILABLE_DROPDOWN_OPTIONS;\n    }\n\n    async getTradeTypes(market, submarket, symbol, trade_type_category) {\n        const { NOT_AVAILABLE_DURATIONS, TRADE_TYPE_CATEGORIES, opposites } = config;\n        const trade_types = [];\n        const subcategories = TRADE_TYPE_CATEGORIES[trade_type_category];\n\n        if (subcategories) {\n            for (let i = 0; i < subcategories.length; i++) {\n                const trade_type = subcategories[i];\n                const durations = await this.getDurations(symbol, trade_type); // eslint-disable-line no-await-in-loop\n                const has_durations = JSON.stringify(durations) !== JSON.stringify(NOT_AVAILABLE_DURATIONS);\n                const is_disabled = this.isDisabledOption({\n                    market,\n                    submarket,\n                    symbol,\n                    trade_type_category,\n                    trade_type,\n                });\n\n                if (!is_disabled && has_durations) {\n                    const types = opposites[trade_type.toUpperCase()];\n                    // e.g. [['Rise/Fall', 'callput']]\n                    trade_types.push([types.map(type => type[Object.keys(type)[0]]).join('/'), trade_type]);\n                }\n            }\n        }\n\n        return trade_types.length > 0 ? trade_types : config.NOT_AVAILABLE_DROPDOWN_OPTIONS;\n    }\n\n    isDisabledOption(compare_obj) {\n        return this.disabled_options.some(disabled_obj =>\n            Object.keys(disabled_obj).every(prop => compare_obj[prop] === disabled_obj[prop])\n        );\n    }\n\n    disposeCache() {\n        this.contracts_for = {};\n    }\n\n    getContractTypes = trade_type => {\n        const { opposites } = config;\n        let trade_type_value = trade_type;\n        if (trade_type_value === 'ACCU') {\n            trade_type_value = 'accumulator';\n        }\n        const categories = opposites[trade_type_value.toUpperCase()].map(opposite => ({\n            value: Object.keys(opposite)[0],\n            text: Object.values(opposite)[0],\n        }));\n        return categories;\n    };\n}\n","import PendingPromise from '../../utils/pending-promise';\n\nconst ServerTime = (() => {\n    let clock_started = false;\n    const pending = new PendingPromise();\n    let common_store;\n\n    const init = store => {\n        if (!clock_started) {\n            common_store = store;\n            pending.resolve(common_store.server_time);\n            clock_started = true;\n        }\n    };\n\n    const get = () => (clock_started && common_store.server_time ? common_store.server_time.clone() : undefined);\n\n    return {\n        init,\n        get,\n        timePromise: () => (clock_started ? Promise.resolve(common_store.server_time) : pending.promise),\n    };\n})();\n\nexport default ServerTime;\n","export default class NetworkMonitor {\n    constructor(apiInstance, parentElement) {\n        this.api = apiInstance;\n        this.parentElement = parentElement;\n        this.addEvents();\n    }\n\n    addEvents() {\n        if ('onLine' in navigator) {\n            window.addEventListener('online', () => this.setStatus());\n            window.addEventListener('offline', () => this.setStatus());\n        } else {\n            navigator.onLine = true;\n            setInterval(() => this.setStatus(), 10000);\n        }\n        this.setStatus();\n    }\n\n    setStatus() {\n        if (navigator.onLine) {\n            this.parentElement.html(\"<span class='connecting'></span>\");\n            this.api.send({ ping: '1' }).then(() => {\n                this.parentElement.html(\"<span class='online'></span>\");\n            });\n        } else {\n            this.parentElement.html(\"<span class='offline'></span>\");\n        }\n    }\n}\n","import PendingPromise from '../../utils/pending-promise';\n\nexport default class TradingTimes {\n    constructor({ ws, server_time }) {\n        this.init_promise = new PendingPromise();\n        this.is_initialised = false;\n        this.trading_times = {};\n        this.ws = ws;\n        this.server_time = server_time.clone();\n    }\n\n    async initialise() {\n        if (this.is_initialised) {\n            return this.init_promise;\n        }\n\n        this.is_initialised = true;\n        this.last_update_moment = this.server_time.local();\n\n        if (!Object.keys(this.trading_times).length) {\n            await this.updateTradingTimes();\n            this.init_promise.resolve();\n\n            const periodicUpdate = async () => {\n                const changes = this.updateMarketOpenClosed();\n\n                if (Object.keys(changes).length > 0 && this.onMarketOpenCloseChanged) {\n                    this.onMarketOpenCloseChanged(changes);\n                }\n\n                let next_update_date = this.nextUpdateDate();\n\n                if (!next_update_date) {\n                    const now_moment = this.server_time.local();\n                    const next_update_moment = this.last_update_moment.clone().add(1, 'days');\n\n                    if (now_moment.isAfter(next_update_moment)) {\n                        this.last_update_moment = now_moment.clone();\n                    } else {\n                        this.last_update_moment = next_update_moment.clone();\n                    }\n\n                    // Retain the current market open close status, because the trade times\n                    // will now be the following day:\n                    const is_open_map = {};\n\n                    Object.keys(this.trading_times).forEach(symbol_name => {\n                        is_open_map[symbol_name] = this.trading_times[symbol_name].is_opened;\n                    });\n\n                    await this.updateTradingTimes();\n\n                    Object.keys(this.trading_times).forEach(symbol_name => {\n                        this.trading_times[symbol_name].is_opened = is_open_map[symbol_name];\n                    });\n\n                    // next update date will be 00:00 hours (UTC) of the following day:\n                    next_update_moment.set({ hour: 0, minute: 0, second: 0 });\n                    next_update_date = next_update_moment.toDate();\n                }\n\n                const wait_period = next_update_date - this.server_time.local().toDate();\n                this.update_timer = setTimeout(periodicUpdate, wait_period);\n            };\n\n            await periodicUpdate();\n        }\n\n        return this.init_promise;\n    }\n\n    async updateTradingTimes() {\n        const last_update_date = this.last_update_moment.format('YYYY-MM-DD');\n        const response = await this.ws.tradingTimes(last_update_date);\n\n        if (response.error) {\n            return;\n        }\n\n        this.trading_times = {};\n\n        const now = this.server_time.local().toDate();\n        const date_str = now.toISOString().substring(0, 11);\n        const getUTCDate = hour => new Date(`${date_str}${hour}Z`);\n        const {\n            trading_times: { markets },\n        } = response;\n\n        if (!markets) {\n            return;\n        }\n\n        markets?.forEach(market => {\n            const { submarkets } = market;\n\n            submarkets?.forEach(submarket => {\n                const { symbols } = submarket;\n\n                symbols?.forEach(symbol_obj => {\n                    const { times, symbol } = symbol_obj;\n                    const { open, close } = times;\n                    const is_open_all_day = open.length === 1 && open[0] === '00:00:00' && close[0] === '23:59:59';\n                    const is_closed_all_day = open.length === 1 && open[0] === '--' && close[0] === '--';\n\n                    let processed_times;\n\n                    if (!is_open_all_day && !is_closed_all_day) {\n                        processed_times = open.map((open_time, index) => ({\n                            open: getUTCDate(open_time),\n                            close: getUTCDate(close[index]),\n                        }));\n                    }\n\n                    this.trading_times[symbol] = {\n                        is_open_all_day,\n                        is_closed_all_day,\n                        times: processed_times,\n                    };\n                });\n            });\n        });\n    }\n\n    updateMarketOpenClosed() {\n        const changes = {};\n\n        Object.keys(this.trading_times).forEach(symbol_name => {\n            const is_opened = this.calcIsMarketOpened(symbol_name);\n            const symbol_obj = this.trading_times[symbol_name];\n\n            if (symbol_obj.is_opened !== is_opened) {\n                symbol_obj.is_opened = is_opened;\n                changes[symbol_name] = is_opened;\n            }\n        });\n\n        return changes;\n    }\n\n    calcIsMarketOpened(symbol_name) {\n        const now = this.server_time.local().unix();\n        const { times, is_open_all_day, is_closed_all_day } = this.trading_times[symbol_name];\n\n        if (is_closed_all_day) {\n            return false;\n        }\n\n        if (is_open_all_day) {\n            return true;\n        }\n\n        return times.some(session => {\n            const { open, close } = session;\n            return now >= open && now < close;\n        });\n    }\n\n    nextUpdateDate() {\n        const now = this.server_time.local().toDate();\n\n        let nextDate;\n\n        Object.keys(this.trading_times).forEach(symbol_name => {\n            const { times, is_open_all_day, is_closed_all_day } = this.trading_times[symbol_name];\n\n            if (is_open_all_day || is_closed_all_day) {\n                return;\n            }\n\n            times.forEach(session => {\n                const { open, close } = session;\n\n                if (open > now && (!nextDate || open < nextDate)) {\n                    nextDate = open;\n                }\n                if (close > now && (!nextDate || close < nextDate)) {\n                    nextDate = close;\n                }\n            });\n        });\n\n        return nextDate;\n    }\n\n    isMarketOpened(symbol_name) {\n        const symbol_names = Object.keys(this.trading_times);\n\n        if (!symbol_names.length || !symbol_names.includes(symbol_name)) {\n            return false;\n        }\n\n        return this.trading_times[symbol_name].is_opened;\n    }\n}\n","import { observer as globalObserver } from '../../../utils/observer';\nimport { config } from '../../../constants/config';\n\nexport const contract = c => globalObserver.emit('bot.contract', c);\n\nexport const contractStatus = c => globalObserver.emit('contract.status', c);\n\nexport const info = i => globalObserver.emit('bot.info', i);\n\nexport const notify = (className, message) =>\n    globalObserver.emit('ui.log.notify', { className, message, sound: config.lists.NOTIFICATION_SOUND[0][1] });\n\nexport const log = (log_type, extra) => globalObserver.emit('ui.log.success', { log_type, extra });\n\nexport const error = message => globalObserver.emit('ui.log.error', message);\n","import { formatTime, findValueByKeyRecursively, getRoundedNumber, isEmptyObject } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport { error as logError } from './broadcast';\nimport { observer as globalObserver } from '../../../utils/observer';\nimport { config } from '../../../constants';\n\nexport const tradeOptionToProposal = (trade_option, purchase_reference) =>\n    trade_option.contractTypes.map(type => {\n        const proposal = {\n            amount: trade_option.amount,\n            basis: trade_option.basis,\n            contract_type: type,\n            currency: trade_option.currency,\n            duration: trade_option.duration,\n            duration_unit: trade_option.duration_unit,\n            multiplier: trade_option.multiplier,\n            passthrough: {\n                contract_type: type,\n                purchase_reference,\n            },\n            proposal: 1,\n            symbol: trade_option.symbol,\n        };\n        if (trade_option.prediction !== undefined) {\n            proposal.selected_tick = trade_option.prediction;\n        }\n        if (!['TICKLOW', 'TICKHIGH'].includes(type) && trade_option.prediction !== undefined) {\n            proposal.barrier = trade_option.prediction;\n        } else if (trade_option.barrierOffset !== undefined) {\n            proposal.barrier = trade_option.barrierOffset;\n        }\n        if (trade_option.secondBarrierOffset !== undefined) {\n            proposal.barrier2 = trade_option.secondBarrierOffset;\n        }\n        if (['MULTUP', 'MULTDOWN'].includes(type)) {\n            proposal.duration = undefined;\n            proposal.duration_unit = undefined;\n        }\n        if (!isEmptyObject(trade_option.limit_order)) {\n            proposal.limit_order = trade_option.limit_order;\n        }\n        return proposal;\n    });\n\nexport const tradeOptionToBuy = (contract_type, trade_option) => {\n    const buy = {\n        buy: '1',\n        price: trade_option.amount,\n        parameters: {\n            amount: trade_option.amount,\n            basis: trade_option.basis,\n            contract_type,\n            currency: trade_option.currency,\n            duration: trade_option.duration,\n            duration_unit: trade_option.duration_unit,\n            multiplier: trade_option.multiplier,\n            symbol: trade_option.symbol,\n        },\n    };\n    if (trade_option.prediction !== undefined) {\n        buy.parameters.selected_tick = trade_option.prediction;\n    }\n    if (!['TICKLOW', 'TICKHIGH'].includes(contract_type) && trade_option.prediction !== undefined) {\n        buy.parameters.barrier = trade_option.prediction;\n    } else if (trade_option.barrierOffset !== undefined) {\n        buy.parameters.barrier = trade_option.barrierOffset;\n    }\n    if (trade_option.secondBarrierOffset !== undefined) {\n        buy.parameters.barrier2 = trade_option.secondBarrierOffset;\n    }\n    if (!isEmptyObject(trade_option.app_markup_percentage)) {\n        buy.parameters.app_markup_percentage = trade_option.app_markup_percentage;\n    }\n    if (!isEmptyObject(trade_option.barrier_range)) {\n        buy.parameters.barrier_range = trade_option.barrier_range;\n    }\n    if (!isEmptyObject(trade_option.date_expiry)) {\n        buy.parameters.date_expiry = trade_option.date_expiry;\n    }\n    if (!isEmptyObject(trade_option.date_start)) {\n        buy.parameters.date_start = trade_option.date_start;\n    }\n    if (!isEmptyObject(trade_option.product_type)) {\n        buy.parameters.product_type = trade_option.product_type;\n    }\n    if (!isEmptyObject(trade_option.trading_period_start)) {\n        buy.parameters.trading_period_start = trade_option.trading_period_start;\n    }\n    // This will be required only in the case of multiplier & accumulator contracts\n    if (!isEmptyObject(trade_option.limit_order)) {\n        buy.parameters.limit_order = trade_option.limit_order;\n    }\n    // This will be required only in the case of multiplier contracts\n    if (['MULTUP', 'MULTDOWN'].includes(contract_type)) {\n        buy.parameters.duration = undefined;\n        buy.parameters.duration_unit = undefined;\n        buy.parameters.multiplier = trade_option.multiplier;\n    }\n    // This will be required only in the case of accumulator contracts\n    if (['ACCU'].includes(contract_type)) {\n        buy.parameters.duration = undefined;\n        buy.parameters.duration_unit = undefined;\n        buy.parameters.growth_rate = trade_option.growth_rate;\n    }\n    return buy;\n};\n\nexport const getDirection = ticks => {\n    const { length } = ticks;\n    const [tickOld, tickNew] = ticks.slice(-2);\n\n    let direction = '';\n    if (length >= 2) {\n        direction = tickOld.quote < tickNew.quote ? 'rise' : direction;\n        direction = tickOld.quote > tickNew.quote ? 'fall' : direction;\n    }\n\n    return direction;\n};\n\nexport const getLastDigit = tick => {\n    let number_string = tick;\n    if (typeof number_string === 'number') {\n        number_string = String(number_string);\n    }\n    return Number(number_string[number_string.length - 1]);\n};\n\nexport const getLastDigitForList = (tick, pip_size = 0) => {\n    const value = Number(tick).toFixed(pip_size);\n    return value[value.length - 1];\n};\n\nconst getBackoffDelayInMs = (error_obj, delay_index) => {\n    const base_delay = 2.5;\n    const max_delay = 15;\n    const next_delay_in_seconds = Math.min(base_delay * delay_index, max_delay);\n\n    const { error = {}, msg_type = '', echo_req = {} } = error_obj;\n    const { code = '', message = '' } = error;\n    let message_to_print = '';\n    const trade_type_block = Blockly.derivWorkspace\n        .getAllBlocks(true)\n        .find(block => block.type === 'trade_definition_tradetype');\n    const selected_trade_type = trade_type_block?.getFieldValue('TRADETYPECAT_LIST') || '';\n    const { TRADE_TYPE_CATEGORY_NAMES } = config;\n\n    if (code) {\n        switch (code) {\n            case 'RateLimit':\n                message_to_print = localize(\n                    'You are rate limited for: {{ message_type }}, retrying in {{ delay }}s (ID: {{ request }})',\n                    {\n                        message_type: error.msg_type,\n                        delay: next_delay_in_seconds,\n                        request: echo_req?.req_id,\n                    }\n                );\n\n                break;\n            case 'DisconnectError':\n                message_to_print = localize('You are disconnected, retrying in {{ delay }}s', {\n                    delay: next_delay_in_seconds,\n                });\n                break;\n            case 'MarketIsClosed':\n                message_to_print = localize('{{ message }}, retrying in {{ delay }}s', {\n                    message: message || localize('The market is closed'),\n                    delay: next_delay_in_seconds,\n                });\n                break;\n            case 'OpenPositionLimitExceeded':\n                message_to_print = localize(\n                    'You already have an open position for {{ trade_type }} contract type, retrying in {{ delay }}s',\n                    {\n                        delay: next_delay_in_seconds,\n                        trade_type: TRADE_TYPE_CATEGORY_NAMES?.[selected_trade_type] ?? '',\n                    }\n                );\n                break;\n            default:\n                message_to_print = localize('Request failed for: {{ message_type }}, retrying in {{ delay }}s', {\n                    message_type: msg_type || localize('unknown'),\n                    delay: next_delay_in_seconds,\n                });\n                break;\n        }\n    } else {\n        message_to_print = localize('Request failed for: {{ message_type }}, retrying in {{ delay }}s', {\n            message_type: msg_type || localize('unknown'),\n            delay: next_delay_in_seconds,\n        });\n    }\n\n    logError(message_to_print);\n\n    return next_delay_in_seconds * 1000;\n};\n\nexport const updateErrorMessage = error => {\n    if (error.error?.code === 'InputValidationFailed') {\n        if (error.error.details?.duration) {\n            error.error.message = localize('Duration must be a positive integer');\n        }\n        if (error.error.details?.amount) {\n            error.error.message = localize('Amount must be a positive number.');\n        }\n    }\n};\n\nexport const shouldThrowError = (error, errors_to_ignore = []) => {\n    if (!error.error) {\n        return false;\n    }\n\n    const default_errors_to_ignore = [\n        'CallError',\n        'WrongResponse',\n        'GetProposalFailure',\n        'RateLimit',\n        'DisconnectError',\n        'MarketIsClosed',\n        'OpenPositionLimitExceeded',\n    ];\n    updateErrorMessage(error);\n    const is_ignorable_error = errors_to_ignore\n        .concat(default_errors_to_ignore)\n        .includes(error?.error?.code ?? error?.name);\n\n    if (error.error?.code === 'OpenPositionLimitExceeded') globalObserver.emit('bot.recoverOpenPositionLimitExceeded');\n    return !is_ignorable_error;\n};\n\nexport const recoverFromError = (promiseFn, recoverFn, errors_to_ignore, delay_index, api_base) => {\n    return new Promise((resolve, reject) => {\n        const promise = promiseFn();\n\n        if (promise) {\n            promise.then(resolve).catch(error => {\n                /**\n                 * if bot is not running there is no point of recovering from error\n                 * `!api_base.is_running` will check the bot status if it is not running it will kick out the control from loop\n                 */\n                if (shouldThrowError(error, errors_to_ignore) || (api_base && !api_base.is_running)) {\n                    reject(error);\n                    return;\n                }\n                recoverFn(\n                    error?.error?.code ?? error?.name,\n                    () =>\n                        new Promise(recoverResolve => {\n                            const getGlobalTimeouts = () => globalObserver.getState('global_timeouts') ?? [];\n\n                            const timeout = setTimeout(\n                                () => {\n                                    const global_timeouts = getGlobalTimeouts();\n                                    delete global_timeouts[timeout];\n                                    globalObserver.setState(global_timeouts);\n                                    recoverResolve();\n                                },\n                                getBackoffDelayInMs(error, delay_index)\n                            );\n\n                            const global_timeouts = getGlobalTimeouts();\n                            const cancellable_timeouts = ['buy'];\n                            const msg_type = findValueByKeyRecursively(error, 'msg_type');\n\n                            global_timeouts[timeout] = {\n                                is_cancellable: cancellable_timeouts.includes(msg_type),\n                                msg_type,\n                            };\n\n                            globalObserver.setState({ global_timeouts });\n                        })\n                );\n            });\n        } else {\n            resolve();\n        }\n    });\n};\n\n/**\n * @param {*} promiseFn api call - it could be api call or subscription\n * @param {*} errors_to_ignore list of errors to ignore\n * @param {*} api_base instance of APIBase class to check if the bot is running or not\n * @returns a new promise\n */\nexport const doUntilDone = (promiseFn, errors_to_ignore, api_base) => {\n    let delay_index = 1;\n\n    return new Promise((resolve, reject) => {\n        const recoverFn = (error_code, makeDelay) => {\n            delay_index++;\n            makeDelay().then(repeatFn);\n        };\n\n        const repeatFn = () => {\n            recoverFromError(promiseFn, recoverFn, errors_to_ignore, delay_index, api_base).then(resolve).catch(reject);\n        };\n\n        repeatFn();\n    });\n};\n\nexport const createDetails = contract => {\n    const { sell_price: sellPrice, buy_price: buyPrice, currency } = contract;\n    const profit = getRoundedNumber(sellPrice - buyPrice, currency);\n    const result = profit < 0 ? 'loss' : 'win';\n\n    return [\n        contract.transaction_ids.buy,\n        +contract.buy_price,\n        +contract.sell_price,\n        profit,\n        contract.contract_type,\n        formatTime(parseInt(`${contract.entry_tick_time}000`), 'HH:mm:ss'),\n        +contract.entry_tick,\n        formatTime(parseInt(`${contract.exit_tick_time}000`), 'HH:mm:ss'),\n        +contract.exit_tick,\n        +(contract.barrier ? contract.barrier : 0),\n        result,\n    ];\n};\n\nexport const getUUID = () => `${new Date().getTime() * Math.random()}`;\n\nconst hasBlockOfType = (targetType, workspace) => {\n    const allBlocks = workspace.getAllBlocks();\n    return allBlocks.some(block => block.type === targetType && !!block.parentBlock_);\n};\n\nexport const checkBlocksForProposalRequest = () => {\n    const workspace = Blockly.derivWorkspace;\n    const has_payout_block = hasBlockOfType('payout', workspace);\n\n    // Code for the future for case when basis: 'payout':\n    // * Since basis : '${block.type === 'trade_definition_tradeoptions' ? 'stake' : 'payout'}'\n    // * basis: 'payout' when contract_type: \"MULTUP\"\n    // Uncomment next line later:\n    // const is_basis_payout = !hasBlockOfType('trade_definition_tradeoptions', workspace);\n\n    return {\n        has_payout_block,\n        is_basis_payout: false,\n    };\n};\n\nexport const socket_state = {\n    [WebSocket.CONNECTING]: 'Connecting',\n    [WebSocket.OPEN]: 'Connected',\n    [WebSocket.CLOSING]: 'Closing',\n    [WebSocket.CLOSED]: 'Closed',\n};\n","import { localize } from '@deriv/translations';\n\nconst generateErrorMessage = (block_type, missing_space = localize('workspace')) => {\n    return {\n        missing: localize('The {{block_type}} block is missing.', {\n            block_type,\n        }),\n        misplaced: localize('The {{block_type}} block is misplaced from {{missing_space}}.', {\n            block_type,\n            missing_space,\n        }),\n        disabled: localize('The {{block_type}} block is mandatory and cannot be deleted/disabled.', {\n            block_type,\n        }),\n        default: localize('The {{block_type}} block is mandatory and cannot be deleted/disabled.', {\n            block_type,\n        }),\n    };\n};\n\nexport const error_message_map = {\n    trade_definition: generateErrorMessage(localize('Trade parameters')),\n    trade_parameters: generateErrorMessage(localize('Trade parameters')),\n    before_purchase: generateErrorMessage(localize('Purchase conditions')),\n    purchase_conditions: generateErrorMessage(localize('Purchase conditions')),\n    purchase: generateErrorMessage(localize('Purchase'), localize('purchase conditions')),\n    trade_definition_tradeoptions: generateErrorMessage(localize('Trade options'), localize('trade parameters')),\n    trade_definition_multiplier: generateErrorMessage(\n        localize('Trade options multipliers'),\n        localize('trade parameters')\n    ),\n    trade_definition_accumulator: generateErrorMessage(\n        localize('Trade options accumulators'),\n        localize('trade parameters')\n    ),\n};\n","import { observer as globalObserver } from './observer';\n\nexport const createError = (name, message) => {\n    const e = new Error(message);\n    e.name = name;\n    e.code = name;\n    return e;\n};\n\nexport const trackAndEmitError = (message, object = {}) => {\n    globalObserver.emit('ui.log.error', message);\n    if (window.trackJs) {\n        trackJs.track(`${message} - Error: ${JSON.stringify(object)}`);\n    }\n};\n","import { localize } from '@deriv/translations';\nimport { config } from '../constants/config';\n\n// TODO: use-shared-functions - These functions are duplicates of trader ones, export and use these instead.\nexport const getContractTypeName = contract => {\n    const { opposites } = config;\n    let name = localize('Unknown');\n\n    Object.keys(opposites).forEach(opposites_name => {\n        const contract_type_objs = opposites[opposites_name];\n\n        contract_type_objs.forEach(contract_type_obj => {\n            const contract_type_names = Object.entries(contract_type_obj)[0]; // ['CALL', 'Rise']\n\n            if (contract_type_names[0] === contract.contract_type) {\n                // Extra check for CALL & PUT types to distinguish Rise/Fall & Higher/Lower.\n                if (['CALL', 'PUT'].includes(contract_type_names[0])) {\n                    const shortcode_suffix = contract.shortcode.split('_').slice(-2)[0];\n                    const is_risefall = /^S0P$/.test(shortcode_suffix);\n                    const req_opposite_name = is_risefall ? 'CALLPUT' : 'HIGHERLOWER';\n\n                    if (opposites_name !== req_opposite_name) {\n                        return;\n                    }\n                }\n\n                name = contract_type_names[1];\n            }\n        });\n    });\n\n    return name;\n};\n","export const importExternal = url => {\n    return new Promise((resolve, reject) => {\n        const script = document.createElement('script');\n        script.src = url;\n        script.async = true;\n        script.onload = () => resolve(window.external_global_component);\n        script.onerror = reject;\n\n        document.body.appendChild(script);\n    });\n};\n","import { localize } from '@deriv/translations';\n\nexport const timeSince = timestamp => {\n    const now = new Date();\n    const secondPast = (now.getTime() - timestamp) / 1000;\n\n    if (secondPast < 60) {\n        return localize('{{secondPast}}s ago', { secondPast: parseInt(secondPast) });\n    }\n    if (secondPast < 3600) {\n        return localize('{{minutePast}}m ago', { minutePast: parseInt(secondPast / 60) });\n    }\n    if (secondPast < 86400) {\n        return localize('{{hourPast}}h ago', { hourPast: parseInt(secondPast / 3600) });\n    }\n    if (secondPast <= 432000) {\n        return localize('{{days}} days ago', { days: parseInt(secondPast / 86400) });\n    }\n\n    const timestampDate = new Date(timestamp);\n    const day = timestampDate.getDate();\n    const month = timestampDate\n        .toDateString()\n        .match(/ [a-zA-Z]*/)[0]\n        .replace(' ', '');\n    const year = `${timestampDate.getFullYear() === now.getFullYear() ? '' : ' '}${timestampDate.getFullYear()}`;\n    return `${day} ${month}${year}`;\n};\n","/** Helper function to perform sequential execution of functions */\nexport const pipe = (...fns) => {\n    return initialValue => {\n        return fns.reduce((nextParam, fn) => fn(nextParam), initialValue);\n    };\n};\n\n/** Helper function to parse block information from XML */\nexport const extractBlocksFromXml = xml => {\n    const parser = new DOMParser();\n    const xmlDoc = parser.parseFromString(xml, 'text/xml');\n    const blocks = xmlDoc.getElementsByTagName('block');\n\n    const blocksTypeAndFields = Array.from(blocks).map(block => {\n        const type = block.getAttribute('type');\n        const fields = Array.from(block.getElementsByTagName('field')).map(field => {\n            return {\n                name: field.getAttribute('name'),\n                value: field.textContent.trim(),\n            };\n        });\n        return { type, fields };\n    });\n\n    return blocksTypeAndFields;\n};\n\n/** Helper function to sort block childs based on type or field name */\nexport const sortBlockChild = blocksArray =>\n    blocksArray.sort((a, b) => {\n        if (a.type < b.type) {\n            return -1;\n        }\n        if (a.type > b.type) {\n            return 1;\n        }\n        return JSON.stringify(a.fields) < JSON.stringify(b.fields) ? -1 : 1;\n    });\n\n/** Compare two blocks by field name and value */\nconst areFieldsEqual = (fields1, fields2) => {\n    if (fields1?.length !== fields2?.length) {\n        return false;\n    }\n    for (let i = 0; i < fields1.length; i++) {\n        if (fields1[i]?.name !== fields2[i]?.name || fields1[i]?.value !== fields2[i]?.value) {\n            return false;\n        }\n    }\n    return true;\n};\n\n/** Sanitize XMLs and compare them */\nexport const compareXml = (xml1, xml2) => {\n    // Extract block information from the XMLs and sort the blocks\n    const sortedBlocks1 = pipe(extractBlocksFromXml, sortBlockChild);\n    const sortedBlocks2 = pipe(extractBlocksFromXml, sortBlockChild);\n    const blocks1 = sortedBlocks1(xml1);\n    const blocks2 = sortedBlocks2(xml2);\n\n    // Compare the sorted blocks\n    if (blocks1?.length !== blocks2?.length) {\n        return false;\n    }\n    for (let i = 0; i < blocks1.length; i++) {\n        if (blocks1[i]?.type !== blocks2[i]?.type || !areFieldsEqual(blocks1[i]?.fields, blocks2[i]?.fields)) {\n            return false;\n        }\n    }\n\n    return true;\n};\n","import { error_message_map } from './error-config';\nimport { observer } from './observer';\n\nconst onKeyDownHandleError = event => {\n    if (Blockly.getSelected() !== null && Blockly.getSelected().parentBlock_ === null) {\n        if (event.key === 'Delete' || event.key === 'Backspace') {\n            handleError('BLOCK_DELETION', observer);\n        }\n    }\n};\n\nexport const removeErrorHandlingEventListener = (type = 'keydown') => {\n    window.removeEventListener(type, onKeyDownHandleError);\n};\n\nexport const initErrorHandlingListener = (type = 'keydown') => {\n    window.addEventListener(type, onKeyDownHandleError);\n};\n\nexport const handleError = (errorCode, observer) => {\n    switch (errorCode) {\n        case 'BLOCK_DELETION':\n            if (error_message_map[Blockly.getSelected().type]) {\n                observer.emit('ui.log.error', error_message_map[Blockly.getSelected().type]?.default);\n            }\n            break;\n        default:\n            break;\n    }\n};\n","import LZString from 'lz-string';\nimport localForage from 'localforage';\nimport DBotStore from '../scratch/dbot-store';\nimport { save_types } from '../constants/save-type';\n/**\n * Save workspace to localStorage\n * @param {String} save_type // constants/save_types.js (unsaved, local, googledrive)\n * @param {Blockly.Events} event // Blockly event object\n */\nexport const saveWorkspaceToRecent = async (xml, save_type = save_types.UNSAVED) => {\n    const xml_dom = convertStrategyToIsDbot(xml);\n    const {\n        load_modal: { updateListStrategies },\n        save_modal,\n    } = DBotStore.instance;\n\n    const workspace_id = Blockly.derivWorkspace.current_strategy_id || Blockly.utils.idGenerator.genUid();\n    const workspaces = await getSavedWorkspaces();\n    const current_xml = Blockly.Xml.domToText(xml_dom);\n    const current_timestamp = Date.now();\n    const current_workspace_index = workspaces.findIndex(workspace => workspace.id === workspace_id);\n\n    if (current_workspace_index >= 0) {\n        const current_workspace = workspaces[current_workspace_index];\n        current_workspace.xml = current_xml;\n        current_workspace.name = save_modal.bot_name;\n        current_workspace.timestamp = current_timestamp;\n        current_workspace.save_type = save_type;\n    } else {\n        workspaces.push({\n            id: workspace_id,\n            timestamp: current_timestamp,\n            name: save_modal.bot_name,\n            xml: current_xml,\n            save_type,\n        });\n    }\n\n    workspaces\n        .sort((a, b) => {\n            return new Date(a.timestamp) - new Date(b.timestamp);\n        })\n        .reverse();\n\n    if (workspaces.length > 10) {\n        workspaces.pop();\n    }\n    updateListStrategies(workspaces);\n    localForage.setItem('saved_workspaces', LZString.compress(JSON.stringify(workspaces)));\n};\n\nexport const getSavedWorkspaces = async () => {\n    try {\n        return JSON.parse(LZString.decompress(await localForage.getItem('saved_workspaces'))) || [];\n    } catch (e) {\n        return [];\n    }\n};\n\nexport const removeExistingWorkspace = async workspace_id => {\n    const workspaces = await getSavedWorkspaces();\n    const current_workspace_index = workspaces.findIndex(workspace => workspace.id === workspace_id);\n\n    if (current_workspace_index >= 0) {\n        workspaces.splice(current_workspace_index, 1);\n    }\n\n    await localForage.setItem('saved_workspaces', LZString.compress(JSON.stringify(workspaces)));\n};\n\nexport const convertStrategyToIsDbot = xml_dom => {\n    if (!xml_dom) return;\n    if (xml_dom.hasAttribute('collection') && xml_dom.getAttribute('collection') === 'true') {\n        xml_dom.setAttribute('collection', 'true');\n    }\n    xml_dom.setAttribute('is_dbot', 'true');\n    return xml_dom;\n};\n","import { Map, List } from 'immutable';\n/**\nBelow are the list of events we can register to listen to :\n \n-bot.running : Emitted in trade/index.js, in old Binary Bot this is only used\nto set the label to is running.\n\n-bot.stop: Bot was stopped by the user\n\n-bot.contract: Called in OpenContract.js, object consisting of\naccountID and a proposal_open_contract response, this will\nbe emitted on each POC message from the server.\n\n-bot.info: Emitted in trade/Balance.js, it announces account ID and balance,\nwe don't need this in DerivBot. Can also be emitted during running\ncontract, it then announces an object consisting of accountID,\ntotal_runs, transaction_ids, contract_type, and buy_price.\n\n-contract.status:  First emitted in trade/Purchase.js with an idea that's more\nof a flag e.g. contract_purchase_sent (when buy was sent to\nAPI, or contract_purchase_recieved (when buy was acknowledged\nby API), or contract.sold (when a contract was sold/expired).\n\n-contract.settled: this event was emitted to initiate a\nsettlement of a contract, i.e. it would call proposal_open_contract to retrieve\nlatest values for contract, not required atm by DerivBot\n\n-googledrive.authorise : event to start auturize google flow\n\n-ui.log.success: UI Notifications\n\n-ui.log.error: UI errors\n\n-ui.log.warn: UI warning\n\n-Notify: Server Notifications\n\n-Error : Server errors\n\n */\n\nexport default class Observer {\n    constructor() {\n        this.eam = new Map(); // event action map\n    }\n\n    register(event, _action, once, unregisterIfError, unregisterAllBefore) {\n        if (unregisterAllBefore) {\n            this.unregisterAll(event);\n        }\n        const apiError = error => {\n            if (error.type === unregisterIfError.type) {\n                this.unregister('api.error', apiError);\n                unregisterIfError.unregister.forEach(unreg => {\n                    if (unreg instanceof Array) {\n                        this.unregister(...unreg);\n                    } else {\n                        this.unregisterAll(unreg);\n                    }\n                });\n            }\n        };\n        if (unregisterIfError) {\n            this.register('api.error', apiError);\n        }\n        const action = (...args) => {\n            if (once) {\n                this.unregister(event, _action);\n            }\n            if (unregisterIfError) {\n                this.unregister('api.error', apiError);\n            }\n            _action(...args);\n        };\n\n        const actionList = this.eam.get(event);\n\n        this.eam = actionList\n            ? this.eam.set(event, actionList.push({ action, searchBy: _action }))\n            : this.eam.set(event, new List().push({ action, searchBy: _action }));\n    }\n\n    unregister(event, f) {\n        this.eam = this.eam.set(\n            event,\n            this.eam.get(event).filter(r => r.searchBy !== f)\n        );\n    }\n\n    isRegistered(event) {\n        return this.eam.has(event);\n    }\n\n    unregisterAll(event) {\n        this.eam = this.eam.delete(event);\n    }\n\n    emit(event, data) {\n        if (this.eam.has(event)) {\n            this.eam.get(event).forEach(action => action.action(data));\n        }\n    }\n    setState(state = {}) {\n        this.state = { ...this.state, ...state };\n    }\n    getState(key) {\n        return this.state?.[key];\n    }\n}\n\nexport const observer = new Observer();\n","export default function PendingPromise() {\n    let resolve, reject;\n\n    const promise = new Promise((_resolve, _reject) => {\n        resolve = _resolve;\n        reject = _reject;\n    });\n\n    promise.isPending = true;\n\n    promise.resolve = res => {\n        promise.isPending = false;\n        resolve(res);\n    };\n\n    promise.reject = error => {\n        promise.isPending = false;\n        reject(error);\n    };\n\n    return promise;\n}\n","import { config } from '../constants/config';\n\nexport const hasAllRequiredBlocks = () => {\n    const blocks_in_workspace = Blockly.derivWorkspace.getAllBlocks();\n    const { mandatoryMainBlocks } = config;\n    const required_block_types = ['trade_definition_tradeoptions', ...mandatoryMainBlocks];\n    const all_block_types = blocks_in_workspace.map(block => block.type);\n    const has_all_required_blocks = required_block_types.every(required_block_type =>\n        all_block_types.includes(required_block_type)\n    );\n\n    return has_all_required_blocks;\n};\n\nexport const onWorkspaceResize = () => {\n    const workspace = Blockly.derivWorkspace;\n    if (workspace) {\n        // kept this commented to fix slow rendering issue\n        //workspace.getAllFields().forEach(field => field.forceRerender());\n\n        const el_scratch_div = document.getElementById('scratch_div');\n        if (el_scratch_div) {\n            Blockly.svgResize(workspace);\n        }\n    }\n};\n\nexport const removeLimitedBlocks = (workspace, block_types) => {\n    const types = Array.isArray(block_types) ? block_types : [block_types];\n\n    types.forEach(block_type => {\n        if (config.single_instance_blocks.includes(block_type)) {\n            workspace.getAllBlocks().forEach(ws_block => {\n                if (ws_block.type === block_type) {\n                    ws_block.dispose();\n                }\n            });\n        }\n    });\n};\n\nexport const isDbotRTL = () => {\n    const htmlElement = document.documentElement;\n    const dirValue = htmlElement.getAttribute('dir');\n    return dirValue === 'rtl';\n};\n","import { getLoginId } from '@deriv/bot-skeleton/src/services/api/appId';\n\nconst getUrlBase = (path = '') => {\n    const l = window.location;\n\n    if (!/^\\/(br_)/.test(l.pathname)) return path;\n\n    const get_path = path.startsWith('/') ? path : `/${path}`;\n\n    return `/${l.pathname.split('/')[1]}${get_path}`;\n};\n\nexport function setBotPublicPath(path: string) {\n    __webpack_public_path__ = path; // eslint-disable-line no-global-assign\n}\n\nexport const getImageLocation = (image_name: string) => getUrlBase(`/public/images/common/${image_name}`);\n\ndeclare global {\n    interface Window {\n        Survicate?: {\n            track: (attribute: string, value: string) => void;\n        };\n    }\n}\n\nconst setSurvicateUserAttributes = (country: string, type: string, creationDate: string) => {\n    if (window.Survicate) {\n        if (country) window.Survicate.track('userCountry', country);\n        if (type) window.Survicate.track('accountType', type);\n        if (creationDate) window.Survicate.track('accountCreationDate', creationDate);\n    }\n};\n\n// eslint-disable-next-line import/no-mutable-exports\nlet initSurvicateCalled = false;\n\nconst loadSurvicateScript = (callback: () => void) => {\n    const script = document.createElement('script');\n    script.id = 'dbot-survicate';\n    script.async = true;\n    script.src = 'https://survey.survicate.com/workspaces/83b651f6b3eca1ab4551d95760fe5deb/web_surveys.js';\n    script.onload = callback;\n\n    const firstScript = document.getElementsByTagName('script')[0];\n    if (firstScript?.parentNode) {\n        firstScript.parentNode.insertBefore(script, firstScript);\n    } else {\n        document.body.appendChild(script);\n    }\n};\n\nconst initSurvicate = () => {\n    if (initSurvicateCalled) return;\n    initSurvicateCalled = true;\n    const active_loginid = getLoginId();\n    const client_accounts = JSON.parse(localStorage.getItem('client.accounts') as string) || undefined;\n\n    const setAttributesIfAvailable = () => {\n        if (active_loginid && client_accounts) {\n            const { residence, account_type, created_at } = client_accounts[active_loginid] || {};\n            setSurvicateUserAttributes(residence, account_type, created_at);\n        }\n    };\n\n    if (document.getElementById('dbot-survicate')) {\n        const survicateBox = document.getElementById('survicate-box');\n        if (survicateBox) {\n            survicateBox.style.display = 'block';\n        }\n        setAttributesIfAvailable();\n    } else {\n        loadSurvicateScript(setAttributesIfAvailable);\n    }\n};\n\nexport { initSurvicate, initSurvicateCalled };\n\nsetBotPublicPath(getUrlBase('/'));\n","import { createContext } from 'react';\nimport type { TStores } from '../types';\n\nconst StoreContext = createContext<TStores | null>(null);\n\nexport default StoreContext;\n","import { useContext } from 'react';\nimport StoreContext from './storeContext';\n\nconst useStore = () => {\n    const store = useContext(StoreContext);\n\n    if (!store) {\n        throw new Error('useStore must be used within StoreProvider');\n    }\n\n    return store;\n};\n\nexport default useStore;\n","export enum DRAGGABLE_CONSTANTS {\n    MOVE = 'move',\n    TOP = 'top',\n    RIGHT = 'right',\n    BOTTOM = 'bottom',\n    LEFT = 'left',\n    TOP_RIGHT = 'top-right',\n    BOTTOM_RIGHT = 'bottom-right',\n    BOTTOM_LEFT = 'bottom-left',\n    TOP_LEFT = 'top-left',\n    BODY_REF = 'body',\n}\nexport const SAFETY_MARGIN = 5;\nexport const EXTRA_BOTTOM_RIGHT_SAFETY_MARGIN = 2;\n\nexport type TCalculateWidth = {\n    prevWidth: number;\n    leftOffset: number;\n    boundaryRect: DOMRect | undefined;\n    initialSelfRight: number;\n    resize_direction: string;\n    newWidth: number;\n    minWidth: number;\n    clientX: number;\n    self: DOMRect | undefined;\n};\n\nexport type TCalculateHeight = {\n    prevHeight: number;\n    topOffset: number;\n    boundaryRect: DOMRect | undefined;\n    initialSelfBottom: number;\n    resize_direction: string;\n    newHeight: number;\n    minHeight: number;\n    clientY: number;\n    self: DOMRect | undefined;\n};\n\nexport type TCalculateZindex = {\n    setZIndex: (zIndex: number) => void;\n};\n\nexport type TDraggableProps = {\n    children: React.ReactNode;\n    boundary?: string;\n    initialValues?: {\n        width: number;\n        height: number;\n        xAxis: number;\n        yAxis: number;\n    };\n    minWidth?: number;\n    minHeight?: number;\n    enableResizing?: boolean;\n    enableDragging?: boolean;\n    header?: string;\n    onClose?: () => void;\n};\n\nexport const calculateZindex = ({ setZIndex }: TCalculateZindex) => {\n    const draggableModals = document.getElementsByClassName('draggable');\n    if (!draggableModals.length) return;\n    const maxZIndex = Array.from(draggableModals).reduce(\n        (maxZ, modal) => Math.max(maxZ, parseInt(window.getComputedStyle(modal).zIndex) || 0),\n        0\n    );\n    const newZIndex = maxZIndex + 3;\n    setZIndex(newZIndex);\n};\n\nexport const calculateWidth = ({\n    prevWidth,\n    leftOffset,\n    boundaryRect,\n    initialSelfRight,\n    resize_direction,\n    newWidth,\n    minWidth,\n    clientX,\n    self,\n}: TCalculateWidth) => {\n    const leftBoundary = boundaryRect?.left ?? 0;\n    const boundaryWidth = boundaryRect?.width ?? 0;\n    const leftLimit = leftBoundary + leftOffset + SAFETY_MARGIN;\n    const selfLeft = self?.left ?? 0;\n\n    const rightLimit = leftBoundary + boundaryWidth - (SAFETY_MARGIN + EXTRA_BOTTOM_RIGHT_SAFETY_MARGIN);\n    const calculatedPreviousWidth = rightLimit - leftLimit - (rightLimit - initialSelfRight);\n\n    if (resize_direction.includes(DRAGGABLE_CONSTANTS.LEFT)) {\n        if (newWidth >= minWidth && clientX > leftLimit) return newWidth;\n        if (clientX < leftLimit + SAFETY_MARGIN * 2) return calculatedPreviousWidth - SAFETY_MARGIN * 2;\n        return prevWidth;\n    }\n    if (resize_direction.includes(DRAGGABLE_CONSTANTS.RIGHT)) {\n        if (newWidth >= minWidth && clientX < rightLimit) return newWidth;\n        if (clientX > rightLimit) return rightLimit - selfLeft;\n        return prevWidth;\n    }\n    return prevWidth;\n};\n\nexport const calculateHeight = ({\n    prevHeight,\n    topOffset,\n    boundaryRect,\n    initialSelfBottom,\n    resize_direction,\n    newHeight,\n    minHeight,\n    clientY,\n    self,\n}: TCalculateHeight) => {\n    const topBoundary = boundaryRect?.top ?? 0;\n    const boundaryHeight = boundaryRect?.height ?? 0;\n    const topLimit = topBoundary + topOffset + SAFETY_MARGIN;\n    const selfTop = self?.top ?? 0;\n\n    const bottomLimit = topBoundary + boundaryHeight - (SAFETY_MARGIN + EXTRA_BOTTOM_RIGHT_SAFETY_MARGIN);\n    const calculatedPreviousHeight = bottomLimit - topLimit - (bottomLimit - initialSelfBottom);\n\n    if (resize_direction.includes(DRAGGABLE_CONSTANTS.TOP)) {\n        if (newHeight >= minHeight && clientY > topLimit) return newHeight;\n        if (clientY < topLimit + SAFETY_MARGIN * 2) return calculatedPreviousHeight - SAFETY_MARGIN * 2;\n        return prevHeight;\n    }\n    if (resize_direction.includes(DRAGGABLE_CONSTANTS.BOTTOM)) {\n        if (newHeight >= minHeight && clientY < bottomLimit) return newHeight;\n        if (clientY > bottomLimit) return bottomLimit - selfTop;\n        return prevHeight;\n    }\n    return prevHeight;\n};\n","import React, { useEffect, useRef, useState } from 'react';\nimport { Icon } from '@deriv/components';\nimport {\n    calculateHeight,\n    calculateWidth,\n    calculateZindex,\n    DRAGGABLE_CONSTANTS,\n    EXTRA_BOTTOM_RIGHT_SAFETY_MARGIN,\n    SAFETY_MARGIN,\n    TDraggableProps,\n} from './draggable-utils';\nimport './draggable.scss';\n\nconst Draggable: React.FC<TDraggableProps> = ({\n    children,\n    boundary,\n    initialValues = {\n        width: 400,\n        height: 400,\n        xAxis: 0,\n        yAxis: 0,\n    },\n    minWidth = 100,\n    minHeight = 100,\n    enableResizing = false,\n    enableDragging = true,\n    header = '',\n    onClose,\n}) => {\n    const [position, setPosition] = useState({ x: initialValues.xAxis, y: initialValues.yAxis });\n    const [size, setSize] = useState({ width: initialValues.width, height: initialValues.height });\n    const [zIndex, setZIndex] = useState(100);\n\n    const isResizing = useRef(false);\n    const [isDragging, setIsDragging] = useState(false);\n    const draggableRef = useRef<HTMLDivElement>(null);\n    const [boundaryRef, setBoundaryRef] = useState(\n        document.querySelector(boundary ?? DRAGGABLE_CONSTANTS.BODY_REF) as HTMLElement | null\n    );\n\n    useEffect(() => {\n        setSize({ width: initialValues.width, height: initialValues.height });\n        setPosition({ x: initialValues.xAxis, y: initialValues.yAxis });\n    }, [initialValues.height, initialValues.width, initialValues.xAxis, initialValues.yAxis]);\n\n    useEffect(() => {\n        const boundaryEl = document.querySelector(boundary ?? DRAGGABLE_CONSTANTS.BODY_REF) as HTMLElement | null;\n        setBoundaryRef(boundaryEl);\n        calculateZindex({ setZIndex });\n    }, [boundary]);\n\n    const handleMouseDown = (event: React.MouseEvent<HTMLElement, MouseEvent> | null, action: string) => {\n        event?.stopPropagation();\n        calculateZindex({ setZIndex });\n        if (!action) return;\n        const resize_direction = action;\n        isResizing.current = action !== DRAGGABLE_CONSTANTS.MOVE && enableResizing;\n        setIsDragging(action === DRAGGABLE_CONSTANTS.MOVE && enableDragging);\n\n        const boundaryRect = boundaryRef?.getBoundingClientRect();\n        const topOffset = boundaryRef?.offsetTop ?? 0;\n        const leftOffset = boundaryRef?.offsetLeft ?? 0;\n        const initialMouseX = event?.clientX ?? 0;\n        const initialMouseY = event?.clientY ?? 0;\n        const initialWidth = size?.width ?? initialValues.width;\n        const initialHeight = size?.height ?? initialValues.height;\n        const initialX = position?.x ?? 0;\n        const initialY = position?.y ?? 0;\n        const initialSelfRight = draggableRef.current?.getBoundingClientRect()?.right ?? size.width;\n        const initialSelfBottom = draggableRef.current?.getBoundingClientRect()?.bottom ?? size.height;\n\n        let previousStyle = {};\n        let previousPointerEvent = 'unset';\n        const draggableContentBody = draggableRef.current?.querySelector(\n            '#draggable-content-body'\n        ) as HTMLElement | null;\n\n        if (draggableContentBody) {\n            const { style } = draggableContentBody;\n            if (style && style.pointerEvents !== 'none') {\n                previousStyle = { ...style };\n                previousPointerEvent = style.pointerEvents;\n                style.pointerEvents = 'none';\n            }\n        }\n\n        const handleMouseMove = (e: { clientX: number; clientY: number }) => {\n            if (!e) return;\n            const { clientX, clientY } = e;\n            const deltaX = clientX - initialMouseX;\n            const deltaY = clientY - initialMouseY;\n            try {\n                if (isResizing.current) {\n                    handleResize(deltaX, deltaY, clientX, clientY);\n                } else {\n                    handleDrag(deltaX, deltaY);\n                }\n            } catch (error) {\n                handleMouseUp();\n            }\n        };\n\n        const handleResize = (deltaX: number, deltaY: number, clientX: number, clientY: number) => {\n            let newX = position?.x ?? 0;\n            let newY = position?.y ?? 0;\n            let newWidth = initialWidth;\n            let newHeight = initialHeight;\n\n            if (resize_direction.includes(DRAGGABLE_CONSTANTS.RIGHT)) {\n                newWidth += deltaX;\n            } else if (resize_direction.includes(DRAGGABLE_CONSTANTS.LEFT)) {\n                newX = deltaX + initialX;\n                newWidth -= deltaX;\n            }\n\n            if (resize_direction.includes(DRAGGABLE_CONSTANTS.BOTTOM)) {\n                newHeight += deltaY;\n            } else if (resize_direction.includes(DRAGGABLE_CONSTANTS.TOP)) {\n                newY = deltaY + initialY;\n                newHeight -= deltaY;\n            }\n\n            setPosition(prev => {\n                const maxY = Math.max(newY, topOffset + SAFETY_MARGIN);\n                const maxX = Math.max(newX, leftOffset + SAFETY_MARGIN);\n                return { x: newWidth <= minWidth ? prev.x : maxX, y: newHeight <= minHeight ? prev.y : maxY };\n            });\n\n            const self = draggableRef.current?.getBoundingClientRect();\n\n            setSize(prev => ({\n                width: calculateWidth({\n                    prevWidth: prev.width,\n                    leftOffset,\n                    boundaryRect,\n                    initialSelfRight,\n                    resize_direction,\n                    newWidth,\n                    minWidth,\n                    clientX,\n                    self,\n                }),\n                height: calculateHeight({\n                    prevHeight: prev.height,\n                    topOffset,\n                    boundaryRect,\n                    initialSelfBottom,\n                    resize_direction,\n                    newHeight,\n                    minHeight,\n                    clientY,\n                    self,\n                }),\n            }));\n        };\n\n        const handleDrag = (deltaX: number, deltaY: number) => {\n            const newX = deltaX + initialX;\n            const newY = deltaY + initialY;\n            const boundedX = Math.min(\n                Math.max(newX, leftOffset + SAFETY_MARGIN),\n                leftOffset +\n                    (boundaryRect?.width ?? 0) -\n                    size.width -\n                    (SAFETY_MARGIN + EXTRA_BOTTOM_RIGHT_SAFETY_MARGIN * 2)\n            );\n            const boundedY = Math.min(\n                Math.max(newY, topOffset + SAFETY_MARGIN),\n                topOffset +\n                    (boundaryRect?.height ?? 0) -\n                    size.height -\n                    (SAFETY_MARGIN + EXTRA_BOTTOM_RIGHT_SAFETY_MARGIN * 2)\n            );\n            setPosition({ x: boundedX, y: boundedY });\n        };\n\n        const handleMouseUp = () => {\n            setIsDragging(false);\n            isResizing.current = false;\n            if (draggableContentBody?.style) {\n                try {\n                    Object.assign(draggableContentBody.style, previousStyle);\n                } catch {\n                    // no need to handle this error\n                }\n                draggableContentBody.style.pointerEvents = previousPointerEvent ?? 'unset';\n            }\n            if (boundaryRef) {\n                window.removeEventListener('mousemove', handleMouseMove);\n                window.removeEventListener('mouseup', handleMouseUp);\n            }\n        };\n\n        if (boundaryRef) {\n            window.addEventListener('mousemove', handleMouseMove);\n            window.addEventListener('mouseup', handleMouseUp);\n        }\n    };\n\n    return (\n        <div\n            className={`draggable ${isDragging ? 'dragging' : ''}`}\n            style={{\n                position: 'absolute',\n                top: typeof position.y === 'number' ? position.y : 0,\n                left: typeof position.x === 'number' ? position.x : 0,\n                zIndex: typeof zIndex === 'number' ? zIndex : 0,\n            }}\n            onMouseDown={() => calculateZindex({ setZIndex })}\n            onKeyDown={() => calculateZindex({ setZIndex })}\n            data-testid='dt_react_draggable'\n            tabIndex={0}\n        >\n            <div\n                ref={draggableRef}\n                className='draggable-content'\n                data-testid='dt_react_draggable_content'\n                style={{\n                    width: typeof size.width === 'number' ? size.width : 0,\n                    height: typeof size.height === 'number' ? size.height : 0,\n                }}\n            >\n                <div\n                    id='draggable-content__header'\n                    data-testid='dt_react_draggable_handler'\n                    className='draggable-content__header'\n                    onMouseDown={e => handleMouseDown(e, DRAGGABLE_CONSTANTS.MOVE)}\n                    onKeyDown={(e: React.KeyboardEvent<HTMLElement>) =>\n                        e.key === 'Enter' && handleMouseDown(null, DRAGGABLE_CONSTANTS.MOVE)\n                    }\n                    tabIndex={0}\n                >\n                    <div className={`draggable-content__header__title`}>{header}</div>\n                    <div\n                        className={`draggable-content__header__close`}\n                        data-testid='dt_react_draggable-close-modal'\n                        onClick={onClose}\n                    >\n                        <Icon icon='IcCross' />\n                    </div>\n                </div>\n                <span className='draggable-content__body' id='draggable-content-body'>\n                    {children}\n                </span>\n                {enableResizing && (\n                    <>\n                        <div\n                            className='resizable-handle__top'\n                            data-testid='dt_resizable-handle__top'\n                            onKeyDown={(e: React.KeyboardEvent<HTMLElement>) =>\n                                e.key === 'Enter' && handleMouseDown(null, DRAGGABLE_CONSTANTS.MOVE)\n                            }\n                            onMouseDown={e => handleMouseDown(e, DRAGGABLE_CONSTANTS.TOP)}\n                            tabIndex={0}\n                        />\n                        <div\n                            className='resizable-handle__right'\n                            data-testid='dt_resizable-handle__right'\n                            onKeyDown={(e: React.KeyboardEvent<HTMLElement>) =>\n                                e.key === 'Enter' && handleMouseDown(null, DRAGGABLE_CONSTANTS.MOVE)\n                            }\n                            onMouseDown={e => handleMouseDown(e, DRAGGABLE_CONSTANTS.RIGHT)}\n                            tabIndex={0}\n                        />\n                        <div\n                            className='resizable-handle__bottom'\n                            data-testid='dt_resizable-handle__bottom'\n                            onKeyDown={(e: React.KeyboardEvent<HTMLElement>) =>\n                                e.key === 'Enter' && handleMouseDown(null, DRAGGABLE_CONSTANTS.MOVE)\n                            }\n                            onMouseDown={e => handleMouseDown(e, DRAGGABLE_CONSTANTS.BOTTOM)}\n                            tabIndex={0}\n                        />\n                        <div\n                            className='resizable-handle__left'\n                            data-testid='dt_resizable-handle__left'\n                            onKeyDown={(e: React.KeyboardEvent<HTMLElement>) =>\n                                e.key === 'Enter' && handleMouseDown(null, DRAGGABLE_CONSTANTS.MOVE)\n                            }\n                            onMouseDown={e => handleMouseDown(e, DRAGGABLE_CONSTANTS.LEFT)}\n                            tabIndex={0}\n                        />\n                        <div\n                            className='resizable-handle__top-right'\n                            data-testid='dt_resizable-handle__top-right'\n                            onKeyDown={(e: React.KeyboardEvent<HTMLElement>) =>\n                                e.key === 'Enter' && handleMouseDown(null, DRAGGABLE_CONSTANTS.MOVE)\n                            }\n                            onMouseDown={e => handleMouseDown(e, DRAGGABLE_CONSTANTS.TOP_RIGHT)}\n                            tabIndex={0}\n                        />\n                        <div\n                            className='resizable-handle__bottom-right'\n                            data-testid='dt_resizable-handle__bottom-right'\n                            onKeyDown={(e: React.KeyboardEvent<HTMLElement>) =>\n                                e.key === 'Enter' && handleMouseDown(null, DRAGGABLE_CONSTANTS.MOVE)\n                            }\n                            onMouseDown={e => handleMouseDown(e, DRAGGABLE_CONSTANTS.BOTTOM_RIGHT)}\n                            tabIndex={0}\n                        />\n                        <div\n                            className='resizable-handle__bottom-left'\n                            data-testid='dt_resizable-handle__bottom-left'\n                            onKeyDown={(e: React.KeyboardEvent<HTMLElement>) =>\n                                e.key === 'Enter' && handleMouseDown(null, DRAGGABLE_CONSTANTS.MOVE)\n                            }\n                            onMouseDown={e => handleMouseDown(e, DRAGGABLE_CONSTANTS.BOTTOM_LEFT)}\n                            tabIndex={0}\n                        />\n                        <div\n                            className='resizable-handle__top-left'\n                            data-testid='dt_resizable-handle__top-left'\n                            onKeyDown={(e: React.KeyboardEvent<HTMLElement>) =>\n                                e.key === 'Enter' && handleMouseDown(null, DRAGGABLE_CONSTANTS.MOVE)\n                            }\n                            onMouseDown={e => handleMouseDown(e, DRAGGABLE_CONSTANTS.TOP_LEFT)}\n                            tabIndex={0}\n                        />\n                    </>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default Draggable;\n","import React, { useState } from 'react';\nimport debounce from 'lodash.debounce';\nimport Draggable from './draggable';\n\ntype DraggableResizeWrapperProps = {\n    boundary: string;\n    children: React.ReactNode;\n    onClose: () => void;\n    enableResizing?: boolean;\n    enableDragging?: boolean;\n    header: string;\n    minHeight?: number;\n    minWidth?: number;\n    modalHeight?: number;\n    modalWidth?: number;\n};\n\nconst DraggableResizeWrapper: React.FC<DraggableResizeWrapperProps> = ({\n    boundary,\n    children,\n    onClose,\n    enableResizing = false,\n    enableDragging = true,\n    header = '',\n    minHeight = 100,\n    minWidth = 100,\n    modalHeight = 400,\n    modalWidth = 400,\n}) => {\n    const [show, setShow] = useState(false);\n    const xAxisValue = (window.innerWidth - modalWidth) / 2;\n    const yAxisValue = (window.innerHeight - modalHeight) / 2;\n\n    const [initialValues, setInitialValues] = React.useState({\n        width: modalWidth,\n        height: modalHeight,\n        xAxis: xAxisValue >= 0 ? xAxisValue : 0,\n        yAxis: yAxisValue >= 0 ? yAxisValue : 0,\n    });\n\n    const handleResize = debounce(() => {\n        const newWidth = window.innerWidth > modalWidth ? modalWidth : window.innerWidth - 50;\n        const newHeight = window.innerHeight > modalHeight ? modalHeight : window.innerHeight - 50;\n        const newx = (window.innerWidth - newWidth) / 2;\n        const newy = (window.innerHeight - newHeight) / 2;\n\n        setInitialValues({\n            width: newWidth,\n            height: newHeight,\n            xAxis: newx >= 0 ? newx : 0,\n            yAxis: newy >= 0 ? newy : 0,\n        });\n        setShow(true);\n    }, 0);\n\n    React.useEffect(() => {\n        handleResize();\n        window.addEventListener('resize', handleResize);\n        return () => {\n            window.removeEventListener('resize', handleResize);\n        };\n    }, [handleResize]);\n\n    return (\n        <div id='draggable_resize_container'>\n            {show && (\n                <Draggable\n                    boundary={boundary}\n                    initialValues={initialValues}\n                    minWidth={minWidth}\n                    minHeight={minHeight}\n                    enableResizing={enableResizing}\n                    enableDragging={enableDragging}\n                    header={header}\n                    onClose={onClose}\n                >\n                    {children}\n                </Draggable>\n            )}\n        </div>\n    );\n};\n\nexport default DraggableResizeWrapper;\n","import { action, makeObservable, reaction, when } from 'mobx';\nimport { TApiHelpersStore, TDbotStore } from 'src/types/stores.types';\nimport { ApiHelpers, DBot, runIrreversibleEvents } from '@deriv/bot-skeleton';\nimport { ContentFlag, isEuResidenceWithOnlyVRTC, routes, showDigitalOptionsUnavailableError } from '@deriv/shared';\nimport { TStores } from '@deriv/stores/types';\nimport { localize } from '@deriv/translations';\nimport RootStore from './root-store';\nimport { setCurrency } from '@deriv/bot-skeleton/src/scratch/utils';\n\nexport default class AppStore {\n    root_store: RootStore;\n    core: TStores;\n    dbot_store: TDbotStore | null;\n    api_helpers_store: TApiHelpersStore | null;\n    timer: ReturnType<typeof setInterval> | null;\n    disposeReloadOnLanguageChangeReaction: unknown;\n    disposeCurrencyReaction: unknown;\n    disposeSwitchAccountListener: unknown;\n    disposeLandingCompanyChangeReaction: unknown;\n    disposeResidenceChangeReaction: unknown;\n\n    constructor(root_store: RootStore, core: TStores) {\n        makeObservable(this, {\n            onMount: action,\n            onUnmount: action,\n            onBeforeUnload: action,\n            registerReloadOnLanguageChange: action,\n            registerCurrencyReaction: action,\n            registerOnAccountSwitch: action,\n            registerLandingCompanyChangeReaction: action,\n            registerResidenceChangeReaction: action,\n            setDBotEngineStores: action,\n            onClickOutsideBlockly: action,\n            showDigitalOptionsMaltainvestError: action,\n        });\n\n        this.root_store = root_store;\n        this.core = core;\n        this.dbot_store = null;\n        this.api_helpers_store = null;\n        this.timer = null;\n    }\n\n    getErrorForNonEuClients = () => ({\n        text: localize(\n            'Unfortunately, this trading platform is not available for EU Deriv account. Please switch to a non-EU account to continue trading.'\n        ),\n        title: localize('Deriv Bot is unavailable for this account'),\n        link: localize('Switch to another account'),\n    });\n\n    getErrorForEuClients = (is_logged_in = false, country: string | undefined = undefined) => {\n        return {\n            text: ' ',\n            title: is_logged_in\n                ? localize(`Deriv Bot is not available for ${country || 'EU'} clients`)\n                : localize(`Deriv Bot is unavailable in ${country || 'the EU'}`),\n            link: is_logged_in ? localize(\"Back to Trader's Hub\") : '',\n            route: routes.traders_hub,\n        };\n    };\n\n    throwErrorForExceptionCountries = (client_country: string) => {\n        const { client, common } = this.core;\n\n        const not_allowed_clients_country: { [key: string]: string } = {\n            au: 'Australian',\n            sg: 'Singaporean',\n        };\n\n        const country_name = not_allowed_clients_country[client_country];\n\n        if (country_name) {\n            return showDigitalOptionsUnavailableError(\n                common.showError,\n                this.getErrorForEuClients(client.is_logged_in, country_name)\n            );\n        }\n    };\n\n    handleErrorForEu = (show_default_error = false) => {\n        const { client, common, ui, traders_hub } = this.core;\n        const toggleAccountsDialog = ui?.toggleAccountsDialog;\n\n        if (!client?.is_logged_in && client?.is_eu_country) {\n            if (client?.has_logged_out) {\n                window.location.href = routes.traders_hub;\n            }\n\n            this.throwErrorForExceptionCountries(client?.clients_country);\n            return showDigitalOptionsUnavailableError(common.showError, this.getErrorForEuClients());\n        }\n\n        if (!client.is_landing_company_loaded) {\n            return false;\n        }\n\n        if (window.location.pathname.includes(routes.bot)) {\n            this.throwErrorForExceptionCountries(client?.account_settings?.country_code as string);\n            if (client.should_show_eu_error) {\n                return showDigitalOptionsUnavailableError(\n                    common.showError,\n                    this.getErrorForEuClients(client.is_logged_in)\n                );\n            }\n\n            if (traders_hub.content_flag === ContentFlag.HIGH_RISK_CR) {\n                return false;\n            }\n\n            if (traders_hub.content_flag === ContentFlag.LOW_RISK_CR_EU && toggleAccountsDialog) {\n                return showDigitalOptionsUnavailableError(\n                    common.showError,\n                    this.getErrorForNonEuClients(),\n                    toggleAccountsDialog,\n                    false,\n                    false\n                );\n            }\n\n            if (\n                ((!client.is_bot_allowed && client.is_eu && client.should_show_eu_error) ||\n                    isEuResidenceWithOnlyVRTC(client.active_accounts) ||\n                    client.is_options_blocked) &&\n                toggleAccountsDialog\n            ) {\n                return showDigitalOptionsUnavailableError(\n                    common.showError,\n                    this.getErrorForNonEuClients(),\n                    toggleAccountsDialog,\n                    false,\n                    false\n                );\n            }\n        }\n\n        if (show_default_error && common.has_error) {\n            if (common.setError) common.setError(false, { message: '' });\n        }\n        return false;\n    };\n\n    onMount = () => {\n        const { blockly_store, run_panel } = this.root_store;\n        const { client, ui, traders_hub } = this.core;\n        const { is_dark_mode_on } = ui;\n        this.showDigitalOptionsMaltainvestError();\n\n        let timer_counter = 1;\n\n        this.timer = setInterval(() => {\n            if (window.sendRequestsStatistic) {\n                window.sendRequestsStatistic(false);\n                performance.clearMeasures();\n                if (timer_counter === 6 || run_panel?.is_running) {\n                    if (this.timer) clearInterval(this.timer);\n                } else {\n                    timer_counter++;\n                }\n            }\n        }, 10000);\n\n        blockly_store.setLoading(true);\n        DBot.initWorkspace(\n            __webpack_public_path__,\n            this.dbot_store,\n            this.api_helpers_store,\n            ui.is_mobile,\n            is_dark_mode_on\n        ).then(() => {\n            blockly_store.setContainerSize();\n            blockly_store.setLoading(false);\n        });\n        this.registerReloadOnLanguageChange();\n        this.registerCurrencyReaction.call(this);\n        this.registerOnAccountSwitch.call(this);\n        this.registerLandingCompanyChangeReaction.call(this);\n        this.registerResidenceChangeReaction.call(this);\n\n        window.addEventListener('click', this.onClickOutsideBlockly);\n        window.addEventListener('beforeunload', this.onBeforeUnload);\n\n        blockly_store.getCachedActiveTab();\n\n        when(\n            () => client?.should_show_eu_error || client?.is_landing_company_loaded,\n            () => this.showDigitalOptionsMaltainvestError()\n        );\n\n        reaction(\n            () => traders_hub?.content_flag,\n            () => this.showDigitalOptionsMaltainvestError()\n        );\n    };\n\n    onUnmount = () => {\n        DBot.terminateBot();\n        DBot.terminateConnection();\n        if (window.Blockly.derivWorkspace) {\n            clearInterval(window.Blockly.derivWorkspace.save_workspace_interval);\n            window.Blockly.derivWorkspace.dispose();\n        }\n        if (typeof this.disposeReloadOnLanguageChangeReaction === 'function') {\n            this.disposeReloadOnLanguageChangeReaction();\n        }\n        if (typeof this.disposeCurrencyReaction === 'function') {\n            this.disposeCurrencyReaction();\n        }\n        if (typeof this.disposeSwitchAccountListener === 'function') {\n            this.disposeSwitchAccountListener();\n        }\n        if (typeof this.disposeLandingCompanyChangeReaction === 'function') {\n            this.disposeLandingCompanyChangeReaction();\n        }\n        if (typeof this.disposeResidenceChangeReaction === 'function') {\n            this.disposeResidenceChangeReaction();\n        }\n\n        window.removeEventListener('click', this.onClickOutsideBlockly);\n        window.removeEventListener('beforeunload', this.onBeforeUnload);\n\n        // Ensure account switch is re-enabled.\n        const { ui } = this.core;\n\n        ui.setAccountSwitcherDisabledMessage();\n        ui.setPromptHandler(false);\n\n        if (this.timer) clearInterval(this.timer);\n        performance.clearMeasures();\n    };\n\n    onBeforeUnload = (event: Event) => {\n        const { is_stop_button_visible } = this.root_store.run_panel;\n\n        if (is_stop_button_visible) {\n            event.returnValue = true;\n        }\n    };\n\n    registerReloadOnLanguageChange = () => {\n        this.disposeReloadOnLanguageChangeReaction = reaction(\n            () => this.core.common.current_language,\n            () => {\n                // temporarily added this to refresh just dbot in case of changing language,\n                // otherwise it should change language without refresh.\n                const { pathname } = window.location;\n                const is_bot =\n                    /^\\/bot/.test(pathname) || (/^\\/(br_)/.test(pathname) && pathname.split('/')[2] === 'bot');\n                if (is_bot) window.location.reload();\n            }\n        );\n    };\n\n    registerCurrencyReaction = () => {\n        // Syncs all trade options blocks' currency with the client's active currency.\n        this.disposeCurrencyReaction = reaction(\n            () => this.core.client.currency,\n            () => {\n                if (!window.Blockly.derivWorkspace) return;\n\n                const trade_options_blocks = window.Blockly.derivWorkspace\n                    .getAllBlocks()\n                    .filter(\n                        b =>\n                            b.type === 'trade_definition_tradeoptions' ||\n                            b.type === 'trade_definition_multiplier' ||\n                            b.type === 'trade_definition_accumulator' ||\n                            (b.isDescendantOf('trade_definition_multiplier') && b.category_ === 'trade_parameters')\n                    );\n\n                trade_options_blocks.forEach(trade_options_block => setCurrency(trade_options_block));\n            }\n        );\n    };\n\n    registerOnAccountSwitch = () => {\n        const { client } = this.core;\n\n        this.disposeSwitchAccountListener = reaction(\n            () => client.switch_broadcast,\n            switch_broadcast => {\n                if (!switch_broadcast) return;\n                this.showDigitalOptionsMaltainvestError();\n\n                if (ApiHelpers.instance) {\n                    const { active_symbols, contracts_for } = ApiHelpers.instance;\n\n                    if (window.Blockly.derivWorkspace) {\n                        active_symbols.retrieveActiveSymbols(true).then(() => {\n                            contracts_for.disposeCache();\n                            window.Blockly.derivWorkspace\n                                .getAllBlocks()\n                                .filter(block => block.type === 'trade_definition_market')\n                                .forEach(block => {\n                                    runIrreversibleEvents(() => {\n                                        const fake_create_event = new window.Blockly.Events.BlockCreate(block);\n                                        window.Blockly.Events.fire(fake_create_event);\n                                    });\n                                });\n                        });\n                    }\n                    DBot.initializeInterpreter();\n                }\n            }\n        );\n    };\n\n    registerLandingCompanyChangeReaction = () => {\n        const { client } = this.core;\n\n        this.disposeLandingCompanyChangeReaction = reaction(\n            () => client.landing_company_shortcode,\n            () => this.handleErrorForEu()\n        );\n    };\n\n    registerResidenceChangeReaction = () => {\n        const { client } = this.core;\n\n        this.disposeResidenceChangeReaction = reaction(\n            () => client.account_settings.country_code,\n            () => this.handleErrorForEu()\n        );\n    };\n\n    setDBotEngineStores = () => {\n        // DO NOT pass the rootstore in, if you need a prop define it in dbot-skeleton-store and pass it through.\n        const { flyout, toolbar, save_modal, dashboard, load_modal, run_panel, blockly_store, summary_card } =\n            this.root_store;\n        const { client } = this.core;\n        const { handleFileChange } = load_modal;\n        const { setLoading } = blockly_store;\n        const { setContractUpdateConfig } = summary_card;\n        const {\n            ui: { is_mobile },\n        } = this.core;\n\n        this.dbot_store = {\n            client,\n            flyout,\n            toolbar,\n            save_modal,\n            dashboard,\n            load_modal,\n            run_panel,\n            setLoading,\n            setContractUpdateConfig,\n            handleFileChange,\n            is_mobile,\n        };\n\n        this.api_helpers_store = {\n            server_time: this.core.common.server_time,\n            ws: this.root_store.ws,\n        };\n    };\n\n    onClickOutsideBlockly = (event: Event) => {\n        if (document.querySelector('.injectionDiv')) {\n            const path = event.path || (event.composedPath && event.composedPath());\n            const is_click_outside_blockly = !path.some(\n                (el: Element) => el.classList && el.classList.contains('injectionDiv')\n            );\n\n            if (is_click_outside_blockly) {\n                window.Blockly?.hideChaff(/* allowToolbox */ false);\n            }\n        }\n    };\n\n    showDigitalOptionsMaltainvestError = () => {\n        this.handleErrorForEu(true);\n    };\n}\n","type TTabsTitle = {\n    [key: string]: string | number;\n};\n\ntype TDashboardTabIndex = {\n    [key: string]: number;\n};\n\nexport const tabs_title: TTabsTitle = Object.freeze({\n    WORKSPACE: 'Workspace',\n    CHART: 'Chart',\n});\n\nexport const DBOT_TABS: TDashboardTabIndex = Object.freeze({\n    DASHBOARD: 0,\n    BOT_BUILDER: 1,\n    CHART: 2,\n    TUTORIAL: 3,\n});\n\nexport const MAX_STRATEGIES = 10;\n\nexport const TAB_IDS = ['id-dbot-dashboard', 'id-bot-builder', 'id-charts', 'id-tutorials'];\n\nexport const DEBOUNCE_INTERVAL_TIME = 500;\n","const getSettingsFromLocal = () => {\n    return JSON.parse(localStorage.getItem('dbot_settings'));\n};\n\nexport const getSetting = (key: string) => {\n    const settings = getSettingsFromLocal();\n    if (!settings) return null;\n    return settings[key];\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const storeSetting = (key: string, value: any) => {\n    const settings = getSettingsFromLocal() || {};\n    settings[key] = value;\n    localStorage.setItem('dbot_settings', JSON.stringify(settings));\n};\n\nexport const removeKeyValue = (key: string) => {\n    const settings = getSettingsFromLocal() || {};\n    delete settings[key];\n\n    localStorage.setItem('dbot_settings', JSON.stringify(settings));\n};\n","import { action, makeObservable, observable } from 'mobx';\nimport { onWorkspaceResize } from '@deriv/bot-skeleton';\nimport { tabs_title } from 'Constants/bot-contents';\nimport { getSetting, storeSetting } from 'Utils/settings';\nimport RootStore from './root-store';\n\nexport default class BlocklyStore {\n    root_store: RootStore;\n\n    constructor(root_store: RootStore) {\n        makeObservable(this, {\n            is_loading: observable,\n            active_tab: observable,\n            setLoading: action,\n            setActiveTab: action,\n        });\n        this.root_store = root_store;\n    }\n\n    is_loading = false;\n    active_tab = tabs_title.WORKSPACE;\n\n    setActiveTab = (tab: string): void => {\n        this.active_tab = tab;\n        storeSetting('active_tab', this.active_tab);\n    };\n\n    setContainerSize = (): void => {\n        if (this.active_tab === tabs_title.WORKSPACE) {\n            onWorkspaceResize();\n        }\n    };\n\n    onMount = (): void => {\n        window.addEventListener('resize', this.setContainerSize);\n    };\n\n    getCachedActiveTab = (): void => {\n        if (getSetting('active_tab')) {\n            this.active_tab = getSetting('active_tab');\n        }\n    };\n\n    onUnmount = (): void => {\n        window.removeEventListener('resize', this.setContainerSize);\n    };\n\n    setLoading = (is_loading: boolean): void => {\n        this.is_loading = is_loading;\n    };\n}\n","import { action, computed, makeObservable, observable, reaction } from 'mobx';\nimport {\n    ActiveSymbolsRequest,\n    ServerTimeRequest,\n    TicksHistoryRequest,\n    TicksStreamRequest,\n    TradingTimesRequest,\n} from '@deriv/api-types';\nimport { ServerTime } from '@deriv/bot-skeleton';\nimport { LocalStore } from '@deriv/shared';\nimport RootStore from './root-store';\n\nexport const g_subscribers_map: Partial<Record<string, ReturnType<typeof WS.subscribeTicksHistory>>> = {};\nlet WS: RootStore['ws'];\n\nexport default class ChartStore {\n    root_store: RootStore;\n    constructor(root_store: RootStore) {\n        makeObservable(this, {\n            symbol: observable,\n            is_chart_loading: observable,\n            chart_type: observable,\n            granularity: observable,\n            is_contract_ended: computed,\n            updateSymbol: action,\n            onSymbolChange: action,\n            updateGranularity: action,\n            updateChartType: action,\n            setChartStatus: action,\n            restoreFromStorage: action,\n        });\n\n        this.root_store = root_store;\n        WS = root_store.ws;\n        const { run_panel } = root_store;\n\n        reaction(\n            () => run_panel.is_running,\n            () => (run_panel.is_running ? this.onStartBot() : this.onStopBot())\n        );\n\n        this.restoreFromStorage();\n    }\n\n    symbol: string | undefined;\n    is_chart_loading: boolean | undefined;\n    chart_type: string | undefined;\n    granularity: number | undefined;\n\n    get is_contract_ended() {\n        const { transactions } = this.root_store;\n\n        return transactions.contracts.length > 0 && transactions.contracts[0].is_ended;\n    }\n\n    onStartBot = () => {\n        this.updateSymbol();\n    };\n\n    // eslint-disable-next-line\n    onStopBot = () => {\n        // const { main_content } = this.root_store;\n        // main_content.setActiveTab(tabs_title.WORKSPACE);\n    };\n\n    updateSymbol = () => {\n        const workspace = window.Blockly.derivWorkspace;\n        const market_block = workspace.getAllBlocks().find((block: Blockly.Block) => {\n            return block.type === 'trade_definition_market';\n        });\n\n        if (market_block && market_block !== 'na') {\n            const symbol = market_block.getFieldValue('SYMBOL_LIST');\n            this.symbol = symbol;\n        }\n    };\n\n    onSymbolChange = (symbol: string) => {\n        this.symbol = symbol;\n        this.saveToLocalStorage();\n    };\n\n    updateGranularity = (granularity: number) => {\n        this.granularity = granularity;\n        this.saveToLocalStorage();\n    };\n\n    updateChartType = (chart_type: string) => {\n        this.chart_type = chart_type;\n        this.saveToLocalStorage();\n    };\n\n    setChartStatus = (status: boolean) => {\n        this.is_chart_loading = status;\n    };\n\n    saveToLocalStorage = () => {\n        LocalStore.set(\n            'bot.chart_props',\n            JSON.stringify({\n                symbol: this.symbol,\n                granularity: this.granularity,\n                chart_type: this.chart_type,\n            })\n        );\n    };\n\n    restoreFromStorage = () => {\n        try {\n            const props = LocalStore.get('bot.chart_props');\n\n            if (props) {\n                const { symbol, granularity, chart_type } = JSON.parse(props);\n                this.symbol = symbol;\n                this.granularity = granularity;\n                this.chart_type = chart_type;\n            } else {\n                this.granularity = 0;\n                this.chart_type = 'line';\n            }\n        } catch {\n            LocalStore.remove('bot.chart_props');\n        }\n    };\n\n    // #region WS\n    wsSubscribe = (req: TicksStreamRequest, callback: () => void) => {\n        if (req.subscribe === 1) {\n            const key = JSON.stringify(req);\n            const subscriber = WS.subscribeTicksHistory(req, callback);\n            g_subscribers_map[key] = subscriber;\n        }\n    };\n\n    wsForget = (req: TicksHistoryRequest) => {\n        const key = JSON.stringify(req);\n        if (g_subscribers_map[key]) {\n            g_subscribers_map[key]?.unsubscribe();\n            delete g_subscribers_map[key];\n        }\n    };\n\n    wsForgetStream = (stream_id: string) => {\n        WS.forgetStream(stream_id);\n    };\n\n    wsSendRequest = (req: TradingTimesRequest | ActiveSymbolsRequest | ServerTimeRequest) => {\n        if ('time' in req && req.time) {\n            return ServerTime.timePromise().then(() => {\n                return {\n                    msg_type: 'time',\n                    time: ServerTime.get().unix(),\n                };\n            });\n        }\n        if ('active_symbols' in req && req.active_symbols) {\n            return WS.activeSymbols();\n        }\n        if (WS.storage.send) return WS.storage.send(req);\n    };\n\n    getMarketsOrder = (active_symbols: { market: string; display_name: string }[]) => {\n        const synthetic_index = 'synthetic_index';\n\n        const has_synthetic_index = !!active_symbols.find(s => s.market === synthetic_index);\n        return active_symbols\n            .slice()\n            .sort((a, b) => (a.display_name < b.display_name ? -1 : 1))\n            .map(s => s.market)\n            .reduce(\n                (arr, market) => {\n                    if (arr.indexOf(market) === -1) arr.push(market);\n                    return arr;\n                },\n                has_synthetic_index ? [synthetic_index] : []\n            );\n    };\n}\n","import { getImageLocation } from '../../public-path';\nimport { localize } from '@deriv/translations';\nimport { TDescriptionItem } from '../../pages/bot-builder/quick-strategy/types';\n\nexport const D_ALEMBERT: TDescriptionItem[] = [\n    {\n        type: 'subtitle',\n        content: [localize('Exploring the D’Alembert strategy in Deriv Bot')],\n        expanded: true,\n        no_collapsible: false,\n    },\n    {\n        type: 'text',\n        content: [\n            localize(\n                \"The D'Alembert strategy involves increasing your stake after a losing trade and reducing it after a successful trade by a predetermined number of units.\"\n            ),\n        ],\n    },\n    {\n        type: 'subtitle',\n        content: [localize('Key parameters')],\n    },\n    {\n        type: 'text',\n        content: [localize('These are the trade parameters used for D’Alembert strategy in Deriv Bot.')],\n    },\n    {\n        type: 'text',\n        content: [\n            localize(\n                '<strong>Initial stake:</strong> The amount that you are willing to place as a stake to enter a trade. This is the starting point for any changes in stake depending on the dynamic of the strategy being used.'\n            ),\n        ],\n    },\n    {\n        type: 'text',\n        content: [\n            localize(\n                '<strong>Unit:</strong> The number of units that are added in the event of a trade resulting in loss or the number of units removed in the event of a trade resulting in profit. For example, if the unit is set at 2, the stake increases or decreases by two times the initial stake of 1 USD, meaning it changes by 2 USD.'\n            ),\n        ],\n    },\n    {\n        type: 'text',\n        content: [\n            localize(\n                '<strong>Profit threshold:</strong> The bot will stop trading if your total profit exceeds this amount.'\n            ),\n        ],\n    },\n    {\n        type: 'text',\n        content: [\n            localize(\n                '<strong>Loss threshold:</strong> The bot will stop trading if your total loss exceeds this amount.'\n            ),\n        ],\n    },\n    {\n        type: 'subtitle',\n        content: [localize('An example of D’Alembert strategy')],\n    },\n    {\n        type: 'media',\n        src: getImageLocation('dalembert.svg'),\n        alt: localize('An example of D’Alembert strategy'),\n    },\n    {\n        type: 'text',\n        content: [\n            localize('1. Start with the initial stake. In this example, we’ll use 1 USD.'),\n            localize('2. Set your preferred unit. In this example, it is 2 units or 2 USD.'),\n            localize(\n                '3. If the first trade results in profit, the stake for the following trade will not reduce but remain at the initial stake. The strategy minimally trades at the initial stake of 1 USD. See A1.'\n            ),\n            localize(\n                '4. If the second trade results in a loss, the Deriv Bot will automatically increase your stake for the next trade by 2 USD. Deriv Bot will continue to add 2 USD to the previous round’s stake after every losing trade. See A2.'\n            ),\n            localize(\n                '5. If the next trades are profitable, the stake for the following trade will be reduced by 2 USD. This can be shown above where the stake of 3 USD is reduced to 1 USD. See A3.'\n            ),\n        ],\n    },\n    {\n        type: 'subtitle',\n        content: [localize('Profit and loss thresholds')],\n    },\n    {\n        type: 'text',\n        content: [\n            localize(\n                \"With Deriv Bot, traders can set the profit and loss thresholds to secure potential profits and limit potential losses. This means that the trading bot will automatically stop when either the profit or loss thresholds are reached. It's a form of risk management that can potentially enhance returns. For example, if a trader sets the profit threshold at 100 USD and the strategy exceeds 100 USD of profit from all trades, then the bot will stop running.\"\n            ),\n        ],\n    },\n    {\n        type: 'subtitle',\n        content: [localize('Estimating the lifespan of your trades')],\n    },\n    {\n        type: 'text',\n        content: [\n            localize(\n                'The D’Alembert strategy is less risky than Martingale, but you can still determine how long your funds will last with this strategy before trading. Simply use this formula.'\n            ),\n        ],\n    },\n    {\n        type: 'media',\n        src: getImageLocation('dalembert_formula_1.svg'),\n        dark_src: getImageLocation('dalembert_formula_dark_1.svg'),\n        alt: localize('D’Alembert formula 1'),\n        className: 'formula',\n        styles: { height: '6rem' },\n    },\n    {\n        type: 'text',\n        content: [\n            localize('Where:'),\n            localize('R is the number of rounds a trader can sustain given a specific loss threshold.'),\n            localize('B is the loss threshold.'),\n            localize('s is the initial stake.'),\n            localize('f is the unit increment.'),\n        ],\n        className: 'no-margin',\n    },\n    {\n        type: 'text',\n        content: [\n            localize(\n                'For instance, if a trader has a loss threshold (B) of 100 USD, with an initial stake (s) of 1 USD and 2 units of increment (f), the calculation would be as follows:'\n            ),\n        ],\n        className: 'top-margin',\n    },\n    {\n        type: 'media',\n        src: getImageLocation('dalembert_formula_2.svg'),\n        dark_src: getImageLocation('dalembert_formula_dark_2.svg'),\n        alt: localize('D’Alembert formula 2'),\n        className: 'formula',\n        styles: { height: '6rem' },\n    },\n    {\n        type: 'text',\n        content: [localize('Number of rounds (R) = 10')],\n    },\n    {\n        type: 'text',\n        content: [\n            localize(\n                'This means after 10 rounds of consecutive losses, this trader will lose 100 USD. This reaches the loss threshold of 100 USD, stopping the bot.'\n            ),\n        ],\n    },\n    {\n        type: 'text',\n        content: [\n            localize(\n                'This formula helps you plan your trades by considering the amount of money you have and your comfort level with risk. It involves determining your loss threshold and the initial stake you want to trade with. Then, you use this formula to calculate the number of rounds you can trade. This process provides insight into stake sizing and expectations.'\n            ),\n        ],\n    },\n    {\n        type: 'subtitle',\n        content: [localize('Summary')],\n    },\n    {\n        type: 'text',\n        content: [\n            localize(\n                \"The D'Alembert system offers more balanced trading through controlled stake progression. With prudent risk management like stake limits, it can be effectively automated in Deriv Bot. However, traders should thoroughly assess their risk appetite, test strategies on a demo account to align with their trading style before trading with real money. This allows optimising the approach and striking a balance between potential gains and losses whilst managing risk.\"\n            ),\n        ],\n    },\n    {\n        type: 'text_italic',\n        content: [localize('<strong>Disclaimer:</strong>')],\n    },\n    {\n        type: 'text_italic',\n        content: [\n            localize(\n                'Please be aware that while we may use rounded figures for illustration, a stake of a specific amount does not guarantee an exact amount in successful trades. For example, a 1 USD stake does not necessarily equate to a 1 USD profit in successful trades.'\n            ),\n        ],\n    },\n    {\n        type: 'text_italic',\n        content: [\n            localize(\n                'Trading inherently involves risks, and actual profits can fluctuate due to various factors, including market volatility and other unforeseen variables. As such, exercise caution and conduct thorough research before engaging in any trading activities.'\n            ),\n        ],\n    },\n];\n","import { getImageLocation } from '../../public-path';\nimport { localize } from '@deriv/translations';\nimport { TDescriptionItem } from '../../pages/bot-builder/quick-strategy/types';\n\nexport const MARTINGALE: TDescriptionItem[] = [\n    {\n        type: 'subtitle',\n        content: [localize('Exploring the Martingale strategy in Deriv Bot')],\n        expanded: true,\n        no_collapsible: false,\n    },\n    {\n        type: 'text',\n        content: [\n            localize(\n                'The Martingale strategy involves increasing your stake after each loss to recoup prior losses with a single successful trade.'\n            ),\n            localize(\n                \"This article explores the Martingale strategy integrated into Deriv Bot, a versatile trading bot designed to trade assets such as forex, commodities, and derived indices. We will delve into the strategy's core parameters, its application, and provide essential takeaways for traders looking to use the bot effectively.\"\n            ),\n        ],\n    },\n    {\n        type: 'subtitle',\n        content: [localize('Key parameters')],\n    },\n    {\n        type: 'text',\n        content: [localize('These are the trade parameters used in Deriv Bot with Martingale strategy.')],\n    },\n    {\n        type: 'text',\n        content: [\n            localize(\n                '<strong>Initial stake:</strong> The amount that you are willing to place as a stake to enter a trade. This is the starting point for any changes in stake depending on the dynamic of the strategy being used.'\n            ),\n        ],\n    },\n    {\n        type: 'text',\n        content: [\n            localize(\n                \"<strong>Multiplier:</strong> The multiplier used to increase your stake if you're losing a trade. The value must be greater than 1.\"\n            ),\n        ],\n    },\n    {\n        type: 'text',\n        content: [\n            localize(\n                '<strong>Profit threshold:</strong> The bot will stop trading if your total profit exceeds this amount.'\n            ),\n        ],\n    },\n    {\n        type: 'text',\n        content: [\n            localize(\n                '<strong>Loss threshold:</strong> The bot will stop trading if your total loss exceeds this amount.'\n            ),\n        ],\n    },\n    {\n        type: 'text',\n        content: [\n            localize(\n                '<strong>Maximum stake:</strong> The maximum amount you are willing to pay to enter a single trade. The stake for your next trade will reset to the initial stake if it exceeds this value. This is an optional risk management parameter.'\n            ),\n        ],\n    },\n    {\n        type: 'subtitle',\n        content: [localize('An example of Martingale strategy')],\n    },\n    {\n        type: 'media',\n        src: getImageLocation('martingale.svg'),\n        alt: localize('An example of Martingale strategy'),\n    },\n    {\n        type: 'text',\n        content: [\n            localize('1. Start with the initial stake. Let’s say 1 USD.'),\n            localize('2. Select your Martingale multiplier. In this example, it is 2.'),\n            localize(\n                '3. If the first trade ends in a loss, Deriv Bot will automatically double your stake for the next trade to 2 USD. Deriv Bot will continue to double the stake after every losing trade.'\n            ),\n            localize(\n                '4. If a trade ends in a profit, the stake for the following trade will be reset to the initial stake amount of 1 USD.'\n            ),\n        ],\n    },\n    {\n        type: 'text',\n        content: [\n            localize(\n                \"The idea is that successful trades may recoup previous losses. However, it is crucial to exercise caution as the risk can quickly increase with this strategy. With Deriv Bot, you can minimise your risk by setting a maximum stake. This is an optional risk management feature. Let’s say a maximum stake of 3 USD. If your stake for the next trade is set to exceed 3 USD, your stake will reset to the initial stake of 1 USD. If you didn't set a maximum stake, it would have increased beyond 3 USD.\"\n            ),\n        ],\n    },\n    {\n        type: 'subtitle',\n        content: [localize('Profit and loss thresholds')],\n    },\n    {\n        type: 'text',\n        content: [\n            localize(\n                \"With Deriv Bot, traders can set the profit and loss thresholds to secure potential profits and limit potential losses. This means that the trading bot will automatically stop when either the profit or loss thresholds are reached. It's a form of risk management that can potentially enhance returns. For example, if a trader sets the profit threshold at 100 USD and the strategy exceeds 100 USD of profit from all trades, then the bot will stop running.\"\n            ),\n        ],\n    },\n    {\n        type: 'subtitle',\n        content: [localize('Estimating the lifespan of your trades')],\n    },\n    {\n        type: 'text',\n        content: [\n            localize(\n                \"If you're about to start trading and haven't established a Maximum Stake as part of your risk management strategy, you can determine how long your funds will last by employing the Martingale strategy. Simply use this formula.\"\n            ),\n        ],\n    },\n    {\n        type: 'media',\n        src: getImageLocation('martingale_formula_1.svg'),\n        dark_src: getImageLocation('martingale_formula_dark_1.svg'),\n        alt: localize('Martingale formula 1'),\n        className: 'formula',\n        styles: { height: '6.5rem' },\n    },\n    {\n        type: 'text',\n        content: [\n            localize('Where:'),\n            localize('R is the number of rounds a trader can sustain given a specific loss threshold.'),\n            localize('B is the loss threshold.'),\n            localize('s is the initial stake.'),\n            localize('m is the Martingale multiplier.'),\n        ],\n        className: 'no-margin',\n    },\n    {\n        type: 'text',\n        content: [\n            localize(\n                'For instance, if a trader has a loss threshold (B) is 1000 USD, with an initial stake (s) is 1 USD, and the Martingale multiplier (m) is 2, the calculation would be as follows:'\n            ),\n        ],\n        className: 'top-margin',\n    },\n    {\n        type: 'media',\n        src: getImageLocation('martingale_formula_2.svg'),\n        dark_src: getImageLocation('martingale_formula_dark_2.svg'),\n        alt: localize('Martingale formula 2'),\n        className: 'formula',\n        styles: { height: '6.5rem' },\n    },\n    {\n        type: 'text',\n        content: [\n            localize('Number of rounds, R ≈ 9.965'),\n            localize(\n                'This means that after 10 rounds of consecutive losses, this trader will lose 1023 USD which exceeds the loss threshold of 1000 USD, stopping the bot.'\n            ),\n            localize(\n                'This formula helps you plan your trades by considering the amount of money you have and your comfort level with risk. It involves determining your loss threshold and the initial stake you want to trade with. Then, you use this formula to calculate the number of rounds you can trade. This process provides insight into stake sizing and expectations.'\n            ),\n        ],\n    },\n    {\n        type: 'subtitle',\n        content: [localize('Summary')],\n    },\n    {\n        type: 'text',\n        content: [\n            localize(\n                \"The Martingale strategy in trading may offer substantial gains but also comes with significant risks. With your selected strategy, Deriv Bot provides automated trading with risk management measures like setting initial stake, stake size, maximum stake, profit threshold and loss threshold. It's crucial for traders to assess their risk tolerance, practice in a demo account, and understand the strategy before trading with real money.\"\n            ),\n        ],\n    },\n    {\n        type: 'text_italic',\n        content: [localize('<strong>Disclaimer:</strong>')],\n    },\n    {\n        type: 'text_italic',\n        content: [\n            localize(\n                'Please be aware that while we may use rounded figures for illustration, a stake of a specific amount does not guarantee an exact amount in successful trades. For example, a 1 USD stake does not necessarily equate to a 1 USD profit in successful trades.'\n            ),\n        ],\n    },\n    {\n        type: 'text_italic',\n        content: [\n            localize(\n                'Trading inherently involves risks, and actual profits can fluctuate due to various factors, including market volatility and other unforeseen variables. As such, exercise caution and conduct thorough research before engaging in any trading activities.'\n            ),\n        ],\n    },\n];\n","import { getImageLocation } from '../../public-path';\nimport { localize } from '@deriv/translations';\nimport { TDescriptionItem } from '../../pages/bot-builder/quick-strategy/types';\n\nexport const OSCARS_GRIND: TDescriptionItem[] = [\n    {\n        type: 'subtitle',\n        content: [localize('Exploring the Oscar’s Grind strategy in Deriv Bot')],\n        expanded: true,\n        no_collapsible: false,\n    },\n    {\n        type: 'text',\n        content: [\n            localize(\n                'The Oscar’s Grind strategy is designed to potentially gain a modest yet steady profit in each trading session. This strategy splits trades into sessions and has three principles.'\n            ),\n        ],\n    },\n    {\n        type: 'subtitle',\n        content: [localize('Key parameters')],\n    },\n    {\n        type: 'text',\n        content: [localize('These are the trade parameters used for Oscar’s Grind strategy in Deriv Bot.')],\n    },\n    {\n        type: 'text',\n        content: [\n            localize(\n                '<strong>Initial stake:</strong> The amount that you are willing to place as a stake to enter a trade. This is the starting point for any changes in stake depending on the dynamic of the strategy being used.'\n            ),\n        ],\n    },\n    {\n        type: 'text',\n        content: [\n            localize(\n                '<strong>Profit threshold:</strong> The bot will stop trading if your total profit exceeds this amount.'\n            ),\n        ],\n    },\n    {\n        type: 'text',\n        content: [\n            localize(\n                '<strong>Loss threshold:</strong> The bot will stop trading if your total loss exceeds this amount.'\n            ),\n        ],\n    },\n    {\n        type: 'subtitle',\n        content: [localize('An example of Oscar’s Grind strategy')],\n    },\n    {\n        type: 'media',\n        src: getImageLocation('oscars_grind.png'),\n        alt: localize('An example of Oscar’s Grind strategy'),\n    },\n    {\n        type: 'text',\n        content: [\n            localize('<strong>Principle 1: Strategy aims to potentially make one unit of profit per session</strong>'),\n        ],\n    },\n    {\n        type: 'text',\n        content: [\n            localize(\n                'The table above demonstrates this principle by showing that when a successful trade occurs and meets the target of one unit of potential profit which is 1 USD in this example, the session ends. If trading continues, a new session will begin.'\n            ),\n        ],\n    },\n    {\n        type: 'text',\n        content: [\n            localize(\n                '<strong>Principle 2: The stake only increases when a loss trade is followed by a successful trade</strong>'\n            ),\n        ],\n    },\n    {\n        type: 'text',\n        content: [\n            localize(\n                \"The table illustrates this principle in the second session. After a trade resulting in loss in round 4 followed by a successful trade in round 5, the stake will increase to 2 USD for round 6. This is in line with the strategy's rule of raising the stake only after a loss is followed by a successful trade.\"\n            ),\n        ],\n    },\n    {\n        type: 'text',\n        content: [\n            localize(\n                '<strong>Principle 3: The stake adjusts to the gap size between current loss and the target profit for the session</strong>'\n            ),\n        ],\n    },\n    {\n        type: 'text',\n        content: [\n            localize(\n                'In round 7, the stake is adjusted downwards from 2 USD to 1 USD, to meet the target profit of 1 USD.'\n            ),\n        ],\n    },\n    {\n        type: 'text',\n        content: [\n            localize('The stake adjustment: target session profit (1 USD) - current session profit (0 USD) = 1 USD'),\n        ],\n    },\n    {\n        type: 'text',\n        content: [\n            localize(\n                'The second session concludes upon reaching the aim of one unit of potential profit per session, equivalent to 1 USD. If trading continues, a new session will commence again.'\n            ),\n        ],\n    },\n    {\n        type: 'subtitle',\n        content: [localize('Profit and loss thresholds')],\n    },\n    {\n        type: 'text',\n        content: [\n            localize(\n                'With Deriv Bot, traders can set the profit and loss thresholds to secure potential profits and limit potential losses. This means that the trading bot will automatically stop when either the profit or loss threshold is reached. This is a form of risk management that can potentially boost successful trades whilst limiting the impact of loss. For example, if a trader sets the profit threshold at 100 USD and the strategy exceeds 100 USD of profit from all trades, then the bot will stop running.'\n            ),\n        ],\n    },\n    {\n        type: 'subtitle',\n        content: [localize('Summary')],\n    },\n    {\n        type: 'text',\n        content: [\n            localize(\n                \"The Oscar's Grind strategy provides a disciplined approach for incremental gains through systematic stake progression. When integrated into Deriv Bot with proper risk management like profit or loss thresholds, it offers traders a potentially powerful automated trading technique. However, traders should first thoroughly assess their risk tolerance and first try trading on a demo account in order to familiarise with the strategy before trading with real funds.\"\n            ),\n        ],\n    },\n    {\n        type: 'text_italic',\n        content: [localize('<strong>Disclaimer:</strong>')],\n    },\n    {\n        type: 'text_italic',\n        content: [\n            localize(\n                'Please be aware that while we may use rounded figures for illustration, a stake of a specific amount does not guarantee an exact amount in successful trades. For example, a 1 USD stake does not necessarily equate to a 1 USD profit in successful trades.'\n            ),\n        ],\n    },\n    {\n        type: 'text_italic',\n        content: [\n            localize(\n                'Trading inherently involves risks, and actual profits can fluctuate due to various factors, including market volatility and other unforeseen variables. As such, exercise caution and conduct thorough research before engaging in any trading activities.'\n            ),\n        ],\n    },\n];\n","import { getImageLocation } from '../../public-path';\nimport { localize } from '@deriv/translations';\nimport { TDescriptionItem } from '../../pages/bot-builder/quick-strategy/types';\n\nexport const REVERSE_D_ALEMBERT: TDescriptionItem[] = [\n    {\n        type: 'subtitle',\n        content: [localize('Exploring the Reverse D’Alembert strategy in Deriv Bot')],\n        expanded: true,\n        no_collapsible: false,\n    },\n    {\n        type: 'text',\n        content: [\n            localize(\n                \"The Reverse D'Alembert strategy involves increasing your stake after a successful trade and reducing it after a losing trade by a predetermined number of units.\"\n            ),\n        ],\n    },\n    {\n        type: 'subtitle',\n        content: [localize('Key parameters')],\n    },\n    {\n        type: 'text',\n        content: [localize('These are the trade parameters used in Deriv Bot with Reverse D’Alembert strategy.')],\n    },\n    {\n        type: 'text',\n        content: [\n            localize(\n                '<strong>Initial stake:</strong> The amount that you are willing to place as a stake to enter a trade. This is the starting point for any changes in stake depending on the dynamic of the strategy being used.'\n            ),\n        ],\n    },\n    {\n        type: 'text',\n        content: [\n            localize(\n                '<strong>Unit:</strong> The number of units that are added in the event of successful trades or the number of units removed in the event of losing trades. For example, if the unit is set at 2, the stake increases or decreases by two times the initial stake of 1 USD, meaning it changes by 2 USD.'\n            ),\n        ],\n    },\n    {\n        type: 'text',\n        content: [\n            localize(\n                '<strong>Profit threshold:</strong> The bot will stop trading if your total profit exceeds this amount.'\n            ),\n        ],\n    },\n    {\n        type: 'text',\n        content: [\n            localize(\n                '<strong>Loss threshold:</strong> The bot will stop trading if your total loss exceeds this amount.'\n            ),\n        ],\n    },\n    {\n        type: 'subtitle',\n        content: [localize('An example of Reverse D’Alembert strategy')],\n    },\n    {\n        type: 'media',\n        src: getImageLocation('reverse_dalembert.svg'),\n        alt: localize('An example of Reverse D’Alembert strategy'),\n    },\n    {\n        type: 'text',\n        content: [\n            localize('1. Start with the initial stake. Let’s say 1 USD.'),\n            localize('2. Select your unit. In this example, it is 2 units or 2 USD.'),\n            localize(\n                '3. For trades that result in a profit, the stake for the next trade will be increased by 2 USD. Deriv Bot will continue to add 2 USD for every successful trade. See A1.'\n            ),\n            localize(\n                '4. For trades that result in a loss, there are two outcomes.  If it was traded at the initial stake, the next trade will remain at the same amount as the strategy trades minimally at the initial stake, see A2. If it was traded with a higher amount, the stake for the next trade would be reduced by 2 USD, see A3.'\n            ),\n        ],\n    },\n    {\n        type: 'subtitle',\n        content: [localize('Profit and loss thresholds')],\n    },\n    {\n        type: 'text',\n        content: [\n            localize(\n                'With Deriv Bot, traders can set the profit and loss thresholds to secure potential profits and limit potential losses. This means that the trading bot will automatically stop when either the profit or loss threshold is reached. This is a form of risk management that can potentially boost successful trades whilst limiting the impact of loss. For example, if a trader sets the profit threshold at 100 USD and the strategy exceeds 100 USD of profit from all trades, then the bot will stop running.'\n            ),\n        ],\n    },\n    {\n        type: 'subtitle',\n        content: [localize('Summary')],\n    },\n    {\n        type: 'text',\n        content: [\n            localize(\n                \"Effective trading with the D'Alembert system requires careful consideration of its stake progression and risk management. Traders can automate this approach using Deriv Bot, setting profit and loss thresholds to ensure balanced and controlled trading. However, it is crucial for traders to assess their risk appetite, test strategies on a demo account, and align with their own trading style before transitioning to real money trading. This optimization process helps strike a balance between potential gains and losses while managing risk prudently.\"\n            ),\n        ],\n    },\n    {\n        type: 'text_italic',\n        content: [localize('<strong>Disclaimer:</strong>')],\n    },\n    {\n        type: 'text_italic',\n        content: [\n            localize(\n                'Please be aware that while we may use rounded figures for illustration, a stake of a specific amount does not guarantee an exact amount in successful trades. For example, a 1 USD stake does not necessarily equate to a 1 USD  profit in successful trades.'\n            ),\n        ],\n    },\n    {\n        type: 'text_italic',\n        content: [\n            localize(\n                'Trading inherently involves risks, and actual profits can fluctuate due to various factors, including market volatility and other unforeseen variables. As such, exercise caution and conduct thorough research before engaging in any trading activities.'\n            ),\n        ],\n    },\n];\n","import { getImageLocation } from '../../public-path';\nimport { localize } from '@deriv/translations';\nimport { TDescriptionItem } from '../../pages/bot-builder/quick-strategy/types';\n\nexport const REVERSE_MARTINGALE: TDescriptionItem[] = [\n    {\n        type: 'subtitle',\n        content: [localize('Exploring the Reverse Martingale strategy in Deriv Bot')],\n        expanded: true,\n        no_collapsible: false,\n    },\n    {\n        type: 'text',\n        content: [\n            localize(\n                'The Reverse Martingale strategy involves increasing your stake after each successful trade and resets to the initial stake for every losing trade as it aims to secure potential profits from consecutive wins.'\n            ),\n            localize(\n                \"This article explores the Reverse Martingale strategy integrated into Deriv Bot, a versatile trading bot designed to trade assets such as forex, commodities, and derived indices. We will delve into the strategy's core parameters, its application, and provide essential takeaways for traders looking to use the bot effectively.\"\n            ),\n        ],\n    },\n    {\n        type: 'subtitle',\n        content: [localize('Key parameters')],\n    },\n    {\n        type: 'text',\n        content: [localize('These are the trade parameters used in Deriv Bot with Reverse Martingale strategy.')],\n    },\n    {\n        type: 'text',\n        content: [\n            localize(\n                '<strong>Initial stake:</strong> The amount that you are willing to place as a stake to enter a trade. This is the starting point for any changes in stake depending on the dynamic of the strategy being used.'\n            ),\n        ],\n    },\n    {\n        type: 'text',\n        content: [\n            localize(\n                '<strong>Multiplier:</strong> The multiplier used to increase your stake if your trade is successful. The value must be greater than 1.'\n            ),\n        ],\n    },\n    {\n        type: 'text',\n        content: [\n            localize(\n                '<strong>Profit threshold:</strong> The bot will stop trading if your total profit exceeds this amount.'\n            ),\n        ],\n    },\n    {\n        type: 'text',\n        content: [\n            localize(\n                '<strong>Loss threshold:</strong> The bot will stop trading if your total loss exceeds this amount.'\n            ),\n        ],\n    },\n    {\n        type: 'text',\n        content: [\n            localize(\n                '<strong>Maximum stake:</strong> The maximum amount you are willing to pay to enter a single trade. The stake for your next trade will reset to the initial stake if it exceeds this value. This is an optional risk management parameter.'\n            ),\n        ],\n    },\n    {\n        type: 'subtitle',\n        content: [localize('An example of Reverse Martingale strategy')],\n    },\n    {\n        type: 'media',\n        src: getImageLocation('reverse_martingale.svg'),\n        alt: localize('An example of Martingale strategy'),\n    },\n    {\n        type: 'text',\n        content: [\n            localize('1. Start with the initial stake. Let’s say 1 USD.'),\n            localize('2. Select your Martingale multiplier. In this example, it is 2.'),\n            localize(\n                '3. If the first trade is a successful trade, Deriv Bot will automatically double your stake for the next trade to 2 USD. Deriv Bot will continue to double the stake after every successful trade.'\n            ),\n            localize(\n                '4. If a trade ends in a loss, the stake for the following trade will be reset to the initial stake amount of 1 USD.'\n            ),\n        ],\n    },\n    {\n        type: 'text',\n        content: [\n            localize(\n                'The objective of Martingale strategy is to take advantage of consecutive successful trades and maximise potential profits from them. This strategy is beneficial only if there are consecutive successful trades. Therefore, it is important to set a maximum stake to secure all the potential profits gained from a number of consecutive successful trades, or you could lose all the profits you have accumulated, including your initial stake. For example, if your goal is to maximise profits within 2 consecutive successful trades, you set a maximum stake of 2 USD, given your initial stake is 1 USD. Similarly, if your goal is to maximise profits within 3 consecutive successful trades, you set a maximum stake of 4 USD, given your initial stake is 1 USD.'\n            ),\n        ],\n    },\n    {\n        type: 'subtitle',\n        content: [localize('Profit and loss thresholds')],\n    },\n    {\n        type: 'text',\n        content: [\n            localize(\n                'With Deriv Bot, traders can set the profit and loss thresholds to secure potential profits and limit potential losses. This means that the trading bot will automatically stop when either the profit or loss threshold is reached. This is a form of risk management that can potentially boost successful trades whilst limiting the impact of loss. For example, if a trader sets the profit threshold at 100 USD and the strategy exceeds 100 USD of profit from all trades, then the bot will stop running.'\n            ),\n        ],\n    },\n    {\n        type: 'subtitle',\n        content: [localize('Summary')],\n    },\n    {\n        type: 'text',\n        content: [\n            localize(\n                \"The Reverse Martingale strategy in trading may offer substantial gains but also comes with significant risks. With your selected strategy, Deriv Bot provides automated trading with risk management measures like setting initial stake, stake size, maximum stake, profit threshold and loss threshold. It's crucial for traders to assess their risk tolerance, practice in a demo account, and understand the strategy before trading with real money.\"\n            ),\n        ],\n    },\n    {\n        type: 'text_italic',\n        content: [localize('<strong>Disclaimer:</strong>')],\n    },\n    {\n        type: 'text_italic',\n        content: [\n            localize(\n                'Please be aware that while we may use rounded figures for illustration, a stake of a specific amount does not guarantee an exact amount in successful trades. For example, a 1 USD stake does not necessarily equate to a 1 USD profit in successful trades.'\n            ),\n        ],\n    },\n    {\n        type: 'text_italic',\n        content: [\n            localize(\n                'Trading inherently involves risks, and actual profits can fluctuate due to various factors, including market volatility and other unforeseen variables. As such, exercise caution and conduct thorough research before engaging in any trading activities.'\n            ),\n        ],\n    },\n];\n","import { getImageLocation } from '../../public-path';\nimport { localize } from '@deriv/translations';\nimport { TDescriptionItem } from '../../pages/bot-builder/quick-strategy/types';\n\nexport const STRATEGY_1_3_2_6: TDescriptionItem[] = [\n    {\n        type: 'subtitle',\n        content: [localize('Exploring the 1-3-2-6 strategy in Deriv Bot')],\n        expanded: true,\n        no_collapsible: false,\n    },\n    {\n        type: 'text',\n        content: [\n            localize(\n                'The 1-3-2-6 strategy aims to maximise potential profits with four consecutive successful trades. One unit is equal to the amount of the initial stake. The stake will adjust from 1 unit to 3 units after the first successful trade, then to 2 units after your second successful trade, and to 6 units after the third successful trade. The stake for the next trade will reset to the initial stake if there is a losing trade or a completion of the trade cycle.'\n            ),\n            localize(\n                \"This article explores the strategy integrated into Deriv Bot, a versatile trading bot designed to trade assets such as Forex, Commodities, and Derived Indices. We will delve into the strategy's core parameters, its application, and provide essential takeaways for traders looking to use the bot effectively.\"\n            ),\n        ],\n    },\n    {\n        type: 'subtitle',\n        content: [localize('Key parameters')],\n    },\n    {\n        type: 'text',\n        content: [localize('These are the trade parameters used in Deriv Bot with 1-3-2-6 strategy.')],\n    },\n    {\n        type: 'text',\n        content: [\n            localize(\n                '<strong>Initial stake:</strong> The amount that you are willing to place as a stake to enter a trade. This is the starting point for any changes in stake depending on the dynamic of the strategy being used.'\n            ),\n        ],\n    },\n    {\n        type: 'text',\n        content: [\n            localize(\n                '<strong>Profit threshold:</strong> The bot will stop trading if your total profit exceeds this amount.'\n            ),\n        ],\n    },\n    {\n        type: 'text',\n        content: [\n            localize(\n                '<strong>Loss threshold:</strong> The bot will stop trading if your total loss exceeds this amount.'\n            ),\n        ],\n    },\n    {\n        type: 'subtitle',\n        content: [localize('An example of 1-3-2-6 strategy')],\n    },\n    {\n        type: 'media',\n        src: getImageLocation('1-3-2-6.svg'),\n        alt: localize('An example of 1-3-2-6 strategy'),\n    },\n    {\n        type: 'text',\n        content: [\n            localize('1. Start with the initial stake. Let’s say 1 USD.'),\n            localize(\n                '2. If the trade is successful, this strategy will automatically adjust your stake to 3 units of your initial stake for the next trade. In this case, the stake adjustment is 3 units and the initial stake is 1 USD, hence the next trade will start at 3 USD.'\n            ),\n            localize(\n                '3. If the second trade is also successful, your stake will adjust to 2 USD or 2 units of the initial stake for the next trade.'\n            ),\n            localize(\n                '4. However, if any trade results in a loss, your stake will reset back to the initial stake of 1 USD for the next trade. The third trade results in a loss hence the stake resets to the initial stake of 1 USD for the next trade.'\n            ),\n            localize(\n                '5. Upon reaching the initial stake, if the next trade still results in a loss, your stake will remain at the initial stake of 1 USD. This strategy will minimally trade at the initial stake. Refer to the fourth and fifth trade.'\n            ),\n            localize(\n                '6. If consecutive successful trades were to happen, the stake would follow a sequence of adjustment from 1 to 3, then 2, and 6 units of initial stake. After 4 consecutive successful trades, it completes one cycle and then the strategy will repeat itself for another cycle. If any trade results in a loss, your stake will reset back to the initial stake for the next trade.'\n            ),\n        ],\n    },\n    {\n        type: 'text',\n        content: [\n            localize(\n                'The 1-3-2-6 strategy is designed to capitalise on consecutive successful trades while minimising losses during losing streaks. The rationale behind this strategy lies in statistical probabilities, with adjustments to stake sizes based on the perceived likelihood of success. There is a higher likelihood of success in the second trade after one successful trade. Hence the stake adjusts to 3 in the second trade. In the third trade, the stake adjusts to 2 units due to a lower probability of a successful trade. If the third trade is also successful, the strategy then allocates all the previous gains (a total of 6 units of initial stake) into the fourth trade with the aim of doubling the potential profits. If the fourth trade results in a positive outcome, the strategy helps achieve a total gain of 12 units. However, it is crucial to exercise caution, as the risk can escalate quickly with this strategy, and any loss in the fourth trade forfeits all previous gains.'\n            ),\n        ],\n    },\n    {\n        type: 'subtitle',\n        content: [localize('Profit and loss thresholds')],\n    },\n    {\n        type: 'text',\n        content: [\n            localize(\n                'With Deriv Bot, traders can set the profit and loss thresholds to secure potential profits and limit potential losses. This means that the trading bot will automatically stop when either the profit or loss threshold is reached. This is a form of risk management that can potentially boost successful trades whilst limiting the impact of loss. For example, if a trader sets the profit threshold at 100 USD and the strategy exceeds 100 USD of profit from all trades, then the bot will stop running.'\n            ),\n        ],\n    },\n    {\n        type: 'subtitle',\n        content: [localize('Summary')],\n    },\n    {\n        type: 'text',\n        content: [\n            localize(\n                'The 1-3-2-6 strategy in trading may offer substantial gains but also comes with significant risks. Each stake is independent, and the strategy does not increase your chances of successful trades in the long run. If you encounter a series of losses, the strategy can lead to significant losses. Therefore, it is crucial for traders to assess their risk tolerance, practice in a demo account, utilise profit and loss thresholds, and fully comprehend the strategy before engaging in real-money trading.'\n            ),\n        ],\n    },\n    {\n        type: 'text_italic',\n        content: [localize('<strong>Disclaimer:</strong>')],\n    },\n    {\n        type: 'text_italic',\n        content: [\n            localize(\n                'Please be aware that while we may use rounded figures for illustration, a stake of a specific amount does not guarantee an exact amount in successful trades. For example, a 1 USD stake does not necessarily equate to a 1 USD profit in successful trades.'\n            ),\n            localize(\n                'Trading inherently involves risks, and actual profits can fluctuate due to various factors, including market volatility and other unforeseen variables. As such, exercise caution and conduct thorough research before engaging in any trading activities.'\n            ),\n        ],\n    },\n];\n","import { getImageLocation } from '../../public-path';\nimport { localize } from '@deriv/translations';\nimport { TFaqContent, TGuideContent, TQuickStrategyContent, TUserGuideContent } from './tutorials.types';\n\nexport const USER_GUIDE = 'user guide';\nexport const VIDEOS = 'videos on deriv bot';\nexport const QUICK_STRATEGY_GUIDES = 'quick strategy guides';\n\nexport const user_guide_content: TUserGuideContent[] = [\n    {\n        id: 1,\n        type: 'Tour',\n        subtype: 'OnBoard',\n        content: localize('Get started on Deriv Bot'),\n        src: getImageLocation('dbot-onboard-tour.png'),\n        search_id: `${USER_GUIDE}-0`,\n    },\n    {\n        id: 2,\n        type: 'Tour',\n        subtype: 'BotBuilder',\n        content: localize('Let’s build a bot!'),\n        src: getImageLocation('bot-builder-tour.png'),\n        search_id: `${USER_GUIDE}-1`,\n    },\n];\n\nexport const guide_content: TGuideContent[] = [\n    {\n        id: 1,\n        type: 'DBotVideo',\n        content: localize('An introduction to Deriv Bot'),\n        url: 'https://www.youtube.com/embed/lthEgaIY1uw',\n        src: getImageLocation('intro_to_deriv_bot.png'),\n        search_id: `${VIDEOS}-0`,\n    },\n    {\n        id: 2,\n        type: 'DBotVideo',\n        content: localize('How to build a basic trading bot with Deriv Bot'),\n        url: 'https://www.youtube.com/embed/mnpi2g7YakU',\n        src: getImageLocation('build_a_bot.png'),\n        search_id: `${VIDEOS}-1`,\n    },\n    {\n        id: 3,\n        type: 'DBotVideo',\n        content: localize('How to use Martingale strategy on Deriv Bot'),\n        url: 'https://www.youtube.com/embed/FSslvF7P00I',\n        src: getImageLocation('how_to_use_martingale.jpg'),\n        search_id: `${VIDEOS}-2`,\n    },\n    {\n        id: 4,\n        type: 'DBotVideo',\n        content: localize('Introducing Accumulator Options on Deriv Bot: Available for automated trading'),\n        url: 'https://www.youtube.com/embed/uMBBmdNaadU',\n        src: getImageLocation('introducing_accumulators_on_deriv_bot.png'),\n        search_id: `${VIDEOS}-3`,\n    },\n];\n\nexport const faq_content: TFaqContent[] = [\n    {\n        title: localize('What is Deriv Bot?'),\n        description: [\n            {\n                type: 'text',\n                content: localize(\n                    \"Deriv Bot is a web-based strategy builder for trading digital options. It’s a platform where you can build your own automated trading bot using drag-and-drop 'blocks'.\"\n                ),\n            },\n        ],\n        search_id: 'faq-0',\n    },\n    {\n        title: localize('Where do I find the blocks I need?'),\n        description: [\n            {\n                type: 'text',\n                content: localize('Follow these steps:'),\n            },\n            {\n                type: 'text',\n                content: localize('1. Go to <strong>Bot Builder</strong>.'),\n            },\n            {\n                type: 'text',\n                content: localize(\n                    \"2. Under the <strong>Blocks menu</strong>, you'll see a list of categories. Blocks are grouped within these categories. Choose the block you want and drag them to the workspace.\"\n                ),\n            },\n            {\n                type: 'image',\n                src: getImageLocation('blocks_menu.png'),\n            },\n            {\n                type: 'text',\n                content: localize(\n                    '3. You can also search for the blocks you want using the search bar above the categories.'\n                ),\n            },\n            {\n                type: 'image',\n                src: getImageLocation('blocks_menu_search.png'),\n            },\n            {\n                type: 'text',\n                content: localize(\n                    'For more info, <a href=\"https://deriv.com/blog/posts/build-a-basic-trading-bot-with-deriv-bot\" rel=\"noopener noreferrer\" target=\"_blank\">check out this blog post</a> on the basics of building a trading bot.'\n                ),\n            },\n        ],\n        search_id: 'faq-1',\n    },\n    {\n        title: localize('How do I remove blocks from the workspace?'),\n        description: [\n            {\n                type: 'text',\n                content: localize(\n                    'Click on the block you want to remove and press <strong>Delete</strong> on your keyboard.'\n                ),\n            },\n        ],\n        search_id: 'faq-2',\n    },\n    {\n        title: localize('How do I create variables?'),\n        description: [\n            {\n                type: 'text',\n                content: localize(\n                    '1. Under the <strong>Blocks</strong> menu, go to <strong>Utility > Variables</strong>.'\n                ),\n            },\n            {\n                type: 'text',\n                content: localize(\n                    '2. Enter a name for your variable, and hit <strong>Create</strong>. New blocks containing your new variable will appear below.'\n                ),\n            },\n            {\n                type: 'text',\n                content: localize('3. Choose the block you want and drag it to the workspace.'),\n            },\n        ],\n        search_id: 'faq-3',\n    },\n    {\n        title: localize('Do you offer pre-built trading bots on Deriv Bot?'),\n        description: [\n            {\n                type: 'text',\n                content: localize(\n                    \"Yes, you can get started with a pre-built bot using the <strong>Quick strategy</strong> feature. You’ll find some of the most popular trading strategies here: Martingale, D'Alembert, and Oscar's Grind. Just select the strategy, enter your trade parameters, and your bot will be created for you. You can always tweak the parameters later.\"\n                ),\n            },\n        ],\n        search_id: 'faq-4',\n    },\n    {\n        title: localize('What is a quick strategy?'),\n        description: [\n            {\n                type: 'text',\n                content: localize(\n                    \"A quick strategy is a ready-made strategy that you can use in Deriv Bot. There are 3 quick strategies you can choose from: Martingale, D'Alembert, and Oscar's Grind.\"\n                ),\n            },\n            {\n                type: 'text',\n                content: localize('<strong>Using a quick strategy</strong>'),\n            },\n            {\n                type: 'text',\n                content: localize('1. Go to <strong>Quick strategy</strong> and select the strategy you want.'),\n            },\n            {\n                type: 'text',\n                content: localize('2. Select the asset and trade type.'),\n            },\n            {\n                type: 'text',\n                content: localize('3. Set your trade parameters and hit <strong>Run</strong>.'),\n            },\n            {\n                type: 'text',\n                content: localize(\n                    '4. Once the blocks are loaded onto the workspace, tweak the parameters if you want, or hit <strong>Run</strong> to start trading.'\n                ),\n            },\n            {\n                type: 'text',\n                content: localize(\n                    '5. Hit <strong>Save</strong> to download your bot. You can choose to download your bot to your device or your Google Drive.'\n                ),\n            },\n        ],\n        search_id: 'faq-5',\n    },\n    {\n        title: localize('How do I save my strategy?'),\n        description: [\n            {\n                type: 'text',\n                content: localize(\n                    'In <strong>Bot Builder</strong>, hit <strong>Save</strong> on the toolbar at the top to download your bot. Give your bot a name, and choose to download your bot to your device or Google Drive. Your bot will be downloaded as an XML file.'\n                ),\n            },\n        ],\n        search_id: 'faq-6',\n    },\n    {\n        title: localize('How do I import my own trading bot into Deriv Bot?'),\n        description: [\n            {\n                type: 'text',\n                content: localize(\n                    'Just drag the XML file from your computer onto the workspace, and your bot will be loaded accordingly. Alternatively, you can hit <strong>Import</strong> in <strong>Bot Builder</strong>, and choose to import your bot from your computer or from your Google Drive.'\n                ),\n            },\n            {\n                type: 'text',\n                content: localize('<strong>Import from your computer</strong>'),\n            },\n            {\n                type: 'text',\n                content: localize(\n                    '1. After hitting <strong>Import</strong>, select <strong>Local</strong> and click <strong>Continue</strong>.'\n                ),\n            },\n            {\n                type: 'text',\n                content: localize('2. Select your XML file and hit <strong>Open</strong>.'),\n            },\n            {\n                type: 'text',\n                content: localize('3. Your bot will be loaded accordingly.'),\n            },\n            {\n                type: 'text',\n                content: localize('<strong>Import from your Google Drive</strong>'),\n            },\n            {\n                type: 'text',\n                content: localize(\n                    '1. After hitting <strong>Import</strong>, select <strong>Google Drive</strong> and click <strong>Continue</strong>.'\n                ),\n            },\n            {\n                type: 'text',\n                content: localize('2. Select your XML file and hit <strong>Select</strong>.'),\n            },\n            {\n                type: 'text',\n                content: localize('3. Your bot will be loaded accordingly.'),\n            },\n        ],\n        search_id: 'faq-7',\n    },\n    {\n        title: localize('How do I reset the workspace?'),\n        description: [\n            {\n                type: 'text',\n                content: localize(\n                    'In <strong>Bot Builder</strong>, hit <strong>Reset</strong> on the toolbar at the top. This will clear the workspace. Please note that any unsaved changes will be lost.'\n                ),\n            },\n        ],\n        search_id: 'faq-8',\n    },\n    {\n        title: localize('How do I clear my transaction log?'),\n        description: [\n            {\n                type: 'text',\n                content: localize('1. Hit <strong>Reset</strong> at the bottom of stats panel.'),\n            },\n            {\n                type: 'image',\n                src: getImageLocation('reset_transaction_log.png'),\n            },\n            {\n                type: 'text',\n                content: localize('2. Hit <strong>Ok</strong> to confirm.'),\n            },\n            {\n                type: 'image',\n                src: getImageLocation('reset_transaction_log_message.png'),\n            },\n        ],\n        search_id: 'faq-9',\n    },\n    {\n        title: localize('How do I control my losses with Deriv Bot?'),\n        description: [\n            {\n                type: 'text',\n                content: localize(\n                    'There are several ways to control your losses with Deriv Bot. Here’s a simple example of how you can implement loss control in your strategy:'\n                ),\n            },\n            {\n                type: 'image',\n                src: getImageLocation('loss_control_all_block.png'),\n                imageclass: 'loss-control',\n            },\n            {\n                type: 'text',\n                content: localize(\n                    '<strong>1.</strong> Create the following variables and place them under <strong>Run once at start</strong>:'\n                ),\n            },\n            {\n                type: 'text',\n                content: localize(\n                    '• <strong>Stop loss threshold</strong>: Use this variable to store your loss limit. You can assign any amount you want. Your bot will stop when your losses hits or exceeds this amount.'\n                ),\n            },\n            {\n                type: 'text',\n                content: localize('Example:'),\n            },\n            {\n                type: 'image',\n                src: getImageLocation('loss_control_set_stop_loss.png'),\n            },\n            {\n                type: 'text',\n                content: localize(\n                    '• <strong>Current stake</strong>: Use this variable to store the stake amount. You can assign any amount you want, but it must be a positive number.'\n                ),\n            },\n            {\n                type: 'text',\n                content: localize('Example:'),\n            },\n            {\n                type: 'image',\n                src: getImageLocation('loss_control_set_current_stake.png'),\n            },\n            {\n                type: 'text',\n                content: localize('This is how your trade parameters, variables, and trade options should look like:'),\n            },\n            {\n                type: 'image',\n                src: getImageLocation('loss_control_trade_parameters.png'),\n            },\n            {\n                type: 'text',\n                content: localize(\n                    '<strong>2.</strong> Set the <strong>Purchase conditions</strong>. In this example, your bot will purchase a <strong>Rise</strong> contract when it starts and after a contract closes.'\n                ),\n            },\n            {\n                type: 'image',\n                src: getImageLocation('loss_control_purchase_conditions.png'),\n            },\n            {\n                type: 'text',\n                content: localize(\n                    '<strong>3.</strong> Use a logic block to check if <strong>Total profit/loss</strong> is more than the <strong>Stop loss threshold</strong> amount. You can find the <strong>Total profit/loss</strong> variable under <strong>Analysis > Stats</strong> on the <strong>Blocks menu</strong> on the left. Your bot will continue to purchase new contracts until the <strong>Total profit/loss</strong> amount exceeds the <strong>Stop loss threshold</strong> amount.'\n                ),\n            },\n            {\n                type: 'image',\n                src: getImageLocation('loss_control_restart_trade_conditions.png'),\n            },\n        ],\n        search_id: 'faq-10',\n    },\n    {\n        title: localize('Can I run Deriv Bot on multiple tabs in my web browser?'),\n        description: [\n            {\n                type: 'text',\n                content: localize(\n                    'Yes, you can. However, there are limits on your account, such as maximum number of open positions and maximum aggregate payouts on open positions. So, just keep these limits in mind when opening multiple positions. You can find more info about these limits at <a href=\"https://app.deriv.com/account/account-limits\" rel=\"noopener noreferrer\" target=\"_blank\">Settings > Account limits</a>.'\n                ),\n            },\n        ],\n        search_id: 'faq-11',\n    },\n    {\n        title: localize('Can I trade cryptocurrencies on Deriv Bot?'),\n        description: [\n            {\n                type: 'text',\n                content: localize(\"No, we don't offer cryptocurrencies on Deriv Bot.\"),\n            },\n        ],\n        search_id: 'faq-12',\n    },\n    {\n        title: localize('Do you sell trading bots?'),\n        description: [\n            {\n                type: 'text',\n                content: localize(\n                    \"No, we don't. However, you'll find quick strategies on Deriv Bot that'll help you build your own trading bot for free.\"\n                ),\n            },\n        ],\n        search_id: 'faq-13',\n    },\n    {\n        title: localize('In which countries is Deriv Bot available?'),\n        description: [\n            {\n                type: 'text',\n                content: localize(\n                    'We offer our services in all countries, except for the ones <a href=\"https://deriv.com/tnc/general-terms.pdf\" rel=\"noopener noreferrer\" target=\"_blank\">mentioned in our terms and conditions.</a>'\n                ),\n            },\n        ],\n        search_id: 'faq-14',\n    },\n    {\n        title: localize('If I close my web browser, will Deriv Bot continue to run?'),\n        description: [\n            {\n                type: 'text',\n                content: localize('No, Deriv Bot will stop running when your web browser is closed.'),\n            },\n        ],\n        search_id: 'faq-15',\n    },\n    {\n        title: localize('What are the most popular strategies for automated trading?'),\n        description: [\n            {\n                type: 'text',\n                content: localize(\n                    \"Three of the most commonly used strategies in automated trading are Martingale, D'Alembert, and Oscar's Grind — you can find them all ready-made and waiting for you in Deriv Bot.\"\n                ),\n            },\n        ],\n        search_id: 'faq-16',\n    },\n    {\n        title: localize('How do I build a trading bot?'),\n        description: [\n            {\n                type: 'text',\n                content: localize(\n                    '<a href=\"https://www.youtube.com/watch?v=QdI5zCkO4Gk&t=203s\" rel=\"noopener noreferrer\" target=\"_blank\">Watch this video</a> to learn how to build a trading bot on Deriv Bot. Also, <a href=\"https://deriv.com/blog/posts/build-a-basic-trading-bot-with-deriv-bot/\" rel=\"noopener noreferrer\" target=\"_blank\">check out this blog post</a> on building a trading bot.'\n                ),\n            },\n        ],\n        search_id: 'faq-17',\n    },\n];\n\nexport const quick_strategy_content: TQuickStrategyContent[] = [\n    {\n        qs_name: 'MARTINGALE',\n        type: localize('About Martingale'),\n        content: [\n            localize('Exploring the Martingale strategy in Deriv Bot'),\n            localize('An example of Martingale strategy'),\n        ],\n        search_id: `${QUICK_STRATEGY_GUIDES}-0`,\n    },\n    {\n        qs_name: 'D_ALEMBERT',\n        type: localize(\"About D'Alembert\"),\n        content: [\n            localize('Exploring the D’Alembert strategy in Deriv Bot'),\n            localize('An example of D’Alembert strategy'),\n        ],\n        search_id: `${QUICK_STRATEGY_GUIDES}-1`,\n    },\n    {\n        qs_name: 'OSCARS_GRIND',\n        type: localize(\"About Oscar's Grind\"),\n        content: [\n            localize('Exploring the Oscar’s Grind strategy in Deriv Bot'),\n            localize('An example of Oscar’s Grind strategy'),\n        ],\n        search_id: `${QUICK_STRATEGY_GUIDES}-2`,\n    },\n    {\n        qs_name: 'REVERSE_MARTINGALE',\n        type: localize('About Reverse Martingale'),\n        content: [\n            localize('Exploring the Reverse Martingale strategy in Deriv Bot'),\n            localize('An example of Reverse Martingale strategy'),\n        ],\n        search_id: `${QUICK_STRATEGY_GUIDES}-3`,\n    },\n    {\n        qs_name: 'REVERSE_D_ALEMBERT',\n        type: localize('About Reverse D’Alembert'),\n        content: [\n            localize('Exploring the Reverse D’Alembert strategy in Deriv Bot'),\n            localize('An example of Reverse D’Alembert strategy'),\n        ],\n        search_id: `${QUICK_STRATEGY_GUIDES}-4`,\n    },\n    {\n        qs_name: 'STRATEGY_1_3_2_6',\n        type: localize('About 1-3-2-6'),\n        content: [localize('Exploring the 1-3-2-6 strategy in Deriv Bot'), localize('An example of 1-3-2-6 strategy')],\n        search_id: `${QUICK_STRATEGY_GUIDES}-5`,\n    },\n];\n","import { storeSetting } from 'Utils/settings';\n\ntype TTourStatus = {\n    key: string;\n    toggle: string;\n    type: string;\n};\n\ntype TTourList = {\n    [key: number]: string;\n};\n\nexport const tour_type: TTourType = {\n    key: 'onboard_tour',\n};\n\nexport const tour_status_ended: TTourStatus = {\n    key: '',\n    toggle: '',\n    type: `${tour_type.key}_status`,\n};\n\nexport type TTourType = Pick<TTourStatus, 'key'>;\n\nexport const setTourType = (param: string) => {\n    tour_type.key = param;\n};\n\nexport const highlightLoadModalButton = (tour_active: string, step: number) => {\n    const el_ref = document.querySelector('.toolbar__group-btn svg:nth-child(2)');\n    if (tour_active && step === 1) {\n        el_ref?.classList.add('dbot-tour-blink');\n    } else {\n        el_ref?.classList.remove('dbot-tour-blink');\n    }\n};\n\nexport const setTourSettings = (param: number, type: string) => {\n    return storeSetting(type, param);\n};\n\nexport const tour_list: TTourList = Object.freeze({\n    0: 'onboarding',\n    1: 'bot_builder',\n});\n","import DOMPurify from 'dompurify';\nimport { action, makeObservable, observable, reaction } from 'mobx';\nimport { TStores } from '@deriv/stores/types';\nimport { botNotification } from 'Components/bot-notification/bot-notification';\nimport { notification_message, NOTIFICATION_TYPE } from 'Components/bot-notification/bot-notification-utils';\nimport * as strategy_description from '../constants/quick-strategies';\nimport { TDescriptionItem } from '../pages/bot-builder/quick-strategy/types';\nimport {\n    faq_content,\n    guide_content,\n    quick_strategy_content,\n    USER_GUIDE,\n    user_guide_content,\n    VIDEOS,\n} from '../pages/tutorials/constants';\nimport { setTourSettings, tour_type, TTourType } from '../pages/tutorials/dbot-tours/utils';\nimport {\n    TFaqContent,\n    TGuideContent,\n    TQuickStrategyContent,\n    TUserGuideContent,\n} from '../pages/tutorials/tutorials.types';\nimport RootStore from './root-store';\n\ntype TDialogOptions = {\n    title?: string;\n    url?: string;\n    type?: string;\n};\n\nexport interface IDashboardStore {\n    active_tab: number;\n    dialog_options: TDialogOptions;\n    faq_search_value: string | null;\n    has_mobile_preview_loaded: boolean;\n    is_web_socket_intialised: boolean;\n    initInfoPanel: () => void;\n    is_dialog_open: boolean;\n    is_file_supported: boolean;\n    is_info_panel_visible: boolean;\n    is_preview_on_popup: boolean;\n    onCloseDialog: () => void;\n    onCloseTour: (param: Partial<string>) => void;\n    onTourEnd: (step: number, is_tour_active: boolean) => void;\n    setActiveTab: (active_tab: number) => void;\n    setActiveTabTutorial: (active_tab_tutorials: number) => void;\n    setFAQSearchValue: (faq_search_value: string) => void;\n    setInfoPanelVisibility: (visibility: boolean) => void;\n    setIsFileSupported: (is_file_supported: boolean) => void;\n    setWebSocketState: (is_web_socket_intialised: boolean) => void;\n    setOpenSettings: (toast_message: NOTIFICATION_TYPE) => void;\n    setPreviewOnDialog: (has_mobile_preview_loaded: boolean) => void;\n    setStrategySaveType: (param: string) => void;\n    setFaqTitle: (param: string) => void;\n    faq_title: string;\n    show_toast: boolean;\n    show_mobile_tour_dialog: boolean;\n    showVideoDialog: (param: { [key: string]: string }) => void;\n    strategy_save_type: string;\n    toast_message: string;\n    is_chart_modal_visible: boolean;\n    is_trading_view_modal_visible: boolean;\n    setPreviewOnPopup: (is_preview_on_popup: boolean) => void;\n}\n\nexport default class DashboardStore implements IDashboardStore {\n    root_store: RootStore;\n    core: TStores;\n    tutorials_combined_content: (TFaqContent | TGuideContent | TUserGuideContent | TQuickStrategyContent)[] = [];\n    combined_search: string[] = [];\n\n    constructor(root_store: RootStore, core: TStores) {\n        makeObservable(this, {\n            active_tab_tutorials: observable,\n            active_tab: observable,\n            dialog_options: observable,\n            faq_search_value: observable,\n            getFileArray: observable,\n            has_file_loaded: observable,\n            has_mobile_preview_loaded: observable,\n            initInfoPanel: action.bound,\n            active_tour: observable,\n            is_dialog_open: observable,\n            is_file_supported: observable,\n            is_info_panel_visible: observable,\n            is_preview_on_popup: observable,\n            is_tour_dialog_visible: observable,\n            is_web_socket_intialised: observable,\n            tutorials_combined_content: observable,\n            onCloseDialog: action.bound,\n            onCloseTour: action.bound,\n            onTourEnd: action.bound,\n            setActiveTab: action.bound,\n            setActiveTabTutorial: action.bound,\n            setWebSocketState: action.bound,\n            setFAQSearchValue: action.bound,\n            faq_title: observable,\n            setFaqTitle: action.bound,\n            setFileLoaded: action.bound,\n            setInfoPanelVisibility: action.bound,\n            setIsFileSupported: action.bound,\n            setPreviewOnDialog: action.bound,\n            setPreviewOnPopup: action.bound,\n            setActiveTour: action.bound,\n            setTourDialogVisibility: action.bound,\n            setOpenSettings: action.bound,\n            resetTutorialTabContent: action.bound,\n            filterTuotrialTab: action.bound,\n            show_toast: observable,\n            show_mobile_tour_dialog: observable,\n            showVideoDialog: action.bound,\n            strategy_save_type: observable,\n            toast_message: observable,\n            guide_tab_content: observable,\n            faq_tab_content: observable,\n            quick_strategy_tab_content: observable,\n            video_tab_content: observable,\n            setStrategySaveType: action.bound,\n            setShowMobileTourDialog: action.bound,\n            is_chart_modal_visible: observable,\n            is_trading_view_modal_visible: observable,\n        });\n        this.root_store = root_store;\n        this.core = core;\n\n        const getUserGuideContent = [...user_guide_content].map(\n            item => `${item.search_id}# ${item.content.toLowerCase()}`\n        );\n\n        const getVideoContent = [...guide_content].map(item => `${item.search_id}# ${item.content.toLowerCase()}`);\n\n        const getFaqContent = faq_content.map(item => {\n            return `${item.search_id}# ${item.title.toLowerCase()} ${item.description\n                .map(inner_item => {\n                    const itemWithoutHTML = DOMPurify.sanitize(inner_item.content, {\n                        ALLOWED_TAGS: [], //kept empty to remove all tags\n                    });\n                    return itemWithoutHTML?.toLowerCase();\n                })\n                .join(' ')}`;\n        });\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const getQSDescriptionContent = (strategy: any) => {\n            if (!strategy) return [];\n            const content: string[] = [];\n            strategy.forEach((item: TDescriptionItem) => {\n                if (item?.type !== 'media') {\n                    item.content?.forEach((text: string) => content.push(text));\n                }\n            });\n            return content;\n        };\n\n        const getQuickStrategyContent = quick_strategy_content.map(item => {\n            const qs_card_content = item.content.join(' ').toLowerCase();\n            let qs_description_content = getQSDescriptionContent(strategy_description?.[item.qs_name]);\n            qs_description_content = qs_description_content.join(' ').toLowerCase();\n            return `${item.search_id}# ${item.type.toLowerCase()} ${qs_description_content + qs_card_content}`;\n        });\n\n        this.combined_search = [\n            ...getUserGuideContent,\n            ...getVideoContent,\n            ...getFaqContent,\n            ...getQuickStrategyContent,\n        ];\n\n        reaction(\n            () => this.is_preview_on_popup,\n            async is_preview_on_popup => {\n                if (is_preview_on_popup) {\n                    this.setPreviewOnPopup(false);\n                }\n            }\n        );\n        this.initInfoPanel();\n    }\n\n    active_tab = 0;\n    active_tab_tutorials = 0;\n    active_tour_step_number = 0;\n    dialog_options: TDialogOptions = {};\n    faq_search_value = '';\n    getFileArray = [];\n    has_file_loaded = false;\n    has_mobile_preview_loaded = false;\n    active_tour = '';\n    is_dialog_open = false;\n    is_file_supported = false;\n    is_info_panel_visible = false;\n    is_preview_on_popup = false;\n    is_tour_dialog_visible = false;\n    show_toast = false;\n    show_mobile_tour_dialog = false;\n    strategy_save_type = 'unsaved';\n    toast_message = '';\n    is_web_socket_intialised = true;\n    search_param = '';\n    guide_tab_content = user_guide_content;\n    video_tab_content = guide_content;\n    faq_tab_content = faq_content;\n    quick_strategy_tab_content = quick_strategy_content;\n    filtered_tab_list = [];\n    is_chart_modal_visible = false;\n    is_trading_view_modal_visible = false;\n    faq_title = '';\n\n    setFaqTitle = (faq_title: string) => {\n        this.faq_title = faq_title;\n    };\n\n    resetTutorialTabContent = () => {\n        this.guide_tab_content = user_guide_content;\n        this.video_tab_content = guide_content;\n        this.faq_tab_content = faq_content;\n        this.quick_strategy_tab_content = quick_strategy_content;\n    };\n\n    filterTuotrialTab = (search_param: string) => {\n        this.search_param = search_param;\n        const foundItems = this.combined_search.filter(item => {\n            return item.includes(search_param.toLowerCase());\n        });\n\n        const filtered_user_guide: [] = [];\n        const filter_video_guide: [] = [];\n        const filtered_faq_content: [] = [];\n        const filtered_quick_strategy_content: [] = [];\n\n        const filtered_tutorial_content = foundItems.map(item => {\n            const identifier = item.split('#')[0];\n            const index: string = identifier.split('-')[1];\n            if (identifier.includes(USER_GUIDE)) {\n                filtered_user_guide.push(user_guide_content[Number(index)]);\n                return user_guide_content[Number(index)];\n            } else if (identifier.includes(VIDEOS)) {\n                filter_video_guide.push(guide_content[Number(index)]);\n                return guide_content[Number(index)];\n            } else if (identifier.includes('faq')) {\n                filtered_faq_content.push(faq_content[Number(index)]);\n                return faq_content[Number(index)];\n            }\n            filtered_quick_strategy_content.push(quick_strategy_content[Number(index)]);\n            return quick_strategy_content[Number(index)];\n        });\n\n        this.guide_tab_content = filtered_user_guide;\n        this.video_tab_content = filter_video_guide;\n        this.faq_tab_content = filtered_faq_content;\n        this.quick_strategy_tab_content = filtered_quick_strategy_content;\n\n        return filtered_tutorial_content;\n    };\n\n    get is_dark_mode() {\n        const {\n            app: {\n                core: {\n                    ui: { is_dark_mode_on },\n                },\n            },\n        } = this.root_store;\n        return is_dark_mode_on;\n    }\n\n    setShowMobileTourDialog = (show_mobile_tour_dialog: boolean) => {\n        this.show_mobile_tour_dialog = show_mobile_tour_dialog;\n    };\n\n    setWebSocketState = (is_web_socket_intialised: boolean) => {\n        this.is_web_socket_intialised = is_web_socket_intialised;\n    };\n\n    setOpenSettings = (toast_message: NOTIFICATION_TYPE) => {\n        this.toast_message = toast_message;\n        botNotification(notification_message[toast_message]);\n    };\n\n    setChartModalVisibility = () => {\n        this.is_chart_modal_visible = !this.is_chart_modal_visible;\n    };\n\n    setTradingViewModalVisibility = () => {\n        this.is_trading_view_modal_visible = !this.is_trading_view_modal_visible;\n    };\n\n    setIsFileSupported = (is_file_supported: boolean) => {\n        this.is_file_supported = is_file_supported;\n    };\n\n    initInfoPanel() {\n        if (!localStorage.getItem('dbot_should_show_info')) this.is_info_panel_visible = true;\n    }\n\n    setTourActiveStep = (active_tour_step_number: number) => {\n        this.active_tour_step_number = active_tour_step_number;\n    };\n\n    setPreviewOnDialog = (has_mobile_preview_loaded: boolean) => {\n        this.has_mobile_preview_loaded = has_mobile_preview_loaded;\n        const {\n            load_modal: { onLoadModalClose },\n        } = this.root_store;\n        onLoadModalClose();\n    };\n\n    setStrategySaveType = (strategy_save_type: string) => {\n        this.strategy_save_type = strategy_save_type;\n    };\n\n    setPreviewOnPopup = (is_preview_on_popup: boolean): void => {\n        this.is_preview_on_popup = is_preview_on_popup;\n    };\n\n    setTourDialogVisibility = (is_tour_dialog_visible: boolean): void => {\n        this.is_tour_dialog_visible = is_tour_dialog_visible;\n    };\n\n    setActiveTour = (active_tour: string): void => {\n        this.active_tour = active_tour;\n    };\n\n    setFileLoaded = (has_file_loaded: boolean): void => {\n        this.has_file_loaded = has_file_loaded;\n        const el_ref = document.getElementById('load-strategy__blockly-container');\n        if (!el_ref) {\n            // eslint-disable-next-line no-console\n            console.warn('Could not find preview workspace element.');\n        }\n    };\n\n    onCloseDialog = (): void => {\n        this.is_dialog_open = false;\n    };\n\n    setActiveTab = (active_tab: number): void => {\n        this.active_tab = active_tab;\n        localStorage.setItem('active_tab', active_tab.toString());\n    };\n\n    setActiveTabTutorial = (active_tab_tutorials: number): void => {\n        this.active_tab_tutorials = active_tab_tutorials;\n    };\n\n    setFAQSearchValue = (faq_search_value: string): void => {\n        this.faq_search_value = faq_search_value;\n    };\n\n    showVideoDialog = (dialog_option: TDialogOptions): void => {\n        const { url, type = '' } = dialog_option;\n        const dialog_type = ['google', 'url'];\n        this.faq_search_value = '';\n        this.setActiveTabTutorial(0);\n        this.resetTutorialTabContent();\n        if (dialog_type.includes(type)) {\n            if (type === 'url') {\n                this.dialog_options = {\n                    url,\n                };\n            }\n            this.is_dialog_open = true;\n        } else {\n            this.is_dialog_open = false;\n        }\n    };\n\n    setInfoPanelVisibility = (is_info_panel_visible: boolean): void => {\n        this.is_info_panel_visible = is_info_panel_visible;\n    };\n\n    onZoomInOutClick = (is_zoom_in: boolean): void => {\n        const workspace = Blockly.getMainWorkspace();\n        const metrics = workspace.getMetrics();\n        const addition = is_zoom_in ? 1 : -1;\n\n        workspace.zoom(metrics.viewWidth / 2, metrics.viewHeight / 2, addition);\n    };\n\n    onCloseTour = (): void => {\n        setTourSettings(new Date().getTime(), `${tour_type.key}_token`);\n        this.setActiveTour('');\n    };\n    setTourEnd = (param: TTourType): void => {\n        const { key } = param;\n        if (this.core.ui.is_mobile) this.setTourDialogVisibility(true);\n        setTourSettings(new Date().getTime(), `${key}_token`);\n    };\n\n    onTourEnd = (step: number, is_tour_active: boolean): void => {\n        if (step === 8) {\n            this.onCloseTour();\n            this.setTourEnd(tour_type);\n            this.setActiveTour('');\n        }\n        if (!is_tour_active && step === 3) {\n            this.onCloseTour();\n            this.setTourEnd(tour_type);\n            this.setActiveTour('');\n        }\n    };\n}\n","import crc32 from 'crc-32/crc32';\nimport { action, makeObservable, observable, reaction } from 'mobx';\nimport { DBot, convertStrategyToIsDbot } from '@deriv/bot-skeleton';\nimport { cloneObject, isProduction } from '@deriv/shared';\nimport RootStore from './root-store';\nimport { TStores } from '@deriv/stores/types';\n\nexport default class DataCollectionStore {\n    root_store: RootStore;\n    core: TStores;\n    constructor(root_store: RootStore, core: TStores) {\n        makeObservable(this, {\n            IS_PENDING: observable,\n            IS_PROCESSED: observable,\n            endpoint: observable,\n            run_id: observable,\n            run_start: observable,\n            should_post_xml: observable,\n            strategy_content: observable,\n            transaction_ids: observable,\n            trackRun: action.bound,\n            trackTransaction: action.bound,\n            setRunId: action.bound,\n            setRunStart: action.bound,\n            setStrategyContent: action.bound,\n            cleanXmlDom: action.bound,\n            getHash: action.bound,\n        });\n        this.root_store = root_store;\n        this.core = core;\n        if (isProduction() || /(.*?)\\.binary.sx$/.test(window.location.hostname)) {\n            this.root_store = root_store;\n\n            reaction(\n                () => this.root_store.run_panel.is_running,\n                () => (this.root_store.run_panel.is_running ? this.trackRun() : undefined)\n            );\n            reaction(\n                () => this.root_store.transactions.transactions,\n                transactions => {\n                    if (this.run_id) this.trackTransaction(transactions);\n                }\n            );\n        }\n    }\n\n    // Constants\n    IS_PENDING = false;\n    IS_PROCESSED = true;\n\n    endpoint = 'https://dbot-conf-dot-deriv-bi-reporting.as.r.appspot.com/dbotconf';\n    run_id = '';\n    run_start = 0;\n    should_post_xml = true;\n    strategy_content = '';\n    transaction_ids: Record<string, unknown> = {};\n\n    async trackRun() {\n        const converted_workspace_to_dom = this.cleanXmlDom(\n            window.Blockly.Xml.workspaceToDom(DBot.workspace, /* opt_noId */ true)\n        );\n        const xml_dom = convertStrategyToIsDbot(converted_workspace_to_dom);\n        const xml_string = window.Blockly.Xml.domToText(xml_dom);\n        const xml_hash = this.getHash(xml_string);\n\n        if (this.getHash(this.strategy_content) !== xml_hash) {\n            this.should_post_xml = true;\n            this.setStrategyContent(xml_string);\n        }\n\n        this.setRunId(this.getHash(xml_hash + this.core.client.loginid + Math.random()));\n        this.setRunStart(this.core.common.server_time.unix());\n    }\n\n    async trackTransaction(\n        contracts: {\n            data: {\n                transaction_ids: {\n                    buy: number;\n                };\n            };\n        }[]\n    ) {\n        const pako = await import(/* webpackChunkName: \"dbot-collection\" */ 'pako');\n        const contract = contracts[0]; // Most recent contract.\n\n        if (!contract) {\n            return;\n        }\n\n        const { buy: transaction_id } = contract.data.transaction_ids;\n        const is_known_transaction = Object.keys(this.transaction_ids).includes(transaction_id.toString());\n\n        if (!is_known_transaction) {\n            this.transaction_ids[transaction_id] = this.IS_PENDING;\n\n            const getPayload = () => {\n                const content = pako.gzip(this.strategy_content);\n                return {\n                    body: content,\n                    headers: {\n                        'Content-Encoding': 'gzip',\n                        'Content-Type': 'application/xml',\n                        Referer: window.location.hostname,\n                    },\n                };\n            };\n\n            fetch(\n                `${this.endpoint}/${this.run_id}/${transaction_id}/${this.run_start}/${this.getHash(\n                    this.strategy_content\n                )}`,\n                {\n                    ...(this.should_post_xml ? getPayload() : {}),\n                    method: 'POST',\n                    mode: 'no-cors',\n                }\n            )\n                .then(() => {\n                    this.should_post_xml = false;\n                    this.transaction_ids[transaction_id] = this.IS_PROCESSED;\n                })\n                .catch(() => {\n                    delete this.transaction_ids[transaction_id];\n                });\n        }\n    }\n\n    setRunId(run_id: string) {\n        this.run_id = run_id;\n    }\n\n    setRunStart(timestamp: number) {\n        this.run_start = timestamp;\n    }\n\n    setStrategyContent(strategy_content: string) {\n        this.strategy_content = strategy_content;\n    }\n\n    cleanXmlDom = (xml_dom: XMLDocument) => {\n        const useless_attributes = ['x', 'y', 'id'];\n        const updated_dom = cloneObject(xml_dom);\n        const removeAttributesRecursively = (element: Element) => {\n            useless_attributes.forEach(useless_attribute => element.removeAttribute(useless_attribute));\n            Array.from(element.children).forEach(child => removeAttributesRecursively(child));\n        };\n\n        removeAttributesRecursively(updated_dom);\n        return updated_dom;\n    };\n\n    getHash = (string: string) => btoa(String(crc32.str(string)));\n}\n","export const help_content_types = {\n    TEXT: 'text',\n    VIDEO: 'video',\n    IMAGE: 'image',\n    BLOCK: 'block',\n    EXAMPLE: 'example',\n};\n\nconst { TEXT, IMAGE, BLOCK, EXAMPLE } = help_content_types;\n\nexport const help_content_config = public_path => {\n    __webpack_public_path__ = public_path; // eslint-disable-line no-global-assign\n    return {\n        //= ================= Functions ==================\n        procedures_ifreturn: [\n            { type: TEXT },\n            { type: BLOCK },\n            { type: TEXT },\n            { type: EXAMPLE, example_id: 'if-return' },\n        ],\n        //= ================= Math ==================\n        math_arithmetic: [\n            { type: TEXT },\n            { type: BLOCK },\n            { type: TEXT },\n            { type: TEXT },\n            { type: TEXT },\n            { type: TEXT },\n            { type: TEXT },\n            { type: TEXT },\n        ],\n        math_single: [\n            { type: TEXT },\n            { type: BLOCK },\n            { type: TEXT },\n            { type: TEXT },\n            { type: TEXT },\n            { type: TEXT },\n            { type: TEXT },\n            { type: TEXT },\n            { type: TEXT },\n        ],\n        math_constrain: [\n            { type: TEXT },\n            { type: BLOCK },\n            { type: TEXT },\n            { type: TEXT },\n            { type: EXAMPLE, example_id: 'constrain' },\n        ],\n        // math_number: [\n        //     { type: VIDEO, url: 'https://www.youtube.com/embed/Bb0HnaYNUx4' },\n        //     { type: TEXT },\n        //     { type: IMAGE, url: 'https://d2.alternativeto.net/dist/s/scratch_830736_full.png?format=jpg&width=1600&height=1600&mode=min&upscale=false' },\n        //     { type: VIDEO, url: 'https://www.youtube.com/embed/mi18spqE7R4?controls=0' },\n        //     { type: BLOCK },\n        //     { type: TEXT },\n        //     { type: IMAGE, url: 'https://d2.alternativeto.net/dist/s/scratch_830736_full.png?format=jpg&width=1600&height=1600&mode=min&upscale=false' },\n        // ],\n        //= ================= Text ==================\n        text_print: [{ type: TEXT }, { type: BLOCK }, { type: TEXT }],\n        text_prompt_ext: [{ type: TEXT }, { type: BLOCK }, { type: TEXT }],\n        //= ================= Tick analysis ==================\n        tick_analysis: [{ type: TEXT }, { type: BLOCK }],\n        read_details: [\n            { type: TEXT },\n            { type: BLOCK },\n            { type: TEXT },\n            { type: TEXT },\n            { type: TEXT },\n            { type: TEXT },\n            { type: TEXT },\n            { type: TEXT },\n            { type: TEXT },\n            { type: TEXT },\n            { type: TEXT },\n            { type: TEXT },\n            { type: TEXT },\n            { type: TEXT },\n        ],\n        last_digit: [{ type: TEXT }, { type: BLOCK }],\n        read_ohlc: [\n            { type: TEXT },\n            { type: BLOCK },\n            { type: TEXT },\n            { type: TEXT },\n            { type: TEXT },\n            { type: TEXT },\n            { type: TEXT },\n            { type: TEXT },\n            { type: EXAMPLE, example_id: 'in_candle_list_read' },\n        ],\n        read_ohlc_obj: [\n            { type: TEXT },\n            { type: BLOCK },\n            { type: TEXT },\n            { type: TEXT },\n            { type: EXAMPLE, example_id: 'read_candle_value' },\n        ],\n        check_direction: [{ type: TEXT }, { type: BLOCK }, { type: TEXT }, { type: TEXT }, { type: TEXT }],\n        get_ohlc: [\n            { type: TEXT },\n            { type: BLOCK },\n            { type: TEXT },\n            { type: EXAMPLE, example_id: 'get_candle' },\n            { type: TEXT },\n        ],\n        ohlc: [{ type: TEXT }, { type: BLOCK }, { type: TEXT }, { type: EXAMPLE, example_id: 'candle_list_1' }],\n        ohlc_values: [{ type: TEXT }, { type: BLOCK }, { type: TEXT }, { type: EXAMPLE, example_id: 'candle_list' }],\n        is_candle_black: [\n            { type: TEXT },\n            { type: BLOCK },\n            { type: TEXT },\n            { type: TEXT },\n            { type: TEXT },\n            { type: TEXT },\n            { type: TEXT },\n            { type: TEXT },\n            { type: TEXT },\n            { type: IMAGE, width: '100%', url: `${__webpack_public_path__}media/is_candle_black.jpeg` },\n            { type: TEXT },\n            { type: IMAGE, width: '100%', url: `${__webpack_public_path__}media/is_candle_black_1.jpeg` },\n            { type: TEXT },\n        ],\n        ohlc_values_in_list: [\n            { type: TEXT },\n            { type: BLOCK },\n            { type: TEXT },\n            { type: TEXT },\n            { type: EXAMPLE, example_id: 'candle_list_1' },\n        ],\n        //= ================= Variables ==================\n        variables_gets: [\n            { type: TEXT },\n            { type: BLOCK },\n            { type: TEXT },\n            { type: TEXT },\n            { type: TEXT },\n            { type: TEXT },\n            { type: TEXT },\n            { type: TEXT },\n            { type: TEXT },\n        ],\n        variables_set: [\n            { type: TEXT },\n            { type: BLOCK },\n            { type: TEXT },\n            { type: TEXT },\n            { type: TEXT },\n            { type: IMAGE, width: '100%', url: `${__webpack_public_path__}media/create_variable.jpg` },\n            { type: TEXT },\n            { type: IMAGE, width: '100%', url: `${__webpack_public_path__}media/set_variable.png` },\n        ],\n        // =============== Time blocks ============\n        epoch: [\n            { type: TEXT },\n            { type: BLOCK },\n            { type: TEXT },\n            { type: TEXT },\n            { type: TEXT },\n            { type: TEXT },\n            { type: TEXT },\n            { type: EXAMPLE, example_id: 'epoch' },\n        ],\n        todatetime: [\n            { type: TEXT },\n            { type: BLOCK },\n            { type: TEXT },\n            { type: EXAMPLE, example_id: 'todatetime' },\n            { type: TEXT },\n        ],\n        totimestamp: [\n            { type: TEXT },\n            { type: BLOCK },\n            { type: TEXT },\n            { type: EXAMPLE, example_id: 'totimestamp' },\n            { type: TEXT },\n        ],\n        // =============== Notifications blocks ============\n        notify_telegram: [\n            { type: TEXT },\n            { type: BLOCK },\n            { type: TEXT },\n            { type: TEXT },\n            { type: TEXT },\n            { type: TEXT },\n            { type: TEXT },\n            { type: TEXT },\n            { type: TEXT },\n            { type: TEXT },\n            { type: TEXT },\n            { type: EXAMPLE, example_id: 'notify_telegram' },\n        ],\n        // =============== Misc blocks ============\n        console: [{ type: TEXT }, { type: TEXT }, { type: TEXT }, { type: TEXT }, { type: TEXT }, { type: TEXT }],\n        balance: [\n            { type: TEXT },\n            { type: BLOCK },\n            { type: TEXT },\n            { type: TEXT },\n            { type: TEXT },\n            { type: TEXT },\n            { type: TEXT },\n        ],\n        // =============== Indicators blocks ============\n        sma_statement: [\n            { type: TEXT },\n            { type: BLOCK },\n            { type: TEXT },\n            { type: IMAGE, width: '60%', url: `${__webpack_public_path__}media/sma_formula.png` },\n            { type: TEXT },\n            { type: TEXT },\n            { type: TEXT },\n            { type: TEXT },\n            { type: IMAGE, width: '100%', url: `${__webpack_public_path__}media/sma_chart_1.png` },\n            { type: TEXT },\n            { type: IMAGE, width: '100%', url: `${__webpack_public_path__}media/sma_chart_2.png` },\n            { type: TEXT },\n            { type: TEXT },\n            { type: TEXT },\n            { type: TEXT },\n            { type: TEXT },\n            { type: EXAMPLE, example_id: 'sma_block_example' },\n            { type: TEXT },\n            { type: TEXT },\n            { type: EXAMPLE, example_id: 'sma_block_example_1' },\n            { type: TEXT },\n            { type: TEXT },\n            { type: EXAMPLE, example_id: 'sma_array' },\n            { type: TEXT },\n            { type: TEXT },\n            { type: TEXT },\n            { type: IMAGE, width: '100%', url: `${__webpack_public_path__}media/sma_array_explanation.jpeg` },\n        ],\n        // =============== Root blocks ============\n        trade_definition: [\n            { type: TEXT },\n            { type: TEXT },\n            { type: TEXT },\n            { type: TEXT },\n            { type: TEXT },\n            { type: TEXT },\n            { type: TEXT },\n            { type: TEXT },\n            { type: TEXT },\n            { type: TEXT },\n            { type: TEXT },\n            { type: TEXT },\n            { type: TEXT },\n            { type: TEXT },\n            { type: TEXT },\n            { type: TEXT },\n            { type: TEXT },\n            { type: BLOCK },\n        ],\n        trade_definition_tradeoptions: [{ type: TEXT }, { type: BLOCK }],\n        trade_definition_multiplier: [{ type: TEXT }, { type: TEXT }, { type: TEXT }, { type: TEXT }],\n        before_purchase: [{ type: TEXT }, { type: BLOCK }, { type: TEXT }],\n        during_purchase: [\n            { type: TEXT },\n            { type: BLOCK },\n            { type: TEXT },\n            { type: EXAMPLE, example_id: 'sell_available' },\n        ],\n        sell_at_market: [\n            { type: TEXT },\n            { type: BLOCK },\n            { type: TEXT },\n            { type: EXAMPLE, example_id: 'sell_available' },\n        ],\n        after_purchase: [{ type: TEXT }, { type: BLOCK }, { type: TEXT }],\n        trade_again: [{ type: TEXT }, { type: BLOCK }, { type: TEXT }, { type: EXAMPLE, example_id: 'trade_again' }],\n        // =============== Contract ============\n        contract_check_result: [\n            { type: TEXT },\n            { type: BLOCK },\n            { type: TEXT },\n            { type: TEXT },\n            { type: EXAMPLE, example_id: 'check_result' },\n        ],\n        sell_price: [{ type: TEXT }, { type: BLOCK }, { type: TEXT }, { type: EXAMPLE, example_id: 'sell_pl' }],\n        // =============== Logic ============\n        controls_if: [\n            { type: TEXT },\n            { type: BLOCK },\n            { type: TEXT },\n            { type: EXAMPLE, example_id: 'controls_if' },\n            { type: TEXT },\n            { type: EXAMPLE, example_id: 'compare_logic' },\n            { type: EXAMPLE, example_id: 'compare_logic_1' },\n        ],\n        logic_operation: [\n            { type: TEXT },\n            { type: BLOCK },\n            { type: TEXT },\n            { type: TEXT },\n            { type: IMAGE, width: '40%', url: `${__webpack_public_path__}media/logic.png` },\n        ],\n        // =============== Loops ============\n        controls_whileUntil: [\n            { type: TEXT },\n            { type: BLOCK },\n            { type: TEXT },\n            { type: TEXT },\n            { type: EXAMPLE, example_id: 'repeat_while' },\n            { type: TEXT },\n            { type: EXAMPLE, example_id: 'repeat_until' },\n        ],\n        controls_for: [\n            { type: TEXT },\n            { type: BLOCK },\n            { type: TEXT },\n            { type: EXAMPLE, example_id: 'controls_for' },\n            { type: TEXT },\n            { type: TEXT },\n        ],\n        controls_forEach: [\n            { type: TEXT },\n            { type: BLOCK },\n            { type: TEXT },\n            { type: EXAMPLE, example_id: 'controls_forEach' },\n            { type: TEXT },\n            { type: TEXT },\n            { type: TEXT },\n        ],\n        controls_flow_statements: [\n            { type: TEXT },\n            { type: BLOCK },\n            { type: TEXT },\n            { type: TEXT },\n            { type: EXAMPLE, example_id: 'break_out' },\n            { type: TEXT },\n            { type: EXAMPLE, example_id: 'continue' },\n        ],\n    };\n};\n","import { localize } from '@deriv/translations';\n\nexport default {\n    text: [\n        localize(\n            'This block is mandatory. Here is where you can decide if your bot should continue trading. Only one copy of this block is allowed.'\n        ),\n        localize(\n            'This block is commonly used to adjust the parameters of your next trade and to implement stop loss/take profit logic.'\n        ),\n    ],\n};\n","import { localize } from '@deriv/translations';\n\nexport default {\n    text: [\n        localize('This block returns current account balance.'),\n        localize(\n            'The only input parameter determines how block output is going to be formatted. In case if the input parameter is \"string\" then the account currency will be added.'\n        ),\n        localize('Example output of the below example will be:'),\n        localize('1. for \"string\": 1325.68 USD'),\n        localize('2. for \"number\": 1325.68'),\n    ],\n};\n","import { localize } from '@deriv/translations';\n\nexport default {\n    text: [\n        localize(\n            'This block is mandatory. Only one copy of this block is allowed. It is added to the canvas by default when you open Deriv Bot.'\n        ),\n        localize(\n            'After defining trade parameters and trade options, you may want to instruct your bot to purchase contracts when specific conditions are met. To do that you can use conditional blocks and indicators blocks to help your bot to make decisions.'\n        ),\n    ],\n};\n","import { localize } from '@deriv/translations';\n\nexport default {\n    text: [\n        localize(\n            'This block is used to determine if the market price moves in the selected direction or not. It gives you a value of \"True\" or \"False\".'\n        ),\n        localize('Examples:'),\n        localize(\n            '1. If the selected direction is \"Rise\", and the previous tick value is less than the current tick value, the output will be \"True\". Otherwise, the output will be an empty string.'\n        ),\n        localize(\n            '2. If the selected direction is \"Fall\", and the previous tick value is more than the current tick value, the output will be \"True\". Otherwise, the output will be an empty string.'\n        ),\n    ],\n};\n","import { localize } from '@deriv/translations';\n\nexport default {\n    text: [\n        localize(\n            'This block displays messages in the developer’s console with an input that can be either a string of text, a number, boolean, or an array of data.'\n        ),\n        localize('There are 4 message types:'),\n        localize(\"1. 'Log' displays a regular message.\"),\n        localize(\"2. 'Warn' displays a message in yellow to highlight something that needs attention.\"),\n        localize(\"3. 'Error' displays a message in red to highlight something that needs to be resolved immediately.\"),\n        localize(\"4. 'Table' takes an array of data, such as a list of candles, and displays it in a table format.\"),\n    ],\n};\n","import { localize } from '@deriv/translations';\n\nexport default {\n    text: [\n        localize(\n            'You can check the result of the last trade with this block. It can only be placed within the \"Restart trading conditions\" root block.'\n        ),\n        localize(\n            'If \"Win\" is selected, it will return \"True\" if your last trade was successful. Otherwise, it will return an empty string.'\n        ),\n        localize(\n            'If \"Loss\" is selected, it will return \"True\" if your last trade was unsuccessful. Otherwise, it will return an empty string.'\n        ),\n        localize('Example:'),\n    ],\n};\n","import { localize } from '@deriv/translations';\n\nexport default {\n    text: [\n        localize(\n            'This block is used to either terminate or continue a loop, and can be placed anywhere within a loop block.'\n        ),\n        localize('Examples:'),\n        localize(\n            '1. In the below example the loop is terminated in case \"x\" is \"False\" even though only one iteration is complete'\n        ),\n        localize(\n            '2. In the below example the loop jumps to the next iteration without executing below block in case if \"x\" is \"False\"'\n        ),\n    ],\n};\n","import { localize } from '@deriv/translations';\n\nexport default {\n    text: [\n        localize(\n            'This block uses the variable \"i\" to control the iterations. With each iteration, the value of \"i\" is determined by the items in a given list.'\n        ),\n        localize('Example:'),\n        localize(\n            '\"i\" starts with the value of 1, and it will be increased by 2 at every iteration. The loop will repeat until \"i\" reaches the value of 12, and then the loop is terminated.'\n        ),\n        localize('You can use \"i\" inside the loop, for example to access list items'),\n    ],\n};\n","import { localize } from '@deriv/translations';\n\nexport default {\n    text: [\n        localize(\n            'This block uses the variable \"i\" to control the iterations. With each iteration, the value of \"i\" is determined by the items in a given list.'\n        ),\n        localize('Example:'),\n        localize(\n            'In this example, the loop will repeat three times, as that is the number of items in the given list. During each iteration, the variable \"i\" will be assigned a value from the list. '\n        ),\n        localize('Please note that changing the value of \"i\" won\\'t change the value of the original item in the list'),\n    ],\n};\n","import { localize } from '@deriv/translations';\n\nexport default {\n    text: [\n        localize('This block evaluates a statement and will perform an action only when the statement is true.'),\n        localize('Click the plus icon to extend the functionality of this block.'),\n        localize('You can also use \"Compare\" and \"Logic operation\" blocks to make test variables.'),\n    ],\n};\n","import { localize } from '@deriv/translations';\n\nexport default {\n    text: [\n        localize('This block repeats instructions as long as a given condition is true.'),\n        localize('Examples:'),\n        localize(\n            '1. In the example below, the instructions are repeated as long as the value of x is less than or equal to 10. Once the value of x exceeds 10, the loop is terminated.'\n        ),\n        localize(\n            '2. In this example, the instructions are repeated as long as the value of x is greater than or equal to 10. Once the value of x drops below 10, the loop is terminated.'\n        ),\n    ],\n};\n","import { localize } from '@deriv/translations';\n\nexport default {\n    text: [\n        localize(\n            'Here is where you can decide to sell your contract before it expires. Only one copy of this block is allowed.'\n        ),\n        localize('Example:'),\n    ],\n};\n","import { localize } from '@deriv/translations';\n\nexport default {\n    text: [\n        localize('\"Seconds Since Epoch\" block returns the number of seconds since January 1st, 1970.'),\n        localize('Example:'),\n        localize('1551661986 seconds since Jan 01 1970 (UTC) translates to 03/04/2019 @ 1:13am (UTC).'),\n        localize('You might need it when you want to repeat an actions after certain amount of time.'),\n        localize('The example below restarts trading after 30 or more seconds after 1 minute candle was started.'),\n    ],\n};\n","import { localize } from '@deriv/translations';\n\nexport default {\n    text: [\n        localize('This block gives you a specific candle from within the selected time interval.'),\n        localize('In this example, the open price of a candle is assigned to the variable \"candle_open_price\".'),\n        localize(\n            'In the above example it is assumed that variable candle_open_price is processed somewhere within other blocks.'\n        ),\n    ],\n};\n","import { localize } from '@deriv/translations';\n\nexport default {\n    text: [\n        localize(\n            'This block returns \"True\" if the last candle is black. It can be placed anywhere on the canvas except within the Trade parameters root block.'\n        ),\n        localize(\n            'The term \"candle\" refers to each bar on the candlestick chart. Each candle represents four market prices for the selected time interval:'\n        ),\n        localize('Each candlestick on the chart represents 4 market prices for the selected time interval:'),\n        localize('- Open price: the opening price'),\n        localize('- High price: the highest price'),\n        localize('- Low price: the lowest price'),\n        localize('- Close price: the closing price'),\n        localize(\n            'A black (or red) candle indicates that the open price is higher than the close price. This represents a downward movement of the market price.'\n        ),\n        localize(\n            'A white (or green) candle indicates that the open price is lower than the close price. This represents an upward movement of the market price.'\n        ),\n        localize('The time interval for each candle can be set from one minute to one day.'),\n    ],\n};\n","import { localize } from '@deriv/translations';\n\nexport default {\n    text: [\n        localize(\n            'This block gives you the last digit of the latest tick value of the selected market. If the latest tick value is 1410.90, this block will return 0. It’s useful for digit-based contracts such as Even/Odd, Matches/Differs, or Higher/Lower.'\n        ),\n    ],\n};\n","import { localize } from '@deriv/translations';\n\nexport default {\n    text: [\n        localize('This block performs the \"AND\" or the \"OR\" logic operation with the given values.'),\n        localize(\n            'In case if the \"AND\" operation is selected, the block returns \"True\" only if both given values are \"True\"'\n        ),\n        localize(\n            'In case if the \"OR\" operation is selected, the block returns \"True\" in case if one or both given values are \"True\"'\n        ),\n    ],\n};\n","import { localize } from '@deriv/translations';\n\nexport default {\n    text: [\n        localize('This block performs arithmetic operations between two numbers.'),\n        localize('Available operations:'),\n        localize('- Addition'),\n        localize('- Subtraction'),\n        localize('- Multiplication'),\n        localize('- Division'),\n        localize('- Raise the first number to the power of the second number'),\n    ],\n};\n","import { localize } from '@deriv/translations';\n\nexport default {\n    text: [\n        localize('This block constrains a given number within a set range.'),\n        localize(\n            'In case if the given number is less than the lower boundary of the range, the block returns the lower boundary value. Similarly, if the given number is greater than the higher boundary, the block will return the higher boundary value. In case if the given value is between boundaries, the block will return the given value unchanged.'\n        ),\n        localize(\n            'In the below example the block returns the value of 10 as the given value (5) is less than the lower boundary (10)'\n        ),\n    ],\n};\n","import { localize } from '@deriv/translations';\n\nexport default {\n    text: [\n        localize('This block performs the following operations to a given number'),\n        localize('Available operations are:'),\n        localize('- Square root'),\n        localize('- Absolute'),\n        localize('- Negation'),\n        localize('- Natural log'),\n        localize('- Euler’s number (2.71) to the power of a given number'),\n        localize('- 10 to the power of a given number'),\n    ],\n};\n","import { localize } from '@deriv/translations';\n\nexport default {\n    text: [\n        localize(\n            'This block sends a message to a Telegram channel. You will need to create your own Telegram bot to use this block.'\n        ),\n        localize('Here’s how:'),\n        localize(\n            '1. Create a Telegram bot and get your Telegram API token. Read more on how to create bots in Telegram here: https://core.telegram.org/bots#6-botfather'\n        ),\n        localize(\n            '2. Start a chat with your newly created Telegram bot and make sure to send it some messages before proceeding to the next step. (e.g. Hello Bot!)'\n        ),\n        localize(\n            '3. Get the chat ID using the Telegram REST API (read more: https://core.telegram.org/bots/api#getupdates)'\n        ),\n        localize(\n            '- Visit the following URL, make sure to replace <access_token> with the Telegram API token you created in Step 1: https://api.telegram.org/bot<access_token>/getUpdates'\n        ),\n        localize('- Find the chat ID property in the response, and copy the value of the id property'),\n        localize(\n            '4. Come back to Deriv Bot and add the Notify Telegram block to the workspace. Paste the Telegram API token and chat ID into the block fields accordingly.'\n        ),\n    ],\n};\n","import { localize } from '@deriv/translations';\n\nexport default {\n    text: [\n        localize('This block gives you a list of candles within a selected time interval.'),\n        localize(\n            'In this example, this block is used with another block to get the open prices from a list of candles. The open prices are then assigned to the variable called \"cl\".'\n        ),\n    ],\n};\n","import { localize } from '@deriv/translations';\n\nexport default {\n    text: [\n        localize(\n            'This block gives you the selected candle value from a list of candles within the selected time interval. You can choose from open price, close price, high price, low price, and open time.'\n        ),\n        localize(\n            'In this example, the open prices from a list of candles are assigned to a variable called \"candle_list\".'\n        ),\n    ],\n};\n","import { localize } from '@deriv/translations';\n\nexport default {\n    text: [\n        localize(\n            'This block gives you the selected candle value from a list of candles. You can choose from open price, close price, high price, low price, and open time.'\n        ),\n        localize('This block requires a list of candles as an input parameter.'),\n        localize('In this example, the open prices from a list of candles are assigned to a variable called \"cl\".'),\n    ],\n};\n","import { localize } from '@deriv/translations';\n\nexport default {\n    text: [\n        localize('Used within a function block, this block returns a value when a specific condition is true.'),\n        localize('Example:'),\n    ],\n};\n","import { localize } from '@deriv/translations';\n\nexport default {\n    text: [\n        localize('This block gives you information about your last contract.'),\n        localize('You can choose to see one of the following:'),\n        localize('- Deal reference ID: the reference ID of the contract'),\n        localize('- Purchase price: the purchase price (stake) of the contract'),\n        localize('- Payout: the payout of the contract'),\n        localize('- Profit: the profit you’ve earned'),\n        localize('- Contract type: the name of the contract type such as Rise, Fall, Touch, No Touch, etс.'),\n        localize('- Entry time: the starting time of the contract'),\n        localize('- Entry value: the value of the first tick of the contract'),\n        localize('- Exit time: the contract expiration time'),\n        localize('- Exit value: the value of the last tick of the contract'),\n        localize(\n            '- Barrier: the barrier value of the contract (applicable to barrier-based trade types such as stays in/out, touch/no touch, etc.)'\n        ),\n        localize('- Result: the result of the last contract: \"win\" or \"loss\"'),\n    ],\n};\n","import { localize } from '@deriv/translations';\n\nexport default {\n    text: [\n        localize(\n            'This block gives you the specified candle value for a selected time interval. You can choose which value you want:'\n        ),\n        localize('- Open: the opening price'),\n        localize('- High: the highest price'),\n        localize('- Low: the lowest price'),\n        localize('- Close: the closing price'),\n        localize('- Open time: the opening time stamp'),\n        localize(\n            'In the example below, the opening price is selected, which is then assigned to a variable called \"op\".'\n        ),\n    ],\n};\n","import { localize } from '@deriv/translations';\n\nexport default {\n    text: [\n        localize(\n            'This block gives you the selected candle value such as open price, close price, high price, low price, and open time. It requires a candle as an input parameter.'\n        ),\n        localize('In the example below, the open price is assigned to the variable \"op\".'),\n    ],\n};\n","import { localize } from '@deriv/translations';\n\nexport default {\n    text: [\n        localize(\n            'Use this block to sell your contract at the market price. Selling your contract is optional. You may choose to sell if the market trend is unfavourable.'\n        ),\n        localize('Example:'),\n    ],\n};\n","import { localize } from '@deriv/translations';\n\nexport default {\n    text: [\n        localize(\n            'This block gives you the potential profit or loss if you decide to sell your contract. It can only be used within the \"Sell conditions\" root block.'\n        ),\n        localize(\n            'In the example below, the contract will only be sold if the potential profit or loss is more than the stake.'\n        ),\n    ],\n};\n","import { localize } from '@deriv/translations';\n\nexport default {\n    text: [\n        localize(\n            'SMA adds the market price in a list of ticks or candles for a number of time periods, and divides the sum by that number of time periods.'\n        ),\n        localize('The formula for SMA is:'),\n        localize('where n is the number of periods.'),\n        '',\n        localize('What SMA tells you'),\n        localize(\n            'SMA serves as an indicator of the trend. If the SMA points up then the market price is increasing and vice versa. The larger the period number, the smoother SMA line is.'\n        ),\n        localize(\n            'In this example, each point of the SMA line is an arithmetic average of close prices for the last 10 days.'\n        ),\n        localize(\n            'In this example, each point of the SMA line is an arithmetic average of close prices for the last 50 days.'\n        ),\n        '',\n        localize('How to use the SMA block'),\n        localize('Input list accepts a list of ticks or candles, while period is the specified time period.'),\n        localize('Example:'),\n        localize('This will display the SMA for the specified period, using a candle list.'),\n        localize('SMA places equal weight to the entire distribution of values.'),\n        localize('This is the same as the above example, using a tick list.'),\n        localize(\n            'You may compare SMA values calculated on every bot run to identify the market trend direction. Alternatively, you may also use a variation of the SMA block, the Simple Moving Average Array block. '\n        ),\n        localize('This block returns the entire SMA line, containing a list of all values for a given period.'),\n        localize(\n            'If a period of 10 is entered, the Simple Moving Average Array block will return a list of SMA values calculated based on period of 10.'\n        ),\n        localize('The below image illustrates how Simple Moving Average Array block works:'),\n    ],\n};\n","import { localize } from '@deriv/translations';\n\nexport default {\n    text: [\n        localize(\n            'This block displays a dialog box with a customised message. When the dialog box is displayed, your strategy is paused and will only resume after you click \"OK\".'\n        ),\n    ],\n};\n","import { localize } from '@deriv/translations';\n\nexport default {\n    text: [\n        localize(\n            'This block displays a dialog box that uses a customised message to prompt for an input. The input can be either a string of text or a number and can be assigned to a variable. When the dialog box is displayed, your strategy is paused and will only resume after you enter a response and click \"OK\".'\n        ),\n    ],\n};\n","import { localize } from '@deriv/translations';\n\nexport default {\n    text: [\n        localize(\n            'Any blocks placed within this block will be executed at every tick. If the default candle interval is set to 1 minute in the Trade Parameters root block, the instructions in this block will be executed once every minute. Place this block outside of any root block.'\n        ),\n    ],\n};\n","import { localize } from '@deriv/translations';\n\nexport default {\n    text: [\n        localize(\n            'This block converts the number of seconds since the Unix Epoch to a date and time format such as 2019-08-01 00:00:00.'\n        ),\n        localize('Example:'),\n        localize('In this example, the date and time will be displayed in a green notification box.'),\n    ],\n};\n","import { localize } from '@deriv/translations';\n\nexport default {\n    text: [\n        localize(\n            'This block converts the date and time to the number of seconds since the Unix Epoch (1970-01-01 00:00:00).'\n        ),\n        localize('Example:'),\n        localize('In this example, a Rise contract will be purchased at midnight on 1 August 2019.'),\n    ],\n};\n","import { localize } from '@deriv/translations';\n\nexport default {\n    text: [\n        localize(\n            'This block will transfer the control back to the Purchase conditions block, enabling you to purchase another contract without manually stopping and restarting your bot.'\n        ),\n        localize('Example:'),\n    ],\n};\n","import { localize } from '@deriv/translations';\n\nexport default {\n    text: [\n        localize(\n            \"This block is mandatory. It's added to your strategy by default when you create new strategy. You can not add more than one copy of this block to the canvas.\"\n        ),\n        localize('1. Market'),\n        localize('Select your desired market and asset type. For example, Forex > Major pairs > AUD/JPY'),\n        localize('2. Trade Type'),\n        localize('Select your desired trade type. For example, Up/Down > Rise/Fall'),\n        localize('3. Contract Type'),\n        localize(\n            'Choose what type of contract you want to trade. For example, for the Rise/Fall trade type you can choose one of three options: Rise, Fall, or Both. Selected option will determine available options for the Purchase block.'\n        ),\n        localize('4. Default Candle Interval'),\n        localize('Sets the default time interval for blocks that read list of candles.'),\n        localize('5. Restart buy/sell on error'),\n        localize('Restarts the bot when an error is encountered.'),\n        localize('6. Restart last trade on error'),\n        localize('Repeats the previous trade when an error is encountered.'),\n        localize('7. Run Once at Start'),\n        localize('Place blocks here to perform tasks once when your bot starts running.'),\n        localize('8. Trade Options'),\n        localize('The desired duration, stake, prediction, and/or barrier(s) for the contract is defined here.'),\n    ],\n};\n","import React from 'react';\nimport { StaticUrl } from '@deriv/components';\nimport { Localize, localize } from '@deriv/translations';\n\nexport default {\n    text: [\n        localize('Use this block when you want to use multipliers as your trade type.'),\n        localize('Click the multiplier drop-down menu and choose the multiplier value you want to trade with.'),\n        localize('Your potential profit will be multiplied by the multiplier value you’ve chosen.'),\n        <Localize\n            key={0}\n            i18n_default_text='To learn more about multipliers, please go to the <0>Multipliers</0> page.'\n            components={[<StaticUrl key={0} className='link' href='trade-types/multiplier' />]}\n        />,\n    ],\n};\n","import { localize } from '@deriv/translations';\n\nexport default {\n    text: [\n        localize(\n            'This block is used to define trade options within the Trade parameters root block. Some options are only applicable for certain trade types. Parameters such as duration and stake are common among most trade types. Prediction is used for trade types such as Digits, while barrier offsets are for trade types that involve barriers such as Touch/No Touch, Ends In/Out, etc.'\n        ),\n        localize('Example:'),\n    ],\n};\n","import { localize } from '@deriv/translations';\n\nexport default {\n    text: [\n        localize(\"This block assigns a given value to a variable, creating the variable if it doesn't already exist.\"),\n        localize(\n            'A variable is among the most important and powerful components in creating a bot. It is a way to store information, either as text or numbers. The information stored as a variable can be used and changed according to the given instructions. Variables can be given any name, but usually they are given useful, symbolic names so that it is easier to call them during the execution of instructions.'\n        ),\n        localize('Creating a variable'),\n        localize('1. From the block library, enter a name for the new variable and click Create.'),\n        localize('2. The new variable will appear as a block under Set variable.'),\n    ],\n};\n","import { action, makeObservable, observable, runInAction } from 'mobx';\nimport { config } from '@deriv/bot-skeleton';\nimport { help_content_config } from 'Utils/help-content/help-content.config';\nimport * as help_strings from 'Utils/help-content/help-strings';\nimport RootStore from './root-store';\n\nexport default class FlyoutHelpStore {\n    root_store: RootStore;\n\n    constructor(root_store: RootStore) {\n        makeObservable(this, {\n            block_node: observable,\n            block_type: observable,\n            examples: observable,\n            help_string: observable,\n            title: observable,\n            should_next_disable: observable,\n            should_previous_disable: observable,\n            active_helper: observable,\n            setHelpContent: action.bound,\n            setActiveHelper: action.bound,\n            onBackClick: action.bound,\n            onSequenceClick: action.bound,\n            initFlyoutHelp: action.bound,\n            updateSequenceButtons: action.bound,\n            setExamples: action.bound,\n            getHelpContent: action.bound,\n            getFilledBlocksIndex: action.bound,\n            getNextHelpContentIndex: action.bound,\n        });\n\n        this.root_store = root_store;\n    }\n\n    options = {\n        media: `${__webpack_public_path__}media/`,\n        move: { scrollbars: false, drag: true, wheel: false },\n        zoom: { startScale: config.workspaces.flyoutWorkspacesStartScale },\n        sounds: false,\n    };\n\n    block_node = null;\n    block_type = '';\n    examples = [];\n    help_string = {};\n    title = '';\n    should_next_disable = false;\n    should_previous_disable = false;\n    active_helper = '';\n\n    setHelpContent = async block_node => {\n        const block_type = block_node.getAttribute('type');\n        const title = window.Blockly.Blocks[block_type].meta().display_name;\n        if (block_type !== '') {\n            this.active_helper = block_type;\n        }\n\n        const { flyout } = this.root_store;\n        this.setExamples(block_type);\n        const example_blocks = this.examples.map(example => example.childNodes[0]);\n        setTimeout(() => flyout.setFlyoutWidth([block_node, ...example_blocks]), 50);\n\n        runInAction(() => {\n            flyout.is_help_content = true;\n            this.block_node = block_node;\n            this.block_type = block_type;\n            this.title = title;\n            this.help_string = help_strings[block_type];\n        });\n\n        if (!flyout.is_search_flyout) {\n            this.updateSequenceButtons();\n        }\n    };\n\n    getHelpContent = async block_node => {\n        let block_content;\n\n        if (block_node) {\n            const target_blocks = this.xml_list_group[block_node];\n            const block_type = target_blocks[0].getAttribute('type');\n            block_content = help_strings[block_type];\n        }\n        return block_content;\n    };\n\n    getFilledBlocksIndex = async blocks_type => {\n        const blocks_content = await Promise.all(blocks_type.map(block => this.getHelpContent(block)));\n        return blocks_content.map((key, index) => (key ? index : null)).filter(value => value !== null);\n    };\n\n    getNextHelpContentIndex = async is_last => {\n        const filled_blocks_index = await this.getFilledBlocksIndex(Object.keys(this.xml_list_group));\n        return is_last ? filled_blocks_index[filled_blocks_index.length - 1] : filled_blocks_index[0];\n    };\n\n    setActiveHelper(active_helper) {\n        this.active_helper = active_helper;\n    }\n\n    onBackClick() {\n        const { toolbox, flyout } = this.root_store;\n\n        if (flyout.is_search_flyout) {\n            const search = document.getElementsByName('search')[0].value;\n            toolbox.onSearch({ search });\n        } else {\n            flyout.refreshCategory();\n        }\n    }\n\n    async onSequenceClick(should_go_next) {\n        const current_block = Array.from(this.xml_list).find(xml => xml.getAttribute('type') === this.block_type);\n\n        let current_block_index;\n\n        Object.keys(this.xml_list_group).forEach((key, index) => {\n            if (current_block.getAttribute('type') === key) {\n                current_block_index = index;\n            }\n        });\n\n        const getNextBlock = async (xml, current_index, is_next) => {\n            const next_index = current_index + (is_next ? 1 : -1);\n            const next_blocks_type = Object.keys(xml).filter((key, index) =>\n                is_next ? next_index <= index : next_index >= index\n            );\n            const next_filled_block = await this.getFilledBlocksIndex(next_blocks_type);\n\n            const next_filled_block_index = is_next\n                ? next_filled_block[0]\n                : next_filled_block[next_filled_block.length - 1];\n            const next_block_type = next_blocks_type[next_filled_block_index];\n\n            if (!next_block_type) {\n                return false;\n            }\n\n            try {\n                await import(/* webpackChunkName: `[request]` */ '@deriv/bot-skeleton');\n                return next_block_type;\n            } catch (e) {\n                return getNextBlock(xml, next_index, is_next);\n            }\n        };\n\n        const block_type = await getNextBlock(this.xml_list_group, current_block_index, should_go_next);\n        if (block_type) {\n            const target_blocks = this.xml_list_group[block_type];\n            this.setHelpContent(target_blocks[0]);\n        }\n    }\n\n    initFlyoutHelp(block_node) {\n        const { flyout, toolbox } = this.root_store;\n        this.xml_list = toolbox.getCategoryContents(flyout.selected_category);\n        this.xml_list_group = this.groupBy(this.xml_list, true);\n\n        this.setHelpContent(block_node);\n    }\n\n    async updateSequenceButtons() {\n        const current_block = Array.from(this.xml_list).find(xml => xml.getAttribute('type') === this.block_type);\n        const current_index = Object.keys(this.xml_list_group).findIndex(\n            key => current_block.getAttribute('type') === key\n        );\n\n        const last_filled_content_index = await this.getNextHelpContentIndex(true);\n        const first_filled_content_index = await this.getNextHelpContentIndex(false);\n\n        runInAction(() => {\n            this.should_previous_disable = current_index === 0 || current_index === first_filled_content_index;\n            this.should_next_disable =\n                current_index === Object.keys(this.xml_list_group).length - 1 ||\n                current_index === last_filled_content_index;\n        });\n    }\n\n    // eslint-disable-next-line\n    groupBy(nodes, should_include_block_only = false) {\n        return Array.from(nodes).reduce((block_group, node) => {\n            const type = node.getAttribute('type');\n\n            if (should_include_block_only && type === null) {\n                return block_group;\n            }\n\n            if (!block_group[type]) {\n                block_group[type] = [];\n            }\n\n            if (!should_include_block_only || (should_include_block_only && type !== null)) {\n                block_group[type].push(node);\n            }\n\n            return block_group;\n        }, {});\n    }\n\n    setExamples(block_type) {\n        const { toolbox } = this.root_store;\n        const all_examples = [...toolbox.toolbox_examples.childNodes];\n        const help_content = help_content_config(__webpack_public_path__)[block_type];\n        const examples_ids = help_content.filter(el => el.type === 'example').map(example => example.example_id);\n        const examples = examples_ids.map(id => all_examples.find(example => example.id === id));\n\n        this.examples = examples;\n    }\n}\n","import { reaction } from 'mobx';\nimport { ProposalOpenContract } from '@deriv/api-types';\nimport { TCoreStores, TStores } from '@deriv/stores/types';\nimport { TStatistics } from 'Components/transaction-details/transaction-details.types';\nimport RootStore from 'Stores/root-store';\n\ntype TGTM = {\n    core: {\n        client: {\n            loginid: string;\n        };\n        server_time: {\n            unix: () => number;\n        };\n        gtm: {\n            pushDataLayer: (data: Record<string, unknown>) => void;\n        };\n    };\n};\n\nconst GTM = (() => {\n    let root_store: RootStore & TGTM;\n\n    const getLoginId = (): string => {\n        return root_store.core.client.loginid;\n    };\n\n    const getServerTime = (): number => {\n        return root_store?.core?.server_time?.unix() || Date.now();\n    };\n\n    const pushDataLayer = (data: Record<string, unknown>): void => {\n        return root_store?.core?.gtm?.pushDataLayer(data);\n    };\n\n    const init = (_root_store: RootStore & TStores & TCoreStores & { core: TGTM['core'] }): void => {\n        try {\n            root_store = _root_store;\n            const { run_panel, transactions } = root_store;\n            const run_statistics = transactions.statistics;\n\n            reaction(\n                () => run_panel.is_running,\n                () => run_panel.is_running && onRunBot(run_statistics)\n            );\n        } catch (error) {\n            // eslint-disable-next-line no-console\n            console.warn('Error initializing GTM reactions ', error); // eslint-disable-line no-console\n        }\n    };\n\n    const onRunBot = (statistics: TStatistics): void => {\n        try {\n            const run_id = `${getLoginId()}-${getServerTime()}`;\n            const counters = `tr:${statistics.number_of_runs},\\\n                ts:${statistics.total_stake},\\\n                py:${statistics.total_payout},\\\n                lc:${statistics.lost_contracts},\\\n                wc:${statistics.won_contracts},\\\n                pr:${statistics.total_profit}`;\n\n            const data = {\n                counters: counters.replace(/\\s/g, ''),\n                event: 'dbot_run',\n                run_id,\n            };\n            pushDataLayer(data);\n        } catch (error) {\n            console.warn('Error pushing run data to datalayer ', error); // eslint-disable-line no-console\n        }\n    };\n\n    const onTransactionClosed = (contract: ProposalOpenContract): void => {\n        const data = {\n            event: 'dbot_run_transaction',\n            reference_id: contract.contract_id,\n        };\n        pushDataLayer(data);\n    };\n\n    return {\n        init,\n        pushDataLayer,\n        onTransactionClosed,\n        onRunBot,\n    };\n})();\n\nexport default GTM;\n","/* eslint-disable no-underscore-dangle */\nimport { action, computed, makeObservable, observable } from 'mobx';\nimport { config } from '@deriv/bot-skeleton';\nimport GTM from 'Utils/gtm';\nimport RootStore from './root-store';\n\nexport interface IFlyoutStore {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    block_listeners: any[];\n    block_workspaces: Element[];\n    flyout_min_width: number;\n    options: {\n        media: string;\n        move: { scrollbars: boolean; drag: boolean; wheel: boolean };\n        zoom: { startScale: number };\n        sounds: boolean;\n    };\n    is_help_content: boolean;\n    flyout_content: Element[];\n    flyout_width: number;\n    is_visible: boolean;\n    is_search_flyout: boolean;\n    is_loading: boolean;\n    search_term: string;\n    selected_category: Element | null;\n    onMount: () => void;\n    onUnmount: () => void;\n    initFlyout: () => void;\n    initBlockWorkspace: (el_block_workspace: HTMLElement, block_node: Node) => void;\n    getFlyout: () => Element;\n    setContents: (xml_list: Element[], search_term: string) => void;\n    setFlyoutWidth: (xmlList: Element[]) => void;\n    setVisibility: (is_visible: boolean) => void;\n    setIsSearchFlyout: (is_search: boolean) => void;\n    setSelectedCategory: (selected_category: Element | null) => void;\n    getSelectedCategory: () => Element | null;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    onClickOutsideFlyout: (event: any) => void;\n    refreshCategory: () => void;\n    variables_blocks_count: number;\n    first_get_variable_block_index: number;\n}\n\nexport default class FlyoutStore implements IFlyoutStore {\n    root_store: RootStore;\n    flyout = null;\n    block_listeners = [];\n    block_workspaces = [];\n    flyout_min_width = 440;\n    options = {\n        renderer: 'zelos',\n        media: `${__webpack_public_path__}media/`,\n        move: { scrollbars: false, drag: true, wheel: false },\n        zoom: { startScale: config.workspaces.flyoutWorkspacesStartScale },\n        sounds: false,\n        theme: window?.Blockly?.Themes?.zelos_renderer,\n    };\n\n    is_help_content = false;\n    flyout_content: Element[] = [];\n    flyout_width = this.flyout_min_width;\n    is_visible = false;\n    is_search_flyout = false;\n    is_loading = false;\n    search_term = '';\n    selected_category: Element | null = null;\n\n    constructor(root_store: RootStore) {\n        makeObservable(this, {\n            is_help_content: observable,\n            flyout_content: observable,\n            flyout_width: observable,\n            is_visible: observable,\n            is_search_flyout: observable,\n            is_loading: observable,\n            search_term: observable,\n            selected_category: observable,\n            onMount: action.bound,\n            onUnmount: action.bound,\n            initFlyout: action.bound,\n            initBlockWorkspace: action.bound,\n            getFlyout: action.bound,\n            setContents: action.bound,\n            setFlyoutWidth: action.bound,\n            setVisibility: action.bound,\n            setIsSearchFlyout: action.bound,\n            setSelectedCategory: action.bound,\n            getSelectedCategory: action.bound,\n            onClickOutsideFlyout: action.bound,\n            refreshCategory: action.bound,\n            variables_blocks_count: computed,\n            first_get_variable_block_index: computed,\n        });\n\n        this.root_store = root_store;\n    }\n\n    onMount() {\n        this.initFlyout();\n        window.addEventListener('click', this.onClickOutsideFlyout);\n    }\n\n    onUnmount() {\n        window.removeEventListener('click', this.onClickOutsideFlyout);\n    }\n\n    initFlyout() {\n        const workspace = window.Blockly.derivWorkspace;\n\n        const flyoutWorkspaceOptions = new Blockly.Options({\n            parentWorkspace: workspace,\n            rtl: workspace.RTL,\n            horizontalLayout: true,\n            theme: window?.Blockly?.Themes?.zelos_renderer,\n        });\n\n        if (workspace.horizontalLayout) {\n            this.flyout = new window.Blockly.HorizontalFlyout(flyoutWorkspaceOptions);\n        } else {\n            this.flyout = new window.Blockly.VerticalFlyout(flyoutWorkspaceOptions);\n        }\n\n        this.flyout.targetWorkspace = workspace;\n        this.flyout.workspace_.targetWorkspace = workspace;\n\n        // A flyout connected to a workspace doesn't have its own current gesture.\n        this.flyout.workspace_.getGesture = this.flyout.targetWorkspace.getGesture.bind(this.flyout.targetWorkspace_);\n\n        // Get variables from the main workspace rather than the target workspace.\n        workspace.VariableMap = this.flyout.targetWorkspace.getVariableMap();\n\n        this.flyout.workspace_.createPotentialVariableMap();\n    }\n\n    /**\n     * Intialises a workspace unique to the passed block_node\n     * @param {Element} el_block_workspace Element where Blockly.Workspace will be mounted on\n     * @param {Element} block_node DOM of a Blockly.Block\n     * @memberof FlyoutStore\n     */\n    initBlockWorkspace(el_block_workspace: HTMLElement, block_node: Node) {\n        const workspace = window.Blockly.inject(el_block_workspace, this.options);\n\n        workspace.targetWorkspace = window.Blockly.derivWorkspace;\n\n        const block = window.Blockly.Xml.domToBlock(block_node, workspace);\n        // Using block.getHeightWidth() here because getDimentions() also calls Blockly.Xml.domToBlock\n        const block_hw = block.getHeightWidth();\n\n        block.isInFlyout = true;\n\n        // Update block workspace widths to accommodate block widths.\n        // addind 1px to highet and then moving the block 1px down to make block top border visible\n        el_block_workspace.style.height = `${Math.ceil(block_hw.height * this.options.zoom.startScale) + 1}px`;\n        el_block_workspace.style.width = `${Math.ceil(block_hw.width * this.options.zoom.startScale) + 1}px`;\n        block.moveBy(1, 1);\n\n        // Use original Blockly flyout functionality to create block on drag.\n        const block_svg_root = block.getSvgRoot();\n\n        this.block_listeners.push(\n            window?.Blockly?.browserEvents?.conditionalBind(block_svg_root, 'mousedown', null, event => {\n                GTM.pushDataLayer({\n                    event: 'dbot_drag_block',\n                    block_type: block.type,\n                });\n                this.flyout.blockMouseDown(block)(event as Blockly.Events.UiBase);\n            }),\n            window?.Blockly?.browserEvents?.bind(block_svg_root, 'mouseout', block, block.removeSelect),\n            window?.Blockly?.browserEvents?.bind(block_svg_root, 'mouseover', block, block.addSelect)\n        );\n\n        this.block_workspaces.push(workspace);\n        window.Blockly.svgResize(workspace);\n    }\n\n    getFlyout() {\n        return this.flyout;\n    }\n\n    /**\n     * Parses XML contents passed by Blockly.Toolbox. Supports all default\n     * Blockly.Flyout elements i.e. <block>, <label>, <button> in their\n     * original format, e.g. <label text=\"Hello World\" />\n     * @param {Element[]} xml_list list of XML nodes\n     * @memberof FlyoutStore\n     */\n    setContents(xml_list: Element[], search_term = '') {\n        const text_limit = 20;\n        const processed_xml = xml_list;\n\n        this.block_listeners.forEach(listener => window.Blockly.browserEvents.unbind(listener));\n        this.block_workspaces.forEach(workspace => workspace.dispose());\n        this.block_listeners = [];\n        this.block_workspaces = [];\n\n        this.is_help_content = false;\n        this.search_term = search_term.length > text_limit ? `${search_term.substring(0, text_limit)}...` : search_term;\n        this.flyout_content = xml_list;\n\n        this.setFlyoutWidth(processed_xml);\n        this.setVisibility(true);\n\n        // apparently setFlyoutWidth doesn't calculate blocks dimentions until they're visible\n        // using setTimeout is a workaround to solve this issue\n        setTimeout(() => this.setFlyoutWidth(processed_xml), 50);\n    }\n\n    /**\n     * Walks through xmlList and finds width of the longest block while setting\n     * height and width (in workspace pixels) attributes on each of the block nodes.\n     * @param {Element[]} xmlList\n     * @memberof FlyoutStore\n     */\n    setFlyoutWidth(xmlList: Element[]) {\n        let longest_block_width = 0;\n\n        xmlList.forEach((node: Element) => {\n            const tag_name = node.tagName.toUpperCase();\n\n            if (tag_name === Blockly.Xml.NODE_BLOCK) {\n                const block_hw = Blockly.Block.getDimensions(node);\n\n                node.setAttribute('width', String(Math.ceil(block_hw.width * this.options.zoom.startScale)));\n                node.setAttribute('height', String(Math.ceil(block_hw.height * this.options.zoom.startScale)));\n                longest_block_width = Math.max(\n                    longest_block_width,\n                    Math.ceil(block_hw.width * this.options.zoom.startScale)\n                );\n            }\n        });\n\n        this.flyout_width = Math.max(this.flyout_min_width, longest_block_width + 65);\n    }\n\n    /**\n     * Sets whether the flyout is visible or not.\n     * @param {boolean} is_visible\n     * @memberof FlyoutStore\n     */\n    setVisibility(is_visible: boolean) {\n        this.is_visible = is_visible;\n\n        if (!is_visible) {\n            this.setSelectedCategory(null);\n            this.flyout_content = [];\n        }\n\n        window.Blockly.derivWorkspace.isFlyoutVisible = is_visible;\n    }\n\n    /**\n     * Sets whether the flyout is search or not.\n     * @param {boolean} is_search\n     * @memberof FlyoutStore\n     */\n    setIsSearchFlyout(is_search: boolean) {\n        this.is_search_flyout = is_search;\n    }\n\n    setSelectedCategory(selected_category: Element | null) {\n        this.selected_category = selected_category;\n    }\n\n    getSelectedCategory() {\n        return this.selected_category;\n    }\n\n    /**\n     * Close the flyout on click outside itself or parent toolbox.\n     */\n    onClickOutsideFlyout(event: MouseEvent) {\n        if (!this.is_visible || !window.Blockly.derivWorkspace) {\n            return;\n        }\n\n        const toolbox = document.getElementById('gtm-toolbox');\n        const path = event?.composedPath() || [];\n\n        const is_flyout_click = path.some(\n            el => (el as Element).classList && (el as Element).classList.contains('flyout')\n        );\n        const is_search_focus = this.root_store.toolbox.is_search_focus;\n        const isToolboxClick = () => toolbox?.contains(event.target as Node);\n\n        if (!is_flyout_click && !isToolboxClick() && !is_search_focus) {\n            this.setVisibility(false);\n            this.setSelectedCategory(null);\n        }\n    }\n\n    refreshCategory() {\n        const category = this.getSelectedCategory();\n        const { toolbox } = this.root_store;\n        const flyout_content = toolbox.getCategoryContents(category);\n        this.setContents(flyout_content);\n    }\n\n    get variables_blocks_count() {\n        return this.flyout_content.filter((block: Element) => block.getAttribute('type') === 'variables_get').length;\n    }\n\n    get first_get_variable_block_index() {\n        return this.flyout_content.length - this.variables_blocks_count;\n    }\n}\n","export const button_status = Object.freeze({\n    NORMAL: 0,\n    LOADING: 1,\n    COMPLETED: 2,\n});\n","import { TFormValues } from '../pages/bot-builder/quick-strategy/types';\n\nexport const form_name = 'ce_bot_form';\nexport const STORED_ITEM_NOT_FOUND = 'No results found';\n\nexport enum ACTION {\n    OPEN = 'open',\n    CLOSE = 'close',\n    RUN_BOT = 'run_bot',\n    RUN_QUICK_STRATEGY = 'run_quick_strategy',\n    EDIT_QUICK_STRATEGY = 'edit_quick_strategy',\n    SELECT_QUICK_STRATEGY_GUIDE = 'select_quick_strategy_guide',\n    SWITCH_QUICK_STRATEGY_TAB = 'switch_quick_strategy_tab',\n    DASHBOARD_CLICK = 'dashboard_click',\n    UPLOAD_STRATEGY_START = 'upload_strategy_start',\n    UPLOAD_STRATEGY_COMPLETED = 'upload_strategy_completed',\n    UPLOAD_STRATEGY_FAILED = 'upload_strategy_failed',\n    GOOGLE_DRIVE_CONNECT = 'google_drive_connect',\n    GOOGLE_DRIVE_DISCONNECT = 'google_drive_disconnect',\n    SWITCH_LOAD_STRATEGY_TAB = 'switch_load_strategy_tab',\n    ANNOUNCEMENT_CLICK = 'announcement_click',\n    ANNOUNCEMENT_ACTION = 'announcement_action',\n}\n\nexport type TFormStrategy = {\n    form_values: TFormValues;\n} & TSelectedStrategy;\n\nexport type TSelectedStrategy = {\n    selected_strategy: string;\n};\n","import { config as qs_config } from '@deriv/bot-skeleton';\nimport { localize } from '@deriv/translations';\nimport {\n    D_ALEMBERT,\n    MARTINGALE,\n    OSCARS_GRIND,\n    REVERSE_D_ALEMBERT,\n    REVERSE_MARTINGALE,\n    STRATEGY_1_3_2_6,\n} from '../../../constants/quick-strategies';\nimport { TConfigItem, TStrategies, TValidationItem } from './types';\nimport { LocalizeHTMLForSellConditions } from './localize_html';\n\nexport const FORM_TABS = [\n    {\n        label: localize('Trade parameters'),\n        value: 'TRADE_PARAMETERS',\n    },\n    {\n        label: localize('Learn more'),\n        value: 'LEARN_MORE',\n        disabled: true,\n    },\n];\n\nconst NUMBER_DEFAULT_VALIDATION: TValidationItem = {\n    type: 'min',\n    value: 1,\n    getMessage: (min: string | number) => localize('Must be a number higher than {{ min }}', { min: Number(min) - 1 }),\n};\n\nconst LABEL_SYMBOL: TConfigItem = {\n    type: 'label',\n    label: localize('Asset'),\n    description: localize('The underlying market your bot will trade with this strategy.'),\n};\n\nconst SYMBOL: TConfigItem = {\n    type: 'symbol',\n    name: 'symbol',\n};\n\nconst LABEL_TRADETYPE: TConfigItem = {\n    type: 'label',\n    label: localize('Contract type'),\n    description: localize('Your bot will use this contract type for every run'),\n};\n\nconst TRADETYPE: TConfigItem = {\n    type: 'tradetype',\n    name: 'tradetype',\n    dependencies: ['symbol'],\n};\n\nconst LABEL_PURCHASE_TYPE: TConfigItem = {\n    type: 'label',\n    label: localize('Purchase condition'),\n    description: localize('Your bot uses a single trade type for each run.'),\n};\n\nconst PURCHASE_TYPE: TConfigItem = {\n    type: 'contract_type',\n    name: 'type',\n    dependencies: ['symbol', 'tradetype'],\n};\n\nconst SELL_CONDITIONS_TYPE_INFO: TConfigItem = {\n    type: 'label',\n    label: localize('Sell conditions'),\n    description: LocalizeHTMLForSellConditions,\n};\n\n// This will trigger the boolean_tick_count value to render the take profit and tick count fields\nconst SELL_CONDITIONS_TYPE: TConfigItem = {\n    type: 'sell_conditions',\n    name: 'sell_conditions',\n};\n\nconst LABEL_STAKE: TConfigItem = {\n    type: 'label',\n    label: localize('Initial stake'),\n    description: localize('The amount that you stake for the first trade. Note that this is the minimum stake amount.'),\n};\n\nconst STAKE: TConfigItem = {\n    type: 'number',\n    name: 'stake',\n    validation: ['number', 'required', 'ceil', NUMBER_DEFAULT_VALIDATION],\n    has_currency_unit: true,\n};\n\nconst LABEL_DURATION: TConfigItem = {\n    type: 'label',\n    label: localize('Duration'),\n    description: localize('How long each trade takes to expire.'),\n};\n\nconst DURATION_TYPE: TConfigItem = {\n    type: 'durationtype',\n    name: 'durationtype',\n    dependencies: ['symbol', 'tradetype'],\n    attached: true,\n};\n\nconst DURATION: TConfigItem = {\n    type: 'number',\n    name: 'duration',\n    attached: true,\n    validation: ['number', 'required', 'min', 'max'],\n};\n\nconst LABEL_PROFIT: TConfigItem = {\n    type: 'label',\n    label: localize('Profit threshold'),\n    description: localize('The bot will stop trading if your total profit exceeds this amount.'),\n};\n\nconst PROFIT: TConfigItem = {\n    type: 'number',\n    name: 'profit',\n    validation: ['number', 'required', 'ceil', NUMBER_DEFAULT_VALIDATION],\n    has_currency_unit: true,\n};\n\nconst GROWTH_RATE: TConfigItem = {\n    type: 'label',\n    label: localize('Growth rate'),\n    description: localize(\n        'Your stake will grow at the specified growth rate per tick as long as the current spot price remains within the range of the previous spot price.'\n    ),\n};\n\nconst GROWTH_RATE_VALUE: TConfigItem = {\n    type: 'growth_rate',\n    name: 'growth_rate',\n    attached: true,\n    validation: ['number', 'required', 'ceil'],\n};\n\nconst LABEL_LOSS: TConfigItem = {\n    type: 'label',\n    label: localize('Loss threshold'),\n    description: localize('The bot will stop trading if your total loss exceeds this amount.'),\n};\n\nconst LOSS: TConfigItem = {\n    type: 'number',\n    name: 'loss',\n    validation: ['number', 'required', 'ceil', NUMBER_DEFAULT_VALIDATION],\n    has_currency_unit: true,\n};\n\nconst LABEL_MARTINGALE_SIZE: TConfigItem = {\n    type: 'label',\n    label: localize('Size'),\n    description: localize('The size used to multiply the stake after a losing trade for the next trade.'),\n};\n\nconst LABEL_ACCUMULAORTS_UNIT: TConfigItem = {\n    type: 'label',\n    label: localize('Unit'),\n    description: localize('The unit used to multiply the stake after a losing trade for the next trade.'),\n};\n\nconst LABEL_ACCUMULAORTS_SIZE: TConfigItem = {\n    type: 'label',\n    label: localize('Size'),\n    description: localize('The size used to multiply the stake after a successful trade for the next trade.'),\n};\n\nconst LABEL_REVERSE_MARTINGALE_SIZE: TConfigItem = {\n    type: 'label',\n    label: localize('Size'),\n    description: localize('The size used to multiply the stake after a successful trade for the next trade.'),\n};\n\nconst SIZE: TConfigItem = {\n    type: 'number',\n    name: 'size',\n    validation: [\n        'number',\n        'required',\n        'floor',\n        {\n            type: 'min',\n            value: String(qs_config.QUICK_STRATEGY.DEFAULT.size),\n            getMessage: (min: string | number) =>\n                localize('The value must be equal or greater than {{ min }}', { min }),\n        },\n    ],\n};\n\nconst LABEL_DALEMBERT_UNIT: TConfigItem = {\n    type: 'label',\n    label: localize('Unit'),\n    description: localize(\n        'Number of unit(s) to be added to the next trade after a losing trade. One unit is equivalent to the amount of initial stake.'\n    ),\n};\n\nconst LABEL_REVERSE_DALEMBERT_UNIT: TConfigItem = {\n    type: 'label',\n    label: localize('Unit'),\n    description: localize(\n        'Number of unit(s) to be added to the next trade after a successful trade. One unit is equivalent to the amount of initial stake.'\n    ),\n};\n\nconst UNIT: TConfigItem = {\n    type: 'number',\n    name: 'unit',\n    validation: ['number', 'required', 'ceil', NUMBER_DEFAULT_VALIDATION],\n};\n\nconst CHECKBOX_MAX_STAKE: TConfigItem = {\n    type: 'checkbox',\n    name: 'boolean_max_stake',\n    label: localize('Max stake'),\n    description: localize('The stake for your next trade will reset to the initial stake if it exceeds this value.'),\n    attached: true,\n};\n\nconst MAX_STAKE: TConfigItem = {\n    type: 'number',\n    name: 'max_stake',\n    validation: ['number', 'required', 'ceil', 'min'],\n    should_have: [{ key: 'boolean_max_stake', value: true }],\n    hide_without_should_have: true,\n    attached: true,\n    has_currency_unit: true,\n};\n\nconst TAKE_PROFIT: TConfigItem = {\n    type: 'number',\n    name: 'take_profit',\n    should_have: [{ key: 'boolean_tick_count', value: false }],\n    hide_without_should_have: true,\n    attached: true,\n    has_currency_unit: true,\n};\n\nconst TICK_COUNT = {\n    type: 'number',\n    name: 'tick_count',\n    should_have: [{ key: 'boolean_tick_count', value: true }],\n    hide_without_should_have: true,\n    attached: true,\n    has_currency_unit: false,\n};\n\nconst LABEL_LAST_DIGIT_PREDICTION: TConfigItem = {\n    type: 'label',\n    name: 'label_last_digit_prediction',\n    label: localize('Last Digit Prediction'),\n    description: localize('Your prediction of the last digit of the asset price.'),\n    should_have: [{ key: 'tradetype', value: '', multiple: ['matchesdiffers', 'overunder'] }],\n    hide_without_should_have: true,\n};\n\nconst LAST_DIGIT_PREDICTION: TConfigItem = {\n    type: 'number',\n    name: 'last_digit_prediction',\n    validation: ['number', 'required', 'min', 'max', 'integer'],\n    should_have: [{ key: 'tradetype', value: '', multiple: ['matchesdiffers', 'overunder'] }],\n    hide_without_should_have: true,\n};\n\nexport const STRATEGIES: TStrategies = {\n    MARTINGALE: {\n        name: 'martingale_max-stake',\n        label: localize('Martingale'),\n        rs_strategy_name: 'martingale',\n        description: MARTINGALE,\n        fields: [\n            [\n                LABEL_SYMBOL,\n                SYMBOL,\n                LABEL_TRADETYPE,\n                TRADETYPE,\n                LABEL_PURCHASE_TYPE,\n                PURCHASE_TYPE,\n                LABEL_LAST_DIGIT_PREDICTION,\n                LAST_DIGIT_PREDICTION,\n                LABEL_STAKE,\n                STAKE,\n                LABEL_DURATION,\n                DURATION_TYPE,\n                DURATION,\n            ],\n            [LABEL_PROFIT, PROFIT, LABEL_LOSS, LOSS, LABEL_MARTINGALE_SIZE, SIZE, CHECKBOX_MAX_STAKE, MAX_STAKE],\n        ],\n    },\n    D_ALEMBERT: {\n        name: 'dalembert_max-stake',\n        label: localize('D’Alembert'),\n        rs_strategy_name: `d'alembert`,\n        description: D_ALEMBERT,\n        fields: [\n            [\n                LABEL_SYMBOL,\n                SYMBOL,\n                LABEL_TRADETYPE,\n                TRADETYPE,\n                LABEL_PURCHASE_TYPE,\n                PURCHASE_TYPE,\n                LABEL_LAST_DIGIT_PREDICTION,\n                LAST_DIGIT_PREDICTION,\n                LABEL_STAKE,\n                STAKE,\n                LABEL_DURATION,\n                DURATION_TYPE,\n                DURATION,\n            ],\n            [LABEL_PROFIT, PROFIT, LABEL_LOSS, LOSS, LABEL_DALEMBERT_UNIT, UNIT, CHECKBOX_MAX_STAKE, MAX_STAKE],\n        ],\n    },\n    OSCARS_GRIND: {\n        name: 'oscars_grind_max-stake',\n        label: localize('Oscar’s Grind'),\n        rs_strategy_name: `oscar's-grind`,\n        description: OSCARS_GRIND,\n        fields: [\n            [\n                LABEL_SYMBOL,\n                SYMBOL,\n                LABEL_TRADETYPE,\n                TRADETYPE,\n                LABEL_PURCHASE_TYPE,\n                PURCHASE_TYPE,\n                LABEL_LAST_DIGIT_PREDICTION,\n                LAST_DIGIT_PREDICTION,\n                LABEL_STAKE,\n                STAKE,\n                LABEL_DURATION,\n                DURATION_TYPE,\n                DURATION,\n            ],\n            [LABEL_PROFIT, PROFIT, LABEL_LOSS, LOSS, CHECKBOX_MAX_STAKE, MAX_STAKE],\n        ],\n    },\n    REVERSE_MARTINGALE: {\n        name: 'reverse_martingale',\n        label: localize('Reverse Martingale'),\n        rs_strategy_name: 'reverse martingale',\n        description: REVERSE_MARTINGALE,\n        fields: [\n            [\n                LABEL_SYMBOL,\n                SYMBOL,\n                LABEL_TRADETYPE,\n                TRADETYPE,\n                LABEL_PURCHASE_TYPE,\n                PURCHASE_TYPE,\n                LABEL_LAST_DIGIT_PREDICTION,\n                LAST_DIGIT_PREDICTION,\n                LABEL_STAKE,\n                STAKE,\n                LABEL_DURATION,\n                DURATION_TYPE,\n                DURATION,\n            ],\n            [\n                LABEL_PROFIT,\n                PROFIT,\n                LABEL_LOSS,\n                LOSS,\n                LABEL_REVERSE_MARTINGALE_SIZE,\n                SIZE,\n                CHECKBOX_MAX_STAKE,\n                MAX_STAKE,\n            ],\n        ],\n    },\n    REVERSE_D_ALEMBERT: {\n        name: 'reverse_dalembert',\n        label: localize('Reverse D’Alembert'),\n        rs_strategy_name: `reverse d'alembert`,\n        description: REVERSE_D_ALEMBERT,\n        fields: [\n            [\n                LABEL_SYMBOL,\n                SYMBOL,\n                LABEL_TRADETYPE,\n                TRADETYPE,\n                LABEL_PURCHASE_TYPE,\n                PURCHASE_TYPE,\n                LABEL_LAST_DIGIT_PREDICTION,\n                LAST_DIGIT_PREDICTION,\n                LABEL_STAKE,\n                STAKE,\n                LABEL_DURATION,\n                DURATION_TYPE,\n                DURATION,\n            ],\n            [LABEL_PROFIT, PROFIT, LABEL_LOSS, LOSS, LABEL_REVERSE_DALEMBERT_UNIT, UNIT, CHECKBOX_MAX_STAKE, MAX_STAKE],\n        ],\n    },\n    STRATEGY_1_3_2_6: {\n        name: '1_3_2_6',\n        label: localize('1-3-2-6'),\n        rs_strategy_name: '1-3-2-6',\n        description: STRATEGY_1_3_2_6,\n        fields: [\n            [\n                LABEL_SYMBOL,\n                SYMBOL,\n                LABEL_TRADETYPE,\n                TRADETYPE,\n                LABEL_PURCHASE_TYPE,\n                PURCHASE_TYPE,\n                LABEL_LAST_DIGIT_PREDICTION,\n                LAST_DIGIT_PREDICTION,\n                LABEL_STAKE,\n                STAKE,\n                LABEL_DURATION,\n                DURATION_TYPE,\n                DURATION,\n            ],\n            [LABEL_PROFIT, PROFIT, LABEL_LOSS, LOSS],\n        ],\n    },\n    ACCUMULATORS_MARTINGALE: {\n        name: 'accumulators_martingale',\n        label: localize('Martingale'),\n        rs_strategy_name: `ACCUMULATORS_MARTINGALE`,\n        description: [],\n        fields: [\n            [LABEL_SYMBOL, SYMBOL, LABEL_STAKE, STAKE, GROWTH_RATE, GROWTH_RATE_VALUE],\n            [\n                LABEL_PROFIT,\n                PROFIT,\n                LABEL_LOSS,\n                LOSS,\n                LABEL_ACCUMULAORTS_SIZE,\n                SIZE,\n                SELL_CONDITIONS_TYPE_INFO,\n                SELL_CONDITIONS_TYPE,\n                TAKE_PROFIT,\n                TICK_COUNT,\n                CHECKBOX_MAX_STAKE,\n                MAX_STAKE,\n            ],\n        ],\n    },\n    ACCUMULATORS_DALEMBERT: {\n        name: 'accumulators_dalembert',\n        label: localize('D’Alembert'),\n        rs_strategy_name: `ACCUMULATORS_DALEMBERT`,\n        description: [],\n        fields: [\n            [LABEL_SYMBOL, SYMBOL, LABEL_STAKE, STAKE, GROWTH_RATE, GROWTH_RATE_VALUE],\n            [\n                LABEL_PROFIT,\n                PROFIT,\n                LABEL_LOSS,\n                LOSS,\n                LABEL_ACCUMULAORTS_UNIT,\n                UNIT,\n                SELL_CONDITIONS_TYPE_INFO,\n                SELL_CONDITIONS_TYPE,\n                TAKE_PROFIT,\n                TICK_COUNT,\n                CHECKBOX_MAX_STAKE,\n                MAX_STAKE,\n            ],\n        ],\n    },\n    ACCUMULATORS_MARTINGALE_ON_STAT_RESET: {\n        name: 'accumulators_martingale_on_stat_reset',\n        label: localize('Martingale on Stat Reset'),\n        rs_strategy_name: `ACCUMULATORS_MARTINGALE_ON_STAT_RESET`,\n        description: [],\n        fields: [\n            [LABEL_SYMBOL, SYMBOL, LABEL_STAKE, STAKE, GROWTH_RATE, GROWTH_RATE_VALUE],\n            [\n                LABEL_PROFIT,\n                PROFIT,\n                LABEL_LOSS,\n                LOSS,\n                LABEL_ACCUMULAORTS_SIZE,\n                SIZE,\n                SELL_CONDITIONS_TYPE_INFO,\n                SELL_CONDITIONS_TYPE,\n                TAKE_PROFIT,\n                TICK_COUNT,\n                CHECKBOX_MAX_STAKE,\n                MAX_STAKE,\n            ],\n        ],\n    },\n    ACCUMULATORS_DALEMBERT_ON_STAT_RESET: {\n        name: 'accumulators_dalembert_on_stat_reset',\n        label: localize(\"D'Alembert on Stat Reset\"),\n        rs_strategy_name: `ACCUMULATORS_DALEMBERT_ON_STAT_RESET`,\n        description: [],\n        fields: [\n            [LABEL_SYMBOL, SYMBOL, LABEL_STAKE, STAKE, GROWTH_RATE, GROWTH_RATE_VALUE],\n            [\n                LABEL_PROFIT,\n                PROFIT,\n                LABEL_LOSS,\n                LOSS,\n                LABEL_ACCUMULAORTS_UNIT,\n                UNIT,\n                SELL_CONDITIONS_TYPE_INFO,\n                SELL_CONDITIONS_TYPE,\n                TAKE_PROFIT,\n                TICK_COUNT,\n                CHECKBOX_MAX_STAKE,\n                MAX_STAKE,\n            ],\n        ],\n    },\n    ACCUMULATORS_REVERSE_MARTINGALE: {\n        name: 'accumulators_reverse_martingale',\n        label: localize('Reverse Martingale'),\n        rs_strategy_name: `ACCUMULATORS_REVERSE_MARTINGALE`,\n        description: [],\n        fields: [\n            [LABEL_SYMBOL, SYMBOL, LABEL_STAKE, STAKE, GROWTH_RATE, GROWTH_RATE_VALUE],\n            [\n                LABEL_PROFIT,\n                PROFIT,\n                LABEL_LOSS,\n                LOSS,\n                LABEL_ACCUMULAORTS_SIZE,\n                SIZE,\n                SELL_CONDITIONS_TYPE_INFO,\n                SELL_CONDITIONS_TYPE,\n                TAKE_PROFIT,\n                TICK_COUNT,\n                CHECKBOX_MAX_STAKE,\n                MAX_STAKE,\n            ],\n        ],\n    },\n    ACCUMULATORS_REVERSE_MARTINGALE_ON_STAT_RESET: {\n        name: 'accumulators_reverse_martingale_on_stat_reset',\n        label: localize('Reverse Martingale on Stat Reset'),\n        rs_strategy_name: `ACCUMULATORS_REVERSE_MARTINGALE_ON_STAT_RESET`,\n        description: [],\n        fields: [\n            [LABEL_SYMBOL, SYMBOL, LABEL_STAKE, STAKE, GROWTH_RATE, GROWTH_RATE_VALUE],\n            [\n                LABEL_PROFIT,\n                PROFIT,\n                LABEL_LOSS,\n                LOSS,\n                LABEL_ACCUMULAORTS_SIZE,\n                SIZE,\n                SELL_CONDITIONS_TYPE_INFO,\n                SELL_CONDITIONS_TYPE,\n                TAKE_PROFIT,\n                TICK_COUNT,\n                CHECKBOX_MAX_STAKE,\n                MAX_STAKE,\n            ],\n        ],\n    },\n    ACCUMULATORS_REVERSE_DALEMBERT: {\n        name: 'accumulators_reverse_dalembert',\n        label: localize(\"Reverse D'Alembert\"),\n        rs_strategy_name: `ACCUMULATORS_REVERSE_DALEMBERT`,\n        description: [],\n        fields: [\n            [LABEL_SYMBOL, SYMBOL, LABEL_STAKE, STAKE, GROWTH_RATE, GROWTH_RATE_VALUE],\n            [\n                LABEL_PROFIT,\n                PROFIT,\n                LABEL_LOSS,\n                LOSS,\n                LABEL_ACCUMULAORTS_UNIT,\n                UNIT,\n                SELL_CONDITIONS_TYPE_INFO,\n                SELL_CONDITIONS_TYPE,\n                TAKE_PROFIT,\n                TICK_COUNT,\n                CHECKBOX_MAX_STAKE,\n                MAX_STAKE,\n            ],\n        ],\n    },\n    ACCUMULATORS_REVERSE_DALEMBERT_ON_STAT_RESET: {\n        name: 'accumulators_reverse_dalembert_on_stat_reset',\n        label: localize(\"Reverse D'Alembert on Stat Reset\"),\n        rs_strategy_name: `ACCUMULATORS_REVERSE_DALEMBERT_ON_STAT_RESET`,\n        description: [],\n        fields: [\n            [LABEL_SYMBOL, SYMBOL, LABEL_STAKE, STAKE, GROWTH_RATE, GROWTH_RATE_VALUE],\n            [\n                LABEL_PROFIT,\n                PROFIT,\n                LABEL_LOSS,\n                LOSS,\n                LABEL_ACCUMULAORTS_UNIT,\n                UNIT,\n                SELL_CONDITIONS_TYPE_INFO,\n                SELL_CONDITIONS_TYPE,\n                TAKE_PROFIT,\n                TICK_COUNT,\n                CHECKBOX_MAX_STAKE,\n                MAX_STAKE,\n            ],\n        ],\n    },\n};\n","import { Localize, localize } from '@deriv/translations';\nimport React from 'react';\n\nexport const LocalizeHTMLForSellConditions = additional_data => {\n    const { max_payout, max_ticks } = additional_data ?? {\n        max_payout: 0,\n        max_ticks: 0,\n    };\n\n    return (\n        <div className='sell_conditions'>\n            <div className='sell_conditions__take_profit'>\n                <span>\n                    <strong>{localize('Take Profit: ')}</strong>\n                </span>\n                <span>{localize('The position closes once its profit exceeds the take-profit amount')}</span>\n            </div>\n            <div className='sell_conditions__tick_count'>\n                <span>\n                    <strong>{localize('Tick Count: ')}</strong>\n                </span>\n                <span>{localize('The holding period measured in ticks before the position is sold')}</span>\n            </div>\n            <div>\n                <Localize\n                    i18n_default_text='The position closes when the input condition is met or upon reaching the maximum payout of {{ max_payout }} or maximum tick of {{ max_ticks }}, whichever occurs first.'\n                    values={{\n                        max_payout,\n                        max_ticks,\n                    }}\n                />\n            </div>\n        </div>\n    );\n};\n","import { STRATEGIES } from '../pages/bot-builder/quick-strategy/config';\nimport { STORED_ITEM_NOT_FOUND, TFormStrategy } from './constants';\n\nexport const rudderstack_text_error = 'Rudderstack: unable to get dropdown text';\n\nexport const getRsDropdownTextFromLocalStorage = () => {\n    try {\n        return JSON.parse(localStorage?.getItem('qs-analytics') ?? '{}');\n    } catch (error) {\n        // eslint-disable-next-line no-console\n        console.error(rudderstack_text_error);\n        return {};\n    }\n};\n\nconst hasStoredText = (parameter: string) => parameter && parameter !== STORED_ITEM_NOT_FOUND;\n\nexport const getRsStrategyType = (selected_strategy: string) => STRATEGIES[selected_strategy]?.rs_strategy_name;\n\nexport const getQsActiveTabString = (tab: string) => (tab === 'TRADE_PARAMETERS' ? 'trade parameters' : 'learn more');\n\nenum LOAD_MODAL_TABS_VALUE {\n    recent = 'recent',\n    local = 'local',\n    google_drive = 'google drive',\n}\nexport const LOAD_MODAL_TABS = Object.values(LOAD_MODAL_TABS_VALUE);\n\nexport const getTradeParameterData = ({ form_values }: TFormStrategy) => {\n    if (!form_values) return;\n\n    const { symbol, tradetype, type, stake } = form_values;\n    const stored_texts = getRsDropdownTextFromLocalStorage();\n\n    return {\n        asset_type: hasStoredText(stored_texts?.symbol) ? stored_texts.symbol : symbol,\n        trade_type: hasStoredText(stored_texts?.tradetype) ? stored_texts?.tradetype : tradetype,\n        purchase_condition: hasStoredText(stored_texts?.type) ? stored_texts?.type : type,\n        initial_stake: hasStoredText(stored_texts?.stake) ? stored_texts?.stake : stake,\n    };\n};\n\nexport const getStrategyType = (block_string: string | ArrayBuffer) => {\n    try {\n        const xmlDoc = new DOMParser().parseFromString(block_string.toString(), 'application/xml');\n        if (xmlDoc.getElementsByTagName('xml').length) {\n            const root = xmlDoc.documentElement;\n            const isDbotValue = root.getAttribute('is_dbot');\n            return isDbotValue === 'true' ? 'new' : 'old';\n        }\n        return 'old';\n    } catch (e) {\n        return 'old';\n    }\n};\n","import { TEvents } from '@deriv-com/analytics';\nimport { ACTION, form_name, TFormStrategy } from './constants';\nimport { getRsStrategyType } from './utils';\nimport { cacheTrackEvents } from '@deriv/shared';\nimport { action } from 'mobx';\n\nexport const rudderStackSendOpenEvent = ({\n    subpage_name,\n    subform_source,\n    subform_name,\n    load_strategy_tab,\n}: TEvents['ce_bot_form']) => {\n    cacheTrackEvents.loadEvent([\n        {\n            event: {\n                name: 'ce_bot_form',\n                properties: {\n                    action: ACTION.OPEN,\n                    form_name,\n                    subpage_name,\n                    subform_name,\n                    subform_source,\n                    load_strategy_tab,\n                },\n            },\n        },\n    ]);\n};\n\nexport const rudderStackSendCloseEvent = ({\n    subform_name,\n    quick_strategy_tab,\n    selected_strategy,\n    load_strategy_tab,\n    announcement_name,\n}: TEvents['ce_bot_form'] & TFormStrategy) => {\n    cacheTrackEvents.loadEvent([\n        {\n            event: {\n                name: 'ce_bot_form',\n                properties: {\n                    action: ACTION.CLOSE,\n                    form_name,\n                    subform_name,\n                    quick_strategy_tab,\n                    strategy_name: getRsStrategyType(selected_strategy),\n                    load_strategy_tab,\n                    announcement_name,\n                },\n            },\n        },\n    ]);\n};\n\nexport const rudderStackSendRunBotEvent = ({ subpage_name }: TEvents['ce_bot_form']) => {\n    cacheTrackEvents.loadEvent([\n        {\n            event: {\n                name: 'ce_bot_form',\n                properties: {\n                    action: ACTION.RUN_BOT,\n                    form_name,\n                    subpage_name,\n                },\n            },\n        },\n    ]);\n};\n\nexport const rudderStackSendUploadStrategyStartEvent = ({ upload_provider, upload_id }: TEvents['ce_bot_form']) => {\n    cacheTrackEvents.loadEvent([\n        {\n            event: {\n                name: 'ce_bot_form',\n                properties: {\n                    action: ACTION.UPLOAD_STRATEGY_START,\n                    form_name,\n                    subform_name: 'load_strategy',\n                    subpage_name: 'bot_builder',\n                    upload_provider,\n                    upload_id,\n                },\n            },\n        },\n    ]);\n};\n\nexport const rudderStackSendUploadStrategyCompletedEvent = ({\n    upload_provider,\n    upload_id,\n    upload_type,\n}: TEvents['ce_bot_form']) => {\n    cacheTrackEvents.loadEvent([\n        {\n            event: {\n                name: 'ce_bot_form',\n                properties: {\n                    action: ACTION.UPLOAD_STRATEGY_COMPLETED,\n                    form_name,\n                    subform_name: 'load_strategy',\n                    subpage_name: 'bot_builder',\n                    upload_provider,\n                    upload_id,\n                    upload_type,\n                },\n            },\n        },\n    ]);\n};\n\nexport const rudderStackSendUploadStrategyFailedEvent = ({\n    upload_provider,\n    upload_id,\n    upload_type,\n    error_message,\n    error_code,\n}: TEvents['ce_bot_form']) => {\n    cacheTrackEvents.loadEvent([\n        {\n            event: {\n                name: 'ce_bot_form',\n                properties: {\n                    action: ACTION.UPLOAD_STRATEGY_FAILED,\n                    form_name,\n                    subform_name: 'load_strategy',\n                    subpage_name: 'bot_builder',\n                    upload_provider,\n                    upload_id,\n                    upload_type,\n                    error_message,\n                    error_code,\n                },\n            },\n        },\n    ]);\n};\n\nexport const rudderStackSendGoogleDriveConnectEvent = () => {\n    cacheTrackEvents.loadEvent([\n        {\n            event: {\n                name: 'ce_bot_form',\n                properties: {\n                    action: ACTION.GOOGLE_DRIVE_CONNECT,\n                    form_name,\n                    subpage_name: 'bot_builder',\n                },\n            },\n        },\n    ]);\n};\n\nexport const rudderStackSendGoogleDriveDisconnectEvent = () => {\n    cacheTrackEvents.loadEvent([\n        {\n            event: {\n                name: 'ce_bot_form',\n                properties: {\n                    action: ACTION.GOOGLE_DRIVE_DISCONNECT,\n                    form_name,\n                    subpage_name: 'bot_builder',\n                },\n            },\n        },\n    ]);\n};\n","import { action, makeObservable, observable } from 'mobx';\nimport { config, importExternal, observer as globalObserver } from '@deriv/bot-skeleton';\nimport { getLanguage, localize } from '@deriv/translations';\nimport { botNotification } from 'Components/bot-notification/bot-notification';\nimport { notification_message, NOTIFICATION_TYPE } from 'Components/bot-notification/bot-notification-utils';\nimport { button_status } from 'Constants/button-status';\nimport {\n    rudderStackSendUploadStrategyCompletedEvent,\n    rudderStackSendUploadStrategyFailedEvent,\n} from '../analytics/rudderstack-common-events';\nimport { getStrategyType } from '../analytics/utils';\nimport RootStore from './root-store';\n\nexport type TErrorWithStatus = Error & { status?: number; result?: { error: { message: string } } };\n\nexport type TFileOptions = {\n    content: string;\n    mimeType: string;\n    name: string;\n};\n\nexport type TPickerCallbackResponse = {\n    action: string;\n    docs: { id: string; name: string; driveError?: string }[];\n};\n\nexport default class GoogleDriveStore {\n    root_store: RootStore;\n    bot_folder_name: string;\n    client_id: string | undefined;\n    app_id: string | undefined;\n    api_key: string | undefined;\n    scope: string | undefined;\n    discovery_docs = '';\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    client: any;\n    access_token: string;\n    upload_id?: string;\n\n    constructor(root_store: RootStore) {\n        makeObservable(this, {\n            is_authorised: observable,\n            upload_id: observable,\n            is_google_drive_token_valid: observable,\n            setIsAuthorized: action.bound,\n            saveFile: action.bound,\n            loadFile: action.bound,\n            setKey: action.bound,\n            initialise: action.bound,\n            signIn: action.bound,\n            signOut: action.bound,\n            getPickerLanguage: action.bound,\n            checkFolderExists: action.bound,\n            createSaveFilePicker: action.bound,\n            createLoadFilePicker: action.bound,\n            showGoogleDriveFilePicker: action.bound,\n            setGoogleDriveTokenValid: action.bound,\n            verifyGoogleDriveAccessToken: action.bound,\n            onDriveConnect: action,\n        });\n\n        this.root_store = root_store;\n        this.bot_folder_name = `Binary Bot - ${localize('Strategies')}`;\n        this.setKey();\n        this.client = null;\n        this.access_token = localStorage.getItem('google_access_token') ?? '';\n        importExternal('https://accounts.google.com/gsi/client').then(() => this.initialiseClient());\n        importExternal('https://apis.google.com/js/api.js').then(() => this.initialise());\n    }\n\n    is_google_drive_token_valid = true;\n    is_authorised = !!localStorage.getItem('google_access_token');\n\n    setGoogleDriveTokenValid = (is_google_drive_token_valid: boolean) => {\n        this.is_google_drive_token_valid = is_google_drive_token_valid;\n    };\n\n    setKey = () => {\n        const { SCOPE, DISCOVERY_DOCS } = config.GOOGLE_DRIVE;\n        this.client_id = process.env.GD_CLIENT_ID;\n        this.app_id = process.env.GD_APP_ID;\n        this.api_key = process.env.GD_API_KEY;\n        this.scope = SCOPE;\n        this.discovery_docs = DISCOVERY_DOCS;\n    };\n\n    initialise = () => {\n        gapi.load('client:picker', () => gapi.client.load(this.discovery_docs));\n    };\n\n    setGoogleDriveTokenExpiry = (seconds: number) => {\n        const currentEpochTime = Math.floor(Date.now() / 1000);\n        const expiry_time = currentEpochTime + seconds;\n        localStorage.setItem('google_access_token_expiry', expiry_time.toString());\n    };\n\n    initialiseClient = () => {\n        this.client = google.accounts.oauth2.initTokenClient({\n            client_id: this.client_id,\n            scope: this.scope,\n            callback: (response: { expires_in: number; access_token: string; error?: TErrorWithStatus }) => {\n                if (response?.access_token && !response?.error) {\n                    this.access_token = response.access_token;\n                    this.setIsAuthorized(true);\n                    localStorage.setItem('google_access_token', response.access_token);\n                    this.setGoogleDriveTokenExpiry(response?.expires_in);\n                    this.setGoogleDriveTokenValid(true);\n                }\n            },\n        });\n    };\n\n    setIsAuthorized(is_authorized: boolean) {\n        this.is_authorised = is_authorized;\n    }\n\n    verifyGoogleDriveAccessToken = async () => {\n        const expiry_time = localStorage?.getItem('google_access_token_expiry');\n        if (!expiry_time) return 'not_verified';\n        const current_epoch_time = Math.floor(Date.now() / 1000);\n        if (current_epoch_time > Number(expiry_time)) {\n            this.signOut();\n            this.setGoogleDriveTokenValid(false);\n            localStorage.removeItem('google_access_token_expiry');\n            localStorage.removeItem('google_access_token');\n            botNotification(notification_message.google_drive_error, undefined, { closeButton: false });\n            return 'not_verified';\n        }\n        return 'verified';\n    };\n\n    async signIn() {\n        if (!this.is_authorised) {\n            await this.client.requestAccessToken();\n        }\n    }\n\n    async signOut() {\n        if (this.access_token) {\n            await window?.gapi?.client?.setToken({ access_token: '' });\n            if (localStorage.getItem('google_access_token')) {\n                await window?.google?.accounts?.oauth2?.revoke(this.access_token);\n                localStorage?.removeItem('google_access_token');\n            }\n            this.access_token = '';\n        }\n        this.setIsAuthorized(false);\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    getPickerLanguage() {\n        const language = getLanguage();\n\n        if (language === 'zhTw') {\n            return 'zh-TW';\n        } else if (language === 'zhCn') {\n            return 'zh-CN';\n        }\n        return language;\n    }\n\n    async saveFile(options: TFileOptions) {\n        try {\n            await this.signIn();\n            if (this.access_token) gapi.client.setToken({ access_token: this.access_token });\n            await this.checkFolderExists();\n            await this.createSaveFilePicker('application/vnd.google-apps.folder', localize('Select a folder'), options);\n        } catch (err) {\n            if ((err as TErrorWithStatus).status === 401) {\n                this.signOut();\n            }\n        }\n    }\n\n    async loadFile() {\n        if (!this.is_google_drive_token_valid) return;\n        await this.signIn();\n        if (this.access_token) gapi.client.setToken({ access_token: this.access_token });\n        try {\n            await gapi.client.drive.files.list({\n                pageSize: 10,\n                fields: 'files(id, name)',\n            });\n        } catch (err) {\n            if ((err as TErrorWithStatus)?.status === 401) {\n                await this.signOut();\n                const picker = document.getElementsByClassName('picker-dialog-content')[0] as HTMLElement;\n                picker?.parentNode?.removeChild(picker);\n                const pickerBackground = document.getElementsByClassName(\n                    'picker-dialog-bg'\n                ) as HTMLCollectionOf<HTMLElement>;\n\n                if (pickerBackground.length) {\n                    for (let i = 0; i < pickerBackground.length; i++) {\n                        pickerBackground[i].style.display = 'none';\n                    }\n                }\n            }\n            rudderStackSendUploadStrategyFailedEvent({\n                upload_provider: 'google_drive',\n                upload_id: this.upload_id,\n                upload_type: 'not_found',\n                error_message: (err as TErrorWithStatus)?.result?.error?.message,\n                error_code: (err as TErrorWithStatus)?.status?.toString(),\n            });\n        }\n\n        const xml_doc = await this.createLoadFilePicker(\n            'text/xml,application/xml',\n            localize('Select a Deriv Bot Strategy')\n        );\n\n        return xml_doc;\n    }\n\n    async checkFolderExists() {\n        const { files } = gapi.client.drive;\n        const response = await files.list({ q: 'trashed=false' });\n        const mime_type = 'application/vnd.google-apps.folder';\n        const folder = response.result.files?.find(file => file.mimeType === mime_type);\n\n        if (folder) {\n            return;\n        }\n\n        await files.create({\n            resource: {\n                name: this.bot_folder_name,\n                mimeType: mime_type,\n            },\n            fields: 'id',\n        });\n    }\n\n    createSaveFilePicker(mime_type: string, title: string, options: TFileOptions) {\n        const { setButtonStatus } = this.root_store.save_modal;\n        return new Promise<void>(resolve => {\n            const savePickerCallback = (data: TPickerCallbackResponse) => {\n                if (data.action === google.picker.Action.PICKED) {\n                    const folder_id = data.docs[0].id;\n                    const strategy_file = new Blob([options.content], { type: options.mimeType });\n                    const strategy_file_metadata = JSON.stringify({\n                        name: options.name,\n                        mimeType: options.mimeType,\n                        parents: [folder_id],\n                    });\n\n                    const form_data = new FormData();\n                    form_data.append('metadata', new Blob([strategy_file_metadata], { type: 'application/json' }));\n                    form_data.append('file', strategy_file);\n\n                    const xhr = new XMLHttpRequest();\n                    xhr.responseType = 'json';\n                    xhr.open('POST', 'https://www.googleapis.com/upload/drive/v3/files?uploadType=multipart');\n                    xhr.setRequestHeader('Authorization', `Bearer ${this.access_token}`);\n                    xhr.onload = () => {\n                        if (xhr.status === 401) {\n                            this.signOut();\n                        }\n\n                        setButtonStatus(button_status.NORMAL);\n                        resolve();\n                    };\n                    xhr.send(form_data);\n                } else if (data.action === google.picker.Action.CANCEL) {\n                    setButtonStatus(button_status.NORMAL);\n                }\n            };\n\n            this.showGoogleDriveFilePicker(true, mime_type, title, savePickerCallback);\n        });\n    }\n\n    onDriveConnect = async () => {\n        if (this.is_authorised) {\n            this.signOut();\n        } else {\n            this.signIn();\n        }\n    };\n\n    createLoadFilePicker(mime_type: string, title: string) {\n        return new Promise(resolve => {\n            const loadPickerCallback = async (data: TPickerCallbackResponse) => {\n                if (data.action === google.picker.Action.PICKED) {\n                    const file = data.docs[0];\n                    if (file?.driveError === 'NETWORK') {\n                        rudderStackSendUploadStrategyFailedEvent({\n                            upload_provider: 'google_drive',\n                            upload_id: this.upload_id,\n                            upload_type: 'not_found',\n                            error_message: 'File not found',\n                            error_code: '404',\n                        });\n                    }\n\n                    const file_name = file.name;\n                    const fileId = file.id;\n                    const { files } = gapi.client.drive;\n                    const { setOpenSettings } = this.root_store.dashboard;\n\n                    const response = await files.get({\n                        alt: 'media',\n                        fileId,\n                    });\n\n                    resolve({ xml_doc: response.body, file_name });\n                    setOpenSettings(NOTIFICATION_TYPE.BOT_IMPORT);\n                    const upload_type = getStrategyType(response.body);\n                    rudderStackSendUploadStrategyCompletedEvent({\n                        upload_provider: 'google_drive',\n                        upload_type,\n                        upload_id: this.upload_id,\n                    });\n                }\n            };\n\n            this.showGoogleDriveFilePicker(false, mime_type, title, loadPickerCallback);\n        });\n    }\n\n    showGoogleDriveFilePicker(\n        is_save: boolean,\n        mime_type: string,\n        title: string,\n        callback: (data: TPickerCallbackResponse) => void\n    ) {\n        const docs_view = new google.picker.DocsView();\n        docs_view.setIncludeFolders(true);\n        docs_view.setMimeTypes(mime_type);\n\n        if (is_save) {\n            docs_view.setSelectFolderEnabled(true);\n        }\n        const picker = new google.picker.PickerBuilder();\n        picker\n            .setOrigin(`${window.location.protocol}//${window.location.host}`)\n            .setTitle(localize(title))\n            .setLocale(this.getPickerLanguage())\n            .setAppId(this.app_id)\n            .setOAuthToken(this.access_token)\n            .addView(docs_view)\n            .setDeveloperKey(this.api_key)\n            .setSize(1051, 650)\n            .setCallback(callback)\n            .build()\n            .setVisible(true);\n    }\n}\n","import React from 'react';\nimport { Button, ExpansionPanel, Icon } from '@deriv/components';\n\nexport const getIcon = (type: string) => {\n    switch (type) {\n        case 'error':\n            return 'IcAlertDanger';\n        case 'warn':\n            return 'IcAlertWarning';\n        case 'info':\n            return 'IcAlertInfo';\n        default:\n            return 'IcAlertWarning';\n    }\n};\n\ntype TMessageWithButton = {\n    unique_id: string;\n    type: string;\n    message: string;\n    btn_text: string;\n    onClick: () => void;\n};\n\nexport const messageWithButton = ({ unique_id, type, message, btn_text, onClick }: TMessageWithButton) => (\n    <>\n        <div key={`${unique_id}_message`} className='notify__item-container'>\n            <Icon key={`${unique_id}_icon`} icon={getIcon(type)} size='22' />\n            <div key={`${unique_id}_text`} className='notify__item-message'>\n                {message}\n            </div>\n        </div>\n        <Button\n            key={`${unique_id}_btn`}\n            className='notify__item-button'\n            text={btn_text}\n            onClick={onClick}\n            has_effect\n            secondary\n        />\n    </>\n);\n\nexport const messageWithImage = (message: string, image: string) => (\n    <>\n        <div className='notify__item-message'>{message}</div>\n        <img src={image} style={{ width: '100%' }} />\n    </>\n);\n\n// eslint-disable-next-line react/display-name\nexport const arrayAsMessage = parsedArray => measure => <ExpansionPanel message={parsedArray} onResize={measure} />;\n","import { localize } from '@deriv/translations';\nimport { arrayAsMessage, messageWithButton } from 'Components/notify-item';\n\nconst showErrorMessageWithButton = (message, block_id, showErrorMessage, centerAndHighlightBlock) => {\n    showErrorMessage(\n        messageWithButton({\n            unique_id: block_id,\n            type: 'error',\n            message,\n            btn_text: localize('Go to block'),\n            onClick: () => {\n                centerAndHighlightBlock();\n            },\n        })\n    );\n};\n\nexport const isCustomJournalMessage = (\n    { message, block_id, variable_name },\n    showErrorMessage,\n    centerAndHighlightBlock,\n    pushMessage\n) => {\n    // notify undefined variable block\n    if (message === undefined && variable_name != null) {\n        showErrorMessageWithButton(\n            localize(\n                \"Variable '{{variable_name}}' has no value. Please set a value for variable '{{variable_name}}' to notify.\",\n                { variable_name }\n            ),\n            block_id,\n            showErrorMessage,\n            centerAndHighlightBlock\n        );\n        return true;\n    }\n    // notify null variable block\n    if (message === null) {\n        pushMessage('NULL');\n        return true;\n    }\n    // notify NaN variable block\n    if (Object.is(message, NaN)) {\n        showErrorMessageWithButton(\n            localize('Tried to perform an invalid operation.'),\n            block_id,\n            showErrorMessage,\n            centerAndHighlightBlock\n        );\n        return true;\n    }\n    // notify list block\n    if (Array.isArray(message)) {\n        const message_length = message.length;\n        const parsedArray = {\n            header:\n                variable_name !== 'null'\n                    ? `${variable_name}: (${message_length})`\n                    : localize('List: ({{message_length}})', { message_length }),\n            content: parseArray(message),\n        };\n        pushMessage(arrayAsMessage(parsedArray));\n        return true;\n    }\n    // notify boolean results\n    if (typeof message === 'boolean') {\n        pushMessage(message.toString());\n        return true;\n    }\n\n    return false;\n};\n\nconst parseArray = message => {\n    return message.map((item, idx: number) => {\n        return {\n            id: `${Date.now()}-${idx}`,\n            value: item && Array.isArray(item) ? parseArray(item) : item,\n        };\n    });\n};\n","import LZString from 'lz-string';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const getStoredItemsByUser = (storage_key: string, loginid?: string, default_value?: any) => {\n    if (!loginid) {\n        return default_value;\n    }\n\n    const storage = getStoredItemsByKey(storage_key, default_value);\n    return storage[loginid] || default_value;\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const getStoredItemsByKey = (storage_key: string, default_value: any) => {\n    try {\n        const session_storage_item = sessionStorage.getItem(storage_key);\n        const decompressed_item = LZString.decompress(session_storage_item);\n        const stored_items = JSON.parse(decompressed_item);\n\n        if (stored_items) {\n            return stored_items;\n        }\n    } catch (e) {\n        // Do nothing.\n    }\n\n    return default_value;\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const setStoredItemsByKey = (storage_key: string, value: any) => {\n    try {\n        const compressed_value = LZString.compress(JSON.stringify(value));\n        sessionStorage.setItem(storage_key, compressed_value);\n    } catch (e) {\n        // eslint-disable-next-line no-console\n        console.warn('Could not write to storage.');\n    }\n};\n","import { action, computed, makeObservable, observable, reaction, when } from 'mobx';\nimport { LogTypes, MessageTypes } from '@deriv/bot-skeleton';\nimport { config } from '@deriv/bot-skeleton/src/constants/config';\nimport { formatDate } from '@deriv/shared';\nimport { TStores } from '@deriv/stores/types';\nimport { localize } from '@deriv/translations';\nimport { isCustomJournalMessage } from '../utils/journal-notifications';\nimport { getStoredItemsByKey, getStoredItemsByUser, setStoredItemsByKey } from '../utils/session-storage';\nimport { getSetting, storeSetting } from '../utils/settings';\nimport { v4 as uuidv4 } from 'uuid';\nimport RootStore from './root-store';\n\ntype TExtra = {\n    current_currency?: string;\n    currency?: string;\n    profit?: number;\n};\n\ntype TlogSuccess = {\n    log_type: string;\n    extra: TExtra;\n};\n\ntype TMessage = {\n    message: string | Error;\n    message_type: string;\n    className?: string;\n};\n\ntype TMessageItem = {\n    date?: string;\n    time?: string;\n    unique_id: string;\n    extra: TExtra;\n} & TMessage;\n\ntype TNotifyData = {\n    sound: string;\n    block_id?: string;\n    variable_name?: string;\n} & TMessage;\n\nexport interface IJournalStore {\n    is_filter_dialog_visible: boolean;\n    journal_filters: string[];\n    filters: { id: string; label: string }[];\n    unfiltered_messages: TMessageItem[];\n    toggleFilterDialog: () => void;\n    onLogSuccess: (message: TlogSuccess) => void;\n    onError: (message: Error | string) => void;\n    onNotify: (data: TNotifyData) => void;\n    pushMessage: (message: string, message_type: string, className: string, extra?: TExtra) => void;\n    filtered_messages: TMessageItem[];\n    getServerTime: () => Date;\n    playAudio: (sound: string) => void;\n    checked_filters: string[];\n    filterMessage: (checked: boolean, item_id: string) => void;\n    clear: () => void;\n    registerReactions: () => void;\n    restoreStoredJournals: () => void;\n}\n\nexport default class JournalStore {\n    root_store: RootStore;\n    core: TStores;\n    disposeReactionsFn: () => void;\n    constructor(root_store: RootStore, core: TStores) {\n        makeObservable(this, {\n            is_filter_dialog_visible: observable,\n            journal_filters: observable.shallow,\n            filters: observable.shallow,\n            unfiltered_messages: observable.shallow,\n            toggleFilterDialog: action.bound,\n            onLogSuccess: action.bound,\n            onError: action.bound,\n            onNotify: action.bound,\n            pushMessage: action.bound,\n            filtered_messages: computed,\n            getServerTime: action.bound,\n            playAudio: action.bound,\n            checked_filters: computed,\n            filterMessage: action.bound,\n            clear: action.bound,\n            registerReactions: action.bound,\n            restoreStoredJournals: action.bound,\n        });\n\n        this.root_store = root_store;\n        this.core = core;\n        this.disposeReactionsFn = this.registerReactions();\n        this.restoreStoredJournals();\n    }\n\n    JOURNAL_CACHE = 'journal_cache';\n\n    is_filter_dialog_visible = false;\n\n    filters = [\n        { id: MessageTypes.ERROR, label: localize('Errors') },\n        { id: MessageTypes.NOTIFY, label: localize('Notifications') },\n        { id: MessageTypes.SUCCESS, label: localize('System') },\n    ];\n    journal_filters: string[] = [];\n    unfiltered_messages: TMessageItem[] = [];\n\n    restoreStoredJournals() {\n        const { loginid } = this.core?.client ?? {};\n        this.journal_filters = getSetting('journal_filter') || this.filters.map(filter => filter.id);\n        this.unfiltered_messages = getStoredItemsByUser(this.JOURNAL_CACHE, loginid, []);\n    }\n\n    getServerTime() {\n        return this.core?.common.server_time.get();\n    }\n\n    playAudio = (sound: string) => {\n        if (sound !== config.lists.NOTIFICATION_SOUND[0][1]) {\n            const audio = document.getElementById(sound) as HTMLAudioElement;\n            audio.play();\n        }\n    };\n\n    toggleFilterDialog() {\n        this.is_filter_dialog_visible = !this.is_filter_dialog_visible;\n    }\n\n    onLogSuccess(message: TlogSuccess) {\n        const { log_type, extra } = message;\n        this.pushMessage(log_type, MessageTypes.SUCCESS, '', extra);\n    }\n\n    onError(message: Error | string) {\n        this.pushMessage(message, MessageTypes.ERROR);\n    }\n\n    onNotify(data: TNotifyData) {\n        const { run_panel, dbot } = this.root_store;\n        const { message, className, message_type, sound, block_id, variable_name } = data;\n\n        if (\n            isCustomJournalMessage(\n                { message, block_id, variable_name },\n                run_panel.showErrorMessage,\n                () => dbot.centerAndHighlightBlock(block_id as string, true),\n                (parsed_message: string) =>\n                    this.pushMessage(parsed_message, message_type || MessageTypes.NOTIFY, className)\n            )\n        ) {\n            this.playAudio(sound);\n            return;\n        }\n        this.pushMessage(message, message_type || MessageTypes.NOTIFY, className);\n        this.playAudio(sound);\n    }\n\n    pushMessage(\n        message: Error | string,\n        message_type: string,\n        className?: string,\n        extra: { current_currency?: string; currency?: string } = {}\n    ) {\n        const { client } = this.core;\n        const { loginid, account_list } = client;\n\n        if (loginid) {\n            const current_account = account_list?.find(account => account?.loginid === loginid);\n            extra.current_currency = current_account?.is_virtual ? 'Demo' : current_account?.title;\n        } else if (message === LogTypes.WELCOME) {\n            return;\n        }\n\n        const date = formatDate(this.getServerTime());\n        const time = formatDate(this.getServerTime(), 'HH:mm:ss [GMT]');\n        const unique_id = uuidv4();\n\n        this.unfiltered_messages.unshift({ date, time, message, message_type, className, unique_id, extra });\n        this.unfiltered_messages = this.unfiltered_messages.slice(); // force array update\n    }\n\n    get filtered_messages() {\n        return (\n            this.unfiltered_messages\n                // filter messages based on filtered-checkbox\n                .filter(\n                    message =>\n                        this.journal_filters.length &&\n                        this.journal_filters.some(filter => message.message_type === filter)\n                )\n        );\n    }\n\n    get checked_filters() {\n        return this.journal_filters.filter(filter => filter != null);\n    }\n\n    filterMessage(checked: boolean, item_id: string) {\n        if (checked) {\n            this.journal_filters.push(item_id);\n        } else {\n            this.journal_filters.splice(this.journal_filters.indexOf(item_id), 1);\n        }\n\n        storeSetting('journal_filter', this.journal_filters);\n    }\n\n    clear() {\n        this.unfiltered_messages = this.unfiltered_messages.slice(0, 0);\n    }\n\n    registerReactions() {\n        const { client } = this.core;\n\n        // Write journal messages to session storage on each change in unfiltered messages.\n        const disposeWriteJournalMessageListener = reaction(\n            () => this.unfiltered_messages,\n            unfiltered_messages => {\n                const stored_journals = getStoredItemsByKey(this.JOURNAL_CACHE, {});\n                stored_journals[client.loginid as string] = unfiltered_messages?.slice(0, 5000);\n                setStoredItemsByKey(this.JOURNAL_CACHE, stored_journals);\n            }\n        );\n\n        // Attempt to load cached journal messages on client loginid change.\n        const disposeJournalMessageListener = reaction(\n            () => client?.loginid,\n            async loginid => {\n                await when(() => {\n                    const has_account = client.account_list?.find(account => account.loginid === loginid)?.title;\n                    return !!has_account;\n                });\n                this.unfiltered_messages = getStoredItemsByUser(this.JOURNAL_CACHE, loginid, []);\n                if (this.unfiltered_messages.length === 0) {\n                    this.pushMessage(LogTypes.WELCOME, MessageTypes.SUCCESS, 'journal__text');\n                } else if (this.unfiltered_messages.length > 0) {\n                    this.pushMessage(LogTypes.WELCOME_BACK, MessageTypes.SUCCESS, 'journal__text');\n                }\n            },\n            { fireImmediately: true } // For initial welcome message\n        );\n\n        return () => {\n            disposeWriteJournalMessageListener();\n            disposeJournalMessageListener();\n        };\n    }\n}\n","export const tabs_title = Object.freeze({\n    TAB_LOCAL: 'local_tab',\n    TAB_GOOGLE: 'google_tab',\n    TAB_RECENT: 'recent_tab',\n});\n","export const waitForDomElement = (selector: string, observingParent?: Element) => {\n    return new Promise(resolve => {\n        if (document.querySelector(selector)) {\n            return resolve(document.querySelector(selector));\n        }\n\n        const observer = new MutationObserver(() => {\n            if (document.querySelector(selector)) {\n                resolve(document.querySelector(selector));\n                observer.disconnect();\n            }\n        });\n\n        observer.observe(observingParent ?? document.body, {\n            childList: true,\n            subtree: true,\n        });\n    });\n};\n","import React from 'react';\nimport { action, computed, makeObservable, observable, reaction } from 'mobx';\nimport { v4 as uuidv4 } from 'uuid';\nimport {\n    getSavedWorkspaces,\n    load,\n    removeExistingWorkspace,\n    save_types,\n    saveWorkspaceToRecent,\n} from '@deriv/bot-skeleton';\nimport { inject_workspace_options, updateXmlValues } from '@deriv/bot-skeleton/src/scratch/utils';\nimport { isDbotRTL } from '@deriv/bot-skeleton/src/utils/workspace';\nimport { TStores } from '@deriv/stores/types';\nimport { localize } from '@deriv/translations';\nimport { tabs_title } from 'Constants/load-modal';\nimport { TStrategy } from 'Types';\nimport {\n    rudderStackSendUploadStrategyCompletedEvent,\n    rudderStackSendUploadStrategyFailedEvent,\n    rudderStackSendUploadStrategyStartEvent,\n} from '../analytics/rudderstack-common-events';\nimport { getStrategyType } from '../analytics/utils';\nimport { waitForDomElement } from '../utils/dom-observer';\nimport RootStore from './root-store';\n\nexport default class LoadModalStore {\n    root_store: RootStore;\n    core: TStores;\n    imported_strategy_type = 'pending';\n\n    constructor(root_store: RootStore, core: TStores) {\n        makeObservable(this, {\n            active_index: observable,\n            is_load_modal_open: observable,\n            is_explanation_expand: observable,\n            is_strategy_loaded: observable,\n            is_delete_modal_open: observable,\n            is_strategy_removed: observable,\n            loaded_local_file: observable,\n            recent_strategies: observable,\n            dashboard_strategies: observable,\n            selected_strategy_id: observable,\n            current_workspace_id: observable,\n            upload_id: observable,\n            preview_workspace: computed,\n            selected_strategy: computed,\n            tab_name: computed,\n            is_open_button_disabled: observable,\n            setOpenButtonDisabled: action.bound,\n            getSelectedStrategyID: action.bound,\n            refreshStrategies: action.bound,\n            loadStrategyToBuilder: action.bound,\n            refreshStrategiesTheme: action.bound,\n            handleFileChange: action.bound,\n            loadFileFromRecent: action.bound,\n            loadFileFromLocal: action.bound,\n            imported_strategy_type: observable,\n            onActiveIndexChange: action.bound,\n            onDriveOpen: action.bound,\n            onEntered: action.bound,\n            onLoadModalClose: action.bound,\n            onZoomInOutClick: action.bound,\n            setActiveTabIndex: action.bound,\n            setLoadedLocalFile: action.bound,\n            setRecentStrategies: action.bound,\n            setSelectedStrategyId: action.bound,\n            toggleExplanationExpand: action.bound,\n            toggleLoadModal: action.bound,\n            toggleTourLoadModal: action.bound,\n            readFile: action.bound,\n            resetBotBuilderStrategy: action.bound,\n            setDashboardStrategies: action.bound,\n            updateListStrategies: action.bound,\n            onToggleDeleteDialog: action,\n            loadStrategyOnModalRecentPreview: action,\n            loadStrategyOnBotBuilder: action,\n            saveStrategyToLocalStorage: action,\n            updateXmlValuesOnStrategySelection: action,\n        });\n\n        this.root_store = root_store;\n        this.core = core;\n\n        reaction(\n            () => this.active_index,\n            () => this.onActiveIndexChange()\n        );\n        reaction(\n            () => this.is_load_modal_open,\n            async is_load_modal_open => {\n                if (is_load_modal_open) {\n                    const saved_workspaces = await getSavedWorkspaces();\n                    if (!saved_workspaces) return;\n                    this.setRecentStrategies(saved_workspaces);\n                    if (saved_workspaces.length > 0 && !this.selected_strategy_id) {\n                        this.setSelectedStrategyId(saved_workspaces[0].id);\n                    }\n                } else {\n                    this.onLoadModalClose();\n                }\n            }\n        );\n    }\n\n    recent_workspace: Blockly.WorkspaceSvg | null = null;\n    local_workspace: Blockly.WorkspaceSvg | null = null;\n    drop_zone: unknown;\n\n    active_index = 0;\n    is_load_modal_open = false;\n    is_explanation_expand = false;\n    is_open_button_loading = false;\n    is_open_button_disabled = false;\n    loaded_local_file: File | null = null;\n    recent_strategies: Array<TStrategy> = [];\n    dashboard_strategies: Array<TStrategy> | [] = [];\n    selected_strategy_id = '';\n    is_strategy_loaded = false;\n    is_delete_modal_open = false;\n    is_strategy_removed = false;\n    current_workspace_id = '';\n    upload_id = '';\n\n    get preview_workspace(): Blockly.WorkspaceSvg | null {\n        if (this.tab_name === tabs_title.TAB_LOCAL) return this.local_workspace;\n        if (this.tab_name === tabs_title.TAB_RECENT) return this.recent_workspace;\n        return null;\n    }\n\n    get selected_strategy(): TStrategy {\n        return (\n            this.dashboard_strategies.find((ws: { id: string }) => ws.id === this.selected_strategy_id) ??\n            this.dashboard_strategies[0]\n        );\n    }\n\n    get tab_name(): string {\n        if (this.core.ui.is_mobile) {\n            if (this.active_index === 0) return tabs_title.TAB_LOCAL;\n            if (this.active_index === 1) return tabs_title.TAB_GOOGLE;\n        }\n        if (this.active_index === 0) return tabs_title.TAB_RECENT;\n        if (this.active_index === 1) return tabs_title.TAB_LOCAL;\n        if (this.active_index === 2) return tabs_title.TAB_GOOGLE;\n        return '';\n    }\n\n    setOpenButtonDisabled = (is_open_button_disabled: boolean) => {\n        this.is_open_button_disabled = is_open_button_disabled;\n    };\n\n    getSelectedStrategyID = (current_workspace_id: string) => {\n        this.current_workspace_id = current_workspace_id;\n    };\n\n    setDashboardStrategies = (strategies: Array<TStrategy>) => {\n        this.dashboard_strategies = strategies;\n        if (!strategies.length) {\n            this.selected_strategy_id = '';\n        }\n    };\n\n    getDashboardStrategies = async () => {\n        const recent_strategies = await getSavedWorkspaces();\n        this.dashboard_strategies = recent_strategies;\n    };\n\n    onDriveOpen = async () => {\n        const { google_drive } = this.root_store;\n        const { verifyGoogleDriveAccessToken } = google_drive;\n        const result = await verifyGoogleDriveAccessToken();\n        if (result === 'not_verified') return;\n\n        if (google_drive) {\n            google_drive.upload_id = uuidv4();\n        }\n\n        rudderStackSendUploadStrategyStartEvent({\n            upload_provider: 'google_drive',\n            upload_id: google_drive.upload_id,\n        });\n\n        const { loadFile } = this.root_store.google_drive;\n        const load_file = await loadFile();\n        if (!load_file) return;\n        const xml_doc = load_file?.xml_doc;\n        const file_name = load_file?.file_name;\n        await load({\n            block_string: xml_doc,\n            file_name,\n            workspace: window.Blockly.derivWorkspace,\n            from: save_types.GOOGLE_DRIVE,\n            drop_event: null,\n            strategy_id: null,\n            showIncompatibleStrategyDialog: null,\n        });\n\n        const { active_tab } = this.root_store.dashboard;\n        if (active_tab === 1) this.toggleLoadModal();\n\n        this.root_store.dashboard.is_dialog_open = false;\n    };\n\n    onEntered = (): void => {\n        if (this.recent_strategies.length === 0 || this.tab_name !== tabs_title.TAB_RECENT) return;\n        this.setOpenButtonDisabled(true);\n        const { blockly_store } = this.root_store;\n        const { setLoading } = blockly_store;\n        setLoading(true);\n        this.loadStrategyOnModalRecentPreview(this.selected_strategy_id);\n        this.updateXmlValuesOnStrategySelection();\n        this.setOpenButtonDisabled(false);\n    };\n\n    onLoadModalClose = (): void => {\n        if (this.local_workspace) {\n            this.local_workspace = null;\n        }\n        this.setActiveTabIndex(0); // Reset to first tab.\n        this.setLoadedLocalFile(null);\n    };\n\n    onZoomInOutClick = (is_zoom_in: string): void => {\n        if (this.preview_workspace) {\n            this.preview_workspace.zoomCenter(is_zoom_in ? 1 : -1);\n        }\n    };\n\n    setActiveTabIndex = (index: number): void => {\n        this.active_index = index;\n    };\n\n    setLoadedLocalFile = (loaded_local_file: File | null): void => {\n        this.loaded_local_file = loaded_local_file;\n    };\n\n    setRecentStrategies = (recent_strategies: TStrategy[]): void => {\n        this.recent_strategies = recent_strategies;\n    };\n\n    refreshStrategies = (): void => {\n        this.setRecentStrategies(this.recent_strategies);\n    };\n\n    setSelectedStrategyId = (selected_strategy_id: string): void => {\n        this.selected_strategy_id = selected_strategy_id;\n    };\n\n    toggleExplanationExpand = (): void => {\n        this.is_explanation_expand = !this.is_explanation_expand;\n    };\n\n    toggleLoadModal = (): void => {\n        this.is_load_modal_open = !this.is_load_modal_open;\n        this.recent_workspace?.dispose();\n        this.recent_workspace = null;\n        this.setLoadedLocalFile(null);\n    };\n\n    toggleTourLoadModal = (toggle = !this.is_load_modal_open) => {\n        this.is_load_modal_open = toggle;\n    };\n\n    updateListStrategies = (workspaces: Array<TStrategy>): void => {\n        if (workspaces) {\n            (this.dashboard_strategies as Array<TStrategy>) = workspaces;\n        }\n    };\n\n    getRecentFileIcon = (save_type: { [key: string]: string } | string): string => {\n        switch (save_type) {\n            case save_types.UNSAVED:\n                return 'IcReports';\n            case save_types.LOCAL:\n                return 'IcMyComputer';\n            case save_types.GOOGLE_DRIVE:\n                return 'IcGoogleDrive';\n            default:\n                return 'IcReports';\n        }\n    };\n\n    getSaveType = (save_type: { [key: string]: string } | string): string => {\n        switch (save_type) {\n            case save_types.UNSAVED:\n                return localize('Unsaved');\n            case save_types.LOCAL:\n                return localize('Local');\n            case save_types.GOOGLE_DRIVE:\n                return localize('Google Drive');\n            default:\n                return localize('Unsaved');\n        }\n    };\n\n    onToggleDeleteDialog = (is_delete_modal_open: boolean): void => {\n        this.is_delete_modal_open = is_delete_modal_open;\n    };\n\n    resetBotBuilderStrategy = () => {\n        const workspace = window.Blockly.derivWorkspace;\n        if (workspace) {\n            window.Blockly.derivWorkspace.asyncClear();\n            window.Blockly.Xml.domToWorkspace(window.Blockly.utils.xml.textToDom(workspace.cached_xml.main), workspace);\n            window.Blockly.derivWorkspace.strategy_to_load = workspace.cached_xml.main;\n        }\n    };\n\n    loadStrategyToBuilder = async (strategy: TStrategy) => {\n        if (strategy?.id) {\n            await load({\n                block_string: strategy.xml,\n                strategy_id: strategy.id,\n                file_name: strategy.name,\n                workspace: window.Blockly?.derivWorkspace,\n                from: strategy.save_type,\n                drop_event: {},\n                showIncompatibleStrategyDialog: false,\n            });\n            window.Blockly.derivWorkspace.strategy_to_load = strategy.xml;\n        }\n    };\n\n    refreshStrategiesTheme = async () => {\n        if (this.recent_workspace) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            (this.recent_workspace as any).RTL = isDbotRTL();\n        }\n        await load({\n            block_string: this.selected_strategy?.xml,\n            drop_event: {},\n            workspace: this.recent_workspace,\n            file_name: this.selected_strategy?.name,\n            strategy_id: this.selected_strategy?.id,\n            from: this.selected_strategy?.save_type,\n            showIncompatibleStrategyDialog: false,\n        });\n    };\n\n    loadFileFromRecent = async () => {\n        this.is_open_button_loading = true;\n        if (!this.selected_strategy) {\n            window.Blockly.derivWorkspace.asyncClear();\n            window.Blockly.Xml.domToWorkspace(\n                window.Blockly.utils.xml.textToDom(window.Blockly.derivWorkspace.strategy_to_load),\n                window.Blockly.derivWorkspace\n            );\n            this.is_open_button_loading = false;\n            return;\n        }\n\n        removeExistingWorkspace(this.selected_strategy.id);\n        await load({\n            block_string: this.selected_strategy?.xml,\n            strategy_id: this.selected_strategy.id,\n            file_name: this.selected_strategy.name,\n            workspace: window.Blockly.derivWorkspace,\n            from: this.selected_strategy.save_type,\n            drop_event: {},\n            showIncompatibleStrategyDialog: false,\n        });\n        const recent_files = await getSavedWorkspaces();\n        recent_files.map((strategy: TStrategy) => {\n            const { xml, id } = strategy;\n            if (this.selected_strategy.id === id) {\n                window.Blockly.derivWorkspace.strategy_to_load = xml;\n            }\n        });\n        this.is_open_button_loading = false;\n    };\n\n    loadFileFromLocal = (): void => {\n        this.is_open_button_loading = true;\n        if (this.loaded_local_file) {\n            this.readFile(false, {} as DragEvent, this.loaded_local_file);\n        }\n    };\n\n    onActiveIndexChange = (): void => {\n        this.setOpenButtonDisabled(true);\n        if (this.tab_name === tabs_title.TAB_RECENT) {\n            this.loadStrategyOnModalRecentPreview(this.selected_strategy_id);\n            this.updateXmlValuesOnStrategySelection();\n        } else if (this.recent_workspace) {\n            setTimeout(() => {\n                // Dispose of recent workspace when switching away from Recent tab.\n                // Process in next cycle so user doesn't have to wait.\n                this.recent_workspace?.dispose();\n                this.recent_workspace = null;\n            });\n        }\n\n        if (this.tab_name === tabs_title.TAB_LOCAL) {\n            if (!this.drop_zone) {\n                this.drop_zone = document.querySelector('load-strategy__local-dropzone-area');\n\n                if (this.drop_zone) {\n                    this.drop_zone.addEventListener('drop', event => this.handleFileChange(event, false));\n                }\n            }\n        }\n\n        // Dispose of local workspace when switching away from Local tab.\n        else if (this.local_workspace) {\n            setTimeout(() => {\n                this.local_workspace?.dispose();\n                this.local_workspace = null;\n                this.setLoadedLocalFile(null);\n            }, 0);\n        }\n\n        // Forget about drop zone when not on Local tab.\n        if (this.tab_name !== tabs_title.TAB_LOCAL && this.drop_zone) {\n            this.drop_zone.removeEventListener('drop', event => this.handleFileChange(event, false));\n        }\n        this.setOpenButtonDisabled(false);\n    };\n\n    handleFileChange = (\n        event: React.MouseEvent | React.FormEvent<HTMLFormElement> | DragEvent,\n        is_body = true\n    ): boolean => {\n        this.imported_strategy_type = 'pending';\n        this.upload_id = uuidv4();\n        let files;\n        if (event.type === 'drop') {\n            event.stopPropagation();\n            event.preventDefault();\n            ({ files } = event.dataTransfer as DragEvent);\n        } else {\n            ({ files } = event.target);\n        }\n\n        const [file] = files;\n\n        if (!is_body) {\n            if (file.name.includes('xml')) {\n                this.setLoadedLocalFile(file);\n                this.getDashboardStrategies();\n            } else {\n                return false;\n            }\n        }\n        this.readFile(!is_body, event as DragEvent, file);\n        (event.target as HTMLInputElement).value = '';\n        return true;\n    };\n\n    readFile = (is_preview: boolean, drop_event: DragEvent, file: File): void => {\n        const reader = new FileReader();\n        const file_name = file?.name.replace(/\\.[^/.]+$/, '') || '';\n\n        reader.onload = action(async e => {\n            const load_options = {\n                block_string: e?.target?.result,\n                drop_event,\n                from: save_types.LOCAL,\n                workspace: null as Blockly.WorkspaceSvg | null,\n                file_name,\n                strategy_id: '',\n                showIncompatibleStrategyDialog: false,\n            };\n            await load(load_options);\n            this.loadStrategyOnModalLocalPreview(load_options);\n            this.is_open_button_loading = false;\n        });\n\n        reader.readAsText(file);\n    };\n\n    saveStrategyToLocalStorage = async () => {\n        const { save_modal } = this.root_store;\n        const { updateBotName } = save_modal;\n        const { convertedDom, from, file_name } = window.Blockly.xmlValues;\n        updateBotName(file_name);\n        await saveWorkspaceToRecent(convertedDom, from);\n        const recent_files = await getSavedWorkspaces();\n        if (recent_files?.length > 0) this.setSelectedStrategyId(recent_files[0]?.id);\n    };\n\n    loadStrategyOnBotBuilder = async () => {\n        const {\n            strategy_id = window.Blockly.utils.idGenerator.genUid(),\n            convertedDom,\n            block_string,\n        } = window.Blockly.xmlValues;\n        const derivWorkspace = window.Blockly.derivWorkspace;\n\n        window.Blockly.Xml.clearWorkspaceAndLoadFromXml(convertedDom, derivWorkspace);\n        derivWorkspace.cleanUp();\n        derivWorkspace.clearUndo();\n        derivWorkspace.current_strategy_id = strategy_id;\n\n        const upload_type = getStrategyType(block_string ?? '');\n        rudderStackSendUploadStrategyCompletedEvent({\n            upload_provider: 'my_computer',\n            upload_type,\n            upload_id: this.upload_id,\n        });\n    };\n\n    updateXmlValuesOnStrategySelection = () => {\n        if (this.recent_strategies.length === 0) return;\n        updateXmlValues({\n            strategy_id: this.selected_strategy_id,\n            convertedDom: window?.Blockly?.utils?.xml?.textToDom(this.selected_strategy?.xml),\n            file_name: this.selected_strategy?.name,\n            from: this.selected_strategy?.save_type || save_types.UNSAVED,\n        });\n    };\n\n    loadStrategyOnModalRecentPreview = async workspace_id => {\n        this.setOpenButtonDisabled(true);\n        if (this.recent_strategies.length === 0 || this.tab_name !== tabs_title.TAB_RECENT) return;\n\n        const { blockly_store } = this.root_store;\n        const { setLoading } = blockly_store;\n\n        const inject_options = { ...inject_workspace_options, theme: window?.Blockly?.Themes?.zelos_renderer };\n\n        this.setLoadedLocalFile(null);\n        this.setSelectedStrategyId(workspace_id);\n\n        await waitForDomElement('#load-strategy__blockly-container');\n        const ref_preview = document?.getElementById('load-strategy__blockly-container');\n\n        if (!this.recent_workspace) this.recent_workspace = window.Blockly.inject(ref_preview, inject_options);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (this.recent_workspace as any).RTL = isDbotRTL();\n\n        const convertedDom = window.Blockly?.utils?.xml?.textToDom(this.selected_strategy?.xml);\n        const mainWorkspace = window.Blockly?.getMainWorkspace();\n\n        window.Blockly?.Xml?.clearWorkspaceAndLoadFromXml(convertedDom, mainWorkspace);\n\n        setLoading(false);\n        this.setOpenButtonDisabled(false);\n    };\n\n    loadStrategyOnModalLocalPreview = async load_options => {\n        this.setOpenButtonDisabled(true);\n        const injectWorkspace = { ...inject_workspace_options, theme: window?.Blockly?.Themes?.zelos_renderer };\n        const ref = document?.getElementById('load-strategy__blockly-container');\n\n        this.local_workspace = window.Blockly.inject(ref, injectWorkspace);\n        load_options.workspace = this.local_workspace;\n\n        if (load_options.workspace) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            (load_options.workspace as any).RTL = isDbotRTL();\n        }\n\n        const upload_type = getStrategyType(load_options?.block_string ?? '');\n        const result = await load(load_options);\n        if (!result?.error) {\n            rudderStackSendUploadStrategyStartEvent({ upload_provider: 'my_computer', upload_id: this.upload_id });\n        } else if (result?.error) {\n            rudderStackSendUploadStrategyFailedEvent({\n                upload_provider: 'my_computer',\n                upload_id: this.upload_id,\n                upload_type,\n                error_message: result.error,\n            });\n        }\n    };\n}\n","export const addDynamicBlockToDOM = (\n    name_block: string,\n    strategy_value: string,\n    trade_type_cat: string,\n    strategy_dom: HTMLElement\n) => {\n    if (trade_type_cat === 'digits' || trade_type_cat === 'highlowticks') {\n        const block = document.createElement('value');\n        block.setAttribute('name', name_block);\n        block.setAttribute('strategy_value', strategy_value);\n\n        const shadow_block = document.createElement('shadow');\n        shadow_block.setAttribute('type', 'math_number_positive');\n        shadow_block.setAttribute('id', 'p0O]7-M{ZORlORxGuIEb');\n\n        const field_block = document.createElement('field');\n        field_block.setAttribute('name', 'NUM');\n        field_block.textContent = '0';\n\n        shadow_block.appendChild(field_block);\n        block.appendChild(shadow_block);\n\n        const amount_block = strategy_dom?.querySelector('value[name=\"AMOUNT\"]');\n        if (amount_block) {\n            const parent_node = amount_block.parentNode;\n            if (parent_node) {\n                parent_node.insertBefore(block, amount_block.nextSibling);\n            }\n        }\n    }\n    if (name_block === 'PREDICTION' && strategy_dom) {\n        const mutation_element = strategy_dom.querySelector('block[type=\"trade_definition_tradeoptions\"] > mutation');\n        if (mutation_element) {\n            mutation_element.setAttribute('has_prediction', 'true');\n        }\n    }\n};\n","import { action, makeObservable, observable, reaction } from 'mobx';\nimport { ApiHelpers, config as qs_config, load } from '@deriv/bot-skeleton';\nimport { save_types } from '@deriv/bot-skeleton/src/constants/save-type';\nimport { addDynamicBlockToDOM } from 'Utils/xml-dom-quick-strategy';\nimport { STRATEGIES } from '../pages/bot-builder/quick-strategy/config';\nimport { TFormData } from '../pages/bot-builder/quick-strategy/types';\nimport RootStore from './root-store';\nimport { botNotification } from 'Components/bot-notification/bot-notification';\nimport { notification_message, NOTIFICATION_TYPE } from 'Components/bot-notification/bot-notification-utils';\n\nexport type TActiveSymbol = {\n    group: string;\n    text: string;\n    value: string;\n};\n\nexport type TLossThresholdWarningData = {\n    show: boolean;\n    loss_amount?: string | number;\n    currency?: string;\n    highlight_field?: Array<string>;\n    already_shown?: boolean;\n};\n\ninterface IQuickStrategyStore {\n    additional_data: Record<string, unknown>;\n    current_duration_min_max: {\n        min: number;\n        max: number;\n    };\n    root_store: RootStore;\n    is_open: boolean;\n    selected_strategy: string;\n    form_data: TFormData;\n    loss_threshold_warning_data: {\n        show: boolean;\n    };\n    is_contract_dialog_open: boolean;\n    is_stop_bot_dialog_open: boolean;\n    setLossThresholdWarningData: (data: TLossThresholdWarningData) => void;\n    setFormVisibility: (is_open: boolean) => void;\n    setSelectedStrategy: (strategy: string) => void;\n    setValue: (name: string, value: string) => void;\n    onSubmit: (data: TFormData) => void;\n    toggleStopBotDialog: () => void;\n    setCurrentDurationMinMax: (min: number, max: number) => void;\n}\n\nexport default class QuickStrategyStore implements IQuickStrategyStore {\n    root_store: RootStore;\n    is_open = false;\n    selected_strategy = 'MARTINGALE';\n    form_data: TFormData = {\n        symbol: qs_config.QUICK_STRATEGY.DEFAULT.symbol,\n        tradetype: qs_config.QUICK_STRATEGY.DEFAULT.tradetype,\n        durationtype: qs_config.QUICK_STRATEGY.DEFAULT.durationtype,\n        action: 'RUN',\n    };\n    is_contract_dialog_open = false;\n    is_stop_bot_dialog_open = false;\n    current_duration_min_max = {\n        min: 0,\n        max: 10,\n    };\n    loss_threshold_warning_data: TLossThresholdWarningData = {\n        show: false,\n    };\n    additional_data = {};\n\n    constructor(root_store: RootStore) {\n        makeObservable(this, {\n            additional_data: observable,\n            current_duration_min_max: observable,\n            form_data: observable,\n            is_contract_dialog_open: observable,\n            is_open: observable,\n            is_stop_bot_dialog_open: observable,\n            initializeLossThresholdWarningData: action,\n            selected_strategy: observable,\n            loss_threshold_warning_data: observable,\n            onSubmit: action,\n            setAdditionalData: action,\n            setCurrentDurationMinMax: action,\n            setFormVisibility: action,\n            setSelectedStrategy: action,\n            setLossThresholdWarningData: action,\n            setValue: action,\n            toggleStopBotDialog: action,\n        });\n        this.root_store = root_store;\n        reaction(\n            () => this.is_open,\n            () => {\n                if (!this.is_open) {\n                    this.selected_strategy = 'MARTINGALE';\n                }\n            }\n        );\n    }\n\n    setAdditionalData = (data: Record<string, unknown>) => {\n        this.additional_data = {\n            ...this.additional_data,\n            ...data,\n        };\n    };\n\n    setLossThresholdWarningData = (data: TLossThresholdWarningData) => {\n        this.loss_threshold_warning_data = {\n            ...this.loss_threshold_warning_data,\n            ...data,\n        };\n    };\n\n    initializeLossThresholdWarningData = () => {\n        this.loss_threshold_warning_data = {\n            show: false,\n            highlight_field: [],\n            already_shown: false,\n        };\n    };\n\n    setFormVisibility = (is_open: boolean) => {\n        this.is_open = is_open;\n    };\n\n    setSelectedStrategy = (strategy: string) => {\n        this.selected_strategy = strategy;\n    };\n\n    setValue = (name: string, value: string | number | boolean) => {\n        this.form_data[name as keyof TFormData] = value;\n    };\n\n    setCurrentDurationMinMax = (min = 0, max = 10) => {\n        this.current_duration_min_max = {\n            min,\n            max,\n        };\n    };\n\n    onSubmit = async (data: TFormData) => {\n        const { contracts_for } = ApiHelpers.instance;\n        const market = await contracts_for.getMarketBySymbol(data.symbol);\n        const submarket = await contracts_for.getSubmarketBySymbol(data.symbol);\n        const trade_type_cat = await contracts_for.getTradeTypeCategoryByTradeType(data.tradetype);\n        const selected_strategy = STRATEGIES[this.selected_strategy];\n        const strategy_xml = await import(/* webpackChunkName: `[request]` */ `../xml/${selected_strategy.name}.xml`);\n        const strategy_dom = Blockly.utils.xml.textToDom(strategy_xml.default);\n        addDynamicBlockToDOM('PREDICTION', 'last_digit_prediction', trade_type_cat, strategy_dom);\n\n        const modifyValueInputs = (key: string, value: number) => {\n            const el_value_inputs = strategy_dom?.querySelectorAll(`value[strategy_value=\"${key}\"]`);\n            el_value_inputs?.forEach((el_value_input: HTMLElement) => {\n                if (key.includes('boolean'))\n                    if (value)\n                        el_value_input.innerHTML = `<block type=\"logic_boolean\"><field name=\"BOOL\">TRUE</field></block>`;\n                    else\n                        el_value_input.innerHTML = `<block type=\"logic_boolean\"><field name=\"BOOL\">FALSE</field></block>`;\n                else\n                    el_value_input.innerHTML = `<shadow type=\"math_number\"><field name=\"NUM\">${value}</field></shadow>`;\n            });\n        };\n\n        const modifyFieldDropdownValues = (name: string, value: string) => {\n            const name_list = `${name.toUpperCase()}_LIST`;\n            const el_blocks = strategy_dom?.querySelectorAll(`field[name=\"${name_list}\"]`);\n            const dropdown_value = value;\n            el_blocks?.forEach((el_block: HTMLElement) => {\n                el_block.innerHTML = dropdown_value;\n            });\n        };\n\n        const { unit, action, type, growth_rate, ...rest_data } = data;\n        const fields_to_update = {\n            market,\n            submarket,\n            tradetypecat: trade_type_cat,\n            dalembert_unit: unit,\n            oscar_unit: unit,\n            type: 'both',\n            ...rest_data,\n            purchase: type,\n            growthrate: growth_rate ? growth_rate.toString() : undefined,\n        };\n\n        Object.keys(fields_to_update).forEach(key => {\n            const value = fields_to_update[key as keyof typeof fields_to_update];\n\n            if (!isNaN(value as number) && key !== 'growthrate') {\n                modifyValueInputs(key, value as number);\n            } else if (typeof value === 'string') {\n                modifyFieldDropdownValues(key, value);\n            }\n        });\n\n        const { derivWorkspace: workspace } = Blockly;\n\n        if (action === 'RUN') {\n            workspace\n                ?.waitForBlockEvent({\n                    block_type: 'trade_definition',\n                    event_type: Blockly.Events.BLOCK_CREATE,\n                    timeout: 5000,\n                })\n                .then(() => {\n                    this.root_store.run_panel.onRunButtonClick();\n                });\n        }\n\n        this.setFormVisibility(false);\n        botNotification(notification_message[NOTIFICATION_TYPE.BOT_IMPORT]);\n\n        await load({\n            block_string: Blockly.Xml.domToText(strategy_dom),\n            file_name: selected_strategy.label,\n            workspace,\n            from: save_types.UNSAVED,\n            drop_event: null,\n            strategy_id: null,\n            showIncompatibleStrategyDialog: null,\n        });\n    };\n\n    toggleStopBotDialog = (): void => {\n        this.is_contract_dialog_open = !this.is_contract_dialog_open;\n        this.is_stop_bot_dialog_open = !this.is_stop_bot_dialog_open;\n        this.setFormVisibility(false);\n    };\n}\n","import { action, makeObservable, observable } from 'mobx';\nimport { TStores } from '@deriv/stores/types';\nimport RootStore from './root-store';\n\nexport interface IRoutePromptDialogStore {\n    should_show: boolean;\n    is_confirmed: boolean;\n    last_location: Location | null;\n    shouldNavigateAfterPrompt: (next_location: Location) => boolean;\n    setShoudShow: (should_show: boolean) => void;\n    onConfirm: () => void;\n    onCancel: () => void;\n    continueRoute: () => void;\n}\n\nexport default class RoutePromptDialogStore implements IRoutePromptDialogStore {\n    root_store: RootStore;\n    core: TStores;\n\n    constructor(root_store: RootStore, core: TStores) {\n        makeObservable(this, {\n            should_show: observable,\n            is_confirmed: observable,\n            last_location: observable,\n            shouldNavigateAfterPrompt: action.bound,\n            onConfirm: action.bound,\n            onCancel: action.bound,\n            continueRoute: action.bound,\n            setShoudShow: action.bound,\n        });\n\n        this.root_store = root_store;\n        this.core = core;\n    }\n\n    should_show = false;\n    is_confirmed = false;\n    last_location: Location | null = null;\n\n    shouldNavigateAfterPrompt(next_location: Location) {\n        if (!this.is_confirmed) {\n            this.last_location = next_location;\n            if (next_location.pathname !== '/bot') this.should_show = true;\n            return false;\n        }\n\n        return true;\n    }\n\n    setShoudShow(should_show: boolean) {\n        this.should_show = should_show;\n    }\n\n    onConfirm() {\n        this.should_show = false;\n        this.is_confirmed = true;\n    }\n\n    onCancel() {\n        this.should_show = false;\n    }\n\n    continueRoute() {\n        const { common } = this.core;\n        if (this.is_confirmed && this.last_location) common.routeTo(this.last_location.pathname);\n    }\n}\n","export type TContractStage = 0 | 1 | 2 | 3 | 4 | 5 | 6;\n\nexport const contract_stages = Object.freeze({\n    NOT_RUNNING: 0,\n    STARTING: 1,\n    RUNNING: 2,\n    PURCHASE_SENT: 3,\n    PURCHASE_RECEIVED: 4,\n    IS_STOPPING: 5,\n    CONTRACT_CLOSED: 6,\n});\n","export const run_panel = Object.freeze({\n    SUMMARY: 0,\n    TRANSACTIONS: 1,\n    JOURNAL: 2,\n});\n","import { platform_name } from '@deriv/shared';\nimport { TNotificationMessage } from '@deriv/stores/types';\nimport { localize } from '@deriv/translations';\n\nexport const switch_account_notification = {\n    key: 'bot_switch_account',\n    header: localize('You have switched accounts.'),\n    message: localize(\n        'Our system will finish any Deriv Bot trades that are running, and Deriv Bot will not place any new trades.'\n    ),\n    type: 'warning',\n    is_persistent: true,\n};\n\nexport const journalError = (onClick: () => void): TNotificationMessage => {\n    return {\n        key: 'bot_error',\n        header: localize('The bot encountered an error while running.'),\n        action: {\n            text: localize('View in Journal'),\n            onClick,\n        },\n        type: 'danger',\n        platform: platform_name.DBot,\n        is_disposable: true,\n    };\n};\n","import React from 'react';\nimport { Localize } from '@deriv/translations';\n\nexport const helpers = {\n    keep_current_contract: (\n        <Localize\n            i18n_default_text='Would you like to keep your current contract or close it? If you decide to keep it running, you can check and close it later on the <0>Reports</0> page.'\n            components={[\n                <a key={0} className='link' rel='noopener noreferrer' target='_blank' href='/reports/positions' />,\n            ]}\n        />\n    ),\n};\n","import { action, computed, makeObservable, observable, reaction, runInAction } from 'mobx';\nimport { Buy, ProposalOpenContract } from '@deriv/api-types';\nimport { ErrorTypes, MessageTypes, observer, unrecoverable_errors } from '@deriv/bot-skeleton';\nimport { isSafari, mobileOSDetect, routes } from '@deriv/shared';\nimport { TStores } from '@deriv/stores/types';\nimport { localize } from '@deriv/translations';\nimport { botNotification } from 'Components/bot-notification/bot-notification';\nimport { notification_message } from 'Components/bot-notification/bot-notification-utils';\nimport { contract_stages, TContractStage } from 'Constants/contract-stage';\nimport { run_panel } from 'Constants/run-panel';\nimport { journalError, switch_account_notification } from 'Utils/bot-notifications';\nimport GTM from 'Utils/gtm';\nimport { helpers } from 'Utils/store-helpers';\nimport { TDbot } from 'Types';\nimport RootStore from './root-store';\nimport { getSelectedTradeType } from '@deriv/bot-skeleton/src/scratch/utils';\n\nexport type TContractState = {\n    buy?: Buy;\n    contract?: ProposalOpenContract;\n    data: number;\n    id: string;\n};\n\nexport default class RunPanelStore {\n    root_store: RootStore;\n    dbot: TDbot;\n    core: TStores;\n    disposeReactionsFn: () => void;\n    timer: NodeJS.Timeout | null;\n\n    constructor(root_store: RootStore, core: TStores) {\n        makeObservable(this, {\n            active_index: observable,\n            contract_stage: observable,\n            dialog_options: observable,\n            has_open_contract: observable,\n            is_running: observable,\n            is_statistics_info_modal_open: observable,\n            is_drawer_open: observable,\n            is_dialog_open: observable,\n            is_sell_requested: observable,\n            run_id: observable,\n            error_type: observable,\n            show_bot_stop_message: observable,\n            is_stop_button_visible: computed,\n            is_stop_button_disabled: computed,\n            is_clear_stat_disabled: computed,\n            toggleDrawer: action,\n            onBotSellEvent: action,\n            setContractStage: action,\n            setHasOpenContract: action,\n            setIsRunning: action,\n            onRunButtonClick: action,\n            is_contracy_buying_in_progress: observable,\n            OpenPositionLimitExceededEvent: action,\n            onStopButtonClick: action,\n            onClearStatClick: action,\n            clearStat: action,\n            toggleStatisticsInfoModal: action,\n            setActiveTabIndex: action,\n            onCloseDialog: action,\n            stopMyBot: action,\n            closeMultiplierContract: action,\n            showStopMultiplierContractDialog: action,\n            showLoginDialog: action,\n            showRealAccountDialog: action,\n            showClearStatDialog: action,\n            showIncompatibleStrategyDialog: action,\n            showContractUpdateErrorDialog: action,\n            registerBotListeners: action,\n            registerReactions: action,\n            onBotRunningEvent: action,\n            onBotStopEvent: action,\n            onBotReadyEvent: action,\n            onBotTradeAgain: action,\n            onContractStatusEvent: action,\n            onClickSell: action,\n            clear: action,\n            onBotContractEvent: action,\n            onError: action,\n            showErrorMessage: action,\n            switchToJournal: action,\n            unregisterBotListeners: action,\n            handleInvalidToken: action,\n            preloadAudio: action,\n            onMount: action,\n            onUnmount: action,\n        });\n\n        this.root_store = root_store;\n        this.dbot = this.root_store.dbot;\n        this.core = core;\n        this.disposeReactionsFn = this.registerReactions();\n        this.timer = null;\n    }\n\n    active_index = 0;\n    contract_stage: TContractStage = contract_stages.NOT_RUNNING;\n    dialog_options = {};\n    has_open_contract = false;\n    is_running = false;\n    is_statistics_info_modal_open = false;\n    is_drawer_open = true;\n    is_dialog_open = false;\n    is_sell_requested = false;\n    show_bot_stop_message = false;\n    is_contracy_buying_in_progress = false;\n\n    run_id = '';\n    onOkButtonClick: (() => void) | null = null;\n    onCancelButtonClick: (() => void) | null = null;\n\n    // when error happens, if it is unrecoverable_errors we reset run-panel\n    // we activate run-button and clear trade info and set the ContractStage to NOT_RUNNING\n    // otherwise we keep opening new contracts and set the ContractStage to PURCHASE_SENT\n    error_type: ErrorTypes | undefined = undefined;\n\n    get is_stop_button_visible() {\n        return this.is_running || this.has_open_contract;\n    }\n\n    get is_stop_button_disabled() {\n        if (this.is_contracy_buying_in_progress) {\n            return false;\n        }\n        return [contract_stages.PURCHASE_SENT as number, contract_stages.IS_STOPPING as number].includes(\n            this.contract_stage\n        );\n    }\n\n    get is_clear_stat_disabled() {\n        const { journal, transactions } = this.root_store;\n\n        return (\n            this.is_running ||\n            this.has_open_contract ||\n            (journal.unfiltered_messages.length === 0 && transactions?.transactions?.length === 0)\n        );\n    }\n\n    setShowBotStopMessage = (show_bot_stop_message: boolean) => {\n        this.show_bot_stop_message = show_bot_stop_message;\n        if (show_bot_stop_message)\n            botNotification(notification_message.bot_stop, {\n                label: localize('Reports'),\n                onClick: () => {\n                    const contract_type = getSelectedTradeType();\n\n                    const url = new URL(routes.positions, window.location.origin);\n                    url.searchParams.set('contract_type_bots', contract_type);\n\n                    window.location.href = url.toString();\n                },\n            });\n    };\n\n    performSelfExclusionCheck = async () => {\n        const { self_exclusion } = this.root_store;\n        await self_exclusion.checkRestriction();\n    };\n\n    onRunButtonClick = async () => {\n        let timer_counter = 1;\n        if (window.sendRequestsStatistic) {\n            performance.clearMeasures();\n            // Log is sent every 10 seconds for 5 minutes\n            this.timer = setInterval(() => {\n                window.sendRequestsStatistic(true);\n                performance.clearMeasures();\n                if (timer_counter === 12) {\n                    clearInterval(this.timer as NodeJS.Timeout);\n                } else {\n                    timer_counter++;\n                }\n            }, 10000);\n        }\n        const { summary_card, route_prompt_dialog, self_exclusion } = this.root_store;\n        const { client, ui } = this.core;\n        const is_ios = mobileOSDetect() === 'iOS';\n        this.dbot.saveRecentWorkspace();\n        this.dbot.unHighlightAllBlocks();\n        if (!client.is_logged_in) {\n            this.showLoginDialog();\n            return;\n        }\n\n        /**\n         * Due to Apple's policy on cellular data usage in ios audioElement.play() should be initially called on\n         * user action(e.g click/touch) to be downloaded, otherwise throws an error. Also it should be called\n         * syncronously, so keep above await.\n         */\n        if (is_ios || isSafari()) this.preloadAudio();\n\n        if (!self_exclusion.should_bot_run) {\n            self_exclusion.setIsRestricted(true);\n            return;\n        }\n        self_exclusion.setIsRestricted(false);\n\n        this.registerBotListeners();\n\n        if (!this.dbot.shouldRunBot()) {\n            this.unregisterBotListeners();\n            return;\n        }\n\n        ui.setAccountSwitcherDisabledMessage(\n            localize(\n                'Account switching is disabled while your bot is running. Please stop your bot before switching accounts.'\n            )\n        );\n        runInAction(() => {\n            this.setIsRunning(true);\n            ui.setPromptHandler(true, route_prompt_dialog.shouldNavigateAfterPrompt);\n            this.toggleDrawer(true);\n            this.run_id = `run-${Date.now()}`;\n\n            summary_card.clear();\n            this.setContractStage(contract_stages.STARTING);\n            this.dbot.runBot();\n        });\n        this.setShowBotStopMessage(false);\n    };\n\n    onStopButtonClick = () => {\n        this.is_contracy_buying_in_progress = false;\n        const { is_multiplier } = this.root_store.summary_card;\n\n        if (is_multiplier) {\n            this.showStopMultiplierContractDialog();\n        } else {\n            this.stopBot();\n        }\n    };\n\n    onStopBotClick = () => {\n        const { is_multiplier } = this.root_store.summary_card;\n        const { summary_card } = this.root_store;\n\n        if (is_multiplier) {\n            this.showStopMultiplierContractDialog();\n        } else {\n            this.stopBot();\n            summary_card.clear();\n            this.setShowBotStopMessage(true);\n        }\n    };\n\n    stopBot = () => {\n        const { ui } = this.core;\n\n        this.dbot.stopBot();\n\n        ui.setPromptHandler(false);\n\n        if (this.error_type) {\n            // when user click stop button when there is a error but bot is retrying\n            this.setContractStage(contract_stages.NOT_RUNNING);\n            ui.setAccountSwitcherDisabledMessage();\n            this.setIsRunning(false);\n        } else if (this.has_open_contract) {\n            // when user click stop button when bot is running\n            this.setContractStage(contract_stages.IS_STOPPING);\n        } else {\n            // when user click stop button before bot start running\n            this.setContractStage(contract_stages.NOT_RUNNING);\n            this.unregisterBotListeners();\n            ui.setAccountSwitcherDisabledMessage();\n            this.setIsRunning(false);\n        }\n\n        if (this.error_type) {\n            this.error_type = undefined;\n        }\n\n        if (this.timer) {\n            clearInterval(this.timer);\n        }\n        if (window.sendRequestsStatistic) {\n            window.sendRequestsStatistic(true);\n            performance.clearMeasures();\n        }\n    };\n\n    onClearStatClick = () => {\n        this.showClearStatDialog();\n    };\n\n    clearStat = () => {\n        const { summary_card, journal, transactions } = this.root_store;\n\n        this.setIsRunning(false);\n        this.setHasOpenContract(false);\n        this.clear();\n        journal.clear();\n        summary_card.clear();\n        transactions.clear();\n        this.setContractStage(contract_stages.NOT_RUNNING);\n    };\n\n    toggleStatisticsInfoModal = () => {\n        this.is_statistics_info_modal_open = !this.is_statistics_info_modal_open;\n    };\n\n    toggleDrawer = (is_open: boolean) => {\n        this.is_drawer_open = is_open;\n    };\n\n    setActiveTabIndex = (index: number) => {\n        this.active_index = index;\n    };\n\n    onCloseDialog = () => {\n        this.is_dialog_open = false;\n    };\n\n    stopMyBot = () => {\n        const { summary_card, quick_strategy } = this.root_store;\n        const { ui } = this.core;\n        const { toggleStopBotDialog } = quick_strategy;\n\n        ui.setPromptHandler(false);\n        this.dbot.terminateBot();\n        this.onCloseDialog();\n        summary_card.clear();\n        toggleStopBotDialog();\n        if (this.timer) {\n            clearInterval(this.timer);\n        }\n        if (window.sendRequestsStatistic) {\n            window.sendRequestsStatistic(true);\n            performance.clearMeasures();\n        }\n    };\n\n    closeMultiplierContract = () => {\n        const { quick_strategy } = this.root_store;\n        const { toggleStopBotDialog } = quick_strategy;\n\n        this.onClickSell();\n        this.stopBot();\n        this.onCloseDialog();\n        toggleStopBotDialog();\n    };\n\n    showStopMultiplierContractDialog = () => {\n        const { summary_card } = this.root_store;\n        const { ui } = this.core;\n\n        this.onOkButtonClick = () => {\n            ui.setPromptHandler(false);\n            this.dbot.terminateBot();\n            if (this.timer) {\n                clearInterval(this.timer);\n            }\n            if (window.sendRequestsStatistic) {\n                window.sendRequestsStatistic(true);\n                performance.clearMeasures();\n            }\n            this.onCloseDialog();\n            summary_card.clear();\n        };\n        this.onCancelButtonClick = () => {\n            this.onClickSell();\n            this.stopBot();\n            this.onCloseDialog();\n        };\n        this.dialog_options = {\n            title: localize('Keep your current contract?'),\n            message: helpers.keep_current_contract,\n            ok_button_text: localize('Keep my contract'),\n            cancel_button_text: localize('Close my contract'),\n        };\n        this.is_dialog_open = true;\n    };\n\n    showLoginDialog = () => {\n        this.onOkButtonClick = this.onCloseDialog;\n        this.onCancelButtonClick = null;\n        this.dialog_options = {\n            title: localize('Please log in'),\n            message: localize('You need to log in to run the bot.'),\n        };\n        this.is_dialog_open = true;\n    };\n\n    showRealAccountDialog = () => {\n        this.onOkButtonClick = this.onCloseDialog;\n        this.onCancelButtonClick = null;\n        this.dialog_options = {\n            title: localize(\"Deriv Bot isn't quite ready for real accounts\"),\n            message: localize('Please switch to your demo account to run your Deriv Bot.'),\n        };\n        this.is_dialog_open = true;\n    };\n\n    showClearStatDialog = () => {\n        this.onOkButtonClick = () => {\n            this.clearStat();\n            this.onCloseDialog();\n        };\n        this.onCancelButtonClick = this.onCloseDialog;\n        this.dialog_options = {\n            title: localize('Are you sure?'),\n            message: localize(\n                'This will clear all data in the summary, transactions, and journal panels. All counters will be reset to zero.'\n            ),\n        };\n        this.is_dialog_open = true;\n    };\n\n    showIncompatibleStrategyDialog = () => {\n        this.onOkButtonClick = this.onCloseDialog;\n        this.onCancelButtonClick = null;\n        this.dialog_options = {\n            title: localize('Import error'),\n            message: localize('This strategy is currently not compatible with Deriv Bot.'),\n        };\n        this.is_dialog_open = true;\n    };\n\n    showContractUpdateErrorDialog = (message?: string) => {\n        this.onOkButtonClick = this.onCloseDialog;\n        this.onCancelButtonClick = null;\n        this.dialog_options = {\n            title: localize('Contract Update Error'),\n            message,\n        };\n        this.is_dialog_open = true;\n    };\n\n    registerBotListeners = () => {\n        const { summary_card, transactions } = this.root_store;\n\n        observer.register('bot.running', this.onBotRunningEvent);\n        observer.register('bot.sell', this.onBotSellEvent);\n        observer.register('bot.stop', this.onBotStopEvent);\n        observer.register('bot.bot_ready', this.onBotReadyEvent);\n        observer.register('bot.click_stop', this.onStopButtonClick);\n        observer.register('bot.trade_again', this.onBotTradeAgain);\n        observer.register('contract.status', this.onContractStatusEvent);\n        observer.register('bot.contract', this.onBotContractEvent);\n        observer.register('bot.contract', summary_card.onBotContractEvent);\n        observer.register('bot.contract', transactions.onBotContractEvent);\n        observer.register('Error', this.onError);\n        observer.register('bot.recoverOpenPositionLimitExceeded', this.OpenPositionLimitExceededEvent);\n    };\n\n    OpenPositionLimitExceededEvent = () => (this.is_contracy_buying_in_progress = true);\n\n    registerReactions = () => {\n        const { client, common, notifications } = this.core;\n        let disposeIsSocketOpenedListener: (() => void) | undefined, disposeLogoutListener: (() => void) | undefined;\n\n        const registerIsSocketOpenedListener = () => {\n            if (common.is_socket_opened) {\n                disposeIsSocketOpenedListener = reaction(\n                    () => client.loginid,\n                    loginid => {\n                        if (loginid && this.is_running) {\n                            notifications.addNotificationMessage(switch_account_notification);\n                        }\n                        this.dbot.terminateBot();\n                        this.unregisterBotListeners();\n                    }\n                );\n            } else if (typeof disposeLogoutListener === 'function') {\n                disposeLogoutListener();\n            }\n        };\n\n        registerIsSocketOpenedListener();\n\n        disposeLogoutListener = reaction(\n            () => common.is_socket_opened,\n            () => registerIsSocketOpenedListener()\n        );\n\n        const disposeStopBotListener = reaction(\n            () => !this.is_running,\n            () => {\n                if (!this.is_running) this.setContractStage(contract_stages.NOT_RUNNING);\n            }\n        );\n\n        return () => {\n            if (typeof disposeIsSocketOpenedListener === 'function') {\n                disposeIsSocketOpenedListener();\n            }\n\n            if (typeof disposeLogoutListener === 'function') {\n                disposeLogoutListener();\n            }\n\n            if (typeof disposeStopBotListener === 'function') {\n                disposeStopBotListener();\n            }\n        };\n    };\n\n    onBotRunningEvent = () => {\n        this.setHasOpenContract(true);\n\n        // prevent new version update\n        const ignore_new_version = new Event('IgnorePWAUpdate');\n        document.dispatchEvent(ignore_new_version);\n        const { self_exclusion } = this.root_store;\n\n        if (self_exclusion.should_bot_run && self_exclusion.run_limit !== -1) {\n            self_exclusion.run_limit -= 1;\n            if (self_exclusion.run_limit < 0) {\n                this.onStopButtonClick();\n            }\n        }\n    };\n\n    onBotSellEvent = () => {\n        this.is_sell_requested = true;\n    };\n\n    onBotStopEvent = () => {\n        const { self_exclusion, summary_card } = this.root_store;\n        const { ui } = this.core;\n        const indicateBotStopped = () => {\n            this.error_type = undefined;\n            this.setContractStage(contract_stages.NOT_RUNNING);\n            ui.setAccountSwitcherDisabledMessage();\n            this.unregisterBotListeners();\n            self_exclusion.resetSelfExclusion();\n        };\n        if (this.error_type === ErrorTypes.RECOVERABLE_ERRORS) {\n            // Bot should indicate it started in below cases:\n            // - When error happens it's a recoverable error\n            const trade_engine_options = this.dbot?.interpreter?.bot?.tradeEngine?.options;\n            if (trade_engine_options) {\n                const { shouldRestartOnError, timeMachineEnabled } = trade_engine_options;\n                const is_bot_recoverable = shouldRestartOnError || timeMachineEnabled;\n\n                if (is_bot_recoverable) {\n                    this.error_type = undefined;\n                    this.setContractStage(contract_stages.PURCHASE_SENT);\n                } else {\n                    this.setIsRunning(false);\n                    indicateBotStopped();\n                }\n            }\n        } else if (this.error_type === ErrorTypes.UNRECOVERABLE_ERRORS) {\n            // Bot should indicate it stopped in below cases:\n            // - When error happens and it's an unrecoverable error\n            this.setIsRunning(false);\n            indicateBotStopped();\n        } else if (this.has_open_contract) {\n            // Bot should indicate the contract is closed in below cases:\n            // - When bot was running and an error happens\n            this.error_type = undefined;\n            this.is_sell_requested = false;\n            this.setContractStage(contract_stages.CONTRACT_CLOSED);\n            ui.setAccountSwitcherDisabledMessage();\n            this.unregisterBotListeners();\n            self_exclusion.resetSelfExclusion();\n        }\n\n        this.setHasOpenContract(false);\n\n        summary_card.clearContractUpdateConfigValues();\n\n        // listen for new version update\n        const listen_new_version = new Event('ListenPWAUpdate');\n        document.dispatchEvent(listen_new_version);\n    };\n\n    onBotReadyEvent = () => {\n        this.setIsRunning(false);\n        observer.unregisterAll('bot.bot_ready');\n    };\n\n    onBotTradeAgain = (is_trade_again: boolean) => {\n        if (!is_trade_again) {\n            this.stopBot();\n        }\n    };\n\n    onContractStatusEvent = (contract_status: TContractState) => {\n        switch (contract_status.id) {\n            case 'contract.purchase_sent': {\n                this.setContractStage(contract_stages.PURCHASE_SENT);\n                break;\n            }\n            case 'contract.purchase_received': {\n                this.is_contracy_buying_in_progress = false;\n                this.setContractStage(contract_stages.PURCHASE_RECEIVED);\n                const { buy } = contract_status;\n                const { is_virtual } = this.core.client;\n\n                if (!is_virtual && buy) {\n                    this.core.gtm.pushDataLayer({ event: 'dbot_purchase', buy_price: buy.buy_price });\n                }\n\n                break;\n            }\n            case 'contract.sold': {\n                this.is_sell_requested = false;\n                this.setContractStage(contract_stages.CONTRACT_CLOSED);\n                if (contract_status.contract) GTM.onTransactionClosed(contract_status.contract);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClickSell = () => {\n        const { is_multiplier } = this.root_store.summary_card;\n\n        if (is_multiplier) {\n            this.setContractStage(contract_stages.IS_STOPPING);\n        }\n\n        this.dbot.interpreter.bot.getInterface().sellAtMarket();\n    };\n\n    clear = () => {\n        observer.emit('statistics.clear');\n    };\n\n    onBotContractEvent = (data: { is_sold?: boolean }) => {\n        if (data?.is_sold) {\n            this.is_sell_requested = false;\n            this.setContractStage(contract_stages.CONTRACT_CLOSED);\n        }\n    };\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    onError = (data: { error: any }) => {\n        // data.error for API errors, data for code errors\n        const error = data.error || data;\n        if (unrecoverable_errors.includes(error.code)) {\n            this.root_store.summary_card.clear();\n            this.error_type = ErrorTypes.UNRECOVERABLE_ERRORS;\n        } else {\n            this.error_type = ErrorTypes.RECOVERABLE_ERRORS;\n        }\n\n        const error_message = error?.message;\n        this.showErrorMessage(error_message);\n    };\n\n    showErrorMessage = (data: string | Error) => {\n        const { journal } = this.root_store;\n        const { notifications, ui } = this.core;\n        journal.onError(data);\n        if (journal.journal_filters.some(filter => filter === MessageTypes.ERROR)) {\n            this.toggleDrawer(true);\n            this.setActiveTabIndex(run_panel.JOURNAL);\n            ui.setPromptHandler(false);\n        } else {\n            notifications.addNotificationMessage(journalError(this.switchToJournal));\n            notifications.removeNotificationMessage({ key: 'bot_error' });\n        }\n    };\n\n    switchToJournal = () => {\n        const { journal } = this.root_store;\n        const { notifications } = this.core;\n        journal.journal_filters.push(MessageTypes.ERROR);\n        this.setActiveTabIndex(run_panel.JOURNAL);\n        this.toggleDrawer(true);\n        notifications.toggleNotificationsModal();\n        notifications.removeNotificationByKey({ key: 'bot_error' });\n    };\n\n    unregisterBotListeners = () => {\n        observer.unregisterAll('bot.running');\n        observer.unregisterAll('bot.stop');\n        observer.unregisterAll('bot.click_stop');\n        observer.unregisterAll('bot.trade_again');\n        observer.unregisterAll('contract.status');\n        observer.unregisterAll('bot.contract');\n        observer.unregisterAll('Error');\n    };\n\n    setContractStage = (contract_stage: TContractStage) => {\n        this.contract_stage = contract_stage;\n    };\n\n    setHasOpenContract = (has_open_contract: boolean) => {\n        this.has_open_contract = has_open_contract;\n    };\n\n    setIsRunning = (is_running: boolean) => {\n        this.is_running = is_running;\n    };\n\n    onMount = () => {\n        const { journal } = this.root_store;\n        observer.register('ui.log.error', this.showErrorMessage);\n        observer.register('ui.log.notify', journal.onNotify);\n        observer.register('ui.log.success', journal.onLogSuccess);\n        observer.register('client.invalid_token', this.handleInvalidToken);\n    };\n\n    onUnmount = () => {\n        const { journal, summary_card, transactions } = this.root_store;\n\n        if (!this.is_running) {\n            this.unregisterBotListeners();\n            this.disposeReactionsFn();\n            journal.disposeReactionsFn();\n            summary_card.disposeReactionsFn();\n            transactions.disposeReactionsFn();\n        }\n\n        observer.unregisterAll('ui.log.error');\n        observer.unregisterAll('ui.log.notify');\n        observer.unregisterAll('ui.log.success');\n        observer.unregisterAll('client.invalid_token');\n    };\n\n    handleInvalidToken = async () => {\n        const { client } = this.core;\n        await client.logout();\n        this.setActiveTabIndex(run_panel.SUMMARY);\n    };\n\n    preloadAudio = () => {\n        const strategy_sounds = this.dbot.getStrategySounds() as string[];\n\n        strategy_sounds.forEach((sound: string) => {\n            const audioElement = document.getElementById(sound) as HTMLAudioElement | null;\n            if (!audioElement) return;\n            audioElement.muted = true;\n            audioElement.play().catch(() => {\n                // suppressing abort error, thrown on immediate .pause()\n            });\n            audioElement.pause();\n            audioElement.muted = false;\n        });\n    };\n}\n","import localForage from 'localforage';\nimport LZString from 'lz-string';\nimport { action, makeObservable, observable } from 'mobx';\nimport {\n    getSavedWorkspaces,\n    observer as globalObserver,\n    save,\n    save_types,\n    saveWorkspaceToRecent,\n} from '@deriv/bot-skeleton';\nimport { localize } from '@deriv/translations';\nimport { MAX_STRATEGIES } from 'Constants/bot-contents';\nimport { button_status } from 'Constants/button-status';\nimport { TStrategy } from 'Types';\nimport RootStore from './root-store';\n\ntype IOnConfirmProps = {\n    is_local: boolean;\n    save_as_collection: boolean;\n    bot_name: string;\n};\n\ninterface ISaveModalStore {\n    is_save_modal_open: boolean;\n    button_status: { [key: string]: string } | number;\n    bot_name: { [key: string]: string } | string;\n    toggleSaveModal: () => void;\n    validateBotName: (values: string) => { [key: string]: string };\n    onConfirmSave: ({ is_local, save_as_collection, bot_name }: IOnConfirmProps) => void;\n    updateBotName: (bot_name: string) => void;\n    setButtonStatus: (status: { [key: string]: string } | string | number) => void;\n}\nexport default class SaveModalStore implements ISaveModalStore {\n    root_store: RootStore;\n\n    constructor(root_store: RootStore) {\n        makeObservable(this, {\n            is_save_modal_open: observable,\n            button_status: observable,\n            bot_name: observable,\n            toggleSaveModal: action.bound,\n            validateBotName: action.bound,\n            onConfirmSave: action.bound,\n            updateBotName: action.bound,\n            setButtonStatus: action.bound,\n        });\n\n        this.root_store = root_store;\n    }\n    is_save_modal_open = false;\n    button_status = button_status.NORMAL;\n    bot_name = '';\n\n    toggleSaveModal = (): void => {\n        if (!this.is_save_modal_open) {\n            this.setButtonStatus(button_status.NORMAL);\n        }\n\n        this.is_save_modal_open = !this.is_save_modal_open;\n    };\n\n    validateBotName = (values: string): { [key: string]: string } => {\n        const errors = {};\n\n        if (values.bot_name.trim() === '') {\n            errors.bot_name = localize('Strategy name cannot be empty');\n        }\n\n        return errors;\n    };\n\n    addStrategyToWorkspace = async (\n        workspace_id: string,\n        is_local: boolean,\n        save_as_collection: boolean,\n        bot_name: string,\n        xml: string\n    ) => {\n        try {\n            const workspace = await getSavedWorkspaces();\n            const current_workspace_index = workspace.findIndex((strategy: TStrategy) => strategy.id === workspace_id);\n            const {\n                load_modal: { getSaveType },\n            } = this.root_store;\n            const local_type = is_local ? save_types.LOCAL : save_types.GOOGLE_DRIVE;\n            const save_collection = save_as_collection ? save_types.UNSAVED : local_type;\n            const type = save_collection;\n\n            const save_type = getSaveType(type)?.toLowerCase();\n\n            const workspace_structure = {\n                id: workspace_id,\n                xml: window.Blockly.Xml.domToText(xml),\n                name: bot_name,\n                timestamp: Date.now(),\n                save_type,\n            };\n\n            if (current_workspace_index >= 0) {\n                const current_workspace = workspace_structure;\n                workspace[current_workspace_index] = current_workspace;\n            } else {\n                workspace.push(workspace_structure);\n            }\n\n            workspace\n                .sort((a: TStrategy, b: TStrategy) => {\n                    return new Date(a.timestamp) - new Date(b.timestamp);\n                })\n                .reverse();\n\n            if (workspace.length > MAX_STRATEGIES) {\n                workspace.pop();\n            }\n            const { load_modal } = this.root_store;\n            const { setRecentStrategies } = load_modal;\n            localForage.setItem('saved_workspaces', LZString.compress(JSON.stringify(workspace)));\n            const updated_strategies = await getSavedWorkspaces();\n            setRecentStrategies(updated_strategies);\n            const {\n                dashboard: { setStrategySaveType },\n            } = this.root_store;\n            setStrategySaveType(save_type);\n        } catch (error) {\n            globalObserver.emit('Error', error);\n        }\n    };\n\n    onConfirmSave = async ({ is_local, save_as_collection, bot_name }: IOnConfirmProps) => {\n        const { load_modal, dashboard, google_drive } = this.root_store;\n        const { loadStrategyToBuilder, selected_strategy } = load_modal;\n        const { active_tab } = dashboard;\n        this.setButtonStatus(button_status.LOADING);\n        const { saveFile } = google_drive;\n        let xml;\n        let main_strategy = null;\n        if (active_tab === 1) {\n            xml = window.Blockly?.Xml?.workspaceToDom(window.Blockly?.derivWorkspace);\n        } else {\n            const recent_files = await getSavedWorkspaces();\n            main_strategy = recent_files.filter((strategy: TStrategy) => strategy.id === selected_strategy.id)?.[0];\n            main_strategy.name = bot_name;\n            main_strategy.save_type = is_local ? save_types.LOCAL : save_types.GOOGLE_DRIVE;\n            xml = window.Blockly.utils.xml.textToDom(main_strategy.xml);\n        }\n        xml.setAttribute('is_dbot', 'true');\n        xml.setAttribute('collection', save_as_collection ? 'true' : 'false');\n\n        if (is_local) {\n            save(bot_name, save_as_collection, xml);\n        } else {\n            await saveFile({\n                name: bot_name,\n                content: window.Blockly?.Xml?.domToPrettyText(xml),\n                mimeType: 'application/xml',\n            });\n            this.setButtonStatus(button_status.COMPLETED);\n        }\n\n        this.updateBotName(bot_name);\n\n        if (active_tab === 0) {\n            const workspace_id = selected_strategy.id ?? window.Blockly?.utils?.genUid();\n            await this.addStrategyToWorkspace(workspace_id, is_local, save_as_collection, bot_name, xml);\n            if (main_strategy) await loadStrategyToBuilder(main_strategy);\n        } else {\n            await saveWorkspaceToRecent(xml, is_local ? save_types.LOCAL : save_types.GOOGLE_DRIVE);\n        }\n        this.toggleSaveModal();\n    };\n\n    updateBotName = (bot_name: string): void => {\n        this.bot_name = bot_name;\n    };\n\n    setButtonStatus = (status: { [key: string]: string } | string | number) => {\n        this.button_status = status;\n    };\n}\n","import { action, computed, makeObservable, observable } from 'mobx';\nimport { TStores } from '@deriv/stores/types';\nimport RootStore from './root-store';\n\nexport default class SelfExclusionStore {\n    root_store: RootStore;\n    core: TStores;\n    constructor(root_store: RootStore, core: TStores) {\n        makeObservable(this, {\n            api_max_losses: observable,\n            run_limit: observable,\n            is_restricted: observable,\n            initial_values: computed,\n            should_bot_run: computed,\n            setIsRestricted: action.bound,\n            setApiMaxLosses: action.bound,\n            setRunLimit: action.bound,\n            resetSelfExclusion: action.bound,\n            checkRestriction: action.bound,\n        });\n\n        this.root_store = root_store;\n        this.core = core;\n    }\n\n    api_max_losses = 0;\n    run_limit = -1;\n    is_restricted = false;\n    form_max_losses: number | undefined = undefined;\n    get initial_values() {\n        return {\n            form_max_losses: this.api_max_losses || '',\n            run_limit: this.run_limit !== -1 ? this.run_limit : '',\n        };\n    }\n\n    get should_bot_run() {\n        const { client } = this.core;\n        if (client.is_eu && !client.is_virtual && (this.api_max_losses === 0 || this.run_limit === -1)) {\n            return false;\n        }\n        return true;\n    }\n\n    setIsRestricted(is_restricted: boolean) {\n        this.is_restricted = is_restricted;\n    }\n\n    setApiMaxLosses(api_max_losses: number) {\n        this.api_max_losses = api_max_losses;\n    }\n\n    setRunLimit(run_limit: number) {\n        this.run_limit = run_limit;\n    }\n\n    resetSelfExclusion() {\n        this.is_restricted = false;\n        this.api_max_losses = 0;\n        this.form_max_losses = 0;\n        this.run_limit = -1;\n    }\n\n    async checkRestriction() {\n        const { client } = this.core;\n        await client.getSelfExclusion();\n        if (client.self_exclusion.max_losses) {\n            this.setApiMaxLosses(client.self_exclusion.max_losses);\n        }\n    }\n}\n","import { getTotalProfit, TContractStore } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\n\nexport type TContract = {\n    name: string;\n    position: string;\n};\n\nexport type TContractType =\n    | 'ACCU'\n    | 'ASIANU'\n    | 'ASIAND'\n    | 'CALL'\n    | 'PUT'\n    | 'CALLE'\n    | 'PUTE'\n    | 'CALLSPREAD'\n    | 'PUTSPREAD'\n    | 'DIGITMATCH'\n    | 'DIGITDIFF'\n    | 'DIGITEVEN'\n    | 'DIGITODD'\n    | 'DIGITOVER'\n    | 'DIGITUNDER'\n    | 'EXPIRYMISS'\n    | 'EXPIRYRANGE'\n    | 'LBFLOATCALL'\n    | 'LBFLOATPUT'\n    | 'LBHIGHLOW'\n    | 'MULTUP'\n    | 'MULTDOWN'\n    | 'ONETOUCH'\n    | 'NOTOUCH'\n    | 'RANGE'\n    | 'UPORDOWN'\n    | 'RESETCALL'\n    | 'RESETPUT'\n    | 'RUNHIGH'\n    | 'RUNLOW'\n    | 'TICKHIGH'\n    | 'TICKLOW';\n\ntype TSupportedContracts = {\n    [key in TContractType]: TContract;\n};\n\nexport const getSupportedContracts = (is_high_low: boolean): TSupportedContracts => ({\n    ACCU: {\n        name: localize('Accumulators'),\n        position: 'top',\n    },\n    ASIANU: {\n        name: localize('Asian Up'),\n        position: 'top',\n    },\n    ASIAND: {\n        name: localize('Asian Down'),\n        position: 'bottom',\n    },\n    CALL: {\n        name: is_high_low ? localize('Higher') : localize('Rise'),\n        position: 'top',\n    },\n    PUT: {\n        name: is_high_low ? localize('Lower') : localize('Fall'),\n        position: 'bottom',\n    },\n    CALLE: {\n        name: localize('Rise'),\n        position: 'top',\n    },\n    PUTE: {\n        name: localize('Fall'),\n        position: 'bottom',\n    },\n    CALLSPREAD: {\n        name: localize('Spread Up'),\n        position: 'top',\n    },\n    PUTSPREAD: {\n        name: localize('Spread Down'),\n        position: 'bottom',\n    },\n    DIGITMATCH: {\n        name: localize('Matches'),\n        position: 'top',\n    },\n    DIGITDIFF: {\n        name: localize('Differs'),\n        position: 'bottom',\n    },\n    DIGITEVEN: {\n        name: localize('Even'),\n        position: 'top',\n    },\n    DIGITODD: {\n        name: localize('Odd'),\n        position: 'bottom',\n    },\n    DIGITOVER: {\n        name: localize('Over'),\n        position: 'top',\n    },\n    DIGITUNDER: {\n        name: localize('Under'),\n        position: 'bottom',\n    },\n    EXPIRYMISS: {\n        name: localize('Ends Outside'),\n        position: 'top',\n    },\n    EXPIRYRANGE: {\n        name: localize('Ends Between'),\n        position: 'bottom',\n    },\n    LBFLOATCALL: {\n        name: localize('Close-to-Low'),\n        position: 'top',\n    },\n    LBFLOATPUT: {\n        name: localize('High-to-Close'),\n        position: 'top',\n    },\n    LBHIGHLOW: {\n        name: localize('High-to-Low'),\n        position: 'top',\n    },\n    MULTUP: {\n        name: localize('Up'),\n        position: 'top',\n    },\n    MULTDOWN: {\n        name: localize('Down'),\n        position: 'bottom',\n    },\n    ONETOUCH: {\n        name: localize('Touch'),\n        position: 'top',\n    },\n    NOTOUCH: {\n        name: localize('No Touch'),\n        position: 'bottom',\n    },\n    RANGE: {\n        name: localize('Stays Between'),\n        position: 'top',\n    },\n    UPORDOWN: {\n        name: localize('Goes Outside'),\n        position: 'bottom',\n    },\n    RESETCALL: {\n        name: localize('Reset Call'),\n        position: 'top',\n    },\n    RESETPUT: {\n        name: localize('Reset Put'),\n        position: 'bottom',\n    },\n    RUNHIGH: {\n        name: localize('Only Ups'),\n        position: 'top',\n    },\n    RUNLOW: {\n        name: localize('Only Downs'),\n        position: 'bottom',\n    },\n    TICKHIGH: {\n        name: localize('High Tick'),\n        position: 'top',\n    },\n    TICKLOW: {\n        name: localize('Low Tick'),\n        position: 'bottom',\n    },\n});\n\nexport const getContractConfig = (is_high_low: boolean) => ({\n    ...getSupportedContracts(is_high_low),\n});\n\nexport const getContractTypeDisplay = (type: TContractType, is_high_low = false) =>\n    getContractConfig(is_high_low)[type]\n        ? getContractConfig(is_high_low)[type.toUpperCase() as TContractType].name\n        : '';\n\nexport type TValidationRuleIndex =\n    | 'has_contract_update_stop_loss'\n    | 'contract_update_stop_loss'\n    | 'has_contract_update_take_profit'\n    | 'contract_update_take_profit';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype ValidationRuleFunc = (value: number, options: any, contract_store: TContractStore) => boolean;\n\ntype ValidationConditionFunc = (contract_store: TContractStore) => boolean;\n\ntype Rule =\n    | [\n          'req',\n          {\n              condition: ValidationConditionFunc;\n              message: string;\n          },\n      ]\n    | [\n          'custom',\n          {\n              func: ValidationRuleFunc;\n              message: string;\n          },\n      ];\n\ntype Rules = {\n    rules: Rule[];\n};\n\ntype Triggers = {\n    trigger: string;\n};\n\nexport type TValidationRules = {\n    has_contract_update_stop_loss: Triggers;\n    has_contract_update_take_profit: Triggers;\n    contract_update_stop_loss: Rules;\n    contract_update_take_profit: Rules;\n};\n\nexport const getValidationRules = (): TValidationRules => ({\n    has_contract_update_stop_loss: {\n        trigger: 'contract_update_stop_loss',\n    },\n    has_contract_update_take_profit: {\n        trigger: 'contract_update_take_profit',\n    },\n    contract_update_stop_loss: {\n        rules: [\n            [\n                'req',\n                {\n                    condition: contract_store => !contract_store.contract_update_stop_loss,\n                    message: localize('Please enter a stop loss amount.'),\n                },\n            ],\n            [\n                'custom',\n                {\n                    func: (value: number, options, contract_store) => {\n                        const profit = getTotalProfit(contract_store.contract_info);\n                        return !(profit < 0 && -value > profit);\n                    },\n                    message: localize(\"Please enter a stop loss amount that's higher than the current potential loss.\"),\n                },\n            ],\n            [\n                'custom',\n                {\n                    func: (value, options, contract_store) => {\n                        const stake = contract_store?.contract_info?.buy_price || 0;\n                        return value < stake + 1;\n                    },\n                    message: localize('Invalid stop loss. Stop loss cannot be more than stake.'),\n                },\n            ],\n        ],\n    },\n    contract_update_take_profit: {\n        rules: [\n            [\n                'req',\n                {\n                    condition: contract_store => !contract_store.contract_update_take_profit,\n                    message: localize('Please enter a take profit amount.'),\n                },\n            ],\n            [\n                'custom',\n                {\n                    func: (value, options, contract_store) => {\n                        const profit = getTotalProfit(contract_store.contract_info);\n                        return !(profit > 0 && +value < profit);\n                    },\n                    message: localize(\n                        \"Please enter a take profit amount that's higher than the current potential profit.\"\n                    ),\n                },\n            ],\n        ],\n    },\n});\n","import { ContractUpdate, ProposalOpenContract } from '@deriv/api-types';\nimport { getLimitOrderAmount } from '@deriv/shared';\n\ntype TContractUpdateConfig = (ContractUpdate & ProposalOpenContract['limit_order']) | undefined;\n/**\n * Set contract update form initial values\n * @param {object} contract_update - contract_update response\n * @param {object} limit_order - proposal_open_contract.limit_order response\n */\nexport const getContractUpdateConfig = (contract_update_config: TContractUpdateConfig) => {\n    const { stop_loss, take_profit } = getLimitOrderAmount(contract_update_config);\n\n    return {\n        // convert stop_loss, take_profit value to string for validation to work\n        contract_update_stop_loss: stop_loss ? Math.abs(stop_loss).toString() : '',\n        contract_update_take_profit: take_profit ? take_profit.toString() : '',\n        has_contract_update_stop_loss: !!stop_loss,\n        has_contract_update_take_profit: !!take_profit,\n    };\n};\n","import { action, computed, makeObservable, observable, reaction } from 'mobx';\nimport { ProposalOpenContract, UpdateContractResponse } from '@deriv/api-types';\nimport {\n    getIndicativePrice,\n    isAccumulatorContract,\n    isEqualObject,\n    isMultiplierContract,\n    Validator,\n} from '@deriv/shared';\nimport { TStores } from '@deriv/stores/types';\nimport { TContractInfo } from 'Components/summary/summary-card.types';\nimport { getValidationRules, TValidationRuleIndex, TValidationRules } from 'Constants/contract';\nimport { contract_stages } from 'Constants/contract-stage';\nimport { getContractUpdateConfig } from 'Utils/multiplier';\nimport RootStore from './root-store';\n\ntype TLimitOrder = {\n    take_profit?: number;\n    stop_loss?: number;\n};\n\ntype TMovements = {\n    profit?: number;\n    indicative?: number;\n};\n\nexport default class SummaryCardStore {\n    root_store: RootStore;\n    core: TStores;\n    disposeReactionsFn: () => void | null;\n    disposeSwitchAcountListener: (() => void | null) | undefined;\n    contract_info: ProposalOpenContract | null = null;\n    is_loading = false;\n    indicative_movement = '';\n    profit_movement = '';\n\n    validation_errors = {};\n    validation_rules: TValidationRules = getValidationRules();\n\n    // Multiplier contract update config\n    contract_update_take_profit?: number | string | null = null;\n    contract_update_stop_loss?: number | string | null = null;\n    has_contract_update_take_profit = false;\n    has_contract_update_stop_loss = false;\n    contract_update_config = {};\n    profit_loss?: number = 0;\n    contract_id?: string | null = null;\n    profit?: number = 0;\n    indicative?: number = 0;\n    is_bot_running?: boolean = false;\n\n    constructor(root_store: RootStore, core: TStores) {\n        makeObservable(this, {\n            contract_info: observable,\n            indicative_movement: observable,\n            profit_movement: observable,\n            validation_errors: observable,\n            validation_rules: observable,\n            contract_update_take_profit: observable,\n            contract_update_stop_loss: observable,\n            has_contract_update_take_profit: observable,\n            has_contract_update_stop_loss: observable,\n            is_bot_running: observable,\n            contract_update_config: observable,\n            contract_id: observable,\n            profit: observable,\n            indicative: observable,\n            is_contract_completed: computed,\n            is_contract_loading: computed,\n            is_contract_inactive: computed,\n            is_multiplier: computed,\n            clear: action.bound,\n            clearContractUpdateConfigValues: action.bound,\n            getLimitOrder: action.bound,\n            onBotContractEvent: action.bound,\n            onChange: action.bound,\n            populateContractUpdateConfig: action.bound,\n            setContractUpdateConfig: action.bound,\n            setIsBotRunning: action.bound,\n            updateLimitOrder: action.bound,\n            setValidationErrorMessages: action,\n            validateProperty: action,\n            registerReactions: action.bound,\n        });\n\n        this.root_store = root_store;\n        this.core = core;\n        this.disposeReactionsFn = this.registerReactions();\n    }\n\n    get is_contract_completed() {\n        return (\n            !!this.contract_info?.is_sold &&\n            this.root_store.run_panel.contract_stage !== contract_stages.PURCHASE_RECEIVED\n        );\n    }\n\n    get is_contract_loading() {\n        return (\n            (this.root_store.run_panel.is_running && this.contract_info === null) ||\n            this.root_store.run_panel.contract_stage === contract_stages.PURCHASE_SENT ||\n            this.root_store.run_panel.contract_stage === contract_stages.STARTING\n        );\n    }\n\n    get is_contract_inactive() {\n        return !this.contract_info && !this.is_loading;\n    }\n\n    get is_multiplier() {\n        return isMultiplierContract(this.contract_info?.contract_type);\n    }\n\n    get is_accumulator() {\n        return isAccumulatorContract(this.contract_info?.contract_type);\n    }\n\n    clear(should_unset_contract = true) {\n        if (should_unset_contract) {\n            this.contract_info = null;\n        }\n\n        this.profit = 0;\n        this.profit_loss = 0;\n        this.indicative = 0;\n        this.indicative_movement = '';\n        this.profit_movement = '';\n    }\n\n    clearContractUpdateConfigValues() {\n        if (this.contract_info) {\n            const {\n                contract_update_stop_loss,\n                contract_update_take_profit,\n                has_contract_update_stop_loss,\n                has_contract_update_take_profit,\n            } = getContractUpdateConfig(this.contract_info.limit_order);\n\n            this.contract_update_stop_loss = contract_update_stop_loss;\n            this.contract_update_take_profit = contract_update_take_profit;\n            this.has_contract_update_stop_loss = has_contract_update_stop_loss;\n            this.has_contract_update_take_profit = has_contract_update_take_profit;\n        }\n    }\n\n    getLimitOrder() {\n        const limit_order: TLimitOrder = {};\n        // send positive take_profit to update or null to cancel\n        limit_order.take_profit = this.has_contract_update_take_profit ? +(this.contract_update_take_profit ?? 0) : 0;\n        // send positive stop_loss to update or null to cancel\n        limit_order.stop_loss = this.has_contract_update_stop_loss ? +(this.contract_update_stop_loss ?? 0) : 0;\n\n        return limit_order;\n    }\n\n    onBotContractEvent(contract: TContractInfo) {\n        const { profit } = contract;\n        const indicative = getIndicativePrice(contract as ProposalOpenContract);\n        this.profit = profit;\n\n        if (this.contract_id !== contract.id) {\n            this.clear(false);\n            this.contract_id = contract.id;\n            this.indicative = indicative;\n        }\n\n        const movements: TMovements = { profit, indicative };\n\n        Object.keys(movements).forEach(name => {\n            const movement = movements[name as keyof TMovements];\n            const current_movement = this[name as keyof TMovements];\n\n            if (name in this && movement && movement !== current_movement) {\n                this[`${name as keyof TMovements}_movement`] =\n                    movement && movement > (this[name as keyof TMovements] || 0) ? 'profit' : 'loss';\n            } else if (this[`${name as keyof TMovements}_movement`] !== '') {\n                this.indicative_movement = '';\n            }\n\n            if (name === 'profit') this.profit_loss = movement;\n            if (name === 'indicative') this.indicative = movement;\n        });\n\n        // TODO only add props that is being used\n        this.contract_info = contract;\n    }\n\n    onChange({ name, value }: { name: TValidationRuleIndex; value: string | boolean }) {\n        this[name] = value;\n        this.validateProperty(name, value);\n    }\n\n    populateContractUpdateConfig(response: UpdateContractResponse) {\n        const contract_update_config = getContractUpdateConfig(response?.contract_update);\n\n        if (!isEqualObject(this.contract_update_config, contract_update_config)) {\n            Object.assign(this, contract_update_config);\n            this.contract_update_config = contract_update_config;\n\n            const { contract_update, error } = response;\n            if (this.contract_info && contract_update && !error) {\n                this.contract_info.limit_order = Object.assign(this.contract_info?.limit_order || {}, contract_update);\n            }\n        }\n    }\n\n    setContractUpdateConfig(contract_update_take_profit?: number | null, contract_update_stop_loss?: number | null) {\n        if (contract_update_take_profit && contract_update_stop_loss) {\n            this.has_contract_update_take_profit = !!contract_update_take_profit;\n            this.has_contract_update_stop_loss = !!contract_update_stop_loss;\n            this.contract_update_take_profit = this.has_contract_update_take_profit\n                ? +contract_update_take_profit\n                : null;\n            this.contract_update_stop_loss = this.has_contract_update_stop_loss ? +contract_update_stop_loss : null;\n        }\n    }\n\n    /**\n     * Sets the bot's running state based on whether the contract is still loading\n     */\n    setIsBotRunning() {\n        if (!this.is_contract_loading) {\n            this.is_bot_running = false;\n            return;\n        }\n\n        const onTimeout = () => {\n            if (this.is_contract_loading) {\n                this.is_bot_running = true;\n                this.root_store.run_panel.setContractStage(contract_stages.RUNNING);\n            }\n        };\n\n        const timeout = setTimeout(onTimeout, 5000);\n        return () => clearTimeout(timeout);\n    }\n\n    updateLimitOrder() {\n        const limit_order = this.getLimitOrder();\n\n        if (this.contract_info?.contract_id) {\n            this.root_store.ws.contractUpdate(this.contract_info?.contract_id, limit_order).then(response => {\n                if (response.error) {\n                    this.root_store.run_panel.showContractUpdateErrorDialog(response.error.message);\n                    return;\n                }\n\n                // Update contract store\n                this.populateContractUpdateConfig(response);\n            });\n        }\n    }\n\n    /**\n     * Sets validation error messages for an observable property of the store\n     *\n     * @param {String} propertyName - The observable property's name\n     * @param [{String}] messages - An array of strings that contains validation error messages for the particular property.\n     *\n     */\n    setValidationErrorMessages(propertyName: TValidationRuleIndex, messages: string) {\n        const is_different = () =>\n            !!this.validation_errors[propertyName]\n                .filter(x => !messages.includes(x))\n                .concat(messages.filter(x => !this.validation_errors[propertyName].includes(x))).length;\n        if (!this.validation_errors[propertyName] || is_different()) {\n            this.validation_errors[propertyName] = messages;\n        }\n    }\n\n    /**\n     * Validates a particular property of the store\n     *\n     * @param {String} property - The name of the property in the store\n     * @param {object} value    - The value of the property, it can be undefined.\n     *\n     */\n    validateProperty(property: TValidationRuleIndex, value?: string) {\n        const trigger = this.validation_rules[property].trigger;\n        const inputs = { [property]: value !== undefined ? value : this[property] };\n        const validation_rules = { [property]: this.validation_rules[property].rules || [] };\n\n        if (!!trigger && Object.hasOwnProperty.call(this, trigger)) {\n            inputs[trigger] = this[trigger];\n            validation_rules[trigger] = this.validation_rules[trigger].rules || [];\n        }\n\n        const validator = new Validator(inputs, validation_rules, this);\n\n        validator.isPassed();\n\n        Object.keys(inputs).forEach(key => {\n            this.setValidationErrorMessages(key, validator.errors.get(key));\n        });\n    }\n\n    registerReactions() {\n        const { client } = this.core;\n        this.disposeSwitchAcountListener = reaction(\n            () => client.loginid,\n            () => this.clear()\n        );\n\n        return () => {\n            if (typeof this.disposeSwitchAcountListener === 'function') {\n                this.disposeSwitchAcountListener();\n            }\n        };\n    }\n}\n","import { action, makeObservable, observable } from 'mobx';\nimport { config, load, runGroupedEvents } from '@deriv/bot-skeleton';\nimport RootStore from './root-store';\n\ninterface IToolbarStore {\n    is_animation_info_modal_open: boolean;\n    is_dialog_open: boolean;\n    file_name: string;\n    has_undo_stack: boolean;\n    has_redo_stack: boolean;\n    is_reset_button_clicked: boolean;\n    onResetClick: () => void;\n    closeResetDialog: () => void;\n    onResetOkButtonClick: () => void;\n    onSortClick: () => void;\n    onUndoClick: (is_redo: boolean) => void;\n    onZoomInOutClick: (is_zoom_in: boolean) => void;\n    resetDefaultStrategy: () => void;\n    setHasUndoStack: () => void;\n    setHasRedoStack: () => void;\n}\n\nexport default class ToolbarStore implements IToolbarStore {\n    root_store: RootStore;\n\n    constructor(root_store: RootStore) {\n        makeObservable(this, {\n            is_animation_info_modal_open: observable,\n            is_dialog_open: observable,\n            file_name: observable,\n            has_undo_stack: observable,\n            has_redo_stack: observable,\n            is_reset_button_clicked: observable,\n            onResetClick: action.bound,\n            closeResetDialog: action.bound,\n            onResetOkButtonClick: action.bound,\n            onUndoClick: action.bound,\n            resetDefaultStrategy: action.bound,\n            setHasUndoStack: action.bound,\n            setHasRedoStack: action.bound,\n        });\n\n        this.root_store = root_store;\n    }\n\n    is_animation_info_modal_open = false;\n    is_dialog_open = false;\n    file_name = config.default_file_name;\n    has_undo_stack = false;\n    has_redo_stack = false;\n    is_reset_button_clicked = false;\n\n    setResetButtonState = (is_reset_button_clicked: boolean): void => {\n        this.is_reset_button_clicked = is_reset_button_clicked;\n    };\n\n    onResetClick = (): void => {\n        this.is_dialog_open = true;\n    };\n\n    closeResetDialog = (): void => {\n        this.is_dialog_open = false;\n    };\n\n    onResetOkButtonClick = (): void => {\n        this.setResetButtonState(true);\n        runGroupedEvents(\n            false,\n            () => {\n                this.resetDefaultStrategy();\n            },\n            'reset'\n        );\n        this.is_dialog_open = false;\n    };\n\n    resetDefaultStrategy = async () => {\n        const workspace = window.Blockly.derivWorkspace;\n        workspace.current_strategy_id = window?.Blockly?.utils?.idGenerator?.genUid();\n        await load({\n            block_string: workspace.cached_xml.main,\n            file_name: config.default_file_name,\n            workspace,\n            drop_event: null,\n            strategy_id: null,\n            from: null,\n            showIncompatibleStrategyDialog: null,\n        });\n        workspace.strategy_to_load = workspace.cached_xml.main;\n    };\n\n    onSortClick = () => {\n        const {\n            workspaces: {\n                indentWorkspace: { x, y },\n            },\n        } = config;\n        window.Blockly.derivWorkspace.cleanUp(x, y);\n    };\n\n    onUndoClick = (is_redo: boolean): void => {\n        window.Blockly.Events.setGroup('undo_clicked');\n        window.Blockly.derivWorkspace.undo(is_redo);\n        window.Blockly.svgResize(window.Blockly.derivWorkspace); // Called for CommentDelete event.\n        this.setHasRedoStack();\n        this.setHasUndoStack();\n        window.Blockly.Events.setGroup(false);\n    };\n\n    onZoomInOutClick = (is_zoom_in: boolean): void => {\n        const workspace = window.Blockly.derivWorkspace;\n        const metrics = workspace.getMetrics();\n        const addition = is_zoom_in ? 1 : -1;\n\n        workspace.zoom(metrics.viewWidth / 2, metrics.viewHeight / 2, addition);\n    };\n\n    setHasUndoStack = (): void => {\n        this.has_undo_stack = window.Blockly.derivWorkspace?.undoStack_?.length > 0;\n    };\n\n    setHasRedoStack = (): void => {\n        this.has_redo_stack = window.Blockly.derivWorkspace?.redoStack_?.length > 0;\n    };\n}\n","import { action, makeObservable, observable, reaction } from 'mobx';\nimport { scrollWorkspace } from '@deriv/bot-skeleton';\nimport { TStores } from '@deriv/stores/types';\nimport { localize } from '@deriv/translations';\nimport RootStore from './root-store';\n\nexport default class ToolboxStore {\n    root_store: RootStore;\n    core: TStores;\n    disposeToolboxToggleReaction: (() => void) | undefined = undefined;\n    typing_timer: ReturnType<typeof setTimeout> | undefined = undefined;\n    constructor(root_store: RootStore, core: TStores) {\n        makeObservable(this, {\n            is_toolbox_open: observable,\n            is_search_loading: observable,\n            is_search_focus: observable,\n            sub_category_index: observable,\n            toolbox_dom: observable,\n            toolbox_examples: observable,\n            onMount: action.bound,\n            onUnmount: action.bound,\n            setWorkspaceOptions: action.bound,\n            adjustWorkspace: action.bound,\n            toggleDrawer: action.bound,\n            onToolboxItemClick: action.bound,\n            onToolboxItemExpand: action.bound,\n            getCategoryContents: action.bound,\n            getAllCategories: action.bound,\n            hasSubCategory: action.bound,\n            onSearch: action.bound,\n            onSearchBlur: action.bound,\n            onSearchClear: action.bound,\n            onSearchKeyUp: action.bound,\n            showSearch: action.bound,\n        });\n\n        this.root_store = root_store;\n        this.core = core;\n    }\n\n    is_toolbox_open = true;\n    is_search_loading = false;\n    is_search_focus = false;\n    sub_category_index: number[] = [];\n    toolbox_dom: HTMLElement | undefined = undefined;\n    toolbox_examples: HTMLElement | undefined = undefined;\n    is_workspace_scroll_adjusted = false;\n\n    onMount = (toolbox_ref: React.RefObject<HTMLDivElement>) => {\n        this.adjustWorkspace();\n\n        this.toolbox_dom = window.Blockly.utils.xml.textToDom(toolbox_ref?.current);\n        const el = [...(this.toolbox_dom?.childNodes ?? [])].find(\n            el => el instanceof HTMLElement && el.tagName === 'examples'\n        );\n        if (el) this.toolbox_examples = el as HTMLElement;\n        this.setWorkspaceOptions();\n        this.disposeToolboxToggleReaction = reaction(\n            () => this.is_toolbox_open,\n            is_toolbox_open => {\n                if (is_toolbox_open) {\n                    //this.adjustWorkspace();\n                    // Emit event to GTM\n                    const { gtm } = this.core;\n                    gtm.pushDataLayer({ event: 'dbot_toolbox_visible', value: true });\n                }\n            }\n        );\n    };\n\n    onUnmount() {\n        if (typeof this.disposeToolboxToggleReaction === 'function') {\n            this.disposeToolboxToggleReaction();\n        }\n    }\n\n    setWorkspaceOptions() {\n        const workspace = window.Blockly.derivWorkspace;\n        const readOnly = !!workspace.options.readOnly;\n        let languageTree, hasCategories, hasCollapse, hasComments, hasDisable;\n\n        if (readOnly) {\n            languageTree = null;\n            hasCategories = false;\n            hasCollapse = false;\n            hasComments = false;\n            hasDisable = false;\n        } else {\n            languageTree = this.toolbox_dom;\n            hasCategories = Boolean(languageTree && languageTree.getElementsByTagName('category').length);\n            hasCollapse = hasCategories;\n            hasComments = hasCategories;\n            hasDisable = hasCategories;\n        }\n\n        workspace.options.collapse = hasCollapse;\n        workspace.options.comments = hasComments;\n        workspace.options.disable = hasDisable;\n        workspace.options.hasCategories = hasCategories;\n        workspace.options.languageTree = languageTree;\n    }\n    // eslint-disable-next-line class-methods-use-this\n    adjustWorkspace() {\n        // NOTE: added this load modal open check to prevent scroll when load modal is open\n        const is_load_modal_open = this.root_store.load_modal.is_load_modal_open;\n        const workspace = is_load_modal_open ? window.Blockly.getMainWorkspace() : window.Blockly.derivWorkspace;\n        if (!this.is_workspace_scroll_adjusted && !is_load_modal_open) {\n            this.is_workspace_scroll_adjusted = true;\n            setTimeout(() => {\n                const toolbox_width = document.getElementById('gtm-toolbox')?.getBoundingClientRect().width || 0;\n                const block_canvas_rect = workspace.svgBlockCanvas_?.getBoundingClientRect(); // eslint-disable-line\n\n                if (workspace.RTL && block_canvas_rect) {\n                    const is_mobile = this.core.ui.is_mobile;\n                    const block_canvas_space = is_mobile ? block_canvas_rect.right : block_canvas_rect.left;\n\n                    const scroll_distance_mobile = toolbox_width - block_canvas_space + 20;\n                    const scroll_distance_desktop = toolbox_width - block_canvas_space + 36;\n                    const scroll_distance = this.core.ui.is_mobile ? scroll_distance_mobile : scroll_distance_desktop;\n\n                    if (Math.round(block_canvas_space) <= toolbox_width || is_mobile) {\n                        scrollWorkspace(workspace, scroll_distance, true, false);\n                    }\n                } else if (Math.round(block_canvas_rect?.left) <= toolbox_width) {\n                    const scroll_distance = this.core.ui.is_mobile\n                        ? toolbox_width - block_canvas_rect.left + 50\n                        : toolbox_width - block_canvas_rect.left + 36;\n                    scrollWorkspace(workspace, scroll_distance, true, false);\n                }\n\n                this.is_workspace_scroll_adjusted = false;\n            }, 300);\n        } else if (is_load_modal_open) {\n            if (workspace?.RTL) {\n                const scroll_y = 380;\n                const workspace_metrics = workspace.getMetrics();\n                const block_canvas_space =\n                    workspace_metrics.scrollWidth + workspace_metrics.viewLeft - workspace_metrics.viewWidth;\n                workspace?.scrollbar?.set(block_canvas_space, scroll_y);\n            }\n        }\n    }\n\n    toggleDrawer() {\n        this.is_toolbox_open = !this.is_toolbox_open;\n    }\n\n    onToolboxItemClick(category: HTMLElement) {\n        const { flyout } = this.root_store;\n        const category_id = category.getAttribute('id');\n        const flyout_content = this.getCategoryContents(category) as Element[];\n\n        flyout.setIsSearchFlyout(false);\n\n        if (flyout.selected_category?.getAttribute('id') === category_id) {\n            flyout.setVisibility(false);\n        } else {\n            flyout.setSelectedCategory(category);\n            flyout.setContents(flyout_content);\n        }\n    }\n\n    onToolboxItemExpand(index: number) {\n        if ((this.sub_category_index as number[]).includes(index)) {\n            const open_ids = this.sub_category_index.filter(open_id => open_id !== index);\n            this.sub_category_index = open_ids;\n        } else {\n            this.sub_category_index = [...this.sub_category_index, index];\n        }\n    }\n\n    getCategoryContents = (category: HTMLElement): ChildNode[] => {\n        const workspace = window.Blockly.derivWorkspace;\n        const dynamic = category.getAttribute('dynamic');\n        let xml_list = Array.from(category.childNodes);\n\n        // Dynamic categories\n        if (typeof dynamic === 'string') {\n            let fnToApply = workspace.getToolboxCategoryCallback(dynamic);\n            //we needed to add this check since we are not using\n            //blocky way of defining vaiables\n            if (dynamic === 'VARIABLE') {\n                fnToApply = Blockly.DataCategory;\n            }\n            xml_list = fnToApply(workspace);\n        }\n        return xml_list;\n    };\n\n    getAllCategories = (): ChildNode[] => {\n        const categories: ChildNode[] = [];\n        Array.from((this.toolbox_dom as HTMLElement).childNodes).forEach((category: ChildNode) => {\n            categories.push(category);\n            if (this.hasSubCategory((category as HTMLElement).children)) {\n                Array.from((category as HTMLElement).children).forEach(subCategory => {\n                    categories.push(subCategory);\n                });\n            }\n        });\n        return categories;\n    };\n\n    hasSubCategory = (category: HTMLElement[]) => {\n        const subCategory = Object.keys(category).filter(key => {\n            if (category[Number(key)].tagName.toUpperCase() === 'CATEGORY') {\n                return category[Number(key)];\n            }\n        });\n        if (subCategory.length) {\n            return true;\n        }\n        return false;\n    };\n\n    onSearch = ({ search = '' }) => {\n        this.is_search_focus = true;\n        this.showSearch(search);\n    };\n\n    onSearchBlur() {\n        this.is_search_focus = false;\n    }\n\n    onSearchClear(setFieldValue: (field: string, value: string) => void) {\n        setFieldValue('search', '');\n        this.showSearch('');\n    }\n\n    onSearchKeyUp(submitForm: () => void) {\n        this.is_search_loading = true;\n\n        clearTimeout(this.typing_timer);\n        this.typing_timer = setTimeout(\n            action(() => {\n                submitForm();\n                this.is_search_loading = false;\n            }),\n            1000\n        );\n    }\n\n    showSearch = (search: string) => {\n        const workspace = window.Blockly.derivWorkspace;\n        const flyout_content: HTMLElement[] = [];\n        const search_term = search.replace(/\\s+/g, ' ').trim().toUpperCase();\n        const search_words = search_term.split(' ');\n        const all_variables = workspace.getVariablesOfType('');\n        const all_procedures = window.Blockly.Procedures.allProcedures(workspace);\n        const { flyout } = this.root_store;\n\n        flyout.setVisibility(false);\n\n        // avoid general term which the result will return most of the blocks\n        const general_term = [\n            localize('THE'),\n            localize('OF'),\n            localize('YOU'),\n            localize('IS'),\n            localize('THIS'),\n            localize('THEN'),\n            localize('A'),\n            localize('AN'),\n        ];\n\n        if (search_term.length === 0) {\n            return;\n        } else if (search_term.length <= 1 || search_words.every(term => general_term.includes(term))) {\n            flyout.setIsSearchFlyout(true);\n            flyout.setContents(flyout_content, search);\n            return;\n        }\n\n        const all_categories = this.getAllCategories();\n\n        const block_contents = all_categories\n            .filter(category => !this.hasSubCategory(category.children))\n            .map(category => {\n                const contents = this.getCategoryContents(category as HTMLElement);\n\n                const only_block_contents = Array.from(contents).filter(\n                    content => content.tagName.toUpperCase() === 'BLOCK'\n                );\n                return only_block_contents;\n            })\n            .flat();\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const pushIfNotExists = (array: any[] = [], element_to_push = {}) => {\n            if (!array.some(element => element === element_to_push)) {\n                array.push(element_to_push);\n            }\n        };\n\n        const pushBlockWithPriority = (priority: string) => {\n            block_contents.forEach(block_content => {\n                const block_type = block_content.getAttribute('type');\n                const block = window.Blockly.Blocks[block_type];\n                const block_meta = block.meta instanceof Function && block.meta();\n                const block_definitions = block.definition instanceof Function && block.definition();\n                const block_name = block_meta.display_name;\n                const block_type_terms = block_type.toUpperCase().split('_');\n                const block_name_terms = block_name.toUpperCase().split(' ');\n                const definition_key_to_search = /^((message)|(tooltip)|(category))/;\n\n                switch (priority) {\n                    // when the search text match exactly the block's name\n                    case 'exact_block_name': {\n                        if (search_term === block_name.toUpperCase() || search_term === block_type.toUpperCase()) {\n                            pushIfNotExists(flyout_content, block_content);\n                        }\n                        break;\n                    }\n                    // when there's multiple search text and all the search text match block's name or block type\n                    case 'match_words': {\n                        if (\n                            search_words.every(word => block_name_terms.some((term: string) => term.includes(word))) ||\n                            search_words.every(word => block_type_terms.some((term: string) => term.includes(word)))\n                        ) {\n                            pushIfNotExists(flyout_content, block_content);\n                        }\n                        break;\n                    }\n                    // when some of search word match block's name or block's type\n                    case 'block_term': {\n                        if (\n                            block_type_terms.some((term: string) => search_words.some(word => term.includes(word))) ||\n                            block_name_terms.some((term: string) => search_words.some(word => term.includes(word)))\n                        ) {\n                            pushIfNotExists(flyout_content, block_content);\n                        }\n                        break;\n                    }\n                    case 'block_definitions': {\n                        // eslint-disable-next-line consistent-return\n                        Object.keys(block_definitions).forEach(key => {\n                            const definition = block_definitions[key];\n\n                            if (\n                                definition_key_to_search.test(key) &&\n                                search_words.some(word => definition.includes(word))\n                            ) {\n                                pushIfNotExists(flyout_content, block_content);\n                            }\n\n                            if (definition instanceof Array) {\n                                definition.forEach(def => {\n                                    const definition_strings = JSON.stringify(def).toUpperCase();\n\n                                    if (\n                                        def.type === 'field_dropdown' &&\n                                        search_term.length > 2 &&\n                                        search_words.some(word => definition_strings.includes(word))\n                                    ) {\n                                        pushIfNotExists(flyout_content, block_content);\n                                    }\n                                });\n                            }\n                        });\n                        break;\n                    }\n                    case 'block_meta': {\n                        // block_meta matched\n                        const matched_meta = Object.keys(block_meta)\n                            .filter(key => key !== 'display_name')\n                            .find(key => {\n                                const block_meta_strings = block_meta[key]\n                                    .toUpperCase()\n                                    .replace(/[^\\w\\s]/gi, '')\n                                    .split(' ');\n\n                                return search_words.some(word => block_meta_strings.some(meta => meta.includes(word)));\n                            });\n\n                        if (matched_meta && matched_meta.length) {\n                            pushIfNotExists(flyout_content, block_content);\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            });\n        };\n\n        const priority_order = ['exact_block_name', 'match_words', 'block_term', 'block_definitions', 'block_meta'];\n\n        priority_order.forEach(priority => pushBlockWithPriority(priority));\n\n        // block_variable_name matched\n        const matched_variables = all_variables.filter(variable => variable.name.toUpperCase().includes(search_term));\n        const variables_blocks = Blockly.DataCategory.search(matched_variables);\n        // eslint-disable-next-line consistent-return\n        const unique_var_blocks = variables_blocks.filter(variable_block => {\n            return flyout_content.indexOf(variable_block) === -1;\n        });\n        if (unique_var_blocks && unique_var_blocks.length) {\n            flyout_content.unshift(...unique_var_blocks);\n        }\n\n        // block_procedure_name matched\n        const searched_procedures = { 0: [], 1: [] };\n        const procedures_callnoreturn = all_procedures[0];\n        const procedures_callreturn = all_procedures[1];\n        Object.keys(procedures_callnoreturn).forEach(key => {\n            const procedure = procedures_callnoreturn[key];\n\n            if (procedure[0].toUpperCase().includes(search_term)) {\n                searched_procedures['0'].unshift(procedure);\n            }\n        });\n\n        Object.keys(procedures_callreturn).forEach(key => {\n            const procedure = procedures_callreturn[key];\n\n            if (procedure[0].toUpperCase().includes(search_term)) {\n                searched_procedures['1'].unshift(procedure);\n            }\n        });\n\n        const procedures_blocks = Blockly.Procedures.populateDynamicProcedures(searched_procedures);\n        // eslint-disable-next-line consistent-return\n        const unique_proce_blocks = procedures_blocks.filter(procedure_block => {\n            return flyout_content.indexOf(procedure_block) === -1;\n        });\n        if (unique_proce_blocks.length) {\n            flyout_content.unshift(...unique_proce_blocks);\n        }\n\n        flyout.setIsSearchFlyout(true);\n        flyout.setContents(flyout_content, search);\n    };\n}\n","export const transaction_elements = Object.freeze({\n    CONTRACT: 'contract',\n    DIVIDER: 'divider',\n});\n","import { action, computed, makeObservable, observable, reaction } from 'mobx';\nimport { ProposalOpenContract } from '@deriv/api-types';\nimport { LogTypes } from '@deriv/bot-skeleton';\nimport { formatDate, isEnded } from '@deriv/shared';\nimport { TPortfolioPosition, TStores } from '@deriv/stores/types';\nimport { TContractInfo } from '../components/summary/summary-card.types';\nimport { transaction_elements } from '../constants/transactions';\nimport { getStoredItemsByKey, getStoredItemsByUser, setStoredItemsByKey } from '../utils/session-storage';\nimport RootStore from './root-store';\n\ntype TTransaction = {\n    type: string;\n    data?: string | TContractInfo;\n};\n\ntype TElement = {\n    [key: string]: TTransaction[];\n};\n\nexport default class TransactionsStore {\n    root_store: RootStore;\n    core: TStores;\n    disposeReactionsFn: () => void;\n\n    constructor(root_store: RootStore, core: TStores) {\n        this.root_store = root_store;\n        this.core = core;\n        this.is_transaction_details_modal_open = false;\n        this.disposeReactionsFn = this.registerReactions();\n\n        makeObservable(this, {\n            elements: observable,\n            active_transaction_id: observable,\n            recovered_completed_transactions: observable,\n            recovered_transactions: observable,\n            is_called_proposal_open_contract: observable,\n            is_transaction_details_modal_open: observable,\n            transactions: computed,\n            onBotContractEvent: action.bound,\n            pushTransaction: action.bound,\n            clear: action.bound,\n            registerReactions: action.bound,\n            recoverPendingContracts: action.bound,\n            updateResultsCompletedContract: action.bound,\n            sortOutPositionsBeforeAction: action.bound,\n            recoverPendingContractsById: action.bound,\n        });\n    }\n    TRANSACTION_CACHE = 'transaction_cache';\n\n    elements: TElement = getStoredItemsByUser(this.TRANSACTION_CACHE, this.core?.client?.loginid, []);\n    active_transaction_id: null | number = null;\n    recovered_completed_transactions: number[] = [];\n    recovered_transactions: number[] = [];\n    is_called_proposal_open_contract = false;\n    is_transaction_details_modal_open = false;\n\n    get transactions(): TTransaction[] {\n        if (this.core?.client?.loginid) return this.elements[this.core?.client?.loginid] ?? [];\n        return [];\n    }\n\n    get statistics() {\n        let total_runs = 0;\n        // Filter out only contract transactions and remove dividers\n        const trxs = this.transactions.filter(\n            trx => trx.type === transaction_elements.CONTRACT && typeof trx.data === 'object'\n        );\n        const statistics = trxs.reduce(\n            (stats, { data }) => {\n                const { profit = 0, is_completed = false, payout, buy_price = 0, bid_price } = data as TContractInfo;\n                if (is_completed) {\n                    if (profit > 0) {\n                        stats.won_contracts += 1;\n                        stats.total_payout += payout ?? bid_price ?? 0;\n                    } else {\n                        stats.lost_contracts += 1;\n                    }\n                    stats.total_profit += profit;\n                    stats.total_stake += buy_price;\n                    total_runs += 1;\n                }\n                return stats;\n            },\n            {\n                lost_contracts: 0,\n                number_of_runs: 0,\n                total_profit: 0,\n                total_payout: 0,\n                total_stake: 0,\n                won_contracts: 0,\n            }\n        );\n        statistics.number_of_runs = total_runs;\n        return statistics;\n    }\n\n    toggleTransactionDetailsModal = (is_open: boolean) => {\n        this.is_transaction_details_modal_open = is_open;\n    };\n\n    onBotContractEvent(data: TContractInfo) {\n        this.pushTransaction(data);\n    }\n\n    pushTransaction(data: TContractInfo) {\n        const is_completed = isEnded(data as ProposalOpenContract);\n        const { run_id } = this.root_store.run_panel;\n        const current_account = this.core?.client?.loginid as string;\n\n        const contract: TContractInfo = {\n            ...data,\n            is_completed,\n            run_id,\n            date_start: formatDate(data.date_start, 'YYYY-M-D HH:mm:ss [GMT]'),\n            entry_tick: data.entry_tick_display_value,\n            entry_tick_time: data.entry_tick_time && formatDate(data.entry_tick_time, 'YYYY-M-D HH:mm:ss [GMT]'),\n            exit_tick: data.exit_tick_display_value,\n            exit_tick_time: data.exit_tick_time && formatDate(data.exit_tick_time, 'YYYY-M-D HH:mm:ss [GMT]'),\n            profit: is_completed ? data.profit : 0,\n        };\n\n        if (!this.elements[current_account]) {\n            this.elements = {\n                ...this.elements,\n                [current_account]: [],\n            };\n        }\n\n        const same_contract_index = this.elements[current_account]?.findIndex(c => {\n            if (typeof c.data === 'string') return false;\n            return (\n                c.type === transaction_elements.CONTRACT &&\n                c.data?.transaction_ids &&\n                c.data.transaction_ids.buy === data.transaction_ids?.buy\n            );\n        });\n\n        if (same_contract_index === -1) {\n            // Render a divider if the \"run_id\" for this contract is different.\n            if (this.elements[current_account]?.length > 0) {\n                const temp_contract = this.elements[current_account]?.[0];\n                const is_contract = temp_contract.type === transaction_elements.CONTRACT;\n                const is_new_run =\n                    is_contract &&\n                    typeof temp_contract.data === 'object' &&\n                    contract.run_id !== temp_contract?.data?.run_id;\n\n                if (is_new_run) {\n                    this.elements[current_account]?.unshift({\n                        type: transaction_elements.DIVIDER,\n                        data: contract.run_id,\n                    });\n                }\n            }\n\n            this.elements[current_account]?.unshift({\n                type: transaction_elements.CONTRACT,\n                data: contract,\n            });\n        } else {\n            // If data belongs to existing contract in memory, update it.\n            this.elements[current_account]?.splice(same_contract_index, 1, {\n                type: transaction_elements.CONTRACT,\n                data: contract,\n            });\n        }\n\n        this.elements = { ...this.elements }; // force update\n    }\n\n    clear() {\n        this.elements[this.core?.client?.loginid as string] = [];\n        this.recovered_completed_transactions = this.recovered_completed_transactions?.slice(0, 0);\n        this.recovered_transactions = this.recovered_transactions?.slice(0, 0);\n        this.is_transaction_details_modal_open = false;\n    }\n\n    registerReactions() {\n        const { client } = this.core;\n\n        // Write transactions to session storage on each change in transaction elements.\n        const disposeTransactionElementsListener = reaction(\n            () => this.elements[client?.loginid as string],\n            elements => {\n                const stored_transactions = getStoredItemsByKey(this.TRANSACTION_CACHE, {});\n                stored_transactions[client.loginid as string] = elements?.slice(0, 5000) ?? [];\n                setStoredItemsByKey(this.TRANSACTION_CACHE, stored_transactions);\n            }\n        );\n\n        // User could've left the page mid-contract. On initial load, try\n        // to recover any pending contracts so we can reflect accurate stats\n        // and transactions.\n        const disposeRecoverContracts = reaction(\n            () => this.transactions.length,\n            () => this.recoverPendingContracts()\n        );\n\n        return () => {\n            disposeTransactionElementsListener();\n            disposeRecoverContracts();\n        };\n    }\n\n    recoverPendingContracts(contract = null) {\n        this.transactions.forEach(({ data: trx }) => {\n            if (\n                typeof trx === 'string' ||\n                trx?.is_completed ||\n                !trx?.contract_id ||\n                this.recovered_transactions.includes(trx?.contract_id)\n            )\n                return;\n            this.recoverPendingContractsById(trx.contract_id, contract);\n        });\n    }\n\n    updateResultsCompletedContract(contract: ProposalOpenContract) {\n        const { journal, summary_card } = this.root_store;\n        const { contract_info } = summary_card;\n        const { currency, profit } = contract;\n\n        if (contract.contract_id !== contract_info?.contract_id) {\n            this.onBotContractEvent(contract);\n\n            if (contract.contract_id && !this.recovered_transactions.includes(contract.contract_id)) {\n                this.recovered_transactions.push(contract.contract_id);\n            }\n            if (\n                contract.contract_id &&\n                !this.recovered_completed_transactions.includes(contract.contract_id) &&\n                isEnded(contract)\n            ) {\n                this.recovered_completed_transactions.push(contract.contract_id);\n\n                journal.onLogSuccess({\n                    log_type: profit && profit > 0 ? LogTypes.PROFIT : LogTypes.LOST,\n                    extra: { currency, profit },\n                });\n            }\n        }\n    }\n\n    sortOutPositionsBeforeAction(positions: TPortfolioPosition[], element_id?: number) {\n        positions?.forEach(position => {\n            if (!element_id || (element_id && position.id === element_id)) {\n                const contract_details = position.contract_info;\n                this.updateResultsCompletedContract(contract_details);\n            }\n        });\n    }\n\n    recoverPendingContractsById(contract_id: number, contract: ProposalOpenContract | null = null) {\n        const positions = this.core.portfolio.positions;\n\n        if (contract) {\n            this.is_called_proposal_open_contract = true;\n            if (contract.contract_id === contract_id) {\n                this.updateResultsCompletedContract(contract);\n            }\n        }\n\n        if (!this.is_called_proposal_open_contract) {\n            if (this.core?.client?.loginid) {\n                const current_account = this.core?.client?.loginid;\n                if (!this.elements[current_account]?.length) {\n                    this.sortOutPositionsBeforeAction(positions);\n                }\n\n                const elements = this.elements[current_account];\n                const [element = null] = elements;\n                if (typeof element?.data === 'object' && !element?.data?.profit) {\n                    const element_id = element.data.contract_id;\n                    this.sortOutPositionsBeforeAction(positions, element_id);\n                }\n            }\n        }\n    }\n}\n","import { TStores } from '@deriv/stores/types';\nimport type { TDbot, TWebSocket } from 'Types';\nimport AppStore from './app-store';\nimport BlocklyStore from './blockly-store';\nimport ChartStore from './chart-store';\nimport DashboardStore from './dashboard-store';\nimport DataCollectionStore from './data-collection-store';\nimport FlyoutHelpStore from './flyout-help-store';\nimport FlyoutStore from './flyout-store';\nimport GoogleDriveStore from './google-drive-store';\nimport JournalStore from './journal-store';\nimport LoadModalStore from './load-modal-store';\nimport QuickStrategyStore from './quick-strategy-store';\nimport RoutePromptDialogStore from './route-prompt-dialog-store';\nimport RunPanelStore from './run-panel-store';\nimport SaveModalStore from './save-modal-store';\nimport SelfExclusionStore from './self-exclusion-store';\nimport SummaryCardStore from './summary-card-store';\nimport ToolbarStore from './toolbar-store';\nimport ToolboxStore from './toolbox-store';\nimport TransactionsStore from './transactions-store';\n\n// TODO: need to write types for the individual classes and convert them to ts\nexport default class RootStore {\n    public ws: TWebSocket;\n    public dbot: TDbot;\n    public app: AppStore;\n    public summary_card: SummaryCardStore;\n    public flyout: FlyoutStore;\n    public flyout_help: FlyoutHelpStore;\n    public google_drive: GoogleDriveStore;\n    public journal: JournalStore;\n    public load_modal: LoadModalStore;\n    public run_panel: RunPanelStore;\n    public save_modal: SaveModalStore;\n    public transactions: TransactionsStore;\n    public toolbar: ToolbarStore;\n    public toolbox: ToolboxStore;\n    public quick_strategy: QuickStrategyStore;\n    public route_prompt_dialog: RoutePromptDialogStore;\n    public self_exclusion: SelfExclusionStore;\n    public dashboard: DashboardStore;\n\n    public chart_store: ChartStore;\n    public blockly_store: BlocklyStore;\n    public data_collection_store: DataCollectionStore;\n\n    constructor(core: TStores, ws: TWebSocket, dbot: TDbot) {\n        this.ws = ws;\n        this.dbot = dbot;\n        this.app = new AppStore(this, core);\n        this.summary_card = new SummaryCardStore(this, core);\n        this.flyout = new FlyoutStore(this);\n        this.flyout_help = new FlyoutHelpStore(this);\n        this.google_drive = new GoogleDriveStore(this);\n        this.journal = new JournalStore(this, core);\n        this.load_modal = new LoadModalStore(this, core);\n        this.run_panel = new RunPanelStore(this, core);\n        this.save_modal = new SaveModalStore(this);\n        this.transactions = new TransactionsStore(this, core);\n        this.toolbar = new ToolbarStore(this);\n        this.toolbox = new ToolboxStore(this, core);\n        this.quick_strategy = new QuickStrategyStore(this);\n        this.route_prompt_dialog = new RoutePromptDialogStore(this, core);\n        this.self_exclusion = new SelfExclusionStore(this, core);\n        this.dashboard = new DashboardStore(this, core);\n\n        // need to be at last for dependency\n        this.chart_store = new ChartStore(this);\n        this.blockly_store = new BlocklyStore(this);\n        this.data_collection_store = new DataCollectionStore(this, core);\n    }\n}\n","import React, { createContext, PropsWithChildren, useContext, useMemo } from 'react';\nimport { DBot } from '@deriv/bot-skeleton';\nimport { useStore } from '@deriv/stores';\nimport type { TWebSocket } from 'Types';\nimport RootStore from './root-store';\n\nconst DBotStoreContext = createContext<RootStore | null>(null);\n\nconst DBotStoreProvider = ({ children, ws, mock }: PropsWithChildren<{ ws: TWebSocket; mock?: RootStore }>) => {\n    const stores = useStore();\n    const memoizedValue = useMemo(() => mock || new RootStore(stores, ws, DBot), [mock, stores, ws]);\n\n    return <DBotStoreContext.Provider value={memoizedValue}>{children}</DBotStoreContext.Provider>;\n};\n\nconst useDBotStore = () => {\n    const store = useContext(DBotStoreContext);\n\n    if (!store) {\n        throw new Error('useDBotStore must be used within DBotStoreProvider');\n    }\n\n    return store;\n};\n\nexport { DBotStoreProvider, useDBotStore };\n\nexport const mockDBotStore = (root_store: ReturnType<typeof useStore>, ws: TWebSocket) =>\n    new RootStore(root_store, ws, DBot);\n","import React, { ReactElement } from 'react';\nimport classNames from 'classnames';\nimport ContentLoader from 'react-content-loader';\nimport { getContractTypeName } from '@deriv/bot-skeleton';\nimport { isDbotRTL } from '@deriv/bot-skeleton/src/utils/workspace';\nimport { Icon, IconTradeTypes, Popover } from '@deriv/components';\nimport { convertDateFormat } from '@deriv/shared';\nimport { transaction_elements } from 'Constants/transactions';\nimport { TColumn, TDesktopTransactionTable, TTableCell } from './transaction-details.types';\n\nconst PARENT_CLASS = 'transaction-details-modal-desktop';\n\nconst TableCell = ({ label, extra_classes = [], loader = false }: TTableCell) => {\n    return (\n        <div className={classNames(`${PARENT_CLASS}__table-cell`, ...extra_classes)}>\n            {loader ? <CellLoader /> : label}\n        </div>\n    );\n};\n\nconst TableHeader = ({ columns }: { columns: TColumn[] }) => (\n    <div className={classNames(`${PARENT_CLASS}__table-row`, `${PARENT_CLASS}__table-header`)}>\n        {columns?.map(column => (\n            <TableCell\n                key={column.key}\n                extra_classes={[column.extra_class ? `${PARENT_CLASS}__table-cell${column.extra_class}` : '']}\n                label={column.label}\n                loader={false}\n            />\n        ))}\n    </div>\n);\n\nconst IconWrapper = ({ message, icon }: { message: string; icon: ReactElement }) => (\n    <div className={`${PARENT_CLASS}__icon-wrapper`}>\n        <Popover alignment={isDbotRTL() ? 'right' : 'left'} message={message} zIndex='9999'>\n            {icon}\n        </Popover>\n    </div>\n);\n\nconst CellLoader = () => (\n    <ContentLoader\n        className='transactions__loader-text'\n        data-testid='transaction_details_table_cell_loader'\n        height={10}\n        width={30}\n        speed={3}\n        backgroundColor={'var(--general-section-2)'}\n        foregroundColor={'var(--general-hover)'}\n    >\n        <rect x='0' y='0' rx='0' ry='0' width='60' height='12' />\n    </ContentLoader>\n);\n\nexport default function DesktopTransactionTable({\n    result,\n    result_columns,\n    transactions,\n    transaction_columns,\n    account,\n    balance,\n}: TDesktopTransactionTable) {\n    return (\n        <div data-testid='transaction_details_tables' className='transaction-details-tables'>\n            <div\n                className={classNames(\n                    `${PARENT_CLASS}__table-container`,\n                    `${PARENT_CLASS}__table-container__top-table`\n                )}\n            >\n                <TableHeader columns={transaction_columns} />\n                {transactions?.map(transaction => {\n                    const { data, type } = transaction;\n                    if (type === transaction_elements.CONTRACT) {\n                        return (\n                            <div className={`${PARENT_CLASS}__table-row`} key={data?.transaction_ids?.buy}>\n                                <TableCell\n                                    label={\n                                        data?.date_start &&\n                                        convertDateFormat(\n                                            data?.date_start,\n                                            'YYYY-M-D HH:mm:ss [GMT]',\n                                            'YYYY-MM-DD HH:mm:ss [GMT]'\n                                        )\n                                    }\n                                    extra_classes={[`${PARENT_CLASS}__table-cell--grow-big`]}\n                                />\n                                <TableCell\n                                    label={data?.transaction_ids?.buy}\n                                    extra_classes={[`${PARENT_CLASS}__table-cell--grow-mid`]}\n                                />\n                                <TableCell\n                                    label={\n                                        <IconWrapper\n                                            message={data?.display_name}\n                                            icon={<Icon icon={`IcUnderlying${data?.underlying}`} size={24} />}\n                                        />\n                                    }\n                                />\n                                <TableCell\n                                    label={\n                                        <IconWrapper\n                                            message={getContractTypeName(data)}\n                                            icon={<IconTradeTypes type={data?.contract_type} size={24} />}\n                                        />\n                                    }\n                                />\n                                <TableCell label={data?.entry_tick} loader={!data?.entry_tick} />\n                                <TableCell label={data?.exit_tick} loader={!data.exit_tick} />\n                                <TableCell label={Math.abs(data?.buy_price ?? 0).toFixed(2)} />\n                                <TableCell\n                                    label={\n                                        <div\n                                            className={classNames({\n                                                [`${PARENT_CLASS}__profit--win`]: data?.profit > 0,\n                                                [`${PARENT_CLASS}__profit--loss`]: data?.profit < 0,\n                                            })}\n                                        >\n                                            {Math.abs(data?.profit ?? 0).toFixed(2)}\n                                        </div>\n                                    }\n                                    loader={!data.is_completed}\n                                />\n                            </div>\n                        );\n                    }\n\n                    return (\n                        <div className={`${PARENT_CLASS}__table-row`} key={`transaction-row-divider-${data}`}>\n                            <div className={`${PARENT_CLASS}__divider`}>\n                                <div className='transactions__divider-line' />\n                            </div>\n                        </div>\n                    );\n                })}\n            </div>\n            <div\n                className={classNames(\n                    `${PARENT_CLASS}__table-container`,\n                    `${PARENT_CLASS}__table-container__bottom-table`\n                )}\n            >\n                <TableHeader columns={result_columns} />\n                <div className={`${PARENT_CLASS}__table-row`}>\n                    <TableCell label={account} extra_classes={[`${PARENT_CLASS}__table-cell--grow-mid`]} />\n                    <TableCell label={result?.number_of_runs} />\n                    <TableCell label={Math.abs(result?.total_stake ?? 0).toFixed(2)} />\n                    <TableCell label={Math.abs(result?.total_payout ?? 0).toFixed(2)} />\n                    <TableCell label={result?.won_contracts} />\n                    <TableCell label={result?.lost_contracts} extra_classes={[`${PARENT_CLASS}__loss`]} />\n                    <TableCell\n                        label={\n                            <div\n                                className={classNames(\n                                    result?.total_profit && {\n                                        [`${PARENT_CLASS}__profit--win`]: result?.total_profit > 0,\n                                        [`${PARENT_CLASS}__profit--loss`]: result?.total_profit < 0,\n                                    }\n                                )}\n                                data-testid='transaction_details_table_profit'\n                            >\n                                {Math.abs(result?.total_profit ?? 0).toFixed(2)}\n                            </div>\n                        }\n                    />\n                    <TableCell label={balance} />\n                </div>\n            </div>\n        </div>\n    );\n}\n","import React from 'react';\nimport { observer, useStore } from '@deriv/stores';\nimport { localize } from '@deriv/translations';\nimport DraggableResizeWrapper from 'Components/draggable/draggable-resize-wrapper';\nimport { useDBotStore } from 'Stores/useDBotStore';\nimport DesktopTransactionTable from './desktop-transaction-table';\nimport { TColumn, TRunPanelStore, TTransactionStore } from './transaction-details.types';\nimport './transaction-details-desktop.scss';\n\nconst transaction_columns: TColumn[] = [\n    { key: 'timestamp', label: localize('Timestamp'), extra_class: '--grow-big' },\n    { key: 'reference', label: localize('Reference'), extra_class: '--grow-mid' },\n    { key: 'market', label: localize('Market') },\n    { key: 'contract_type', label: localize('Trade type') },\n    { key: 'entry_tick', label: localize('Entry spot') },\n    { key: 'exit_tick', label: localize('Exit spot') },\n    { key: 'buy_price', label: localize('Buy price') },\n    { key: 'profit', label: localize('Profit/Loss') },\n];\n\n/* TODO: Add back account & balance when we have support from transaction store */\nconst result_columns: TColumn[] = [\n    { key: 'account', label: localize('Account'), extra_class: '--grow-mid' },\n    { key: 'no_of_runs', label: localize('No. of runs') },\n    { key: 'total_stake', label: localize('Total stake') },\n    { key: 'total_payout', label: localize('Total payout') },\n    { key: 'win', label: localize('Win') },\n    { key: 'loss', label: localize('Loss') },\n    { key: 'total_profit', label: localize('Total profit/loss') },\n    { key: 'balance', label: localize('Balance') },\n];\n\nconst TransactionDetailsDesktop = observer(() => {\n    const { client } = useStore();\n    const { loginid, balance } = client;\n    const { transactions } = useDBotStore();\n    const {\n        toggleTransactionDetailsModal,\n        is_transaction_details_modal_open,\n        transactions: transaction_list,\n    }: Partial<TTransactionStore> = transactions;\n    const { statistics }: Partial<TRunPanelStore> = transactions;\n\n    return (\n        <React.Fragment>\n            {is_transaction_details_modal_open && (\n                <DraggableResizeWrapper\n                    boundary='.main'\n                    header={localize('Transactions detailed summary')}\n                    onClose={() => toggleTransactionDetailsModal(false)}\n                    modalWidth={882}\n                    modalHeight={404}\n                    minWidth={882}\n                    minHeight={404}\n                    enableResizing\n                >\n                    <DesktopTransactionTable\n                        transaction_columns={transaction_columns}\n                        transactions={transaction_list}\n                        result_columns={result_columns}\n                        result={statistics}\n                        account={loginid ?? ''}\n                        balance={balance ?? 0}\n                    />\n                </DraggableResizeWrapper>\n            )}\n        </React.Fragment>\n    );\n});\n\nexport default TransactionDetailsDesktop;\n","import React from 'react';\nimport { Checkbox } from '@deriv/components';\nimport { TFiltersProps } from '../journal.types';\n\nconst Filters = ({\n    wrapper_ref,\n    checked_filters,\n    filters,\n    filterMessage,\n    className,\n    classNameLabel,\n}: TFiltersProps) => (\n    <div ref={wrapper_ref} className={className}>\n        {filters.map(item => {\n            const hasFilter = Array.isArray(checked_filters) && checked_filters.includes(item.id);\n            return (\n                <Checkbox\n                    key={item.id}\n                    classNameLabel={classNameLabel}\n                    value={hasFilter}\n                    defaultChecked={hasFilter}\n                    label={item.label}\n                    onChange={() => filterMessage(!hasFilter, item.id)}\n                />\n            );\n        })}\n    </div>\n);\n\nexport default Filters;\n","import React from 'react';\nimport { useOnClickOutside } from '@deriv/components';\nimport { TFilterDialogProps } from '../journal.types';\nimport Filters from './filters';\n\nconst FilterDialog = ({\n    toggle_ref,\n    checked_filters,\n    filters,\n    filterMessage,\n    is_filter_dialog_visible,\n    toggleFilterDialog,\n}: TFilterDialogProps) => {\n    const wrapper_ref = React.useRef<HTMLDivElement>(null);\n    const validateClickOutside = (event: React.ChangeEvent<HTMLInputElement>) =>\n        is_filter_dialog_visible && !toggle_ref.current?.contains(event.target);\n\n    useOnClickOutside(wrapper_ref, toggleFilterDialog, validateClickOutside);\n\n    return (\n        <Filters\n            wrapper_ref={wrapper_ref}\n            checked_filters={checked_filters}\n            filters={filters}\n            filterMessage={filterMessage}\n            className='filter-dialog'\n        />\n    );\n};\n\nexport default FilterDialog;\n","import React from 'react';\nimport classnames from 'classnames';\nimport { LogTypes } from '@deriv/bot-skeleton';\nimport { Text } from '@deriv/components';\nimport { formatMoney, getCurrencyDisplayCode } from '@deriv/shared';\nimport { Localize, localize } from '@deriv/translations';\nimport { TFormatMessageProps } from '../journal.types';\n\nconst FormatMessage = ({ logType, className, extra }: TFormatMessageProps) => {\n    const getLogMessage = () => {\n        switch (logType) {\n            case LogTypes.LOAD_BLOCK: {\n                return localize('Blocks are loaded successfully');\n            }\n            case LogTypes.NOT_OFFERED: {\n                return localize('Resale of this contract is not offered.');\n            }\n            case LogTypes.PURCHASE: {\n                const { longcode, transaction_id } = extra;\n                return (\n                    <Localize\n                        i18n_default_text='<0>Bought</0>: {{longcode}} (ID: {{transaction_id}})'\n                        values={{ longcode, transaction_id }}\n                        components={[<Text key={0} size='xxs' styles={{ color: 'var(--status-info)' }} />]}\n                        options={{ interpolation: { escapeValue: false } }}\n                    />\n                );\n            }\n            case LogTypes.SELL: {\n                const { sold_for } = extra;\n                return (\n                    <Localize\n                        i18n_default_text='<0>Sold for</0>: {{sold_for}}'\n                        values={{ sold_for }}\n                        components={[<Text key={0} size='xxs' styles={{ color: 'var(--status-warning)' }} />]}\n                    />\n                );\n            }\n            case LogTypes.PROFIT: {\n                const { currency, profit } = extra;\n                return (\n                    <Localize\n                        i18n_default_text='Profit amount: <0>{{profit}}</0>'\n                        values={{\n                            profit: `${formatMoney(currency, profit, true)} ${getCurrencyDisplayCode(currency)}`,\n                        }}\n                        components={[<Text key={0} size='xxs' styles={{ color: 'var(--status-success)' }} />]}\n                    />\n                );\n            }\n            case LogTypes.LOST: {\n                const { currency, profit } = extra;\n                return (\n                    <Localize\n                        i18n_default_text='Loss amount: <0>{{profit}}</0>'\n                        values={{\n                            profit: `${formatMoney(currency, profit, true)} ${getCurrencyDisplayCode(currency)}`,\n                        }}\n                        components={[<Text key={0} size='xxs' styles={{ color: 'var(--status-danger)' }} />]}\n                    />\n                );\n            }\n            case LogTypes.WELCOME_BACK: {\n                const { current_currency } = extra;\n                if (current_currency)\n                    return (\n                        <Localize\n                            i18n_default_text='Welcome back! Your messages have been restored. You are using your {{current_currency}} account.'\n                            values={{\n                                current_currency,\n                            }}\n                        />\n                    );\n                return <Localize i18n_default_text='Welcome back! Your messages have been restored.' />;\n            }\n\n            case LogTypes.WELCOME: {\n                const { current_currency } = extra;\n                if (current_currency)\n                    return (\n                        <Localize\n                            i18n_default_text='You are using your {{current_currency}} account.'\n                            values={{\n                                current_currency,\n                            }}\n                        />\n                    );\n                break;\n            }\n            default:\n                return null;\n        }\n    };\n\n    return <div className={classnames('journal__text', className)}>{getLogMessage()}</div>;\n};\n\nexport default FormatMessage;\n","import React from 'react';\nimport classnames from 'classnames';\nimport { CSSTransition } from 'react-transition-group';\nimport { isDbotRTL } from '@deriv/bot-skeleton/src/utils/workspace';\nimport { MessageTypes } from '@deriv/bot-skeleton';\nimport { useNewRowTransition } from '@deriv/shared';\nimport { TJournalItemExtra, TJournalItemProps } from '../journal.types';\nimport DateItem from './date-item';\nimport FormatMessage from './format-message';\n\nconst getJournalItemContent = (\n    message: string | ((value: () => void) => string),\n    type: string,\n    className: string,\n    extra: TJournalItemExtra,\n    measure: () => void\n) => {\n    switch (type) {\n        case MessageTypes.SUCCESS: {\n            return <FormatMessage logType={message as string} extra={extra} className={className} />;\n        }\n        case MessageTypes.NOTIFY: {\n            if (typeof message === 'function') {\n                return <div className={classnames('journal__text', className)}>{message(measure)}</div>;\n            }\n            return <div className={classnames('journal__text', className)}>{message}</div>;\n        }\n        case MessageTypes.ERROR: {\n            return <div className='journal__text--error journal__text'>{message as string}</div>;\n        }\n        default:\n            return null;\n    }\n};\n\nconst JournalItem = ({ row, is_new_row, measure }: TJournalItemProps) => {\n    const { in_prop } = useNewRowTransition(is_new_row);\n    const { date, time, message, message_type, className, extra } = row;\n    const date_el = DateItem({ date, time });\n\n    return (\n        <CSSTransition in={in_prop} timeout={500} classNames='list__animation' data-testid='mock-css-transition'>\n            <div className='journal__item' dir={isDbotRTL() ? 'rtl' : 'ltr'}>\n                <div className='journal__item-content'>\n                    {getJournalItemContent(message, message_type, className, extra as TJournalItemExtra, measure)}\n                </div>\n                <div className='journal__text-datetime'>{date_el}</div>\n            </div>\n        </CSSTransition>\n    );\n};\n\nexport default JournalItem;\n","import React from 'react';\nimport { TDateItemProps } from '../journal.types';\n\nconst DateItem = ({ date, time }: TDateItemProps) => (\n    <>\n        <span className='journal__text-date'>{date}</span> | <span className='journal__text-time'>{time}</span>\n    </>\n);\n\nexport default DateItem;\n","import React from 'react';\nimport classnames from 'classnames';\nimport ContentLoader from 'react-content-loader';\n\nconst JournalLoader = ({ is_mobile }: { is_mobile: boolean }) => (\n    <ContentLoader\n        className={classnames('journal__loader', { 'journal__loader--mobile': is_mobile })}\n        speed={3}\n        width={350}\n        height={92}\n        backgroundColor={'var(--general-section-1)'}\n        foregroundColor={'var(--general-hover)'}\n    >\n        <rect x='15' y='15' rx='5' ry='5' width='320' height='40' />\n        <rect x='15' y='60' rx='5' ry='5' width='180' height='7' />\n    </ContentLoader>\n);\n\nexport default JournalLoader;\n","import { LogTypes } from '@deriv/bot-skeleton';\nimport { localize } from '@deriv/translations';\n\nexport type TTransaction = {\n    display_name: string;\n    transaction_ids: { buy: string; sell: string };\n    barrier: string;\n    date_start: string;\n    entry_tick: string;\n    entry_tick_time: string;\n    exit_tick: string;\n    exit_tick_time: string;\n    buy_price: string;\n    profit: string;\n};\n\nexport type TLogTypes = Readonly<{\n    LOAD_BLOCK: 'load_block';\n    PURCHASE: 'purchase';\n    SELL: 'sell';\n    NOT_OFFERED: 'not_offered';\n    PROFIT: 'profit';\n    LOST: 'lost';\n    WELCOME_BACK: 'welcome_back';\n    WELCOME: 'welcome';\n}>;\n\nexport type TExtra = {\n    profit?: string;\n    sold_for?: string;\n    longcode?: string;\n    transaction_id?: string;\n    current_currency?: string;\n};\n\nexport const getCurrentDateTimeLocale = () => {\n    const date = new Date(); // This will be the current date and time\n\n    const year = date.getUTCFullYear();\n    const month = (date.getUTCMonth() + 1).toString().padStart(2, '0');\n    const day = date.getUTCDate().toString().padStart(2, '0');\n    const hours = date.getUTCHours().toString().padStart(2, '0');\n    const minutes = date.getUTCMinutes().toString().padStart(2, '0');\n    const seconds = date.getUTCSeconds().toString().padStart(2, '0');\n\n    return `${year}-${month}-${day} ${hours}${minutes}${seconds}`;\n};\n\nexport const getSuccessJournalMessage = (message: string, extra: TExtra) => {\n    const { profit, sold_for, longcode, transaction_id, current_currency } = extra;\n    switch (message) {\n        case LogTypes.LOAD_BLOCK: {\n            return localize('Blocks are loaded successfully');\n        }\n        case LogTypes.NOT_OFFERED: {\n            return localize('Resale of this contract is not offered.');\n        }\n        case LogTypes.PURCHASE: {\n            return localize('Bought: {{longcode}} (ID: {{transaction_id}})', { longcode, transaction_id });\n        }\n        case LogTypes.SELL: {\n            return localize('Sold for: {{sold_for}}', { sold_for });\n        }\n        case LogTypes.PROFIT: {\n            return localize('Profit amount: {{profit}}', { profit });\n        }\n        case LogTypes.LOST: {\n            return localize('Loss amount: {{profit}}', { profit });\n        }\n        case LogTypes.WELCOME_BACK: {\n            if (current_currency)\n                return localize(\n                    'Welcome back! Your messages have been restored. You are using your {{current_currency}} account.',\n                    { current_currency }\n                );\n            return localize('Welcome back! Your messages have been restored.');\n        }\n        case LogTypes.WELCOME: {\n            if (current_currency)\n                return localize('You are using your {{current_currency}} account.', { current_currency });\n            break;\n        }\n        default:\n            return '';\n    }\n};\n\nexport const downloadFile = (file_name: string, content: string) => {\n    const uri = encodeURI(`data:text/csv;charset=utf-8, ${content}`);\n    const link = document.createElement('a');\n    link.setAttribute('href', uri);\n    link.setAttribute('download', `${file_name} ${getCurrentDateTimeLocale()}.csv`);\n    document.body.appendChild(link);\n    link.click();\n    link.parentNode?.removeChild(link);\n};\n","import React from 'react';\nimport { Button, Icon, Popover } from '@deriv/components';\nimport { observer } from '@deriv/stores';\nimport { localize } from '@deriv/translations';\nimport { downloadFile, getSuccessJournalMessage, TTransaction } from 'Utils/download';\nimport { useDBotStore } from 'Stores/useDBotStore';\n\ntype TDownloadProps = {\n    tab: string;\n};\n\nconst Download = observer(({ tab }: TDownloadProps) => {\n    const { run_panel, transactions, journal } = useDBotStore();\n    const { is_clear_stat_disabled, is_running } = run_panel;\n    const { filtered_messages } = journal;\n    const { transactions: transaction_list } = transactions;\n    let disabled = false;\n    let clickFunction, popover_message;\n\n    const downloadTransaction = () => {\n        const items = [\n            [\n                localize('Market'),\n                localize('Reference ID (buy)'),\n                localize('Reference ID (sell)'),\n                localize('Barrier'),\n                localize('Start Time'),\n                localize('Entry Spot'),\n                localize('Entry Spot Time'),\n                localize('Exit Spot'),\n                localize('Exit Spot Time'),\n                localize('Buy Price'),\n                localize('Profit/Loss'),\n            ],\n        ];\n        transaction_list.forEach(({ data }: { data: TTransaction }) => {\n            if (typeof data === 'string') return;\n            items.push([\n                data.display_name,\n                data.transaction_ids.buy,\n                data.transaction_ids.sell,\n                data.barrier,\n                data.date_start,\n                data.entry_tick,\n                data.entry_tick_time,\n                data.exit_tick,\n                data.exit_tick_time,\n                data.buy_price,\n                data.profit,\n            ]);\n        });\n\n        const content = items.map(e => e.join(',')).join('\\n');\n        downloadFile(localize('Transactions'), content);\n    };\n\n    const downloadJournal = () => {\n        const items = [[localize('Date'), localize('Time'), localize('Message')]];\n\n        filtered_messages.map(item => {\n            let array_message;\n            if (item.message_type !== 'success') {\n                array_message = JSON.stringify(item.message);\n            } else {\n                array_message = getSuccessJournalMessage(item.message.toString(), item.extra);\n            }\n            const arr = [item.date, item.time, array_message?.replace('&#x2F;', '/')];\n            items.push(arr);\n        });\n        const content = items.map(e => e.join(',')).join('\\n');\n        downloadFile(localize('Journal'), content);\n    };\n\n    if (tab === 'transactions') {\n        clickFunction = downloadTransaction;\n        disabled = !transaction_list.length || is_running;\n        popover_message = localize('Download your transaction history.');\n        if (!transaction_list.length) popover_message = localize('No transaction or activity yet.');\n    } else if (tab === 'journal') {\n        clickFunction = downloadJournal;\n        popover_message = localize('Download your journal.');\n        disabled = is_clear_stat_disabled;\n        if (disabled) popover_message = localize('No transaction or activity yet.');\n    }\n    if (is_running) popover_message = localize('Download is unavailable while your bot is running.');\n\n    return (\n        <Popover\n            className='run-panel__info'\n            classNameBubble='run-panel__info--bubble'\n            alignment='bottom'\n            message={popover_message}\n            zIndex='5'\n        >\n            <Button\n                id='download-button'\n                is_disabled={disabled}\n                className='download__button'\n                text={localize('Download')}\n                onClick={clickFunction}\n                secondary\n            />\n        </Popover>\n    );\n});\n\nexport default Download;\n","import Download from './download';\nimport './download.scss';\n\nexport default Download;\n","import React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { Icon, Text } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport Download from 'Components/download';\nimport { TJournalToolsProps } from '../journal.types';\nimport FilterDialog from './filter-dialog';\n\nconst JournalTools = ({\n    checked_filters,\n    filters,\n    filterMessage,\n    is_filter_dialog_visible,\n    toggleFilterDialog,\n}: TJournalToolsProps) => {\n    const toggle_ref = React.useRef<HTMLDivElement>(null);\n\n    return (\n        <>\n            <div className='journal-tools__container'>\n                <Download tab='journal' />\n                <div ref={toggle_ref} className='journal-tools__container-filter' onClick={toggleFilterDialog}>\n                    <Text size='xs' className='journal-tools__container-filter--label'>\n                        <Localize i18n_default_text='Filters' />\n                    </Text>\n                    <Icon icon='IcFilter' size={16} />\n                </div>\n            </div>\n            <CSSTransition\n                in={is_filter_dialog_visible}\n                classNames={{\n                    enter: 'filter-dialog--enter',\n                    enterDone: 'filter-dialog--enter-done',\n                    exit: 'filter-dialog--exit',\n                }}\n                timeout={150}\n                unmountOnExit\n            >\n                <FilterDialog\n                    toggle_ref={toggle_ref}\n                    checked_filters={checked_filters}\n                    filters={filters}\n                    filterMessage={filterMessage}\n                    is_filter_dialog_visible={is_filter_dialog_visible}\n                    toggleFilterDialog={toggleFilterDialog}\n                />\n            </CSSTransition>\n        </>\n    );\n};\n\nexport default JournalTools;\n","import React from 'react';\nimport classnames from 'classnames';\nimport { DataList, Icon, Text } from '@deriv/components';\nimport { observer, useStore } from '@deriv/stores';\nimport { localize } from '@deriv/translations';\nimport { contract_stages } from 'Constants/contract-stage';\nimport { useDBotStore } from 'Stores/useDBotStore';\nimport { TCheckedFilters, TFilterMessageValues, TJournalDataListArgs } from './journal.types';\nimport { JournalItem, JournalLoader, JournalTools } from './journal-components';\n\nconst Journal = observer(() => {\n    const { ui } = useStore();\n    const { journal, run_panel } = useDBotStore();\n    const {\n        checked_filters,\n        filterMessage,\n        filters,\n        filtered_messages,\n        is_filter_dialog_visible,\n        toggleFilterDialog,\n        unfiltered_messages,\n    } = journal;\n    const { is_stop_button_visible, contract_stage } = run_panel;\n\n    const filtered_messages_length = Array.isArray(filtered_messages) && filtered_messages.length;\n    const unfiltered_messages_length = Array.isArray(unfiltered_messages) && unfiltered_messages.length;\n    const { is_desktop } = ui;\n\n    return (\n        <div\n            className={classnames('journal run-panel-tab__content--no-stat', {\n                'run-panel-tab__content': is_desktop,\n            })}\n            data-testid='dt_mock_journal'\n        >\n            <JournalTools\n                checked_filters={checked_filters}\n                filters={filters}\n                filterMessage={filterMessage}\n                is_filter_dialog_visible={is_filter_dialog_visible}\n                toggleFilterDialog={toggleFilterDialog}\n            />\n            <div className='journal__item-list'>\n                {filtered_messages_length ? (\n                    <DataList\n                        className='journal'\n                        data_source={filtered_messages}\n                        rowRenderer={(args: TJournalDataListArgs) => <JournalItem {...args} />}\n                        keyMapper={(row: TFilterMessageValues) => row.unique_id}\n                    />\n                ) : (\n                    <>\n                        {contract_stage >= contract_stages.STARTING &&\n                        !!Object.keys(checked_filters as TCheckedFilters).length &&\n                        !unfiltered_messages_length &&\n                        is_stop_button_visible ? (\n                            <JournalLoader is_mobile={!is_desktop} />\n                        ) : (\n                            <div className='journal-empty'>\n                                <Icon icon='IcBox' className='journal-empty__icon' size={64} color='secondary' />\n                                <Text\n                                    as='h4'\n                                    size='xs'\n                                    weight='bold'\n                                    align='center'\n                                    color='less-prominent'\n                                    line_height='xxs'\n                                    className='journal-empty__header'\n                                >\n                                    {localize('There are no messages to display')}\n                                </Text>\n                                <div className='journal-empty__message'>\n                                    <Text size='xxs' color='less-prominent'>\n                                        {localize('Here are the possible reasons:')}\n                                    </Text>\n                                    <ul className='journal-empty__list'>\n                                        <li>\n                                            <Text size='xxs' color='less-prominent'>\n                                                {localize('The bot is not running')}\n                                            </Text>\n                                        </li>\n                                        <li>\n                                            <Text size='xxs' color='less-prominent'>\n                                                {localize('The stats are cleared')}\n                                            </Text>\n                                        </li>\n                                        <li>\n                                            <Text size='xxs' color='less-prominent'>\n                                                {localize('All messages are filtered out')}\n                                            </Text>\n                                        </li>\n                                    </ul>\n                                </div>\n                            </div>\n                        )}\n                    </>\n                )}\n            </div>\n        </div>\n    );\n});\n\nexport default Journal;\n","import Journal from './journal';\nimport './journal.scss';\n\nexport default Journal;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Field, Form, Formik } from 'formik';\nimport PropTypes from 'prop-types';\nimport { Button, Div100vhContainer, FadeWrapper, Input, Modal, PageOverlay } from '@deriv/components';\nimport { observer, useStore } from '@deriv/stores';\nimport { localize } from '@deriv/translations';\nimport { useDBotStore } from 'Stores/useDBotStore';\n\nexport const SelfExclusionForm = props => {\n    const [max_losses_error, setMaxLossesError] = React.useState('');\n    const {\n        is_onscreen_keyboard_active,\n        is_logged_in,\n        initial_values,\n        api_max_losses,\n        onRunButtonClick,\n        resetSelfExclusion,\n        updateSelfExclusion,\n        setRunLimit,\n        is_mobile,\n    } = props;\n\n    React.useEffect(() => {\n        if (!is_logged_in) {\n            resetSelfExclusion();\n        }\n    });\n\n    const onSubmitLimits = async values => {\n        if (values.form_max_losses !== api_max_losses) {\n            const set_losses = await updateSelfExclusion({ max_losses: values.form_max_losses });\n            if (set_losses?.error) {\n                setMaxLossesError(localize(set_losses.error.message));\n                return;\n            }\n        }\n        setRunLimit(values.run_limit);\n        onRunButtonClick();\n    };\n    const validateFields = values => {\n        const errors = {};\n        // Regex\n        const is_number = /^\\d+(\\.\\d+)?$/;\n        const is_integer = /^\\d+$/;\n        const max_number = 9999999999999;\n\n        // Messages\n        const requested_field_message = localize('This field is required.');\n        const valid_number_message = localize('Should be a valid number');\n        const max_number_message = localize('Reached maximum number of digits');\n        const max_decimal_message = localize('Reached maximum number of decimals');\n        const max_losses_limit_message = localize('Please enter a number between 0 and {{api_max_losses}}.', {\n            api_max_losses,\n        });\n        const requested_fields = ['run_limit', 'form_max_losses'];\n        const only_numbers = ['run_limit', 'form_max_losses'];\n        const decimal_limit = ['form_max_losses'];\n        const has_max_limit = ['form_max_losses'];\n\n        const only_integers = ['run_limit'];\n\n        requested_fields.forEach(item => {\n            if (!values[item]) {\n                errors[item] = requested_field_message;\n            }\n        });\n\n        only_numbers.forEach(item => {\n            if (values[item]) {\n                if (!is_number.test(values[item])) {\n                    errors[item] = valid_number_message;\n                } else if (+values[item] > max_number) {\n                    errors[item] = max_number_message;\n                }\n            }\n        });\n\n        only_integers.forEach(item => {\n            if (values[item]) {\n                if (!is_integer.test(values[item])) {\n                    errors[item] = valid_number_message;\n                }\n            }\n        });\n\n        decimal_limit.forEach(item => {\n            const amount_decimal_array = values[item]?.toString().split('.')[1];\n            const amount_decimal_places = amount_decimal_array ? amount_decimal_array.length : 0;\n            if (amount_decimal_places > 2) {\n                errors[item] = max_decimal_message;\n            }\n        });\n        has_max_limit.forEach(item => {\n            if (api_max_losses !== 0 && api_max_losses !== values[item] && api_max_losses < values[item]) {\n                errors[item] = max_losses_limit_message;\n            } else {\n                setMaxLossesError('');\n            }\n        });\n\n        return errors;\n    };\n\n    return (\n        <div className='db-self-exclusion' data-testid='self-exclusion'>\n            <div className='db-self-exclusion__content'>\n                <div className='db-self-exclusion__info'>\n                    {localize('Enter limits to stop your bot from trading when any of these conditions are met.')}\n                </div>\n                <Formik initialValues={initial_values} validate={validateFields} onSubmit={onSubmitLimits}>\n                    {({ values, touched, errors, isValid, handleChange }) => {\n                        return (\n                            <Form role='form'>\n                                <div className='db-self-exclusion__form-group'>\n                                    <Field name='form_max_losses'>\n                                        {({ field }) => (\n                                            <Input\n                                                {...field}\n                                                className='db-self-exclusion__input'\n                                                type='text'\n                                                label={localize('Daily loss limit')}\n                                                value={values.form_max_losses}\n                                                onChange={handleChange}\n                                                error={max_losses_error || (touched[field.name] && errors[field.name])}\n                                                hint={localize(\n                                                    'Limits your potential losses for the day across all Deriv platforms.'\n                                                )}\n                                                data_testId={field.name}\n                                            />\n                                        )}\n                                    </Field>\n                                </div>\n                                <div className='db-self-exclusion__form-group'>\n                                    <Field name='run_limit'>\n                                        {({ field }) => {\n                                            return (\n                                                <Input\n                                                    {...field}\n                                                    className='db-self-exclusion__input'\n                                                    type='text'\n                                                    label={localize('Maximum consecutive trades')}\n                                                    value={values.run_limit}\n                                                    onChange={handleChange}\n                                                    error={touched[field.name] && errors.run_limit}\n                                                    hint={localize(\n                                                        'Maximum number of trades your bot will execute for this run.'\n                                                    )}\n                                                    data_testId={field.name}\n                                                />\n                                            );\n                                        }}\n                                    </Field>\n                                </div>\n                                <div\n                                    className={classNames('db-self-exclusion__footer', {\n                                        'db-self-exclusion__footer--relative': is_mobile && is_onscreen_keyboard_active,\n                                    })}\n                                >\n                                    <div className='db-self-exclusion__footer-btn-group'>\n                                        <Button\n                                            large\n                                            text={localize('Cancel')}\n                                            onClick={resetSelfExclusion}\n                                            secondary\n                                            type='button'\n                                        />\n                                        <Button\n                                            type='submit'\n                                            large\n                                            text={localize('Apply and run')}\n                                            is_disabled={\n                                                !isValid ||\n                                                !values.run_limit ||\n                                                !values.form_max_losses ||\n                                                max_losses_error !== ''\n                                            }\n                                            primary\n                                        />\n                                    </div>\n                                </div>\n                            </Form>\n                        );\n                    }}\n                </Formik>\n            </div>\n        </div>\n    );\n};\n\nconst SelfExclusion = observer(({ onRunButtonClick }) => {\n    const { self_exclusion } = useDBotStore();\n    const { ui, client } = useStore();\n    const { is_restricted, resetSelfExclusion, initial_values, api_max_losses, run_limit, setRunLimit } =\n        self_exclusion;\n    const { is_onscreen_keyboard_active, is_desktop } = ui;\n    const { is_logged_in, updateSelfExclusion, virtual_account_loginid } = client;\n\n    const self_exclusion_form_props = {\n        is_onscreen_keyboard_active,\n        is_logged_in,\n        initial_values,\n        api_max_losses,\n        onRunButtonClick,\n        resetSelfExclusion,\n        updateSelfExclusion,\n        setRunLimit,\n        virtual_account_loginid,\n        run_limit,\n        is_desktop,\n    };\n\n    return (\n        <>\n            {!is_desktop ? (\n                <FadeWrapper is_visible={is_restricted} className='limits__wrapper' keyname='limitis__wrapper'>\n                    <PageOverlay header={localize('Limits')} onClickClose={resetSelfExclusion}>\n                        <Div100vhContainer className='limits__wrapper--is-mobile'>\n                            <SelfExclusionForm {...self_exclusion_form_props} />\n                        </Div100vhContainer>\n                    </PageOverlay>\n                </FadeWrapper>\n            ) : (\n                <Modal\n                    is_open={is_restricted}\n                    has_close_icon\n                    width='440px'\n                    height='374px'\n                    toggleModal={resetSelfExclusion}\n                    className='db-self-exclusion__modal'\n                    title={localize('Limits')}\n                >\n                    <SelfExclusionForm {...self_exclusion_form_props} />\n                </Modal>\n            )}\n        </>\n    );\n});\n\nSelfExclusion.propTypes = {\n    onRunButtonClick: PropTypes.func,\n};\n\nexport default SelfExclusion;\n","import SelfExclusion from './self-exclusion';\n\nexport default SelfExclusion;\n","import React from 'react';\nimport { localize } from '@deriv/translations';\nimport { Icon, Text } from '@deriv/components';\n\nexport const message_running_bot = localize('Your bot is running and waiting for a signal to buy a contract.');\n\nconst ContractCardRunningBot = () => (\n    <>\n        <Icon id='rotate-icon' icon='IcCircleLoader' color='black' size={16} />\n        <Text\n            color='less-prominent'\n            line_height='xs'\n            size='xxs'\n            weight='bold'\n            align='center'\n            className='dc-contract-card-message'\n        >\n            {message_running_bot}\n        </Text>\n    </>\n);\n\nexport default ContractCardRunningBot;\n","import ContractCardLoader from './contract-card-loading';\n\nexport default ContractCardLoader;\n","import React from 'react';\nimport ContentLoader from 'react-content-loader';\nimport { contract_stages } from 'Constants/contract-stage';\nimport ContractCardRunningBot from './contract-card-running-bot';\n\ntype TContractCardLoader = {\n    speed?: number;\n    contract_stage?: number;\n};\n\nconst ContractCardLoader = ({ speed = 3, contract_stage }: TContractCardLoader) => (\n    <>\n        {contract_stage === contract_stages.RUNNING ? (\n            <ContractCardRunningBot />\n        ) : (\n            <ContentLoader\n                height={153}\n                width={334}\n                speed={speed}\n                backgroundColor={'var(--general-section-2)'}\n                foregroundColor={'var(--general-hover)'}\n                data-testid='contract-card-loader'\n            >\n                <rect x='12' y='15' rx='0' ry='0' width='41' height='25' />\n                <rect x='61' y='24' rx='0' ry='0' width='91' height='8' />\n                <rect x='180' y='15' rx='0' ry='0' width='41' height='25' />\n                <rect x='229' y='24' rx='0' ry='0' width='91' height='8' />\n                <rect x='12' y='48' rx='0' ry='0' width='60' height='8' />\n                <rect x='12' y='64' rx='0' ry='0' width='308' height='8' />\n                <rect x='12' y='80' rx='0' ry='0' width='308' height='1' />\n                <rect x='12' y='89' rx='0' ry='0' width='140' height='8' />\n                <rect x='12' y='105' rx='0' ry='0' width='60' height='8' />\n                <rect x='12' y='121' rx='0' ry='0' width='140' height='8' />\n                <rect x='12' y='137' rx='0' ry='0' width='60' height='8' />\n                <rect x='180' y='89' rx='0' ry='0' width='140' height='8' />\n                <rect x='180' y='105' rx='0' ry='0' width='60' height='8' />\n                <rect x='180' y='121' rx='0' ry='0' width='140' height='8' />\n                <rect x='180' y='137' rx='0' ry='0' width='60' height='8' />\n            </ContentLoader>\n        )}\n    </>\n);\n\nexport default ContractCardLoader;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { ContractCard, Text } from '@deriv/components';\nimport { getCardLabels } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { localize } from '@deriv/translations';\nimport ContractCardLoader from 'Components/contract-card-loading';\nimport { getContractTypeDisplay } from 'Constants/contract';\nimport { useDBotStore } from 'Stores/useDBotStore';\nimport { TSummaryCardProps } from './summary-card.types';\n\nconst SummaryCard = observer(({ contract_info, is_contract_loading, is_bot_running }: TSummaryCardProps) => {\n    const { summary_card, run_panel } = useDBotStore();\n    const { ui, common } = useStore();\n    const { is_contract_completed, is_contract_inactive, is_multiplier, is_accumulator, setIsBotRunning } =\n        summary_card;\n    const { onClickSell, is_sell_requested, contract_stage } = run_panel;\n    const { addToast, current_focus, removeToast, setCurrentFocus } = ui;\n    const { server_time } = common;\n\n    const { is_desktop } = ui;\n\n    React.useEffect(() => {\n        const cleanup = setIsBotRunning();\n        return cleanup;\n    }, [is_contract_loading]);\n\n    const card_header = (\n        <ContractCard.Header\n            contract_info={contract_info}\n            getCardLabels={getCardLabels}\n            getContractTypeDisplay={getContractTypeDisplay}\n            has_progress_slider={!is_multiplier}\n            is_sold={is_contract_completed}\n            server_time={server_time}\n        />\n    );\n\n    const card_body = (\n        <ContractCard.Body\n            addToast={addToast}\n            contract_info={contract_info}\n            currency={contract_info?.currency ?? ''}\n            current_focus={current_focus}\n            error_message_alignment='left'\n            getCardLabels={getCardLabels}\n            getContractById={() => summary_card}\n            is_mobile={!is_desktop}\n            is_multiplier={is_multiplier}\n            is_accumulator={is_accumulator}\n            is_sold={is_contract_completed}\n            removeToast={removeToast}\n            server_time={server_time}\n            setCurrentFocus={setCurrentFocus}\n        />\n    );\n\n    const card_footer = (\n        <ContractCard.Footer\n            contract_info={contract_info}\n            getCardLabels={getCardLabels}\n            is_multiplier={is_multiplier}\n            is_sell_requested={is_sell_requested}\n            onClickSell={onClickSell}\n        />\n    );\n\n    const contract_el = (\n        <React.Fragment>\n            {card_header}\n            {card_body}\n            {card_footer}\n        </React.Fragment>\n    );\n\n    return (\n        <div\n            className={classNames('db-summary-card', {\n                'db-summary-card--mobile': !is_desktop,\n                'db-summary-card--inactive': is_contract_inactive && !is_contract_loading && !contract_info,\n                'db-summary-card--completed': is_contract_completed,\n                'db-summary-card--completed-mobile': is_contract_completed && !is_desktop,\n                'db-summary-card--delayed-loading': is_bot_running,\n            })}\n            data-testid='dt_mock_summary_card'\n        >\n            {is_contract_loading && !is_bot_running && <ContractCardLoader speed={2} />}\n            {is_bot_running && <ContractCardLoader speed={2} contract_stage={contract_stage} />}\n            {!is_contract_loading && contract_info && !is_bot_running && (\n                <ContractCard\n                    contract_info={contract_info}\n                    getCardLabels={getCardLabels}\n                    is_multiplier={is_multiplier}\n                    profit_loss={contract_info.profit}\n                    should_show_result_overlay={true}\n                >\n                    <div\n                        className={classNames('dc-contract-card', {\n                            'dc-contract-card--green': contract_info.profit > 0,\n                            'dc-contract-card--red': contract_info.profit < 0,\n                        })}\n                    >\n                        {contract_el}\n                    </div>\n                </ContractCard>\n            )}\n            {!is_contract_loading && !contract_info && !is_bot_running && (\n                <Text as='p' line_height='s' size='xs'>\n                    {localize('When you’re ready to trade, hit ')}\n                    <strong>{localize('Run')}</strong>\n                    {localize('. You’ll be able to track your bot’s performance here.')}\n                </Text>\n            )}\n        </div>\n    );\n});\n\nexport default SummaryCard;\n","import React from 'react';\nimport classnames from 'classnames';\nimport { ThemedScrollbars } from '@deriv/components';\nimport { observer, useStore } from '@deriv/stores';\nimport { useDBotStore } from 'Stores/useDBotStore';\nimport SummaryCard from './summary-card';\n\ntype TSummary = {\n    is_drawer_open: boolean;\n};\n\nconst Summary = observer(({ is_drawer_open }: TSummary) => {\n    const { ui } = useStore();\n    const { dashboard, summary_card } = useDBotStore();\n    const { is_contract_loading, contract_info, is_bot_running } = summary_card;\n    const { active_tour } = dashboard;\n    const { is_desktop } = ui;\n    return (\n        <div\n            className={classnames({\n                'run-panel-tab__content': is_desktop,\n                'run-panel-tab__content--mobile': !is_desktop && is_drawer_open,\n                'run-panel-tab__content--summary-tab': (is_desktop && is_drawer_open) || active_tour,\n            })}\n            data-testid='mock-summary'\n        >\n            <ThemedScrollbars\n                className={classnames({\n                    summary: (!is_contract_loading && !contract_info) || is_bot_running,\n                    'summary--loading':\n                        (!is_desktop && is_contract_loading) || (!is_desktop && !is_contract_loading && contract_info),\n                })}\n            >\n                <SummaryCard\n                    is_contract_loading={is_contract_loading}\n                    contract_info={contract_info}\n                    is_bot_running={is_bot_running}\n                />\n            </ThemedScrollbars>\n        </div>\n    );\n});\n\nexport default Summary;\n","import Summary from './summary';\nimport './summary.scss';\nimport './summary-card.scss';\n\nexport default Summary;\n","import ContractResultOverlay from './contract-result-overlay';\nimport './contract-result-overlay.scss';\n\nexport default ContractResultOverlay;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Icon, Text } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\n\ntype TContractResultOverlayProps = {\n    profit: number;\n};\n\nconst ContractResultOverlay = ({ profit }: TContractResultOverlayProps) => {\n    const has_won_contract = profit >= 0;\n\n    return (\n        <div\n            className={classNames('db-contract-card__result', {\n                'db-contract-card__result--won': has_won_contract,\n                'db-contract-card__result--lost': !has_won_contract,\n            })}\n        >\n            <Text weight='bold' className='db-contract-card__result-caption'>\n                {has_won_contract ? (\n                    <React.Fragment>\n                        <Localize i18n_default_text='Won' />\n                        <Icon icon='IcCheckmarkCircle' className='db-contract-card__result-icon' color='green' />\n                    </React.Fragment>\n                ) : (\n                    <React.Fragment>\n                        <Localize i18n_default_text='Lost' />\n                        <Icon icon='IcCrossCircle' className='db-contract-card__result-icon' color='red' />\n                    </React.Fragment>\n                )}\n            </Text>\n        </div>\n    );\n};\n\nexport default ContractResultOverlay;\n","import React from 'react';\nimport classNames from 'classnames';\n\ntype TCircularWrapper = {\n    className?: string;\n};\n\nconst CircularWrapper: React.FC<TCircularWrapper> = ({ className }) => (\n    <div className={classNames('circular-wrapper', className)}>\n        <span className='static-circle' />\n        <span className='dynamic-circle' />\n    </div>\n);\n\nexport default CircularWrapper;\n","import React from 'react';\nimport { Localize } from '@deriv/translations';\nimport { contract_stages } from 'Constants/contract-stage';\n\ntype TContractStageText = {\n    contract_stage: number;\n};\n\nexport const text_contract_stages = Object.freeze({\n    NOT_RUNNING: 'Bot is not running',\n    STARTING: 'Bot is starting',\n    RUNNING: 'Bot running',\n    PURCHASE_SENT: 'Buying contract',\n    PURCHASE_RECEIVED: 'Contract bought',\n    IS_STOPPING: 'Bot is stopping',\n    CONTRACT_CLOSED: 'Contract closed',\n});\n\nconst ContractStageText: React.FC<TContractStageText> = ({ contract_stage }) => {\n    switch (contract_stage) {\n        case contract_stages.STARTING:\n            return <Localize i18n_default_text={text_contract_stages.STARTING} />;\n        case contract_stages.RUNNING:\n            return <Localize i18n_default_text={text_contract_stages.RUNNING} />;\n        case contract_stages.PURCHASE_SENT:\n            return <Localize i18n_default_text={text_contract_stages.PURCHASE_SENT} />;\n        case contract_stages.PURCHASE_RECEIVED:\n            return <Localize i18n_default_text={text_contract_stages.PURCHASE_RECEIVED} />;\n        case contract_stages.IS_STOPPING:\n            return <Localize i18n_default_text={text_contract_stages.IS_STOPPING} />;\n        case contract_stages.CONTRACT_CLOSED:\n            return <Localize i18n_default_text={text_contract_stages.CONTRACT_CLOSED} />;\n        case contract_stages.NOT_RUNNING:\n        default:\n            return <Localize i18n_default_text={text_contract_stages.NOT_RUNNING} />;\n    }\n};\n\nexport default ContractStageText;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Button, Icon } from '@deriv/components';\nimport { observer, useStore } from '@deriv/stores';\nimport { localize } from '@deriv/translations';\nimport ContractResultOverlay from 'Components/contract-result-overlay';\nimport { contract_stages } from 'Constants/contract-stage';\nimport { useDBotStore } from 'Stores/useDBotStore';\nimport { rudderStackSendRunBotEvent } from '../../analytics/rudderstack-common-events';\nimport CircularWrapper from './circular-wrapper';\nimport ContractStageText from './contract-stage-text';\n\ntype TTradeAnimation = {\n    className?: string;\n    should_show_overlay?: boolean;\n};\n\nconst TradeAnimation = observer(({ className, should_show_overlay }: TTradeAnimation) => {\n    const { dashboard, run_panel, summary_card } = useDBotStore();\n    const { client } = useStore();\n    const { active_tab } = dashboard;\n    const { is_contract_completed, profit } = summary_card;\n    const {\n        contract_stage,\n        is_stop_button_visible,\n        is_stop_button_disabled,\n        onRunButtonClick,\n        onStopBotClick,\n        performSelfExclusionCheck,\n    } = run_panel;\n    const { account_status } = client;\n    const cashier_validation = account_status?.cashier_validation;\n    const [shouldDisable, setShouldDisable] = React.useState(false);\n    const is_unavailable_for_payment_agent = cashier_validation?.includes('WithdrawServiceUnavailableForPA');\n\n    // perform self-exclusion checks which will be stored under the self-exclusion-store\n    React.useEffect(() => {\n        performSelfExclusionCheck();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    React.useEffect(() => {\n        if (shouldDisable) {\n            setTimeout(() => {\n                setShouldDisable(false);\n            }, 1000);\n        }\n    }, [shouldDisable]);\n\n    const status_classes = ['', '', ''];\n    const is_purchase_sent = contract_stage === (contract_stages.PURCHASE_SENT as unknown);\n    const is_purchase_received = contract_stage === (contract_stages.PURCHASE_RECEIVED as unknown);\n\n    let progress_status = contract_stage - (is_purchase_sent || is_purchase_received ? 2 : 3);\n\n    if (progress_status >= 0) {\n        if (progress_status < status_classes.length) {\n            status_classes[progress_status] = 'active';\n        }\n\n        if (is_contract_completed) {\n            progress_status += 1;\n        }\n\n        for (let i = 0; i < progress_status - 1; i++) {\n            status_classes[i] = 'completed';\n        }\n    }\n\n    const is_disabled = is_stop_button_disabled || shouldDisable;\n\n    const button_props = React.useMemo(() => {\n        if (is_stop_button_visible) {\n            return {\n                id: 'db-animation__stop-button',\n                class: 'animation__stop-button',\n                text: localize('Stop'),\n                icon: 'IcBotStop',\n            };\n        }\n        return {\n            id: 'db-animation__run-button',\n            class: 'animation__run-button',\n            text: localize('Run'),\n            icon: 'IcPlay',\n        };\n    }, [is_stop_button_visible]);\n    const show_overlay = should_show_overlay && is_contract_completed;\n\n    const TAB_NAMES = ['dashboard', 'bot_builder', 'charts', 'tutorials'] as const;\n    const getTabName = (index: number) => TAB_NAMES[index];\n\n    return (\n        <div className={classNames('animation__wrapper', className)}>\n            <Button\n                is_disabled={is_disabled && !is_unavailable_for_payment_agent}\n                className={button_props.class}\n                id={button_props.id}\n                text={button_props.text}\n                icon={<Icon icon={button_props.icon} color='active' />}\n                onClick={() => {\n                    setShouldDisable(true);\n                    if (is_stop_button_visible) {\n                        onStopBotClick();\n                        return;\n                    }\n                    onRunButtonClick();\n                    rudderStackSendRunBotEvent({ subpage_name: getTabName(active_tab) });\n                }}\n                has_effect\n                {...(is_stop_button_visible || !is_unavailable_for_payment_agent ? { primary: true } : { green: true })}\n            />\n            <div\n                className={classNames('animation__container', className, {\n                    'animation--running': contract_stage > 0,\n                    'animation--completed': show_overlay,\n                })}\n            >\n                {show_overlay && <ContractResultOverlay profit={profit} />}\n                <span className='animation__text'>\n                    <ContractStageText contract_stage={contract_stage} />\n                </span>\n                <div className='animation__progress'>\n                    <div className='animation__progress-line'>\n                        <div className={`animation__progress-bar animation__progress-${contract_stage}`} />\n                    </div>\n                    {status_classes.map((status_class, i) => (\n                        <CircularWrapper key={`status_class-${status_class}-${i}`} className={status_class} />\n                    ))}\n                </div>\n            </div>\n        </div>\n    );\n});\n\nexport default TradeAnimation;\n","import TradeAnimation from './trade-animation';\nimport './trade-animation.scss';\n\nexport default TradeAnimation;\n","export const popover_zindex = Object.freeze({\n    QUICK_STRATEGY: 99999,\n    TOOLBAR: 100,\n    TRANSACTION: 10,\n    SUMMARY_TOOLTIPS: 5,\n    RUN_PANEL: 8,\n});\n","import React from 'react';\nimport classNames from 'classnames';\nimport ContentLoader from 'react-content-loader';\nimport { getContractTypeName } from '@deriv/bot-skeleton';\nimport { isDbotRTL } from '@deriv/bot-skeleton/src/utils/workspace';\nimport { Icon, IconTradeTypes, Money, Popover } from '@deriv/components';\nimport { convertDateFormat } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport { TContractInfo } from 'Components/summary/summary-card.types';\nimport { popover_zindex } from 'Constants/z-indexes';\n\ntype TTransactionIconWithText = {\n    icon: React.ReactElement;\n    title: string;\n    message?: React.ReactNode;\n    className?: string;\n};\n\ntype TPopoverItem = {\n    icon?: React.ReactElement;\n    title: string;\n    children: React.ReactNode;\n};\n\ntype TPopoverContent = {\n    contract: TContractInfo;\n};\n\ntype TTransaction = {\n    contract?: TContractInfo | null;\n    onClickTransaction?: (transaction_id: null | number) => void;\n    active_transaction_id?: number | null;\n};\n\nconst TransactionIconWithText = ({ icon, title, message, className }: TTransactionIconWithText) => (\n    <React.Fragment>\n        <Popover\n            className={classNames(className, 'transactions__icon')}\n            alignment={isDbotRTL() ? 'right' : 'left'}\n            message={title}\n            zIndex={popover_zindex.TRANSACTION.toString()}\n        >\n            {icon}\n        </Popover>\n        {message}\n    </React.Fragment>\n);\n\nconst TransactionFieldLoader = () => (\n    <ContentLoader\n        className='transactions__loader-text'\n        height={10}\n        width={80}\n        speed={3}\n        backgroundColor={'var(--general-section-2)'}\n        foregroundColor={'var(--general-hover)'}\n    >\n        <rect x='0' y='0' rx='0' ry='0' width='100' height='12' />\n    </ContentLoader>\n);\n\nconst TransactionIconLoader = () => (\n    <ContentLoader\n        className='transactions__loader-icon'\n        speed={3}\n        width={24}\n        height={24}\n        backgroundColor={'var(--general-section-1)'}\n        foregroundColor={'var(--general-hover)'}\n    >\n        <rect x='0' y='0' rx='5' ry='5' width='24' height='24' />\n    </ContentLoader>\n);\n\nconst PopoverItem = ({ icon, title, children }: TPopoverItem) => (\n    <div className='transactions__popover-item'>\n        {icon && <div className='transaction__popover-icon'>{icon}</div>}\n        <div className='transactions__popover-details'>\n            <div className='transactions__popover-title'>{title}</div>\n            {children}\n        </div>\n    </div>\n);\n\nconst PopoverContent = ({ contract }: TPopoverContent) => (\n    <div className='transactions__popover-content'>\n        {contract.transaction_ids && (\n            <PopoverItem title={localize('Reference IDs')}>\n                {contract.transaction_ids.buy && (\n                    <div className='transactions__popover-value'>\n                        {`${contract.transaction_ids.buy} ${localize('(Buy)')}`}\n                    </div>\n                )}\n                {contract.transaction_ids.sell && (\n                    <div className='transactions__popover-value'>\n                        {`${contract.transaction_ids.sell} ${localize('(Sell)')}`}\n                    </div>\n                )}\n            </PopoverItem>\n        )}\n        {contract.tick_count && (\n            <PopoverItem title={localize('Duration')}>\n                <div className='transactions__popover-value'>{`${contract.tick_count} ${localize('ticks')}`}</div>\n            </PopoverItem>\n        )}\n        {(contract.barrier && (\n            <PopoverItem title={localize('Barrier')}>\n                <div className='transactions__popover-value'>{contract.barrier}</div>\n            </PopoverItem>\n        )) ||\n            (contract.high_barrier && contract.low_barrier && (\n                <PopoverItem title={localize('Barriers')}>\n                    <div className='transactions__popover-value'>{`${contract.high_barrier} ${localize(\n                        '(High)'\n                    )}`}</div>\n                    <div className='transactions__popover-value'>{`${contract.low_barrier} ${localize('(Low)')}`}</div>\n                </PopoverItem>\n            ))}\n        {contract.date_start && (\n            <PopoverItem title={localize('Start time')}>\n                <div className='transactions__popover-value'>\n                    {convertDateFormat(contract.date_start, 'YYYY-M-D HH:mm:ss [GMT]', 'YYYY-MM-DD HH:mm:ss [GMT]')}\n                </div>\n            </PopoverItem>\n        )}\n        {contract.entry_tick && (\n            <PopoverItem title={localize('Entry spot')}>\n                <div className='transactions__popover-value'>{contract.entry_tick}</div>\n                {contract.entry_tick_time && (\n                    <div className='transactions__popover-value'>\n                        {convertDateFormat(\n                            contract.entry_tick_time,\n                            'YYYY-M-D HH:mm:ss [GMT]',\n                            'YYYY-MM-DD HH:mm:ss [GMT]'\n                        )}\n                    </div>\n                )}\n            </PopoverItem>\n        )}\n        {(contract.exit_tick && contract.exit_tick_time && (\n            <PopoverItem title={localize('Exit spot')}>\n                <div className='transactions__popover-value'>{contract.exit_tick}</div>\n                <div className='transactions__popover-value'>\n                    {convertDateFormat(contract.exit_tick_time, 'YYYY-M-D HH:mm:ss [GMT]', 'YYYY-MM-DD HH:mm:ss [GMT]')}\n                </div>\n            </PopoverItem>\n        )) ||\n            (contract.exit_tick && (\n                <PopoverItem title={localize('Exit time')}>\n                    <div className='transactions__popover-value'>{contract.exit_tick}</div>\n                </PopoverItem>\n            ))}\n    </div>\n);\n\nconst Transaction = ({ contract, active_transaction_id, onClickTransaction }: TTransaction) => {\n    return (\n        <Popover\n            zIndex={popover_zindex.TRANSACTION.toString()}\n            alignment={isDbotRTL() ? 'right' : 'left'}\n            className='transactions__item-wrapper'\n            is_open={!!(contract && active_transaction_id === contract?.transaction_ids?.buy)}\n            message={contract && <PopoverContent contract={contract} />}\n        >\n            <div\n                data-testid='dt_transactions_item'\n                className='transactions__item'\n                onClick={() => onClickTransaction && onClickTransaction(contract?.transaction_ids?.buy || null)}\n            >\n                <div\n                    className='transactions__cell transactions__trade-type'\n                    data-testid='dt_transactions_item_trade_type'\n                >\n                    <div className='transactions__loader-container'>\n                        {contract ? (\n                            <TransactionIconWithText\n                                icon={<Icon icon={`IcUnderlying${contract.underlying}`} size={16} />}\n                                title={contract.display_name || ''}\n                            />\n                        ) : (\n                            <TransactionIconLoader />\n                        )}\n                    </div>\n                    <div className='transactions__loader-container'>\n                        {contract ? (\n                            <TransactionIconWithText\n                                icon={<IconTradeTypes type={contract.contract_type || ''} size={16} />}\n                                title={getContractTypeName(contract)}\n                            />\n                        ) : (\n                            <TransactionIconLoader />\n                        )}\n                    </div>\n                </div>\n                <div\n                    className='transactions__cell transactions__entry-spot'\n                    data-testid='dt_transactions_item_entry_spot'\n                >\n                    <TransactionIconWithText\n                        icon={<Icon icon='IcContractEntrySpot' />}\n                        title={localize('Entry spot')}\n                        message={contract?.entry_tick ?? <TransactionFieldLoader />}\n                    />\n                </div>\n                <div\n                    className='transactions__cell transactions__exit-spot'\n                    data-testid='dt_transactions_item_exit_spot'\n                >\n                    <TransactionIconWithText\n                        icon={<Icon icon='IcContractExitSpot' />}\n                        title={localize('Exit spot')}\n                        message={contract?.exit_tick ?? <TransactionFieldLoader />}\n                    />\n                </div>\n                <div className='transactions__cell transactions__stake' data-testid='dt_transactions_item_stake'>\n                    {contract ? (\n                        <Money amount={contract.buy_price} currency={contract.currency} show_currency />\n                    ) : (\n                        <TransactionFieldLoader />\n                    )}\n                </div>\n                <div className='transactions__cell transactions__profit' data-testid='dt_transactions_item_profit'>\n                    {contract?.is_completed ? (\n                        <div\n                            data-testid={\n                                contract?.profit && contract?.profit >= 0\n                                    ? 'dt_transactions_profit_win'\n                                    : 'dt_transactions_profit_loss'\n                            }\n                            className={classNames({\n                                'transactions__profit--win': contract?.profit && contract?.profit >= 0,\n                                'transactions__profit--loss': contract?.profit && contract?.profit < 0,\n                            })}\n                        >\n                            <Money amount={Math.abs(contract.profit || 0)} currency={contract.currency} show_currency />\n                        </div>\n                    ) : (\n                        <TransactionFieldLoader />\n                    )}\n                </div>\n            </div>\n        </Popover>\n    );\n};\n\nexport default Transaction;\n","import React from 'react';\nimport classnames from 'classnames';\nimport { CSSTransition } from 'react-transition-group';\nimport { Button, DataList, Icon, Text, ThemedScrollbars } from '@deriv/components';\nimport { useNewRowTransition } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { localize } from '@deriv/translations';\nimport Download from 'Components/download';\nimport { TContractInfo } from 'Components/summary/summary-card.types';\nimport { contract_stages } from 'Constants/contract-stage';\nimport { transaction_elements } from 'Constants/transactions';\nimport { useDBotStore } from 'Stores/useDBotStore';\nimport Transaction from './transaction';\n\ntype TTransactions = {\n    is_drawer_open: boolean;\n};\n\ntype TTransactionItem = {\n    row: {\n        type: string;\n        data: TContractInfo;\n    };\n    is_new_row?: boolean;\n    onClickTransaction?: (transaction_id: null | number) => void;\n    active_transaction_id?: number | null;\n};\n\nconst TransactionItem = ({ row, is_new_row = false, onClickTransaction, active_transaction_id }: TTransactionItem) => {\n    const { in_prop } = useNewRowTransition(is_new_row);\n    switch (row.type) {\n        case transaction_elements.CONTRACT: {\n            const { data: contract } = row;\n            return (\n                <CSSTransition in={in_prop} timeout={500} classNames='list__animation'>\n                    <Transaction\n                        contract={contract}\n                        onClickTransaction={onClickTransaction}\n                        active_transaction_id={active_transaction_id}\n                    />\n                </CSSTransition>\n            );\n        }\n        case transaction_elements.DIVIDER: {\n            return (\n                <div className='transactions__divider'>\n                    <div className='transactions__divider-line' />\n                </div>\n            );\n        }\n        default: {\n            return null;\n        }\n    }\n};\n\nconst Transactions = observer(({ is_drawer_open }: TTransactions) => {\n    const [active_transaction_id, setActiveTransactionId] = React.useState<number | null>(null);\n    const { ui } = useStore();\n    const { run_panel, transactions } = useDBotStore();\n    const { contract_stage } = run_panel;\n    const { transactions: transaction_list, toggleTransactionDetailsModal, recoverPendingContracts } = transactions;\n    const { is_desktop } = ui;\n\n    React.useEffect(() => {\n        window.addEventListener('click', onClickOutsideTransaction);\n        recoverPendingContracts();\n        return () => {\n            window.removeEventListener('click', onClickOutsideTransaction);\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    React.useEffect(() => {\n        if (active_transaction_id) {\n            setActiveTransactionId(null);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [transaction_list?.length]);\n\n    const onClickOutsideTransaction = (event: PointerEvent | MouseEvent | TouchEvent) => {\n        const path: EventTarget[] = event?.composedPath() || [];\n        const is_transaction_click = path.some(el =>\n            (el as HTMLElement).classList?.contains('transactions__item-wrapper')\n        );\n        if (!is_transaction_click) {\n            setActiveTransactionId(null);\n        }\n    };\n\n    const onClickTransaction = (transaction_id: null | number) => {\n        // Toggle transaction popover if passed transaction_id is the same.\n        if (transaction_id && active_transaction_id === transaction_id) {\n            setActiveTransactionId(null);\n        } else {\n            setActiveTransactionId(transaction_id);\n        }\n    };\n\n    return (\n        <div\n            className={classnames('transactions', {\n                'run-panel-tab__content': is_desktop,\n                'run-panel-tab__content--mobile': !is_desktop && is_drawer_open,\n            })}\n        >\n            <div className='download__container transaction-details__button-container'>\n                <Download tab='transactions' />\n                <Button\n                    id='download__container__view-detail-button'\n                    className='download__container__view-detail-button'\n                    is_disabled={!transaction_list?.length}\n                    text={localize('View Detail')}\n                    onClick={() => {\n                        toggleTransactionDetailsModal(true);\n                    }}\n                    secondary\n                />\n            </div>\n            <div className='transactions__header'>\n                <span className='transactions__header-column transactions__header-type'>{localize('Type')}</span>\n                <span className='transactions__header-column transactions__header-spot'>\n                    {localize('Entry/Exit spot')}\n                </span>\n                <span className='transactions__header-column transactions__header-profit'>\n                    {localize('Buy price and P/L')}\n                </span>\n            </div>\n            <div\n                className={classnames({\n                    transactions__content: is_desktop,\n                    'transactions__content--mobile': !is_desktop,\n                })}\n            >\n                <div className='transactions__scrollbar'>\n                    {transaction_list?.length ? (\n                        <DataList\n                            className='transactions'\n                            data_source={transaction_list}\n                            rowRenderer={props => (\n                                <TransactionItem\n                                    onClickTransaction={onClickTransaction}\n                                    active_transaction_id={active_transaction_id}\n                                    {...props}\n                                />\n                            )}\n                            keyMapper={row => {\n                                switch (row.type) {\n                                    case transaction_elements.CONTRACT: {\n                                        return row.data.transaction_ids.buy;\n                                    }\n                                    case transaction_elements.DIVIDER: {\n                                        return row.data;\n                                    }\n                                    default: {\n                                        return null;\n                                    }\n                                }\n                            }}\n                            getRowSize={({ index }) => {\n                                const row = transaction_list?.[index];\n                                switch (row.type) {\n                                    case transaction_elements.CONTRACT: {\n                                        return 50;\n                                    }\n                                    case transaction_elements.DIVIDER: {\n                                        return 21;\n                                    }\n                                    default: {\n                                        return 0;\n                                    }\n                                }\n                            }}\n                        />\n                    ) : (\n                        <>\n                            {contract_stage >= contract_stages.STARTING ? (\n                                <Transaction contract={null} />\n                            ) : (\n                                <ThemedScrollbars>\n                                    <div className='transactions-empty-box'>\n                                        <div className='transactions-empty'>\n                                            <div className='transactions-empty__icon-box'>\n                                                <Icon\n                                                    icon='IcBox'\n                                                    className='transactions-empty__icon'\n                                                    size={64}\n                                                    color='secondary'\n                                                />\n                                            </div>\n                                            <Text\n                                                as='h4'\n                                                size='xs'\n                                                weight='bold'\n                                                align='center'\n                                                color='less-prominent'\n                                                line_height='xxs'\n                                                className='transactions-empty__header'\n                                            >\n                                                {localize('There are no transactions to display')}\n                                            </Text>\n                                            <div className='transactions-empty__message'>\n                                                <Text size='xxs' color='less-prominent'>\n                                                    {localize('Here are the possible reasons:')}\n                                                </Text>\n                                                <ul className='transactions-empty__list'>\n                                                    <li>{localize('The bot is not running')}</li>\n                                                    <li>{localize('The stats are cleared')}</li>\n                                                </ul>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </ThemedScrollbars>\n                            )}\n                        </>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n});\n\nexport default Transactions;\n","import Transactions from './transactions';\nimport './transactions.scss';\n\nexport default Transactions;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Button, Drawer, Modal, Money, Tabs, Text, ThemedScrollbars } from '@deriv/components';\nimport { observer, useStore } from '@deriv/stores';\nimport { Localize, localize } from '@deriv/translations';\nimport Journal from 'Components/journal';\nimport SelfExclusion from 'Components/self-exclusion';\nimport Summary from 'Components/summary';\nimport TradeAnimation from 'Components/trade-animation';\nimport Transactions from 'Components/transactions';\nimport { DBOT_TABS } from 'Constants/bot-contents';\nimport { popover_zindex } from 'Constants/z-indexes';\nimport { useDBotStore } from 'Stores/useDBotStore';\n\ntype TStatisticsTile = {\n    content: React.ElementType | string;\n    contentClassName: string;\n    title: string;\n};\n\ntype TStatisticsSummary = {\n    currency: string;\n    is_mobile: boolean;\n    lost_contracts: number;\n    number_of_runs: number;\n    total_stake: number;\n    total_payout: number;\n    toggleStatisticsInfoModal: () => void;\n    total_profit: number;\n    won_contracts: number;\n};\ntype TDrawerHeader = {\n    is_clear_stat_disabled: boolean;\n    is_mobile: boolean;\n    is_drawer_open: boolean;\n    onClearStatClick: () => void;\n};\n\ntype TDrawerContent = {\n    active_index: number;\n    is_drawer_open: boolean;\n    active_tour: string;\n    setActiveTabIndex: () => void;\n};\n\ntype TDrawerFooter = {\n    is_clear_stat_disabled: boolean;\n    onClearStatClick: () => void;\n};\n\ntype TStatisticsInfoModal = {\n    is_mobile: boolean;\n    is_statistics_info_modal_open: boolean;\n    toggleStatisticsInfoModal: () => void;\n};\n\nconst StatisticsTile = ({ content, contentClassName, title }: TStatisticsTile) => (\n    <div className='run-panel__tile'>\n        <div className='run-panel__tile-title'>{title}</div>\n        <div className={classNames('run-panel__tile-content', contentClassName)}>{content}</div>\n    </div>\n);\n\nexport const StatisticsSummary = ({\n    currency,\n    is_mobile,\n    lost_contracts,\n    number_of_runs,\n    total_stake,\n    total_payout,\n    toggleStatisticsInfoModal,\n    total_profit,\n    won_contracts,\n}: TStatisticsSummary) => (\n    <div\n        className={classNames('run-panel__stat', {\n            'run-panel__stat--mobile': is_mobile,\n        })}\n    >\n        <div className='run-panel__stat--info' onClick={toggleStatisticsInfoModal}>\n            <div className='run-panel__stat--info-item'>\n                <Localize i18n_default_text=\"What's this?\" />\n            </div>\n        </div>\n        <div className='run-panel__stat--tiles'>\n            <StatisticsTile\n                title={localize('Total stake')}\n                alignment='top'\n                content={<Money amount={total_stake} currency={currency} show_currency />}\n            />\n            <StatisticsTile\n                title={localize('Total payout')}\n                alignment='top'\n                content={<Money amount={total_payout} currency={currency} show_currency />}\n            />\n            <StatisticsTile title={localize('No. of runs')} alignment='top' content={number_of_runs} />\n            <StatisticsTile title={localize('Contracts lost')} alignment='bottom' content={lost_contracts} />\n            <StatisticsTile title={localize('Contracts won')} alignment='bottom' content={won_contracts} />\n            <StatisticsTile\n                title={localize('Total profit/loss')}\n                content={<Money amount={total_profit} currency={currency} has_sign show_currency />}\n                alignment='bottom'\n                contentClassName={classNames('run-panel__stat-amount', {\n                    'run-panel__stat-amount--positive': total_profit > 0,\n                    'run-panel__stat-amount--negative': total_profit < 0,\n                })}\n            />\n        </div>\n    </div>\n);\n\nconst DrawerHeader = ({ is_clear_stat_disabled, is_mobile, is_drawer_open, onClearStatClick }: TDrawerHeader) =>\n    is_mobile &&\n    is_drawer_open && (\n        <Button\n            id='db-run-panel__clear-button'\n            className='run-panel__clear-button'\n            is_disabled={is_clear_stat_disabled}\n            text={localize('Reset')}\n            onClick={onClearStatClick}\n            secondary\n        />\n    );\n\nconst DrawerContent = ({ active_index, is_drawer_open, active_tour, setActiveTabIndex, ...props }: TDrawerContent) => {\n    return (\n        <>\n            <Tabs active_index={active_index} onTabItemClick={setActiveTabIndex} top>\n                <div id='db-run-panel-tab__summary' label={localize('Summary')}>\n                    <Summary is_drawer_open={is_drawer_open} />\n                </div>\n                <div id='db-run-panel-tab__transactions' label={localize('Transactions')}>\n                    <Transactions is_drawer_open={is_drawer_open} />\n                </div>\n                <div id='db-run-panel-tab__journal' label={localize('Journal')}>\n                    <Journal />\n                </div>\n            </Tabs>\n            {((is_drawer_open && active_index !== 2) || active_tour) && <StatisticsSummary {...props} />}\n        </>\n    );\n};\n\nconst DrawerFooter = ({ is_clear_stat_disabled, onClearStatClick }: TDrawerFooter) => (\n    <div className='run-panel__footer'>\n        <Button\n            id='db-run-panel__clear-button'\n            className='run-panel__footer-button'\n            is_disabled={is_clear_stat_disabled}\n            text={localize('Reset')}\n            onClick={onClearStatClick}\n            has_effect\n            secondary\n        />\n    </div>\n);\n\nconst MobileDrawerFooter = () => {\n    return (\n        <div className='controls__section'>\n            <div className='controls__buttons'>\n                <TradeAnimation className='controls__animation' should_show_overlay />\n            </div>\n        </div>\n    );\n};\n\nconst StatisticsInfoModal = ({\n    is_mobile,\n    is_statistics_info_modal_open,\n    toggleStatisticsInfoModal,\n}: TStatisticsInfoModal) => {\n    return (\n        <Modal\n            className={classNames('statistics__modal', { 'statistics__modal--mobile': is_mobile })}\n            title={localize(\"What's this?\")}\n            is_open={is_statistics_info_modal_open}\n            toggleModal={toggleStatisticsInfoModal}\n            width={'440px'}\n        >\n            <Modal.Body>\n                <div className={classNames('statistics__modal-body', { 'statistics__modal-body--mobile': is_mobile })}>\n                    <ThemedScrollbars className='statistics__modal-scrollbar'>\n                        <Text as='p' weight='bold' className='statistics__modal-body--content no-margin'>\n                            {localize('Total stake')}\n                        </Text>\n                        <Text as='p'>{localize('Total stake since you last cleared your stats.')}</Text>\n                        <Text as='p' weight='bold' className='statistics__modal-body--content'>\n                            {localize('Total payout')}\n                        </Text>\n                        <Text as='p'>{localize('Total payout since you last cleared your stats.')}</Text>\n                        <Text as='p' weight='bold' className='statistics__modal-body--content'>\n                            {localize('No. of runs')}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'The number of times your bot has run since you last cleared your stats. Each run includes the execution of all the root blocks.'\n                            )}\n                        </Text>\n                        <Text as='p' weight='bold' className='statistics__modal-body--content'>\n                            {localize('Contracts lost')}\n                        </Text>\n                        <Text as='p'>\n                            {localize('The number of contracts you have lost since you last cleared your stats.')}\n                        </Text>\n                        <Text as='p' weight='bold' className='statistics__modal-body--content'>\n                            {localize('Contracts won')}\n                        </Text>\n                        <Text as='p'>\n                            {localize('The number of contracts you have won since you last cleared your stats.')}\n                        </Text>\n                        <Text as='p' weight='bold' className='statistics__modal-body--content'>\n                            {localize('Total profit/loss')}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'Your total profit/loss since you last cleared your stats. It is the difference between your total payout and your total stake.'\n                            )}\n                        </Text>\n                    </ThemedScrollbars>\n                </div>\n            </Modal.Body>\n        </Modal>\n    );\n};\n\nconst RunPanel = observer(() => {\n    const { run_panel, dashboard, transactions } = useDBotStore();\n    const {\n        client,\n        ui: { is_desktop },\n    } = useStore();\n    const { currency } = client;\n    const {\n        active_index,\n        is_drawer_open,\n        is_statistics_info_modal_open,\n        is_clear_stat_disabled,\n        onClearStatClick,\n        onMount,\n        onRunButtonClick,\n        onUnmount,\n        setActiveTabIndex,\n        toggleDrawer,\n        toggleStatisticsInfoModal,\n    } = run_panel;\n    const { statistics } = transactions;\n    const { active_tour, active_tab } = dashboard;\n    const { total_payout, total_profit, total_stake, won_contracts, lost_contracts, number_of_runs } = statistics;\n    const { BOT_BUILDER, CHART } = DBOT_TABS;\n\n    React.useEffect(() => {\n        onMount();\n        return () => onUnmount();\n    }, [onMount, onUnmount]);\n\n    React.useEffect(() => {\n        if (!is_desktop) {\n            toggleDrawer(false);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const content = (\n        <DrawerContent\n            active_index={active_index}\n            currency={currency}\n            is_drawer_open={is_drawer_open}\n            is_mobile={!is_desktop}\n            lost_contracts={lost_contracts}\n            number_of_runs={number_of_runs}\n            setActiveTabIndex={setActiveTabIndex}\n            toggleStatisticsInfoModal={toggleStatisticsInfoModal}\n            total_payout={total_payout}\n            total_profit={total_profit}\n            total_stake={total_stake}\n            won_contracts={won_contracts}\n            active_tour={active_tour}\n        />\n    );\n\n    const footer = <DrawerFooter is_clear_stat_disabled={is_clear_stat_disabled} onClearStatClick={onClearStatClick} />;\n\n    const header = (\n        <DrawerHeader\n            is_clear_stat_disabled={is_clear_stat_disabled}\n            is_mobile={!is_desktop}\n            is_drawer_open={is_drawer_open}\n            onClearStatClick={onClearStatClick}\n        />\n    );\n\n    const show_run_panel = [BOT_BUILDER, CHART].includes(active_tab) || active_tour;\n    if ((!show_run_panel && is_desktop) || active_tour === 'bot_builder') return null;\n\n    return (\n        <>\n            <div className={!is_desktop && is_drawer_open ? 'run-panel__container--mobile' : 'run-panel'}>\n                <Drawer\n                    anchor='right'\n                    className={classNames('run-panel', {\n                        'run-panel__container': is_desktop,\n                        'run-panel__container--tour-active': is_desktop && active_tour,\n                    })}\n                    contentClassName='run-panel__content'\n                    header={header}\n                    footer={is_desktop && footer}\n                    is_open={is_drawer_open}\n                    toggleDrawer={toggleDrawer}\n                    width={366}\n                    zIndex={popover_zindex.RUN_PANEL}\n                >\n                    {content}\n                </Drawer>\n                {!is_desktop && <MobileDrawerFooter />}\n            </div>\n            <SelfExclusion onRunButtonClick={onRunButtonClick} />\n            <StatisticsInfoModal\n                is_mobile={!is_desktop}\n                is_statistics_info_modal_open={is_statistics_info_modal_open}\n                toggleStatisticsInfoModal={toggleStatisticsInfoModal}\n            />\n        </>\n    );\n});\n\nexport default RunPanel;\n","import React, { ReactElement } from 'react';\nimport classNames from 'classnames';\nimport ContentLoader from 'react-content-loader';\nimport { getContractTypeName } from '@deriv/bot-skeleton';\nimport { isDbotRTL } from '@deriv/bot-skeleton/src/utils/workspace';\nimport { Icon, IconTradeTypes, Popover } from '@deriv/components';\nimport { convertDateFormat } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport { TTransaction } from './transaction-details.types';\n\nconst PARENT_CLASS = 'transaction-details-modal-mobile';\n\ntype TCardRow = {\n    title: string;\n    label: string | number | ReactElement;\n    right_aligned: boolean;\n    large_title: boolean;\n    loader: boolean;\n};\n\nconst CellLoader = () => (\n    <ContentLoader\n        className='transactions__loader-text'\n        data-testid='transaction_details_card_cell_loader'\n        height={10}\n        width={80}\n        speed={3}\n        foregroundColor={'var(--general-section-2)'}\n        backgroundColor={'var(--general-hover)'}\n    >\n        <rect x='0' y='0' rx='0' ry='0' width='100' height='12' />\n    </ContentLoader>\n);\n\nconst CardColumn = ({\n    label = '',\n    large_title = false,\n    right_aligned = false,\n    title = '',\n    loader = false,\n}: Partial<TCardRow>) => (\n    <div\n        className={classNames(`${PARENT_CLASS}__card__column`, {\n            [`${PARENT_CLASS}__right-align`]: right_aligned,\n        })}\n    >\n        {title && (\n            <div\n                className={classNames({\n                    [`${PARENT_CLASS}__small-title`]: !large_title,\n                    [`${PARENT_CLASS}__large-title`]: large_title,\n                })}\n            >\n                {localize(title)}\n            </div>\n        )}\n        <div className={`${PARENT_CLASS}__label`}>{loader ? <CellLoader /> : label}</div>\n    </div>\n);\n\nconst IconContainer = ({ message, icon }: { message: string; icon: ReactElement }) => (\n    <div className={classNames(`${PARENT_CLASS}__table-cell`, `${PARENT_CLASS}__table-cell__icon-wrapper`)}>\n        {message && (\n            <Popover alignment={isDbotRTL() ? 'left' : 'right'} message={message} zIndex='7'>\n                {icon}\n            </Popover>\n        )}\n    </div>\n);\n\nexport default function MobileTransactionCards({ transaction }: { transaction: TTransaction }) {\n    return (\n        <div className={`${PARENT_CLASS}__card`} data-testid='dt_mobile_transaction_card'>\n            <div className={`${PARENT_CLASS}__card__row`}>\n                <CardColumn\n                    label={\n                        <div className={`${PARENT_CLASS}__icon-wrapper`}>\n                            <IconContainer\n                                message={transaction?.display_name}\n                                icon={<Icon icon={`IcUnderlying${transaction?.underlying}`} size={32} />}\n                            />\n                            <IconContainer\n                                message={getContractTypeName(transaction)}\n                                icon={<IconTradeTypes type={transaction?.contract_type} size={24} />}\n                            />\n                        </div>\n                    }\n                />\n            </div>\n            <div className={`${PARENT_CLASS}__card__row`}>\n                <CardColumn title='Ref. ID' label={transaction?.transaction_ids?.buy} />\n            </div>\n            <div className={`${PARENT_CLASS}__card__row`}>\n                <CardColumn\n                    title='Timestamp'\n                    label={convertDateFormat(\n                        transaction?.date_start,\n                        'YYYY-M-D HH:mm:ss [GMT]',\n                        'YYYY-MM-DD HH:mm:ss [GMT]'\n                    )}\n                />\n                <CardColumn\n                    title='Entry Spot'\n                    label={transaction?.entry_tick}\n                    right_aligned\n                    loader={!transaction.entry_tick}\n                />\n            </div>\n            <div className={`${PARENT_CLASS}__card__row`}>\n                <CardColumn title='Buy Price' label={Math.abs(transaction?.buy_price ?? 0).toFixed(2)} />\n                <CardColumn\n                    title='Exit Spot'\n                    label={transaction?.exit_tick}\n                    right_aligned\n                    loader={!transaction.exit_tick}\n                />\n            </div>\n\n            <div className={`${PARENT_CLASS}__card__row`}>\n                <CardColumn title='Profit / Loss' large_title />\n                <CardColumn\n                    label={\n                        <div\n                            className={classNames({\n                                [`${PARENT_CLASS}__card__profit--win`]: transaction?.profit > 0,\n                                [`${PARENT_CLASS}__card__profit--loss`]: transaction?.profit < 0,\n                            })}\n                        >\n                            {Math.abs(transaction?.profit ?? 0).toFixed(2)}\n                        </div>\n                    }\n                    right_aligned\n                    loader={!transaction.is_completed}\n                />\n            </div>\n        </div>\n    );\n}\n","import React from 'react';\nimport { MobileFullPageModal } from '@deriv/components';\nimport { observer, useStore } from '@deriv/stores';\nimport { localize } from '@deriv/translations';\nimport { StatisticsSummary } from 'Components/run-panel/run-panel';\nimport { transaction_elements } from 'Constants/transactions';\nimport { useDBotStore } from 'Stores/useDBotStore';\nimport MobileTransactionCards from './mobile-transaction-card';\nimport { TRunPanelStore } from './transaction-details.types';\nimport './transaction-details-mobile.scss';\n\nconst TransactionDetailsMobile = observer(() => {\n    const { client } = useStore();\n    const { transactions, run_panel } = useDBotStore();\n    const {\n        toggleTransactionDetailsModal,\n        is_transaction_details_modal_open,\n        transactions: transaction_list,\n        statistics,\n    } = transactions;\n\n    const { toggleStatisticsInfoModal }: Partial<TRunPanelStore> = run_panel;\n\n    return (\n        <MobileFullPageModal\n            is_modal_open={is_transaction_details_modal_open}\n            className='transaction-details-modal-mobile'\n            header={localize('Transactions detailed summary')}\n            onClickClose={() => {\n                toggleTransactionDetailsModal(false);\n            }}\n            height_offset='80px'\n        >\n            <div className='transaction-details-modal-mobile__wrapper' data-testid='transaction_details_cards'>\n                {transaction_list?.map(({ data, type }) => {\n                    if (type === transaction_elements.CONTRACT)\n                        return <MobileTransactionCards transaction={data} key={data?.transaction_ids?.buy} />;\n                    return (\n                        <div\n                            className='transaction-details-modal-mobile__divider'\n                            key={`transaction-row-divider-${data}`}\n                        >\n                            <div className='transactions__divider-line' />\n                        </div>\n                    );\n                })}\n            </div>\n            <div className='transaction-details-modal-mobile__card__footer'>\n                <StatisticsSummary\n                    is_mobile\n                    currency={client?.currency}\n                    lost_contracts={statistics?.lost_contracts ?? 0}\n                    number_of_runs={statistics?.number_of_runs ?? 0}\n                    total_payout={statistics?.total_payout ?? 0}\n                    total_profit={statistics?.total_profit ?? 0}\n                    total_stake={statistics?.total_stake ?? 0}\n                    won_contracts={statistics?.won_contracts ?? 0}\n                    toggleStatisticsInfoModal={toggleStatisticsInfoModal}\n                />\n            </div>\n        </MobileFullPageModal>\n    );\n});\n\nexport default TransactionDetailsMobile;\n","import TransactionDetails from './transaction-details';\n\nexport default TransactionDetails;\n","import React, { Suspense } from 'react';\nimport { Loading } from '@deriv/components';\nimport { observer, useStore } from '@deriv/stores';\nimport TransactionDetailsDesktop from './transaction-details-desktop';\nimport TransactionDetailsMobile from './transaction-details-mobile';\n\nexport const TransactionDetails = observer(() => {\n    const {\n        ui: { is_desktop },\n    } = useStore();\n    return (\n        <Suspense fallback={<Loading />}>\n            {is_desktop ? <TransactionDetailsDesktop /> : <TransactionDetailsMobile />}\n        </Suspense>\n    );\n});\n\nexport default TransactionDetails;\n","import Audio from './audio';\n\nexport default Audio;\n","import React from 'react';\n\nconst Audio = () => (\n    <>\n        <audio id='announcement' aria-label='audio' src={`${__webpack_public_path__}media/announcement.mp3`} />\n        <audio id='earned-money' aria-label='audio' src={`${__webpack_public_path__}media/coins.mp3`} />\n        <audio id='job-done' aria-label='audio' src={`${__webpack_public_path__}media/job-done.mp3`} />\n        <audio id='error' aria-label='audio' src={`${__webpack_public_path__}media/out-of-bounds.mp3`} />\n        <audio id='severe-error' aria-label='audio' src={`${__webpack_public_path__}media/i-am-being-serious.mp3`} />\n    </>\n);\n\nexport default Audio;\n","import BlocklyLoading from './blockly-loading';\nimport './blockly-loading.scss';\n\nexport default BlocklyLoading;\n","import React from 'react';\nimport { Loading } from '@deriv/components';\nimport { observer } from '@deriv/stores';\nimport { useDBotStore } from '../../stores/useDBotStore';\n\nconst BlocklyLoading = observer(() => {\n    const { blockly_store } = useDBotStore();\n    const { is_loading } = blockly_store;\n    return (\n        <>\n            {is_loading && (\n                <div className='bot__loading' data-testid='blockly-loader'>\n                    <Loading />\n                </div>\n            )}\n        </>\n    );\n});\n\nexport default BlocklyLoading;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { observer, useStore } from '@deriv/stores';\nimport { DBOT_TABS } from 'Constants/bot-contents';\nimport { useDBotStore } from 'Stores/useDBotStore';\n\nconst { BOT_BUILDER, CHART } = DBOT_TABS;\n\nconst BotNotificationMessages = observer(() => {\n    const { ui } = useStore();\n    const { run_panel, dashboard } = useDBotStore();\n\n    const { is_drawer_open } = run_panel;\n    const Notifications = ui.notification_messages_ui;\n    const { active_tab, is_info_panel_visible } = dashboard;\n\n    return (\n        <div\n            className={classNames('notifications-container', {\n                'notifications-container__dashboard': active_tab === 0 && is_info_panel_visible,\n                'notifications-container--panel-open': [BOT_BUILDER, CHART].includes(active_tab) && is_drawer_open,\n            })}\n            data-testid='dt_notifications_container'\n        >\n            <Notifications />\n        </div>\n    );\n});\n\nexport default BotNotificationMessages;\n","import BotNotificationMessages from './bot-notification-messages';\nimport './bot-notification-messages.scss';\n\nexport default BotNotificationMessages;\n","import React from 'react';\nimport { Dialog, Icon, Text } from '@deriv/components';\nimport { observer } from '@deriv/stores';\nimport { localize } from '@deriv/translations';\nimport { useDBotStore } from 'Stores/useDBotStore';\n\nconst BotStopped = observer(() => {\n    const { dashboard } = useDBotStore();\n    const { is_web_socket_intialised } = dashboard;\n    const onClickClose = () => {\n        location.reload();\n    };\n    return (\n        <Dialog\n            is_visible={!is_web_socket_intialised}\n            is_mobile_full_width\n            className={'dc-dialog bot-stopped-dialog'}\n            cancel_button_text={localize('Go to Reports')}\n            confirm_button_text={localize('Back to Bot')}\n            onCancel={() => location.replace('reports/positions')}\n            onConfirm={() => location.reload()}\n        >\n            <div className='dc-dialog__content__header'>\n                <Text data-testid='data-title' weight='bold' as='p' align='left' size='s' color='prominent'>\n                    {localize(\"You're back online\")}\n                </Text>\n                <div\n                    data-testid='data-close-button'\n                    onClick={onClickClose}\n                    onKeyDown={(e: React.KeyboardEvent) => {\n                        if (e.key === 'Enter') {\n                            onClickClose();\n                        }\n                    }}\n                    tabIndex={0}\n                >\n                    <Icon icon='IcCross' />\n                </div>\n            </div>\n            <Text as='p' align='left' size='xs' color='prominent'>\n                {localize(\n                    'The bot has stopped, but your trade may still be running. You can check it on the Reports page.'\n                )}\n            </Text>\n        </Dialog>\n    );\n});\n\nexport default BotStopped;\n","import React from 'react';\nimport classNames from 'classnames';\nimport ReactDOM from 'react-dom';\nimport { Toast } from '@deriv/components';\nimport { observer, useStore } from '@deriv/stores';\n\n// TODO: Need to sanitize,\n// Same sort of component is being used inside DTrader,\n// In Future we might move the `NetworkStatusToastError` to the core packages for resuability.\n\n/**\n * Network status Toast components\n */\n\nconst NetworkStatusToastError = observer(({ should_open = false }: { should_open?: boolean }) => {\n    const { common, ui } = useStore();\n    const { network_status } = common;\n    const [is_open, setIsOpen] = React.useState(should_open);\n    const { message, status } = network_status;\n    const portal_el = document.getElementById('popup_root');\n    const { is_desktop } = ui;\n\n    if (!portal_el || !message) return null;\n\n    if (!is_open && status !== 'online') {\n        setIsOpen(true); // open if status === 'blinker' or 'offline'\n    } else if (is_open && status === 'online') {\n        setTimeout(() => {\n            setIsOpen(false);\n        }, 1500);\n    }\n\n    return ReactDOM.createPortal(\n        !is_desktop && (\n            <Toast\n                className={classNames({\n                    'dc-toast--blinker': status === 'blinker',\n                })}\n                is_open={is_open}\n                timeout={0}\n                type='error'\n            >\n                {message}\n            </Toast>\n        ),\n        portal_el\n    );\n});\n\nexport default NetworkStatusToastError;\n","import NetworkToastPopup from './network-toast-popup';\n\nexport default NetworkToastPopup;\n","import React from 'react';\nimport { Dialog } from '@deriv/components';\nimport { observer } from '@deriv/stores';\nimport { Localize, localize } from '@deriv/translations';\nimport { useDBotStore } from 'Stores/useDBotStore';\n\nconst RoutePromptDialog = observer(() => {\n    const { route_prompt_dialog } = useDBotStore();\n    const { continueRoute, should_show, is_confirmed, last_location, onCancel, onConfirm } = route_prompt_dialog;\n\n    React.useEffect(continueRoute, [is_confirmed, last_location, continueRoute]);\n\n    return (\n        <Dialog\n            title={localize('Leaving already?')}\n            confirm_button_text={localize(\"Yes, I'll come back later\")}\n            cancel_button_text={localize(\"No, I'll stay\")}\n            onConfirm={onConfirm}\n            onCancel={onCancel}\n            is_visible={should_show}\n            has_close_icon={false}\n        >\n            <Localize i18n_default_text='If you leave, your current contract will be completed, but your bot will stop running immediately.' />\n        </Dialog>\n    );\n});\n\nexport default RoutePromptDialog;\n","import RoutePromptDialog from './route-prompt-dialog';\n\nexport default RoutePromptDialog;\n","import React from 'react';\nimport classnames from 'classnames';\nimport { Button, Icon, StaticUrl } from '@deriv/components';\nimport { observer, useStore } from '@deriv/stores';\nimport { Localize } from '@deriv/translations';\nimport { useDBotStore } from 'Stores/useDBotStore';\nimport {\n    rudderStackSendGoogleDriveConnectEvent,\n    rudderStackSendGoogleDriveDisconnectEvent,\n} from '../../../analytics/rudderstack-common-events';\nimport './google-drive.scss';\n\nconst GoogleDrive: React.FC = observer(() => {\n    const { ui } = useStore();\n    const { google_drive, load_modal } = useDBotStore();\n    const { is_authorised, signIn, signOut } = google_drive;\n    const { is_open_button_loading, onDriveOpen } = load_modal;\n    const { is_desktop } = ui;\n\n    return (\n        <div className='load-strategy__container' data-testid='dt_google_drive'>\n            <div className='load-strategy__google-drive'>\n                <Icon\n                    icon={'IcGoogleDrive'}\n                    className={classnames('load-strategy__google-drive-icon', {\n                        'load-strategy__google-drive-icon--disabled': !is_authorised,\n                    })}\n                    size={is_desktop ? 128 : 96}\n                />\n                <div className='load-strategy__google-drive-connected-text'>\n                    {is_authorised ? (\n                        <Localize i18n_default_text='You are connected to Google Drive' />\n                    ) : (\n                        'Google Drive'\n                    )}\n                </div>\n                {is_authorised ? (\n                    <Button.Group>\n                        <Button\n                            onClick={() => {\n                                signOut();\n                                rudderStackSendGoogleDriveDisconnectEvent();\n                            }}\n                            has_effect\n                            secondary\n                            large\n                        >\n                            <Localize i18n_default_text='Disconnect' />\n                        </Button>\n                        <Button\n                            onClick={() => {\n                                onDriveOpen();\n                            }}\n                            is_loading={is_open_button_loading}\n                            has_effect\n                            primary\n                            large\n                        >\n                            <Localize i18n_default_text='Open' />\n                        </Button>\n                    </Button.Group>\n                ) : (\n                    <React.Fragment>\n                        <div className='load-strategy__google-drive-terms'>\n                            <div className='load-strategy__google-drive-text'>\n                                <Localize i18n_default_text=\"To import your bot from your Google Drive, you'll need to sign in to your Google account.\" />\n                            </div>\n                            <div className='load-strategy__google-drive-text'>\n                                <Localize\n                                    i18n_default_text='To know how Google Drive handles your data, please review Deriv’s <0>Privacy policy.</0>'\n                                    components={[\n                                        <StaticUrl\n                                            key={0}\n                                            className='link'\n                                            href='tnc/security-and-privacy.pdf'\n                                            is_document\n                                        />,\n                                    ]}\n                                />\n                            </div>\n                        </div>\n                        <Button\n                            onClick={() => {\n                                signIn();\n                                rudderStackSendGoogleDriveConnectEvent();\n                            }}\n                            has_effect\n                            primary\n                            large\n                        >\n                            <Localize i18n_default_text='Sign in' />\n                        </Button>\n                    </React.Fragment>\n                )}\n            </div>\n        </div>\n    );\n});\n\nexport default GoogleDrive;\n","import GoogleDrive from './google-drive';\n\nexport default GoogleDrive;\n","import React from 'react';\nimport { Button } from '@deriv/components';\nimport { observer, useStore } from '@deriv/stores';\nimport { localize } from '@deriv/translations';\nimport { NOTIFICATION_TYPE } from 'Components/bot-notification/bot-notification-utils';\nimport { useDBotStore } from 'Stores/useDBotStore';\n\nconst LocalFooter = observer(() => {\n    const { ui } = useStore();\n    const { load_modal, dashboard } = useDBotStore();\n    const {\n        is_open_button_loading,\n        is_open_button_disabled,\n        loadStrategyOnBotBuilder,\n        setLoadedLocalFile,\n        saveStrategyToLocalStorage,\n        toggleLoadModal,\n    } = load_modal;\n    const { setOpenSettings, setPreviewOnPopup } = dashboard;\n\n    const { is_desktop } = ui;\n    const Wrapper = is_desktop ? React.Fragment : Button.Group;\n\n    return (\n        <Wrapper>\n            {!is_desktop && (\n                <Button text={localize('Cancel')} onClick={() => setLoadedLocalFile(null)} has_effect secondary large />\n            )}\n            <Button\n                text={localize('Open')}\n                onClick={() => {\n                    loadStrategyOnBotBuilder();\n                    saveStrategyToLocalStorage();\n                    setLoadedLocalFile(null);\n                    toggleLoadModal();\n                    setPreviewOnPopup(false);\n                    setOpenSettings(NOTIFICATION_TYPE.BOT_IMPORT);\n                }}\n                is_loading={is_open_button_loading}\n                has_effect\n                primary\n                large\n                disabled={is_open_button_disabled}\n            />\n        </Wrapper>\n    );\n});\n\nexport default LocalFooter;\n","import SectionMessage from './section-message';\nimport './section-message.scss';\n\nexport default SectionMessage;\n","import React from 'react';\nimport { Icon, Text } from '@deriv/components';\n\ntype TSectionMessage = {\n    icon: string;\n    message: string;\n    className?: string;\n};\n\nconst SectionMessage: React.FC<TSectionMessage> = ({ icon, message, className }) => {\n    return (\n        <div className={className}>\n            {icon && (\n                <span className='icon'>\n                    <Icon icon={icon} />\n                </span>\n            )}\n            <span className='text'>\n                <Text size='xs'>{message}</Text>\n            </span>\n        </div>\n    );\n};\n\nexport default SectionMessage;\n","import React from 'react';\nimport { Icon } from '@deriv/components';\nimport { observer } from '@deriv/stores';\nimport { useDBotStore } from 'Stores/useDBotStore';\n\ntype TWorkspaceControlProps = {\n    mockZoomInOut?: (is_zoom_in: boolean) => void;\n};\n\nconst WorkspaceControl = observer(({ mockZoomInOut }: TWorkspaceControlProps) => {\n    const { dashboard } = useDBotStore();\n    const { onZoomInOutClick } = dashboard;\n\n    return (\n        <div className='load-strategy__preview-workspace-controls'>\n            <Icon\n                icon={'IcAddRounded'}\n                className='load-strategy__preview-workspace-icon'\n                onClick={() => {\n                    mockZoomInOut ? mockZoomInOut(true) : onZoomInOutClick(true);\n                }}\n                data_testid='zoom-in'\n            />\n            <Icon\n                icon={'IcMinusRounded'}\n                className='load-strategy__preview-workspace-icon'\n                onClick={() => {\n                    mockZoomInOut ? mockZoomInOut(false) : onZoomInOutClick(false);\n                }}\n                data_testid='zoom-out'\n            />\n        </div>\n    );\n});\n\nexport default WorkspaceControl;\n","import React, { useEffect } from 'react';\nimport classNames from 'classnames';\nimport { Button, Icon } from '@deriv/components';\nimport { observer, useStore } from '@deriv/stores';\nimport { Localize, localize } from '@deriv/translations';\nimport { botNotification } from 'Components/bot-notification/bot-notification';\nimport { notification_message } from 'Components/bot-notification/bot-notification-utils';\nimport { useDBotStore } from 'Stores/useDBotStore';\nimport LocalFooter from './local-footer';\nimport SectionMessage from './section-message';\nimport WorkspaceControl from './workspace-control';\n\nconst LocalComponent = observer(() => {\n    const { ui } = useStore();\n    const { dashboard, load_modal, blockly_store } = useDBotStore();\n    const { active_tab, active_tour } = dashboard;\n    const { handleFileChange, loaded_local_file, setLoadedLocalFile, imported_strategy_type, is_open_button_loading } =\n        load_modal;\n\n    const file_input_ref = React.useRef<HTMLInputElement>(null);\n    const [is_file_supported, setIsFileSupported] = React.useState(true);\n    const { is_desktop } = ui;\n    const { is_loading } = blockly_store;\n\n    useEffect(() => {\n        if (loaded_local_file && is_file_supported && imported_strategy_type !== 'pending' && !is_loading) {\n            if (imported_strategy_type === 'old') {\n                botNotification(notification_message.strategy_conversion, undefined, {\n                    closeButton: false,\n                });\n            }\n        }\n    }, [loaded_local_file, is_file_supported, imported_strategy_type, is_open_button_loading, is_loading]);\n\n    if (loaded_local_file && is_file_supported) {\n        return (\n            <div className='load-strategy__container load-strategy__container--has-footer'>\n                <div\n                    className={classNames('load-strategy__local-preview', {\n                        'load-strategy__local-preview--active': active_tab === 1 && active_tour,\n                    })}\n                >\n                    <div className='load-strategy__title'>\n                        <Localize i18n_default_text='Preview' />\n                    </div>\n                    <div className='load-strategy__preview-workspace'>\n                        <div id='load-strategy__blockly-container' style={{ height: '100%' }}>\n                            <div className='load-strategy__local-preview-close'>\n                                <Icon\n                                    data_testid='dt_load-strategy__local-preview-close'\n                                    icon='IcCross'\n                                    onClick={() => setLoadedLocalFile(null)}\n                                />\n                            </div>\n                            <WorkspaceControl />\n                        </div>\n                    </div>\n                </div>\n                {!is_desktop && (\n                    <div className='load-strategy__local-footer'>\n                        <LocalFooter />\n                    </div>\n                )}\n            </div>\n        );\n    }\n\n    return (\n        <div className='load-strategy__container'>\n            <div className='load-strategy__local-dropzone'>\n                <input\n                    type='file'\n                    ref={file_input_ref}\n                    accept='application/xml, text/xml'\n                    style={{ display: 'none' }}\n                    onChange={e => setIsFileSupported(handleFileChange(e, false))}\n                    data-testid='dt-load-strategy-file-input'\n                />\n\n                <SectionMessage\n                    message={localize(\n                        'Importing XML files from Binary Bot and other third-party platforms may take longer.'\n                    )}\n                    icon='IcInfoOutline'\n                    className='load-strategy__section_message'\n                />\n\n                <div\n                    data-testid='dt__local-dropzone-area'\n                    className='load-strategy__local-dropzone-area'\n                    onDrop={e => {\n                        handleFileChange(e, false);\n                    }}\n                >\n                    {is_desktop ? (\n                        <React.Fragment>\n                            <Icon icon='IcPc' className='load-strategy__local-icon' size={is_desktop ? 128 : 96} />\n                            <div className='load-strategy__local-title'>\n                                <Localize i18n_default_text='Drag your XML file here' />\n                            </div>\n                            <div className='load-strategy__local-description'>\n                                <Localize i18n_default_text='or, if you prefer...' />\n                            </div>\n                        </React.Fragment>\n                    ) : (\n                        <Icon icon='IcLocal' className='load-strategy__local-icon' size={is_desktop ? 128 : 96} />\n                    )}\n                    <Button\n                        text={\n                            is_file_supported\n                                ? localize('Select an XML file from your device')\n                                : localize('Please upload an XML file')\n                        }\n                        data-testid='dt_load-strategy__local-upload'\n                        onClick={() => file_input_ref?.current?.click()}\n                        has_effect\n                        primary\n                        large\n                    />\n                </div>\n            </div>\n        </div>\n    );\n});\n\nexport default LocalComponent;\n","import React from 'react';\nimport classnames from 'classnames';\nimport { timeSince } from '@deriv/bot-skeleton';\nimport { save_types } from '@deriv/bot-skeleton/src/constants/save-type';\nimport { Icon } from '@deriv/components';\nimport { observer } from '@deriv/stores';\nimport { useDBotStore } from 'Stores/useDBotStore';\n\ntype TRecentWorkspaceProps = {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    workspace: { [key: string]: any };\n};\n\nconst RecentWorkspace = observer(({ workspace }: TRecentWorkspaceProps) => {\n    const { load_modal, blockly_store } = useDBotStore();\n    const { setLoading } = blockly_store;\n    const {\n        getRecentFileIcon,\n        getSaveType,\n        loadStrategyOnModalRecentPreview,\n        selected_strategy_id,\n        updateXmlValuesOnStrategySelection,\n    } = load_modal;\n\n    const onRecentWorkspaceClick = () => {\n        if (selected_strategy_id === workspace.id) return;\n        setLoading(true);\n        loadStrategyOnModalRecentPreview(workspace.id);\n        updateXmlValuesOnStrategySelection();\n    };\n\n    return (\n        <div\n            className={classnames('load-strategy__recent-item', {\n                'load-strategy__recent-item--selected': selected_strategy_id === workspace.id,\n            })}\n            key={workspace.id}\n            onClick={onRecentWorkspaceClick}\n            data-testid='dt_recent_workspace_item'\n        >\n            <div className='load-strategy__recent-item-text'>\n                <div className='load-strategy__recent-item-title' title={workspace.name}>\n                    {workspace.name}\n                </div>\n                <div className='load-strategy__recent-item-time'>{timeSince(workspace.timestamp)}</div>\n            </div>\n            <div className='load-strategy__recent-item-location'>\n                <Icon\n                    icon={getRecentFileIcon(workspace.save_type)}\n                    className={classnames({\n                        'load-strategy__recent-icon--active': workspace.save_type === save_types.GOOGLE_DRIVE,\n                    })}\n                />\n                <div className='load-strategy__recent-item-saved'>{getSaveType(workspace.save_type)}</div>\n            </div>\n        </div>\n    );\n});\n\nexport default RecentWorkspace;\n","import React from 'react';\nimport classnames from 'classnames';\nimport { Icon } from '@deriv/components';\nimport { observer } from '@deriv/stores';\nimport { Localize } from '@deriv/translations';\nimport { useDBotStore } from 'Stores/useDBotStore';\nimport RecentWorkspace from './recent-workspace';\nimport WorkspaceControl from './workspace-control';\n\nconst RecentComponent = observer(() => {\n    const { load_modal } = useDBotStore();\n    const { is_explanation_expand, recent_strategies, toggleExplanationExpand } = load_modal;\n    if (recent_strategies.length) {\n        return (\n            <div className='load-strategy__container load-strategy__container--has-footer'>\n                <div className='load-strategy__recent'>\n                    <div className='load-strategy__recent__files'>\n                        {recent_strategies.map(workspace => (\n                            <RecentWorkspace key={workspace.id} workspace={workspace} />\n                        ))}\n                    </div>\n                    <div className='load-strategy__recent__preview'>\n                        <div className='load-strategy__title load-strategy__recent-preview-title'>\n                            <Localize i18n_default_text='Preview' />\n                        </div>\n                        <div className='load-strategy__preview-workspace'>\n                            <div id='load-strategy__blockly-container' style={{ height: '100%' }}>\n                                <WorkspaceControl />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    return (\n        <div className='load-strategy__container'>\n            <div className='load-strategy__recent__empty' data-testid='dt-load-strategy__recent__empty'>\n                <Icon icon='IcEmptyFolder' className='load-strategy__recent__empty-icon' size={128} />\n                <div className='load-strategy__recent__empty-title'>\n                    <Localize i18n_default_text='You do not have any recent bots' />\n                </div>\n                <div className='load-strategy__recent__empty-description'>\n                    <Localize i18n_default_text='Create one or upload one from your local drive or Google Drive.' />\n                </div>\n                <div\n                    tabIndex={0}\n                    className='load-strategy__recent__empty-expand'\n                    data-testid='dt-load-strategy__recent__empty-expand'\n                    onClick={toggleExplanationExpand}\n                    onKeyDown={(e: React.KeyboardEvent) => {\n                        if (e.key === 'Enter') toggleExplanationExpand();\n                    }}\n                >\n                    <Localize i18n_default_text=\"Why can't I see my recent bots?\" />\n                </div>\n                <div\n                    data-testid={\n                        is_explanation_expand ? 'dt-empty-explanation-list--open' : 'dt-empty-explanation-list--close'\n                    }\n                    className={classnames('load-strategy__recent__empty-explanation', {\n                        'load-strategy__recent__empty-explanation--show': is_explanation_expand,\n                    })}\n                >\n                    <div>\n                        <Localize i18n_default_text=\"If you've recently used bots but don't see them in this list, it may be because you:\" />\n                    </div>\n                    <ol className='load-strategy__recent__empty-explanation-list'>\n                        <li>\n                            <Localize i18n_default_text='1. Logged in from a different device' />\n                        </li>\n                        <li>\n                            <Localize i18n_default_text='2. Logged in from a different browser' />\n                        </li>\n                        <li>\n                            <Localize i18n_default_text='3. Cleared your browser cache' />\n                        </li>\n                    </ol>\n                </div>\n            </div>\n        </div>\n    );\n});\n\nexport default RecentComponent;\n","import React from 'react';\nimport { Button } from '@deriv/components';\nimport { observer } from '@deriv/stores';\nimport { localize } from '@deriv/translations';\nimport { NOTIFICATION_TYPE } from 'Components/bot-notification/bot-notification-utils';\nimport { useDBotStore } from 'Stores/useDBotStore';\n\nconst RecentFooter = observer(() => {\n    const { load_modal, dashboard } = useDBotStore();\n    const { is_open_button_loading, is_open_button_disabled, loadStrategyOnBotBuilder, toggleLoadModal } = load_modal;\n    const { setOpenSettings } = dashboard;\n\n    return (\n        <Button\n            text={localize('Open')}\n            onClick={() => {\n                loadStrategyOnBotBuilder();\n                toggleLoadModal();\n                setOpenSettings(NOTIFICATION_TYPE.BOT_IMPORT);\n            }}\n            is_loading={is_open_button_loading}\n            has_effect\n            primary\n            large\n            disabled={is_open_button_disabled}\n        />\n    );\n});\n\nexport default RecentFooter;\n","import React from 'react';\nimport { MobileFullPageModal, Modal, Tabs } from '@deriv/components';\nimport { observer, useStore } from '@deriv/stores';\nimport { localize } from '@deriv/translations';\nimport { tabs_title } from 'Constants/load-modal';\nimport { useDBotStore } from 'Stores/useDBotStore';\nimport { rudderStackSendSwitchLoadStrategyTabEvent } from '../../analytics/rudderstack-bot-builder';\nimport { rudderStackSendCloseEvent } from '../../analytics/rudderstack-common-events';\nimport { LOAD_MODAL_TABS } from '../../analytics/utils';\nimport GoogleDrive from './google-drive';\nimport Local from './local';\nimport LocalFooter from './local-footer';\nimport Recent from './recent';\nimport RecentFooter from './recent-footer';\n\nconst LoadModal: React.FC = observer(() => {\n    const { ui } = useStore();\n    const { load_modal, dashboard } = useDBotStore();\n    const {\n        active_index,\n        is_load_modal_open,\n        loaded_local_file,\n        onEntered,\n        recent_strategies,\n        setActiveTabIndex,\n        toggleLoadModal,\n        tab_name,\n    } = load_modal;\n    const { setPreviewOnPopup } = dashboard;\n    const { is_desktop } = ui;\n    const header_text = localize('Load strategy');\n\n    const handleTabItemClick = (active_index: number) => {\n        setActiveTabIndex(active_index);\n        rudderStackSendSwitchLoadStrategyTabEvent({\n            load_strategy_tab: LOAD_MODAL_TABS[active_index + (!is_desktop ? 1 : 0)],\n        });\n    };\n\n    if (!is_desktop) {\n        return (\n            <MobileFullPageModal\n                is_modal_open={is_load_modal_open}\n                className='load-strategy__wrapper'\n                header={header_text}\n                onClickClose={() => {\n                    setPreviewOnPopup(false);\n                    toggleLoadModal();\n                    rudderStackSendCloseEvent({\n                        subform_name: 'load_strategy',\n                        load_strategy_tab: LOAD_MODAL_TABS[active_index + 1],\n                    });\n                }}\n                height_offset='80px'\n                page_overlay\n            >\n                <Tabs active_index={active_index} onTabItemClick={handleTabItemClick} top>\n                    <div label={localize('Local')}>\n                        <Local />\n                    </div>\n                    <div label='Google Drive'>\n                        <GoogleDrive />\n                    </div>\n                </Tabs>\n            </MobileFullPageModal>\n        );\n    }\n\n    const is_file_loaded = !!loaded_local_file && tab_name === tabs_title.TAB_LOCAL;\n    const has_recent_strategies = recent_strategies.length > 0 && tab_name === tabs_title.TAB_RECENT;\n\n    return (\n        <Modal\n            title={header_text}\n            className='load-strategy'\n            width='1000px'\n            height='80vh'\n            is_open={is_load_modal_open}\n            toggleModal={() => {\n                toggleLoadModal();\n                rudderStackSendCloseEvent({\n                    subform_name: 'load_strategy',\n                    load_strategy_tab: LOAD_MODAL_TABS[active_index + (!is_desktop ? 1 : 0)],\n                });\n            }}\n            onEntered={onEntered}\n            elements_to_ignore={[document.querySelector('.injectionDiv')]}\n        >\n            <Modal.Body>\n                <Tabs active_index={active_index} onTabItemClick={handleTabItemClick} top header_fit_content>\n                    <div label={localize('Recent')}>\n                        <Recent />\n                    </div>\n                    <div label={localize('Local')}>\n                        <Local />\n                    </div>\n                    <div label='Google Drive'>\n                        <GoogleDrive />\n                    </div>\n                </Tabs>\n            </Modal.Body>\n            {has_recent_strategies && (\n                <Modal.Footer has_separator>\n                    <RecentFooter />\n                </Modal.Footer>\n            )}\n            {is_file_loaded && (\n                <Modal.Footer has_separator>\n                    <LocalFooter />\n                </Modal.Footer>\n            )}\n        </Modal>\n    );\n});\n\nexport default LoadModal;\n","import LoadModal from './load-modal';\nimport './load-modal.scss';\n\nexport default LoadModal;\n","import { TEvents } from '@deriv-com/analytics';\nimport { ACTION, form_name } from './constants';\nimport { cacheTrackEvents } from '@deriv/shared';\n\nexport const rudderStackSendSwitchLoadStrategyTabEvent = ({ load_strategy_tab }: TEvents['ce_bot_form']) => {\n    cacheTrackEvents.loadEvent([\n        {\n            event: {\n                name: 'ce_bot_form',\n                properties: {\n                    action: ACTION.SWITCH_LOAD_STRATEGY_TAB,\n                    form_name,\n                    load_strategy_tab,\n                    subform_name: 'load_strategy',\n                    subpage_name: 'bot_builder',\n                },\n            },\n        },\n    ]);\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Text } from '@deriv/components';\nimport { localize } from '@deriv/translations';\n\ntype TIconRadio = {\n    google_drive_connected?: boolean;\n    icon: React.ReactElement<{ className: string }, string>;\n    text: string;\n    onDriveConnect?: () => void;\n};\nconst IconRadio = ({ icon, text, google_drive_connected, onDriveConnect }: TIconRadio) => {\n    const is_drive_radio = text === 'Google Drive';\n\n    return (\n        <div className='save-type__container'>\n            <div className='save-type__radio'>\n                {icon &&\n                    React.cloneElement(icon, {\n                        className: classNames(\n                            'save-type__icon',\n                            {\n                                'save-type__icon--active': is_drive_radio && google_drive_connected,\n                                'save-type__icon--disabled': is_drive_radio && !google_drive_connected,\n                            },\n                            icon.props.className\n                        ),\n                    })}\n                <Text\n                    as='p'\n                    align='center'\n                    size='xxs'\n                    color={is_drive_radio && !google_drive_connected ? 'disabled' : 'prominent'}\n                    line_height='s'\n                    className='save-type__radio-text'\n                >\n                    {localize(text)}\n                </Text>\n            </div>\n            {is_drive_radio && (\n                <Text\n                    as='p'\n                    align='center'\n                    size='xs'\n                    weight='bold'\n                    styles={{ color: 'var(--brand-red-coral)' }}\n                    className='save-type__drive-status'\n                    onClick={onDriveConnect}\n                >\n                    {localize(google_drive_connected ? localize('Disconnect') : localize('Connect'))}\n                </Text>\n            )}\n        </div>\n    );\n};\n\nexport default IconRadio;\n","import React, { useEffect } from 'react';\nimport classNames from 'classnames';\nimport { Field, Form, Formik } from 'formik';\nimport { config, save_types } from '@deriv/bot-skeleton';\nimport { Button, Icon, Input, MobileFullPageModal, Modal, RadioGroup, Text, ThemedScrollbars } from '@deriv/components';\nimport { observer, useStore } from '@deriv/stores';\nimport { localize } from '@deriv/translations';\nimport { useDBotStore } from '../../../../stores/useDBotStore';\nimport IconRadio from './icon-radio';\nimport './save-modal.scss';\n\ntype TSaveModalForm = {\n    bot_name: string;\n    button_status: number;\n    google_drive_connected?: boolean;\n    is_authorised: boolean;\n    is_mobile?: boolean;\n    is_onscreen_keyboard_active?: boolean;\n    is_save_modal_open?: boolean;\n    icon?: string;\n    text?: string;\n    onDriveConnect?: () => void;\n    onConfirmSave: (values: { is_local: boolean; save_as_collection: boolean; bot_name: string }) => void;\n    setCurrentFocus: (current_focus: string) => void;\n    toggleSaveModal: () => void;\n    validateBotName: (values: string) => { [key: string]: string };\n};\n\nconst SaveModalForm: React.FC<TSaveModalForm> = ({\n    bot_name,\n    button_status,\n    is_authorised,\n    onConfirmSave,\n    onDriveConnect,\n    validateBotName,\n    toggleSaveModal,\n    is_mobile,\n    is_onscreen_keyboard_active,\n    setCurrentFocus,\n}) => (\n    <Formik\n        initialValues={{\n            is_local: true,\n            save_as_collection: false,\n            bot_name: bot_name === config.default_file_name ? '' : bot_name,\n        }}\n        validate={validateBotName}\n        onSubmit={onConfirmSave}\n    >\n        {({ values: { is_local }, setFieldValue, touched, errors }) => {\n            const content_height = !is_mobile ? '500px' : `calc(100%)`;\n            return (\n                <ThemedScrollbars height={content_height} autohide>\n                    <Form className={classNames({ 'form--active-keyboard': is_onscreen_keyboard_active })}>\n                        <div className='modal__content'>\n                            <Text size='xs' line_height='l'>\n                                {localize(\n                                    'Enter your bot name, choose to save on your computer or Google Drive, and hit '\n                                )}\n                                <strong>{localize('Save.')}</strong>\n                            </Text>\n                            <div className='modal__content-row'>\n                                <Field name='bot_name'>\n                                    {({ field }) => (\n                                        <Input\n                                            className='save-type__input'\n                                            type='text'\n                                            placeholder={localize('Untitled Strategy')}\n                                            error={touched[field.name] && errors[field.name]}\n                                            label={localize('Bot name')}\n                                            onFocus={e => setCurrentFocus(e.currentTarget.name)}\n                                            onBlur={() => setCurrentFocus(null)}\n                                            {...field}\n                                        />\n                                    )}\n                                </Field>\n                            </div>\n                            <div className='modal__content-row'>\n                                <RadioGroup\n                                    className='radio-group__save-type'\n                                    name='is_local'\n                                    selected={() => {\n                                        if (is_authorised && !is_local) return save_types.GOOGLE_DRIVE;\n                                        return save_types.LOCAL;\n                                    }}\n                                    onToggle={() => setFieldValue('is_local', !is_local)}\n                                >\n                                    <RadioGroup.Item\n                                        id='local'\n                                        label={\n                                            <IconRadio\n                                                text={localize('Local')}\n                                                icon={<Icon icon={is_mobile ? 'IcLocal' : 'IcMyComputer'} size={48} />}\n                                            />\n                                        }\n                                        value={save_types.LOCAL}\n                                    />\n                                    <RadioGroup.Item\n                                        id='drive'\n                                        label={\n                                            <IconRadio\n                                                text={'Google Drive'}\n                                                icon={<Icon icon={'IcGoogleDrive'} size={48} />}\n                                                google_drive_connected={is_authorised}\n                                                onDriveConnect={onDriveConnect}\n                                            />\n                                        }\n                                        value={save_types.GOOGLE_DRIVE}\n                                        disabled={!is_authorised}\n                                        className={classNames({\n                                            'dc-radio-group__item-disabled': !is_authorised,\n                                        })}\n                                    />\n                                </RadioGroup>\n                            </div>\n                            {/* removed this from the save modal popup because it is not there in the design */}\n                            {/* <>\n                                <Field name='save_as_collection'>\n                                    {({ field }) => (\n                                        <Checkbox\n                                            onChange={() => setFieldValue('save_as_collection', !save_as_collection)}\n                                            defaultChecked={save_as_collection}\n                                            label={\n                                                <Text size='xs' line_height='s' weight='bold'>\n                                                    <Localize i18n_default_text='Save as collection' />\n                                                </Text>\n                                            }\n                                            classNameLabel='save-type__checkbox-text'\n                                            {...field}\n                                        />\n                                    )}\n                                </Field>\n                                <div className='save-type__checkbox-description'>\n                                    {localize(\n                                        'Enabling this allows you to save your blocks as one collection which can be easily integrated into other bots.'\n                                    )}\n                                </div>\n                            </> */}\n                        </div>\n                        <div\n                            className={classNames('modal__footer', {\n                                'modal__footer--active-keyboard': is_onscreen_keyboard_active,\n                            })}\n                        >\n                            <Button\n                                type='button'\n                                className='modal__footer--button'\n                                text={localize('Cancel')}\n                                onClick={toggleSaveModal}\n                                secondary\n                            />\n                            <Button\n                                className='modal__footer--button'\n                                type='submit'\n                                is_loading={button_status === 1}\n                                is_submit_success={button_status === 2}\n                                text={localize('Save')}\n                                primary\n                            />\n                        </div>\n                    </Form>\n                </ThemedScrollbars>\n            );\n        }}\n    </Formik>\n);\nconst SaveModal = observer(() => {\n    const { save_modal, google_drive, dashboard, load_modal } = useDBotStore();\n    const { ui } = useStore();\n    const { dashboard_strategies } = load_modal;\n    const {\n        button_status,\n        bot_name,\n        is_save_modal_open,\n        onConfirmSave,\n        toggleSaveModal,\n        updateBotName,\n        validateBotName,\n    } = save_modal;\n    const { is_authorised, onDriveConnect } = google_drive;\n    const { is_onscreen_keyboard_active, setCurrentFocus, is_mobile } = ui;\n    const { active_tab } = dashboard;\n\n    useEffect(() => {\n        if (active_tab === 1) {\n            updateBotName(dashboard_strategies?.[0]?.name ?? '');\n        }\n    }, [active_tab, dashboard_strategies, updateBotName]);\n\n    return is_mobile ? (\n        <MobileFullPageModal\n            is_modal_open={is_save_modal_open}\n            className='save-modal__wrapper'\n            header={localize('Save strategy')}\n            onClickClose={toggleSaveModal}\n            height_offset='80px'\n            page_overlay\n        >\n            <SaveModalForm\n                bot_name={bot_name}\n                button_status={button_status}\n                is_authorised={is_authorised}\n                onConfirmSave={onConfirmSave}\n                onDriveConnect={onDriveConnect}\n                validateBotName={validateBotName}\n                toggleSaveModal={toggleSaveModal}\n                is_mobile={is_mobile}\n                is_onscreen_keyboard_active={is_onscreen_keyboard_active}\n                setCurrentFocus={setCurrentFocus}\n            />\n        </MobileFullPageModal>\n    ) : (\n        <Modal\n            title={localize('Save strategy')}\n            className='modal--save'\n            width='32.8rem'\n            height='50rem'\n            is_open={is_save_modal_open}\n            toggleModal={toggleSaveModal}\n        >\n            <SaveModalForm\n                bot_name={bot_name}\n                button_status={button_status}\n                is_authorised={is_authorised}\n                onConfirmSave={onConfirmSave}\n                onDriveConnect={onDriveConnect}\n                validateBotName={validateBotName}\n                toggleSaveModal={toggleSaveModal}\n                setCurrentFocus={setCurrentFocus}\n            />\n        </Modal>\n    );\n});\n\nexport default SaveModal;\n","import React from 'react';\nimport ReactJoyride, { CallBackProps, Step, Styles } from 'react-joyride';\nimport { localize } from '@deriv/translations';\n\nconst common_tour_button_properties = {\n    fontWeight: '700',\n    fontSize: '1.4rem',\n    height: '4rem',\n    padding: '1rem 1.6rem',\n};\n\ninterface IReactJoyrideWrapperProps {\n    steps: Step[];\n    styles: Styles;\n    handleCallback: (data: CallBackProps) => void;\n}\n\nconst ReactJoyrideWrapper: React.FC<IReactJoyrideWrapperProps> = ({ steps, styles, handleCallback, ...props }) => {\n    return (\n        <ReactJoyride\n            steps={steps}\n            continuous\n            callback={handleCallback}\n            locale={{ back: localize('Previous'), next: localize('Next') }}\n            {...props}\n            styles={{\n                options: {\n                    arrowColor: 'var(--general-main-2)',\n                    backgroundColor: 'var(--general-main-2)',\n                    primaryColor: 'var(--brand-red-coral)',\n                    textColor: 'var(--text-general)',\n                    spotlightShadow: '0 0 15px rgba(0, 0, 0, 0.5)',\n                    width: 440,\n                },\n                buttonBack: {\n                    border: '0.2rem solid var(--text-less-prominent)',\n                    marginInlineEnd: '1rem',\n                    borderRadius: '0.4rem',\n                    color: 'var(--text-general)',\n                    ...common_tour_button_properties,\n                },\n                buttonNext: {\n                    ...common_tour_button_properties,\n                },\n                buttonClose: {\n                    insetInlineEnd: '0px',\n                    right: 'unset',\n                },\n                overlay: {\n                    height: '100%',\n                },\n                ...styles,\n            }}\n        />\n    );\n};\n\nexport default ReactJoyrideWrapper;\n","import React from 'react';\nimport { Dialog, Text } from '@deriv/components';\nimport { observer, useStore } from '@deriv/stores';\nimport { Localize, localize } from '@deriv/translations';\nimport { useDBotStore } from '../../../../stores/useDBotStore';\n\nconst TourEndDialog = observer(() => {\n    const { ui } = useStore();\n    const { dashboard } = useDBotStore();\n    const { is_tour_dialog_visible, setTourDialogVisibility } = dashboard;\n    const { is_desktop } = ui;\n\n    const getTourContent = () => {\n        return (\n            <>\n                <div className='dc-dialog__content__description__text' data-testid='tour-success-message'>\n                    <Localize\n                        key={0}\n                        i18n_default_text={'You have successfully created your bot using a simple strategy.'}\n                    />\n                </div>\n                <div className='dc-dialog__content__description__text'>\n                    <Localize\n                        key={0}\n                        i18n_default_text={'Now, <0>run the bot</0> to test out the strategy.'}\n                        components={[<strong key={0} />]}\n                    />\n                </div>\n                <div className='dc-dialog__content__description__text'>\n                    <Localize\n                        key={0}\n                        i18n_default_text={\n                            'Note: If you wish to learn more about the Bot Builder, you can proceed to the <0>Tutorials</0> tab.'\n                        }\n                        components={[<strong key={0} />]}\n                    />\n                </div>\n            </>\n        );\n    };\n\n    const onHandleConfirm = () => {\n        setTourDialogVisibility(false);\n    };\n\n    return (\n        <div>\n            <Dialog\n                is_visible={is_tour_dialog_visible}\n                confirm_button_text={localize('OK')}\n                onConfirm={onHandleConfirm}\n                is_mobile_full_width\n                className='dc-dialog tour-dialog'\n                has_close_icon={false}\n            >\n                <div className='dc-dialog__content__header'>\n                    <Text weight='bold' color='prominent' size={is_desktop ? 's' : 'xs'}>\n                        {localize('Congratulations')}\n                    </Text>\n                </div>\n                <div className='dc-dialog__content__description'>\n                    <Text size={is_desktop ? 'xs' : 'xxs'} color='prominent'>\n                        {getTourContent()}\n                    </Text>\n                </div>\n            </Dialog>\n        </div>\n    );\n});\n\nexport default TourEndDialog;\n","import React from 'react';\nimport { getUUID } from '@deriv/bot-skeleton/src/services/tradeEngine/utils/helpers';\nimport { Text } from '@deriv/components';\nimport { observer } from '@deriv/stores';\n\ntype TTourSteps = {\n    content: string[] | React.ReactElement[];\n    media?: string;\n    label: string | boolean;\n    step_index: number;\n    show_actions?: boolean;\n    has_localize_component?: boolean;\n};\n\nconst TourSteps = observer(\n    ({ content, media, label, step_index, has_localize_component = false, show_actions = true }: TTourSteps) => {\n        return (\n            <React.Fragment>\n                <div className='onboard'>\n                    {show_actions && (\n                        <div className='onboard__header'>\n                            <Text color='less-prominent' line_height='l'>\n                                {step_index}/6\n                            </Text>\n                        </div>\n                    )}\n                    <div className='onboard__steps'>\n                        <div className='onboard__label'>\n                            <Text as='p' line_height='l' weight='bold'>\n                                {label}\n                            </Text>\n                        </div>\n\n                        {media && (\n                            <video\n                                autoPlay={true}\n                                loop\n                                controls\n                                preload='auto'\n                                playsInline\n                                disablePictureInPicture\n                                controlsList='nodownload'\n                                style={{ width: '100%' }}\n                                src={media}\n                            />\n                        )}\n\n                        <div className='onboard__content'>\n                            <>\n                                {content.map((content_data, index) => {\n                                    return has_localize_component ? (\n                                        content_data\n                                    ) : (\n                                        <div className='onboard__content__block' key={`onboard--${getUUID()}`}>\n                                            <Text align='left' as='p' size='xs' line_height='l'>\n                                                {content_data}\n                                            </Text>\n                                        </div>\n                                    );\n                                })}\n                            </>\n                        </div>\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n);\n\nexport default TourSteps;\n","import { getImageLocation } from '../../../public-path';\nimport React from 'react';\nimport { isDbotRTL } from '@deriv/bot-skeleton/src/utils/workspace';\nimport { Icon, Text } from '@deriv/components';\nimport { getUrlBase } from '@deriv/shared';\nimport { Localize, localize } from '@deriv/translations';\nimport TourSteps from './common/tour-steps';\n\ntype TJoyrideConfig = Record<\n    'showProgress' | 'spotlightClicks' | 'disableBeacon' | 'disableOverlay' | 'disableCloseOnEsc',\n    boolean\n> & {\n    placement?: 'bottom' | 'top' | 'left' | 'right';\n};\n\nconst joyride_props: TJoyrideConfig = {\n    showProgress: false,\n    spotlightClicks: false,\n    disableBeacon: true,\n    disableOverlay: true,\n    disableCloseOnEsc: true,\n};\n\nexport const DBOT_ONBOARDING = [\n    {\n        target: '#id-bot-builder',\n        content: (\n            <TourSteps\n                label={localize('Build from scratch')}\n                content={[\n                    localize(\n                        'Create your bot using our drag-and-drop blocks or click Quick Strategy to choose from the ready-to-use bot templates.'\n                    ),\n                    localize(\n                        'We also provide a guide on the Tutorial tab to show you how you can build and execute a simple strategy.'\n                    ),\n                ]}\n                media={getUrlBase('/public/videos/dbot-onboarding-tour-step-1.mp4')}\n                step_index={1}\n            />\n        ),\n        ...joyride_props,\n        disableOverlay: false,\n    },\n    {\n        target: '#id-charts',\n        content: (\n            <TourSteps\n                label={localize('Monitor the market')}\n                content={[localize('View the market price of your favourite assets.')]}\n                media={getUrlBase('/public/videos/dbot-onboarding-tour-step-2.mp4')}\n                step_index={2}\n            />\n        ),\n        ...joyride_props,\n        disableOverlay: false,\n    },\n    {\n        target: '#id-tutorials',\n        content: (\n            <TourSteps\n                label={localize('Learn more with our tutorials')}\n                content={[localize('Explore the video guides and FAQs to build your bot in the tutorials tab.')]}\n                media={getUrlBase('/public/videos/dbot-onboarding-tour-step-3.mp4')}\n                step_index={3}\n            />\n        ),\n        ...joyride_props,\n        disableOverlay: false,\n    },\n    {\n        target: '#tab__dashboard__table__tiles',\n        content: (\n            <TourSteps\n                label={localize('Use these shortcuts')}\n                content={[localize('You can also import or build your bot using any of these shortcuts.')]}\n                step_index={4}\n            />\n        ),\n        placement: isDbotRTL() ? 'left' : 'right',\n        ...joyride_props,\n        disableOverlay: false,\n    },\n    {\n        target: '.dc-drawer__container',\n        content: (\n            <TourSteps\n                label={localize('Check your bot’s performance')}\n                content={[localize('See how your bot is doing in real-time.')]}\n                media={getUrlBase('/public/videos/dbot-onboarding-tour-step-5.mp4')}\n                step_index={5}\n            />\n        ),\n        placement: isDbotRTL() ? 'right' : 'left',\n        ...joyride_props,\n        disableOverlay: false,\n    },\n    {\n        target: '.animation__wrapper',\n        content: (\n            <TourSteps\n                label={localize('Run your bot')}\n                content={[\n                    <Localize\n                        key='run your bot'\n                        i18n_default_text='Click <0>Run</0> when you want to start trading, and click <0>Stop</0> when you want to stop.'\n                        components={[<strong key={0} />]}\n                    />,\n                ]}\n                media={getUrlBase('/public/videos/dbot-onboarding-tour-step-6.mp4')}\n                step_index={6}\n            />\n        ),\n        ...joyride_props,\n        disableOverlay: false,\n    },\n    {\n        target: '#id-tutorials',\n        content: (\n            <TourSteps\n                label={localize('Want to retake the tour?')}\n                content={[\n                    <Text key={`${0}-id-tutorials`} as='p'>\n                        <Localize i18n_default_text={`Head to the Tutorials tab to do so.`} />\n                    </Text>,\n                ]}\n                step_index={7}\n                show_actions={false}\n                has_localize_component\n            />\n        ),\n        locale: { last: localize('Got it, thanks!') },\n        ...joyride_props,\n        hideBackButton: true,\n        disableOverlay: false,\n    },\n];\n\nconst Step1 = ({ show_label = false }) => (\n    <div className='joyride-content'>\n        {show_label && (\n            <div className='joyride-content__left'>\n                <Localize i18n_default_text='Step 1 :' />\n            </div>\n        )}\n        <div className='joyride-content__left'>\n            <Localize\n                i18n_default_text={'First, set the <0>Trade parameters</0> block.'}\n                components={[<strong key={0} />]}\n            />\n        </div>\n        <div className='joyride-content__left joyride-content__sub-title'>\n            <Localize i18n_default_text='<0>1. Trade parameters:<0>' components={[<strong key={0} />]} />\n        </div>\n        <div className='joyride-content__left'>\n            <ul>\n                <li>\n                    <Localize\n                        i18n_default_text='First, set <0>Market</0> to Derived > Continuous Indices > Volatility 100 (1s) Index.'\n                        components={[<strong key={0} />]}\n                    />\n                </li>\n                <li>\n                    <Localize\n                        i18n_default_text='Then, set <0>Trade type</0> to Up/Down > Rise/Fall.'\n                        components={[<strong key={0} />]}\n                    />\n                </li>\n                <li>\n                    <Localize\n                        i18n_default_text='For <0>Contract type,</0> set it to Both.'\n                        components={[<strong key={0} />]}\n                    />\n                </li>\n                <li>\n                    <Localize\n                        i18n_default_text='For <0>Default candle interval,</0> set it to 1 minute'\n                        components={[<strong key={0} />]}\n                    />\n                </li>\n            </ul>\n        </div>\n    </div>\n);\n\nconst Step1A = () => (\n    <div className='joyride-content'>\n        <div className='joyride-content__left'>\n            <Localize\n                i18n_default_text='For <0>Trade options</0>, set it as below:'\n                components={[<strong key={0} />]}\n            />\n        </div>\n        <div className='joyride-content__left'>\n            <ul>\n                <li>\n                    <Localize i18n_default_text='<0>Duration</0>: Ticks 1' components={[<strong key={0} />]} />\n                </li>\n                <li>\n                    <Localize\n                        i18n_default_text='<0>Stake: USD</0> 10 (min: 0.35 - max: 50000)'\n                        components={[<strong key={0} />]}\n                    />\n                </li>\n            </ul>\n        </div>\n    </div>\n);\n\nconst Step2 = ({ show_label = false }) => (\n    <div className='joyride-content'>\n        {show_label && (\n            <div className='joyride-content__left'>\n                <Localize i18n_default_text='Step 2 :' />\n            </div>\n        )}\n\n        <div className='joyride-content__left'>\n            <Localize\n                i18n_default_text='Then, set the <0>Purchase conditions</0> block.'\n                components={[<strong key={0} />]}\n            />\n        </div>\n        <div className='joyride-content__left joyride-content__sub-title'>\n            <Localize i18n_default_text='<0>2. Purchase conditions</0>:' components={[<strong key={0} />]} />\n        </div>\n        <div className='joyride-content__left'>\n            <ul>\n                <li>\n                    <Localize i18n_default_text='<0>Purchase</0>: Rise' components={[<strong key={0} />]} />\n                </li>\n            </ul>\n        </div>\n    </div>\n);\n\nconst Step3 = ({ show_label = false }) => (\n    <div className='joyride-content'>\n        {show_label && (\n            <div className='joyride-content__left joyride-content__left__step-three'>\n                <Localize i18n_default_text='Step 3 :' />\n            </div>\n        )}\n\n        <div className='joyride-content__left'>\n            <Localize\n                i18n_default_text='The third block is <0>optional</0>. You may use this block if you want to sell your contract before it expires. For now, leave the block as it is. '\n                components={[<strong key={0} />]}\n            />\n        </div>\n    </div>\n);\n\nconst Step4 = ({ show_label = false }) => (\n    <div className='joyride-content'>\n        {show_label && (\n            <div className='joyride-content__left'>\n                <Localize i18n_default_text='Step 4 :' />\n            </div>\n        )}\n\n        <div className='joyride-content__left'>\n            <Localize\n                i18n_default_text='Next, go to <0>Utility tab</0> under the Blocks menu. Tap the drop-down arrow and hit <0>Loops</0>.'\n                components={[<strong key={0} />]}\n            />\n        </div>\n        <div className='joyride-content__left'>\n            <ul>\n                <li>\n                    <Localize\n                        i18n_default_text='Look for the <0>Repeat While/Until</0>, and click the + icon to add the block to the workspace area.'\n                        components={[<strong key={0} />]}\n                    />\n                </li>\n                <li>\n                    <Localize\n                        i18n_default_text='Choose <0>until</0> as the repeat option.'\n                        components={[<strong key={0} />]}\n                    />\n                </li>\n            </ul>\n            <div className='joyride-content__left joyride-content__with-icon'>\n                <div className='joyride-content__with-icon__left'>\n                    <Icon icon='IcCheckmarkCircle' className='db-contract-card__result-icon' color='green' />\n                </div>\n                <div className='joyride-content__with-icon__right'>\n                    <Localize\n                        i18n_default_text='Pro tip: You can also click and drag out the desired block'\n                        components={[<strong key={0} />]}\n                    />\n                </div>\n            </div>\n        </div>\n        <div>\n            <video autoPlay loop controls playsInline preload='auto' disablePictureInPicture controlsList='nodownload'>\n                <source src={getUrlBase('/public/videos/bot-builder-tour-step-4.mp4')} type='video/mp4' />\n            </video>\n        </div>\n    </div>\n);\n\nconst Step5 = ({ show_label = false }) => (\n    <div className='joyride-content'>\n        {show_label && (\n            <div className='joyride-content__left'>\n                <Localize i18n_default_text='Step 5 :' />\n            </div>\n        )}\n\n        <div className='joyride-content__left'>\n            <Localize\n                i18n_default_text='Now, tap the <0>Analysis</0> drop-down arrow and hit <0>Contract</0>.'\n                components={[<strong key={0} />]}\n            />\n        </div>\n        <div className='joyride-content__left'>\n            <ul>\n                <li>\n                    <Localize\n                        i18n_default_text='Go to the <0>Last trade result</0> block and click + icon to add the <0>Result is Win</0> block to the workspace.'\n                        components={[<strong key={0} />]}\n                    />\n                </li>\n                <li>\n                    <Localize\n                        i18n_default_text='Then, drag the <0>Result is win</0> into the empty slot next to <0>repeat until</0> block.'\n                        components={[<strong key={0} />]}\n                    />\n                </li>\n                <li>\n                    <Localize\n                        i18n_default_text='Now, go to the <0>Restart trading conditions</0> block.'\n                        components={[<strong key={0} />]}\n                    />\n                </li>\n                <li>\n                    <Localize\n                        i18n_default_text='Drag the <0>Trade again</0> block and add it into the <0>do</0> part of the <0>Repeat until</0> block.'\n                        components={[<strong key={0} />]}\n                    />\n                </li>\n            </ul>\n        </div>\n        <div>\n            <video autoPlay loop controls playsInline preload='auto' disablePictureInPicture controlsList='nodownload'>\n                <source src={getUrlBase('/public/videos/bot-builder-tour-step-5.mp4')} type='video/mp4' />\n            </video>\n        </div>\n    </div>\n);\n\nconst Step6 = ({ show_label = false }) => (\n    <div className='joyride-content'>\n        {show_label && (\n            <div className='joyride-content__left'>\n                <Localize i18n_default_text='Step 6 :' />\n            </div>\n        )}\n\n        <div className='joyride-content__left'>\n            <Localize\n                i18n_default_text='Finally, drag and add the whole <0>Repeat</0> block to the <0>Restart trading conditions</0> block.'\n                components={[<strong key={0} />]}\n            />\n        </div>\n    </div>\n);\n\nexport const BOT_BUILDER_TOUR = [\n    {\n        target: '.animation__wrapper',\n        content: <Step1 show_label />,\n        placement: isDbotRTL() ? 'bottom' : 'right',\n        ...joyride_props,\n    },\n    {\n        target: '.animation__wrapper',\n        content: <Step1A />,\n        placement: isDbotRTL() ? 'bottom' : 'right',\n\n        ...joyride_props,\n    },\n    {\n        target: '.animation__wrapper',\n        content: <Step2 show_label />,\n        placement: isDbotRTL() ? 'bottom' : 'right',\n\n        ...joyride_props,\n    },\n    {\n        target: '.animation__wrapper',\n        content: <Step3 show_label />,\n        placement: isDbotRTL() ? 'bottom' : 'right',\n\n        ...joyride_props,\n    },\n    {\n        target: '.animation__wrapper',\n        content: <Step4 show_label />,\n        placement: isDbotRTL() ? 'bottom' : 'right',\n\n        ...joyride_props,\n    },\n    {\n        target: '.animation__wrapper',\n        content: <Step5 show_label />,\n        placement: isDbotRTL() ? 'bottom' : 'right',\n\n        ...joyride_props,\n    },\n    {\n        target: '.animation__wrapper',\n        content: <Step6 show_label />,\n        locale: { last: localize('Next') },\n        ...joyride_props,\n    },\n];\n\nexport type TMobileTourConfig = {\n    header: string;\n    content: Array<React.ReactElement>;\n    tour_step_key: number;\n    img?: string;\n    media?: string;\n};\n\nexport const BOT_BUILDER_MOBILE: TMobileTourConfig[] = [\n    {\n        header: localize('Step 1'),\n        content: [<Localize key='step-1' i18n_default_text={`First, click the Import icon on the tool bar.`} />],\n        tour_step_key: 1,\n    },\n    {\n        header: localize('Step 2'),\n        content: [\n            <Localize\n                key='step-2'\n                i18n_default_text={`Next, import your bot directly from your mobile device or from Google Drive.`}\n            />,\n        ],\n        tour_step_key: 2,\n    },\n    {\n        header: localize('Step 3'),\n        content: [\n            <Localize\n                key='step-3'\n                i18n_default_text={`Once imported, you will see a preview of the bot on the workspace. Click run to start trading with this bot.`}\n            />,\n        ],\n        tour_step_key: 3,\n    },\n];\n\nexport const DBOT_ONBOARDING_MOBILE: TMobileTourConfig[] = [\n    {\n        header: localize('Get started on Deriv Bot'),\n        content: [\n            <Localize\n                key='get-started-on-deriv-bot'\n                i18n_default_text='Hi! Hit <0>Start</0> for a quick tour.'\n                components={[<strong key={0} />]}\n            />,\n        ],\n        tour_step_key: 1,\n    },\n    {\n        header: localize('Import or choose your bot'),\n        content: [\n            <Localize\n                key='import-or-choose-your-bot'\n                i18n_default_text='Import your bot or tap Quick Strategies to choose from the ready-to-use bot templates.'\n            />,\n        ],\n        media: getUrlBase('/public/videos/dbot-mobile-onboarding-step-1.mp4'),\n        tour_step_key: 2,\n    },\n    {\n        header: localize('Monitor the market'),\n        content: [\n            <Localize key='monitor-the-market' i18n_default_text='View the market price of your favourite assets.' />,\n        ],\n        media: getUrlBase('/public/videos/dbot-mobile-onboarding-step-2.mp4'),\n        tour_step_key: 3,\n    },\n    {\n        header: localize('Learn more with our tutorials'),\n        content: [\n            <Localize\n                key='learn-more-with-our-tutorials'\n                i18n_default_text='Explore the video guides and FAQs to build your bot in the tutorials tab.'\n            />,\n        ],\n        media: getUrlBase('/public/videos/dbot-mobile-onboarding-step-3.mp4'),\n        tour_step_key: 4,\n    },\n    {\n        header: localize('Use these shortcuts'),\n        img: getImageLocation('dbot-mobile-onboarding-step-4.png'),\n        content: [\n            <Localize\n                key='use-these-shortcuts'\n                i18n_default_text='You can also import or build your bot using any of these shortcuts.'\n            />,\n        ],\n        tour_step_key: 5,\n    },\n    {\n        header: localize('Check your bot’s performance'),\n        media: getUrlBase('/public/videos/dbot-mobile-onboarding-step-5.mp4'),\n        content: [\n            <Localize key='check-your-bots-performance' i18n_default_text='See how your bot is doing in real-time.' />,\n        ],\n        tour_step_key: 6,\n    },\n    {\n        header: localize('Run your bot'),\n        media: getUrlBase('/public/videos/dbot-mobile-onboarding-step-6.mp4'),\n        content: [\n            <Localize\n                key='run-your-bot'\n                i18n_default_text='Click <0>Run</0> when you want to start trading, and click <0>Stop</0> when you want to stop.'\n                components={[<strong key={0} />]}\n            />,\n        ],\n        tour_step_key: 7,\n    },\n    {\n        header: localize('Want to retake the tour?'),\n        img: getImageLocation('dbot-mobile-onboarding-step-7.png'),\n        content: [<Localize key='want-to-retake-the-tour' i18n_default_text='Head to the Tutorials tab to do so.' />],\n        tour_step_key: 8,\n    },\n];\n\nexport const getTourDialogInfo = (is_mobile: boolean) => {\n    return is_mobile ? (\n        <Localize\n            key='tour-dialog-info-mobile'\n            i18n_default_text='Here’s a quick guide on how to use Deriv Bot on the go.'\n        />\n    ) : (\n        <Localize\n            key='tour-dialog-info-desktop'\n            i18n_default_text='Learn how to build your bot from scratch using a simple strategy.'\n        />\n    );\n};\n\nexport const getTourDialogAction = (is_mobile: boolean) => {\n    if (is_mobile) {\n        return (\n            <Localize\n                key='tour-dialog-action-mobile'\n                i18n_default_text='You can import a bot from your mobile device or from Google drive, see a preview in the bot builder, and start trading by running the bot.'\n            />\n        );\n    }\n    return (\n        <Localize\n            key='tour-dialog-action-desktop'\n            i18n_default_text='Hit the <0>Start</0> button to begin and follow the tutorial.'\n        />\n    );\n};\n\nexport const onboarding_tour_header = (\n    <Localize key='onboarding-tour-header' i18n_default_text='Get started on Deriv Bot' />\n);\n\nexport const getBotBuilderTourHeader = (is_mobile: boolean) => {\n    if (is_mobile) {\n        return <Localize key='tour_header-mobile' i18n_default_text='Bot Builder guide' />;\n    }\n    return <Localize key='tour_header-desktop' i18n_default_text=\"Let's build a Bot!\" />;\n};\n","import React from 'react';\nimport { Dialog, Text } from '@deriv/components';\nimport { observer, useStore } from '@deriv/stores';\nimport { Localize, localize } from '@deriv/translations';\nimport { DBOT_TABS } from 'Constants/bot-contents';\nimport { useDBotStore } from '../../../../stores/useDBotStore';\nimport {\n    getBotBuilderTourHeader,\n    getTourDialogAction,\n    getTourDialogInfo,\n    onboarding_tour_header,\n} from '../tour-content';\nimport { setTourSettings, tour_list } from '../utils';\n\nconst TourStartDialog = observer(() => {\n    const { ui } = useStore();\n    const { dashboard } = useDBotStore();\n    const { active_tab, is_tour_dialog_visible, setTourDialogVisibility, setActiveTour, setShowMobileTourDialog } =\n        dashboard;\n    const { is_desktop } = ui;\n    const tour_token = active_tab === 0 ? 'onboard_tour_token' : 'bot_builder_token';\n    const toggleTour = () => {\n        if (!is_desktop) setShowMobileTourDialog(false);\n        setTourDialogVisibility(false);\n        setActiveTour('');\n        setTourSettings(new Date().getTime(), tour_token);\n    };\n\n    const onboard_tour = active_tab === DBOT_TABS.DASHBOARD;\n    const tour_dialog_info = getTourDialogInfo(!is_desktop);\n    const tour_dialog_action = getTourDialogAction(!is_desktop);\n\n    const getTourContent = () => {\n        return (\n            <>\n                {onboard_tour ? (\n                    <Localize\n                        key={0}\n                        i18n_default_text='Hi! Hit <0>Start</0> for a quick tour.'\n                        components={[<strong key={0} />]}\n                    />\n                ) : (\n                    <>\n                        <div className='dc-dialog__content__description__text'>{tour_dialog_info}</div>\n                        <div className='dc-dialog__content__description__text'>{tour_dialog_action}</div>\n                        <div className='dc-dialog__content__description__text'>\n                            <Localize\n                                key={0}\n                                i18n_default_text={'Note: You can also find this tutorial in the <0>Tutorials</0> tab.'}\n                                components={[<strong key={0} />]}\n                            />\n                        </div>\n                    </>\n                )}\n            </>\n        );\n    };\n\n    const onHandleConfirm = () => {\n        setActiveTour(tour_list[active_tab]);\n        if (!is_desktop) setShowMobileTourDialog(false);\n        setTourDialogVisibility(false);\n        setTourSettings(new Date().getTime(), tour_token);\n    };\n    const header_text_size = is_desktop ? 's' : 'xs';\n    const content_text_size = is_desktop ? 'xs' : 'xxs';\n\n    const tour_headers = active_tab === 0 ? onboarding_tour_header : getBotBuilderTourHeader(!is_desktop);\n    return (\n        <div>\n            <Dialog\n                is_visible={is_tour_dialog_visible}\n                cancel_button_text={localize('Skip')}\n                onCancel={() => toggleTour()}\n                confirm_button_text={localize('Start')}\n                onConfirm={onHandleConfirm}\n                is_mobile_full_width\n                className={'dc-dialog tour-dialog'}\n                has_close_icon={false}\n            >\n                <div className='dc-dialog__content__header'>\n                    <Text weight='bold' color='prominent' size={header_text_size}>\n                        {tour_headers}\n                    </Text>\n                </div>\n                <div className='dc-dialog__content__description'>\n                    <Text size={content_text_size} color='prominent'>\n                        {getTourContent()}\n                    </Text>\n                </div>\n            </Dialog>\n        </div>\n    );\n});\n\nexport default TourStartDialog;\n","import { useState } from 'react';\nimport { CallBackProps } from 'react-joyride';\n\nexport const useTourHandler = () => {\n    const [is_finished, setIsFinished] = useState(false);\n    const [is_close_tour, setIsCloseTour] = useState(false);\n\n    const handleJoyrideCallback = (data: CallBackProps) => {\n        const { action, status } = data;\n        if (status === 'finished') {\n            setIsFinished(true);\n        } else if (action === 'close' || action === 'skip') {\n            setIsCloseTour(true);\n        }\n    };\n\n    return {\n        is_finished,\n        handleJoyrideCallback,\n        setIsFinished,\n        is_close_tour,\n        setIsCloseTour,\n    };\n};\n","import React from 'react';\nimport { observer } from '@deriv/stores';\nimport { getSetting } from 'Utils/settings';\nimport { useDBotStore } from 'Stores/useDBotStore';\nimport ReactJoyrideWrapper from '../common/react-joyride-wrapper';\nimport TourEndDialog from '../common/tour-end-dialog';\nimport TourStartDialog from '../common/tour-start-dialog';\nimport { BOT_BUILDER_TOUR } from '../tour-content';\nimport { useTourHandler } from '../useTourHandler';\n\nconst BotBuilderTourDesktop = observer(() => {\n    const { is_close_tour, is_finished, handleJoyrideCallback, setIsCloseTour } = useTourHandler();\n    const { dashboard } = useDBotStore();\n    const { active_tab, active_tour, setActiveTour, setTourDialogVisibility } = dashboard;\n    const token = getSetting('bot_builder_token');\n    if (!token && active_tab === 1) setTourDialogVisibility(true);\n\n    React.useEffect(() => {\n        if (is_finished) {\n            setTourDialogVisibility(true);\n            setActiveTour('');\n        } else if (is_close_tour) {\n            setActiveTour('');\n            setIsCloseTour(false);\n        }\n    }, [is_close_tour, is_finished, setActiveTour, setIsCloseTour, setTourDialogVisibility]);\n\n    return (\n        <>\n            {!is_finished ? <TourStartDialog /> : <TourEndDialog />}\n            {active_tour && (\n                <ReactJoyrideWrapper\n                    handleCallback={handleJoyrideCallback}\n                    steps={BOT_BUILDER_TOUR}\n                    styles={{\n                        options: {\n                            arrowColor: 'transparent',\n                            backgroundColor: 'var(--general-main-2)',\n                            primaryColor: 'var(--brand-red-coral)',\n                            textColor: 'var(--text-general)',\n                        },\n                    }}\n                />\n            )}\n        </>\n    );\n});\n\nexport default BotBuilderTourDesktop;\n","import React from 'react';\n\nimport { Text } from '@deriv/components';\n\ntype TTourButton = {\n    type?: string;\n    onClick: () => void;\n    label: string;\n};\n\nconst TourButton = ({ label, type = 'default', ...props }: TTourButton) => {\n    if (!label) return null;\n    return (\n        <button className={type} {...props}>\n            <Text color='prominent' align='center' weight='bold' as='span' line_height='s' size='xs'>\n                {label}\n            </Text>\n        </button>\n    );\n};\n\nexport default TourButton;\n","import React from 'react';\nimport { ProgressBarTracker, Text } from '@deriv/components';\nimport { observer } from '@deriv/stores';\nimport { localize } from '@deriv/translations';\nimport { getSetting } from 'Utils/settings';\nimport { useDBotStore } from 'Stores/useDBotStore';\nimport TourButton from '../common/tour-button';\nimport TourStartDialog from '../common/tour-start-dialog';\nimport { BOT_BUILDER_MOBILE } from '../tour-content';\nimport { highlightLoadModalButton } from '../utils';\n\nconst BotBuilderTourMobile = observer(() => {\n    const { dashboard, load_modal, quick_strategy } = useDBotStore();\n    const { toggleTourLoadModal } = load_modal;\n    const {\n        onTourEnd,\n        setTourActiveStep,\n        active_tour,\n        show_mobile_tour_dialog,\n        active_tab,\n        setShowMobileTourDialog,\n        setTourDialogVisibility,\n    } = dashboard;\n    const { is_open } = quick_strategy;\n    const [tour_step, setTourStep] = React.useState<number>(1);\n    const content_data = BOT_BUILDER_MOBILE.find(({ tour_step_key }) => {\n        return tour_step_key === tour_step;\n    });\n    const test_id = tour_step === 3 ? 'finish-bot-builder-tour' : 'next-bot-builder-tour';\n\n    React.useEffect(() => {\n        setTourActiveStep(tour_step);\n        //component does not rerender so calling this to highlight\n        !show_mobile_tour_dialog && highlightLoadModalButton(active_tour, tour_step);\n        if (tour_step === 2) toggleTourLoadModal(true);\n        else if (active_tour !== '') toggleTourLoadModal(false);\n        const token = getSetting('bot_builder_token');\n        if (!token && active_tab === 1) {\n            if (is_open) {\n                setTourDialogVisibility(false);\n            } else {\n                setTourDialogVisibility(true);\n            }\n            setShowMobileTourDialog(true);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [tour_step, show_mobile_tour_dialog]);\n\n    const tour_button_text = tour_step === 3 ? localize('Finish') : localize('Next');\n    const is_tour_active = active_tour === 'onboarding';\n    return (\n        <>\n            {show_mobile_tour_dialog && <TourStartDialog />}\n            {active_tour && !show_mobile_tour_dialog && (\n                <div data-testid='botbuilder-tour-mobile' className='dbot-slider dbot-slider__bot-builder-tour'>\n                    <div className='dbot-slider__label'>\n                        <Text as='span' size='xs' weight='bold'>\n                            {content_data?.header}\n                        </Text>\n                    </div>\n                    <div className='dbot-slider__content'>\n                        <Text as='span' line_height='s' size='xxs'>\n                            {content_data?.content}\n                        </Text>\n                    </div>\n                    <div className='dbot-slider__status'>\n                        <div className='dbot-slider__progress-bar'>\n                            {\n                                <ProgressBarTracker\n                                    step={tour_step}\n                                    steps_list={BOT_BUILDER_MOBILE.map(v => v.tour_step_key.toString())}\n                                    onStepChange={setTourStep}\n                                />\n                            }\n                        </div>\n                        <div className='dbot-slider__button-group'>\n                            {tour_step !== 1 && (\n                                <TourButton\n                                    onClick={() => {\n                                        setTourStep(tour_step - 1);\n                                    }}\n                                    label={localize('Previous')}\n                                    data-testid='prev-bot-builder-tour'\n                                />\n                            )}\n                            <TourButton\n                                type='danger'\n                                onClick={() => {\n                                    setTourStep(tour_step + 1);\n                                    onTourEnd(tour_step, is_tour_active);\n                                }}\n                                label={tour_button_text}\n                                data-testid={test_id}\n                            />\n                        </div>\n                    </div>\n                </div>\n            )}\n        </>\n    );\n});\n\nexport default BotBuilderTourMobile;\n","import React from 'react';\nimport { observer } from 'mobx-react-lite';\nimport BotBuilderTourDesktop from './bot-builder-tour-desktop';\nimport BotBuilderTourMobile from './bot-builder-tour-mobile';\n\ntype TBotBuilderTourHandler = {\n    is_mobile: boolean;\n};\n\nconst BotBuilderTourHandler: React.FC<TBotBuilderTourHandler> = observer(({ is_mobile }) => {\n    return <>{is_mobile ? <BotBuilderTourMobile /> : <BotBuilderTourDesktop />};</>;\n});\n\nexport default BotBuilderTourHandler;\n","import { TEvents } from '@deriv-com/analytics';\nimport { ACTION, form_name, type TFormStrategy } from './constants';\nimport { getRsStrategyType, getTradeParameterData } from './utils';\nimport { cacheTrackEvents } from '@deriv/shared';\n\nexport const rudderStackSendQsRunStrategyEvent = ({\n    form_values,\n    selected_strategy,\n}: TEvents['ce_bot_form'] & TFormStrategy) => {\n    cacheTrackEvents.loadEvent([\n        {\n            event: {\n                name: 'ce_bot_form',\n                properties: {\n                    action: ACTION.RUN_QUICK_STRATEGY,\n                    form_name,\n                    subform_name: 'quick_strategy',\n                    strategy_name: getRsStrategyType(selected_strategy),\n                    ...getTradeParameterData({ form_values, selected_strategy }),\n                },\n            },\n        },\n    ]);\n};\n\nexport const rudderStackSendQsEditStrategyEvent = ({\n    form_values,\n    selected_strategy,\n}: TEvents['ce_bot_form'] & TFormStrategy) => {\n    cacheTrackEvents.loadEvent([\n        {\n            event: {\n                name: 'ce_bot_form',\n                properties: {\n                    action: ACTION.EDIT_QUICK_STRATEGY,\n                    form_name,\n                    subform_name: 'quick_strategy',\n                    strategy_name: getRsStrategyType(selected_strategy),\n                    ...getTradeParameterData({ form_values, selected_strategy }),\n                },\n            },\n        },\n    ]);\n};\n\nexport const rudderStackSendQsSelectedTabEvent = ({ quick_strategy_tab }: TEvents['ce_bot_form']) => {\n    cacheTrackEvents.loadEvent([\n        {\n            event: {\n                name: 'ce_bot_form',\n                properties: {\n                    action: ACTION.SWITCH_QUICK_STRATEGY_TAB,\n                    form_name,\n                    subform_name: 'quick_strategy',\n                    quick_strategy_tab,\n                },\n            },\n        },\n    ]);\n};\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport { Icon, Text } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { useDBotStore } from 'Stores/useDBotStore';\n\ntype TContentData = {\n    header: string;\n    content: JSX.Element | React.ReactNode[] | null;\n} | null;\n\ntype TPartialAccordion = Partial<{\n    test_id: string;\n    is_cursive: boolean;\n    no_collapsible: boolean;\n    expanded_subtitles_storage: { [key: string]: boolean };\n    setExpandedSubtitlesStorage: (value: { [key: string]: boolean }) => void;\n    has_subtitle: boolean;\n}>;\n\ntype TAccordion = {\n    content_data: TContentData;\n    expanded: boolean;\n    font_size: string;\n} & TPartialAccordion;\n\nconst Accordion = ({\n    content_data,\n    expanded = false,\n    test_id = 'dbot-acc-id',\n    is_cursive = false,\n    no_collapsible = true,\n    has_subtitle = true,\n    font_size,\n    ...props\n}: TAccordion) => {\n    const [is_open, setOpen] = useState(expanded);\n    const {\n        quick_strategy: { selected_strategy },\n    } = useDBotStore();\n    if (!content_data) return null;\n    const { content, header } = content_data;\n\n    const { expanded_subtitles_storage, setExpandedSubtitlesStorage } = props;\n    const accordion_subtitle = `${header}__${selected_strategy}`.split(' ').join('_').toLocaleLowerCase();\n    const is_expanded_section = expanded_subtitles_storage ? expanded_subtitles_storage[accordion_subtitle] : false;\n    const should_be_expanded = is_expanded_section || is_open || !has_subtitle;\n\n    return (\n        <div className='dbot-accordion'>\n            {has_subtitle && (\n                <button\n                    className={classNames('dbot-accordion__navbar', {\n                        'dbot-accordion__navbar--no-event': !no_collapsible,\n                    })}\n                    data-testid={test_id}\n                    onClick={(e: React.MouseEvent) => {\n                        e.preventDefault();\n                        setOpen(!should_be_expanded);\n                        if (expanded_subtitles_storage && setExpandedSubtitlesStorage) {\n                            setExpandedSubtitlesStorage({\n                                ...expanded_subtitles_storage,\n                                [accordion_subtitle]: !should_be_expanded,\n                            });\n                        }\n                    }}\n                >\n                    <div\n                        className={classNames('dbot-accordion__header', {\n                            'dbot-accordion__header--cursive': is_cursive,\n                        })}\n                    >\n                        <Text as='span' size={font_size} weight='bold'>\n                            {localize(header)}\n                        </Text>\n                    </div>\n                    {no_collapsible && (\n                        <div className='dbot-accordion__icon'>\n                            <Icon icon={should_be_expanded ? 'IcMinus' : 'IcAdd'} />\n                        </div>\n                    )}\n                </button>\n            )}\n            <div\n                className={classNames('dbot-accordion__content', {\n                    'dbot-accordion__content--open': should_be_expanded,\n                })}\n                data-testid='accordion-content'\n            >\n                <Text as='span' line_height='s' size={font_size}>\n                    {content}\n                </Text>\n            </div>\n        </div>\n    );\n};\n\nexport default Accordion;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Text } from '@deriv/components';\nimport { observer, useStore } from '@deriv/stores';\nimport { TStrategyDescription } from '../types';\nimport parse from 'html-react-parser';\n\nconst StrategyDescription = observer(({ item, font_size }: TStrategyDescription) => {\n    const { ui } = useStore();\n    const { is_dark_mode_on } = ui;\n    const class_name = item?.className ?? '';\n    switch (item.type) {\n        case 'text': {\n            const class_names = classNames(`qs__description__content ${class_name}`);\n            return (\n                <>\n                    {item?.content?.map((text: string) => {\n                        const parsed_text = parse(text);\n                        return (\n                            <div className={class_names} key={text}>\n                                <Text size={font_size}>{parsed_text}</Text>\n                            </div>\n                        );\n                    })}\n                </>\n            );\n        }\n        case 'text_italic': {\n            const class_names = classNames(`qs__description__content italic ${class_name}`);\n            return (\n                <>\n                    {item?.content?.map((text: string) => {\n                        const parsed_text = parse(text);\n                        return (\n                            <div className={class_names} key={text}>\n                                <Text size={font_size}>{parsed_text}</Text>\n                            </div>\n                        );\n                    })}\n                </>\n            );\n        }\n        case 'media': {\n            const class_names = classNames(`qs__description__image ${class_name}`);\n            return (\n                <div className={class_names} style={item?.styles}>\n                    <img src={is_dark_mode_on ? item.dark_src ?? item.src : item.src} alt={item.alt} />\n                </div>\n            );\n        }\n        default:\n            return null;\n    }\n});\n\nexport default StrategyDescription;\n","import React from 'react';\nimport { observer, useStore } from '@deriv/stores';\nimport Accordion from '../../../tutorials/dbot-tours/common/accordion';\nimport StrategyDescription from '../descriptions/strategy-description';\nimport { TDescription, TDescriptionItem } from '../types';\n\ntype TAccordionStrategyGroupProps = {\n    tutorial_selected_strategy?: string;\n    grouped_objects_by_title: TDescription;\n    expanded_subtitles_storage: { [key: string]: boolean };\n    setExpandedSubtitlesStorage: (value: { [key: string]: boolean }) => void;\n};\n\ntype TDescriptionContent = {\n    item: TDescriptionItem[] | string;\n    font_size: string;\n};\n\nexport const DescriptionContent = ({ item, font_size }: TDescriptionContent) => {\n    const content_data: TDescriptionItem[] | string = Array.isArray(item) ? item : item.slice(1);\n    return (\n        <>\n            {Array.isArray(content_data) &&\n                content_data?.map(item => (\n                    <React.Fragment key={item.id}>\n                        <StrategyDescription item={item} font_size={font_size} />\n                    </React.Fragment>\n                ))}\n        </>\n    );\n};\n\nconst AccordionStrategyGroup = observer(\n    ({\n        tutorial_selected_strategy,\n        grouped_objects_by_title,\n        expanded_subtitles_storage,\n        setExpandedSubtitlesStorage,\n    }: TAccordionStrategyGroupProps) => {\n        const { ui } = useStore();\n        const { is_desktop } = ui;\n        const desktop_font_size = tutorial_selected_strategy ? 's' : 'xs';\n        const font_size: string = React.useMemo<string>(\n            () => (is_desktop ? desktop_font_size : 'xs'),\n            [is_desktop, desktop_font_size]\n        );\n\n        return (\n            <>\n                {Array.isArray(grouped_objects_by_title) &&\n                    (grouped_objects_by_title as TDescriptionItem[][]).map((data: TDescriptionItem[]) => {\n                        const subtitle_value = data?.[0]?.content?.[0] ?? '';\n                        return (\n                            <Accordion\n                                key={`accordion-${subtitle_value}`}\n                                content_data={{\n                                    header: subtitle_value,\n                                    content: <DescriptionContent item={data} font_size={font_size} />,\n                                }}\n                                expanded={!!data[0]?.expanded}\n                                is_cursive={false}\n                                no_collapsible={data[0]?.no_collapsible}\n                                has_subtitle={!!subtitle_value}\n                                expanded_subtitles_storage={expanded_subtitles_storage}\n                                setExpandedSubtitlesStorage={setExpandedSubtitlesStorage}\n                                font_size={font_size}\n                            />\n                        );\n                    })}\n            </>\n        );\n    }\n);\n\nexport default AccordionStrategyGroup;\n","import React, { useState } from 'react';\nimport { observer } from '@deriv/stores';\nimport { useDBotStore } from 'Stores/useDBotStore';\nimport { STRATEGIES } from '../config';\nimport { TDescription, TDescriptionItem } from '../types';\nimport AccordionStrategyGroup from './accordion-strategy-group';\nimport './strategy-accordion.scss';\n\ntype TStrategyDescription = Partial<{\n    formfields: React.ReactNode;\n    active_tab: string;\n    tutorial_selected_strategy: string;\n}>;\n\ntype TExpandedSubtitlesStorageDefault = {\n    [key: string]: boolean;\n};\n\nexport type TDataGroupedObjectsByTitle = {\n    type: string;\n    content: string[];\n};\n\nconst StrategyTabContent: React.FC<TStrategyDescription> = observer(\n    ({ formfields, active_tab, tutorial_selected_strategy }) => {\n        const { quick_strategy } = useDBotStore();\n        const { selected_strategy } = quick_strategy;\n\n        const expanded_subtitles_storage_default: TExpandedSubtitlesStorageDefault = {};\n        const [expanded_subtitles_storage, setExpandedSubtitlesStorage] = useState(expanded_subtitles_storage_default);\n\n        const strategy = STRATEGIES[tutorial_selected_strategy || (selected_strategy as keyof typeof STRATEGIES)];\n\n        const makeGroupedObjectsByTitle = () => {\n            return strategy?.description?.reduce((acc: TDescription, obj: TDescriptionItem, idx) => {\n                const is_subtitle = obj.type === 'subtitle_italic' || obj.type === 'subtitle';\n                if (is_subtitle) {\n                    acc.push([]);\n\n                    const generateStorageKey = (obj: TDataGroupedObjectsByTitle, selected_strategy: string): string => {\n                        return `${obj.content[0]}__${selected_strategy}`.split(' ').join('_').toLowerCase();\n                    };\n\n                    expanded_subtitles_storage_default[\n                        generateStorageKey(obj as TDataGroupedObjectsByTitle, selected_strategy)\n                    ] = obj?.expanded ?? false;\n                }\n\n                (acc[acc.length - 1] as TDescriptionItem[]).push({ ...obj, id: idx });\n                return acc;\n            }, []);\n        };\n\n        const grouped_objects_by_title: TDescription = Array.isArray(strategy?.description)\n            ? makeGroupedObjectsByTitle()\n            : [{ type: 'text', content: [strategy?.description] }];\n\n        return (\n            <>\n                {active_tab === 'TRADE_PARAMETERS' ? (\n                    <div className='qs__body__content__form'>{formfields}</div>\n                ) : (\n                    <div className='qs__body__content__description'>\n                        <AccordionStrategyGroup\n                            tutorial_selected_strategy={tutorial_selected_strategy}\n                            grouped_objects_by_title={grouped_objects_by_title}\n                            expanded_subtitles_storage={expanded_subtitles_storage}\n                            setExpandedSubtitlesStorage={setExpandedSubtitlesStorage}\n                        />\n                    </div>\n                )}\n            </>\n        );\n    }\n);\n\nexport default StrategyTabContent;\n","import { useFormikContext } from 'formik';\nimport { useStore } from '@deriv/stores';\nimport { useDBotStore } from 'Stores/useDBotStore';\nimport { rudderStackSendQsRunStrategyEvent } from '../../../../analytics/rudderstack-quick-strategy';\nimport { TFormValues } from '../types';\n\nconst useQsSubmitHandler = () => {\n    const { client } = useStore();\n    const { currency, balance, is_logged_in } = client;\n    const { submitForm, setFieldValue, values, isValid, validateForm } = useFormikContext<TFormValues>();\n    const { quick_strategy, run_panel } = useDBotStore();\n    const {\n        toggleStopBotDialog,\n        setLossThresholdWarningData,\n        selected_strategy,\n        loss_threshold_warning_data,\n        onSubmit,\n    } = quick_strategy;\n\n    const handleSubmit = async () => {\n        const loss_amount = Number(values?.loss ?? 0);\n        const profit_threshold = Number(values?.profit ?? 0);\n        const stored_dont_show_warning_value = localStorage?.getItem('qs-dont-show-loss-threshold-warning');\n        const dont_show_warning = JSON.parse(stored_dont_show_warning_value ?? 'false');\n        if (\n            !loss_threshold_warning_data.already_shown &&\n            (loss_amount > 0.5 * Number(balance ?? 0) || loss_amount > 2 * profit_threshold) &&\n            is_logged_in &&\n            !dont_show_warning\n        ) {\n            setLossThresholdWarningData({\n                show: true,\n                loss_amount,\n                currency,\n                already_shown: true,\n            });\n        } else {\n            proceedFormSubmission();\n        }\n    };\n\n    const proceedFormSubmission = async () => {\n        if (run_panel.is_running) {\n            await setFieldValue('action', 'EDIT');\n            validateForm();\n            submitForm();\n            toggleStopBotDialog();\n            rudderStackSendQsRunStrategyEvent({\n                form_values: values,\n                selected_strategy,\n            });\n        } else {\n            await setFieldValue('action', 'RUN');\n            validateForm();\n            submitForm().then((form_data: TFormValues | void) => {\n                if (isValid && form_data) {\n                    rudderStackSendQsRunStrategyEvent({\n                        form_values: values,\n                        selected_strategy,\n                    });\n                    onSubmit(form_data);\n                }\n            });\n        }\n    };\n\n    return { handleSubmit, proceedFormSubmission };\n};\n\nexport default useQsSubmitHandler;\n","import { localize } from '@deriv/translations';\nimport { STRATEGIES } from '../config';\n\nexport enum QsSteps {\n    StrategySelect,\n    StrategyVerified,\n    StrategyCompleted,\n}\n\ntype TTradeTypesItemsIndex = {\n    [key: string]: number;\n};\n\nexport const TRADE_TYPE_INDEX: TTradeTypesItemsIndex = Object.freeze({\n    ALL: 0,\n    // MULTIPLIERS: 2,\n    ACCUMULATORS: 1,\n    OPTIONS: 2,\n});\n\n// export const TRADE_TYPES = ['All', 'Accumulators', 'Options', 'Multipliers'];\nexport const TRADE_TYPES = [localize('All'), localize('Accumulators'), localize('Options')];\n\nexport type TTStrategyTradeAssociation = {\n    name: string;\n    display_name: string;\n    id: number;\n    parent: Array<string>;\n};\n\nexport type TStrategyTradeAssociations = Array<TTStrategyTradeAssociation>;\n\nexport const STRATEGY_TRADE_ASSOCIATIONS: TStrategyTradeAssociations = [\n    {\n        name: 'MARTINGALE',\n        display_name: STRATEGIES.MARTINGALE.label,\n        id: 0,\n        parent: [localize('Options')],\n    },\n    {\n        name: 'D_ALEMBERT',\n        display_name: STRATEGIES.D_ALEMBERT.label,\n        id: 1,\n        parent: [localize('Options')],\n    },\n    {\n        name: 'REVERSE_MARTINGALE',\n        display_name: STRATEGIES.REVERSE_MARTINGALE.label,\n        id: 2,\n        parent: [localize('Options')],\n    },\n    {\n        name: 'REVERSE_D_ALEMBERT',\n        display_name: STRATEGIES.REVERSE_D_ALEMBERT.label,\n        id: 3,\n        parent: [localize('Options')],\n    },\n    {\n        name: 'OSCARS_GRIND',\n        display_name: STRATEGIES.OSCARS_GRIND.label,\n        id: 4,\n        parent: [localize('Options')],\n    },\n    {\n        name: 'STRATEGY_1_3_2_6',\n        display_name: STRATEGIES.STRATEGY_1_3_2_6.label,\n        id: 5,\n        parent: [localize('Options')],\n    },\n    {\n        name: 'ACCUMULATORS_MARTINGALE',\n        display_name: STRATEGIES.ACCUMULATORS_MARTINGALE.label,\n        id: 6,\n        parent: [localize('Accumulators')],\n    },\n    {\n        name: 'ACCUMULATORS_MARTINGALE_ON_STAT_RESET',\n        display_name: STRATEGIES.ACCUMULATORS_MARTINGALE_ON_STAT_RESET.label,\n        id: 7,\n        parent: [localize('Accumulators')],\n    },\n    {\n        name: 'ACCUMULATORS_DALEMBERT',\n        display_name: STRATEGIES.ACCUMULATORS_DALEMBERT.label,\n        id: 8,\n        parent: [localize('Accumulators')],\n    },\n    {\n        name: 'ACCUMULATORS_DALEMBERT_ON_STAT_RESET',\n        display_name: STRATEGIES.ACCUMULATORS_DALEMBERT_ON_STAT_RESET.label,\n        id: 9,\n        parent: [localize('Accumulators')],\n    },\n    {\n        name: 'ACCUMULATORS_REVERSE_MARTINGALE',\n        display_name: STRATEGIES.ACCUMULATORS_REVERSE_MARTINGALE.label,\n        id: 10,\n        parent: [localize('Accumulators')],\n    },\n    {\n        name: 'ACCUMULATORS_REVERSE_MARTINGALE_ON_STAT_RESET',\n        display_name: STRATEGIES.ACCUMULATORS_REVERSE_MARTINGALE_ON_STAT_RESET.label,\n        id: 11,\n        parent: [localize('Accumulators')],\n    },\n    {\n        name: 'ACCUMULATORS_REVERSE_DALEMBERT',\n        display_name: STRATEGIES.ACCUMULATORS_REVERSE_DALEMBERT.label,\n        id: 12,\n        parent: [localize('Accumulators')],\n    },\n    {\n        name: 'ACCUMULATORS_REVERSE_DALEMBERT_ON_STAT_RESET',\n        display_name: STRATEGIES.ACCUMULATORS_REVERSE_DALEMBERT_ON_STAT_RESET.label,\n        id: 13,\n        parent: [localize('Accumulators')],\n    },\n];\n","import React from 'react';\nimport { localize } from '@deriv/translations';\nimport { VerticalStepper } from '@deriv-com/quill-ui';\nimport { LinearProgressBar } from '@deriv-com/ui';\nimport { QsSteps } from './trade-constants';\n\ntype TQSStepper = {\n    current_step: QsSteps;\n    is_mobile?: boolean;\n};\n\nconst QSStepper = ({ current_step, is_mobile = false }: TQSStepper) => {\n    const percentage = current_step === QsSteps.StrategyCompleted ? 100 : 50;\n    return is_mobile ? (\n        <LinearProgressBar percentage={percentage} label='' danger_limit={101} is_loading={false} warning_limit={0} />\n    ) : (\n        <div className='qs-stepper'>\n            <VerticalStepper\n                currentStep={current_step}\n                labels={[localize('Default'), localize('Strategy template'), localize('Trade parameters')]}\n            />\n        </div>\n    );\n};\n\nexport default QSStepper;\n","import React from 'react';\nimport { Text } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { Link } from '@deriv-com/quill-ui';\nimport {\n    STRATEGY_TRADE_ASSOCIATIONS,\n    TRADE_TYPE_INDEX,\n    TRADE_TYPES,\n    TStrategyTradeAssociations,\n} from './trade-constants';\n\ntype TStrategyListProps = {\n    selector_chip_value: number;\n    search_value: string;\n    is_searching: boolean;\n    onSelectStrategy: (strategy: string, trade_type: string) => void;\n};\ntype TStrategyBlock = {\n    title: string;\n    items: TStrategyTradeAssociations;\n    onSelectStrategy: (strategy: string, trade_type: string) => void;\n};\ntype TStrategyTypes = { type: string; items: TStrategyTradeAssociations }[];\n\nconst StrategyBlock = ({ title, items, onSelectStrategy }: TStrategyBlock) => {\n    return items.length > 0 ? (\n        <div className='strategy-template-picker__strategy'>\n            <div className='strategy-template-picker__title'>\n                <Text size='xs' weight='bold'>\n                    {title}\n                </Text>\n            </div>\n            {items.map((item, index) => (\n                <div className='strategy-template-picker__links' key={index}>\n                    <Link hasChevron size='sm' onClick={() => onSelectStrategy(item.name, title)}>\n                        {item.display_name}\n                    </Link>\n                </div>\n            ))}\n        </div>\n    ) : null;\n};\n\nconst StrategyList = ({ selector_chip_value, search_value, is_searching, onSelectStrategy }: TStrategyListProps) => {\n    const result: TStrategyTradeAssociations = [];\n    let is_parent_match_value = false;\n\n    const filterVisibleParents = (parent: string) => {\n        is_parent_match_value = parent.toLowerCase().includes(search_value.toLowerCase());\n        return (is_searching && is_parent_match_value) || !is_searching;\n    };\n\n    STRATEGY_TRADE_ASSOCIATIONS.filter(\n        item =>\n            item.parent.some(parent => filterVisibleParents(parent)) ||\n            item.display_name.toLowerCase().includes(search_value.toLowerCase())\n    ).forEach(item => {\n        const tmp_item = { ...item };\n        if (is_searching && search_value !== '') {\n            if (item.display_name.toLowerCase().includes(search_value.toLowerCase())) {\n                tmp_item.parent = [...item.parent];\n            } else {\n                const matched_parents = tmp_item.parent.filter(parent =>\n                    parent.toLowerCase().includes(search_value.toLowerCase())\n                );\n                tmp_item.parent = matched_parents.length > 0 ? matched_parents : item.parent;\n            }\n        } else {\n            tmp_item.parent = [...item.parent];\n        }\n        result.push(tmp_item);\n    });\n\n    const options = result.filter(item => item.parent.includes(TRADE_TYPES[TRADE_TYPE_INDEX.OPTIONS]));\n    const multiplier = result.filter(item => item.parent.includes(TRADE_TYPES[TRADE_TYPE_INDEX.MULTIPLIERS]));\n    const accumulator = result.filter(item => item.parent.includes(TRADE_TYPES[TRADE_TYPE_INDEX.ACCUMULATORS]));\n\n    const selected_chip_value = TRADE_TYPES[selector_chip_value];\n\n    const strategy_types: TStrategyTypes = [\n        { type: localize('Accumulators'), items: accumulator },\n        { type: localize('Options'), items: options },\n        { type: localize('Multipliers'), items: multiplier },\n    ];\n\n    const should_render = (type: string) => selected_chip_value === localize('All') || selected_chip_value === type;\n\n    const filtered_strategies = strategy_types.filter(({ type }) => should_render(type));\n    const has_visible_strategies = filtered_strategies.some(({ items }) => items.length > 0);\n\n    return result.length > 0 && has_visible_strategies ? (\n        <div className='strategy-template-picker__strategies'>\n            {filtered_strategies.map(({ type, items }) => (\n                <StrategyBlock key={type} title={type} items={items} onSelectStrategy={onSelectStrategy} />\n            ))}\n        </div>\n    ) : (\n        <div className='no-results'>\n            <Text size='xs'>{localize('No results found')}</Text>\n        </div>\n    );\n};\n\nexport default StrategyList;\n","import React from 'react';\nimport { LegacyGuide1pxIcon } from '@deriv/quill-icons';\nimport { observer } from '@deriv/stores';\nimport { Chip, SearchField } from '@deriv-com/quill-ui';\nimport { localize } from '@deriv/translations';\nimport { DBOT_TABS } from 'Constants/bot-contents';\nimport { useDBotStore } from 'Stores/useDBotStore';\nimport StrategyList from './strategy-list';\nimport { QsSteps, TRADE_TYPES } from './trade-constants';\nimport './strategy-template-picker.scss';\n\ntype TStrategyTemplatePicker = {\n    setCurrentStep: (current_step: QsSteps) => void;\n    setSelectedTradeType: (selected_trade_type: string) => void;\n};\n\nconst StrategyTemplatePicker = observer(({ setCurrentStep, setSelectedTradeType }: TStrategyTemplatePicker) => {\n    const { dashboard, quick_strategy } = useDBotStore();\n    const { setActiveTabTutorial, setActiveTab, setFAQSearchValue, filterTuotrialTab } = dashboard;\n    const { setFormVisibility, setSelectedStrategy } = quick_strategy;\n\n    const [selector_chip_value, setSelectorChipValue] = React.useState(0);\n    const [is_searching, setIsSearching] = React.useState(false);\n    const [search_value, setSearchValue] = React.useState('');\n\n    const handleChipSelect = (index: number) => {\n        setSelectorChipValue(index);\n    };\n\n    const onSelectStrategy = (strategy: string, trade_type: string) => {\n        setSelectedStrategy(strategy);\n        setSelectedTradeType(trade_type);\n        setCurrentStep(QsSteps.StrategyVerified);\n    };\n\n    return (\n        <div className='strategy-template-picker'>\n            <div className='strategy-template-picker__panel'>\n                <SearchField\n                    onChange={event => {\n                        setSearchValue(event.target.value);\n                        setIsSearching(true);\n                        setFAQSearchValue(event.target.value);\n                        filterTuotrialTab(event.target.value);\n                    }}\n                    placeholder={localize('Search')}\n                    type='text'\n                    value={search_value}\n                    inputSize='sm'\n                />\n                <button\n                    className='strategy-template-picker__icon'\n                    onClick={() => {\n                        setActiveTab(DBOT_TABS.TUTORIAL);\n                        setActiveTabTutorial(3);\n                        setFormVisibility(false);\n                    }}\n                >\n                    <LegacyGuide1pxIcon iconSize='sm' />\n                </button>\n            </div>\n            <div className='strategy-template-picker__chips'>\n                {TRADE_TYPES.map((item, index) => (\n                    <Chip.Selectable\n                        key={index}\n                        onClick={() => handleChipSelect(index)}\n                        selected={index == selector_chip_value}\n                        size='sm'\n                        label={item}\n                    />\n                ))}\n            </div>\n            <StrategyList\n                selector_chip_value={selector_chip_value}\n                search_value={search_value}\n                is_searching={is_searching}\n                onSelectStrategy={onSelectStrategy}\n            />\n        </div>\n    );\n});\n\nexport default StrategyTemplatePicker;\n","import React from 'react';\nimport { useFormikContext } from 'formik';\nimport { Button, Text, ThemedScrollbars } from '@deriv/components';\nimport Icon from '@deriv/components/src/components/icon/icon';\nimport { observer } from '@deriv/stores';\nimport { localize } from '@deriv/translations';\nimport { useDBotStore } from 'Stores/useDBotStore';\nimport { rudderStackSendQsEditStrategyEvent } from '../../../../analytics/rudderstack-quick-strategy';\nimport { STRATEGIES } from '../config';\nimport { TFormData, TFormValues } from '../types';\nimport StrategyTabContent from './strategy-tab-content';\nimport useQsSubmitHandler from './useQsSubmitHandler';\nimport QSStepper from './qs-stepper';\nimport StrategyTemplatePicker from './strategy-template-picker';\nimport { QsSteps } from './trade-constants';\nimport '../quick-strategy.scss';\n\ntype TDesktopFormWrapper = {\n    children: React.ReactNode;\n    current_step: QsSteps;\n    setCurrentStep: (current_step: QsSteps) => void;\n    onClickClose: () => void;\n    selected_trade_type: string;\n    setSelectedTradeType: (selected_trade_type: string) => void;\n};\n\nconst QuickSelectionPanel = ({\n    selected_trade_type,\n    selected_startegy_label,\n    children,\n}: Pick<TDesktopFormWrapper, 'selected_trade_type' | 'children'> & { selected_startegy_label: string }) => (\n    <>\n        <div className='qs__selected-options'>\n            <div className='qs__selected-options__item'>\n                <Text size='xs' line_height='s'>\n                    {localize('Trade type')}\n                </Text>\n                <Text size='xs' weight='bold' line_height='s'>\n                    {selected_trade_type}\n                </Text>\n            </div>\n            <div className='qs__selected-options__item'>\n                <Text size='xs' line_height='s'>\n                    {localize('Strategy')}\n                </Text>\n                <Text className='qs__selected-options__item__description' weight='bold' line_height='s'>\n                    {selected_startegy_label}\n                </Text>\n            </div>\n        </div>\n        <StrategyTabContent formfields={children} active_tab={'TRADE_PARAMETERS'} />\n    </>\n);\n\nconst FormWrapper = observer(\n    ({\n        children,\n        current_step,\n        setCurrentStep,\n        onClickClose,\n        selected_trade_type,\n        setSelectedTradeType,\n    }: TDesktopFormWrapper) => {\n        const scroll_ref = React.useRef<HTMLDivElement & SVGSVGElement>(null);\n        const { submitForm, isValid, setFieldValue, validateForm, values } = useFormikContext<TFormValues>();\n        const { quick_strategy } = useDBotStore();\n        const { selected_strategy, onSubmit, is_stop_bot_dialog_open } = quick_strategy;\n        const { handleSubmit } = useQsSubmitHandler();\n\n        const selected_startegy_label = STRATEGIES[selected_strategy as keyof typeof STRATEGIES].label;\n        const is_selected_strategy_step = current_step === QsSteps.StrategySelect;\n\n        React.useEffect(() => {\n            if (isValid && current_step === QsSteps.StrategyVerified) {\n                setCurrentStep(QsSteps.StrategyCompleted);\n            }\n            if (!isValid && current_step === QsSteps.StrategyCompleted) {\n                setCurrentStep(QsSteps.StrategyVerified);\n            }\n        }, [isValid, current_step]);\n\n        React.useEffect(() => {\n            validateForm();\n        }, [selected_strategy, validateForm]);\n\n        const onEdit = async () => {\n            await setFieldValue('action', 'EDIT');\n            validateForm();\n            submitForm().then((form_data: TFormData | void) => {\n                if (isValid && form_data) {\n                    rudderStackSendQsEditStrategyEvent({\n                        form_values: values,\n                        selected_strategy,\n                    });\n                    onSubmit(form_data); // true to load and run the bot\n                }\n            });\n        };\n\n        const onRun = () => {\n            handleSubmit();\n        };\n\n        const onBack = () => {\n            setCurrentStep(QsSteps.StrategySelect);\n        };\n\n        const renderContent = React.useCallback(() => {\n            switch (current_step) {\n                case QsSteps.StrategySelect:\n                    return (\n                        <StrategyTemplatePicker\n                            setCurrentStep={setCurrentStep}\n                            setSelectedTradeType={setSelectedTradeType}\n                        />\n                    );\n                case QsSteps.StrategyVerified:\n                    return (\n                        <QuickSelectionPanel\n                            selected_trade_type={selected_trade_type}\n                            selected_startegy_label={selected_startegy_label}\n                        >\n                            {children}\n                        </QuickSelectionPanel>\n                    );\n                case QsSteps.StrategyCompleted:\n                    return (\n                        <QuickSelectionPanel\n                            selected_trade_type={selected_trade_type}\n                            selected_startegy_label={selected_startegy_label}\n                        >\n                            {children}\n                        </QuickSelectionPanel>\n                    );\n                default:\n                    return null;\n            }\n        }, [\n            current_step,\n            selected_trade_type,\n            selected_startegy_label,\n            children,\n            setCurrentStep,\n            setSelectedTradeType,\n        ]);\n\n        return (\n            !is_stop_bot_dialog_open && (\n                <div className='qs'>\n                    <div className='qs__head'>\n                        <div className='qs__head__title'>\n                            <Text weight='bold'>{localize('Quick Strategy')}</Text>\n                        </div>\n                        <div className='qs__head__action'>\n                            <span\n                                data-testid='qs-desktop-close-button'\n                                onClick={onClickClose}\n                                tabIndex={0}\n                                onKeyDown={(e: React.KeyboardEvent) => {\n                                    if (e.key === 'Enter') {\n                                        onClickClose();\n                                    }\n                                }}\n                            >\n                                <Icon icon='IcCross' />\n                            </span>\n                        </div>\n                    </div>\n                    <div className='qs__body'>\n                        <div className='qs__body__sidebar'>\n                            <div className='qs__body__sidebar__subtitle'>\n                                <Text size='xs'>\n                                    {localize('Choose a template below and set your trade parameters.')}\n                                </Text>\n                            </div>\n                            <QSStepper current_step={current_step} />\n                        </div>\n                        <div className='qs__body__content'>\n                            <ThemedScrollbars\n                                className='qs__form__container qs__form__container--no-footer'\n                                autohide={false}\n                                refSetter={scroll_ref}\n                            >\n                                {renderContent()}\n                            </ThemedScrollbars>\n                            {!is_selected_strategy_step && (\n                                <div className='qs__body__content__footer'>\n                                    <Button\n                                        transparent\n                                        classNameSpan='qs__body__content__footer--back'\n                                        disabled={is_selected_strategy_step}\n                                        onClick={onBack}\n                                    >\n                                        {localize('Back')}\n                                    </Button>\n                                    <Button secondary disabled={!isValid} onClick={onEdit}>\n                                        {localize('Load')}\n                                    </Button>\n                                    <Button\n                                        data-testid='qs-run-button'\n                                        primary\n                                        onClick={e => {\n                                            e.preventDefault();\n                                            onRun();\n                                        }}\n                                        disabled={!isValid}\n                                    >\n                                        {localize('Run')}\n                                    </Button>\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                </div>\n            )\n        );\n    }\n);\n\nexport default React.memo(FormWrapper);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { useFormikContext } from 'formik';\nimport { Button, Text, ThemedScrollbars } from '@deriv/components';\nimport { observer } from '@deriv/stores';\nimport { localize } from '@deriv/translations';\nimport { useDBotStore } from 'Stores/useDBotStore';\nimport { rudderStackSendQsRunStrategyEvent } from '../../../../analytics/rudderstack-quick-strategy';\nimport { STRATEGIES } from '../config';\nimport { TFormValues } from '../types';\nimport StrategyTabContent from './strategy-tab-content';\nimport useQsSubmitHandler from './useQsSubmitHandler';\nimport QSStepper from './qs-stepper';\nimport StrategyTemplatePicker from './strategy-template-picker';\nimport { QsSteps } from './trade-constants';\nimport '../quick-strategy.scss';\n\ntype TMobileFormWrapper = {\n    children: React.ReactNode;\n    selected_trade_type: string;\n    setSelectedTradeType: (selected_trade_type: string) => void;\n    current_step: QsSteps;\n    setCurrentStep: (current_step: QsSteps) => void;\n};\n\nconst MobileFormWrapper = observer(\n    ({ children, current_step, selected_trade_type, setCurrentStep, setSelectedTradeType }: TMobileFormWrapper) => {\n        const { isValid, validateForm, values } = useFormikContext<TFormValues>();\n        const { quick_strategy } = useDBotStore();\n        const { selected_strategy } = quick_strategy;\n        const { handleSubmit } = useQsSubmitHandler();\n        const selected_startegy_label = STRATEGIES[selected_strategy as keyof typeof STRATEGIES].label;\n        const is_verified_or_completed_step =\n            current_step === QsSteps.StrategyVerified || current_step === QsSteps.StrategyCompleted;\n        const is_selected_strategy_step = current_step === QsSteps.StrategySelect;\n\n        React.useEffect(() => {\n            validateForm();\n        }, [selected_strategy, validateForm]);\n\n        const onRun = () => {\n            rudderStackSendQsRunStrategyEvent({\n                form_values: values,\n                selected_strategy,\n            });\n            handleSubmit();\n        };\n\n        const onBack = () => {\n            setCurrentStep(QsSteps.StrategySelect);\n        };\n\n        React.useEffect(() => {\n            if (isValid && current_step === QsSteps.StrategyVerified) {\n                setCurrentStep(QsSteps.StrategyCompleted);\n            }\n            if (!isValid && current_step === QsSteps.StrategyCompleted) {\n                setCurrentStep(QsSteps.StrategyVerified);\n            }\n        }, [isValid, current_step]);\n\n        return (\n            <div className='qs'>\n                <div className='qs__body'>\n                    <div className='qs__body__content'>\n                        <ThemedScrollbars\n                            className={classNames('qs__form__container qs__form__container--no-footer', {\n                                'qs__form__container--template': is_selected_strategy_step,\n                            })}\n                            autohide={false}\n                        >\n                            <QSStepper\n                                setCurrentStep={setCurrentStep}\n                                current_step={current_step}\n                                isValid={isValid}\n                                is_mobile\n                            />\n                            {is_selected_strategy_step && (\n                                <StrategyTemplatePicker\n                                    setSelectedTradeType={setSelectedTradeType}\n                                    setCurrentStep={setCurrentStep}\n                                />\n                            )}\n                            {is_verified_or_completed_step && (\n                                <>\n                                    <div className='qs__selected-options'>\n                                        <div className='qs__selected-options__item'>\n                                            <Text size='xs'>{localize('Trade type')}</Text>\n                                            <Text size='xs' weight='bold'>\n                                                {selected_trade_type}\n                                            </Text>\n                                        </div>\n                                        <div className='qs__selected-options__item'>\n                                            <Text size='xs'>{localize('Strategy')}</Text>\n                                            <Text\n                                                className='qs__selected-options__item__description'\n                                                size='xs'\n                                                weight='bold'\n                                            >\n                                                {selected_startegy_label}\n                                            </Text>\n                                        </div>\n                                    </div>\n                                    <StrategyTabContent formfields={children} active_tab={'TRADE_PARAMETERS'} />\n                                </>\n                            )}\n                        </ThemedScrollbars>\n                        {is_verified_or_completed_step && (\n                            <div className='qs__body__content__footer'>\n                                <Button secondary disabled={is_selected_strategy_step} onClick={onBack}>\n                                    {localize('Back')}\n                                </Button>\n                                <Button\n                                    primary\n                                    data-testid='qs-run-button'\n                                    type='submit'\n                                    onClick={e => {\n                                        e.preventDefault();\n                                        onRun();\n                                    }}\n                                    disabled={!isValid}\n                                >\n                                    {localize('Run')}\n                                </Button>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n);\n\nexport default MobileFormWrapper;\n","import React from 'react';\nimport { Checkbox, Dialog } from '@deriv/components';\nimport { observer } from '@deriv/stores';\nimport { Localize, localize } from '@deriv/translations';\nimport { useDBotStore } from 'Stores/useDBotStore';\nimport useQsSubmitHandler from '../form-wrappers/useQsSubmitHandler';\nimport './loss-threshold-warning-dialog.scss';\n\nconst base_classname = 'loss-threshold-warning-dialog';\n\nconst LossThresholdWarningDialog = observer(() => {\n    const { quick_strategy } = useDBotStore();\n    const { loss_threshold_warning_data, setLossThresholdWarningData, initializeLossThresholdWarningData } =\n        quick_strategy;\n    const { proceedFormSubmission } = useQsSubmitHandler();\n\n    const handleAmountEdit = () => {\n        setLossThresholdWarningData({\n            show: false,\n            highlight_field: ['loss'],\n        });\n    };\n\n    const handleContinueBot = () => {\n        initializeLossThresholdWarningData();\n        proceedFormSubmission();\n    };\n\n    const handleDontShowAgain = () => {\n        const stored_dont_show_warning_value = localStorage?.getItem('qs-dont-show-loss-threshold-warning');\n        const dont_show_warning = JSON.parse(stored_dont_show_warning_value ?? 'false');\n        localStorage?.setItem('qs-dont-show-loss-threshold-warning', `${!dont_show_warning}`);\n    };\n\n    return (\n        <Dialog\n            portal_element_id='modal_root_absolute'\n            title={localize('Are you sure you want to continue?')}\n            is_visible={loss_threshold_warning_data.show}\n            confirm_button_text={localize('Yes, continue')}\n            onConfirm={handleContinueBot}\n            cancel_button_text={localize('Edit the amount')}\n            onCancel={handleAmountEdit}\n            is_mobile_full_width={false}\n            has_close_icon={false}\n            className={base_classname}\n        >\n            <div className={`${base_classname}__body-text`}>\n                <Localize\n                    i18n_default_text={`Please confirm that your loss threshold amount is {{loss_amount}} {{currency}}.`}\n                    values={{\n                        loss_amount: loss_threshold_warning_data?.loss_amount,\n                        currency: loss_threshold_warning_data?.currency,\n                    }}\n                />\n            </div>\n            <Checkbox\n                defaultChecked={false}\n                label={localize('Do not show this message again.')}\n                onChange={handleDontShowAgain}\n            />\n        </Dialog>\n    );\n});\n\nexport default LossThresholdWarningDialog;\n","export const V2_QS_STRATEGIES = [\n    'ACCUMULATORS_MARTINGALE',\n    'ACCUMULATORS_DALEMBERT',\n    'ACCUMULATORS_MARTINGALE_ON_STAT_RESET',\n    'ACCUMULATORS_DALEMBERT_ON_STAT_RESET',\n    'ACCUMULATORS_REVERSE_MARTINGALE',\n    'ACCUMULATORS_REVERSE_MARTINGALE_ON_STAT_RESET',\n    'ACCUMULATORS_REVERSE_DALEMBERT',\n    'ACCUMULATORS_REVERSE_DALEMBERT_ON_STAT_RESET',\n];\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { Field, FieldProps, useFormikContext } from 'formik';\nimport { ApiHelpers } from '@deriv/bot-skeleton';\nimport { Autocomplete, Icon, Text } from '@deriv/components';\nimport { TItem } from '@deriv/components/src/components/dropdown-list';\nimport { useStore } from '@deriv/stores';\nimport { useDBotStore } from 'Stores/useDBotStore';\nimport { TFormData } from '../types';\nimport { V2_QS_STRATEGIES } from '../utils';\n\ntype TSymbol = {\n    component?: React.ReactNode;\n    text: string;\n    value: string;\n    group?: string;\n};\n\ntype TMarketOption = {\n    symbol: TSymbol;\n};\n\nconst MarketOption: React.FC<TMarketOption> = ({ symbol }) => (\n    <div key={symbol.value} className='qs__select__option'>\n        <Icon data_testid='dt_symbol_icon' icon={`IcUnderlying${symbol.value}`} size={32} />\n        <Text className='qs__select__option__text' size='xs' color='prominent'>\n            {symbol.text}\n        </Text>\n    </div>\n);\n\nconst SymbolSelect: React.FC = () => {\n    const { quick_strategy } = useDBotStore();\n    const {\n        ui: { is_desktop },\n    } = useStore();\n    const { setValue, selected_strategy } = quick_strategy;\n    const [active_symbols, setActiveSymbols] = React.useState<TSymbol[]>([]);\n    const [is_input_started, setIsInputStarted] = useState(false);\n    const [input_value, setInputValue] = useState({ text: '', value: '' });\n    const [last_selected_symbol, setLastSelectedSymbol] = useState({ text: '', value: '' });\n    const { setFieldValue, values } = useFormikContext<TFormData>();\n\n    const is_strategy_accumulator = V2_QS_STRATEGIES.includes(selected_strategy);\n\n    const symbols = useMemo(\n        () =>\n            active_symbols.map((symbol: TSymbol) => ({\n                component: <MarketOption key={symbol.text} symbol={symbol} />,\n                ...symbol,\n            })),\n        [active_symbols]\n    );\n\n    useEffect(() => {\n        const { active_symbols } = ApiHelpers.instance as unknown as {\n            active_symbols: {\n                getSymbolsForBot: () => TSymbol[];\n            };\n        };\n        let symbols = active_symbols.getSymbolsForBot();\n\n        if (is_strategy_accumulator) {\n            symbols = symbols.filter(symbol => symbol?.group?.startsWith('Continuous Indices'));\n        }\n\n        setActiveSymbols(symbols);\n\n        const has_symbol = !!symbols?.find(symbol => symbol?.value === values?.symbol);\n        if (!has_symbol) {\n            setFieldValue('symbol', symbols?.[0]?.value);\n            setValue('symbol', symbols?.[0]?.value);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useEffect(() => {\n        const selected_symbol = symbols.find(symbol => symbol.value === values.symbol);\n        if (selected_symbol) {\n            setInputValue({ text: selected_symbol.text, value: selected_symbol.value });\n        }\n    }, [symbols, values.symbol, setInputValue]);\n\n    const handleFocus = () => {\n        if (is_desktop && !is_input_started) {\n            setIsInputStarted(true);\n            setInputValue({ text: '', value: '' });\n        }\n    };\n\n    const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setInputValue({ ...input_value, text: e.target.value });\n    };\n\n    const handleItemSelection = (item: TItem) => {\n        if (item?.value) {\n            const { value } = item as TSymbol;\n            setFieldValue('symbol', value);\n            setValue('symbol', value);\n            setIsInputStarted(false);\n        }\n    };\n\n    const handleHideDropdownList = () => {\n        if (is_desktop) {\n            const selectedSymbol = symbols.find(symbol => symbol.value === values.symbol);\n            if (selectedSymbol && selectedSymbol.text !== input_value.text) {\n                setInputValue({ text: selectedSymbol.text, value: selectedSymbol.value });\n                setLastSelectedSymbol({ text: selectedSymbol.text, value: selectedSymbol.value });\n                setIsInputStarted(false);\n            }\n            if (!selectedSymbol) {\n                setInputValue({ text: last_selected_symbol.text, value: last_selected_symbol.value });\n                setIsInputStarted(false);\n            }\n        }\n    };\n\n    return (\n        <div className='qs__form__field qs__form__field__input'>\n            <Field name='symbol' key='asset' id='asset'>\n                {({ field: { value, ...rest_field } }: FieldProps) => (\n                    <>\n                        <Autocomplete\n                            {...rest_field}\n                            readOnly={!is_desktop}\n                            inputMode='none'\n                            data-testid='dt_qs_symbol'\n                            autoComplete='off'\n                            className='qs__autocomplete'\n                            value={input_value.text}\n                            list_items={symbols}\n                            onItemSelection={handleItemSelection}\n                            onChange={handleInputChange}\n                            onFocus={handleFocus}\n                            onHideDropdownList={handleHideDropdownList}\n                            leading_icon={<Icon icon={`IcUnderlying${input_value.value}`} size={24} />}\n                        />\n                    </>\n                )}\n            </Field>\n        </div>\n    );\n};\n\nexport default SymbolSelect;\n","import React from 'react';\nimport { Field, FieldProps, useFormikContext } from 'formik';\nimport { ApiHelpers } from '@deriv/bot-skeleton';\nimport { Autocomplete, IconTradeTypes, Text } from '@deriv/components';\nimport { TItem } from '@deriv/components/src/components/dropdown-list';\nimport { useDBotStore } from 'Stores/useDBotStore';\nimport { TApiHelpersInstance, TFormData, TTradeType } from '../types';\nimport { V2_QS_STRATEGIES } from '../utils';\n\ntype TTradeTypeOption = {\n    trade_type: TTradeType;\n};\n\nconst TradeTypeOption: React.FC<TTradeTypeOption> = ({ trade_type: { value, icon, text } }: TTradeTypeOption) => {\n    return (\n        <div key={value} className='qs__select__option'>\n            {icon?.length\n                ? icon.map((ic, idx) => (\n                      <IconTradeTypes type={ic} className='qs__select__option__icon' key={`${ic}id-${idx}`} />\n                  ))\n                : null}\n            <Text className='qs__select__option__text' size='xs' color='prominent'>\n                {text}\n            </Text>\n        </div>\n    );\n};\n\nconst TradeTypeSelect: React.FC = () => {\n    const [trade_types, setTradeTypes] = React.useState<TTradeType[]>([]);\n    const { setFieldValue, values, validateForm } = useFormikContext<TFormData>();\n    const { quick_strategy } = useDBotStore();\n    const { setValue, selected_strategy } = quick_strategy;\n    const is_strategy_accumulator = V2_QS_STRATEGIES.includes(selected_strategy);\n\n    React.useEffect(() => {\n        if (values?.symbol) {\n            const selected = values?.tradetype;\n            const is_symbol_accumulator = is_strategy_accumulator ? 'ACCU' : '';\n\n            const { contracts_for } = ApiHelpers.instance as unknown as TApiHelpersInstance;\n            const getTradeTypes = async () => {\n                const trade_types = await contracts_for.getTradeTypesForQuickStrategy(\n                    values?.symbol,\n                    is_symbol_accumulator\n                );\n\n                const has_selected = trade_types?.some(trade_type => trade_type.value === selected);\n                if (!has_selected && trade_types?.[0]?.value !== selected) {\n                    setFieldValue?.('tradetype', trade_types?.[0].value || '');\n                    setValue('tradetype', trade_types?.[0].value);\n                }\n                setTradeTypes(trade_types);\n            };\n\n            getTradeTypes();\n            validateForm();\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [values?.symbol]);\n\n    const trade_type_dropdown_options = React.useMemo(\n        () =>\n            trade_types.map(trade_type => ({\n                component: <TradeTypeOption key={trade_type.text} trade_type={trade_type} />,\n                ...trade_type,\n            })),\n        [trade_types]\n    );\n\n    return (\n        <div className='qs__form__field qs__form__field__input qs__form__field__group-icons'>\n            <Field name='tradetype' key='tradetype' id='tradetype'>\n                {({ field }: FieldProps) => {\n                    const selected_trade_type = trade_type_dropdown_options?.find(\n                        trade_type => trade_type.value === field.value\n                    );\n\n                    const is_accumulator = is_strategy_accumulator ? 'Buy' : selected_trade_type?.text;\n\n                    return (\n                        <Autocomplete\n                            {...field}\n                            readOnly\n                            inputMode='none'\n                            data-testid='dt_qs_tradetype'\n                            autoComplete='off'\n                            className='qs__autocomplete'\n                            value={is_accumulator || ''}\n                            list_items={trade_type_dropdown_options}\n                            onItemSelection={(item: TItem) => {\n                                const value = (item as TTradeType)?.value;\n                                const text = (item as TTradeType)?.text;\n                                if (value && text) {\n                                    setFieldValue?.('tradetype', value);\n                                    setValue('tradetype', value);\n                                }\n                            }}\n                            leading_icon={\n                                <Text>\n                                    <IconTradeTypes type={selected_trade_type?.icon?.[0] || 'CALL'} />\n                                    <IconTradeTypes type={selected_trade_type?.icon?.[1] || 'PUT'} />\n                                </Text>\n                            }\n                        />\n                    );\n                }}\n            </Field>\n        </div>\n    );\n};\n\nexport default TradeTypeSelect;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Field, FieldProps, useFormikContext } from 'formik';\nimport { ApiHelpers } from '@deriv/bot-skeleton';\nimport { Autocomplete, Text } from '@deriv/components';\nimport { TItem } from '@deriv/components/src/components/dropdown-list';\nimport { observer, useStore } from '@deriv/stores';\nimport { useDBotStore } from 'Stores/useDBotStore';\nimport { TApiHelpersInstance, TDropdownItems, TFormData } from '../types';\n\ntype TContractTypes = {\n    name: string;\n    attached?: boolean;\n};\n\nconst ContractTypes: React.FC<TContractTypes> = observer(({ name }) => {\n    const { ui } = useStore();\n    const { is_desktop } = ui;\n    const [list, setList] = React.useState<TDropdownItems[]>([]);\n    const { quick_strategy } = useDBotStore();\n    const { setValue } = quick_strategy;\n    const { setFieldValue, values } = useFormikContext<TFormData>();\n    const { symbol, tradetype } = values;\n\n    React.useEffect(() => {\n        if (tradetype && symbol) {\n            const selected = values?.type;\n            const getContractTypes = async () => {\n                const { contracts_for } = ApiHelpers.instance as unknown as TApiHelpersInstance;\n                const categories = await contracts_for.getContractTypes(tradetype);\n                setList(categories);\n                const has_selected = categories?.some(contract => contract.value === selected);\n                if (!has_selected) {\n                    setFieldValue?.(name, categories?.[0]?.value);\n                    setValue(name, categories?.[0]?.value);\n                }\n            };\n            getContractTypes();\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [symbol, tradetype]);\n\n    const handleChange = (value: string) => {\n        setFieldValue?.(name, value);\n        setValue(name, value);\n    };\n\n    const key = `qs-contract-type-${name}`;\n\n    return (\n        <div className='qs__form__field qs__form__field__input no-top-spacing'>\n            <Field name={name} key={key} id={key}>\n                {({ field }: FieldProps) => {\n                    const selected_item = list?.find(item => item?.value === field?.value);\n                    if (!is_desktop) {\n                        return (\n                            <ul className='qs__form__field__list' data-testid='dt_qs_contract_types'>\n                                {list.map(item => {\n                                    const is_active = selected_item?.value === item?.value;\n                                    return (\n                                        <li\n                                            key={item?.value}\n                                            className={classNames('qs__form__field__list__item', {\n                                                'qs__form__field__list__item--active': is_active,\n                                            })}\n                                            onClick={() => {\n                                                handleChange(item?.value);\n                                            }}\n                                        >\n                                            <Text size='xs' color='prominent' weight={is_active ? 'bold ' : 'normal'}>\n                                                {item?.text}\n                                            </Text>\n                                        </li>\n                                    );\n                                })}\n                            </ul>\n                        );\n                    }\n                    return (\n                        <Autocomplete\n                            {...field}\n                            readOnly\n                            inputMode='none'\n                            data-testid='dt_qs_contract_type'\n                            autoComplete='off'\n                            className='qs__select contract-type'\n                            value={selected_item?.text || ''}\n                            list_items={list}\n                            onItemSelection={(item: TItem) => {\n                                const { value } = item as TDropdownItems;\n                                if (value) {\n                                    handleChange(value);\n                                }\n                            }}\n                        />\n                    );\n                }}\n            </Field>\n        </div>\n    );\n});\n\nexport default ContractTypes;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Field, FieldProps, useFormikContext } from 'formik';\nimport { ApiHelpers } from '@deriv/bot-skeleton';\nimport { Autocomplete } from '@deriv/components';\nimport { TItem } from '@deriv/components/src/components/dropdown-list';\nimport { useDBotStore } from 'Stores/useDBotStore';\nimport { TApiHelpersInstance, TDurationUnitItem, TFormData } from '../types';\n\ntype TDurationUnit = {\n    attached?: boolean;\n};\n\nconst DurationUnit: React.FC<TDurationUnit> = ({ attached }: TDurationUnit) => {\n    const [list, setList] = React.useState<TDurationUnitItem[]>([]);\n    const [prevSymbol, setPrevSymbol] = React.useState('');\n    const [prevTradeType, setPrevTradeType] = React.useState('');\n    const { quick_strategy } = useDBotStore();\n    const { setValue, setCurrentDurationMinMax } = quick_strategy;\n    const { setFieldValue, validateForm, values } = useFormikContext<TFormData>();\n    const { symbol, tradetype } = values;\n\n    React.useEffect(() => {\n        if (tradetype && symbol) {\n            const getDurationUnits = async () => {\n                const { contracts_for } = ApiHelpers.instance as unknown as TApiHelpersInstance;\n                const durations = await contracts_for.getDurations(symbol, tradetype);\n                const duration_units = durations?.map(duration => ({\n                    text: duration.display ?? '',\n                    value: duration.unit ?? '',\n                    min: duration.min,\n                    max: duration.max,\n                }));\n                setList(duration_units);\n                const selected = values?.durationtype;\n                const has_selected = duration_units?.some(duration => duration.value === selected);\n                if (!has_selected || prevSymbol !== symbol || prevTradeType !== tradetype) {\n                    setCurrentDurationMinMax(durations?.[0]?.min, durations?.[0]?.max);\n                    setFieldValue?.('durationtype', durations?.[0]?.unit, true);\n                    setFieldValue?.('duration', durations?.[0]?.min, true);\n                    setValue('durationtype', durations?.[0]?.unit ?? '');\n                } else {\n                    const duration = duration_units?.find((duration: TDurationUnitItem) => duration.value === selected);\n                    setCurrentDurationMinMax(duration?.min, duration?.max);\n                }\n                setPrevSymbol(symbol as string);\n                setPrevTradeType(tradetype as string);\n            };\n            getDurationUnits();\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [symbol, tradetype]);\n\n    return (\n        <div\n            className={classNames('qs__form__field qs__form__field__input', {\n                'no-top-border-radius': attached,\n            })}\n        >\n            <Field name='durationtype' key='durationtype' id='durationtype'>\n                {({ field }: FieldProps) => {\n                    const selected_item = list?.find(item => item.value === field.value);\n                    return (\n                        <Autocomplete\n                            {...field}\n                            readOnly\n                            inputMode='none'\n                            data-testid='dt_qs_durationtype'\n                            autoComplete='off'\n                            className='qs__select'\n                            value={selected_item?.text || ''}\n                            list_items={list}\n                            onItemSelection={(item: TItem) => {\n                                const { value, min, max } = item as TDurationUnitItem;\n                                if (value) {\n                                    setCurrentDurationMinMax(min, max);\n                                    setFieldValue?.('durationtype', value);\n                                    setValue('durationtype', value);\n                                    setFieldValue?.('duration', min).then(() => {\n                                        validateForm();\n                                    });\n                                    setValue('duration', min);\n                                }\n                            }}\n                        />\n                    );\n                }}\n            </Field>\n        </div>\n    );\n};\n\nexport default DurationUnit;\n","import React, { MouseEvent } from 'react';\nimport classNames from 'classnames';\nimport { Field, FieldProps, useFormikContext } from 'formik';\nimport { Input, Popover } from '@deriv/components';\nimport { observer, useStore } from '@deriv/stores';\nimport { useDBotStore } from 'Stores/useDBotStore';\n\ntype TQSInput = {\n    name: string;\n    onChange: (key: string, value: string | number | boolean) => void;\n    type?: string;\n    attached?: boolean;\n    should_have?: { key: string; value: string | number | boolean }[];\n    disabled?: boolean;\n    min?: number;\n    max?: number;\n    has_currency_unit?: boolean;\n};\n\nconst QSInput: React.FC<TQSInput> = observer(\n    ({\n        name,\n        onChange,\n        type = 'text',\n        attached = false,\n        disabled = false,\n        min,\n        max,\n        has_currency_unit = false,\n    }: TQSInput) => {\n        const {\n            ui: { is_desktop },\n            client: { currency },\n        } = useStore();\n        const { quick_strategy } = useDBotStore();\n        const { loss_threshold_warning_data } = quick_strategy;\n\n        const [has_focus, setFocus] = React.useState(false);\n        const { setFieldValue, setFieldTouched } = useFormikContext();\n        const is_number = type === 'number';\n        const max_value = Number.MAX_SAFE_INTEGER;\n        const input_ref = React.useRef<HTMLInputElement>(null);\n\n        React.useEffect(() => {\n            const handleWheel = (event: WheelEvent) => {\n                if (document.activeElement === input_ref.current) {\n                    event.preventDefault();\n                }\n            };\n\n            const el_input = input_ref.current;\n            if (el_input) {\n                el_input.addEventListener('wheel', handleWheel, { passive: false });\n            }\n\n            return () => {\n                if (el_input) {\n                    el_input.removeEventListener('wheel', handleWheel);\n                }\n            };\n        }, []);\n\n        const handleButtonInputChange = (e: MouseEvent<HTMLButtonElement>, value: string) => {\n            e?.preventDefault();\n            onChange(name, value);\n            setFieldTouched(name, true, true);\n            setFieldValue(name, value);\n        };\n\n        const handleOnChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n            const input_value = e.target.value;\n            let value: number | string = 0;\n            const max_characters = 12;\n            if (max_characters && input_value.length >= max_characters) {\n                value = input_value.slice(0, max_characters);\n                value = is_number ? Number(value) : value;\n            } else {\n                value = is_number ? Number(input_value) : input_value;\n            }\n            onChange(name, value);\n        };\n\n        return (\n            <Field name={name} key={name} id={name}>\n                {({ field, meta }: FieldProps) => {\n                    const { error } = meta;\n                    const has_error = error;\n                    const is_exclusive_field = has_currency_unit;\n                    return (\n                        <div\n                            className={classNames('qs__form__field qs__form__field__input', {\n                                'no-top-spacing': attached,\n                                'no-border-top': attached,\n                            })}\n                        >\n                            <div\n                                data-testid='dt_qs_input_container'\n                                onMouseEnter={() => setFocus(true)}\n                                onMouseLeave={() => setFocus(false)}\n                            >\n                                <Popover\n                                    alignment='bottom'\n                                    message={error}\n                                    is_open={!is_desktop ? !!error : !!error && has_focus}\n                                    zIndex='9999'\n                                    classNameBubble='qs__warning-bubble'\n                                    has_error\n                                    should_disable_pointer_events\n                                >\n                                    <Input\n                                        data_testId={`dt_qs_${name}`}\n                                        className={classNames(\n                                            'qs__input',\n                                            { error: has_error },\n                                            { highlight: loss_threshold_warning_data?.highlight_field?.includes(name) }\n                                        )}\n                                        type={type}\n                                        leading_icon={\n                                            is_number ? (\n                                                <button\n                                                    disabled={disabled || (!!min && field.value <= min)}\n                                                    data-testid='dt_qs_input_decrease'\n                                                    onClick={(e: MouseEvent<HTMLButtonElement>) => {\n                                                        const value = Number(field.value) - 1;\n                                                        handleButtonInputChange(\n                                                            e,\n                                                            String(value % 1 ? value.toFixed(2) : value)\n                                                        );\n                                                    }}\n                                                >\n                                                    -\n                                                </button>\n                                            ) : undefined\n                                        }\n                                        trailing_icon={\n                                            is_number ? (\n                                                <button\n                                                    disabled={\n                                                        disabled ||\n                                                        field.value == max_value ||\n                                                        (!!max && field.value >= max)\n                                                    }\n                                                    data-testid='dt_qs_input_increase'\n                                                    onClick={(e: MouseEvent<HTMLButtonElement>) => {\n                                                        const value = Number(field.value) + 1;\n                                                        handleButtonInputChange(\n                                                            e,\n                                                            String(value % 1 ? value.toFixed(2) : value)\n                                                        );\n                                                    }}\n                                                >\n                                                    +\n                                                </button>\n                                            ) : null\n                                        }\n                                        {...field}\n                                        disabled={disabled}\n                                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => handleOnChange(e)}\n                                        placeholder={is_exclusive_field ? '0' : ''}\n                                        bottom_label={is_exclusive_field ? currency : ''}\n                                        max_characters={2}\n                                        maxLength={2}\n                                        ref={input_ref}\n                                    />\n                                </Popover>\n                            </div>\n                        </div>\n                    );\n                }}\n            </Field>\n        );\n    }\n);\n\nexport default QSInput;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Field, FieldProps, useFormikContext } from 'formik';\nimport { Popover, Text, ToggleSwitch } from '@deriv/components';\nimport { TFormData } from '../types';\nimport { localize } from '@deriv/translations';\n\ntype TQSToggleSwitch = {\n    name: string;\n    label: string;\n    description?: string;\n    attached?: boolean;\n    isEnabledToggleSwitch: boolean;\n    setIsEnabledToggleSwitch: () => void;\n};\n\nconst QSToggleSwitch: React.FC<TQSToggleSwitch> = ({\n    name,\n    label,\n    description,\n    attached = false,\n    isEnabledToggleSwitch,\n    setIsEnabledToggleSwitch,\n}) => {\n    const { values, setFieldValue } = useFormikContext<TFormData>();\n\n    const handleChange = async () => {\n        setIsEnabledToggleSwitch();\n        await setFieldValue(name, !values?.[name], true);\n        await setFieldValue('max_stake', values?.max_stake, true);\n    };\n\n    return (\n        <Field name={name}>\n            {({ field }: FieldProps) => {\n                return (\n                    <div\n                        className={classNames('qs__form__field qs__form__field__input', {\n                            'no-border-bottom-radius': attached,\n                        })}\n                    >\n                        <div className='qs__checkbox'>\n                            <div className='qs__checkbox__container'>\n                                <label className='dc-checkbox'>\n                                    <Text size='xs' className='dc-checkbox__label'>\n                                        {label}\n                                    </Text>\n                                    <Text size='xxs'>{localize('(optional)')}</Text>\n                                </label>\n                                <span>\n                                    <Popover\n                                        classNameTargetIcon='qs__checkbox__info'\n                                        message={description}\n                                        zIndex='9999'\n                                        alignment='top'\n                                        icon='info'\n                                    />\n                                </span>\n                                <ToggleSwitch\n                                    id='dt_mobile_drawer_theme_toggler'\n                                    handleToggle={handleChange}\n                                    is_enabled={isEnabledToggleSwitch}\n                                    data-testid='qs-toggle-switch'\n                                />\n                            </div>\n                        </div>\n                    </div>\n                );\n            }}\n        </Field>\n    );\n};\n\nexport default QSToggleSwitch;\n","import React from 'react';\nimport { Popover, Text } from '@deriv/components';\n\ntype TQSInputLabel = {\n    children?: React.ReactNode;\n    label?: string;\n    description?: string | ((additional_data?: Record<string, unknown>) => React.ReactNode);\n    additional_data?: Record<string, unknown>;\n};\n\nconst QSInputLabel: React.FC<TQSInputLabel> = ({ label, description, additional_data }) => {\n    let tooltip_msg;\n    if (typeof description === 'function') {\n        tooltip_msg = description(additional_data);\n    } else {\n        tooltip_msg = description;\n    }\n\n    return (\n        <div className='qs__form__field'>\n            <div className='qs__input-label'>\n                <Text weight='bold' className='qs__input-label__wrapper' size='xs'>\n                    {label}\n                </Text>\n                <span>\n                    <Popover message={tooltip_msg} zIndex='9999' alignment='top' icon='info' />\n                </span>\n            </div>\n        </div>\n    );\n};\n\nexport default QSInputLabel;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Field, FieldProps, useFormikContext } from 'formik';\nimport { Autocomplete, Text } from '@deriv/components';\nimport { TItem } from '@deriv/components/src/components/dropdown-list';\nimport { observer, useStore } from '@deriv/stores';\nimport { useDBotStore } from 'Stores/useDBotStore';\nimport { TDropdownItems, TFormData } from '../types';\nimport { requestProposalForQS } from '@deriv/bot-skeleton/src/scratch/accumulators-proposal-handler';\nimport { currency } from '@deriv/components/src/components/icon/icons-manifest';\nimport debounce from 'lodash.debounce';\nimport { localize } from '@deriv/translations';\n\ntype TContractTypes = {\n    name: string;\n    attached?: boolean;\n};\n\ntype TProposalRequest = {\n    amount: number;\n    currency: string;\n    growth_rate: number;\n    symbol: string;\n    limit_order: {\n        take_profit: number;\n    };\n    boolean_tick_count: boolean;\n};\n\nconst GrowthRateSelect: React.FC<TContractTypes> = observer(({ name }) => {\n    const { ui, client } = useStore();\n    const { is_desktop } = ui;\n    const [list, setList] = React.useState<TDropdownItems[]>([]);\n    const { quick_strategy, ws } = useDBotStore();\n    const { setValue, setAdditionalData } = quick_strategy;\n    const { setFieldValue, values, setFieldError, errors } = useFormikContext<TFormData>();\n\n    const prev_proposal_payload = React.useRef<TProposalRequest | null>(null);\n    const ref_max_payout = React.useRef<TProposalRequest | null>(null);\n    const prev_error = React.useRef<{\n        tick_count: string | null;\n        take_profit: string | null;\n    }>({\n        tick_count: null,\n        take_profit: null,\n    });\n\n    React.useEffect(() => {\n        setList([\n            { text: '1%', value: '0.01' },\n            { text: '2%', value: '0.02' },\n            { text: '3%', value: '0.03' },\n            { text: '4%', value: '0.04' },\n            { text: '5%', value: '0.05' },\n        ]);\n        setFieldValue?.('tradetype', 'accumulator');\n        setValue('tradetype', 'accumulator');\n    }, []);\n\n    React.useEffect(() => {\n        if (values.boolean_tick_count) {\n            setFieldValue('take_profit', 0);\n            setFieldError('tick_count', prev_error.current?.tick_count ?? undefined);\n            setFieldError('take_profit', undefined);\n        } else {\n            setFieldValue('tick_count', 0);\n            setFieldError('take_profit', prev_error.current?.take_profit ?? undefined);\n            setFieldError('tick_count', undefined);\n        }\n    }, [values, errors.take_profit, errors.tick_count, values.boolean_tick_count]);\n\n    const validateMinMaxForAccumulators = async values => {\n        const growth_rate = Number(values.growth_rate);\n        const amount = Number(values.stake);\n        const take_profit = Number(values.take_profit);\n        const request_proposal = {\n            amount,\n            currency: client.currency,\n            growth_rate,\n            symbol: values.symbol,\n            limit_order: {\n                ...(!values.boolean_tick_count && { take_profit }),\n            },\n        };\n\n        prev_proposal_payload.current = { ...request_proposal, boolean_tick_count: values.boolean_tick_count };\n        try {\n            const response = await requestProposalForQS(request_proposal, ws);\n            const min_ticks = 1;\n            const max_ticks = response?.proposal?.validation_params?.max_ticks;\n            let min_error = '';\n            let max_error = '';\n            ref_max_payout.current = response?.proposal?.validation_params?.max_payout;\n            const current_tick_count = Number(values.tick_count);\n            setAdditionalData({ max_payout: ref_max_payout.current, max_ticks });\n            if (!isNaN(current_tick_count) && current_tick_count > max_ticks) {\n                max_error = `Maximum tick count is: ${max_ticks}`;\n                setFieldError('tick_count', max_error);\n                prev_error.current.tick_count = max_error;\n            } else if (!isNaN(current_tick_count) && current_tick_count < min_ticks) {\n                min_error = `Minimum tick count is: ${min_ticks}`;\n                setFieldError('tick_count', min_error);\n                prev_error.current.tick_count = min_error;\n            } else {\n                prev_error.current.tick_count = null;\n                setFieldError('tick_count', undefined);\n            }\n            prev_error.current.take_profit = null;\n        } catch (error_response) {\n            let errror_message = error_response?.message ?? error_response?.error?.message;\n\n            if (values.boolean_tick_count) {\n                setFieldError('tick_count', errror_message);\n                prev_error.current.tick_count = errror_message;\n            } else {\n                if (error_response?.error?.details?.field === 'take_profit') {\n                    errror_message = `Your total payout is ${\n                        Number(values.take_profit) + Number(values.stake)\n                    }. Enter amount less than ${ref_max_payout.current} ${localize(\n                        'By changing your initial stake and/or take profit.'\n                    )}`;\n                }\n\n                if (error_response?.error?.details?.field === 'stake') {\n                    errror_message = `${error_response?.error?.message} ${localize('Update your initial stake.')}`;\n                }\n                setFieldError('take_profit', errror_message);\n                prev_error.current.take_profit = errror_message;\n            }\n        }\n    };\n\n    const debounceChange = React.useCallback(\n        debounce(validateMinMaxForAccumulators, 500, {\n            trailing: true,\n            leading: false,\n        }),\n        []\n    );\n\n    React.useEffect(() => {\n        if (\n            prev_proposal_payload.current?.symbol !== values.symbol ||\n            prev_proposal_payload.current?.amount !== values.stake ||\n            prev_proposal_payload.current?.limit_order?.take_profit !== values.take_profit ||\n            prev_proposal_payload.current?.currency !== client.currency ||\n            prev_proposal_payload.current?.growth_rate !== values.growth_rate ||\n            prev_proposal_payload.current?.boolean_tick_count !== values.boolean_tick_count\n        ) {\n            debounceChange(values);\n        }\n    }, [values.take_profit, values.tick_count, values.stake, values.growth_rate, currency, values.boolean_tick_count]);\n\n    const handleChange = async (value: string) => {\n        setFieldValue?.(name, value);\n        setValue(name, value);\n    };\n\n    const key = `qs-contract-type-${name}`;\n\n    return (\n        <div className='qs__form__field qs__form__field__input no-top-spacing'>\n            <Field name={name} key={key} id={key}>\n                {({ field }: FieldProps) => {\n                    const selected_item = list?.find(item => item?.value === field?.value);\n                    if (!is_desktop) {\n                        return (\n                            <ul className='qs__form__field__list' data-testid='dt_qs_contract_types'>\n                                {list.map(item => {\n                                    const is_active = selected_item?.value === item?.value;\n                                    return (\n                                        <li\n                                            key={item?.value}\n                                            className={classNames('qs__form__field__list__item', {\n                                                'qs__form__field__list__item--active': is_active,\n                                            })}\n                                            onClick={() => {\n                                                handleChange(item?.value);\n                                            }}\n                                            onChange={() => {\n                                                handleChange(item?.value);\n                                            }}\n                                        >\n                                            <Text size='xs' color='prominent' weight={is_active ? 'bold ' : 'normal'}>\n                                                {item?.text}\n                                            </Text>\n                                        </li>\n                                    );\n                                })}\n                            </ul>\n                        );\n                    }\n                    return (\n                        <Autocomplete\n                            {...field}\n                            readOnly\n                            inputMode='none'\n                            data-testid='dt_qs_contract_type'\n                            autoComplete='off'\n                            className='qs__select contract-type'\n                            value={selected_item?.text || ''}\n                            list_items={list}\n                            onItemSelection={(item: TItem) => {\n                                const { value } = item as TDropdownItems;\n                                if (value) {\n                                    handleChange(value);\n                                }\n                            }}\n                        />\n                    );\n                }}\n            </Field>\n        </div>\n    );\n});\n\nexport default GrowthRateSelect;\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport { Field, FieldProps, useFormikContext } from 'formik';\nimport { Autocomplete } from '@deriv/components';\nimport { TItem } from '@deriv/components/src/components/dropdown-list';\nimport { useDBotStore } from 'Stores/useDBotStore';\nimport { TDurationUnitItem, TFormData } from '../types';\n\ntype TDurationUnit = {\n    attached?: boolean;\n};\n\ntype TSellConditionItem = {\n    text: string;\n    value: string;\n};\n\nconst list_options = [\n    { text: 'Take Profit', value: 'take_profit' },\n    { text: 'Tick Count', value: 'tick_count' },\n];\n\nconst SellConditions: React.FC<TDurationUnit> = ({ attached }: TDurationUnit) => {\n    const { quick_strategy } = useDBotStore();\n    const { setValue } = quick_strategy;\n    const { setFieldValue, values } = useFormikContext<TFormData>();\n    const [selectedValue, setSelectedValue] = useState<TSellConditionItem>(\n        values.boolean_tick_count ? list_options[1] : list_options[0]\n    );\n\n    const handleItemSelection = (item: TItem) => {\n        if ((item as TDurationUnitItem)?.value) {\n            const { value } = item as TDurationUnitItem;\n            const is_take_profit = value === 'take_profit';\n            const text = is_take_profit ? 'Take Profit' : 'Tick Count';\n            setValue('boolean_tick_count', !is_take_profit);\n            setFieldValue?.('boolean_tick_count', !is_take_profit);\n            setSelectedValue({ ...selectedValue, text });\n        }\n    };\n\n    return (\n        <div\n            className={classNames('qs__form__field qs__form__field__input', {\n                'no-top-border-radius': attached,\n            })}\n        >\n            <Field name='sell_conditions' key='sell_conditions' id='sell_conditions'>\n                {({ field }: FieldProps) => {\n                    return (\n                        <Autocomplete\n                            {...field}\n                            readOnly\n                            inputMode='none'\n                            data-testid='dt_qs_sell_conditions'\n                            autoComplete='off'\n                            className='qs__select'\n                            value={selectedValue.text}\n                            list_items={list_options}\n                            onItemSelection={handleItemSelection}\n                        />\n                    );\n                }}\n            </Field>\n        </div>\n    );\n};\n\nexport default SellConditions;\n","/* eslint-disable simple-import-sort/imports */\nimport React from 'react';\nimport { useDBotStore } from 'Stores/useDBotStore';\nimport { observer, useStore } from '@deriv/stores';\nimport './quick-strategy.scss';\nimport SymbolSelect from './selects/symbol';\nimport TradeTypeSelect from './selects/trade-type';\nimport ContractTypeSelect from './selects/contract-type';\nimport DurationTypeSelect from './selects/duration-type';\nimport QSInput from './inputs/qs-input';\nimport QSCheckbox from './inputs/qs-toggle-switch';\nimport QSInputLabel from './inputs/qs-input-label';\nimport { STRATEGIES } from './config';\nimport { TConfigItem, TFormData, TShouldHave } from './types';\nimport { useFormikContext } from 'formik';\nimport GrowthRateSelect from './selects/growth-rate-type';\nimport SellConditions from './selects/sell-conditions-type';\n\nconst QuickStrategyForm = observer(() => {\n    const { ui } = useStore();\n    const { quick_strategy } = useDBotStore();\n    const { selected_strategy, setValue, form_data } = quick_strategy;\n    const config: TConfigItem[][] = STRATEGIES[selected_strategy]?.fields;\n    const { is_desktop } = ui;\n    const { values, setFieldTouched, setFieldValue } = useFormikContext<TFormData>();\n    const { current_duration_min_max, additional_data } = quick_strategy;\n    const [isEnabledToggleSwitch, setIsEnabledToggleSwitch] = React.useState(values?.boolean_max_stake ?? false);\n\n    React.useEffect(() => {\n        window.addEventListener('keydown', handleEnter);\n        let data: TFormData | null = null;\n        try {\n            data = JSON.parse(localStorage.getItem('qs-fields') ?? '{}');\n        } catch {\n            data = null;\n        }\n        setIsEnabledToggleSwitch(!!data?.boolean_max_stake);\n\n        return () => {\n            window.removeEventListener('keydown', handleEnter);\n        };\n    }, []);\n\n    React.useEffect(() => {\n        if (!isEnabledToggleSwitch && values?.max_stake) {\n            setFieldValue('max_stake', 0);\n        }\n    }, [isEnabledToggleSwitch, values?.max_stake]);\n\n    const onChange = async (key: string, value: string | number | boolean) => {\n        setValue(key, value);\n        await setFieldTouched(key, true, true);\n        await setFieldValue(key, value, true);\n    };\n\n    const handleEnter = (event: KeyboardEvent) => {\n        if (event?.key && event.key == 'Enter') {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    const shouldEnable = (should_have: TShouldHave[]) =>\n        should_have.every(item => {\n            const item_value = values?.[item.key]?.toString();\n            if (item.multiple) return item.multiple.includes(item_value);\n            return values[item.key as keyof TFormData] === item.value;\n        });\n\n    const toggleSwitch = () => {\n        setIsEnabledToggleSwitch(prev => !prev);\n    };\n\n    const renderForm = () => {\n        return config.map((group, group_index) => {\n            if (!group?.length) return null;\n            return (\n                <div className='qs__body__content__form__group' key={group_index}>\n                    {group.map((field, field_index) => {\n                        const key = `${field.name || field.type} + ${field_index}`;\n\n                        if (\n                            (!is_desktop && field.hide?.includes('mobile')) ||\n                            (is_desktop && field.hide?.includes('desktop'))\n                        ) {\n                            return null;\n                        }\n\n                        switch (field.type) {\n                            // Generic or common fields\n                            case 'number': {\n                                if (!field.name) return null;\n                                const {\n                                    should_have = [],\n                                    hide_without_should_have = false,\n                                    has_currency_unit = false,\n                                } = field;\n                                const should_enable = shouldEnable(should_have);\n                                const initial_stake = 1;\n                                let min = 1;\n                                let max;\n                                if (field.name === 'duration' && current_duration_min_max) {\n                                    min = current_duration_min_max.min;\n                                    max = current_duration_min_max.max;\n                                }\n                                const should_validate = field.should_have;\n                                if (should_validate && field.name === 'max_stake') {\n                                    min = +form_data?.stake;\n                                    if (isNaN(min)) {\n                                        min = +initial_stake;\n                                    }\n                                }\n                                if (should_validate && field.name === 'last_digit_prediction') {\n                                    if (\n                                        isNaN(+form_data?.last_digit_prediction) ||\n                                        +form_data?.last_digit_prediction === 1\n                                    ) {\n                                        min = 0;\n                                    }\n                                    if (+form_data?.last_digit_prediction > 0) {\n                                        min = +form_data?.last_digit_prediction - 1;\n                                    }\n                                    max = 9;\n                                }\n                                if (should_have?.length) {\n                                    if (!should_enable && (!is_desktop || hide_without_should_have)) {\n                                        return null;\n                                    }\n                                    return (\n                                        <QSInput\n                                            {...field}\n                                            key={key}\n                                            name={field.name as string}\n                                            disabled={!should_enable}\n                                            onChange={onChange}\n                                            min={min}\n                                            max={max}\n                                            has_currency_unit={has_currency_unit}\n                                        />\n                                    );\n                                }\n                                return (\n                                    <QSInput\n                                        {...field}\n                                        onChange={onChange}\n                                        key={key}\n                                        name={field.name as string}\n                                        min={min}\n                                        max={max}\n                                        has_currency_unit={has_currency_unit}\n                                    />\n                                );\n                            }\n                            case 'label': {\n                                if (!field.label) return null;\n                                const { should_have = [], hide_without_should_have = false } = field;\n                                const should_enable = shouldEnable(should_have);\n                                if (!should_enable && hide_without_should_have) {\n                                    return null;\n                                }\n                                return (\n                                    <QSInputLabel\n                                        key={key}\n                                        label={field.label}\n                                        description={field.description ?? ''}\n                                        additional_data={additional_data}\n                                    />\n                                );\n                            }\n                            case 'checkbox':\n                                return (\n                                    <QSCheckbox\n                                        {...field}\n                                        key={key}\n                                        name={field.name as string}\n                                        label={field.label as string}\n                                        isEnabledToggleSwitch={!!isEnabledToggleSwitch}\n                                        setIsEnabledToggleSwitch={toggleSwitch}\n                                    />\n                                );\n                            // Dedicated components only for Quick-Strategy\n                            case 'symbol':\n                                return <SymbolSelect {...field} key={key} />;\n                            case 'tradetype':\n                                return <TradeTypeSelect {...field} key={key} />;\n                            case 'durationtype':\n                                return <DurationTypeSelect {...field} key={key} />;\n                            case 'contract_type':\n                                return <ContractTypeSelect {...field} key={key} name={field.name as string} />;\n                            case 'growth_rate':\n                                return <GrowthRateSelect {...field} name={field.name as string} />;\n                            case 'sell_conditions':\n                                return <SellConditions {...field} key={key} />;\n                            default:\n                                return null;\n                        }\n                    })}\n                </div>\n            );\n        });\n    };\n\n    return <div>{renderForm()}</div>;\n});\n\nexport default QuickStrategyForm;\n","import React, { useRef, useState } from 'react';\nimport { Form as FormikForm, Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { config as qs_config } from '@deriv/bot-skeleton';\nimport { MobileFullPageModal, Modal, Text } from '@deriv/components';\nimport { observer, useStore } from '@deriv/stores';\nimport { localize } from '@deriv/translations';\nimport { useDBotStore } from 'Stores/useDBotStore';\nimport { rudderStackSendCloseEvent } from '../../../analytics/rudderstack-common-events';\nimport DesktopFormWrapper from './form-wrappers/desktop-form-wrapper';\nimport MobileFormWrapper from './form-wrappers/mobile-form-wrapper';\nimport LossThresholdWarningDialog from './parts/loss-threshold-warning-dialog';\nimport { STRATEGIES } from './config';\nimport Form from './form';\nimport { TConfigItem, TFormData, TFormValues } from './types';\nimport './quick-strategy.scss';\nimport { QsSteps } from './form-wrappers/trade-constants';\n\ntype TFormikWrapper = {\n    children: React.ReactNode;\n};\n\nconst getErrorMessage = (dir: 'MIN' | 'MAX', value: number, type = 'DEFAULT') => {\n    const errors: { [key: string]: { MIN: string; MAX: string } } = {\n        DURATION: {\n            MIN: localize('Minimum duration: {{ value }}', { value }),\n            MAX: localize('Maximum duration: {{ value }}', { value }),\n        },\n        LAST_DIGIT_PREDICTION: {\n            MIN: localize('Enter a value from {{ value }} to 9.', { value }),\n            MAX: localize('Enter a value from 0 to {{ value }}.', { value }),\n        },\n        DEFAULT: {\n            MIN: localize('The value must be equal or greater than {{ value }}', { value }),\n            MAX: localize('The value must be equal or less than {{ value }}', { value }),\n        },\n    };\n    return errors[type][dir];\n};\n\nconst FormikWrapper: React.FC<TFormikWrapper> = observer(({ children }) => {\n    const { quick_strategy } = useDBotStore();\n    const { selected_strategy, form_data, current_duration_min_max, initializeLossThresholdWarningData } =\n        quick_strategy;\n    const config: TConfigItem[][] = STRATEGIES[selected_strategy]?.fields;\n    const [dynamic_schema, setDynamicSchema] = useState(Yup.object().shape({}));\n    const is_mounted = useRef(true);\n\n    let initial_value: TFormData | null = null;\n\n    const getSavedValues = () => {\n        let data: TFormData | null = null;\n        try {\n            data = JSON.parse(localStorage.getItem('qs-fields') ?? '{}');\n        } catch {\n            data = null;\n        }\n        return data;\n    };\n\n    const getInitialValue = () => {\n        const data = getSavedValues();\n        initial_value = {\n            symbol: data?.symbol ?? qs_config.QUICK_STRATEGY.DEFAULT.symbol,\n            tradetype: data?.tradetype ?? '',\n            type: data?.type ?? '',\n            durationtype: data?.durationtype ?? qs_config.QUICK_STRATEGY.DEFAULT.durationtype,\n            duration: data?.duration ?? '1',\n            stake: data?.stake ?? '1',\n            loss: data?.loss ?? '',\n            profit: data?.profit ?? '',\n            size: data?.size ?? String(qs_config.QUICK_STRATEGY.DEFAULT.size),\n            unit: data?.unit ?? String(qs_config.QUICK_STRATEGY.DEFAULT.unit),\n            action: data?.action ?? 'RUN',\n            max_stake: data?.max_stake ?? 10,\n            boolean_max_stake: data?.boolean_max_stake ?? false,\n            last_digit_prediction: data?.last_digit_prediction ?? 1,\n            growth_rate: data?.growth_rate ?? '0.01',\n            tick_count: data?.tick_count ?? 0,\n            take_profit: data?.take_profit ?? 0,\n            boolean_tick_count: data?.boolean_tick_count ?? false,\n            max_payout: data?.max_payout ?? 0,\n            max_ticks: data?.max_ticks ?? 0,\n        };\n        return initial_value;\n    };\n\n    React.useEffect(() => {\n        return () => {\n            is_mounted.current = false;\n        };\n    }, []);\n\n    React.useEffect(() => {\n        initializeLossThresholdWarningData();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const updateSchema = (formikData: TFormData) => {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const sub_schema: Record<string, any> = {};\n        config.forEach(group => {\n            if (!group?.length) return null;\n            group.forEach(async field => {\n                if (field?.validation?.length && field?.name) {\n                    if (field.validation.includes('number')) {\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        let schema: Record<string, any> = Yup.number().typeError(localize('Must be a number'));\n                        let min = 0;\n                        let max = 10;\n                        let min_error = getErrorMessage('MIN', min);\n                        let max_error = getErrorMessage('MAX', max);\n                        let integer_error_message = '';\n                        if (field.name === 'duration' && current_duration_min_max) {\n                            min = current_duration_min_max.min;\n                            max = current_duration_min_max.max;\n                            min_error = getErrorMessage('MIN', min, 'DURATION');\n                            max_error = getErrorMessage('MAX', max, 'DURATION');\n                        }\n                        const should_validate = field.should_have\n                            ? field.should_have?.every(item => {\n                                  const item_value = formikData?.[item.key]?.toString();\n                                  if (item.multiple) return item.multiple.includes(item_value);\n                                  return formikData?.[item.key] === item.value;\n                              })\n                            : true;\n                        if (should_validate && field.name === 'max_stake') {\n                            min = +form_data?.stake;\n                            if (isNaN(min)) {\n                                min = +(initial_value?.stake ?? 0);\n                            }\n                            min_error = getErrorMessage('MIN', min);\n                        }\n                        if (should_validate && field.name === 'last_digit_prediction') {\n                            min = 0;\n                            max = 9;\n                            max_error = getErrorMessage('MAX', max, 'LAST_DIGIT_PREDICTION');\n                            integer_error_message = 'Enter a value from 0 to 9.';\n                        }\n                        if (should_validate) {\n                            field.validation.forEach(validation => {\n                                if (typeof validation === 'string') {\n                                    switch (validation) {\n                                        case 'required':\n                                            schema = schema.required(localize('Field cannot be empty'));\n                                            break;\n                                        case 'min':\n                                            schema = schema.min(min, min_error);\n                                            break;\n                                        case 'max':\n                                            schema = schema.max(max, max_error);\n                                            break;\n                                        case 'ceil':\n                                            schema = schema.round('ceil');\n                                            break;\n                                        case 'floor':\n                                            schema = schema.round('floor');\n                                            break;\n                                        case 'integer':\n                                            schema = schema.integer(integer_error_message);\n                                            break;\n                                        default:\n                                            break;\n                                    }\n                                } else if (typeof validation === 'object') {\n                                    if (validation?.type) {\n                                        schema = schema[validation.type](\n                                            validation.value,\n                                            localize(validation.getMessage(validation.value))\n                                        );\n                                    }\n                                }\n                            });\n                        }\n                        sub_schema[field.name] = schema;\n                    }\n                }\n            });\n        });\n        if (is_mounted.current) {\n            setDynamicSchema(Yup.object().shape(sub_schema));\n        }\n    };\n\n    const handleSubmit = (form_data: TFormData) => {\n        updateSchema(form_data);\n        localStorage?.setItem('qs-fields', JSON.stringify(form_data));\n        return form_data;\n    };\n\n    return (\n        <Formik\n            initialValues={getInitialValue()}\n            validationSchema={dynamic_schema}\n            onSubmit={handleSubmit}\n            validate={values => updateSchema(values)}\n            validateOnChange={false}\n        >\n            {children}\n        </Formik>\n    );\n});\n\nconst QuickStrategy = observer(() => {\n    const { quick_strategy } = useDBotStore();\n    const { ui } = useStore();\n    const { is_desktop } = ui;\n    const { is_open, setFormVisibility, form_data, selected_strategy } = quick_strategy;\n\n    const active_tab_ref = useRef<HTMLDivElement>(null);\n    const [current_step, setCurrentStep] = React.useState(QsSteps.StrategySelect);\n    const [selected_trade_type, setSelectedTradeType] = React.useState('');\n\n    const sendRudderStackQsFormCloseData = () => {\n        const active_tab =\n            active_tab_ref.current?.querySelector('.active')?.textContent?.toLowerCase() === 'learn more'\n                ? 'learn more'\n                : 'trade parameters';\n        rudderStackSendCloseEvent({\n            subform_name: 'quick_strategy',\n            quick_strategy_tab: active_tab,\n            selected_strategy,\n            form_values: form_data as TFormValues,\n        });\n    };\n\n    const handleClose = () => {\n        sendRudderStackQsFormCloseData();\n        setFormVisibility(false);\n    };\n\n    return (\n        <FormikWrapper>\n            <FormikForm>\n                <LossThresholdWarningDialog />\n                {is_desktop ? (\n                    <Modal className='modal--strategy' is_open={is_open} width='72rem'>\n                        <DesktopFormWrapper\n                            onClickClose={handleClose}\n                            setCurrentStep={setCurrentStep}\n                            current_step={current_step}\n                            selected_trade_type={selected_trade_type}\n                            setSelectedTradeType={setSelectedTradeType}\n                        >\n                            <Form />\n                        </DesktopFormWrapper>\n                    </Modal>\n                ) : (\n                    <MobileFullPageModal\n                        is_modal_open={is_open}\n                        className='quick-strategy__wrapper'\n                        header={\n                            <Text size='xs' weight='bold'>\n                                {localize(\n                                    `Step ${current_step === QsSteps.StrategyCompleted ? 2 : 1}/2: Choose your strategy`\n                                )}\n                            </Text>\n                        }\n                        onClickClose={handleClose}\n                        height_offset='8rem'\n                    >\n                        <MobileFormWrapper\n                            setCurrentStep={setCurrentStep}\n                            current_step={current_step}\n                            selected_trade_type={selected_trade_type}\n                            setSelectedTradeType={setSelectedTradeType}\n                        >\n                            <Form />\n                        </MobileFormWrapper>\n                    </MobileFullPageModal>\n                )}\n            </FormikForm>\n        </FormikWrapper>\n    );\n});\n\nexport default QuickStrategy;\n","import QuickStrategy from './quick-strategy';\n\nexport default QuickStrategy;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { observer } from '@deriv/stores';\nimport { useDBotStore } from 'Stores/useDBotStore';\n\ntype FlyoutBlockProps = {\n    block_node: Element;\n    should_hide_display_name?: boolean;\n};\n\nconst FlyoutBlock = observer(({ block_node, should_hide_display_name }: FlyoutBlockProps) => {\n    const { flyout } = useDBotStore();\n    const { initBlockWorkspace } = flyout;\n\n    let el_block_workspace = React.useRef();\n\n    React.useEffect(() => {\n        initBlockWorkspace(el_block_workspace, block_node);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return (\n        <div\n            ref={el => (el_block_workspace = el)}\n            className={classNames({\n                'flyout__block-workspace--center': should_hide_display_name,\n                'flyout__block-workspace--top': !should_hide_display_name,\n            })}\n            data-testid='flyout-block-workspace'\n        />\n    );\n});\n\nexport default FlyoutBlock;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Button, Text } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport FlyoutBlock from './flyout-block';\n\ntype TFlyoutBlockGroup = {\n    onInfoClick: () => void;\n    block_node: Element;\n    is_active: boolean;\n    should_hide_display_name: boolean;\n};\n\nconst FlyoutBlockGroup = ({ onInfoClick, block_node, is_active, should_hide_display_name }: TFlyoutBlockGroup) => {\n    const block_type = (block_node.getAttribute('type') || '') as string;\n    const block_meta = window.Blockly.Blocks[block_type].meta();\n    const is_variables_get = block_type === 'variables_get';\n    const is_variables_set = block_type === 'variables_set';\n    const { display_name, description } = block_meta;\n\n    const AddButton = () => (\n        <div className='flyout__item-buttons'>\n            <Button\n                id={`db-flyout__add--${block_type}`}\n                data-testid={`dt_flyout__add_${block_type}`}\n                className='flyout__button-add flyout__button-add--hide'\n                has_effect\n                is_plus\n                onClick={() => window.Blockly.derivWorkspace.addBlockNode(block_node)}\n                type='button'\n            />\n        </div>\n    );\n\n    return (\n        <>\n            {is_variables_set && <div className='flyout__hr' />}\n            <div className={classNames('flyout__item', { 'flyout__item--active': is_active })}>\n                {!should_hide_display_name && (\n                    <>\n                        <div className='flyout__item-header'>\n                            <Text\n                                size={is_variables_get ? 'xs' : 'xsm'}\n                                line_height={is_variables_get ? undefined : 'xl'}\n                                weight={is_variables_get ? undefined : 'bold'}\n                            >\n                                {display_name}\n                            </Text>\n                            {!is_variables_get && <AddButton />}\n                        </div>\n                        <div className='flyout__item-description'>\n                            {description}\n                            {onInfoClick && (\n                                <a\n                                    id={display_name.replace(/\\s/gi, '-')}\n                                    className='flyout__item-info'\n                                    onClick={onInfoClick}\n                                >\n                                    <Localize i18n_default_text='Learn more' />\n                                </a>\n                            )}\n                        </div>\n                    </>\n                )}\n                <div className='flyout__block-workspace__header'>\n                    <FlyoutBlock block_node={block_node} should_hide_display_name />\n                    {is_variables_get && <AddButton />}\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default FlyoutBlockGroup;\n","import React from 'react';\n\ntype TFlyoutImageProps = {\n    width: string;\n    url: string;\n};\n\nconst FlyoutImage = (props: TFlyoutImageProps) => {\n    const { width, url } = props;\n    const style = { width };\n\n    return (\n        <div className='flyout__item' data-testid='dt_flyout_image'>\n            <img src={url} className='flyout__image' style={style} />\n        </div>\n    );\n};\n\nexport default FlyoutImage;\n","import React from 'react';\nimport { Text } from '@deriv/components';\n\nconst FlyoutText = (props: { text: string }) => {\n    const { text } = props;\n\n    return (\n        <Text as='p' size='xs' styles={{ lineHeight: '1.3em' }}>\n            {text}\n        </Text>\n    );\n};\n\nexport default FlyoutText;\n","import React from 'react';\n\nconst FlyoutVideo = (props: { url: string }) => (\n    <div className='flyout__item' data-testid='dt_flyout_video_container'>\n        <iframe\n            data-testid='dt_flyout_video'\n            className='flyout__video'\n            src={props.url}\n            frameBorder='0'\n            allow='accelerometer; encrypted-media; gyroscope; picture-in-picture'\n            allowFullScreen\n            width='100%'\n        />\n    </div>\n);\n\nexport default FlyoutVideo;\n","import React from 'react';\nimport { Button, Icon, Text } from '@deriv/components';\nimport { observer } from '@deriv/stores';\nimport { localize } from '@deriv/translations';\nimport { help_content_config, help_content_types } from 'Utils/help-content/help-content.config';\nimport { useDBotStore } from 'Stores/useDBotStore';\nimport FlyoutBlock from '../flyout-block';\nimport FlyoutImage from './flyout-img';\nimport FlyoutText from './flyout-text';\nimport FlyoutVideo from './flyout-video';\n\nconst HelpBase = observer(() => {\n    const { flyout, flyout_help } = useDBotStore();\n    const {\n        block_node,\n        block_type,\n        examples,\n        help_string,\n        onBackClick,\n        onSequenceClick,\n        should_next_disable,\n        should_previous_disable,\n        title,\n    } = flyout_help;\n    const { is_search_flyout } = flyout;\n\n    const block_help_component = help_string && help_content_config(__webpack_public_path__)[block_type];\n    let text_count = 0;\n\n    return (\n        <React.Fragment>\n            <div className='flyout__help-header' data-testid='dt_flyout_help_base'>\n                <button className='dc-btn flyout__button-back' onClick={onBackClick}>\n                    <Icon icon='IcArrowLeft' />\n                </button>\n                <Text weight='bold' className='flyout__help-title'>\n                    {title}\n                </Text>\n                <div className='flyout__item-buttons'>\n                    <Button\n                        className='flyout__button-add'\n                        has_effect\n                        id={`db-flyout-help__add--${block_type}`}\n                        onClick={() => Blockly.derivWorkspace.addBlockNode(block_node)}\n                        primary\n                        text={localize('Add')}\n                        type='button'\n                    />\n                </div>\n            </div>\n            <div className='flyout__help-content'>\n                {block_help_component &&\n                    block_help_component.map((component, index) => {\n                        const { type, width, url, example_id } = component;\n                        const { text } = help_string;\n                        const example_node = examples.find(example => example.id === example_id);\n                        switch (type) {\n                            case help_content_types.TEXT:\n                                if (text_count < text.length) {\n                                    return <FlyoutText key={`${block_type}_${index}`} text={text[text_count++]} />;\n                                }\n                                return null;\n                            case help_content_types.VIDEO:\n                                return <FlyoutVideo key={`${block_type}_${index}`} url={url} />;\n                            case help_content_types.IMAGE:\n                                return <FlyoutImage key={`${block_type}_${index}`} width={width} url={url} />;\n                            case help_content_types.BLOCK: {\n                                return <FlyoutBlock key={`${block_type}_${index}`} block_node={block_node} />;\n                            }\n                            case help_content_types.EXAMPLE:\n                                if (example_node) {\n                                    return (\n                                        <FlyoutBlock\n                                            key={`${block_type}_${index}`}\n                                            block_node={example_node.childNodes[0]}\n                                        />\n                                    );\n                                }\n                                return null;\n                            default:\n                                return null;\n                        }\n                    })}\n            </div>\n            {!is_search_flyout && !(should_previous_disable && should_next_disable) && (\n                <div className='flyout__help-footer'>\n                    <Button\n                        className='flyout__button-previous'\n                        secondary\n                        onClick={() => onSequenceClick(false)}\n                        text={localize('Previous')}\n                        type='button'\n                        is_disabled={should_previous_disable}\n                        renderText={text =>\n                            should_previous_disable && (\n                                <Text size='xs' weight='bold' align='center' color='disabled'>\n                                    {text}\n                                </Text>\n                            )\n                        }\n                    />\n                    <Button\n                        className='flyout__button-next'\n                        secondary\n                        onClick={() => onSequenceClick(true)}\n                        text={localize('Next')}\n                        type='button'\n                        is_disabled={should_next_disable}\n                        renderText={text =>\n                            should_next_disable && (\n                                <Text size='xs' weight='bold' align='center' color='disabled'>\n                                    {text}\n                                </Text>\n                            )\n                        }\n                    />\n                </div>\n            )}\n        </React.Fragment>\n    );\n});\n\nexport default HelpBase;\n","import HelpBase from './flyout-help-base';\n\nexport default HelpBase;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Icon, Input, Text, ThemedScrollbars } from '@deriv/components';\nimport { getPlatformSettings } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { localize } from '@deriv/translations';\nimport { help_content_config } from 'Utils/help-content/help-content.config';\nimport { useDBotStore } from 'Stores/useDBotStore';\nimport FlyoutBlockGroup from './flyout-block-group';\nimport HelpBase from './help-contents';\n\ntype TSearchResult = {\n    search_term: string;\n    total_result: number;\n};\n\nconst SearchResult = ({ search_term, total_result }: TSearchResult) => (\n    <div className='flyout__search-header'>\n        <Text weight='bold' className='flyout__search-header-text'>\n            {localize('Results for \"{{ search_term }}\"', {\n                search_term,\n                interpolation: { escapeValue: false },\n            })}\n        </Text>\n        <Text weight='bold' color='profit-success' className='flyout__search-header-text'>\n            {`${total_result} ${total_result > 1 ? localize('results') : localize('result')}`}\n        </Text>\n    </div>\n);\n\ntype TFlyoutContent = {\n    flyout_content: Element[];\n    active_helper: string;\n    setHelpContent: (node: Element) => void;\n    initFlyoutHelp: (node: Element, block_type: string) => void;\n    is_empty: boolean;\n    is_search_flyout: boolean;\n    selected_category: Element;\n    first_get_variable_block_index: number;\n};\n\nconst FlyoutContent = (props: TFlyoutContent) => {\n    const flyout_ref = React.useRef();\n    const {\n        flyout_content,\n        active_helper,\n        setHelpContent,\n        initFlyoutHelp,\n        is_empty,\n        is_search_flyout,\n        selected_category,\n        first_get_variable_block_index,\n    } = props;\n\n    return (\n        <div\n            ref={flyout_ref}\n            className={classNames('flyout__content', { 'flyout__normal-content': !is_search_flyout })}\n        >\n            <ThemedScrollbars className='flyout__content-scrollbar'>\n                {selected_category?.getAttribute('id') === 'indicators' && (\n                    <div className='flyout__content-disclaimer'>\n                        <span className='flyout__content-disclaimer-icon'>\n                            <Icon\n                                icon='IcBlackWarning'\n                                custom_color='#000000'\n                                className='flyout__content-disclaimer__warning-icon'\n                            />\n                        </span>\n                        <span className='flyout__content-disclaimer-text'>\n                            {localize(\n                                'Indicators on the chart tab are for indicative purposes only and may vary slightly from the ones on the {{platform_name_dbot}} workspace.',\n                                { platform_name_dbot: getPlatformSettings('dbot').name }\n                            )}\n                        </span>\n                    </div>\n                )}\n                {is_empty ? (\n                    <div className='flyout__search-empty'>\n                        <Text as='h2' weight='bold' line_height='xxs'>\n                            {localize('No results found')}\n                        </Text>\n                    </div>\n                ) : (\n                    flyout_content.map((node, index) => {\n                        const tag_name = node.tagName.toUpperCase();\n                        switch (tag_name) {\n                            case Blockly.Xml.NODE_BLOCK: {\n                                const block_type = (node.getAttribute('type') || '') as string;\n\n                                return (\n                                    <FlyoutBlockGroup\n                                        key={`${node.getAttribute(\n                                            'type'\n                                        )}${window?.Blockly?.utils?.idGenerator?.genUid()}`}\n                                        id={`flyout__item-workspace--${index}`}\n                                        block_node={node}\n                                        should_hide_display_name={\n                                            block_type === 'variables_get'\n                                                ? index !== first_get_variable_block_index\n                                                : false\n                                        }\n                                        onInfoClick={\n                                            help_content_config(__webpack_public_path__)[block_type] &&\n                                            (is_search_flyout\n                                                ? () => setHelpContent(node)\n                                                : () => initFlyoutHelp(node, block_type))\n                                        }\n                                        is_active={active_helper === block_type}\n                                    />\n                                );\n                            }\n                            case Blockly.Xml.NODE_LABEL: {\n                                return (\n                                    <div\n                                        key={`${node.getAttribute('text')}${index}`}\n                                        className='flyout__item-label-bold'\n                                    >\n                                        {node.getAttribute('text')}\n                                    </div>\n                                );\n                            }\n                            case Blockly.Xml.NODE_INPUT: {\n                                return (\n                                    <Input\n                                        key={`${node.getAttribute('name')}${index}`}\n                                        className={`${node.getAttribute('className')}`}\n                                        type={`${node.getAttribute('type')}`}\n                                        name={`${node.getAttribute('name')}`}\n                                        placeholder={`${node.getAttribute('placeholder')}`}\n                                        autoComplete='off'\n                                    />\n                                );\n                            }\n                            case Blockly.Xml.NODE_BUTTON: {\n                                const callback_key = node.getAttribute('callbackKey');\n                                const callback_id = node.getAttribute('id') as string;\n\n                                return (\n                                    <button\n                                        id={callback_id}\n                                        key={`${callback_key}${index}`}\n                                        className={classNames(\n                                            'dc-btn',\n                                            'dc-btn-effect',\n                                            'dc-btn--primary',\n                                            `${node.getAttribute('className')}`\n                                        )}\n                                        onClick={button => {\n                                            const workspace = window.Blockly.derivWorkspace;\n                                            const button_cb = workspace.getButtonCallback(callback_key);\n                                            const callback = button_cb;\n\n                                            // Workaround for not having a flyout workspace.\n                                            // eslint-disable-next-line no-underscore-dangle\n                                            button.targetWorkspace_ = workspace;\n                                            button.getTargetWorkspace = () => {\n                                                // eslint-disable-next-line no-underscore-dangle\n                                                return button.targetWorkspace_;\n                                            };\n\n                                            callback?.(button);\n                                        }}\n                                    >\n                                        {node.getAttribute('text')}\n                                    </button>\n                                );\n                            }\n                            default:\n                                return null;\n                        }\n                    })\n                )}\n            </ThemedScrollbars>\n        </div>\n    );\n};\n\nconst Flyout = observer(() => {\n    const { flyout, flyout_help } = useDBotStore();\n    const { gtm } = useStore();\n    const { active_helper, initFlyoutHelp, setHelpContent } = flyout_help;\n    const {\n        flyout_content,\n        flyout_width,\n        is_help_content,\n        is_search_flyout,\n        is_visible,\n        onMount,\n        onUnmount,\n        search_term,\n        selected_category,\n        first_get_variable_block_index,\n    } = flyout;\n\n    const { pushDataLayer } = gtm;\n\n    React.useEffect(() => {\n        onMount();\n        return () => onUnmount();\n    }, [onMount, onUnmount]);\n\n    if (is_visible && is_search_flyout) {\n        pushDataLayer({ event: 'dbot_search_results', value: true });\n    }\n\n    const total_result = Object.keys(flyout_content).length;\n    const is_empty = total_result === 0;\n\n    return (\n        is_visible && (\n            <div\n                id='gtm-search-results'\n                className={classNames('flyout', {\n                    flyout__search: is_search_flyout,\n                    flyout__help: is_help_content,\n                    flyout__normal: !is_help_content && !is_search_flyout,\n                })}\n                style={{ width: `${flyout_width}px` }}\n            >\n                {is_search_flyout && !is_help_content && (\n                    <SearchResult search_term={search_term} total_result={total_result} />\n                )}\n                {is_help_content ? (\n                    <HelpBase />\n                ) : (\n                    <FlyoutContent\n                        is_empty={is_empty}\n                        flyout_content={flyout_content}\n                        active_helper={active_helper}\n                        setHelpContent={setHelpContent}\n                        initFlyoutHelp={initFlyoutHelp}\n                        is_search_flyout={is_search_flyout}\n                        selected_category={selected_category}\n                        first_get_variable_block_index={first_get_variable_block_index}\n                    />\n                )}\n            </div>\n        )\n    );\n});\n\nexport default Flyout;\n","import Flyout from './flyout';\nimport './flyout.scss';\n\nexport default Flyout;\n","import React from 'react';\nimport { Dialog, Text } from '@deriv/components';\nimport { Localize, localize } from '@deriv/translations';\n\nexport type TStopBotModalContent = {\n    is_running: boolean;\n    is_dialog_open: boolean;\n    is_contract_dialog_open: boolean;\n    is_stop_bot_dialog_open: boolean;\n    is_multiplier: boolean;\n    closeMultiplierContract: () => void;\n    onOkButtonClick: () => void;\n    toggleStopBotDialog: () => void;\n};\n\nconst StopBotModalContent = ({\n    is_running,\n    is_multiplier,\n    is_contract_dialog_open,\n    is_stop_bot_dialog_open,\n    closeMultiplierContract,\n    onOkButtonClick,\n    toggleStopBotDialog,\n}: TStopBotModalContent) => {\n    const confirm_button_text = is_running && is_multiplier ? localize('Keep my contract') : localize('Stop my bot');\n    const cancel_button_text = is_running && is_multiplier ? localize('Close my contract') : localize('Back');\n    const title_text =\n        is_running && is_multiplier ? localize('Keep your current contract?') : localize('Stop your current bot?');\n    const toggle_dialog_or_stop = is_running && is_multiplier ? closeMultiplierContract : toggleStopBotDialog;\n\n    return (\n        <React.Fragment>\n            <Dialog\n                portal_element_id='modal_root'\n                title={title_text}\n                is_visible={is_running ? is_stop_bot_dialog_open : is_contract_dialog_open}\n                confirm_button_text={confirm_button_text}\n                onConfirm={onOkButtonClick}\n                cancel_button_text={cancel_button_text}\n                onCancel={toggle_dialog_or_stop}\n                is_mobile_full_width={false}\n                className={'toolbar__dialog'}\n                has_close_icon\n            >\n                {is_running && is_multiplier ? (\n                    <>\n                        <Text as='p' line_height='s' size='xs' styles={{ paddingBottom: '2rem', paddingTop: '1rem' }}>\n                            <Localize i18n_default_text='Close your contract now or keep it running. If you decide to keep it running, you can check and close it later on the ' />\n                            <Text weight='bold' as='span' line_height='s' size='xs'>\n                                <Localize i18n_default_text='Reports' />\n                            </Text>\n                            <Localize i18n_default_text='page.' />\n                        </Text>\n                        <Text as='p' line_height='s' size='xs'>\n                            <Localize i18n_default_text='The Quick Strategy you just created will be loaded to the workspace.' />\n                        </Text>\n                    </>\n                ) : (\n                    <>\n                        <Text as='p' line_height='s' size='xs' styles={{ paddingBottom: '2rem', paddingTop: '1rem' }}>\n                            <Localize i18n_default_text='Stopping the current bot will load the Quick Strategy you just created to the workspace.' />\n                        </Text>\n                        <Text as='p' line_height='s' size='xs'>\n                            <Localize i18n_default_text='Any open contracts can be viewed on the ' />\n                            <Text weight='bold' as='span' line_height='s' size='xs'>\n                                <Localize i18n_default_text='Reports' />\n                            </Text>\n                            <Text as='span' line_height='s' size='xs' styles={{ paddingInlineStart: '0.4rem' }}>\n                                <Localize i18n_default_text='page.' />\n                            </Text>\n                        </Text>\n                    </>\n                )}\n            </Dialog>\n        </React.Fragment>\n    );\n};\n\nexport default StopBotModalContent;\n","import React from 'react';\nimport { observer } from '@deriv/stores';\nimport { useDBotStore } from '../../stores/useDBotStore';\nimport StopBotModalContent from './stop-bot-modal-content';\n\nconst StopBotModal: React.FC = observer(() => {\n    const { run_panel, quick_strategy, summary_card } = useDBotStore();\n\n    const { is_contract_dialog_open, is_stop_bot_dialog_open, toggleStopBotDialog } = quick_strategy;\n    const { is_running, closeMultiplierContract, stopMyBot, is_dialog_open } = run_panel;\n    const { is_multiplier } = summary_card;\n\n    return (\n        <StopBotModalContent\n            is_running={is_running}\n            onOkButtonClick={stopMyBot}\n            is_contract_dialog_open={is_contract_dialog_open}\n            is_stop_bot_dialog_open={is_stop_bot_dialog_open}\n            is_multiplier={is_multiplier}\n            closeMultiplierContract={closeMultiplierContract}\n            is_dialog_open={is_dialog_open}\n            toggleStopBotDialog={toggleStopBotDialog}\n        />\n    );\n});\n\nexport default StopBotModal;\n","import React from 'react';\nimport { Button, Popover } from '@deriv/components';\n\ntype TToolbarButton = {\n    popover_message?: string;\n    button_id: string;\n    button_classname: string;\n    buttonOnClick: () => void;\n    icon?: React.ReactElement;\n    button_text: string;\n};\n\nconst ToolbarButton = ({\n    popover_message,\n    button_id,\n    button_classname,\n    buttonOnClick,\n    icon,\n    button_text,\n}: TToolbarButton) => (\n    <Popover alignment='bottom' message={popover_message} should_disable_pointer_events>\n        <Button id={button_id} className={button_classname} has_effect onClick={buttonOnClick} icon={icon} green>\n            {button_text}\n        </Button>\n    </Popover>\n);\n\nexport default ToolbarButton;\n","import React from 'react';\nimport { Icon, Popover } from '@deriv/components';\nimport { useStore } from '@deriv/stores';\nimport { popover_zindex } from 'Constants/z-indexes';\n\ntype TToolbarIcon = {\n    popover_message: string;\n    icon: string;\n    icon_id: string;\n    action: () => void;\n    icon_color?: string;\n    data_testid?: string;\n};\n\nconst ToolbarIcon = ({ popover_message, icon, icon_id, icon_color, action, data_testid }: TToolbarIcon) => {\n    const { ui } = useStore();\n    const { is_desktop } = ui;\n\n    const renderIcon = () => (\n        <Icon\n            icon={icon}\n            id={icon_id}\n            className='toolbar__icon'\n            onClick={action}\n            {...(icon_color && { color: icon_color })}\n            data_testid={data_testid}\n        />\n    );\n\n    return is_desktop ? (\n        <Popover\n            alignment='bottom'\n            message={popover_message}\n            zIndex={String(popover_zindex.TOOLBAR)}\n            should_disable_pointer_events\n        >\n            {renderIcon()}\n        </Popover>\n    ) : (\n        renderIcon()\n    );\n};\n\nexport default ToolbarIcon;\n","import React from 'react';\nimport { observer, useStore } from '@deriv/stores';\nimport { localize } from '@deriv/translations';\nimport { useDBotStore } from 'Stores/useDBotStore';\nimport { rudderStackSendOpenEvent } from '../../../analytics/rudderstack-common-events';\nimport ToolbarIcon from './toolbar-icon';\n\nconst WorkspaceGroup = observer(() => {\n    const { dashboard, toolbar, load_modal, save_modal } = useDBotStore();\n    const { setPreviewOnPopup, setChartModalVisibility, setTradingViewModalVisibility } = dashboard;\n    const { has_redo_stack, has_undo_stack, onResetClick, onSortClick, onUndoClick, onZoomInOutClick } = toolbar;\n    const { toggleSaveModal } = save_modal;\n    const { toggleLoadModal } = load_modal;\n    const { ui } = useStore();\n    const { is_desktop } = ui;\n\n    return (\n        <div className='toolbar__wrapper'>\n            <div className='toolbar__group toolbar__group-btn' data-testid='dt_toolbar_group_btn'>\n                <ToolbarIcon\n                    popover_message={localize('Reset')}\n                    icon='IcReset'\n                    icon_id='db-toolbar__reset-button'\n                    data_testid='dt_toolbar_reset_button'\n                    action={onResetClick}\n                />\n                <ToolbarIcon\n                    popover_message={localize('Import')}\n                    icon='IcFolderOpen'\n                    icon_id='db-toolbar__import-button'\n                    data_testid='dt_toolbar_import_button'\n                    action={() => {\n                        setPreviewOnPopup(true);\n                        toggleLoadModal();\n                        rudderStackSendOpenEvent({\n                            subpage_name: 'bot_builder',\n                            subform_source: 'bot_builder',\n                            subform_name: 'load_strategy',\n                            load_strategy_tab: 'recent',\n                        });\n                    }}\n                />\n                <ToolbarIcon\n                    popover_message={localize('Save')}\n                    icon='IcSave'\n                    icon_id='db-toolbar__save-button'\n                    data_testid='dt_toolbar_save_button'\n                    action={toggleSaveModal}\n                />\n                <ToolbarIcon\n                    popover_message={localize('Sort blocks')}\n                    icon='IcSort'\n                    icon_id='db-toolbar__sort-button'\n                    data_testid='dt_toolbar_sort_button'\n                    action={onSortClick}\n                />\n                {is_desktop && (\n                    <>\n                        <div className='vertical-divider' />\n                        <ToolbarIcon\n                            popover_message={localize('Charts')}\n                            icon='IcChartsTabDbot'\n                            icon_id='db-toolbar__charts-button'\n                            data_testid='dt_toolbar_chart_button'\n                            action={() => setChartModalVisibility()}\n                        />\n                        <ToolbarIcon\n                            popover_message={localize('TradingView Chart')}\n                            icon='IcTradingViewChart'\n                            icon_id='db-toolbar__tradingview-button'\n                            data_testid='dt_toolbar_tradingview_chart_button'\n                            action={() => setTradingViewModalVisibility()}\n                        />\n                    </>\n                )}\n                <div className='vertical-divider' />\n                <ToolbarIcon\n                    popover_message={localize('Undo')}\n                    icon='IcUndo'\n                    icon_id='db-toolbar__undo-button'\n                    data_testid='dt_toolbar_undo_button'\n                    icon_color={has_undo_stack ? undefined : 'disabled'}\n                    action={() => onUndoClick(/* redo */ false)}\n                />\n                <ToolbarIcon\n                    popover_message={localize('Redo')}\n                    icon='IcRedo'\n                    icon_id='db-toolbar__redo-button'\n                    data_testid='dt_toolbar_redo_button'\n                    icon_color={has_redo_stack ? undefined : 'disabled'}\n                    action={() => onUndoClick(/* redo */ true)}\n                />\n                <div className='vertical-divider' />\n                <ToolbarIcon\n                    popover_message={localize('Zoom in')}\n                    icon='IcZoomIn'\n                    icon_id='db-toolbar__zoom-in-button'\n                    data_testid='dt_toolbar_zoom_in_button'\n                    action={() => onZoomInOutClick(/* in */ true)}\n                />\n                <ToolbarIcon\n                    popover_message={localize('Zoom out')}\n                    icon='IcZoomOut'\n                    icon_id='db-toolbar__zoom-out'\n                    data_testid='dt_toolbar_zoom_out_button'\n                    action={() => onZoomInOutClick(/* in */ false)}\n                />\n            </div>\n        </div>\n    );\n});\n\nexport default WorkspaceGroup;\n","import React from 'react';\nimport { Dialog } from '@deriv/components';\nimport { observer, useStore } from '@deriv/stores';\nimport { Localize, localize } from '@deriv/translations';\nimport { useDBotStore } from 'Stores/useDBotStore';\nimport { rudderStackSendOpenEvent } from '../../../analytics/rudderstack-common-events';\nimport ToolbarButton from './toolbar-button';\nimport WorkspaceGroup from './workspace-group';\n\nconst Toolbar = observer(() => {\n    const { run_panel, toolbar, quick_strategy } = useDBotStore();\n    const {\n        ui: { is_desktop },\n    } = useStore();\n    const { is_dialog_open, closeResetDialog, onResetOkButtonClick: onOkButtonClick } = toolbar;\n    const { is_running } = run_panel;\n    const { setFormVisibility } = quick_strategy;\n    const confirm_button_text = is_running ? localize('Yes') : localize('OK');\n    const cancel_button_text = is_running ? localize('No') : localize('Cancel');\n    const handleQuickStrategyOpen = () => {\n        setFormVisibility(true);\n        // send to rs if quick strategy is opened from bot builder (mobile)\n        rudderStackSendOpenEvent({\n            subpage_name: 'bot_builder',\n            subform_source: 'bot_builder',\n            subform_name: 'quick_strategy',\n        });\n    };\n    return (\n        <React.Fragment>\n            <div className='toolbar dashboard__toolbar' data-testid='dt_dashboard_toolbar'>\n                <div className='toolbar__section'>\n                    {!is_desktop && (\n                        <ToolbarButton\n                            popover_message={localize('Click here to start building your Deriv Bot.')}\n                            button_id='db-toolbar__get-started-button'\n                            button_classname='toolbar__btn toolbar__btn--icon toolbar__btn--start'\n                            buttonOnClick={handleQuickStrategyOpen}\n                            button_text={localize('Quick strategy')}\n                        />\n                    )}\n                    {is_desktop && <WorkspaceGroup />}\n                </div>\n            </div>\n            {!is_desktop && <WorkspaceGroup />}\n            <Dialog\n                portal_element_id='modal_root'\n                title={localize('Are you sure?')}\n                is_visible={is_dialog_open}\n                confirm_button_text={confirm_button_text}\n                onConfirm={onOkButtonClick}\n                cancel_button_text={cancel_button_text}\n                onCancel={closeResetDialog}\n                is_mobile_full_width={false}\n                className={'toolbar__dialog'}\n                has_close_icon\n            >\n                {is_running ? (\n                    <Localize\n                        i18n_default_text='The workspace will be reset to the default strategy and any unsaved changes will be lost. <0>Note: This will not affect your running bot.</0>'\n                        components={[\n                            <div\n                                key={0}\n                                className='toolbar__dialog-text--second'\n                                data-testid='dt_toolbar_dialog_text_second'\n                            />,\n                        ]}\n                    />\n                ) : (\n                    <Localize i18n_default_text='Any unsaved changes will be lost.' />\n                )}\n            </Dialog>\n        </React.Fragment>\n    );\n});\n\nexport default Toolbar;\n","import Toolbar from './toolbar';\nimport './toolbar.scss';\n\nexport default Toolbar;\n","import React from 'react';\nimport { Icon } from '@deriv/components';\nimport { observer } from '@deriv/stores';\n\ntype TSearchIcon = {\n    search: string;\n    is_search_loading: boolean;\n    onClick: () => void;\n};\n\nconst SearchIcon = observer(({ search, is_search_loading, onClick }: TSearchIcon) => {\n    if (!search) return <Icon icon='IcSearch' />;\n    if (is_search_loading) return <div className='loader' data-testid='loader' />;\n    return <Icon icon='IcCloseCircle' onClick={onClick} color='secondary' />;\n});\n\nexport default SearchIcon;\n","import React from 'react';\nimport { Field as FormField, FieldProps, Form, Formik } from 'formik';\nimport { Input } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport SearchIcon from './search-icon';\n\ntype TSearchBox = {\n    is_search_loading: boolean;\n    onSearch: () => void;\n    onSearchBlur: () => void;\n    onSearchClear: (param: (field: string, value: number | string, shouldValidate?: boolean) => void) => void;\n    onSearchKeyUp: (param: () => void) => void;\n};\n\ntype TFormValues = { [key: string]: string };\n\nconst SearchBox = ({ is_search_loading, onSearch, onSearchBlur, onSearchClear, onSearchKeyUp }: TSearchBox) => (\n    <div className='db-toolbox__search'>\n        <Formik initialValues={{ search: '' }} onSubmit={onSearch}>\n            {({ submitForm, values: { search }, setFieldValue }) => (\n                <Form>\n                    <FormField name='search'>\n                        {({ field }: FieldProps<string, TFormValues>) => (\n                            <Input\n                                {...field}\n                                className='db-toolbox__search-field'\n                                type='text'\n                                name='search'\n                                placeholder={localize('Search')}\n                                onKeyUp={() => onSearchKeyUp(submitForm)}\n                                onFocus={submitForm}\n                                onBlur={onSearchBlur}\n                                leading_icon={\n                                    <SearchIcon\n                                        search={search}\n                                        is_search_loading={is_search_loading}\n                                        onClick={() => onSearchClear(setFieldValue)}\n                                    />\n                                }\n                            />\n                        )}\n                    </FormField>\n                </Form>\n            )}\n        </Formik>\n    </div>\n);\n\nexport default SearchBox;\n","import SearchBox from './search-box';\n\nexport default SearchBox;\n","import React from 'react';\nimport ReactDomServer from 'react-dom/server';\nimport { localize } from '@deriv/translations';\n\nconst Arg = ({ ...props }) => {\n    return React.createElement('arg', props);\n};\n\nconst Block = ({ ...props }) => {\n    return React.createElement('block', props);\n};\n\nconst Category = ({ ...props }) => {\n    return React.createElement('category', props);\n};\n\nconst Example = ({ ...props }) => {\n    return React.createElement('example', props);\n};\n\nconst Examples = ({ ...props }) => {\n    return React.createElement('examples', props);\n};\n\nconst Field = ({ ...props }) => {\n    return React.createElement('field', props);\n};\n\nconst Mutation = ({ ...props }) => {\n    return React.createElement('mutation', props);\n};\n\nconst Next = ({ ...props }) => {\n    return React.createElement('next', props);\n};\n\nconst Shadow = ({ ...props }) => {\n    return React.createElement('shadow', props);\n};\n\nconst Statement = ({ ...props }) => {\n    return React.createElement('statement', props);\n};\n\nconst Value = ({ ...props }) => {\n    return React.createElement('value', props);\n};\n\nconst Xml = ({ ...props }) => {\n    return React.createElement('xml', props);\n};\n\nexport const ToolboxItems = ReactDomServer.renderToStaticMarkup(\n    <Xml xmlns='http://www.w3.org/1999/xhtml' id='toolbox'>\n        <Category id='trade_parameters' name={localize('Trade parameters')}>\n            <Block type='trade_definition'>\n                <Statement name='TRADE_OPTIONS'>\n                    <Block type='trade_definition_market' deletable='false' movable='false'>\n                        <Field name='MARKET_LIST' />\n                        <Field name='SUBMARKET_LIST' />\n                        <Field name='SYMBOL_LIST' />\n                        <Next>\n                            <Block type='trade_definition_tradetype' deletable='false' movable='false'>\n                                <Field name='TRADETYPECAT_LIST' />\n                                <Field name='TRADETYPE_LIST' />\n                                <Next>\n                                    <Block type='trade_definition_contracttype' deletable='false' movable='false'>\n                                        <Field name='TYPE_LIST' />\n                                        <Next>\n                                            <Block\n                                                type='trade_definition_candleinterval'\n                                                deletable='false'\n                                                movable='false'\n                                            >\n                                                <Field name='CANDLEINTERVAL_LIST'>60</Field>\n                                                <Next>\n                                                    <Block\n                                                        type='trade_definition_restartbuysell'\n                                                        deletable='false'\n                                                        movable='false'\n                                                    >\n                                                        <Field name='TIME_MACHINE_ENABLED'>FALSE</Field>\n                                                        <Next>\n                                                            <Block\n                                                                type='trade_definition_restartonerror'\n                                                                deletable='false'\n                                                                movable='false'\n                                                            >\n                                                                <Field name='RESTARTONERROR'>TRUE</Field>\n                                                            </Block>\n                                                        </Next>\n                                                    </Block>\n                                                </Next>\n                                            </Block>\n                                        </Next>\n                                    </Block>\n                                </Next>\n                            </Block>\n                        </Next>\n                    </Block>\n                </Statement>\n            </Block>\n            <Block type='trade_definition_tradeoptions'>\n                <Mutation has_first_barrier='false' has_second_barrier='false' has_prediction='false' />\n                <Field name='DURATIONTYPE_LIST' />\n                <Field name='CURRENCY_LIST'>USD</Field>\n                <Value name='DURATION'>\n                    <Shadow type='math_number'>\n                        <Field name='NUM'>1</Field>\n                    </Shadow>\n                </Value>\n                <Value name='AMOUNT'>\n                    <Shadow type='math_number'>\n                        <Field name='NUM'>1</Field>\n                    </Shadow>\n                </Value>\n                <Field name='AMOUNT_LIMITS' />\n            </Block>\n            <Block type='trade_definition_multiplier'>\n                <Field name='MULTIPLIERTYPE_LIST' />\n                <Field name='CURRENCY_LIST'>USD</Field>\n                <Value name='AMOUNT'>\n                    <Shadow type='math_number'>\n                        <Field name='NUM'>1</Field>\n                    </Shadow>\n                </Value>\n                <Field name='AMOUNT_LIMITS' />\n            </Block>\n            <Block type='multiplier_take_profit'>\n                <Value name='AMOUNT'>\n                    <Shadow type='math_number'>\n                        <Field name='NUM'>0</Field>\n                    </Shadow>\n                </Value>\n            </Block>\n            <Block type='multiplier_stop_loss'>\n                <Value name='AMOUNT'>\n                    <Shadow type='math_number'>\n                        <Field name='NUM'>0</Field>\n                    </Shadow>\n                </Value>\n            </Block>\n            <Block type='trade_definition_accumulator'>\n                <Field name='GROWTHRATE_LIST' />\n                <Field name='CURRENCY_LIST'>USD</Field>\n                <Value name='AMOUNT'>\n                    <Shadow type='math_number'>\n                        <Field name='NUM'>1</Field>\n                    </Shadow>\n                </Value>\n            </Block>\n            <Block type='accumulator_take_profit'>\n                <Value name='AMOUNT'>\n                    <Shadow type='math_number'>\n                        <Field name='NUM'>0</Field>\n                    </Shadow>\n                </Value>\n            </Block>\n        </Category>\n        <Category id='purchase_conditions' name={localize('Purchase conditions')}>\n            <Block type='before_purchase' />\n            <Block type='purchase' />\n        </Category>\n        <Category id='sell_conditions' name={localize('Sell conditions (optional)')}>\n            <Block type='during_purchase' />\n            <Block type='sell_at_market' />\n        </Category>\n        <Category id='trade_results' name={localize('Restart trading conditions')}>\n            <Block type='after_purchase' />\n            <Block type='trade_again' />\n        </Category>\n\n        <Category id='analysis' name={localize('Analysis')}>\n            <Category id='indicators' name={localize('Indicators')}>\n                <Block type='sma_statement'>\n                    <Statement name='STATEMENT'>\n                        <Block type='input_list' deletable='false' movable='false'>\n                            <Value name='INPUT_LIST' />\n                            <Next>\n                                <Block type='period' deletable='false' movable='false'>\n                                    <Value name='PERIOD'>\n                                        <Shadow type='math_number'>\n                                            <Field name='NUM'>10</Field>\n                                        </Shadow>\n                                    </Value>\n                                </Block>\n                            </Next>\n                        </Block>\n                    </Statement>\n                </Block>\n                <Block type='smaa_statement'>\n                    <Statement name='STATEMENT'>\n                        <Block type='input_list' deletable='false' movable='false'>\n                            <Value name='INPUT_LIST' />\n                            <Next>\n                                <Block type='period' deletable='false' movable='false'>\n                                    <Value name='PERIOD'>\n                                        <Shadow type='math_number'>\n                                            <Field name='NUM'>10</Field>\n                                        </Shadow>\n                                    </Value>\n                                </Block>\n                            </Next>\n                        </Block>\n                    </Statement>\n                </Block>\n                <Block type='bb_statement'>\n                    <Field name='BBRESULT_LIST'>0</Field>\n                    <Statement name='STATEMENT'>\n                        <Block type='input_list' deletable='false' movable='false'>\n                            <Value name='INPUT_LIST' />\n                            <Next>\n                                <Block type='period' deletable='false' movable='false'>\n                                    <Value name='PERIOD'>\n                                        <Shadow type='math_number'>\n                                            <Field name='NUM'>10</Field>\n                                        </Shadow>\n                                    </Value>\n                                    <Next>\n                                        <Block type='std_dev_multiplier_up' deletable='false' movable='false'>\n                                            <Value name='UPMULTIPLIER'>\n                                                <Shadow type='math_number'>\n                                                    <Field name='NUM'>5</Field>\n                                                </Shadow>\n                                            </Value>\n                                            <Next>\n                                                <Block type='std_dev_multiplier_down'>\n                                                    <Value name='DOWNMULTIPLIER'>\n                                                        <Shadow type='math_number'>\n                                                            <Field name='NUM'>5</Field>\n                                                        </Shadow>\n                                                    </Value>\n                                                </Block>\n                                            </Next>\n                                        </Block>\n                                    </Next>\n                                </Block>\n                            </Next>\n                        </Block>\n                    </Statement>\n                </Block>\n                <Block type='bba_statement'>\n                    <Field name='BBRESULT_LIST'>0</Field>\n                    <Statement name='STATEMENT'>\n                        <Block type='input_list' deletable='false' movable='false'>\n                            <Value name='INPUT_LIST' />\n                            <Next>\n                                <Block type='period' deletable='false' movable='false'>\n                                    <Value name='PERIOD'>\n                                        <Shadow type='math_number'>\n                                            <Field name='NUM'>10</Field>\n                                        </Shadow>\n                                    </Value>\n                                    <Next>\n                                        <Block type='std_dev_multiplier_up' deletable='false' movable='false'>\n                                            <Value name='UPMULTIPLIER'>\n                                                <Shadow type='math_number'>\n                                                    <Field name='NUM'>5</Field>\n                                                </Shadow>\n                                            </Value>\n                                            <Next>\n                                                <Block type='std_dev_multiplier_down'>\n                                                    <Value name='DOWNMULTIPLIER'>\n                                                        <Shadow type='math_number'>\n                                                            <Field name='NUM'>5</Field>\n                                                        </Shadow>\n                                                    </Value>\n                                                </Block>\n                                            </Next>\n                                        </Block>\n                                    </Next>\n                                </Block>\n                            </Next>\n                        </Block>\n                    </Statement>\n                </Block>\n                <Block type='ema_statement'>\n                    <Statement name='STATEMENT'>\n                        <Block type='input_list' deletable='false' movable='false'>\n                            <Value name='INPUT_LIST' />\n                            <Next>\n                                <Block type='period' deletable='false' movable='false'>\n                                    <Value name='PERIOD'>\n                                        <Shadow type='math_number'>\n                                            <Field name='NUM'>10</Field>\n                                        </Shadow>\n                                    </Value>\n                                </Block>\n                            </Next>\n                        </Block>\n                    </Statement>\n                </Block>\n                <Block type='emaa_statement'>\n                    <Statement name='STATEMENT'>\n                        <Block type='input_list' deletable='false' movable='false'>\n                            <Value name='INPUT_LIST' />\n                            <Next>\n                                <Block type='period' deletable='false' movable='false'>\n                                    <Value name='PERIOD'>\n                                        <Shadow type='math_number'>\n                                            <Field name='NUM'>10</Field>\n                                        </Shadow>\n                                    </Value>\n                                </Block>\n                            </Next>\n                        </Block>\n                    </Statement>\n                </Block>\n                <Block type='rsi_statement'>\n                    <Statement name='STATEMENT'>\n                        <Block type='input_list' deletable='false' movable='false'>\n                            <Next>\n                                <Block type='period' deletable='false' movable='false'>\n                                    <Value name='PERIOD'>\n                                        <Shadow type='math_number'>\n                                            <Field name='NUM'>10</Field>\n                                        </Shadow>\n                                    </Value>\n                                </Block>\n                            </Next>\n                        </Block>\n                    </Statement>\n                </Block>\n                <Block type='rsia_statement'>\n                    <Statement name='STATEMENT'>\n                        <Block type='input_list' deletable='false' movable='false'>\n                            <Value name='INPUT_LIST' />\n                            <Next>\n                                <Block type='period' deletable='false' movable='false'>\n                                    <Value name='PERIOD'>\n                                        <Shadow type='math_number'>\n                                            <Field name='NUM'>10</Field>\n                                        </Shadow>\n                                    </Value>\n                                </Block>\n                            </Next>\n                        </Block>\n                    </Statement>\n                </Block>\n                <Block type='macda_statement'>\n                    <Field name='MACDFIELDS_LIST'>1</Field>\n                    <Statement name='STATEMENT'>\n                        <Block type='input_list' deletable='false' movable='false'>\n                            <Value name='INPUT_LIST' />\n                            <Next>\n                                <Block type='fast_ema_period' deletable='false' movable='false'>\n                                    <Value name='FAST_EMA_PERIOD'>\n                                        <Shadow type='math_number'>\n                                            <Field name='NUM'>12</Field>\n                                        </Shadow>\n                                    </Value>\n                                    <Next>\n                                        <Block type='slow_ema_period' deletable='false' movable='false'>\n                                            <Value name='SLOW_EMA_PERIOD'>\n                                                <Shadow type='math_number'>\n                                                    <Field name='NUM'>26</Field>\n                                                </Shadow>\n                                            </Value>\n                                            <Next>\n                                                <Block type='signal_ema_period' deletable='false' movable='false'>\n                                                    <Value name='SIGNAL_EMA_PERIOD'>\n                                                        <Shadow type='math_number'>\n                                                            <Field name='NUM'>9</Field>\n                                                        </Shadow>\n                                                    </Value>\n                                                </Block>\n                                            </Next>\n                                        </Block>\n                                    </Next>\n                                </Block>\n                            </Next>\n                        </Block>\n                    </Statement>\n                </Block>\n            </Category>\n\n            <Category name={localize('Tick and candle analysis')} id='tick_analysis'>\n                <Block type='tick_analysis' />\n                <Block type='tick' />\n                <Block type='last_digit' />\n                <Block type='stat' />\n                <Block type='stat_list' />\n                <Block type='ticks' />\n                <Block type='lastDigitList' />\n                <Block type='check_direction' />\n                <Block type='is_candle_black' />\n                <Block type='read_ohlc'>\n                    <Field name='OHLCFIELD_LIST'>open</Field>\n                    <Field name='CANDLEINTERVAL_LIST'>default</Field>\n                    <Value name='CANDLEINDEX'>\n                        <Shadow type='math_number'>\n                            <Field name='NUM'>1</Field>\n                        </Shadow>\n                    </Value>\n                </Block>\n                <Block type='read_ohlc_obj' />\n                <Block type='ohlc_values' />\n                <Block type='ohlc_values_in_list' />\n                <Block type='get_ohlc'>\n                    <Field name='CANDLEINTERVAL_LIST'>default</Field>\n                    <Value name='CANDLEINDEX'>\n                        <Shadow type='math_number'>\n                            <Field name='NUM'>1</Field>\n                        </Shadow>\n                    </Value>\n                </Block>\n                <Block type='ohlc' />\n            </Category>\n\n            <Category name={localize('Contract')} id='contract_details'>\n                <Block type='contract_check_result' />\n                <Block type='read_details' />\n                <Block type='sell_price' />\n                <Block type='check_sell' />\n                <Block type='payout' />\n                <Block type='ask_price' />\n            </Category>\n\n            <Category name={localize('Stats')} id='stats'>\n                <Block type='balance' />\n                <Block type='total_profit' />\n                <Block type='total_runs' />\n            </Category>\n        </Category>\n\n        <Category id='utility' name={localize('Utility')}>\n            <Category name={localize('Custom functions')} id='custom_functions' dynamic='PROCEDURE' />\n\n            <Category name={localize('Variables')} id='variables' dynamic='VARIABLE' />\n\n            <Category name={localize('Notifications')} id='notifications'>\n                <Block type='text_print'>\n                    <Value name='TEXT'>\n                        <Shadow type='text'>\n                            <Field name='TEXT'>abc</Field>\n                        </Shadow>\n                    </Value>\n                </Block>\n                <Block type='text_prompt_ext'>\n                    <Field name='TYPE'>TEXT</Field>\n                    <Value name='TEXT'>\n                        <Shadow type='text'>\n                            <Field name='TEXT'>abc</Field>\n                        </Shadow>\n                    </Value>\n                </Block>\n                <Block type='notify'>\n                    <Field name='NOTIFICATION_TYPE'>success</Field>\n                    <Value name='MESSAGE'>\n                        <Shadow type='text'>\n                            <Field name='TEXT'>abc</Field>\n                        </Shadow>\n                    </Value>\n                </Block>\n                <Block type='notify_telegram'>\n                    <Value name='TELEGRAM_ACCESS_TOKEN'>\n                        <Shadow type='text'>\n                            <Field name='TEXT' />\n                        </Shadow>\n                    </Value>\n                    <Value name='TELEGRAM_CHAT_ID'>\n                        <Shadow type='text'>\n                            <Field name='TEXT' />\n                        </Shadow>\n                    </Value>\n                    <Value name='TELEGRAM_MESSAGE'>\n                        <Shadow type='text'>\n                            <Field name='TEXT'>abc</Field>\n                        </Shadow>\n                    </Value>\n                </Block>\n            </Category>\n\n            <Category name={localize('Time')} id='time'>\n                <Block type='epoch' />\n                <Block type='timeout' />\n                <Block type='tick_delay' />\n                <Block type='totimestamp'>\n                    <Value name='DATETIME'>\n                        <Shadow type='text'>\n                            <Field name='TEXT'>yyyy-mm-dd hh:mm:ss</Field>\n                        </Shadow>\n                    </Value>\n                </Block>\n                <Block type='todatetime'>\n                    <Value name='TIMESTAMP'>\n                        <Shadow type='math_number'>\n                            <Field name='NUM'>0</Field>\n                        </Shadow>\n                    </Value>\n                </Block>\n            </Category>\n\n            <Category name={localize('Math')} id='math'>\n                <Block type='math_number' />\n                <Block type='math_arithmetic'>\n                    <Field name='OP'>ADD</Field>\n                    <Value name='A'>\n                        <Shadow type='math_number'>\n                            <Field name='NUM'>1</Field>\n                        </Shadow>\n                    </Value>\n                    <Value name='B'>\n                        <Shadow type='math_number'>\n                            <Field name='NUM'>1</Field>\n                        </Shadow>\n                    </Value>\n                </Block>\n                <Block type='math_single'>\n                    <Field name='OP'>ROOT</Field>\n                    <Value name='NUM'>\n                        <Shadow type='math_number'>\n                            <Field name='NUM'>9</Field>\n                        </Shadow>\n                    </Value>\n                </Block>\n                <Block type='math_trig'>\n                    <Field name='OP'>SIN</Field>\n                    <Value name='NUM'>\n                        <Shadow type='math_number'>\n                            <Field name='NUM'>45</Field>\n                        </Shadow>\n                    </Value>\n                </Block>\n                <Block type='math_constant' />\n                <Block type='math_number_property'>\n                    <Mutation divisor_input='false' />\n                    <Field name='PROPERTY'>EVEN</Field>\n                    <Value name='NUMBER_TO_CHECK'>\n                        <Shadow type='math_number'>\n                            <Field name='NUM'>0</Field>\n                        </Shadow>\n                    </Value>\n                </Block>\n                <Block type='math_change'>\n                    <Field name='VAR' variabletype=''>\n                        item\n                    </Field>\n                    <Value name='DELTA'>\n                        <Shadow type='math_number'>\n                            <Field name='NUM'>1</Field>\n                        </Shadow>\n                    </Value>\n                </Block>\n                <Block type='math_on_list' />\n                <Block type='math_round'>\n                    <Field name='OP'>ROUND</Field>\n                    <Value name='NUM'>\n                        <Shadow type='math_number'>\n                            <Field name='NUM'>3.1</Field>\n                        </Shadow>\n                    </Value>\n                </Block>\n                <Block type='math_modulo'>\n                    <Value name='DIVIDEND'>\n                        <Shadow type='math_number'>\n                            <Field name='NUM'>64</Field>\n                        </Shadow>\n                    </Value>\n                    <Value name='DIVISOR'>\n                        <Shadow type='math_number'>\n                            <Field name='NUM'>10</Field>\n                        </Shadow>\n                    </Value>\n                </Block>\n                <Block type='math_constrain'>\n                    <Value name='Value'>\n                        <Shadow type='math_number'>\n                            <Field name='NUM'>50</Field>\n                        </Shadow>\n                    </Value>\n                    <Value name='LOW'>\n                        <Shadow type='math_number'>\n                            <Field name='NUM'>1</Field>\n                        </Shadow>\n                    </Value>\n                    <Value name='HIGH'>\n                        <Shadow type='math_number'>\n                            <Field name='NUM'>100</Field>\n                        </Shadow>\n                    </Value>\n                </Block>\n                <Block type='math_random_int'>\n                    <Value name='FROM'>\n                        <Shadow type='math_number'>\n                            <Field name='NUM'>1</Field>\n                        </Shadow>\n                    </Value>\n                    <Value name='TO'>\n                        <Shadow type='math_number'>\n                            <Field name='NUM'>100</Field>\n                        </Shadow>\n                    </Value>\n                </Block>\n                <Block type='math_random_float' />\n            </Category>\n\n            <Category name={localize('Text')} id='text'>\n                <Block type='text'>\n                    <Field name='TEXT'>abc</Field>\n                </Block>\n                <Block type='text_join'>\n                    <Field name='VARIABLE' variabletype=''>\n                        text\n                    </Field>\n                    <Statement name='STACK'>\n                        <Block type='text_statement' movable='false'>\n                            <Value name='TEXT'>\n                                <Shadow type='text'>\n                                    <Field name='TEXT'>abc</Field>\n                                </Shadow>\n                            </Value>\n                        </Block>\n                    </Statement>\n                </Block>\n                <Block type='text_append'>\n                    <Field name='VAR' variabletype=''>\n                        text\n                    </Field>\n                    <Value name='TEXT'>\n                        <Shadow type='text'>\n                            <Field name='TEXT'>abc</Field>\n                        </Shadow>\n                    </Value>\n                </Block>\n                <Block type='text_length'>\n                    <Value name='Value'>\n                        <Shadow type='text'>\n                            <Field name='TEXT'>abc</Field>\n                        </Shadow>\n                    </Value>\n                </Block>\n                <Block type='text_isEmpty'>\n                    <Value name='Value'>\n                        <Shadow type='text'>\n                            <Field name='TEXT' />\n                        </Shadow>\n                    </Value>\n                </Block>\n                <Block type='text_indexOf'>\n                    <Field name='END'>FIRST</Field>\n                    <Value name='Value'>\n                        <Block type='variables_get'>\n                            <Field name='VAR' variabletype=''>\n                                text\n                            </Field>\n                        </Block>\n                    </Value>\n                    <Value name='FIND'>\n                        <Shadow type='text'>\n                            <Field name='TEXT'>abc</Field>\n                        </Shadow>\n                    </Value>\n                </Block>\n                <Block type='text_charAt'>\n                    <Mutation at='true' />\n                    <Field name='WHERE'>FROM_START</Field>\n                    <Value name='Value'>\n                        <Block type='variables_get'>\n                            <Field name='VAR' variabletype=''>\n                                item\n                            </Field>\n                        </Block>\n                    </Value>\n                    <Value name='AT'>\n                        <Shadow type='math_number_positive'>\n                            <Field name='NUM'>1</Field>\n                        </Shadow>\n                    </Value>\n                </Block>\n                <Block type='text_getSubstring'>\n                    <Mutation at1='true' at2='true' />\n                    <Field name='WHERE1'>FROM_START</Field>\n                    <Field name='WHERE2'>FROM_START</Field>\n                    <Value name='STRING'>\n                        <Block type='variables_get'>\n                            <Field name='VAR' variabletype=''>\n                                text\n                            </Field>\n                        </Block>\n                    </Value>\n                    <Value name='AT1'>\n                        <Shadow type='math_number_positive'>\n                            <Field name='NUM'>0</Field>\n                        </Shadow>\n                    </Value>\n                    <Value name='AT2'>\n                        <Shadow type='math_number_positive'>\n                            <Field name='NUM'>2</Field>\n                        </Shadow>\n                    </Value>\n                </Block>\n                <Block type='text_changeCase'>\n                    <Field name='CASE'>UPPERCASE</Field>\n                    <Value name='TEXT'>\n                        <Shadow type='text'>\n                            <Field name='TEXT'>abc</Field>\n                        </Shadow>\n                    </Value>\n                </Block>\n                <Block type='text_trim'>\n                    <Field name='MODE'>BOTH</Field>\n                    <Value name='TEXT'>\n                        <Shadow type='text'>\n                            <Field name='TEXT'>abc</Field>\n                        </Shadow>\n                    </Value>\n                </Block>\n            </Category>\n\n            <Category name={localize('Logic')} id='logic'>\n                <Block type='controls_if' />\n                <Block type='logic_compare' />\n                <Block type='logic_operation' />\n                <Block type='logic_negate' />\n                <Block type='logic_boolean' />\n                <Block type='logic_null' />\n                <Block type='logic_ternary' />\n            </Category>\n\n            <Category name={localize('Lists')} id='lists'>\n                <Block type='lists_create_with'>\n                    <Field name='VARIABLE' variabletype=''>\n                        list\n                    </Field>\n                    <Statement name='STACK'>\n                        <Block type='lists_statement' movable='false'>\n                            <Next>\n                                <Block type='lists_statement' movable='false' />\n                            </Next>\n                        </Block>\n                    </Statement>\n                </Block>\n                <Block type='lists_repeat'>\n                    <Value name='NUM'>\n                        <Shadow type='math_number'>\n                            <Field name='NUM'>5</Field>\n                        </Shadow>\n                    </Value>\n                </Block>\n                <Block type='lists_length' />\n                <Block type='lists_isEmpty' />\n                <Block type='lists_indexOf' />\n                <Block type='lists_getIndex' />\n                <Block type='lists_setIndex' />\n                <Block type='lists_getSublist' />\n                <Block type='lists_split'>\n                    <Mutation mode='SPLIT' />\n                    <Field name='MODE'>SPLIT</Field>\n                    <Value name='DELIM'>\n                        <Shadow type='text'>\n                            <Field name='TEXT'>,</Field>\n                        </Shadow>\n                    </Value>\n                </Block>\n                <Block type='lists_sort' />\n            </Category>\n\n            <Category name={localize('Loops')} id='loops'>\n                <Block type='controls_repeat' />\n                <Block type='controls_repeat_ext' />\n                <Block type='controls_whileUntil' />\n                <Block type='controls_for' />\n                <Block type='controls_forEach' />\n                <Block type='controls_flow_statements' />\n            </Category>\n\n            <Category name={localize('Miscellaneous')} id='misc'>\n                <Block type='loader' />\n                <Block type='block_holder' />\n                <Block type='console'>\n                    <Value name='MESSAGE'>\n                        <Shadow type='text'>\n                            <Field name='TEXT'>abc</Field>\n                        </Shadow>\n                    </Value>\n                </Block>\n            </Category>\n        </Category>\n\n        <Examples id='examples'>\n            <Example id='sell_available'>\n                <Block type='during_purchase'>\n                    <Statement name='DURING_PURCHASE_STACK'>\n                        <Block type='controls_if'>\n                            <Value name='IF0'>\n                                <Block type='check_sell' />\n                            </Value>\n                            <Statement name='DO0'>\n                                <Block type='sell_at_market' />\n                            </Statement>\n                        </Block>\n                    </Statement>\n                </Block>\n            </Example>\n            <Example id='trade_again'>\n                <Block type='after_purchase'>\n                    <Statement name='AFTERPURCHASE_STACK'>\n                        <Block type='controls_if'>\n                            <Value name='IF0'>\n                                <Block type='logic_compare'>\n                                    <Field name='OP'>EQ</Field>\n                                    <Value name='A'>\n                                        <Block type='total_profit' />\n                                    </Value>\n                                    <Value name='B'>\n                                        <Block type='variables_get'>\n                                            <Field name='VAR' variabletype=''>\n                                                target_profit\n                                            </Field>\n                                        </Block>\n                                    </Value>\n                                </Block>\n                            </Value>\n                        </Block>\n                    </Statement>\n                </Block>\n            </Example>\n            <Example id='sma_block_example'>\n                <Block type='sma_statement'>\n                    <Field name='VARIABLE' variabletype=''>\n                        sma\n                    </Field>\n                    <Statement name='STATEMENT'>\n                        <Block type='input_list' deletable='false' movable='false'>\n                            <Value name='INPUT_LIST'>\n                                <Block type='ohlc_values'>\n                                    <Field name='OHLCFIELD_LIST'>open</Field>\n                                    <Field name='CANDLEINTERVAL_LIST'>default</Field>\n                                </Block>\n                            </Value>\n                            <Next>\n                                <Block type='period' deletable='false' movable='false'>\n                                    <Value name='PERIOD'>\n                                        <Shadow type='math_number'>\n                                            <Field name='NUM'>10</Field>\n                                        </Shadow>\n                                    </Value>\n                                </Block>\n                            </Next>\n                        </Block>\n                    </Statement>\n                </Block>\n            </Example>\n            <Example id='sma_array'>\n                <Block type='smaa_statement'>\n                    <Field name='VARIABLE' variabletype=''>\n                        smaa\n                    </Field>\n                    <Statement name='STATEMENT'>\n                        <Block type='input_list' deletable='false' movable='false'>\n                            <Next>\n                                <Block type='period' deletable='false' movable='false'>\n                                    <Value name='PERIOD'>\n                                        <Shadow type='math_number'>\n                                            <Field name='NUM'>10</Field>\n                                        </Shadow>\n                                    </Value>\n                                </Block>\n                            </Next>\n                        </Block>\n                    </Statement>\n                </Block>\n            </Example>\n            <Example id='sma_block_example_1'>\n                <Block type='sma_statement'>\n                    <Field name='VARIABLE' variabletype=''>\n                        sma\n                    </Field>\n                    <Statement name='STATEMENT'>\n                        <Block type='input_list' deletable='false' movable='false'>\n                            <Value name='INPUT_LIST'>\n                                <Block type='ticks' />\n                            </Value>\n                            <Next>\n                                <Block type='period' deletable='false' movable='false'>\n                                    <Value name='PERIOD'>\n                                        <Shadow type='math_number'>\n                                            <Field name='NUM'>10</Field>\n                                        </Shadow>\n                                    </Value>\n                                </Block>\n                            </Next>\n                        </Block>\n                    </Statement>\n                </Block>\n            </Example>\n            <Example id='in_candle_list_read'>\n                <Block type='variables_set'>\n                    <Field name='VAR' variabletype=''>\n                        op\n                    </Field>\n                    <Value name='VALUE'>\n                        <Block type='read_ohlc'>\n                            <Field name='OHLCFIELD_LIST'>open</Field>\n                            <Field name='CANDLEINTERVAL_LIST'>default</Field>\n                            <Value name='CANDLEINDEX'>\n                                <Shadow type='math_number'>\n                                    <Field name='NUM'>1</Field>\n                                </Shadow>\n                            </Value>\n                        </Block>\n                    </Value>\n                </Block>\n            </Example>\n            <Example id='read_candle_value'>\n                <Block type='variables_set'>\n                    <Field name='VAR' variabletype=''>\n                        op\n                    </Field>\n                    <Value name='VALUE'>\n                        <Block type='read_ohlc_obj'>\n                            <Field name='OHLCFIELD_LIST'>open</Field>\n                            <Value name='OHLCOBJ'>\n                                <Block type='read_ohlc'>\n                                    <Field name='OHLCFIELD_LIST'>open</Field>\n                                    <Field name='CANDLEINTERVAL_LIST'>default</Field>\n                                    <Value name='CANDLEINDEX'>\n                                        <Shadow type='math_number'>\n                                            <Field name='NUM'>1</Field>\n                                        </Shadow>\n                                    </Value>\n                                </Block>\n                            </Value>\n                        </Block>\n                    </Value>\n                </Block>\n            </Example>\n            <Example id='candle_list'>\n                <Block type='variables_set'>\n                    <Field name='VAR' variabletype=''>\n                        candle_list\n                    </Field>\n                    <Value name='VALUE'>\n                        <Block type='ohlc_values'>\n                            <Field name='OHLCFIELD_LIST'>open</Field>\n                            <Field name='CANDLEINTERVAL_LIST'>default</Field>\n                        </Block>\n                    </Value>\n                </Block>\n            </Example>\n            <Example id='candle_list_1'>\n                <Block type='variables_set'>\n                    <Field name='VAR' variabletype=''>\n                        cl\n                    </Field>\n                    <Value name='VALUE'>\n                        <Block type='ohlc_values_in_list'>\n                            <Field name='OHLCFIELD_LIST'>open</Field>\n                            <Value name='OHLCLIST'>\n                                <Block type='ohlc'>\n                                    <Field name='CANDLEINTERVAL_LIST'>default</Field>\n                                </Block>\n                            </Value>\n                        </Block>\n                    </Value>\n                </Block>\n            </Example>\n            <Example id='get_candle'>\n                <Block type='variables_set'>\n                    <Field name='VAR' variabletype=''>\n                        candle_open_price\n                    </Field>\n                    <Value name='VALUE'>\n                        <Block type='read_ohlc_obj'>\n                            <Field name='OHLCFIELD_LIST'>epoch</Field>\n                            <Value name='OHLCOBJ'>\n                                <Block type='get_ohlc'>\n                                    <Field name='CANDLEINTERVAL_LIST'>default</Field>\n                                    <Value name='CANDLEINDEX'>\n                                        <Shadow type='math_number'>\n                                            <Field name='NUM'>2</Field>\n                                        </Shadow>\n                                    </Value>\n                                </Block>\n                            </Value>\n                        </Block>\n                    </Value>\n                </Block>\n            </Example>\n            <Example id='check_result'>\n                <Block type='after_purchase'>\n                    <Statement name='AFTERPURCHASE_STACK'>\n                        <Block type='controls_if'>\n                            <Value name='IF0'>\n                                <Block type='contract_check_result'>\n                                    <Field name='CHECK_RESULT'>win</Field>\n                                </Block>\n                            </Value>\n                            <Statement name='DO0'>\n                                <Block type='trade_again' />\n                            </Statement>\n                        </Block>\n                    </Statement>\n                </Block>\n            </Example>\n            <Example id='sell_pl'>\n                <Block type='during_purchase'>\n                    <Statement name='DURING_PURCHASE_STACK'>\n                        <Block type='controls_if'>\n                            <Value name='IF0'>\n                                <Block type='check_sell' />\n                            </Value>\n                            <Statement name='DO0'>\n                                <Block type='controls_if'>\n                                    <Value name='IF0'>\n                                        <Block type='logic_compare'>\n                                            <Field name='OP'>EQ</Field>\n                                            <Value name='A'>\n                                                <Block type='sell_price' />\n                                            </Value>\n                                            <Value name='B'>\n                                                <Block type='variables_get'>\n                                                    <Field name='VAR' variabletype=''>\n                                                        stake\n                                                    </Field>\n                                                </Block>\n                                            </Value>\n                                        </Block>\n                                    </Value>\n                                    <Statement name='DO0'>\n                                        <Block type='sell_at_market' />\n                                    </Statement>\n                                </Block>\n                            </Statement>\n                        </Block>\n                    </Statement>\n                </Block>\n            </Example>\n            <Example id='if-return'>\n                <Block type='procedures_defreturn'>\n                    <Mutation>\n                        <Arg name='x' />\n                    </Mutation>\n                    <Field name='NAME'>do something</Field>\n                    <Statement name='STACK'>\n                        <Block type='procedures_ifreturn'>\n                            <Mutation value='1' />\n                            <Value name='CONDITION'>\n                                <Block type='logic_compare'>\n                                    <Field name='OP'>EQ</Field>\n                                    <Value name='A'>\n                                        <Block type='variables_get'>\n                                            <Field name='VAR' variabletype=''>\n                                                x\n                                            </Field>\n                                        </Block>\n                                    </Value>\n                                    <Value name='B'>\n                                        <Block type='variables_get'>\n                                            <Field name='VAR' variabletype=''>\n                                                x\n                                            </Field>\n                                        </Block>\n                                    </Value>\n                                </Block>\n                            </Value>\n                            <Value name='VALUE'>\n                                <Block type='text'>\n                                    <Field name='TEXT'>x must be positive or zero</Field>\n                                </Block>\n                            </Value>\n                        </Block>\n                    </Statement>\n                    <Value name='RETURN'>\n                        <Block type='math_single'>\n                            <Field name='OP'>ROOT</Field>\n                            <Value name='NUM'>\n                                <Shadow type='math_number'>\n                                    <Field name='NUM'>9</Field>\n                                </Shadow>\n                                <Block type='variables_get'>\n                                    <Field name='VAR' variabletype=''>\n                                        x\n                                    </Field>\n                                </Block>\n                            </Value>\n                        </Block>\n                    </Value>\n                </Block>\n            </Example>\n            <Example id='notify_telegram'>\n                <Block type='notify_telegram'>\n                    <Value name='TELEGRAM_ACCESS_TOKEN'>\n                        <Shadow type='text'>\n                            <Field name='TEXT' />\n                        </Shadow>\n                        <Block type='variables_get'>\n                            <Field name='VAR' variabletype=''>\n                                access_token\n                            </Field>\n                        </Block>\n                    </Value>\n                    <Value name='TELEGRAM_CHAT_ID'>\n                        <Shadow type='text'>\n                            <Field name='TEXT' />\n                        </Shadow>\n                        <Block type='variables_get'>\n                            <Field name='VAR' variabletype=''>\n                                chat_id\n                            </Field>\n                        </Block>\n                    </Value>\n                    <Value name='TELEGRAM_MESSAGE'>\n                        <Shadow type='text'>\n                            <Field name='TEXT'>Enjoy!</Field>\n                        </Shadow>\n                    </Value>\n                </Block>\n            </Example>\n            <Example id='epoch'>\n                <Block type='variables_set'>\n                    <Field name='VAR' variabletype=''>\n                        candle\n                    </Field>\n                    <Value name='VALUE'>\n                        <Block type='read_ohlc'>\n                            <Field name='OHLCFIELD_LIST'>open</Field>\n                            <Field name='CANDLEINTERVAL_LIST'>default</Field>\n                            <Value name='CANDLEINDEX'>\n                                <Shadow type='math_number'>\n                                    <Field name='NUM'>1</Field>\n                                </Shadow>\n                            </Value>\n                        </Block>\n                    </Value>\n                    <Next>\n                        <Block type='variables_set'>\n                            <Field name='VAR' variabletype=''>\n                                Open Time\n                            </Field>\n                            <Value name='VALUE'>\n                                <Block type='read_ohlc_obj'>\n                                    <Field name='OHLCFIELD_LIST'>epoch</Field>\n                                    <Value name='OHLCOBJ'>\n                                        <Block type='variables_get'>\n                                            <Field name='VAR' variabletype=''>\n                                                candle\n                                            </Field>\n                                        </Block>\n                                    </Value>\n                                </Block>\n                            </Value>\n                            <Next>\n                                <Block type='variables_set'>\n                                    <Field name='VAR' variabletype=''>\n                                        Open Time\n                                    </Field>\n                                    <Value name='VALUE'>\n                                        <Block type='math_arithmetic'>\n                                            <Field name='OP'>MINUS</Field>\n                                            <Value name='A'>\n                                                <Shadow type='math_number'>\n                                                    <Field name='NUM'>1</Field>\n                                                </Shadow>\n                                                <Block type='epoch' />\n                                            </Value>\n                                            <Value name='B'>\n                                                <Shadow type='math_number'>\n                                                    <Field name='NUM'>1</Field>\n                                                </Shadow>\n                                                <Block type='variables_get'>\n                                                    <Field name='VAR' variabletype=''>\n                                                        Open Time\n                                                    </Field>\n                                                </Block>\n                                            </Value>\n                                        </Block>\n                                    </Value>\n                                    <Next>\n                                        <Block type='controls_if'>\n                                            <Value name='IF0'>\n                                                <Block type='logic_compare'>\n                                                    <Field name='OP'>GTE</Field>\n                                                    <Value name='A'>\n                                                        <Block type='variables_get'>\n                                                            <Field name='VAR' variabletype=''>\n                                                                Time Since Candle Opened\n                                                            </Field>\n                                                        </Block>\n                                                    </Value>\n                                                    <Value name='B'>\n                                                        <Block type='math_number'>\n                                                            <Field name='NUM'>30</Field>\n                                                        </Block>\n                                                    </Value>\n                                                </Block>\n                                            </Value>\n                                        </Block>\n                                    </Next>\n                                </Block>\n                            </Next>\n                        </Block>\n                    </Next>\n                </Block>\n            </Example>\n            <Example id='totimestamp'>\n                <Block type='before_purchase'>\n                    <Statement name='BEFOREPURCHASE_STACK'>\n                        <Block type='controls_if'>\n                            <Value name='IF0'>\n                                <Block type='logic_compare'>\n                                    <Field name='OP'>EQ</Field>\n                                    <Value name='A'>\n                                        <Block type='epoch' />\n                                    </Value>\n                                    <Value name='B'>\n                                        <Block type='totimestamp'>\n                                            <Value name='DATETIME'>\n                                                <Shadow type='text'>\n                                                    <Field name='TEXT'>1957-08-31 00:00:00</Field>\n                                                </Shadow>\n                                            </Value>\n                                        </Block>\n                                    </Value>\n                                </Block>\n                            </Value>\n                            <Statement name='DO0'>\n                                <Block type='purchase'>\n                                    <Field name='PURCHASE_LIST'>CALL</Field>\n                                </Block>\n                            </Statement>\n                        </Block>\n                    </Statement>\n                </Block>\n            </Example>\n            <Example id='todatetime'>\n                <Block type='notify'>\n                    <Field name='NOTIFICATION_TYPE'>success</Field>\n                    <Field name='NOTIFICATION_SOUND'>silent</Field>\n                    <Value name='MESSAGE'>\n                        <Shadow type='text'>\n                            <Field name='TEXT'>abc</Field>\n                        </Shadow>\n                        <Block type='todatetime'>\n                            <Value name='TIMESTAMP'>\n                                <Shadow type='math_number'>\n                                    <Field name='NUM'>0</Field>\n                                </Shadow>\n                                <Block type='epoch' />\n                            </Value>\n                        </Block>\n                    </Value>\n                </Block>\n            </Example>\n            <Example id='constrain'>\n                <Block type='math_constrain'>\n                    <Value name='VALUE'>\n                        <Block type='math_number'>\n                            <Field name='NUM'>5</Field>\n                        </Block>\n                    </Value>\n                    <Value name='LOW'>\n                        <Shadow type='math_number'>\n                            <Field name='NUM'>10</Field>\n                        </Shadow>\n                    </Value>\n                    <Value name='HIGH'>\n                        <Shadow type='math_number'>\n                            <Field name='NUM'>20</Field>\n                        </Shadow>\n                    </Value>\n                </Block>\n            </Example>\n            <Example id='controls_if'>\n                <Block type='controls_if'>\n                    <Mutation elseif='1' else='1' />\n                    <Value name='IF0'>\n                        <Block type='logic_compare'>\n                            <Field name='OP'>EQ</Field>\n                            <Value name='A'>\n                                <Block type='variables_get'>\n                                    <Field name='VAR' variabletype=''>\n                                        var1\n                                    </Field>\n                                </Block>\n                            </Value>\n                            <Value name='B'>\n                                <Block type='variables_get'>\n                                    <Field name='VAR' variabletype=''>\n                                        var2\n                                    </Field>\n                                </Block>\n                            </Value>\n                        </Block>\n                    </Value>\n                    <Value name='IF1'>\n                        <Block type='logic_compare'>\n                            <Field name='OP'>EQ</Field>\n                            <Value name='A'>\n                                <Block type='variables_get'>\n                                    <Field name='VAR' variabletype=''>\n                                        var3\n                                    </Field>\n                                </Block>\n                            </Value>\n                            <Value name='B'>\n                                <Block type='variables_get'>\n                                    <Field name='VAR' variabletype=''>\n                                        var4\n                                    </Field>\n                                </Block>\n                            </Value>\n                        </Block>\n                    </Value>\n                </Block>\n            </Example>\n            <Example id='compare_logic'>\n                <Block type='logic_compare'>\n                    <Field name='OP'>EQ</Field>\n                </Block>\n            </Example>\n            <Example id='compare_logic_1'>\n                <Block type='logic_operation'>\n                    <Field name='OP'>AND</Field>\n                </Block>\n            </Example>\n            <Example id='repeat_while'>\n                <Block type='variables_set'>\n                    <Field name='VAR' variabletype=''>\n                        x\n                    </Field>\n                    <Value name='VALUE'>\n                        <Block type='math_number'>\n                            <Field name='NUM'>0</Field>\n                        </Block>\n                    </Value>\n                    <Next>\n                        <Block type='controls_whileUntil'>\n                            <Field name='MODE'>WHILE</Field>\n                            <Value name='BOOL'>\n                                <Block type='logic_compare'>\n                                    <Field name='OP'>LTE</Field>\n                                    <Value name='A'>\n                                        <Block type='variables_get'>\n                                            <Field name='VAR' variabletype=''>\n                                                x\n                                            </Field>\n                                        </Block>\n                                    </Value>\n                                    <Value name='B'>\n                                        <Block type='math_number'>\n                                            <Field name='NUM'>10</Field>\n                                        </Block>\n                                    </Value>\n                                </Block>\n                            </Value>\n                            <Statement name='DO'>\n                                <Block type='math_change'>\n                                    <Field name='VAR' variabletype=''>\n                                        x\n                                    </Field>\n                                    <Value name='DELTA'>\n                                        <Shadow type='math_number'>\n                                            <Field name='NUM'>1</Field>\n                                        </Shadow>\n                                    </Value>\n                                    <Next>\n                                        <Block type='notify'>\n                                            <Field name='NOTIFICATION_TYPE'>success</Field>\n                                            <Field name='NOTIFICATION_SOUND'>silent</Field>\n                                            <Value name='MESSAGE'>\n                                                <Shadow type='text'>\n                                                    <Field name='TEXT'>abc</Field>\n                                                </Shadow>\n                                                <Block type='variables_get'>\n                                                    <Field name='VAR' variabletype=''>\n                                                        x\n                                                    </Field>\n                                                </Block>\n                                            </Value>\n                                        </Block>\n                                    </Next>\n                                </Block>\n                            </Statement>\n                        </Block>\n                    </Next>\n                </Block>\n            </Example>\n            <Example id='repeat_until'>\n                <Block type='variables_set'>\n                    <Field name='VAR' variabletype=''>\n                        x\n                    </Field>\n                    <Value name='VALUE'>\n                        <Block type='math_number'>\n                            <Field name='NUM'>20</Field>\n                        </Block>\n                    </Value>\n                    <Next>\n                        <Block type='controls_whileUntil'>\n                            <Field name='MODE'>UNTIL</Field>\n                            <Value name='BOOL'>\n                                <Block type='logic_compare'>\n                                    <Field name='OP'>EQ</Field>\n                                    <Value name='A'>\n                                        <Block type='variables_get'>\n                                            <Field name='VAR' variabletype=''>\n                                                x\n                                            </Field>\n                                        </Block>\n                                    </Value>\n                                    <Value name='B'>\n                                        <Block type='math_number'>\n                                            <Field name='NUM'>10</Field>\n                                        </Block>\n                                    </Value>\n                                </Block>\n                            </Value>\n                            <Statement name='DO'>\n                                <Block type='math_change'>\n                                    <Field name='VAR' variabletype=''>\n                                        x\n                                    </Field>\n                                    <Value name='DELTA'>\n                                        <Shadow type='math_number'>\n                                            <Field name='NUM'>-1</Field>\n                                        </Shadow>\n                                    </Value>\n                                    <Next>\n                                        <Block type='notify'>\n                                            <Field name='NOTIFICATION_TYPE'>success</Field>\n                                            <Field name='NOTIFICATION_SOUND'>silent</Field>\n                                            <Value name='MESSAGE'>\n                                                <Shadow type='text'>\n                                                    <Field name='TEXT'>abc</Field>\n                                                </Shadow>\n                                                <Block type='variables_get'>\n                                                    <Field name='VAR' variabletype=''>\n                                                        x\n                                                    </Field>\n                                                </Block>\n                                            </Value>\n                                        </Block>\n                                    </Next>\n                                </Block>\n                            </Statement>\n                        </Block>\n                    </Next>\n                </Block>\n            </Example>\n            <Example id='controls_for'>\n                <Block type='controls_for'>\n                    <Field name='VAR' variabletype=''>\n                        i\n                    </Field>\n                    <Value name='FROM'>\n                        <Block type='math_number'>\n                            <Field name='NUM'>0</Field>\n                        </Block>\n                    </Value>\n                    <Value name='TO'>\n                        <Block type='math_number'>\n                            <Field name='NUM'>10</Field>\n                        </Block>\n                    </Value>\n                    <Value name='BY'>\n                        <Block type='math_number'>\n                            <Field name='NUM'>2</Field>\n                        </Block>\n                    </Value>\n                    <Statement name='DO'>\n                        <Block type='notify'>\n                            <Field name='NOTIFICATION_TYPE'>success</Field>\n                            <Field name='NOTIFICATION_SOUND'>silent</Field>\n                            <Value name='MESSAGE'>\n                                <Shadow type='text'>\n                                    <Field name='TEXT'>abc</Field>\n                                </Shadow>\n                                <Block type='variables_get'>\n                                    <Field name='VAR' variabletype=''>\n                                        i\n                                    </Field>\n                                </Block>\n                            </Value>\n                        </Block>\n                    </Statement>\n                </Block>\n            </Example>\n            <Example id='controls_forEach'>\n                <Block type='lists_create_with'>\n                    <Field name='VARIABLE'>list</Field>\n                    <Statement name='STACK'>\n                        <Block type='lists_statement'>\n                            <Value name='VALUE'>\n                                <Block type='variables_get'>\n                                    <Field name='VAR' variabletype=''>\n                                        item1\n                                    </Field>\n                                </Block>\n                            </Value>\n                            <Next>\n                                <Block type='lists_statement'>\n                                    <Value name='VALUE'>\n                                        <Block type='variables_get'>\n                                            <Field name='VAR' variabletype=''>\n                                                item2\n                                            </Field>\n                                        </Block>\n                                    </Value>\n                                    <Next>\n                                        <Block type='lists_statement'>\n                                            <Value name='VALUE'>\n                                                <Block type='variables_get'>\n                                                    <Field name='VAR' variabletype=''>\n                                                        item3\n                                                    </Field>\n                                                </Block>\n                                            </Value>\n                                        </Block>\n                                    </Next>\n                                </Block>\n                            </Next>\n                        </Block>\n                    </Statement>\n                    <Next>\n                        <Block type='controls_forEach'>\n                            <Field name='VAR' variabletype=''>\n                                i\n                            </Field>\n                            <Value name='LIST'>\n                                <Block type='variables_get'>\n                                    <Field name='VAR' variabletype=''>\n                                        list\n                                    </Field>\n                                </Block>\n                            </Value>\n                            <Statement name='DO'>\n                                <Block type='notify'>\n                                    <Field name='NOTIFICATION_TYPE'>success</Field>\n                                    <Field name='NOTIFICATION_SOUND'>silent</Field>\n                                    <Value name='MESSAGE'>\n                                        <Shadow type='text'>\n                                            <Field name='TEXT'>abc</Field>\n                                        </Shadow>\n                                        <Block type='variables_get'>\n                                            <Field name='VAR' variabletype=''>\n                                                i\n                                            </Field>\n                                        </Block>\n                                    </Value>\n                                </Block>\n                            </Statement>\n                        </Block>\n                    </Next>\n                </Block>\n            </Example>\n            <Example id='break_out'>\n                <Block type='variables_set'>\n                    <Field name='VAR' variabletype=''>\n                        x\n                    </Field>\n                    <Value name='VALUE'>\n                        <Block type='logic_boolean'>\n                            <Field name='BOOL'>TRUE</Field>\n                        </Block>\n                    </Value>\n                    <Next>\n                        <Block type='controls_repeat'>\n                            <Field name='TIMES'>10</Field>\n                            <Statement name='DO'>\n                                <Block type='controls_if'>\n                                    <Value name='IF0'>\n                                        <Block type='logic_negate'>\n                                            <Value name='BOOL'>\n                                                <Block type='variables_get'>\n                                                    <Field name='VAR' variabletype=''>\n                                                        x\n                                                    </Field>\n                                                </Block>\n                                            </Value>\n                                        </Block>\n                                    </Value>\n                                    <Statement name='DO0'>\n                                        <Block type='controls_flow_statements'>\n                                            <Field name='FLOW'>BREAK</Field>\n                                        </Block>\n                                    </Statement>\n                                    <Next>\n                                        <Block type='notify'>\n                                            <Field name='NOTIFICATION_TYPE'>success</Field>\n                                            <Field name='NOTIFICATION_SOUND'>silent</Field>\n                                            <Value name='MESSAGE'>\n                                                <Shadow type='text'>\n                                                    <Field name='TEXT'>abc</Field>\n                                                </Shadow>\n                                            </Value>\n                                        </Block>\n                                    </Next>\n                                </Block>\n                            </Statement>\n                        </Block>\n                    </Next>\n                </Block>\n            </Example>\n            <Example id='continue'>\n                <Block type='variables_set'>\n                    <Field name='VAR' variabletype=''>\n                        x\n                    </Field>\n                    <Value name='VALUE'>\n                        <Block type='logic_boolean'>\n                            <Field name='BOOL'>FALSE</Field>\n                        </Block>\n                    </Value>\n                    <Next>\n                        <Block type='controls_repeat'>\n                            <Field name='TIMES'>10</Field>\n                            <Statement name='DO'>\n                                <Block type='controls_if'>\n                                    <Value name='IF0'>\n                                        <Block type='logic_negate'>\n                                            <Value name='BOOL'>\n                                                <Block type='variables_get'>\n                                                    <Field name='VAR' variabletype=''>\n                                                        x\n                                                    </Field>\n                                                </Block>\n                                            </Value>\n                                        </Block>\n                                    </Value>\n                                    <Statement name='DO0'>\n                                        <Block type='variables_set'>\n                                            <Field name='VAR' variabletype=''>\n                                                x\n                                            </Field>\n                                            <Value name='VALUE'>\n                                                <Block type='logic_boolean'>\n                                                    <Field name='BOOL'>TRUE</Field>\n                                                </Block>\n                                            </Value>\n                                            <Next>\n                                                <Block type='controls_flow_statements'>\n                                                    <Field name='FLOW'>CONTINUE</Field>\n                                                </Block>\n                                            </Next>\n                                        </Block>\n                                    </Statement>\n                                    <Next>\n                                        <Block type='notify'>\n                                            <Field name='NOTIFICATION_TYPE'>success</Field>\n                                            <Field name='NOTIFICATION_SOUND'>silent</Field>\n                                            <Value name='MESSAGE'>\n                                                <Shadow type='text'>\n                                                    <Field name='TEXT'>abc</Field>\n                                                </Shadow>\n                                            </Value>\n                                        </Block>\n                                    </Next>\n                                </Block>\n                            </Statement>\n                        </Block>\n                    </Next>\n                </Block>\n            </Example>\n        </Examples>\n    </Xml>\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Icon, Text } from '@deriv/components';\nimport { observer, useStore } from '@deriv/stores';\nimport { localize } from '@deriv/translations';\nimport { rudderStackSendOpenEvent } from '../../../analytics/rudderstack-common-events';\nimport { useDBotStore } from '../../../stores/useDBotStore';\nimport ToolbarButton from '../toolbar/toolbar-button';\nimport SearchBox from './search-box';\nimport { ToolboxItems } from './toolbox-items';\n\nconst Toolbox = observer(() => {\n    const { ui } = useStore();\n    const { is_desktop } = ui;\n    const { toolbox, flyout, quick_strategy } = useDBotStore();\n    const {\n        hasSubCategory,\n        is_search_loading,\n        onMount,\n        onSearch,\n        onSearchBlur,\n        onSearchClear,\n        onSearchKeyUp,\n        onToolboxItemClick,\n        onToolboxItemExpand,\n        onUnmount,\n        sub_category_index,\n        toolbox_dom,\n    } = toolbox;\n\n    const { setFormVisibility } = quick_strategy;\n    const { setVisibility, selected_category } = flyout;\n\n    const toolbox_ref = React.useRef(ToolboxItems);\n    const [is_open, setOpen] = React.useState(true);\n\n    React.useEffect(() => {\n        onMount(toolbox_ref);\n        return () => onUnmount();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const handleQuickStrategyOpen = () => {\n        setFormVisibility(true);\n        // send to rs if quick strategy is opened from bot builder (desktop)\n        rudderStackSendOpenEvent({\n            subpage_name: 'bot_builder',\n            subform_source: 'bot_builder',\n            subform_name: 'quick_strategy',\n        });\n    };\n\n    if (is_desktop) {\n        return (\n            <div className='db-toolbox' data-testid='dashboard__toolbox'>\n                <ToolbarButton\n                    popover_message={localize('Click here to start building your Deriv Bot.')}\n                    button_id='db-toolbar__get-started-button'\n                    button_classname='toolbar__btn toolbar__btn--icon toolbar__btn--start'\n                    buttonOnClick={handleQuickStrategyOpen}\n                    button_text={localize('Quick strategy')}\n                />\n                <div id='gtm-toolbox' className='db-toolbox__content'>\n                    <div className='db-toolbox__header'>\n                        <div\n                            className='db-toolbox__title'\n                            data-testid='db-toolbox__title'\n                            onClick={() => {\n                                setOpen(!is_open);\n                                setVisibility(false);\n                            }}\n                        >\n                            {localize('Blocks menu')}\n                            <span\n                                className={classNames('db-toolbox__title__chevron', {\n                                    'db-toolbox__title__chevron--active': is_open,\n                                })}\n                            >\n                                <Icon icon='IcChevronDownBold' />\n                            </span>\n                        </div>\n                    </div>\n                    <div\n                        className={classNames('db-toolbox__content-wrapper', { active: is_open })}\n                        data-testid='db-toolbox__content-wrapper'\n                    >\n                        <SearchBox\n                            is_search_loading={is_search_loading}\n                            onSearch={onSearch}\n                            onSearchBlur={onSearchBlur}\n                            onSearchClear={onSearchClear}\n                            onSearchKeyUp={onSearchKeyUp}\n                        />\n                        <div className='db-toolbox__category-menu'>\n                            {toolbox_dom &&\n                                Array.from(toolbox_dom.childNodes as HTMLElement[]).map((category, index) => {\n                                    if (category.tagName.toUpperCase() === 'CATEGORY') {\n                                        const has_sub_category = hasSubCategory(category.children);\n                                        const is_sub_category_open = sub_category_index.includes(index);\n                                        return (\n                                            <div\n                                                key={`db-toolbox__row--${category.getAttribute('id')}`}\n                                                className={classNames('db-toolbox__row', {\n                                                    'db-toolbox__row--active':\n                                                        selected_category?.getAttribute('id') === category?.id,\n                                                })}\n                                            >\n                                                <div\n                                                    className='db-toolbox__item'\n                                                    onClick={() => {\n                                                        // eslint-disable-next-line no-unused-expressions\n                                                        has_sub_category\n                                                            ? onToolboxItemExpand(index)\n                                                            : onToolboxItemClick(category);\n                                                    }}\n                                                >\n                                                    <div className='db-toolbox__category-text'>\n                                                        <div className='db-toolbox__label'>\n                                                            {localize(category.getAttribute('name') as string)}\n                                                        </div>\n                                                        {has_sub_category && (\n                                                            <div\n                                                                className={classNames('db-toolbox__category-arrow', {\n                                                                    'db-toolbox__category-arrow--active':\n                                                                        is_sub_category_open,\n                                                                })}\n                                                            >\n                                                                <Icon icon='IcChevronDownBold' />\n                                                            </div>\n                                                        )}\n                                                    </div>\n                                                </div>\n                                                {has_sub_category &&\n                                                    is_sub_category_open &&\n                                                    (Array.from(category.childNodes) as HTMLElement[]).map(\n                                                        subCategory => {\n                                                            return (\n                                                                <div\n                                                                    key={`db-toolbox__sub-category-row--${subCategory.getAttribute(\n                                                                        'id'\n                                                                    )}`}\n                                                                    className={classNames(\n                                                                        'db-toolbox__sub-category-row',\n                                                                        {\n                                                                            'db-toolbox__sub-category-row--active':\n                                                                                selected_category?.getAttribute(\n                                                                                    'id'\n                                                                                ) === subCategory?.id,\n                                                                        }\n                                                                    )}\n                                                                    onClick={() => {\n                                                                        onToolboxItemClick(subCategory);\n                                                                    }}\n                                                                >\n                                                                    <Text size='xxs'>\n                                                                        {localize(\n                                                                            subCategory.getAttribute('name') as string\n                                                                        )}\n                                                                    </Text>\n                                                                </div>\n                                                            );\n                                                        }\n                                                    )}\n                                            </div>\n                                        );\n                                    }\n                                    return null;\n                                })}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    return null;\n});\n\nexport default Toolbox;\n","import Toolbox from './toolbox';\nimport './toolbox.scss';\n\nexport default Toolbox;\n","import React from 'react';\nimport { observer } from '@deriv/stores';\nimport Flyout from 'Components/flyout';\nimport { useDBotStore } from 'Stores/useDBotStore';\nimport StopBotModal from './stop-bot-modal';\nimport Toolbar from './toolbar';\nimport Toolbox from './toolbox';\nimport './workspace.scss';\n\nconst WorkspaceWrapper = observer(() => {\n    const { blockly_store } = useDBotStore();\n    const { onMount, onUnmount, is_loading } = blockly_store;\n\n    React.useEffect(() => {\n        onMount();\n        return () => {\n            onUnmount();\n        };\n    }, []);\n\n    if (is_loading) return null;\n\n    if (window.Blockly?.derivWorkspace)\n        return (\n            <React.Fragment>\n                <Toolbox />\n                <Toolbar />\n                <Flyout />\n                <StopBotModal />\n            </React.Fragment>\n        );\n\n    return null;\n});\n\nexport default WorkspaceWrapper;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { observer, useStore } from '@deriv/stores';\nimport { localize } from '@deriv/translations';\nimport { botNotification } from 'Components/bot-notification/bot-notification';\nimport { notification_message } from 'Components/bot-notification/bot-notification-utils';\nimport { TBlocklyEvents } from 'Types';\nimport LoadModal from '../../components/load-modal';\nimport { useDBotStore } from '../../stores/useDBotStore';\nimport SaveModal from '../dashboard/bot-list/save-modal/save-modal';\nimport BotBuilderTourHandler from '../tutorials/dbot-tours/bot-builder-tour';\nimport QuickStrategy1 from './quick-strategy';\nimport WorkspaceWrapper from './workspace-wrapper';\n\nconst BotBuilder = observer(() => {\n    const { ui } = useStore();\n    const { dashboard, app, run_panel, toolbar, quick_strategy, blockly_store } = useDBotStore();\n    const { active_tab, active_tour, is_preview_on_popup } = dashboard;\n    const { is_open } = quick_strategy;\n    const { is_running } = run_panel;\n    const { is_loading } = blockly_store;\n    const is_blockly_listener_registered = React.useRef(false);\n    const is_blockly_delete_listener_registered = React.useRef(false);\n    const { is_desktop } = ui;\n    const { onMount, onUnmount } = app;\n    const el_ref = React.useRef<HTMLInputElement | null>(null);\n    let deleted_block_id: null | string = null;\n\n    React.useEffect(() => {\n        onMount();\n        return () => onUnmount();\n    }, [onMount, onUnmount]);\n\n    React.useEffect(() => {\n        const workspace = window.Blockly?.derivWorkspace;\n        if (workspace && is_running && !is_blockly_listener_registered.current) {\n            is_blockly_listener_registered.current = true;\n            workspace.addChangeListener(handleBlockChangeOnBotRun);\n        } else {\n            removeBlockChangeListener();\n        }\n\n        return () => {\n            if (workspace && is_blockly_listener_registered.current) {\n                removeBlockChangeListener();\n            }\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [is_running]);\n\n    const handleBlockChangeOnBotRun = (e: Event) => {\n        const { is_reset_button_clicked } = toolbar;\n        if (e.type !== 'selected' && !is_reset_button_clicked) {\n            botNotification(notification_message.workspace_change);\n            removeBlockChangeListener();\n        } else if (is_reset_button_clicked) {\n            removeBlockChangeListener();\n        }\n    };\n\n    const removeBlockChangeListener = () => {\n        is_blockly_listener_registered.current = false;\n        window.Blockly?.derivWorkspace?.removeChangeListener(handleBlockChangeOnBotRun);\n    };\n\n    React.useEffect(() => {\n        const workspace = window.Blockly?.derivWorkspace;\n        if (workspace && !is_blockly_delete_listener_registered.current) {\n            is_blockly_delete_listener_registered.current = true;\n            workspace.addChangeListener(handleBlockDelete);\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [is_loading]);\n\n    const handleBlockDelete = (e: TBlocklyEvents) => {\n        const { is_reset_button_clicked, setResetButtonState } = toolbar;\n        if (e.type === 'delete' && !is_reset_button_clicked) {\n            deleted_block_id = e.blockId;\n        }\n        if (e.type === 'selected' && deleted_block_id === e.oldElementId) {\n            handleBlockDeleteNotification();\n        }\n        if (\n            e.type === 'change' &&\n            e.name === 'AMOUNT_LIMITS' &&\n            e.newValue === '(min: 0.35 - max: 50000)' &&\n            is_reset_button_clicked\n        ) {\n            setResetButtonState(false);\n        }\n    };\n\n    const handleBlockDeleteNotification = () => {\n        botNotification(notification_message.block_delete, {\n            label: localize('Undo'),\n            onClick: closeToast => {\n                window.Blockly.derivWorkspace.undo();\n                closeToast?.();\n            },\n        });\n    };\n\n    return (\n        <>\n            <div\n                className={classNames('bot-builder', {\n                    'bot-builder--active': active_tab === 1 && !is_preview_on_popup,\n                    'bot-builder--inactive': is_preview_on_popup,\n                    'bot-builder--tour-active': active_tour,\n                })}\n            >\n                {is_preview_on_popup ? null : (\n                    <div id='scratch_div' ref={el_ref}>\n                        <WorkspaceWrapper />\n                    </div>\n                )}\n            </div>\n            {active_tab === 1 && <BotBuilderTourHandler is_mobile={!is_desktop} />}\n            {/* removed this outside from toolbar becuase it needs to loaded seperately without dependency */}\n            <LoadModal />\n            <SaveModal />\n            {is_open && <QuickStrategy1 />}\n        </>\n    );\n});\n\nexport default BotBuilder;\n","import BotBuilder from './bot-builder';\nimport './workspace.scss';\n\nexport default BotBuilder;\n","import React from 'react';\n\nconst TradingViewComponent = () => {\n    return (\n        <iframe\n            id='trading-view-iframe'\n            style={{ width: '100%', height: '100%', backgroundColor: 'white' }}\n            src='https://charts.deriv.com/deriv?hide-signup=true'\n        />\n    );\n};\n\nexport default TradingViewComponent;\n","import React from 'react';\nimport { observer } from '@deriv/stores';\nimport { localize } from '@deriv/translations';\nimport DraggableResizeWrapper from 'Components/draggable/draggable-resize-wrapper';\nimport TradingViewComponent from 'Components/trading-view-chart/trading-view';\nimport { useDBotStore } from 'Stores/useDBotStore';\n\nconst TradingViewModal = observer(() => {\n    const { dashboard } = useDBotStore();\n    const { is_trading_view_modal_visible, setTradingViewModalVisibility } = dashboard;\n\n    return (\n        <React.Fragment>\n            {is_trading_view_modal_visible && (\n                <DraggableResizeWrapper\n                    boundary='.main'\n                    header={localize('TradingView Chart')}\n                    onClose={setTradingViewModalVisibility}\n                    modalWidth={526}\n                    modalHeight={595}\n                    minWidth={526}\n                    minHeight={524}\n                    enableResizing\n                >\n                    <div style={{ height: 'calc(100% - 6rem)', padding: '0.5rem' }}>\n                        <TradingViewComponent />\n                    </div>\n                </DraggableResizeWrapper>\n            )}\n        </React.Fragment>\n    );\n});\n\nexport default TradingViewModal;\n","import RunPanel from './run-panel';\nimport './run-panel.scss';\n\nexport default RunPanel;\n","import React from 'react';\nimport { getUrlBase, moduleLoader } from '@deriv/shared';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nlet module: Promise<any> | undefined;\n\nconst init = () => {\n    module = moduleLoader(() => {\n        // TODO: Proper fix for types in smartcharts\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        return import(/* webpackChunkName: \"smart_chart\" */ '@deriv/deriv-charts');\n    });\n\n    module.then(({ setSmartChartsPublicPath }: { setSmartChartsPublicPath: (path: string) => void }) => {\n        setSmartChartsPublicPath(getUrlBase('/js/smartcharts/'));\n    });\n};\n\n// React.Lazy expects a default export for the component\n// SmartChart library exports many components\nconst load = (component_name: string) => () => {\n    if (!module) {\n        init();\n    }\n    return module!.then(module => {\n        return { default: module[component_name] };\n    });\n};\n\nexport const SmartChart = React.lazy(load('SmartChart'));\nexport const ChartTitle = React.lazy(load('ChartTitle'));\n\nexport const ChartSize = React.lazy(load('ChartSize'));\nexport const ChartMode = React.lazy(load('ChartMode'));\nexport const DrawTools = React.lazy(load('DrawTools'));\nexport const Share = React.lazy(load('Share'));\nexport const StudyLegend = React.lazy(load('StudyLegend'));\nexport const Views = React.lazy(load('Views'));\nexport const ToolbarWidget = React.lazy(load('ToolbarWidget'));\n\nexport const FastMarker = React.lazy(load('FastMarker'));\nexport const RawMarker = React.lazy(load('RawMarker'));\n","import React from 'react';\nimport { useStore } from '@deriv/stores';\nimport { ChartMode, DrawTools, Share, StudyLegend, ToolbarWidget, Views } from './v1';\n\ntype TToolbarWidgetsProps = {\n    updateChartType: (chart_type: string) => void;\n    updateGranularity: (updateGranularity: number) => void;\n    position?: string | null;\n};\n\nconst ToolbarWidgets = ({ updateChartType, updateGranularity, position }: TToolbarWidgetsProps) => {\n    const { ui } = useStore();\n    const { is_desktop } = ui;\n\n    return (\n        <ToolbarWidget position={position}>\n            <ChartMode portalNodeId='modal_root' onChartType={updateChartType} onGranularity={updateGranularity} />\n            {is_desktop && (\n                <>\n                    <StudyLegend portalNodeId='modal_root' searchInputClassName='data-hj-whitelist' />\n                    <Views\n                        portalNodeId='modal_root'\n                        onChartType={updateChartType}\n                        onGranularity={updateGranularity}\n                        searchInputClassName='data-hj-whitelist'\n                    />\n                    <DrawTools portalNodeId='modal_root' />\n                    <Share portalNodeId='modal_root' />\n                </>\n            )}\n        </ToolbarWidget>\n    );\n};\n\nexport default ToolbarWidgets;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { observer, useStore } from '@deriv/stores';\nimport { useDBotStore } from 'Stores/useDBotStore';\nimport ToolbarWidgets from './toolbar-widgets';\nimport { ChartTitle, SmartChart } from './v1';\n\nconst Chart = observer(({ show_digits_stats }: { show_digits_stats: boolean }) => {\n    const barriers: [] = [];\n    const { common, ui } = useStore();\n    const { chart_store, run_panel, dashboard } = useDBotStore();\n\n    const {\n        chart_type,\n        getMarketsOrder,\n        granularity,\n        onSymbolChange,\n        setChartStatus,\n        symbol,\n        updateChartType,\n        updateGranularity,\n        wsForget,\n        wsForgetStream,\n        wsSendRequest,\n        wsSubscribe,\n    } = chart_store;\n    const {\n        ui: { is_desktop, is_mobile },\n    } = useStore();\n    const { is_drawer_open } = run_panel;\n    const { is_chart_modal_visible } = dashboard;\n    const is_socket_opened = common.is_socket_opened;\n    const settings = {\n        assetInformation: false, // ui.is_chart_asset_info_visible,\n        countdown: true,\n        isHighestLowestMarkerEnabled: false, // TODO: Pending UI,\n        language: common.current_language.toLowerCase(),\n        position: ui.is_chart_layout_default ? 'bottom' : 'left',\n        theme: ui.is_dark_mode_on ? 'dark' : 'light',\n    };\n\n    return (\n        <div\n            className={classNames('dashboard__chart-wrapper', {\n                'dashboard__chart-wrapper--expanded': is_drawer_open && is_desktop,\n                'dashboard__chart-wrapper--modal': is_chart_modal_visible && is_desktop,\n            })}\n            dir='ltr'\n        >\n            <SmartChart\n                id='dbot'\n                barriers={barriers}\n                showLastDigitStats={show_digits_stats}\n                chartControlsWidgets={null}\n                enabledChartFooter={false}\n                chartStatusListener={(v: boolean) => setChartStatus(!v)}\n                toolbarWidget={() => (\n                    <ToolbarWidgets\n                        updateChartType={updateChartType}\n                        updateGranularity={updateGranularity}\n                        position={is_desktop ? null : 'bottom'}\n                    />\n                )}\n                chartType={chart_type}\n                isMobile={is_mobile}\n                enabledNavigationWidget={is_desktop}\n                granularity={granularity}\n                requestAPI={wsSendRequest}\n                requestForget={wsForget}\n                requestForgetStream={wsForgetStream}\n                requestSubscribe={wsSubscribe}\n                settings={settings}\n                symbol={symbol}\n                topWidgets={() => <ChartTitle onChange={onSymbolChange} />}\n                isConnectionOpened={is_socket_opened}\n                getMarketsOrder={getMarketsOrder}\n                isLive\n                leftMargin={80}\n            />\n        </div>\n    );\n});\n\nexport default Chart;\n","import Chart from './chart';\nimport './chart.scss';\n\nexport default Chart;\n","import React from 'react';\nimport { observer } from '@deriv/stores';\nimport { localize } from '@deriv/translations';\nimport DraggableResizeWrapper from 'Components/draggable/draggable-resize-wrapper';\nimport { useDBotStore } from 'Stores/useDBotStore';\nimport Chart from '..';\n\nconst ChartModalDesktop = observer(() => {\n    const { dashboard } = useDBotStore();\n    const { is_chart_modal_visible, setChartModalVisibility } = dashboard;\n\n    return (\n        <React.Fragment>\n            {is_chart_modal_visible && (\n                <DraggableResizeWrapper\n                    boundary='.main'\n                    header={localize('Chart')}\n                    onClose={setChartModalVisibility}\n                    modalWidth={526}\n                    modalHeight={595}\n                    minWidth={526}\n                    minHeight={524}\n                    enableResizing\n                >\n                    <div className='chart-modal-dialog' data-testid='chart-modal-dialog'>\n                        <Chart show_digits_stats={false} />\n                    </div>\n                </DraggableResizeWrapper>\n            )}\n        </React.Fragment>\n    );\n});\n\nexport default ChartModalDesktop;\n","import ChartModal from './chart-modal';\nimport './chart-modal.scss';\n\nexport default ChartModal;\n","import React, { Suspense } from 'react';\nimport { Loading } from '@deriv/components';\nimport { observer, useStore } from '@deriv/stores';\nimport ChartModalDesktop from './chart-modal-desktop';\n\nexport const ChartModal = observer(() => {\n    const {\n        ui: { is_desktop },\n    } = useStore();\n    return <Suspense fallback={<Loading />}>{is_desktop && <ChartModalDesktop />}</Suspense>;\n});\n\nexport default ChartModal;\n","import React from 'react';\nimport { observer } from '@deriv/stores';\nimport { getSetting } from 'Utils/settings';\nimport { useDBotStore } from 'Stores/useDBotStore';\nimport ReactJoyrideWrapper from '../common/react-joyride-wrapper';\nimport TourStartDialog from '../common/tour-start-dialog';\nimport { DBOT_ONBOARDING } from '../tour-content';\nimport { useTourHandler } from '../useTourHandler';\n\nconst OnboardingTourDesktop = observer(() => {\n    const { dashboard } = useDBotStore();\n    const { active_tab, active_tour, setActiveTour, setTourDialogVisibility } = dashboard;\n    const { is_close_tour, is_finished, handleJoyrideCallback, setIsCloseTour } = useTourHandler();\n    React.useEffect(() => {\n        if (is_close_tour || is_finished) {\n            setIsCloseTour(false);\n            setActiveTour('');\n        }\n    }, [is_close_tour, is_finished, setActiveTour, setIsCloseTour]);\n\n    const token = getSetting('onboard_tour_token');\n    if (!token && active_tab === 0) setTourDialogVisibility(true);\n\n    return (\n        <>\n            <TourStartDialog />\n            {active_tour && (\n                <ReactJoyrideWrapper handleCallback={handleJoyrideCallback} steps={DBOT_ONBOARDING} spotlightClicks />\n            )}\n        </>\n    );\n});\n\nexport default OnboardingTourDesktop;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Icon, ProgressBarTracker, Text } from '@deriv/components';\nimport { observer } from '@deriv/stores';\nimport { localize } from '@deriv/translations';\nimport { getSetting } from 'Utils/settings';\nimport { useDBotStore } from 'Stores/useDBotStore';\nimport TourButton from '../common/tour-button';\nimport { DBOT_ONBOARDING_MOBILE, TMobileTourConfig } from '../tour-content';\n\nconst default_tour_data = {\n    content: [],\n    header: '',\n    img: '',\n    tour_step_key: 1,\n};\n\ntype TTourData = TMobileTourConfig & {\n    img: string;\n    tour_step_key: number;\n};\n\nconst OnboardingTourMobile = observer(() => {\n    const { dashboard } = useDBotStore();\n    const { onCloseTour, onTourEnd, setTourActiveStep, active_tour, active_tab, setActiveTour } = dashboard;\n    const [tour_step, setStep] = React.useState<number>(1);\n    const [tour_data, setTourData] = React.useState<TTourData>(default_tour_data);\n    const { content, header, img, media, tour_step_key } = tour_data;\n    const start_button = tour_step === 1 ? localize('Start') : localize('Next');\n    const tour_button_text = tour_step === 8 ? localize('Got it, thanks!') : start_button;\n    const test_id = tour_step_key === 8 ? 'finish-onboard-tour' : 'next-onboard-tour';\n    const hide_prev_button = [1, 2, 8];\n    const is_tour_active = active_tour === 'onboarding';\n\n    React.useEffect(() => {\n        const checkTokenForTour = () => {\n            const token = getSetting('onboard_tour_token');\n            if (!token && active_tab === 0) {\n                setActiveTour('onboarding');\n            }\n        };\n        checkTokenForTour();\n    }, [active_tab, active_tour]);\n\n    React.useEffect(() => {\n        DBOT_ONBOARDING_MOBILE.forEach(data => {\n            if (data.tour_step_key === tour_step) {\n                setTourData(data);\n            }\n            setTourActiveStep(tour_step);\n        });\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [tour_step]);\n\n    if (!active_tour) {\n        return null;\n    }\n\n    return (\n        <div\n            className={classNames('dbot-slider', {\n                'dbot-slider--active': tour_step === 1,\n                'dbot-slider--tour-position': tour_step !== 1,\n            })}\n            data-testid='onboarding-tour-mobile'\n        >\n            {tour_step_key !== 1 && (\n                <div className='dbot-slider__navbar'>\n                    <Text\n                        color='less-prominent'\n                        weight='less-prominent'\n                        line_height='s'\n                        size='xxs'\n                        data-testid='dbot-onboard-slider__navbar'\n                    >{`${tour_step_key - 1}/7`}</Text>\n                    <span onClick={onCloseTour}>\n                        <Icon\n                            icon='IcCross'\n                            data_testid='exit-onboard-tour'\n                            className='db-contract-card__result-icon'\n                            color='secondary'\n                        />\n                    </span>\n                </div>\n            )}\n            {header && (\n                <Text\n                    color='prominent'\n                    weight='bold'\n                    align='center'\n                    className='dbot-slider__title'\n                    as='span'\n                    line_height='s'\n                    size='xs'\n                >\n                    {localize(header)}\n                </Text>\n            )}\n            {media && (\n                <div className='dbot-slider__media'>\n                    <video\n                        autoPlay={true}\n                        loop\n                        controls\n                        preload='auto'\n                        playsInline\n                        disablePictureInPicture\n                        controlsList='nodownload'\n                        src={media}\n                    />\n                </div>\n            )}\n            {img && (\n                <div className='dbot-slider__image'>\n                    <img src={img} />\n                </div>\n            )}\n\n            {content && (\n                <>\n                    {content.map(data => {\n                        return (\n                            <Text\n                                key={data}\n                                align='center'\n                                color='prominent'\n                                className='dbot-slider__content'\n                                as='div'\n                                line_height='s'\n                                size='xxs'\n                            >\n                                {data}\n                            </Text>\n                        );\n                    })}\n                </>\n            )}\n            <div className='dbot-slider__status'>\n                <div className='dbot-slider__progress-bar'>\n                    <ProgressBarTracker\n                        step={tour_step}\n                        steps_list={DBOT_ONBOARDING_MOBILE.map(v => v.tour_step_key.toString())}\n                        onStepChange={setStep}\n                    />\n                </div>\n                <div className='dbot-slider__button-group'>\n                    {tour_step === 1 && (\n                        <TourButton\n                            onClick={() => {\n                                onCloseTour();\n                            }}\n                            label={localize('Skip')}\n                            data-testid='skip-onboard-tour'\n                        />\n                    )}\n                    {!hide_prev_button.includes(tour_step) && (\n                        <TourButton\n                            onClick={() => {\n                                setStep(tour_step - 1);\n                            }}\n                            label={localize('Previous')}\n                            data-testid='prev-onboard-tour'\n                        />\n                    )}\n                    <TourButton\n                        type='danger'\n                        onClick={() => {\n                            setStep(tour_step + 1);\n                            onTourEnd(tour_step, is_tour_active);\n                        }}\n                        label={tour_button_text}\n                        data-testid={test_id}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n});\n\nexport default OnboardingTourMobile;\n","import React from 'react';\nimport { observer } from 'mobx-react-lite';\nimport OnboardingTourDesktop from './onboarding-tour-desktop';\nimport OnboardingTourMobile from './onboarding-tour-mobile';\n\ntype TOnboardTourHandler = {\n    is_mobile: boolean;\n};\n\nconst OnboardTourHandler: React.FC<TOnboardTourHandler> = observer(({ is_mobile }) => {\n    return <>{is_mobile ? <OnboardingTourMobile /> : <OnboardingTourDesktop />}</>;\n});\n\nexport default OnboardTourHandler;\n","import { TEvents } from '@deriv-com/analytics';\nimport { ACTION, form_name } from './constants';\nimport { cacheTrackEvents } from '@deriv/shared';\n\nexport const rudderStackSendDashboardClickEvent = ({ dashboard_click_name, subpage_name }: TEvents['ce_bot_form']) => {\n    cacheTrackEvents.loadEvent([\n        {\n            event: {\n                name: 'ce_bot_form',\n                properties: {\n                    action: ACTION.DASHBOARD_CLICK,\n                    form_name,\n                    subpage_name,\n                    dashboard_click_name,\n                },\n            },\n        },\n    ]);\n};\n\nexport const rudderStackSendAnnouncementClickEvent = ({ announcement_name }: TEvents['ce_bot_form']) => {\n    cacheTrackEvents.loadEvent([\n        {\n            event: [\n                {\n                    name: 'ce_bot_form',\n                    properties: {\n                        action: ACTION.ANNOUNCEMENT_CLICK,\n                        form_name,\n                        subform_name: 'announcements',\n                        subform_source: 'dashboard',\n                        announcement_name,\n                    },\n                },\n            ],\n        },\n    ]);\n};\n\nexport const rudderStackSendAnnouncementActionEvent = ({\n    announcement_name,\n    announcement_action,\n}: TEvents['ce_bot_form']) => {\n    cacheTrackEvents.loadEvent([\n        {\n            event: {\n                name: 'ce_bot_form',\n                properties: {\n                    action: ACTION.ANNOUNCEMENT_ACTION,\n                    form_name,\n                    subform_name: 'announcements',\n                    subform_source: 'dashboard',\n                    announcement_name,\n                    announcement_action,\n                },\n            },\n        },\n    ]);\n};\n","import React from 'react';\nimport localForage from 'localforage';\nimport LZString from 'lz-string';\nimport { getSavedWorkspaces } from '@deriv/bot-skeleton';\nimport { Dialog, Text } from '@deriv/components';\nimport { observer } from '@deriv/stores';\nimport { localize } from '@deriv/translations';\nimport { NOTIFICATION_TYPE } from 'Components/bot-notification/bot-notification-utils';\nimport { TStrategy } from 'Types';\nimport { useDBotStore } from 'Stores/useDBotStore';\nimport './delete-dialog.scss';\n\nconst DeleteDialog = observer(() => {\n    const { load_modal, dashboard } = useDBotStore();\n    const {\n        is_delete_modal_open,\n        onToggleDeleteDialog,\n        selected_strategy_id,\n        setDashboardStrategies,\n        loadStrategyToBuilder,\n        refreshStrategiesTheme,\n        resetBotBuilderStrategy,\n    } = load_modal;\n    const { setOpenSettings } = dashboard;\n\n    const resetStrategiesAfterDelete = async (deleted_strategy_id: string, updated_workspaces: Array<TStrategy>) => {\n        if (updated_workspaces.length) {\n            if (selected_strategy_id === deleted_strategy_id) {\n                await loadStrategyToBuilder(updated_workspaces?.[0]);\n            }\n            // Change preview strategy to the one that was previously previewed\n            await refreshStrategiesTheme();\n        } else {\n            resetBotBuilderStrategy();\n        }\n    };\n\n    const removeBotStrategy = async (strategy_id: string) => {\n        const workspaces = await getSavedWorkspaces();\n        const updated_workspaces = workspaces.filter(\n            (strategy_from_workspace: TStrategy) => strategy_from_workspace.id !== strategy_id\n        );\n        setDashboardStrategies(updated_workspaces);\n        // TODO: Need to move this to skeleton\n        localForage.setItem('saved_workspaces', LZString.compress(JSON.stringify(updated_workspaces)));\n        await resetStrategiesAfterDelete(strategy_id, updated_workspaces);\n        onToggleDeleteDialog(false);\n    };\n\n    return (\n        <div>\n            <Dialog\n                title={localize('Delete bot')}\n                is_visible={is_delete_modal_open}\n                confirm_button_text={localize('Yes, delete')}\n                onConfirm={() => {\n                    removeBotStrategy(selected_strategy_id);\n                    onToggleDeleteDialog(false);\n                    setOpenSettings(NOTIFICATION_TYPE.BOT_DELETE);\n                }}\n                cancel_button_text={localize('No')}\n                onCancel={() => {\n                    onToggleDeleteDialog(false);\n                }}\n                is_mobile_full_width={false}\n                className={'dc-dialog__delete-strategy--delete'}\n                has_close_icon\n            >\n                <div>\n                    <Text color='prominent' line_height='s' size='xs'>\n                        {localize('Your bot will be permanently deleted when you hit ')}\n                        <strong>{localize('Yes, delete.')}</strong>\n                    </Text>\n                </div>\n                <div>\n                    <Text color='prominent' line_height='xl' size='xs'>\n                        {localize('Are you sure you want to delete it?')}\n                    </Text>\n                </div>\n            </Dialog>\n        </div>\n    );\n});\n\nexport default DeleteDialog;\n","import DeleteDialog from './delete-dialog';\n\nexport default DeleteDialog;\n","import { localize } from '@deriv/translations';\n\nexport const STRATEGY = {\n    OPEN: 'open',\n    EDIT: 'edit',\n    SAVE: 'save',\n    DELETE: 'delete',\n    PREVIEW: 'preview',\n    PREVIEW_LIST: 'list',\n    INIT: 'init',\n};\n\nexport const CONTEXT_MENU = [\n    {\n        type: STRATEGY.OPEN,\n        icon: 'IcOpen',\n        label: localize('Open'),\n    },\n    {\n        type: STRATEGY.SAVE,\n        icon: 'IcSave',\n        label: localize('Save'),\n    },\n    {\n        type: STRATEGY.DELETE,\n        icon: 'IcDelete',\n        label: localize('Delete'),\n    },\n];\n","import React from 'react';\nimport classnames from 'classnames';\nimport { timeSince } from '@deriv/bot-skeleton';\nimport { save_types } from '@deriv/bot-skeleton/src/constants/save-type';\nimport { Icon, Popover, Text } from '@deriv/components';\nimport { observer, useStore } from '@deriv/stores';\nimport { DBOT_TABS } from 'Constants/bot-contents';\nimport { CONTEXT_MENU, STRATEGY } from 'Constants/dashboard';\nimport { useDBotStore } from 'Stores/useDBotStore';\nimport { rudderStackSendDashboardClickEvent } from '../../../analytics/rudderstack-dashboard';\nimport { useComponentVisibility } from '../../../hooks';\nimport { TRecentStrategy } from './types';\nimport './index.scss';\nimport { localize } from '@deriv/translations';\n\ntype TRecentWorkspace = {\n    workspace: TRecentStrategy;\n};\n\nconst RecentWorkspace = observer(({ workspace }: TRecentWorkspace) => {\n    const { ui } = useStore();\n    const { is_desktop } = ui;\n    const { dashboard, load_modal, save_modal } = useDBotStore();\n    const { setActiveTab } = dashboard;\n    const { toggleSaveModal, updateBotName } = save_modal;\n    const {\n        dashboard_strategies,\n        getRecentFileIcon,\n        getSaveType,\n        loadFileFromRecent,\n        onToggleDeleteDialog,\n        selected_strategy_id,\n        setSelectedStrategyId,\n    } = load_modal;\n\n    const trigger_div_ref = React.useRef<HTMLInputElement | null>(null);\n    const toggle_ref = React.useRef<HTMLButtonElement>(null);\n    const visible = useComponentVisibility(toggle_ref);\n    const { setDropdownVisibility, is_dropdown_visible } = visible;\n\n    const onToggleDropdown = (e: React.MouseEvent<HTMLElement>) => {\n        e.stopPropagation();\n        setDropdownVisibility(!is_dropdown_visible);\n        setSelectedStrategyId(workspace.id);\n    };\n\n    const handleOpen = async () => {\n        await loadFileFromRecent();\n        setActiveTab(DBOT_TABS.BOT_BUILDER);\n        rudderStackSendDashboardClickEvent({ dashboard_click_name: 'open', subpage_name: 'bot_builder' });\n    };\n\n    const handleSave = () => {\n        updateBotName(workspace?.name);\n        toggleSaveModal();\n        rudderStackSendDashboardClickEvent({ dashboard_click_name: 'save', subpage_name: 'dashboard' });\n    };\n\n    const viewRecentStrategy = async (type: string) => {\n        setSelectedStrategyId(workspace.id);\n\n        switch (type) {\n            case STRATEGY.OPEN:\n                await handleOpen();\n                break;\n\n            case STRATEGY.SAVE:\n                handleSave();\n                break;\n\n            case STRATEGY.DELETE:\n                onToggleDeleteDialog(true);\n                rudderStackSendDashboardClickEvent({ dashboard_click_name: 'delete', subpage_name: 'dashboard' });\n                break;\n\n            default:\n                break;\n        }\n    };\n\n    const is_active_mobile = selected_strategy_id === workspace.id && is_dropdown_visible;\n    const text_size = is_desktop ? 'xs' : 'xxs';\n    return (\n        <div\n            className={classnames('bot-list__item', {\n                'bot-list__item--loaded': dashboard_strategies,\n                'bot-list__item--min': !!dashboard_strategies?.length && !is_desktop,\n            })}\n            key={workspace.id}\n            ref={trigger_div_ref}\n        >\n            <div className='bot-list__item__label'>\n                <div className='text-wrapper' title={workspace.name}>\n                    <Text align='left' as='p' size={text_size} line_height='l'>\n                        {workspace.name || localize('Untitled Bot')}\n                    </Text>\n                </div>\n            </div>\n            <div className='bot-list__item__time-stamp'>\n                <Text align='left' as='p' size={text_size} line_height='l'>\n                    {timeSince(workspace.timestamp)}\n                </Text>\n            </div>\n            <div className='bot-list__item__load-type'>\n                <Icon\n                    icon={getRecentFileIcon(workspace.save_type)}\n                    className={classnames({\n                        'bot-list__item__load-type__icon--active': workspace.save_type === save_types.GOOGLE_DRIVE,\n                    })}\n                />\n                <div className='bot-list__item__load-type__icon--saved'>\n                    <Text align='left' as='p' size={text_size} line_height='l'>\n                        {getSaveType(workspace.save_type)}\n                    </Text>\n                </div>\n            </div>\n            {is_desktop ? (\n                <div className='bot-list__item__actions'>\n                    {CONTEXT_MENU.map(({ type, label, icon }) => (\n                        <div\n                            data-testid={`dt_desktop_bot_list_action-${type}`}\n                            key={type}\n                            className='bot-list__item__actions__action-item'\n                            onClick={e => {\n                                e.stopPropagation();\n                                viewRecentStrategy(type);\n                            }}\n                            onKeyDown={(e: React.KeyboardEvent) => {\n                                if (e.key === 'Enter') {\n                                    e.stopPropagation();\n                                    viewRecentStrategy(type);\n                                }\n                            }}\n                            tabIndex={0}\n                        >\n                            <Popover alignment='top' message={label} zIndex={'9999'}>\n                                <Icon icon={icon} />\n                            </Popover>\n                        </div>\n                    ))}\n                </div>\n            ) : (\n                <>\n                    <div className='bot-list__item__actions'>\n                        <button\n                            ref={toggle_ref}\n                            onClick={onToggleDropdown}\n                            tabIndex={0}\n                            data-testid='dt_mobile_menu_icon'\n                        >\n                            <Icon icon='IcMenuDots' />\n                        </button>\n                    </div>\n                    <div\n                        className={classnames('bot-list__item__responsive', {\n                            'bot-list__item__responsive--active': is_active_mobile,\n                            'bot-list__item__responsive--min': dashboard_strategies.length <= 5,\n                        })}\n                    >\n                        {CONTEXT_MENU.map(({ type, label, icon }) => (\n                            <div\n                                key={type}\n                                className='bot-list__item__responsive__menu'\n                                onClick={e => {\n                                    e.stopPropagation();\n                                    viewRecentStrategy(type);\n                                }}\n                                onKeyDown={(e: React.KeyboardEvent) => {\n                                    if (e.key === 'Enter') {\n                                        e.stopPropagation();\n                                        viewRecentStrategy(type);\n                                    }\n                                }}\n                                tabIndex={0}\n                            >\n                                <div>\n                                    <Icon icon={icon} />\n                                </div>\n                                <Text\n                                    data-testid={`dt_mobile_bot_list_action-${type}`}\n                                    color='prominent'\n                                    className='bot-list__item__responsive__menu__item'\n                                    as='p'\n                                    size='xxs'\n                                >\n                                    {label}\n                                </Text>\n                            </div>\n                        ))}\n                    </div>\n                </>\n            )}\n        </div>\n    );\n});\n\nexport default RecentWorkspace;\n","import React from 'react';\n\nexport const useComponentVisibility = (ref: React.RefObject<HTMLElement>) => {\n    const [is_dropdown_visible, setDropdownVisibility] = React.useState(false);\n\n    const handleHideDropdown = (event: KeyboardEvent) => {\n        if (event.key.toUpperCase() === 'ESCAPE') {\n            setDropdownVisibility(false);\n        }\n    };\n\n    const handleClickOutside = (event: Event) => {\n        if (!ref?.current?.contains(event.target as Node)) {\n            setDropdownVisibility(false);\n        }\n    };\n\n    React.useEffect(() => {\n        document.addEventListener('keydown', handleHideDropdown, true);\n        document.addEventListener('click', handleClickOutside, true);\n        return () => {\n            document.removeEventListener('keydown', handleHideDropdown, true);\n            document.removeEventListener('click', handleClickOutside, true);\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return {\n        is_dropdown_visible,\n        setDropdownVisibility,\n    };\n};\n","import React from 'react';\nimport { getSavedWorkspaces } from '@deriv/bot-skeleton';\nimport { Text } from '@deriv/components';\nimport { observer, useStore } from '@deriv/stores';\nimport { Localize, localize } from '@deriv/translations';\nimport { useDBotStore } from 'Stores/useDBotStore';\nimport DeleteDialog from './delete-dialog';\nimport RecentWorkspace from './recent-workspace';\nimport './index.scss';\n\ntype THeader = {\n    label: string;\n    className: string;\n};\n\nconst HEADERS: THeader[] = [\n    {\n        label: localize('Bot name'),\n        className: 'bot-list__header__label',\n    },\n    {\n        label: localize('Last modified'),\n        className: 'bot-list__header__time-stamp',\n    },\n    {\n        label: localize('Status'),\n        className: 'bot-list__header__load-type',\n    },\n];\n\nconst DashboardBotList = observer(() => {\n    const { load_modal, dashboard } = useDBotStore();\n    const { setDashboardStrategies, dashboard_strategies } = load_modal;\n    const { setStrategySaveType, strategy_save_type } = dashboard;\n    const { ui } = useStore();\n    const { is_desktop } = ui;\n    const get_first_strategy_info = React.useRef(false);\n    const get_instacee = React.useRef(false);\n\n    React.useEffect(() => {\n        setStrategySaveType('');\n        const getStrategies = async () => {\n            const recent_strategies = await getSavedWorkspaces();\n            setDashboardStrategies(recent_strategies);\n            if (!get_instacee.current) {\n                get_instacee.current = true;\n            }\n        };\n        getStrategies();\n        //this dependency is used when we use the save modal popup\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [strategy_save_type]);\n\n    React.useEffect(() => {\n        if (!dashboard_strategies?.length && !get_first_strategy_info.current) {\n            get_first_strategy_info.current = true;\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    if (!dashboard_strategies?.length) return null;\n    return (\n        <div className='bot-list__container'>\n            <div className='bot-list__wrapper'>\n                <div className='bot-list__title'>\n                    <Text size={is_desktop ? 's' : 'xs'} weight='bold'>\n                        <Localize i18n_default_text='Your bots:' />\n                    </Text>\n                </div>\n                <div className='bot-list__header'>\n                    {HEADERS.map(({ label, className }) => {\n                        return (\n                            <div className={className} key={label}>\n                                <Text size={is_desktop ? 'xs' : 'xxs'} weight='bold'>\n                                    {label}\n                                </Text>\n                            </div>\n                        );\n                    })}\n                </div>\n                <div className='bot-list__table'>\n                    {dashboard_strategies.map(workspace => (\n                        <RecentWorkspace key={workspace.id} workspace={workspace} />\n                    ))}\n                </div>\n            </div>\n            <DeleteDialog />\n        </div>\n    );\n});\n\nexport default DashboardBotList;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Icon, Text } from '@deriv/components';\nimport { observer } from '@deriv/stores';\nimport { localize } from '@deriv/translations';\nimport { DBOT_TABS } from 'Constants/bot-contents';\nimport { useDBotStore } from 'Stores/useDBotStore';\nimport { rudderStackSendOpenEvent } from '../../analytics/rudderstack-common-events';\nimport { rudderStackSendDashboardClickEvent } from '../../analytics/rudderstack-dashboard';\nimport DashboardBotList from './bot-list/dashboard-bot-list';\n\ntype TCardProps = {\n    has_dashboard_strategies: boolean;\n    is_mobile: boolean;\n};\n\ntype TCardArray = {\n    type: string;\n    icon: string;\n    content: string;\n    callback: () => void;\n};\n\nconst Cards = observer(({ is_mobile, has_dashboard_strategies }: TCardProps) => {\n    const { dashboard, load_modal, quick_strategy } = useDBotStore();\n    const { toggleLoadModal, setActiveTabIndex } = load_modal;\n    const { is_dialog_open, setActiveTab } = dashboard;\n    const { setFormVisibility } = quick_strategy;\n\n    const openGoogleDriveDialog = () => {\n        toggleLoadModal();\n        setActiveTabIndex(is_mobile ? 1 : 2);\n        setActiveTab(DBOT_TABS.BOT_BUILDER);\n    };\n\n    const openFileLoader = () => {\n        toggleLoadModal();\n        setActiveTabIndex(is_mobile ? 0 : 1);\n        setActiveTab(DBOT_TABS.BOT_BUILDER);\n    };\n\n    const actions: TCardArray[] = [\n        {\n            type: 'my-computer',\n            icon: is_mobile ? 'IcLocal' : 'IcMyComputer',\n            content: is_mobile ? localize('Local') : localize('My computer'),\n            callback: () => {\n                openFileLoader();\n                rudderStackSendOpenEvent({\n                    subpage_name: 'bot_builder',\n                    subform_source: 'dashboard',\n                    subform_name: 'load_strategy',\n                    load_strategy_tab: 'local',\n                });\n            },\n        },\n        {\n            type: 'google-drive',\n            icon: 'IcGoogleDriveDbot',\n            content: localize('Google Drive'),\n            callback: () => {\n                openGoogleDriveDialog();\n                rudderStackSendOpenEvent({\n                    subpage_name: 'bot_builder',\n                    subform_source: 'dashboard',\n                    subform_name: 'load_strategy',\n                    load_strategy_tab: 'google drive',\n                });\n            },\n        },\n        {\n            type: 'bot-builder',\n            icon: 'IcBotBuilder',\n            content: localize('Bot Builder'),\n            callback: () => {\n                setActiveTab(DBOT_TABS.BOT_BUILDER);\n                rudderStackSendDashboardClickEvent({\n                    dashboard_click_name: 'bot_builder',\n                    subpage_name: 'bot_builder',\n                });\n            },\n        },\n        {\n            type: 'quick-strategy',\n            icon: 'IcQuickStrategy',\n            content: localize('Quick strategy'),\n            callback: () => {\n                setActiveTab(DBOT_TABS.BOT_BUILDER);\n                setFormVisibility(true);\n                rudderStackSendOpenEvent({\n                    subpage_name: 'bot_builder',\n                    subform_source: 'dashboard',\n                    subform_name: 'quick_strategy',\n                });\n            },\n        },\n    ];\n\n    return React.useMemo(\n        () => (\n            <div\n                className={classNames('tab__dashboard__table', {\n                    'tab__dashboard__table--minimized': has_dashboard_strategies && is_mobile,\n                })}\n            >\n                <div\n                    className={classNames('tab__dashboard__table__tiles', {\n                        'tab__dashboard__table__tiles--minimized': has_dashboard_strategies && is_mobile,\n                    })}\n                    id='tab__dashboard__table__tiles'\n                >\n                    {actions.map(icons => {\n                        const { icon, content, callback } = icons;\n                        return (\n                            <div\n                                key={content}\n                                className={classNames('tab__dashboard__table__block', {\n                                    'tab__dashboard__table__block--minimized': has_dashboard_strategies && is_mobile,\n                                })}\n                                onClick={() => {\n                                    callback();\n                                }}\n                                onKeyDown={(e: React.KeyboardEvent) => {\n                                    if (e.key === 'Enter') {\n                                        callback();\n                                    }\n                                }}\n                                tabIndex={0}\n                            >\n                                <Icon\n                                    className={classNames('tab__dashboard__table__images', {\n                                        'tab__dashboard__table__images--minimized': has_dashboard_strategies,\n                                    })}\n                                    width='8rem'\n                                    height='8rem'\n                                    icon={icon}\n                                    id={icon}\n                                />\n                                <Text color='prominent' size={is_mobile ? 'xxs' : 'xs'}>\n                                    {content}\n                                </Text>\n                            </div>\n                        );\n                    })}\n                </div>\n                <DashboardBotList />\n            </div>\n        ),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [is_dialog_open, has_dashboard_strategies]\n    );\n});\n\nexport default Cards;\n","import { localize } from '@deriv/translations';\n\nexport type TSidebarItem = {\n    label: string;\n    content: { data: string; faq_id?: string }[];\n    link: boolean;\n};\n\nexport const SIDEBAR_INTRO: TSidebarItem[] = [\n    {\n        label: localize('Welcome to Deriv Bot!'),\n        content: [\n            {\n                data: localize(\n                    'Ready to automate your trading strategy without writing any code? You’ve come to the right place.'\n                ),\n            },\n            { data: localize('Check out these guides and FAQs to learn more about building your bot:') },\n        ],\n        link: false,\n    },\n    {\n        label: localize('Guide'),\n        content: [{ data: localize('Deriv Bot - your automated trading partner') }],\n        link: true,\n    },\n    {\n        label: localize('FAQs'),\n        content: [\n            {\n                data: localize('What is Deriv Bot?'),\n                faq_id: 'faq-0',\n            },\n            {\n                data: localize('Where do I find the blocks I need?'),\n                faq_id: 'faq-1',\n            },\n            {\n                data: localize('How do I remove blocks from the workspace?'),\n                faq_id: 'faq-2',\n            },\n        ],\n        link: true,\n    },\n];\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Icon, Modal, Text } from '@deriv/components';\nimport { observer, useStore } from '@deriv/stores';\nimport { DBOT_TABS } from 'Constants/bot-contents';\nimport { useDBotStore } from 'Stores/useDBotStore';\nimport { SIDEBAR_INTRO } from './constants';\n\nconst InfoPanel = observer(() => {\n    const {\n        ui: { is_desktop },\n    } = useStore();\n    const { dashboard } = useDBotStore();\n    const {\n        active_tour,\n        is_info_panel_visible,\n        setActiveTab,\n        setActiveTabTutorial,\n        setInfoPanelVisibility,\n        setFaqTitle,\n    } = dashboard;\n    const switchTab = (link: boolean, label: string, faq_id: string) => {\n        const tutorial_link = link ? setActiveTab(DBOT_TABS.TUTORIAL) : null;\n        const tutorial_label = label === 'Guide' ? setActiveTabTutorial(0) : setActiveTabTutorial(1);\n        setFaqTitle(faq_id);\n        return {\n            tutorial_link,\n            tutorial_label,\n        };\n    };\n\n    const handleClose = () => {\n        setInfoPanelVisibility(false);\n        localStorage.setItem('dbot_should_show_info', JSON.stringify(Date.now()));\n    };\n\n    const renderInfo = () => (\n        <div className='db-info-panel'>\n            <div data-testid='close-icon' className='db-info-panel__close-action' onClick={handleClose}>\n                <Icon width='1rem' height='1rem' icon='IcCloseIconDbot' />\n            </div>\n\n            {SIDEBAR_INTRO.map(sidebar_item => {\n                const { label, content, link } = sidebar_item;\n                return (\n                    <div key={`${label}-${content}`}>\n                        <Text color='prominent' line_height='xxl' size={is_desktop ? 'm' : 's'} weight='bold' as='h1'>\n                            {label}\n                        </Text>\n                        {content.map(text => (\n                            <Text\n                                key={`info-panel-tour${text.data}`}\n                                className={classNames('db-info-panel__card', {\n                                    'db-info-panel__content': link,\n                                })}\n                                color='prominent'\n                                line_height='xl'\n                                as='p'\n                                onClick={() => switchTab(link, label, text.faq_id)}\n                                size={is_desktop ? 's' : 'xxs'}\n                            >\n                                {text.data}\n                            </Text>\n                        ))}\n                    </div>\n                );\n            })}\n        </div>\n    );\n\n    return is_desktop ? (\n        !active_tour && (\n            <div\n                className={classNames('tab__dashboard__info-panel', {\n                    'tab__dashboard__info-panel--active': is_info_panel_visible,\n                })}\n            >\n                {renderInfo()}\n            </div>\n        )\n    ) : (\n        <Modal\n            className='statistics__modal statistics__modal--mobile'\n            is_open={is_info_panel_visible}\n            toggleModal={handleClose}\n            width={'440px'}\n        >\n            <Modal.Body>{renderInfo()}</Modal.Body>\n        </Modal>\n    );\n});\n\nexport default InfoPanel;\n","import React from 'react';\nimport { Icon, Text } from '@deriv/components';\nimport { LabelPairedCircleInfoCaptionBoldIcon } from '@deriv/quill-icons';\n\nexport const IconAnnounce = ({ announce }: { announce: boolean }) => (\n    <>\n        <LabelPairedCircleInfoCaptionBoldIcon fill='var(--text-info-blue)' width='24' height='26' />\n        {announce && <div className='notification__icon--indicator' />}\n    </>\n);\n\nexport const TitleAnnounce = ({ title, announce }: { title: string; announce: boolean }) => (\n    <Text\n        size='xs'\n        line_height='l'\n        weight={announce ? 'bold' : 'normal'}\n        styles={!announce ? { color: 'var(--text-general)' } : {}}\n    >\n        {title}\n    </Text>\n);\n\nexport const MessageAnnounce = ({ message, date, announce }: { message: string; date: string; announce: boolean }) => (\n    <>\n        <Text\n            size='xs'\n            line_height='m'\n            weight={announce ? 'normal' : 'lighter'}\n            styles={!announce ? { color: 'var(--text-general)' } : {}}\n        >\n            {message}\n        </Text>\n        <Text size='xxs' line_height='xl' styles={{ color: 'var(--text-primary)' }}>\n            {date}\n        </Text>\n    </>\n);\n\nexport const IconAnnounceModal = ({ announce_id }: { announce_id: string }) => {\n    switch (announce_id) {\n        case 'MOVING_STRATEGIES_ANNOUNCE': {\n            return <Icon icon='IcMigrateStrategy' className='category-type' color='brand' height='100' width='140' />;\n        }\n        case 'BLOCKLY_ANNOUNCE': {\n            return <Icon icon='IcUpgradeBlockly' className='category-type' color='brand' size='120' />;\n        }\n        case 'ACCUMULATOR_ANNOUNCE': {\n            return <Icon icon='IcTradetypeAccu' className='category-type' color='brand' size='80' />;\n        }\n        default:\n            return null;\n    }\n};\n","import React from 'react';\nimport { OpenLiveChatLink, Text } from '@deriv/components';\nimport { Localize, localize } from '@deriv/translations';\nimport { DBOT_TABS } from 'Constants/bot-contents';\nimport { rudderStackSendOpenEvent } from '../../../analytics/rudderstack-common-events';\nimport { handleOnConfirmAccumulator } from './utils/accumulator-helper-functions';\nimport { IconAnnounce } from './announcement-components';\nimport { getUrlBase } from '@deriv/shared';\n\nexport type TContentItem = {\n    id: number;\n    text: React.ReactNode;\n};\n\nexport type TAnnounce = {\n    id: string;\n    main_title: string;\n    confirm_button_text?: string;\n    cancel_button_text?: string;\n    base_classname: string;\n    title: React.ReactNode;\n    content?: TContentItem[];\n    numbered_content?: TContentItem[];\n    plain_text?: TContentItem[];\n    media?: Array<string>;\n    unordered_list?: TContentItem[];\n    event_name: string;\n    event_action?: {\n        confirm_button_text?: string;\n        cancel_button_text?: string;\n    };\n};\n\nexport type TAnnouncement = {\n    announcement: TAnnounce;\n    switch_tab_on_cancel?: number;\n    switch_tab_on_confirm?: number;\n    onConfirm?: () => void;\n    onCancel?: () => void;\n    url_redirect?: string;\n    should_not_be_cancel?: boolean;\n    should_toggle_load_modal?: boolean;\n    should_toggle_qs_modal?: boolean;\n};\n\nexport const ANNOUNCEMENTS: Record<string, TAnnouncement> = {\n    UPDATES_QUICK_STRATEGY_MODAL_ANNOUNCE: {\n        announcement: {\n            id: 'UPDATES_QUICK_STRATEGY_MODAL_ANNOUNCE',\n            main_title: localize('Updates: Quick strategy modal'),\n            event_name: 'Updated: Quick Strategy Modal',\n            event_action: {\n                confirm_button_text: 'Explore now',\n            },\n            confirm_button_text: localize('Explore now'),\n            base_classname: 'announcement-dialog',\n            media: [getUrlBase('/public/videos/dbot-new-look-QS-and-accumulators-addition.gif')],\n            title: [\n                <Text key={0} as='div' align='left' size='xs' className='announcement-dialog__title'>\n                    <Localize i18n_default_text=\"We've improved the Quick strategy (QS) modal for a better trading experience.\" />\n                </Text>,\n                <Localize key={1} i18n_default_text='<0>What’s new:</0>' components={[<div key={0} />]} />,\n            ],\n            unordered_list: [\n                {\n                    id: 0,\n                    text: (\n                        <Localize\n                            i18n_default_text='<0>A revamped design</0> for improved functionality.'\n                            components={[<strong key={0} />]}\n                        />\n                    ),\n                },\n                {\n                    id: 1,\n                    text: (\n                        <Localize\n                            i18n_default_text='<0>Support for multiple trade types </0> with a filter to find strategies by preference.'\n                            components={[<strong key={0} />]}\n                        />\n                    ),\n                },\n                {\n                    id: 2,\n                    text: (\n                        <Localize\n                            i18n_default_text='<0>Integration of Accumulators Options</0> for direct strategy application within the QS modal.'\n                            components={[<strong key={0} />]}\n                        />\n                    ),\n                },\n            ],\n        },\n        should_not_be_cancel: true,\n        switch_tab_on_confirm: DBOT_TABS.BOT_BUILDER,\n        should_toggle_qs_modal: true,\n    },\n\n    MOVING_STRATEGIES_ANNOUNCE: {\n        announcement: {\n            id: 'MOVING_STRATEGIES_ANNOUNCE',\n            main_title: localize('Moving strategies to Deriv Bot'),\n            event_name: 'Moving strategies to Deriv Bot',\n            event_action: {\n                confirm_button_text: 'Import strategy',\n            },\n            confirm_button_text: localize('Import strategy'),\n            base_classname: 'announcement-dialog',\n            title: (\n                <Localize\n                    i18n_default_text='<0>Follow these steps to smoothly transfer your strategies:</0>'\n                    components={[<strong key={0} />]}\n                />\n            ),\n            numbered_content: [\n                {\n                    id: 0,\n                    text: localize('Download your strategy in XML format and import it to Deriv Bot.'),\n                },\n                {\n                    id: 1,\n                    text: localize('Run your updated strategy to check its performance.'),\n                },\n                {\n                    id: 2,\n                    text: localize('Save the updated strategy for quicker re-imports.'),\n                },\n            ],\n            plain_text: [\n                {\n                    id: 0,\n                    text: (\n                        <Localize\n                            i18n_default_text='<0>Note</0>: Uploading complex strategies may take some time. Saving them from Deriv Bot ensures quicker access later. If you have questions, contact us via <1/>.'\n                            components={[<strong key={0} />, <OpenLiveChatLink className='' key={1} />]}\n                        />\n                    ),\n                },\n            ],\n        },\n        should_not_be_cancel: true,\n        should_toggle_load_modal: true,\n        switch_tab_on_confirm: DBOT_TABS.BOT_BUILDER,\n        onConfirm: () => {\n            rudderStackSendOpenEvent({\n                subpage_name: 'bot_builder',\n                subform_source: 'announcements',\n                subform_name: 'load_strategy',\n                load_strategy_tab: 'recent',\n            });\n        },\n    },\n\n    BLOCKLY_ANNOUNCE: {\n        announcement: {\n            id: 'BLOCKLY_ANNOUNCE',\n            main_title: localize('Google Blockly v10 update'),\n            event_name: 'Google Blockly v10 update',\n            base_classname: 'announcement-dialog',\n            title: (\n                <Localize\n                    i18n_default_text='We have updated our Blockly system in Deriv Bot from <0>version 3 to version 10</0>. This brings:'\n                    components={[<strong key={0} />]}\n                />\n            ),\n            numbered_content: [\n                {\n                    id: 0,\n                    text: localize('Better security.'),\n                },\n                {\n                    id: 1,\n                    text: localize('Faster performance.'),\n                },\n                {\n                    id: 2,\n                    text: localize('New features for developers.'),\n                },\n            ],\n            plain_text: [\n                {\n                    id: 0,\n                    text: (\n                        <Localize\n                            i18n_default_text='<0>Note</0>: Some complex strategies might face issues in the Bot Builder. If you have questions, contact us via <1/>.'\n                            components={[<strong key={0} />, <OpenLiveChatLink className='' key={1} />]}\n                        />\n                    ),\n                },\n            ],\n        },\n        should_not_be_cancel: true,\n    },\n\n    ACCUMULATOR_ANNOUNCE: {\n        announcement: {\n            id: 'ACCUMULATOR_ANNOUNCE',\n            main_title: localize('Accumulators now on Deriv Bot'),\n            event_name: 'Accumulators is now on Deriv Bot',\n            event_action: {\n                confirm_button_text: 'Try now',\n                cancel_button_text: 'Learn more',\n            },\n            confirm_button_text: localize('Try now'),\n            cancel_button_text: localize('Learn more'),\n            base_classname: 'announcement-dialog',\n            title: (\n                <Localize\n                    i18n_default_text='<0>Boost your trading strategy with Accumulators</0>'\n                    components={[<strong key={0} />]}\n                />\n            ),\n            content: [\n                {\n                    id: 0,\n                    text: localize('Trade Accumulators to build up potential profits with a structured approach.'),\n                },\n                {\n                    id: 1,\n                    text: localize('Customise your investment period and price levels to fit your trading goals.'),\n                },\n                { id: 2, text: localize('Manage risks while capitalising on market opportunities.') },\n            ],\n        },\n        switch_tab_on_cancel: DBOT_TABS.TUTORIAL,\n        switch_tab_on_confirm: DBOT_TABS.BOT_BUILDER,\n        onConfirm: () => handleOnConfirmAccumulator(),\n    },\n};\n\nexport type TAnnouncementItem = {\n    id: string;\n    icon: React.ReactElement;\n    title: string;\n    message: string;\n    date: string;\n    buttonAction: string;\n    actionText: string;\n};\n\nexport type TNotifications = {\n    key: string;\n    icon: React.ReactNode;\n    title: React.ReactNode;\n    message: React.ReactNode;\n    buttonAction: (() => void) | false | void;\n    actionText: string;\n};\n\nexport const BUTTON_ACTION_TYPE = {\n    MODAL_BUTTON_ACTION: 'modal_button_action',\n    REDIRECT_BUTTON_ACTION: 'redirect_button_action',\n    NO_ACTION: 'no_action',\n};\n\nexport const BOT_ANNOUNCEMENTS_LIST: TAnnouncementItem[] = [\n    {\n        id: 'UPDATES_QUICK_STRATEGY_MODAL_ANNOUNCE',\n        icon: IconAnnounce,\n        title: localize('Updated: Quick Strategy Modal'),\n        message: localize(\"We've improved the Quick strategy (QS) modal for a better trading experience.\"),\n        date: '18 November 2024 00:00 UTC',\n        buttonAction: BUTTON_ACTION_TYPE.MODAL_BUTTON_ACTION,\n        actionText: '',\n    },\n    {\n        id: 'MOVING_STRATEGIES_ANNOUNCE',\n        icon: IconAnnounce,\n        title: localize('Moving strategies to Deriv Bot'),\n        message: localize('Follow these steps to smoothly transfer your strategies'),\n        date: '1 August 2024 00:00 UTC',\n        buttonAction: BUTTON_ACTION_TYPE.MODAL_BUTTON_ACTION,\n        actionText: '',\n    },\n    {\n        id: 'BLOCKLY_ANNOUNCE',\n        icon: IconAnnounce,\n        title: localize('Google Blockly v10 update'),\n        message: localize('We have updated our Blockly system in Deriv Bot from version 3 to version 10.'),\n        date: '24 July 2024 00:00 UTC',\n        buttonAction: BUTTON_ACTION_TYPE.MODAL_BUTTON_ACTION,\n        actionText: '',\n    },\n    {\n        id: 'ACCUMULATOR_ANNOUNCE',\n        icon: IconAnnounce,\n        title: localize('Accumulators is now on Deriv Bot'),\n        message: localize('Boost your trading strategy with Accumulators.'),\n        date: '2 July 2024 00:00 UTC',\n        buttonAction: BUTTON_ACTION_TYPE.MODAL_BUTTON_ACTION,\n        actionText: '',\n    },\n];\n","import { load, save_types } from '@deriv/bot-skeleton';\nimport { ANNOUNCEMENTS, BUTTON_ACTION_TYPE, TAnnouncement, TAnnouncementItem } from '../config';\n\nexport const handleOnConfirmAccumulator = () => {\n    import(/* webpackChunkName: `[request]` */ '@deriv/bot-skeleton/src/scratch/xml/main.xml')\n        .then(strategy_xml => {\n            const strategy_dom = Blockly.utils.xml.textToDom(strategy_xml.default);\n            const modifyFieldDropdownValues = (name: string, value: string) => {\n                const name_list = `${name.toUpperCase()}_LIST`;\n                const el_blocks = strategy_dom?.querySelectorAll(`field[name=\"${name_list}\"]`);\n\n                el_blocks?.forEach((el_block: HTMLElement) => {\n                    el_block.textContent = value;\n                });\n            };\n            modifyFieldDropdownValues('tradetypecat', 'accumulator');\n\n            const { derivWorkspace: workspace } = Blockly;\n\n            load({\n                block_string: Blockly.Xml.domToText(strategy_dom),\n                file_name: 'Strategy with accumulator trade type',\n                workspace,\n                from: save_types.UNSAVED,\n                drop_event: null,\n                strategy_id: null,\n                showIncompatibleStrategyDialog: null,\n            });\n        })\n        .catch(error => {\n            /* eslint-disable no-console */\n            console.error('Failed to load strategy XML:', error);\n        });\n};\n\nexport const performButtonAction = (\n    item: TAnnouncementItem,\n    modalButtonAction: (announce_id: string, announcement: TAnnouncement) => void,\n    handleRedirect: (url: string) => void\n) => {\n    switch (item.buttonAction) {\n        case BUTTON_ACTION_TYPE.MODAL_BUTTON_ACTION: {\n            return modalButtonAction(item.id, ANNOUNCEMENTS[item.id]);\n        }\n        case BUTTON_ACTION_TYPE.REDIRECT_BUTTON_ACTION: {\n            const urlRedirect = ANNOUNCEMENTS[item.id].url_redirect;\n            if (urlRedirect) {\n                return handleRedirect(urlRedirect);\n            }\n            return false;\n        }\n        default:\n            return false;\n    }\n};\n","import React from 'react';\nimport { Dialog, Text } from '@deriv/components';\nimport { LabelPairedCheckCaptionFillIcon } from '@deriv/quill-icons';\nimport { rudderStackSendCloseEvent } from '../../../analytics/rudderstack-common-events';\nimport { IconAnnounceModal } from './announcement-components';\nimport { TAnnounce, TContentItem } from './config';\nimport './announcement-dialog.scss';\n\ntype TAccumulatorAnnouncementDialog = {\n    announcement: TAnnounce;\n    is_announce_dialog_open: boolean;\n    setIsAnnounceDialogOpen: (is_announce_dialog_open: boolean) => void;\n    handleOnConfirm: () => void;\n    handleOnCancel: (() => void) | null;\n    is_tablet?: boolean;\n};\n\nconst AnnouncementDialog = ({\n    announcement,\n    handleOnConfirm,\n    handleOnCancel,\n    is_announce_dialog_open,\n    setIsAnnounceDialogOpen,\n    is_tablet,\n}: TAccumulatorAnnouncementDialog) => {\n    const {\n        id,\n        main_title,\n        confirm_button_text,\n        cancel_button_text,\n        base_classname,\n        title,\n        content,\n        numbered_content,\n        plain_text,\n        unordered_list,\n        media,\n        event_name,\n    } = announcement;\n    return (\n        <Dialog\n            portal_element_id='modal_root_absolute'\n            title={main_title}\n            is_visible={is_announce_dialog_open}\n            confirm_button_text={confirm_button_text}\n            onConfirm={handleOnConfirm}\n            cancel_button_text={cancel_button_text}\n            onCancel={handleOnCancel}\n            is_mobile_full_width\n            has_close_icon\n            onClose={() => {\n                setIsAnnounceDialogOpen(false);\n                rudderStackSendCloseEvent({\n                    subform_name: 'announcements',\n                    announcement_name: event_name,\n                });\n            }}\n            className={is_tablet ? `${base_classname} ${base_classname}--tablet` : base_classname}\n        >\n            <div className={`${base_classname}__body-text`}>\n                <div className={`${base_classname}__body-icon--${id.toLowerCase()}`}>\n                    <IconAnnounceModal announce_id={id} />\n                </div>\n                {Array.isArray(media) && (\n                    <>\n                        {media.map((src, index) => (\n                            <img className={`${base_classname}__image`} key={index} src={src} alt={src} />\n                        ))}\n                    </>\n                )}\n                <div className={`${base_classname}__body-main-content`}>\n                    <Text as='p' size='xs' className={`${base_classname}__title--${id.toLowerCase()}`}>\n                        {title}\n                    </Text>\n                    {Array.isArray(content) &&\n                        content.map((content_item: TContentItem) => {\n                            return (\n                                <div className={`${base_classname}__body-item`} key={content_item?.id}>\n                                    <div>\n                                        <LabelPairedCheckCaptionFillIcon fill='var(--icon-black-plus)' />\n                                    </div>\n                                    <Text as='p' line_height='l' size='xs'>\n                                        {content_item?.text}\n                                    </Text>\n                                </div>\n                            );\n                        })}\n                    {Array.isArray(unordered_list) && (\n                        <ul className={`${base_classname}__unordered_list`} key={0}>\n                            {unordered_list.map((content_item: TContentItem) => (\n                                <li key={content_item?.id}>\n                                    <Text as='p' line_height='l' size='xs'>\n                                        {content_item?.text}\n                                    </Text>\n                                </li>\n                            ))}\n                        </ul>\n                    )}\n                    {Array.isArray(numbered_content) && (\n                        <ol className={`${base_classname}__body-item--numbered`}>\n                            {numbered_content.map((content: TContentItem) => (\n                                <Text\n                                    as='li'\n                                    line_height='xl'\n                                    size='xs'\n                                    key={content?.id}\n                                    styles={{ listStyle: 'auto' }}\n                                >\n                                    {content?.text}\n                                </Text>\n                            ))}\n                        </ol>\n                    )}\n                    {Array.isArray(plain_text) && (\n                        <div>\n                            {plain_text.map((plain_text_item: TContentItem) => (\n                                <span key={plain_text_item?.id}>\n                                    <Text\n                                        line_height='m'\n                                        size='xs'\n                                        key={plain_text_item.id}\n                                        styles={{ listStyle: 'auto' }}\n                                    >\n                                        {plain_text_item.text}\n                                    </Text>\n                                </span>\n                            ))}\n                        </div>\n                    )}\n                </div>\n            </div>\n        </Dialog>\n    );\n};\n\nexport default AnnouncementDialog;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { useHistory } from 'react-router-dom';\nimport { Text } from '@deriv/components';\nimport { StandaloneBullhornRegularIcon } from '@deriv/quill-icons';\nimport { observer } from '@deriv/stores';\nimport { localize } from '@deriv/translations';\nimport { Notifications as Announcement } from '@deriv-com/ui';\nimport { useDBotStore } from 'Stores/useDBotStore';\nimport { rudderStackSendOpenEvent } from '../../../analytics/rudderstack-common-events';\nimport {\n    rudderStackSendAnnouncementActionEvent,\n    rudderStackSendAnnouncementClickEvent,\n} from '../../../analytics/rudderstack-dashboard';\nimport { guide_content } from '../../tutorials/constants';\nimport { performButtonAction } from './utils/accumulator-helper-functions';\nimport { MessageAnnounce, TitleAnnounce } from './announcement-components';\nimport AnnouncementDialog from './announcement-dialog';\nimport { BOT_ANNOUNCEMENTS_LIST, TAnnouncement, TNotifications } from './config';\nimport './announcements.scss';\n\ntype TAnnouncements = {\n    is_mobile?: boolean;\n    is_tablet?: boolean;\n    handleTabChange: (item: number) => void;\n};\n\nconst Announcements = observer(({ is_mobile, is_tablet, handleTabChange }: TAnnouncements) => {\n    const {\n        load_modal: { toggleLoadModal },\n        dashboard: { showVideoDialog },\n        quick_strategy: { setFormVisibility },\n    } = useDBotStore();\n    const [is_announce_dialog_open, setIsAnnounceDialogOpen] = React.useState(false);\n    const [is_open_announce_list, setIsOpenAnnounceList] = React.useState(false);\n    const [selected_announcement, setSelectedAnnouncement] = React.useState<TAnnouncement | null>(null);\n    const [read_announcements_map, setReadAnnouncementsMap] = React.useState({} as Record<string, boolean>);\n    const [amount_active_announce, setAmountActiveAnnounce] = React.useState(0);\n    const history = useHistory();\n    const [notifications, setNotifications] = React.useState([] as TNotifications[]);\n    const action_button_class_name = 'announcements__label';\n\n    const storeDataInLocalStorage = (updated_local_storage_data: Record<string, boolean>) => {\n        localStorage?.setItem('bot-announcements', JSON.stringify(updated_local_storage_data));\n    };\n\n    const updateLocalStorage = (announce_id: string) => {\n        let data: Record<string, boolean> | null = null;\n        data = JSON.parse(localStorage.getItem('bot-announcements') ?? '{}');\n        storeDataInLocalStorage({ ...data, [announce_id]: false });\n        const temp_notifications = updateNotifications();\n        setReadAnnouncementsMap(temp_notifications);\n    };\n\n    const modalButtonAction = (announce_id: string, announcement: TAnnouncement) => () => {\n        setSelectedAnnouncement(announcement);\n        setIsAnnounceDialogOpen(true);\n        setIsOpenAnnounceList(prev => !prev);\n        rudderStackSendAnnouncementClickEvent({ announcement_name: announcement.announcement.event_name });\n        updateLocalStorage(announce_id);\n    };\n\n    const handleRedirect = (url: string) => () => {\n        if (history) {\n            history.push(url);\n        }\n    };\n\n    const updateNotifications = () => {\n        let data: Record<string, boolean> | null = null;\n        data = JSON.parse(localStorage.getItem('bot-announcements') ?? '{}');\n        const tmp_notifications: TNotifications[] = [];\n        const temp_localstorage_data: Record<string, boolean> | null = {};\n        BOT_ANNOUNCEMENTS_LIST.map(item => {\n            let is_not_read = true;\n            if (data && Object.hasOwn(data, item.id)) {\n                is_not_read = data[item.id];\n            }\n\n            tmp_notifications.push({\n                key: item.id,\n                icon: <item.icon announce={is_not_read} />,\n                title: <TitleAnnounce title={item.title} announce={is_not_read} />,\n                message: <MessageAnnounce message={item.message} date={item.date} announce={is_not_read} />,\n                buttonAction: performButtonAction(item, modalButtonAction, handleRedirect),\n                actionText: item.actionText,\n            });\n            temp_localstorage_data[item.id] = is_not_read;\n        });\n        setNotifications(tmp_notifications);\n        return temp_localstorage_data;\n    };\n\n    React.useEffect(() => {\n        const temp_localstorage_data = updateNotifications();\n        storeDataInLocalStorage(temp_localstorage_data);\n        setReadAnnouncementsMap(temp_localstorage_data);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    React.useEffect(() => {\n        const number_ammount_active_announce = Object.values(read_announcements_map).filter(value => value).length;\n        setAmountActiveAnnounce(number_ammount_active_announce);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [read_announcements_map]);\n\n    const openAccumulatorsVideo = () => {\n        const accumulators_video = guide_content.find(guide_content => guide_content.id === 4);\n        if (accumulators_video) {\n            showVideoDialog({ url: accumulators_video.url, type: 'url' });\n        }\n    };\n\n    const handleOnCancel = () => {\n        rudderStackSendAnnouncementActionEvent({\n            announcement_name: selected_announcement?.announcement.event_name,\n            announcement_action: selected_announcement?.announcement?.event_action?.cancel_button_text,\n        });\n        if (selected_announcement?.switch_tab_on_cancel) {\n            handleTabChange(selected_announcement.switch_tab_on_cancel);\n            if (selected_announcement.announcement.id === 'ACCUMULATOR_ANNOUNCE') {\n                openAccumulatorsVideo();\n            }\n        }\n        selected_announcement?.onCancel?.();\n        setSelectedAnnouncement(null);\n    };\n\n    const handleOnConfirm = () => {\n        rudderStackSendAnnouncementActionEvent({\n            announcement_name: selected_announcement?.announcement.event_name,\n            announcement_action: selected_announcement?.announcement?.event_action?.confirm_button_text,\n        });\n        if (selected_announcement?.switch_tab_on_confirm) {\n            handleTabChange(selected_announcement.switch_tab_on_confirm);\n        }\n        if (selected_announcement?.should_toggle_qs_modal) {\n            setFormVisibility(true);\n        }\n        if (selected_announcement?.should_toggle_load_modal) {\n            toggleLoadModal();\n        }\n        selected_announcement?.onConfirm?.();\n        setSelectedAnnouncement(null);\n    };\n\n    const clearNotificationsCallback = () => {\n        const temp_read_announcements_map = Object.fromEntries(\n            Object.keys(read_announcements_map).map(key => [key, false])\n        );\n        storeDataInLocalStorage(temp_read_announcements_map);\n        const temp_notifications = updateNotifications();\n        setReadAnnouncementsMap(temp_notifications);\n    };\n\n    return (\n        <div className='announcements'>\n            <button\n                className='announcements__button'\n                onClick={() => {\n                    setIsOpenAnnounceList(prevState => !prevState);\n                    if (!is_open_announce_list) {\n                        rudderStackSendOpenEvent({\n                            subform_name: 'announcements',\n                            subform_source: 'dashboard',\n                        });\n                    }\n                }}\n                data-testid='btn-announcements'\n            >\n                <StandaloneBullhornRegularIcon fill='var(--icon-black-plus)' iconSize='sm' />\n                {!is_mobile && (\n                    <Text size='xs' line_height='s' className={action_button_class_name}>\n                        {localize('Announcements')}\n                    </Text>\n                )}\n                {amount_active_announce !== 0 && (\n                    <div className='announcements__amount'>\n                        <p data-testid='announcements__amount'>{amount_active_announce}</p>\n                    </div>\n                )}\n            </button>\n            <div className='notifications__wrapper'>\n                <Announcement\n                    className={classNames('', {\n                        'notifications__wrapper--mobile': is_mobile,\n                        'notifications__wrapper--desktop': !is_mobile,\n                        'notifications__wrapper--tablet': is_tablet,\n                    })}\n                    clearNotificationsCallback={clearNotificationsCallback}\n                    componentConfig={{\n                        clearButtonText: localize('Mark all as read'),\n                        modalTitle: localize('Announcements'),\n                        noNotificationsMessage: '',\n                        noNotificationsTitle: '',\n                    }}\n                    isOpen={is_open_announce_list}\n                    setIsOpen={setIsOpenAnnounceList}\n                    notifications={notifications}\n                    excludedClickOutsideClass={action_button_class_name}\n                    {...(is_mobile && { appElement: document.getElementById('modal_root') })}\n                />\n            </div>\n            {selected_announcement?.announcement && (\n                <AnnouncementDialog\n                    announcement={selected_announcement.announcement}\n                    is_announce_dialog_open={is_announce_dialog_open}\n                    setIsAnnounceDialogOpen={setIsAnnounceDialogOpen}\n                    handleOnCancel={!selected_announcement?.should_not_be_cancel ? handleOnCancel : null}\n                    handleOnConfirm={handleOnConfirm}\n                    is_tablet={is_tablet}\n                />\n            )}\n        </div>\n    );\n});\n\nexport default Announcements;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Text } from '@deriv/components';\nimport { observer, useStore } from '@deriv/stores';\nimport { localize } from '@deriv/translations';\nimport { useDBotStore } from 'Stores/useDBotStore';\nimport OnboardTourHandler from '../tutorials/dbot-tours/onboarding-tour';\nimport Cards from './cards';\nimport InfoPanel from './info-panel';\nimport Announcements from './announcements/announcements';\n\ntype TMobileIconGuide = {\n    handleTabChange: (active_number: number) => void;\n};\n\nconst DashboardComponent = observer(({ handleTabChange }: TMobileIconGuide) => {\n    const { ui } = useStore();\n    const { load_modal, dashboard } = useDBotStore();\n    const { dashboard_strategies } = load_modal;\n    const { active_tab, active_tour } = dashboard;\n    const has_dashboard_strategies = !!dashboard_strategies?.length;\n    const { is_desktop, is_tablet } = ui;\n\n    return (\n        <React.Fragment>\n            <div\n                className={classNames('tab__dashboard', {\n                    'tab__dashboard--tour-active': active_tour,\n                })}\n            >\n                <div className='tab__dashboard__content'>\n                    <Announcements is_mobile={!is_desktop} is_tablet={is_tablet} handleTabChange={handleTabChange} />\n                    <div className='quick-panel'>\n                        <div\n                            className={classNames('tab__dashboard__header', {\n                                'tab__dashboard__header--listed': is_desktop && has_dashboard_strategies,\n                            })}\n                        >\n                            {!has_dashboard_strategies && (\n                                <Text\n                                    className='title'\n                                    as='h2'\n                                    color='prominent'\n                                    size={is_desktop ? 'sm' : 's'}\n                                    line_height='xxl'\n                                    weight='bold'\n                                >\n                                    {localize('Load or build your bot')}\n                                </Text>\n                            )}\n                            <Text\n                                as='p'\n                                color='prominent'\n                                line_height='s'\n                                size={is_desktop ? 's' : 'xxs'}\n                                className={classNames('subtitle', { 'subtitle__has-list': has_dashboard_strategies })}\n                            >\n                                {localize(\n                                    'Import a bot from your computer or Google Drive, build it from scratch, or start with a quick strategy.'\n                                )}\n                            </Text>\n                        </div>\n                        <Cards has_dashboard_strategies={has_dashboard_strategies} is_mobile={!is_desktop} />\n                    </div>\n                </div>\n            </div>\n            <InfoPanel />\n            {active_tab === 0 && <OnboardTourHandler is_mobile={!is_desktop} />}\n        </React.Fragment>\n    );\n});\n\nexport default DashboardComponent;\n","import Dashboard from './dashboard';\nimport './dashboard.scss';\n\nexport default Dashboard;\n","import React from 'react';\nimport TradeAnimation from 'Components/trade-animation';\n\nconst RunStrategy = () => (\n    <div className='toolbar__section' data-testid='dt_run_strategy'>\n        <TradeAnimation className='toolbar__animation' />\n    </div>\n);\n\nexport default RunStrategy;\n","import NoSearchResult from './no-search-result';\n\nexport default NoSearchResult;\n","import React from 'react';\nimport { Icon, Text } from '@deriv/components';\nimport { observer } from '@deriv/stores';\nimport { Localize } from '@deriv/translations';\nimport { useDBotStore } from 'Stores/useDBotStore';\n\nconst NoSearchResult = observer(() => {\n    const { dashboard } = useDBotStore();\n    const { faq_search_value } = dashboard;\n    return (\n        <div className='dc-tabs__content dc-tabs__content--no-result' data-testid='no-search-result'>\n            <Icon icon='IcDbotNoSearchResult' size={80} />\n            <Text className='dc-tabs__content--no-result__title' as='h1' weight='bold' line_height='xxs'>\n                <Localize i18n_default_text='No results found' />\n            </Text>\n            <Text className='dc-tabs__content--no-result__content' line_height='xxs'>\n                <Localize i18n_default_text={`We couldn’t find anything matching \"${faq_search_value}\".`} />\n            </Text>\n            <Text className='dc-tabs__content--no-result__content' line_height='xxs'>\n                <Localize i18n_default_text={`Try another term.`} />\n            </Text>\n        </div>\n    );\n});\n\nexport default NoSearchResult;\n","import React, { KeyboardEvent } from 'react';\nimport { isDbotRTL } from '@deriv/bot-skeleton/src/utils/workspace';\nimport { Icon, Text } from '@deriv/components';\nimport { observer, useStore } from '@deriv/stores';\nimport { Localize } from '@deriv/translations';\nimport { rudderStackSendSelectQsStrategyGuideEvent } from '../../../analytics/rudderstack-tutorials';\nimport { STRATEGIES } from '../../bot-builder/quick-strategy/config';\nimport StrategyTabContent from '../../bot-builder/quick-strategy/form-wrappers/strategy-tab-content';\n\ntype Tcontent = {\n    qs_name: string;\n    content: string[];\n    type: string;\n};\n\ntype TQuickStrategyGuides = {\n    quick_strategy_tab_content: Tcontent[];\n    tutorial_selected_strategy: string;\n    setTutorialSelectedStrategy: (value: string) => void;\n};\n\nconst QuickStrategyGuidesDetail = observer(\n    ({ quick_strategy_tab_content, tutorial_selected_strategy, setTutorialSelectedStrategy }: TQuickStrategyGuides) => {\n        const { ui } = useStore();\n        const { is_desktop } = ui;\n        const text_size = is_desktop ? 's' : 'xs';\n\n        const scrollToTop = () => {\n            const qs_guide = document.querySelector('.tutorials-mobile__qs-guide');\n            if (qs_guide) {\n                qs_guide.scrollTop = 0;\n            }\n        };\n\n        return (\n            <>\n                {tutorial_selected_strategy === '' ? (\n                    <div className='tutorials-quick-strategy__cards'>\n                        {quick_strategy_tab_content?.map(({ qs_name, content, type }, index) => (\n                            <div\n                                className='tutorials-quick-strategy__placeholder'\n                                key={type}\n                                onClick={() => {\n                                    setTutorialSelectedStrategy(qs_name);\n                                    rudderStackSendSelectQsStrategyGuideEvent({ selected_strategy: qs_name });\n                                    scrollToTop();\n                                }}\n                                tabIndex={index}\n                                data-testid={'dt_quick_strategy_guides_details'}\n                                onKeyDown={(e: KeyboardEvent) => {\n                                    if (e.key === 'Enter') {\n                                        setTutorialSelectedStrategy(qs_name);\n                                    }\n                                }}\n                            >\n                                <div>\n                                    <div className='tutorials-quick-strategy__placeholder__title'>\n                                        <Text\n                                            align='center'\n                                            weight='bold'\n                                            color='prominent'\n                                            line_height='s'\n                                            size={text_size}\n                                        >\n                                            {type}\n                                        </Text>\n                                    </div>\n                                    <div className='tutorials-quick-strategy__placeholder__content'>\n                                        <ul>\n                                            {content.map(data => (\n                                                <li key={data}>\n                                                    <Text\n                                                        align='center'\n                                                        color='prominent'\n                                                        line_height='s'\n                                                        size={text_size}\n                                                        className='tutorials-quick-strategy__placeholder__content__text'\n                                                    >\n                                                        {data}\n                                                    </Text>\n                                                </li>\n                                            ))}\n                                        </ul>\n                                    </div>\n                                </div>\n                                <Icon\n                                    className='tutorials-quick-strategy__placeholder__icon'\n                                    icon={isDbotRTL() ? 'IcChevronLeftBold' : 'IcChevronRightBold'}\n                                />\n                            </div>\n                        ))}\n                    </div>\n                ) : (\n                    <>\n                        <div className='tutorials-quick-strategy__breadcrumb'>\n                            <Text\n                                className='tutorials-quick-strategy__breadcrumb__clickable'\n                                color='prominent'\n                                line_height='s'\n                                size={text_size}\n                                as='div'\n                                onClick={() => {\n                                    setTutorialSelectedStrategy('');\n                                }}\n                            >\n                                <Localize i18n_default_text={'Quick strategy guides >'} />\n                            </Text>\n                            <Text color='less-prominent' line_height='s' size={text_size} as='div'>\n                                <Localize i18n_default_text={`About ${STRATEGIES[tutorial_selected_strategy].label}`} />\n                            </Text>\n                        </div>\n                        <Text color='prominent' line_height='s' size={text_size} weight='bold' as='div'>\n                            <Localize i18n_default_text={`About ${STRATEGIES[tutorial_selected_strategy].label}`} />\n                        </Text>\n                        <StrategyTabContent tutorial_selected_strategy={tutorial_selected_strategy} />\n                    </>\n                )}\n            </>\n        );\n    }\n);\n\nexport default QuickStrategyGuidesDetail;\n","import { TEvents } from '@deriv-com/analytics';\nimport { ACTION, form_name, TSelectedStrategy } from './constants';\nimport { getRsStrategyType } from './utils';\nimport { cacheTrackEvents } from '@deriv/shared';\n\nexport const rudderStackSendSelectQsStrategyGuideEvent = ({ selected_strategy }: TSelectedStrategy) => {\n    cacheTrackEvents.loadEvent([\n        {\n            event: {\n                name: 'ce_bot_form',\n                properties: {\n                    action: ACTION.SELECT_QUICK_STRATEGY_GUIDE,\n                    form_name,\n                    subpage_name: 'tutorials',\n                    strategy_name: getRsStrategyType(selected_strategy),\n                },\n            },\n        },\n    ]);\n};\n\nexport const rudderStackSendTutorialSearchEvent = ({ search_term }: TEvents['ce_bot_form']) => {\n    cacheTrackEvents.loadEvent([\n        {\n            event: {\n                name: 'ce_bot_form',\n                properties: {\n                    action: ACTION.SEARCH,\n                    form_name,\n                    subpage_name: 'tutorials',\n                    search_term,\n                },\n            },\n        },\n    ]);\n};\n","import React from 'react';\nimport { Text } from '@deriv/components';\nimport { useStore } from '@deriv/stores';\nimport { localize } from '@deriv/translations';\nimport { useDBotStore } from 'Stores/useDBotStore';\nimport QuickStrategyGuidesDetail from './quick-strategy-guides-details';\nimport './index.scss';\n\nconst QuickStrategyGuides = () => {\n    const { ui } = useStore();\n    const { is_desktop } = ui;\n    const { dashboard } = useDBotStore();\n    const { quick_strategy_tab_content } = dashboard;\n    const [tutorial_selected_strategy, setTutorialSelectedStrategy] = React.useState('');\n\n    return (\n        <div className='tutorials-quick-strategy'>\n            {tutorial_selected_strategy === '' && quick_strategy_tab_content.length > 0 && (\n                <Text\n                    className='tutorials-quick-strategy__title'\n                    weight='bold'\n                    color='prominent'\n                    line_height='s'\n                    size={is_desktop ? 's' : 'xs'}\n                    as='div'\n                >\n                    {localize('Quick strategy guides')}\n                </Text>\n            )}\n            <QuickStrategyGuidesDetail\n                tutorial_selected_strategy={tutorial_selected_strategy}\n                setTutorialSelectedStrategy={setTutorialSelectedStrategy}\n                quick_strategy_tab_content={quick_strategy_tab_content}\n            />\n        </div>\n    );\n};\n\nexport default QuickStrategyGuides;\n","import React, { KeyboardEvent } from 'react';\nimport parse from 'html-react-parser';\nimport { Accordion, Text } from '@deriv/components';\nimport { useStore } from '@deriv/stores';\nimport { Localize } from '@deriv/translations';\nimport { DBOT_TABS } from 'Constants/bot-contents';\nimport { useDBotStore } from 'Stores/useDBotStore';\nimport { TDescription } from '../tutorials.types';\n\ntype TFAQContent = {\n    faq_list: TFAQList[];\n    handleTabChange: (active_number: number) => void;\n};\n\ntype TFAQList = {\n    title: string;\n    description: TDescription[];\n    search_id?: string;\n};\n\nconst FAQ = ({ type, content = '', src, imageclass, is_mobile }: TDescription) => {\n    if (type === 'image') return <img src={src} className={imageclass} />;\n    const parsed_content = parse(content);\n    return (\n        <Text\n            as='p'\n            size={is_mobile ? 'xs' : 's'}\n            line_height={is_mobile ? 'xl' : 'xxl'}\n            className='faq__description'\n            weight='normal'\n            key={content}\n        >\n            {parsed_content}\n        </Text>\n    );\n};\n\nexport const scrollToElement = (wrapper_element: HTMLElement, offset: number) => {\n    if (wrapper_element) {\n        wrapper_element.scrollTo({\n            top: offset,\n            behavior: 'smooth',\n        });\n    }\n};\n\nconst FAQContent = ({ faq_list, handleTabChange }: TFAQContent) => {\n    const { ui } = useStore();\n    const { is_desktop } = ui;\n    const { dashboard } = useDBotStore();\n    const { faq_title, setFaqTitle } = dashboard;\n\n    const handleAccordionOpen = () => {\n        faq_list.forEach(data => {\n            if (data.search_id === faq_title) {\n                document.querySelectorAll('.faq__title').forEach((data, index) => {\n                    if (Number(faq_title.split('-')[1]) === index) {\n                        data.click();\n                        setFaqTitle('');\n                        handleTabChange(DBOT_TABS.TUTORIAL);\n                    }\n                });\n            }\n        });\n    };\n\n    React.useEffect(() => {\n        handleAccordionOpen();\n    }, []);\n\n    const faq_wrapper_element = React.useRef<HTMLDivElement>(null);\n    const timer_id = React.useRef<ReturnType<typeof setTimeout> | null>(null);\n\n    const handleAccordionClick = () => {\n        // Scroll to the top of the open accordion item.\n        // Need timer to first close the accordion item then scroll the new item to top.\n        timer_id.current = setTimeout(() => {\n            const open_accordion_element: HTMLElement | null | undefined =\n                faq_wrapper_element.current?.querySelector('.dc-accordion__item--open');\n            const previous_sibling_element = open_accordion_element?.previousElementSibling as HTMLElement;\n            if (faq_wrapper_element.current && open_accordion_element) {\n                const offset = previous_sibling_element ? previous_sibling_element.offsetTop - 80 : 0;\n                const desktop_scroll_element = document.querySelector('.dc-tabs__content--tutorials') as HTMLElement;\n                const mobile_scroll_element = document.querySelector('.tutorials-mobile__faq') as HTMLElement;\n                const scroll_element = is_desktop ? desktop_scroll_element : mobile_scroll_element;\n                scrollToElement(scroll_element, offset);\n            }\n            if (timer_id?.current) clearTimeout(timer_id.current);\n        }, 5);\n    };\n\n    const handleKeyboardEvent = (e: KeyboardEvent) => {\n        if (e.key === 'Enter') handleAccordionClick();\n    };\n\n    React.useEffect(() => {\n        return () => {\n            if (timer_id.current) clearTimeout(timer_id.current);\n        };\n    }, []);\n\n    const getList = () => {\n        return faq_list.map(({ title, description }: TFAQList) => ({\n            header: (\n                <Text\n                    as='p'\n                    line_height='xl'\n                    className='faq__title'\n                    weight='bold'\n                    key={title}\n                    size={is_desktop ? 's' : 'xs'}\n                >\n                    {title}\n                </Text>\n            ),\n            content: description?.map((item, index) => (\n                <FAQ {...item} is_mobile={!is_desktop} key={`faq-description-item-${item?.content}-${index}`} />\n            )),\n        }));\n    };\n\n    return React.useMemo(\n        () => (\n            <div className='faq__wrapper' data-testid='dt_faq_wrapper' ref={faq_wrapper_element}>\n                {faq_list?.length > 0 && (\n                    <>\n                        <Text\n                            as='p'\n                            line_height='xl'\n                            className='faq__wrapper__header'\n                            weight='bold'\n                            size={is_desktop ? 's' : 'xs'}\n                        >\n                            <Localize i18n_default_text='FAQ' />\n                        </Text>\n                        <div\n                            data-testid='dt_accordion_test'\n                            onClick={handleAccordionClick}\n                            onKeyDown={handleKeyboardEvent}\n                            tabIndex={0}\n                        >\n                            <Accordion className='faq__wrapper__content' list={getList()} icon_close='' icon_open='' />\n                        </div>\n                    </>\n                )}\n            </div>\n        ),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [faq_list]\n    );\n};\n\nexport default FAQContent;\n","import GuideContent from './guide-content';\n\nexport default GuideContent;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Dialog, Icon, Text } from '@deriv/components';\nimport { useStore } from '@deriv/stores';\nimport { Localize, localize } from '@deriv/translations';\nimport { DBOT_TABS } from 'Constants/bot-contents';\nimport { removeKeyValue } from 'Utils/settings';\nimport { useDBotStore } from 'Stores/useDBotStore';\n\ntype TGuideList = {\n    content?: string;\n    id: number;\n    src?: string;\n    subtype?: string;\n    type: string;\n    url?: string;\n    imageclass?: string;\n};\n\ntype TGuideContent = {\n    guide_tab_content: TGuideList[];\n    video_tab_content: TGuideList[];\n    is_dialog_open: boolean;\n};\n\nconst GuideContent = ({ guide_tab_content, video_tab_content, is_dialog_open }: TGuideContent) => {\n    const { ui } = useStore();\n    const { is_desktop } = ui;\n    const { dashboard } = useDBotStore();\n    const {\n        dialog_options,\n        onCloseDialog: onOkButtonClick,\n        setActiveTab,\n        setTourDialogVisibility,\n        showVideoDialog,\n        setActiveTour,\n        setShowMobileTourDialog,\n    } = dashboard;\n\n    const triggerTour = (type: string) => {\n        if (type === 'OnBoard') {\n            removeKeyValue('onboard_tour_token');\n            setActiveTab(DBOT_TABS.DASHBOARD);\n            if (!is_desktop) setActiveTour('onboarding');\n            setTourDialogVisibility(true);\n        } else {\n            setActiveTab(DBOT_TABS.BOT_BUILDER);\n            if (!is_desktop) setActiveTour('bot_builder');\n            setTourDialogVisibility(true);\n            if (!is_desktop) setShowMobileTourDialog(true);\n        }\n    };\n\n    const handleKeyboardEvent = (e: KeyboardEvent) => {\n        if (e.key === 'Enter') triggerTour('OnBoard');\n    };\n\n    const has_guide_content = guide_tab_content.length > 0 || video_tab_content.length > 0;\n\n    return React.useMemo(\n        () =>\n            has_guide_content && (\n                <div className='tutorials-wrap'>\n                    {guide_tab_content && guide_tab_content.length > 0 && (\n                        <div className='tutorials-wrap__group'>\n                            <div className='tutorials-wrap__group__title'>\n                                <Text\n                                    align='left'\n                                    weight='bold'\n                                    color='prominent'\n                                    line_height='s'\n                                    size={is_desktop ? 's' : 'xs'}\n                                >\n                                    <Localize i18n_default_text='Step-by-step guides' />\n                                </Text>\n                            </div>\n                            <div className='tutorials-wrap__group__guides'>\n                                {guide_tab_content?.map(({ id, content, src, subtype }) => {\n                                    return (\n                                        <div className='tutorials-wrap__group__cards' key={id}>\n                                            <div\n                                                tabIndex={id}\n                                                className='tutorials-wrap--tour'\n                                                onClick={() => triggerTour(subtype)}\n                                                onKeyDown={handleKeyboardEvent}\n                                                data-testid='tutorials-wrap--tour'\n                                            >\n                                                <div\n                                                    className={classNames('tutorials-wrap__placeholder__tours', {\n                                                        'tutorials-wrap__placeholder--disabled': !src,\n                                                    })}\n                                                    style={{\n                                                        backgroundImage: `url(${src})`,\n                                                    }}\n                                                />\n                                            </div>\n                                            <Text\n                                                align='center'\n                                                color='prominent'\n                                                line_height='s'\n                                                size={is_desktop ? 's' : 'xs'}\n                                            >\n                                                {content}\n                                            </Text>\n                                        </div>\n                                    );\n                                })}\n                            </div>\n                        </div>\n                    )}\n\n                    {video_tab_content && video_tab_content.length > 0 && (\n                        <div className='tutorials-wrap__group'>\n                            <div className='tutorials-wrap__group__title'>\n                                <Text\n                                    align='left'\n                                    weight='bold'\n                                    color='prominent'\n                                    line_height='s'\n                                    size={is_desktop ? 's' : 'xs'}\n                                >\n                                    <Localize i18n_default_text='Videos on Deriv Bot' />\n                                </Text>\n                            </div>\n\n                            <div className='tutorials-wrap__group__guides'>\n                                {video_tab_content?.map(({ content, src, url, id }) => {\n                                    return (\n                                        <div className='tutorials-wrap__group__cards' key={id}>\n                                            <div\n                                                className={classNames('tutorials-wrap__placeholder', {\n                                                    'tutorials-wrap__placeholder--disabled': !url,\n                                                })}\n                                                style={{\n                                                    backgroundImage: `url(${src})`,\n                                                }}\n                                            >\n                                                <div className='tutorials-wrap__placeholder__button-group'>\n                                                    <Icon\n                                                        className='tutorials-wrap__placeholder__button-group--play'\n                                                        width='4rem'\n                                                        height='4rem'\n                                                        icon={'IcPlayOutline'}\n                                                        onClick={() =>\n                                                            showVideoDialog({\n                                                                type: 'url',\n                                                                url,\n                                                            })\n                                                        }\n                                                    />\n                                                </div>\n                                            </div>\n                                            <div className='tutorials-wrap__placeholder__description'>\n                                                <Text\n                                                    align='left'\n                                                    color='prominent'\n                                                    line_height='s'\n                                                    size={is_desktop ? 's' : 'xs'}\n                                                >\n                                                    {content}\n                                                </Text>\n                                            </div>\n                                        </div>\n                                    );\n                                })}\n                            </div>\n                        </div>\n                    )}\n\n                    <Dialog\n                        title={dialog_options.title}\n                        is_visible={is_dialog_open}\n                        cancel_button_text={localize('Cancel')}\n                        onCancel={onOkButtonClick}\n                        confirm_button_text={localize('OK')}\n                        onConfirm={onOkButtonClick}\n                        is_mobile_full_width\n                        className={'dc-dialog'}\n                        has_close_icon\n                        onClose={onOkButtonClick}\n                    >\n                        <iframe width='100%' height='100%' src={dialog_options.url} frameBorder='0' allowFullScreen />\n                    </Dialog>\n                </div>\n            ),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [guide_tab_content, video_tab_content, is_dialog_open]\n    );\n};\n\nexport default GuideContent;\n","import React from 'react';\nimport debounce from 'lodash.debounce';\nimport { observer } from '@deriv/stores';\nimport { localize } from '@deriv/translations';\nimport { DEBOUNCE_INTERVAL_TIME } from 'Constants/bot-contents';\nimport { useDBotStore } from 'Stores/useDBotStore';\nimport { rudderStackSendTutorialSearchEvent } from '../../../../analytics/rudderstack-tutorials';\n\ntype TSearchInput = {\n    faq_value: string;\n    setFaqSearchContent: (value: string) => void;\n    prev_active_tutorials: number;\n};\n\nconst SearchInput = observer(({ faq_value, setFaqSearchContent, prev_active_tutorials }: TSearchInput) => {\n    const { dashboard } = useDBotStore();\n    const input_ref = React.useRef(null);\n    const { setActiveTabTutorial, filterTuotrialTab } = dashboard;\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const debounceChange = React.useCallback(\n        debounce(\n            value => {\n                filterTuotrialTab(value);\n                setActiveTabTutorial(3);\n                rudderStackSendTutorialSearchEvent({ search_term: value });\n                if (value === '') {\n                    setActiveTabTutorial(prev_active_tutorials);\n                }\n            },\n            DEBOUNCE_INTERVAL_TIME,\n            {\n                trailing: true,\n                leading: false,\n            }\n        ),\n        []\n    );\n    const onSearch = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setFaqSearchContent(event.target.value);\n        debounceChange(event.target.value);\n    };\n\n    return (\n        <>\n            <input\n                ref={input_ref}\n                data-testid='id-test-input-search'\n                type='text'\n                placeholder={localize('Search')}\n                className='dc-tabs__wrapper__group__search-input'\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => onSearch(event)}\n                value={faq_value}\n            />\n        </>\n    );\n});\n\nexport default SearchInput;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Icon, Tabs } from '@deriv/components';\nimport { observer } from '@deriv/stores';\nimport { useDBotStore } from 'Stores/useDBotStore';\nimport SearchInput from './common/search-input';\nimport { TTutorialsTabItem } from './tutorials';\n\ntype TTutorialsTabDesktop = {\n    tutorial_tabs: TTutorialsTabItem[];\n    prev_active_tutorials: number;\n};\n\nconst TutorialsTabDesktop = observer(({ tutorial_tabs, prev_active_tutorials }: TTutorialsTabDesktop) => {\n    const { dashboard } = useDBotStore();\n\n    const { active_tab_tutorials, faq_search_value, setActiveTabTutorial, setFAQSearchValue, resetTutorialTabContent } =\n        dashboard;\n    const search = faq_search_value?.toLowerCase();\n\n    const onCloseHandleSearch = () => {\n        setFAQSearchValue('');\n        resetTutorialTabContent();\n        setActiveTabTutorial(prev_active_tutorials);\n    };\n\n    React.useEffect(() => {\n        if (faq_search_value !== '') {\n            setActiveTabTutorial(3);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [active_tab_tutorials]);\n\n    return (\n        <div className='dc-tabs__wrapper' data-testid='tutorials-tab-desktop'>\n            <div className='dc-tabs__wrapper__group'>\n                <Icon\n                    className='search-icon'\n                    data_testid='id-test-search'\n                    width='1.6rem'\n                    height='1.6rem'\n                    icon='IcSearch'\n                />\n                <SearchInput\n                    faq_value={faq_search_value}\n                    setFaqSearchContent={setFAQSearchValue}\n                    prev_active_tutorials={prev_active_tutorials}\n                />\n                {search && (\n                    <Icon\n                        className='close-icon'\n                        data_testid='id-test-close'\n                        width='1.6rem'\n                        height='1.6rem'\n                        icon='IcDbotClose'\n                        onClick={onCloseHandleSearch}\n                    />\n                )}\n            </div>\n            <Tabs\n                className={classNames('tutorials', {\n                    'tutorials-guide': prev_active_tutorials === 0,\n                    'tutorials-faq': prev_active_tutorials === 1,\n                    'tutorials-qs-guide': prev_active_tutorials === 2,\n                    'tutorials-search': active_tab_tutorials === 3,\n                })}\n                active_index={active_tab_tutorials}\n                onTabItemClick={setActiveTabTutorial}\n                top\n            >\n                {tutorial_tabs?.map(\n                    ({ label, content }) =>\n                        content && (\n                            <div label={label} key={`${content}_${label}`}>\n                                {content}\n                            </div>\n                        )\n                )}\n            </Tabs>\n        </div>\n    );\n});\n\nexport default TutorialsTabDesktop;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Icon, SelectNative } from '@deriv/components';\nimport { TListItem } from '@deriv/components/src/components/dropdown/utility';\nimport { observer } from '@deriv/stores';\nimport { useDBotStore } from 'Stores/useDBotStore';\nimport SearchInput from './common/search-input';\nimport { TTutorialsTabItem } from './tutorials';\n\ntype TTutorialsTabMobile = {\n    tutorial_tabs: TTutorialsTabItem[];\n    prev_active_tutorials: number;\n};\n\nconst TutorialsTabMobile = observer(({ tutorial_tabs, prev_active_tutorials }: TTutorialsTabMobile) => {\n    const { dashboard } = useDBotStore();\n    const { active_tab_tutorials, faq_search_value, setActiveTabTutorial, setFAQSearchValue, resetTutorialTabContent } =\n        dashboard;\n\n    const search = faq_search_value?.toLowerCase();\n    const initialSelectedTab: TTutorialsTabItem = { label: '', content: undefined };\n    const [selectedTab, setSelectedTab] = React.useState(initialSelectedTab);\n    const [showSearchBar, setShowSearchBar] = React.useState(false);\n    const scroll_ref = React.useRef<HTMLDivElement & SVGSVGElement>(null);\n\n    React.useEffect(() => {\n        if (search) setShowSearchBar(true);\n        setSelectedTab(tutorial_tabs[active_tab_tutorials] || {});\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [tutorial_tabs]);\n\n    const onFocusSearch = () => setActiveTabTutorial(3);\n\n    const scrollToTop = () => {\n        if (scroll_ref.current) {\n            scroll_ref.current.scrollTop = 0;\n        }\n    };\n\n    const onChangeHandle = React.useCallback(\n        ({ target }: React.ChangeEvent<HTMLSelectElement>) =>\n            setActiveTabTutorial(tutorial_tabs.findIndex(i => i.label === target.value)),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [active_tab_tutorials]\n    );\n\n    const onHandleChangeMobile = () => {\n        setShowSearchBar(!showSearchBar);\n    };\n\n    const onClickBackButton = () => {\n        setFAQSearchValue('');\n        setShowSearchBar(!showSearchBar);\n        resetTutorialTabContent();\n        setActiveTabTutorial(prev_active_tutorials);\n        setSelectedTab(tutorial_tabs[prev_active_tutorials] || {});\n    };\n\n    const onCloseHandleSearch = () => {\n        onFocusSearch();\n        setFAQSearchValue('');\n        setActiveTabTutorial(prev_active_tutorials);\n        resetTutorialTabContent();\n    };\n\n    React.useEffect(() => {\n        const selectElement = document.getElementById('dt_components_select-native_select-tag') as HTMLSelectElement;\n\n        if (selectElement) {\n            selectElement.removeChild(selectElement?.options[3]);\n        }\n    }, []);\n\n    return (\n        <div className='tutorials-mobile' data-testid='test-tutorials-mobile'>\n            <div\n                className={classNames('tutorials-mobile__select', {\n                    'tutorials-mobile__select--show-search': showSearchBar,\n                    'tutorials-mobile__select--hide-search': !showSearchBar,\n                })}\n                data-testid={showSearchBar ? 'id-search-visible' : 'id-search-hidden'}\n            >\n                <Icon\n                    onClick={onClickBackButton}\n                    data_testid='id-arrow-left-bold'\n                    className='arrow-left-bold'\n                    icon='IcArrowLeftBold'\n                />\n                <SearchInput\n                    faq_value={faq_search_value}\n                    setFaqSearchContent={setFAQSearchValue}\n                    prev_active_tutorials={prev_active_tutorials}\n                />\n                {search && (\n                    <Icon\n                        data_testid='id-close-icon'\n                        className='close-icon'\n                        data-testid='id-test-search'\n                        width='1.6rem'\n                        height='1.6rem'\n                        icon='IcDbotClose'\n                        onClick={onCloseHandleSearch}\n                    />\n                )}\n\n                <SelectNative\n                    data_testid='id-tutorials-select'\n                    className='dc-tabs__wrapper__group__search-input--active'\n                    list_items={\n                        tutorial_tabs.map(({ label }, idx) => ({\n                            id: idx,\n                            value: label,\n                            text: label,\n                        })) as TListItem[]\n                    }\n                    value={selectedTab.label}\n                    label=''\n                    should_show_empty_option={false}\n                    onChange={e => {\n                        onChangeHandle(e);\n                        scrollToTop();\n                    }}\n                />\n                <Icon\n                    onClick={onHandleChangeMobile}\n                    className='search-icon'\n                    icon='IcSearch'\n                    data_testid='search-icon'\n                />\n            </div>\n            <div\n                className={classNames({\n                    'tutorials-mobile__guide': active_tab_tutorials === 0,\n                    'tutorials-mobile__faq': active_tab_tutorials === 1,\n                    'tutorials-mobile__qs-guide': active_tab_tutorials === 2,\n                    'tutorials-mobile__search': active_tab_tutorials === 3,\n                })}\n                ref={scroll_ref}\n            >\n                {selectedTab.content}\n            </div>\n        </div>\n    );\n});\n\nexport default TutorialsTabMobile;\n","import React from 'react';\nimport { observer, useStore } from '@deriv/stores';\nimport { localize } from '@deriv/translations';\nimport { useDBotStore } from 'Stores/useDBotStore';\nimport NoSearchResult from './common/no-search-result-found';\nimport QuickStrategyGuides from './quick-strategy-content/quick-strategy-guides';\nimport FAQContent from './faq-content';\nimport GuideContent from './guide-content';\nimport TutorialsTabDesktop from './tutorials-tab-desktop';\nimport TutorialsTabMobile from './tutorials-tab-mobile';\n\ntype TTutorialsTab = {\n    handleTabChange: (active_number: number) => void;\n};\n\nexport type TTutorialsTabItem = {\n    label: string;\n    content?: JSX.Element;\n};\n\nconst TutorialsTab = observer(({ handleTabChange }: TTutorialsTab) => {\n    const { ui } = useStore();\n    const { is_desktop } = ui;\n    const { dashboard } = useDBotStore();\n    const [prev_active_tutorials, setPrevActiveTutorialsTab] = React.useState<number | null>(0);\n\n    const {\n        active_tab_tutorials,\n        video_tab_content,\n        guide_tab_content,\n        faq_tab_content,\n        is_dialog_open,\n        quick_strategy_tab_content,\n    } = dashboard;\n\n    React.useEffect(() => {\n        if ([0, 1, 2].includes(active_tab_tutorials)) {\n            setPrevActiveTutorialsTab(active_tab_tutorials);\n        }\n    }, [active_tab_tutorials]);\n\n    const has_content_guide_tab =\n        guide_tab_content.length > 0 ||\n        video_tab_content.length > 0 ||\n        faq_tab_content.length > 0 ||\n        quick_strategy_tab_content.length > 0;\n\n    const tutorial_tabs: TTutorialsTabItem[] = [\n        {\n            label: localize('Guide'),\n            content: (\n                <GuideContent\n                    is_dialog_open={is_dialog_open}\n                    guide_tab_content={guide_tab_content}\n                    video_tab_content={video_tab_content}\n                />\n            ),\n        },\n        {\n            label: localize('FAQ'),\n            content: <FAQContent faq_list={faq_tab_content} handleTabChange={handleTabChange} />,\n        },\n        {\n            label: localize('Quick strategy guides'),\n            content: <QuickStrategyGuides quick_strategy_tab_content={quick_strategy_tab_content} />,\n        },\n        {\n            label: localize('Search'),\n            content: has_content_guide_tab ? (\n                <>\n                    <GuideContent\n                        is_dialog_open={is_dialog_open}\n                        guide_tab_content={guide_tab_content}\n                        video_tab_content={video_tab_content}\n                    />\n                    <FAQContent faq_list={faq_tab_content} />\n                    <QuickStrategyGuides quick_strategy_tab_content={quick_strategy_tab_content} />\n                </>\n            ) : (\n                <NoSearchResult />\n            ),\n        },\n    ];\n\n    return is_desktop ? (\n        <TutorialsTabDesktop tutorial_tabs={tutorial_tabs} prev_active_tutorials={prev_active_tutorials} />\n    ) : (\n        <TutorialsTabMobile tutorial_tabs={tutorial_tabs} prev_active_tutorials={prev_active_tutorials} />\n    );\n});\n\nexport default TutorialsTab;\n","import TutorialTab from './tutorials';\nimport './tutorials.scss';\n\nexport default TutorialTab;\n","import React, { useEffect } from 'react';\nimport classNames from 'classnames';\nimport { updateWorkspaceName } from '@deriv/bot-skeleton';\nimport dbot from '@deriv/bot-skeleton/src/scratch/dbot';\nimport { api_base } from '@deriv/bot-skeleton/src/services/api/api-base';\nimport { isDbotRTL } from '@deriv/bot-skeleton/src/utils/workspace';\nimport { Dialog, Tabs } from '@deriv/components';\nimport { observer, useStore } from '@deriv/stores';\nimport { Localize, localize } from '@deriv/translations';\nimport TradingViewModal from 'Components/trading-view-chart/trading-view-modal';\nimport { DBOT_TABS, TAB_IDS } from 'Constants/bot-contents';\nimport { useDBotStore } from 'Stores/useDBotStore';\nimport RunPanel from '../../components/run-panel';\nimport Chart from '../chart';\nimport ChartModal from '../chart/chart-modal';\nimport Dashboard from '../dashboard';\nimport RunStrategy from '../dashboard/run-strategy';\nimport Tutorial from '../tutorials';\nimport { tour_list } from '../tutorials/dbot-tours/utils';\n\nconst AppWrapper = observer(() => {\n    const { dashboard, load_modal, run_panel, quick_strategy, summary_card } = useDBotStore();\n    const {\n        active_tab,\n        active_tour,\n        is_chart_modal_visible,\n        is_trading_view_modal_visible,\n        setActiveTab,\n        setWebSocketState,\n        setActiveTour,\n        setTourDialogVisibility,\n    } = dashboard;\n    const { onEntered, dashboard_strategies } = load_modal;\n    const { is_dialog_open, is_drawer_open, dialog_options, onCancelButtonClick, onCloseDialog, onOkButtonClick } =\n        run_panel;\n    const { is_open } = quick_strategy;\n    const { cancel_button_text, ok_button_text, title, message } = dialog_options as { [key: string]: string };\n    const { clear } = summary_card;\n    const { DASHBOARD, BOT_BUILDER } = DBOT_TABS;\n    const init_render = React.useRef(true);\n    const { ui } = useStore();\n    const { url_hashed_values, is_desktop } = ui;\n\n    const hash = ['dashboard', 'bot_builder', 'chart', 'tutorial'];\n\n    let tab_value: number | string = active_tab;\n    const GetHashedValue = (tab: number) => {\n        tab_value = url_hashed_values?.split('#')[1];\n        if (!tab_value) return tab;\n        return Number(hash.indexOf(String(tab_value)));\n    };\n    const active_hash_tab = GetHashedValue(active_tab);\n\n    const checkAndHandleConnection = () => {\n        const api_status = api_base.getConnectionStatus();\n        //added this check because after sleep mode all the store values refresh and is_running is false.\n        const is_bot_running = document.getElementById('db-animation__stop-button') !== null;\n        if (is_bot_running && (api_status === 'Closed' || api_status === 'Closing')) {\n            dbot.terminateBot();\n            clear();\n            setWebSocketState(false);\n        }\n    };\n\n    React.useEffect(() => {\n        window.addEventListener('focus', checkAndHandleConnection);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n\n        return () => {\n            window.removeEventListener('focus', checkAndHandleConnection);\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    React.useEffect(() => {\n        if (is_open) {\n            setTourDialogVisibility(false);\n        }\n\n        if (init_render.current) {\n            setActiveTab(Number(active_hash_tab));\n            if (!is_desktop) handleTabChange(Number(active_hash_tab));\n            init_render.current = false;\n        } else {\n            window.location.hash = hash[active_tab] || hash[0];\n        }\n        if (active_tour !== '') {\n            setActiveTour('');\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [active_tab]);\n\n    React.useEffect(() => {\n        const trashcan_init_id = setTimeout(() => {\n            if (active_tab === BOT_BUILDER && window.Blockly?.derivWorkspace?.trashcan) {\n                const trashcanY = window.innerHeight - 250;\n                let trashcanX;\n                if (is_drawer_open) {\n                    trashcanX = isDbotRTL() ? 380 : window.innerWidth - 460;\n                } else {\n                    trashcanX = isDbotRTL() ? 20 : window.innerWidth - 100;\n                }\n                window.Blockly?.derivWorkspace?.trashcan?.setTrashcanPosition(trashcanX, trashcanY);\n            }\n        }, 100);\n\n        return () => {\n            clearTimeout(trashcan_init_id); // Clear the timeout on unmount\n        };\n        //eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [active_tab, is_drawer_open]);\n\n    useEffect(() => {\n        let timer: ReturnType<typeof setTimeout>;\n        if (dashboard_strategies.length > 0) {\n            // Needed to pass this to the Callback Queue as on tab changes\n            // document title getting override by 'Bot | Deriv' only\n            timer = setTimeout(() => {\n                updateWorkspaceName();\n            });\n        }\n        return () => {\n            if (timer) clearTimeout(timer);\n        };\n    }, [dashboard_strategies, active_tab]);\n\n    const handleTabChange = React.useCallback(\n        (tab_index: number) => {\n            setActiveTab(tab_index);\n            const el_id = TAB_IDS[tab_index];\n            if (el_id) {\n                const el_tab = document.getElementById(el_id);\n                setTimeout(() => {\n                    el_tab?.scrollIntoView({ behavior: 'smooth', block: 'center', inline: 'center' });\n                }, 10);\n            }\n        },\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [active_tab]\n    );\n\n    return (\n        <React.Fragment>\n            <div className='main'>\n                <div\n                    className={classNames('main__container', {\n                        'main__container--active': active_tour && active_tab === DASHBOARD && !is_desktop,\n                    })}\n                >\n                    <Tabs\n                        active_index={active_tab}\n                        className='main__tabs'\n                        onTabItemChange={onEntered}\n                        onTabItemClick={handleTabChange}\n                        top\n                    >\n                        <div\n                            icon='IcDashboardComponentTab'\n                            label={<Localize i18n_default_text='Dashboard' />}\n                            id='id-dbot-dashboard'\n                        >\n                            <Dashboard handleTabChange={handleTabChange} />\n                        </div>\n                        <div\n                            icon='IcBotBuilderTabIcon'\n                            label={<Localize i18n_default_text='Bot Builder' />}\n                            id='id-bot-builder'\n                        />\n                        <div\n                            icon='IcChartsTabDbot'\n                            label={<Localize i18n_default_text='Charts' />}\n                            id={\n                                is_chart_modal_visible || is_trading_view_modal_visible\n                                    ? 'id-charts--disabled'\n                                    : 'id-charts'\n                            }\n                        >\n                            <Chart show_digits_stats={false} />\n                        </div>\n                        <div\n                            icon='IcTutorialsTabs'\n                            label={<Localize i18n_default_text='Tutorials' />}\n                            id='id-tutorials'\n                        >\n                            <div className='tutorials-wrapper'>\n                                <Tutorial handleTabChange={handleTabChange} />\n                            </div>\n                        </div>\n                    </Tabs>\n                </div>\n            </div>\n            {is_desktop ? (\n                <>\n                    <div className='main__run-strategy-wrapper'>\n                        {active_tab !== 4 && (\n                            <>\n                                <RunStrategy />\n                                <RunPanel />\n                            </>\n                        )}\n                    </div>\n                    <ChartModal />\n                    <TradingViewModal />\n                </>\n            ) : (\n                !is_open && active_tab !== 4 && <RunPanel />\n            )}\n            <Dialog\n                cancel_button_text={cancel_button_text || localize('Cancel')}\n                className='dc-dialog__wrapper--fixed'\n                confirm_button_text={ok_button_text || localize('Ok')}\n                has_close_icon\n                is_mobile_full_width={false}\n                is_visible={is_dialog_open}\n                onCancel={onCancelButtonClick}\n                onClose={onCloseDialog}\n                onConfirm={onOkButtonClick || onCloseDialog}\n                portal_element_id='modal_root'\n                title={title}\n            >\n                {message}\n            </Dialog>\n        </React.Fragment>\n    );\n});\n\nexport default AppWrapper;\n","import Main from './main';\nimport './main.scss';\n\nexport default Main;\n","import React from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport { api_base, ApiHelpers, ServerTime } from '@deriv/bot-skeleton';\nimport { Loading } from '@deriv/components';\nimport { observer, useStore } from '@deriv/stores';\nimport TransactionDetailsModal from 'Components/transaction-details';\nimport GTM from 'Utils/gtm';\nimport { useDBotStore } from 'Stores/useDBotStore';\nimport Audio from '../components/audio';\nimport BlocklyLoading from '../components/blockly-loading';\nimport BotNotificationMessages from '../components/bot-notification-messages';\nimport BotStopped from '../components/bot-stopped';\nimport NetworkToastPopup from '../components/network-toast-popup';\nimport RoutePromptDialog from '../components/route-prompt-dialog';\nimport BotBuilder from '../pages/bot-builder';\nimport Main from '../pages/main';\nimport './app.scss';\nimport 'react-toastify/dist/ReactToastify.css';\nimport '../components/bot-notification/bot-notification.scss';\n\nconst AppContent = observer(() => {\n    const [is_loading, setIsLoading] = React.useState(true);\n    const RootStore = useStore();\n    const { common, client } = RootStore;\n    const DBotStores = useDBotStore();\n    const { app, transactions } = DBotStores;\n    const { showDigitalOptionsMaltainvestError } = app;\n\n    // TODO: Remove this when connect is removed completely\n    const combinedStore = { ...DBotStores, core: { ...RootStore } };\n\n    const { recovered_transactions, recoverPendingContracts } = transactions;\n    const is_subscribed_to_msg_listener = React.useRef(false);\n    const init_api_interval = React.useRef(null);\n    const msg_listener = React.useRef(null);\n\n    const handleMessage = React.useCallback(\n        ({ data }) => {\n            if (data?.msg_type === 'proposal_open_contract' && !data?.error) {\n                const { proposal_open_contract } = data;\n                if (\n                    proposal_open_contract?.status !== 'open' &&\n                    !recovered_transactions?.includes(proposal_open_contract?.contract_id)\n                ) {\n                    recoverPendingContracts(proposal_open_contract);\n                }\n            }\n        },\n        [recovered_transactions, recoverPendingContracts]\n    );\n\n    const checkIfApiInitialized = React.useCallback(() => {\n        init_api_interval.current = setInterval(() => {\n            if (api_base?.api) {\n                clearInterval(init_api_interval.current);\n\n                // Listen for proposal open contract messages to check\n                // if there is any active contract from bot still running\n                if (api_base?.api && !is_subscribed_to_msg_listener.current) {\n                    is_subscribed_to_msg_listener.current = true;\n                    msg_listener.current = api_base.api.onMessage()?.subscribe(handleMessage);\n                }\n            }\n        }, 500);\n    }, [handleMessage]);\n\n    React.useEffect(() => {\n        // Check until api is initialized and then subscribe to the api messages\n        // Also we should only subscribe to the messages once user is logged in\n        // And is not already subscribed to the messages\n        if (!is_subscribed_to_msg_listener.current && client.is_logged_in) {\n            checkIfApiInitialized();\n        }\n        return () => {\n            if (is_subscribed_to_msg_listener.current && msg_listener.current) {\n                is_subscribed_to_msg_listener.current = false;\n                msg_listener.current.unsubscribe();\n            }\n        };\n    }, [checkIfApiInitialized, client.is_logged_in, client.loginid]);\n\n    React.useEffect(() => {\n        showDigitalOptionsMaltainvestError(client, common);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [client.is_options_blocked, client.account_settings.country_code, client.clients_country]);\n\n    const init = () => {\n        GTM.init(combinedStore);\n        ServerTime.init(common);\n        app.setDBotEngineStores(combinedStore);\n        ApiHelpers.setInstance(app.api_helpers_store);\n    };\n\n    const changeActiveSymbolLoadingState = () => {\n        init();\n        const { active_symbols } = ApiHelpers.instance;\n        active_symbols.retrieveActiveSymbols(true).then(() => {\n            setIsLoading(false);\n        });\n    };\n\n    React.useEffect(() => {\n        init();\n        setIsLoading(true);\n        if (!client.is_logged_in) {\n            changeActiveSymbolLoadingState();\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    React.useEffect(() => {\n        if (client.is_logged_in && client.is_landing_company_loaded) {\n            changeActiveSymbolLoadingState();\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [client.is_landing_company_loaded]);\n\n    React.useEffect(() => {\n        const onDisconnectFromNetwork = () => {\n            setIsLoading(false);\n        };\n        window.addEventListener('offline', onDisconnectFromNetwork);\n        return () => {\n            window.removeEventListener('offline', onDisconnectFromNetwork);\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return is_loading ? (\n        <Loading />\n    ) : (\n        <>\n            <BlocklyLoading />\n            <div className='bot-dashboard bot' data-testid='dt_bot_dashboard'>\n                <Audio />\n                <BotNotificationMessages />\n                <Main />\n                <NetworkToastPopup />\n                <BotBuilder />\n                <BotStopped />\n                <RoutePromptDialog />\n                <TransactionDetailsModal />\n                <ToastContainer limit={3} draggable={false} />\n            </div>\n        </>\n    );\n});\n\nexport default AppContent;\n","/**\n * Computes the SHA-256 hash of a JavaScript object.\n * @param {T extends object} object - The object to be hashed.\n * @returns {Promise<string>} A Promise that resolves to the SHA-256 hash of the input object as a hexadecimal string.\n * @throws {Error} Throws an error if the hashing operation fails or if the input is not a valid object.\n */\n/**\n * @deprecated Please use 'ObjectUtils.hashObject' from '@deriv-com/utils' instead of this.\n */\nexport const hashObject = async <T extends object>(object: T) => {\n    const messageBuffer = new TextEncoder().encode(JSON.stringify(object));\n    const hashBuffer = await crypto.subtle.digest('SHA-256', messageBuffer);\n    const hashArray = Array.from(new Uint8Array(hashBuffer));\n    const hashHex = hashArray.map(b => `00${b.toString(16)}`.slice(-2)).join('');\n    return hashHex;\n};\n","import React, { PropsWithChildren, createContext, useCallback, useContext, useEffect, useRef, useState } from 'react';\n// @ts-expect-error `@deriv/deriv-api` is not in TypeScript, Hence we ignore the TS error.\nimport DerivAPIBasic from '@deriv/deriv-api/dist/DerivAPIBasic';\nimport { getAppId, getSocketURL, useWS } from '@deriv/shared';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport {\n    TSocketEndpointNames,\n    TSocketError,\n    TSocketRequestPayload,\n    TSocketResponseData,\n    TSocketSubscribableEndpointNames,\n} from '../types';\nimport { hashObject } from './utils';\n\ntype TSendFunction = <T extends TSocketEndpointNames>(\n    name: T,\n    payload?: TSocketRequestPayload<T>\n) => Promise<TSocketResponseData<T> & TSocketError<T>>;\n\ntype TSubscribeFunction = <T extends TSocketSubscribableEndpointNames>(\n    name: T,\n    payload?: TSocketRequestPayload<T>\n) => Promise<{ id: string; subscription: DerivAPIBasic['subscribe'] }>;\n\ntype TUnsubscribeFunction = (id: string) => void;\n\ntype APIContextData = {\n    derivAPI: DerivAPIBasic | null;\n    switchEnvironment: (loginid: string | null | undefined) => void;\n    send: TSendFunction;\n    subscribe: TSubscribeFunction;\n    unsubscribe: TUnsubscribeFunction;\n    queryClient: QueryClient;\n};\n\nconst APIContext = createContext<APIContextData | null>(null);\n\ndeclare global {\n    interface Window {\n        ReactQueryClient?: QueryClient;\n        DerivAPI?: Record<string, DerivAPIBasic>;\n        WSConnections?: Record<string, WebSocket>;\n    }\n}\n\n// This is a temporary workaround to share a single `QueryClient` instance between all the packages.\nconst getSharedQueryClientContext = (): QueryClient => {\n    if (!window.ReactQueryClient) {\n        window.ReactQueryClient = new QueryClient();\n    }\n\n    return window.ReactQueryClient;\n};\n\n/**\n * Retrieves the WebSocket URL based on the current environment.\n * @returns {string} The WebSocket URL.\n */\nconst getWebSocketURL = () => {\n    const endpoint = getSocketURL();\n    const app_id = getAppId();\n    const language = localStorage.getItem('i18n_language');\n    const brand = 'deriv';\n    const wss_url = `wss://${endpoint}/websockets/v3?app_id=${app_id}&l=${language}&brand=${brand}`;\n\n    return wss_url;\n};\n\n/**\n * Retrieves or initializes a WebSocket instance based on the provided URL.\n * @param {string} wss_url - The WebSocket URL.\n * @returns {WebSocket} The WebSocket instance associated with the provided URL.\n */\nconst getWebsocketInstance = (wss_url: string, onWSClose: () => void) => {\n    if (!window.WSConnections) {\n        window.WSConnections = {};\n    }\n\n    const existingWebsocketInstance = window.WSConnections[wss_url];\n    if (\n        !existingWebsocketInstance ||\n        !(existingWebsocketInstance instanceof WebSocket) ||\n        [2, 3].includes(existingWebsocketInstance.readyState)\n    ) {\n        window.WSConnections[wss_url] = new WebSocket(wss_url);\n        window.WSConnections[wss_url].addEventListener('close', () => {\n            if (typeof onWSClose === 'function') onWSClose();\n        });\n    }\n\n    return window.WSConnections[wss_url];\n};\n\n/**\n * Retrieves the active WebSocket instance.\n * @returns {WebSocket} The WebSocket instance associated with the provided URL.\n */\nexport const getActiveWebsocket = () => {\n    const wss_url = getWebSocketURL();\n\n    return window?.WSConnections?.[wss_url];\n};\n\n/**\n * Initializes a DerivAPI instance for the global window. This enables a standalone connection\n * without causing race conditions with deriv-app core stores.\n * @returns {DerivAPIBasic} The initialized DerivAPI instance.\n */\nconst initializeDerivAPI = (onWSClose: () => void): DerivAPIBasic => {\n    if (!window.DerivAPI) {\n        window.DerivAPI = {};\n    }\n\n    const wss_url = getWebSocketURL();\n    const websocketConnection = getWebsocketInstance(wss_url, onWSClose);\n\n    if (!window.DerivAPI?.[wss_url] || window.DerivAPI?.[wss_url].isConnectionClosed()) {\n        window.DerivAPI[wss_url] = new DerivAPIBasic({ connection: websocketConnection });\n    }\n\n    return window.DerivAPI?.[wss_url];\n};\n\nconst queryClient = getSharedQueryClientContext();\n\n/**\n * Determines the WS environment based on the login ID and custom server URL.\n * @param {string | null | undefined} loginid - The login ID (can be a string, null, or undefined).\n * @returns {string} Returns the WS environment: 'custom', 'real', or 'demo'.\n */\n/**\n * @deprecated Please use 'WebSocketUtils.getEnvironmentFromLoginid' from '@deriv-com/utils' instead of this.\n */\nconst getEnvironment = (loginid: string | null | undefined) => {\n    const customServerURL = window.localStorage.getItem('config.server_url');\n    if (customServerURL) return 'custom';\n\n    if (loginid && !/^(VRT|VRW)/.test(loginid)) return 'real';\n    return 'demo';\n};\n\ntype TAPIProviderProps = {\n    /** If set to true, the APIProvider will instantiate it's own socket connection. */\n    standalone?: boolean;\n};\n\nconst APIProvider = ({ children, standalone = false }: PropsWithChildren<TAPIProviderProps>) => {\n    const WS = useWS();\n    const [reconnect, setReconnect] = useState(false);\n    const activeLoginid = window.localStorage.getItem('active_loginid');\n    const [environment, setEnvironment] = useState(getEnvironment(activeLoginid));\n    const standaloneDerivAPI = useRef(standalone ? initializeDerivAPI(() => setReconnect(true)) : null);\n    const subscriptions = useRef<Record<string, DerivAPIBasic['subscribe']>>();\n\n    const send: TSendFunction = (name, payload) => {\n        return standaloneDerivAPI.current?.send({ [name]: 1, ...payload });\n    };\n\n    const subscribe: TSubscribeFunction = async (name, payload) => {\n        const id = await hashObject({ name, payload });\n        const matchingSubscription = subscriptions.current?.[id];\n        if (matchingSubscription) return { id, subscription: matchingSubscription };\n\n        const { payload: _payload } = payload ?? {};\n\n        const subscription = standaloneDerivAPI.current?.subscribe({\n            [name]: 1,\n            subscribe: 1,\n            ...(_payload ?? {}),\n        });\n\n        subscriptions.current = { ...(subscriptions.current ?? {}), ...{ [id]: subscription } };\n        return { id, subscription };\n    };\n\n    const unsubscribe: TUnsubscribeFunction = id => {\n        const matchingSubscription = subscriptions.current?.[id];\n        if (matchingSubscription) matchingSubscription.unsubscribe();\n    };\n\n    useEffect(() => {\n        const currentDerivApi = standaloneDerivAPI.current;\n        const currentSubscriptions = subscriptions.current;\n\n        return () => {\n            if (currentSubscriptions) {\n                Object.keys(currentSubscriptions).forEach(key => {\n                    currentSubscriptions[key].unsubscribe();\n                });\n            }\n            if (currentDerivApi && currentDerivApi.connection.readyState === 1) currentDerivApi.disconnect();\n        };\n    }, []);\n\n    const switchEnvironment = useCallback(\n        (loginid: string | null | undefined) => {\n            if (!standalone) return;\n            const currentEnvironment = getEnvironment(loginid);\n            if (currentEnvironment !== 'custom' && currentEnvironment !== environment) {\n                setEnvironment(currentEnvironment);\n            }\n        },\n        [environment, standalone]\n    );\n\n    useEffect(() => {\n        let interval_id: ReturnType<typeof setInterval>;\n\n        if (standalone) {\n            interval_id = setInterval(() => standaloneDerivAPI.current?.send({ ping: 1 }), 10000);\n        }\n\n        return () => clearInterval(interval_id);\n    }, [standalone]);\n\n    useEffect(() => {\n        let reconnectTimerId: NodeJS.Timeout;\n        if (standalone || reconnect) {\n            standaloneDerivAPI.current = initializeDerivAPI(() => {\n                reconnectTimerId = setTimeout(() => setReconnect(true), 500);\n            });\n            setReconnect(false);\n        }\n\n        return () => clearTimeout(reconnectTimerId);\n    }, [environment, reconnect, standalone]);\n\n    return (\n        <APIContext.Provider\n            value={{\n                derivAPI: standalone ? standaloneDerivAPI.current : WS,\n                switchEnvironment,\n                send,\n                subscribe,\n                unsubscribe,\n                queryClient,\n            }}\n        >\n            <QueryClientProvider client={queryClient}>\n                {children}\n                {/* <ReactQueryDevtools /> */}\n            </QueryClientProvider>\n        </APIContext.Provider>\n    );\n};\n\nexport const useAPIContext = () => {\n    const context = useContext(APIContext);\n    if (!context) {\n        throw new Error('useAPIContext must be used within APIProvider');\n    }\n    return context;\n};\n\nexport default APIProvider;\n","import BaseStore from './BaseStore';\n\nconst FLAGS = {\n    dtrader_v2_mobile: false,\n    dtrader_v2_desktop: false,\n    next_qs: false,\n    sharkfin: false,\n    wallet: false,\n} satisfies Record<string, boolean>;\n\nexport default class FeatureFlagsStore extends BaseStore<{ [k in keyof typeof FLAGS]: boolean }> {\n    private static instance: FeatureFlagsStore | null = null;\n\n    constructor() {\n        if (FeatureFlagsStore.instance) {\n            FeatureFlagsStore.instance.cleanup();\n        }\n\n        super('FeatureFlagsStore', () => {\n            // Set the default values for the first time.\n            if (!this.data) this.update(FLAGS);\n            // Update the store data if a new flag was added or removed.\n            if (this.data && Object.keys(this.data).length !== Object.keys(FLAGS).length) {\n                this.update(old => {\n                    const data = FLAGS;\n\n                    Object.keys(FLAGS).forEach(flag => {\n                        // @ts-expect-error flag key is always present in the object, Hence can ignore the TS error.\n                        if (old[flag] !== undefined) data[flag] = old[flag];\n                    });\n\n                    return data;\n                });\n            }\n        });\n\n        this.data = FLAGS;\n        FeatureFlagsStore.instance = this;\n    }\n\n    cleanup() {\n        this.unmount();\n    }\n}\n","import { action, makeObservable, observable } from 'mobx';\nimport { makePersistable, stopPersisting } from 'mobx-persist-store';\n\nexport default class BaseStore<T> {\n    data: T | undefined = undefined;\n\n    constructor(name: string, onHydrationDone?: VoidFunction) {\n        makeObservable(this, {\n            data: observable,\n            update: action.bound,\n            unmount: action.bound,\n        });\n\n        makePersistable(this, { name, properties: ['data'], storage: window.localStorage }).then(() =>\n            onHydrationDone?.()\n        );\n    }\n\n    update(data: NonNullable<T> | ((previous?: T) => NonNullable<T>)) {\n        this.data = data instanceof Function ? data(this.data) : data;\n    }\n\n    unmount() {\n        stopPersisting(this);\n    }\n}\n","import React, { useEffect, useMemo } from 'react';\nimport StoreContext from './storeContext';\nimport { FeatureFlagsStore } from './stores';\nimport type { TCoreStores, TStores } from '../types';\n\nconst StoreProvider = ({ children, store }: React.PropsWithChildren<{ store: TCoreStores }>) => {\n    const memoizedValue: TStores = useMemo(() => {\n        // If the store is mocked for testing purposes, then return the mocked value.\n        if ('is_mock' in store && store.is_mock) return store as unknown as TStores;\n\n        // Otherwise, instantiate store and return it.\n        return {\n            ...store,\n            feature_flags: new FeatureFlagsStore(),\n        };\n    }, [store]);\n\n    useEffect(() => {\n        return () => {\n            Object.values(memoizedValue).forEach(value => {\n                if (typeof value === 'object' && 'unmount' in value) value.unmount();\n            });\n        };\n    }, [memoizedValue]);\n\n    return <StoreContext.Provider value={memoizedValue}>{children}</StoreContext.Provider>;\n};\n\nexport default StoreProvider;\n","import React from 'react';\nimport { APIProvider } from '@deriv/api';\nimport { StoreProvider } from '@deriv/stores';\nimport { TStores } from '@deriv/stores/types';\nimport type { TWebSocket } from 'Types';\nimport { DBotStoreProvider } from 'Stores/useDBotStore';\n\nconst DBotProviders = ({ children, store, WS }: React.PropsWithChildren<{ store: TStores; WS: TWebSocket }>) => {\n    return (\n        <StoreProvider store={store}>\n            <APIProvider>\n                <DBotStoreProvider ws={WS}>{children}</DBotStoreProvider>\n            </APIProvider>\n        </StoreProvider>\n    );\n};\n\nexport default DBotProviders;\n","import { initSurvicate } from '../public-path';\nimport React from 'react';\nimport { TStores } from '@deriv/stores/types';\nimport type { TWebSocket } from 'Types';\nimport AppContent from './app-content';\nimport DBotProviders from './dbot-providers';\n\ntype TAppProps = {\n    passthrough: {\n        WS: TWebSocket;\n        root_store: TStores;\n    };\n};\n\nconst originToDomainMap = {\n    'staging-app.deriv.com': 'staging-dbot.deriv.com',\n    'staging-app.deriv.me': 'staging-dbot.deriv.com',\n    'staging-app.deriv.be': 'staging-dbot.deriv.com',\n    'app.deriv.com': 'dbot.deriv.com',\n    'app.deriv.me': 'dbot.deriv.me',\n    'app.deriv.be': 'dbot.deriv.be',\n};\n\nconst App = ({ passthrough }: TAppProps) => {\n    // Extract the correct domain based on the current origin\n    const targetDomain = originToDomainMap[window.location.host as keyof typeof originToDomainMap];\n\n    // Redirect to the dbot.deriv.com only from staging and production\n    if (targetDomain) {\n        window.location.assign(`https://${targetDomain}`);\n    }\n\n    const { root_store, WS } = passthrough;\n    React.useEffect(() => {\n        // Setting the inner height of the document to the --vh variable to fix the issue\n        // of dynamic view height(vh) on mobile browsers for few scrollable components\n        const vh = window.innerHeight;\n        document.body.style.setProperty('--vh', `${vh}px`);\n\n        initSurvicate();\n        return () => {\n            const survicate_box = document.getElementById('survicate-box');\n            if (survicate_box) {\n                survicate_box.style.display = 'none';\n            }\n        };\n    }, []);\n\n    return (\n        <DBotProviders store={root_store} WS={WS}>\n            <AppContent />\n        </DBotProviders>\n    );\n};\n\nexport default App;\n","import { toast, ToastPosition, TypeOptions } from 'react-toastify';\nimport { isDbotRTL } from '@deriv/bot-skeleton/src/utils/workspace';\nimport { localize } from '@deriv/translations';\n\nconst getToastPosition = () => {\n    const is_RTL = isDbotRTL();\n    if (is_RTL) return toast.POSITION.BOTTOM_RIGHT;\n    return toast.POSITION.BOTTOM_LEFT;\n};\n\nexport type TNotificationContent = {\n    message: string;\n    primary_action?: TAction;\n    closeToast?: () => void;\n};\n\nexport type TAction = {\n    label: string;\n    onClick: (closeToast?: () => void) => void;\n};\n\nexport type TNotificationStyle = {\n    type: TypeOptions;\n    position: ToastPosition;\n    autoClose: number;\n    hideProgressBar: boolean;\n    closeOnClick: boolean;\n    pauseOnHover: boolean;\n    pauseOnFocusLoss: boolean;\n    closeButton: boolean;\n};\n\nexport enum NOTIFICATION_TYPE {\n    BOT_IMPORT = 'BOT_IMPORT',\n    BOT_DELETE = 'BOT_DELETE',\n}\n\nexport const notification_message = {\n    bot_stop: localize('You’ve just stopped the bot. Any open contracts can be viewed on the Reports page.'),\n    workspace_change: localize('Changes you make will not affect your running bot.'),\n    block_delete: localize('You’ve just deleted a block.'),\n    invalid_xml: localize('Your import failed due to an invalid file. Upload a complete file in XML format.'),\n    [NOTIFICATION_TYPE.BOT_IMPORT]: localize('You’ve successfully imported a bot.'),\n    [NOTIFICATION_TYPE.BOT_DELETE]: localize('You’ve successfully deleted a bot.'),\n    strategy_conversion: localize('Save this strategy as an XML file from Deriv Bot for faster re-imports.'),\n    google_drive_error: localize('Your session has expired. Please sign in again.'),\n};\n\nexport const notification_style = {\n    type: toast.TYPE.DEFAULT,\n    position: getToastPosition(),\n    autoClose: 6000,\n    hideProgressBar: true,\n    closeOnClick: false,\n    pauseOnHover: true,\n    pauseOnFocusLoss: false,\n};\n","import React from 'react';\nimport { toast } from 'react-toastify';\nimport { notification_style, TAction, TNotificationContent, TNotificationStyle } from './bot-notification-utils';\n\nexport const NotificationContent: React.FC<TNotificationContent> = ({ message, primary_action, closeToast }) => {\n    React.useEffect(() => {\n        const handleToastVisibility = () => {\n            if (document.visibilityState === 'hidden') {\n                toast.dismiss();\n            }\n        };\n\n        document.addEventListener('visibilitychange', handleToastVisibility);\n\n        return () => {\n            document.removeEventListener('visibilitychange', handleToastVisibility);\n        };\n    }, []);\n\n    return (\n        <div className='notification-content' data-testid='dt_bot_notification'>\n            <div>{message}</div>\n            {primary_action && (\n                <button onClick={() => primary_action.onClick(closeToast)}>{primary_action.label}</button>\n            )}\n        </div>\n    );\n};\n\nexport const botNotification = (\n    message: string,\n    primary_action?: TAction,\n    custom_style?: Partial<TNotificationStyle>\n) => {\n    return toast(\n        ({ closeToast }) => (\n            <NotificationContent message={message} primary_action={primary_action} closeToast={closeToast} />\n        ),\n        {\n            type: custom_style?.type ?? notification_style.type,\n            position: custom_style?.position ?? notification_style.position,\n            autoClose: custom_style?.autoClose ?? notification_style.autoClose,\n            hideProgressBar: custom_style?.hideProgressBar ?? notification_style.hideProgressBar,\n            closeOnClick: custom_style?.closeOnClick ?? notification_style.closeOnClick,\n            pauseOnHover: custom_style?.pauseOnHover ?? notification_style.pauseOnHover,\n            pauseOnFocusLoss: custom_style?.pauseOnFocusLoss ?? notification_style.pauseOnFocusLoss,\n            closeButton: custom_style?.closeButton ?? true,\n        }\n    );\n};\n","export default \"<xml xmlns=\\\"http://www.w3.org/1999/xhtml\\\" collection=\\\"false\\\" is_dbot=\\\"true\\\">\\n  <variables></variables>\\n  <block type=\\\"trade_definition\\\" x=\\\"0\\\" y=\\\"0\\\">\\n    <statement name=\\\"TRADE_OPTIONS\\\">\\n      <block type=\\\"trade_definition_market\\\" deletable=\\\"false\\\" movable=\\\"false\\\">\\n        <field name=\\\"MARKET_LIST\\\"></field>\\n        <field name=\\\"SUBMARKET_LIST\\\"></field>\\n        <field name=\\\"SYMBOL_LIST\\\"></field>\\n        <next>\\n          <block type=\\\"trade_definition_tradetype\\\" deletable=\\\"false\\\" movable=\\\"false\\\">\\n            <field name=\\\"TRADETYPECAT_LIST\\\"></field>\\n            <field name=\\\"TRADETYPE_LIST\\\"></field>\\n            <next>\\n              <block type=\\\"trade_definition_contracttype\\\" deletable=\\\"false\\\" movable=\\\"false\\\">\\n                <field name=\\\"TYPE_LIST\\\"></field>\\n                <next>\\n                  <block type=\\\"trade_definition_candleinterval\\\" deletable=\\\"false\\\" movable=\\\"false\\\">\\n                    <field name=\\\"CANDLEINTERVAL_LIST\\\">60</field>\\n                    <next>\\n                      <block type=\\\"trade_definition_restartbuysell\\\" deletable=\\\"false\\\" movable=\\\"false\\\">\\n                        <field name=\\\"TIME_MACHINE_ENABLED\\\">FALSE</field>\\n                        <next>\\n                          <block type=\\\"trade_definition_restartonerror\\\" deletable=\\\"false\\\" movable=\\\"false\\\">\\n                            <field name=\\\"RESTARTONERROR\\\">TRUE</field>\\n                          </block>\\n                        </next>\\n                      </block>\\n                    </next>\\n                  </block>\\n                </next>\\n              </block>\\n            </next>\\n          </block>\\n        </next>\\n      </block>\\n    </statement>\\n    <statement name=\\\"SUBMARKET\\\">\\n      <block type=\\\"trade_definition_tradeoptions\\\">\\n        <mutation has_first_barrier=\\\"false\\\" has_second_barrier=\\\"false\\\" has_prediction=\\\"false\\\"></mutation>\\n        <field name=\\\"DURATIONTYPE_LIST\\\"></field>\\n        <field name=\\\"CURRENCY_LIST\\\">USD</field>\\n        <value name=\\\"DURATION\\\">\\n          <shadow type=\\\"math_number_positive\\\">\\n            <field name=\\\"NUM\\\">5</field>\\n          </shadow>\\n        </value>\\n        <value name=\\\"AMOUNT\\\">\\n          <shadow type=\\\"math_number_positive\\\">\\n            <field name=\\\"NUM\\\">1</field>\\n          </shadow>\\n        </value>\\n        <field name=\\\"AMOUNT_LIMITS\\\"></field>\\n      </block>\\n    </statement>\\n  </block>\\n  <block type=\\\"during_purchase\\\" x=\\\"720\\\" y=\\\"0\\\">\\n    <statement name=\\\"DURING_PURCHASE_STACK\\\">\\n      <block type=\\\"controls_if\\\">\\n        <value name=\\\"IF0\\\">\\n          <block type=\\\"check_sell\\\"></block>\\n        </value>\\n      </block>\\n    </statement>\\n  </block>\\n  <block type=\\\"after_purchase\\\" x=\\\"720\\\" y=\\\"248\\\">\\n    <statement name=\\\"AFTERPURCHASE_STACK\\\">\\n      <block type=\\\"trade_again\\\"></block>\\n    </statement>\\n  </block>\\n  <block type=\\\"before_purchase\\\" x=\\\"0\\\" y=\\\"576\\\">\\n    <statement name=\\\"BEFOREPURCHASE_STACK\\\">\\n      <block type=\\\"purchase\\\">\\n        <field name=\\\"PURCHASE_LIST\\\"></field>\\n      </block>\\n    </statement>\\n  </block>\\n</xml>\";","var map = {\n\t\"./1_3_2_6.xml\": [\n\t\t9192,\n\t\t982\n\t],\n\t\"./accumulators_dalembert.xml\": [\n\t\t3975,\n\t\t763\n\t],\n\t\"./accumulators_dalembert_on_stat_reset.xml\": [\n\t\t6298,\n\t\t70\n\t],\n\t\"./accumulators_martingale.xml\": [\n\t\t6143,\n\t\t757\n\t],\n\t\"./accumulators_martingale_on_stat_reset.xml\": [\n\t\t6034,\n\t\t632\n\t],\n\t\"./accumulators_reverse_dalembert.xml\": [\n\t\t328,\n\t\t320\n\t],\n\t\"./accumulators_reverse_dalembert_on_stat_reset.xml\": [\n\t\t5794,\n\t\t357\n\t],\n\t\"./accumulators_reverse_martingale.xml\": [\n\t\t6846,\n\t\t728\n\t],\n\t\"./accumulators_reverse_martingale_on_stat_reset.xml\": [\n\t\t2827,\n\t\t445\n\t],\n\t\"./dalembert.xml\": [\n\t\t6515,\n\t\t637\n\t],\n\t\"./dalembert_max-stake.xml\": [\n\t\t2269,\n\t\t631\n\t],\n\t\"./martingale.xml\": [\n\t\t5763,\n\t\t511\n\t],\n\t\"./martingale_max-stake.xml\": [\n\t\t9901,\n\t\t397\n\t],\n\t\"./oscars_grind.xml\": [\n\t\t3243,\n\t\t87\n\t],\n\t\"./oscars_grind_max-stake.xml\": [\n\t\t8175,\n\t\t826\n\t],\n\t\"./reverse_dalembert.xml\": [\n\t\t7612,\n\t\t990\n\t],\n\t\"./reverse_martingale.xml\": [\n\t\t5882,\n\t\t526\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 6176;\nmodule.exports = webpackAsyncContext;"],"names":["CRYPTO_CURRENCIES","config","lists","PAYOUTTYPE","localize","DETAILS","CHECK_RESULT","CHECK_DIRECTION","BALANCE_TYPE","NOTIFICATION_TYPE","NOTIFICATION_SOUND","CURRENCY","concat","opposites","ACCUMULATOR","ACCU","MULTIPLIER","MULTUP","MULTDOWN","CALLPUT","CALL","PUT","CALLPUTEQUAL","CALLE","PUTE","HIGHERLOWER","TOUCHNOTOUCH","ONETOUCH","NOTOUCH","ENDSINOUT","EXPIRYRANGE","EXPIRYMISS","STAYSINOUT","RANGE","UPORDOWN","ASIANS","ASIANU","ASIAND","MATCHESDIFFERS","DIGITMATCH","DIGITDIFF","EVENODD","DIGITEVEN","DIGITODD","OVERUNDER","DIGITOVER","DIGITUNDER","HIGHLOWTICKS","TICKHIGH","TICKLOW","RESET","RESETCALL","RESETPUT","RUNS","RUNHIGH","RUNLOW","CALLPUTSPREAD","CALLSPREAD","PUTSPREAD","BARRIER_TYPES","ohlcFields","candleIntervals","mainBlocks","mandatoryMainBlocks","procedureDefinitionBlocks","single_instance_blocks","TRADE_TYPE_TO_CONTRACT_CATEGORY_MAPPING","callput","asian","digits","TRADE_TYPE_CATEGORIES","multiplier","touchnotouch","inout","reset","callputspread","highlowticks","runs","accumulator","TRADE_TYPE_CATEGORY_NAMES","BARRIER_CATEGORIES","euro_atm","euro_non_atm","american","non_financial","lookback","DEFAULT_DURATION_DROPDOWN_OPTIONS","BARRIER_LABELS","ABSOLUTE_BARRIER_DROPDOWN_OPTION","NOT_AVAILABLE_DROPDOWN_OPTIONS","NOT_AVAILABLE_DURATIONS","display","unit","min","BARRIER_TRADE_TYPES","PREDICTION_TRADE_TYPES","DIGIT_CATEGORIES","INDEPEDENT_BLOCKS","bbResult","macdFields","GOOGLE_DRIVE","SCOPE","DISCOVERY_DOCS","workspaces","flyoutWorkspacesStartScale","mainWorkspaceStartScale","previewWorkspaceStartScale","indentWorkspace","x","y","strategies","martingale","index","label","description","dalembert","oscars_grind","default_file_name","DISABLED_SYMBOLS","DISABLED_SUBMARKETS","QUICK_STRATEGY","DISABLED","SYMBOLS","SUBMARKETS","DEFAULT","symbol","tradetype","durationtype","size","prediction","unrecoverable_errors","MessageTypes","ErrorTypes","LogTypes","save_types","Object","freeze","UNSAVED","LOCAL","_regeneratorRuntime","e","t","r","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","DEFAULT_PROPOSAL_REQUEST","amount","undefined","basis","contract_type","currency","growth_rate","proposal","subscribe","forgetAccumulatorsProposalRequest","_ref","_callee","instance","_api_base$api","_context","is_bot_running","api_base","api","send","forget_all","subscription_id_for_accumulators","is_proposal_requested_for_accumulators","window","Blockly","accumulators_request","arguments","apply","_next","_throw","_x","handleProposalRequestForAccumulators","_instance$childBlocks","_instance$childBlocks2","_instance$childBlocks3","top_parent_block","getTopParent","market_block","getChildByType","getFieldValue","DBotStore","client","childBlocks_","getField","getValue","proposal_request","_objectSpread","requestProposalForQS","input_values","ws","take_profit","limit_order","response","error","reject","_DBotStoreInterface2","store","_this","_classCallCheck","is_mobile","is_dark_mode_on","dashboard","flyout","toolbar","toolbox","save_modal","load_modal","setContractUpdateConfig","toggleStrategyModal","handleFileChange","setLoading","reaction","loginid","createNewInstance","_inherits","_createClass","key","this","singleton","get","DBotStoreInterface","getLast","arr","parseOhlc","ohlc","open","high","low","close","epoch","open_time","getType","isCandle","ownKeys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","_defineProperty","getOwnPropertyDescriptors","defineProperties","_toPropertyKey","_asyncToGenerator","_defineProperties","toPrimitive","String","_toPrimitive","TicksService","forget","forgetAll","forgetCandleSubscription","ticks","Map","candles","tickListeners","ohlcListeners","subscriptions","ticks_history_promise","active_symbols_promise","candles_promise","observe","pipSizes","pip_sizes","_request","options","_this2","granularity","style","has","hasIn","Number","getIn","requestStream","res","_this3","callback","getUUID","request","setIn","globalObserver","emit","toggleRunButton","_stopMonitor","_callee2","_context2","deleteIn","unsubscribeIfEmptyListeners","_x2","_unsubscribeIfEmptyListeners","_callee3","needToUnsubscribe","tickListener","ohlcListener","_context3","unsubscribeAllAndSubscribeListeners","_x3","ohlcSubscriptions","subscription","_toConsumableArray","Array","from","all","map","id","doUntilDone","_this4","set","listeners","address","_this5","_this6","onMessage","newTick","data","msg_type","tick","updateTicksAndCallListeners","quote","parseTick","updateCandlesAndCallListeners","lastCandle","prevCandles","updateCandles","pushSubscription","_this$ticks_history_p","_this7","stringified_options","JSON","stringify","promise","requestPipSizes","requestTicks","_this8","request_object","ticks_history","end","count","history","times","idx","prices","parseCandles","_this9","createScope","observer","Observer","ticksService","stopped","isPositiveNumber","num","isFinite","isPositiveInteger","isInteger","expectInitArg","args","_args","token","createError","contractTypes","expectOptions","candle","every","expectCandle","takeField","field","takeLast","mean","reduce","b","simpleMovingAverage","periods","acc","sum","simpleMovingAverageArray","_config$pipSize","pipSize","sequence","toFixed","bollingerBands","_config$periods","_config$stdDevUp","stdDevUp","_config$stdDevDown","stdDevDown","vals","middle","std_dev","data_mean","sq_diff","Math","pow","avg_sq_diff","sqrt","stddev","upper","lower","bollingerBandsArray","exponentialMovingAverage","init_val","weighting_multiplier","mean_val","exponentialMovingAverageArray","paddingLeft","fill","macdArray","_config$fastEmaPeriod","fastEmaPeriod","_config$slowEmaPeriod","slowEmaPeriod","_config$signalEmaPeri","signalEmaPeriod","fast_ema_array","slow_ema_array","macd_calc_array","signal_ema_array","calcGain","q1","q2","calcLoss","calcFirstAvgDiff","comp","q","diff","calcSecondAvgDiff","init_avg","relativeStrengthIndex","memoized_diff","rest_seq","init_avg_gain","init_avg_loss","gain","loss","avg_gain","avg_loss","relativeStrengthIndexArray","decorate","input","tradeEngine","getPipSize","_len","_key","dateTimeStringToTimestamp","datetime_string","invalid_msg","validated_datetime","date_time","replace","trim","split","test","date_obj","Date","getTime","parseInt","isCandleBlack","candleValues","expectCandles","candleField","notify","console","_console","toString","message","notifyTelegram","access_token","chat_id","text","url","onError","fetch","mode","headers","body","ok","getTotalRuns","getBalance","getTotalProfit","tradeOptions","getMiscInterface","sma","smaa","ema","emaa","rsi","rsia","bb","bba","macda","getIndicatorsInterface","highlightBlock","block_id","block","derivWorkspace","getBlockById","BlockSvg","highlightExecutedBlock","highlight_block_class","utils","dom","hasClass","svgGroup_","addClass","setTimeout","removeClass","getDelayTickValue","getCurrentStat","getStatList","getLastTick","getLastDigit","getTicks","checkDirection","getOhlcFromEnd","getOhlc","getLastDigitList","getProposal","proposals","find","purchase_reference","getPurchaseReference","balance_string","BEFORE_PURCHASE","DURING_PURCHASE","PROPOSALS_READY","CLEAR_PROPOSALS","PURCHASE_SUCCESSFUL","OPEN_CONTRACT","SELL","START","STOP","NEW_TICK","dispatchIfScopeIs","dispatch","getState","scope","proposalsReady","constants","dispatchIfBeforePurchaseReady","dispatchIfScopeIsBeforePurchase","delayIndex","initialState","state","action","openContract","payload","tickListenerKey","_isNativeReflectConstruct","Boolean","valueOf","Reflect","construct","_getPrototypeOf","bind","_setPrototypeOf","skeleton","totalProfit","totalWins","totalLosses","totalStake","totalPayout","totalRuns","globalStat","prevTick","watchScope","stopScope","passScope","passFlag","unsubscribe","newState","TradeEngine","_Balance","$scope","contract","createStore","rootReducer","applyMiddleware","thunk","_expectInitArg2","initArgs","startPromise","loginAndGetBalance","checkTicksPromiseExists","watchTicks","validated_trade_options","validateTradeOptions","checkLimits","makeDirectPurchaseDecision","accountInfo","account_info","_ref2","transaction","transaction_recovery_timeout","is_same_contract","contract_id","is_open_contract","status","proposal_open_contract","observeOpenContract","observeBalance","observeProposals","watchName","watchDuring","_checkBlocksForPropos","checkBlocksForProposalRequest","has_payout_block","is_basis_payout","is_proposal_subscription_required","makeProposals","checkProposalReady","Engine","_Engine","Balance","_callSuper","balance","_data$balance","getFormattedText","info","accountID","Purchase","regeneratePurchaseReference","onSuccess","buy","contractStatus","transaction_id","contractId","renewProposalsOnPurchase","log","PURCHASE","longcode","updateAndReturnTotalRuns","transaction_ids","buy_price","_this$selectProposal","selectProposal","askPrice","price","isSold","timeMachineEnabled","recoverFromError","errorCode","makeDelay","clearProposals","_this2$store$getState","trade_option","tradeOptionToBuy","Sell","isSellAvailable","isExpired","isSellAtMarketAvailable","NOT_OFFERED","delay_index","onContractSold","sell_response","sold_for","sell","waitForAfter","sellContractAndGetContractInfo","code","sell_error","proposal_open_contract_response","is_sold","sell_price","errors_to_ignore","error_code","OpenContract","expectedContractId","setContractFlags","broadcastContract","clearTimeout","updateTotals","afterPromise","is_expired","is_valid_to_sell","entry_tick","hasEntryTick","_this$data$contract","bidPrice","bid_price","buyPrice","getRoundedNumber","Proposal","isNewTradeOption","proposal_templates","tradeOptionToProposal","to_buy","ask_price","requestProposals","has_informed_error","echo_req","passthrough","_response$data","findIndex","template","some","Ticks","ReferenceError","_assertThisInitialized","_possibleConstructorReturn","_watchTicks","stopMonitor","monitor","ticks_list","raw","last_tick","getLastDigitsFromList","dir","getDirection","_ref$granularity","candleInterval","_ref2$index","msg","expectPositiveInteger","_requestAccumulatorStats","_this$tradeOptions","_this$tradeOptions2","_this$tradeOptions3","_this$tradeOptions4","_this$tradeOptions5","subscription_id","is_proposal_requested","_handleOnMessageForAccumulators","ticks_stayed_in_list","_this10","_ref3","stat_list","contract_details","ticks_stayed_in","flat","_fetchStatsForAccumulators","_callee4","_api_base$api2","_this11","_context4","debounce","requestAccumulatorStats","debouncedAccumulatorsRequest","handleOnMessageForAccumulators","t0","_getCurrentStat","_callee5","_context5","fetchStatsForAccumulators","_getStatList","_callee6","_context6","_getDelayTickValue","_callee7","tick_value","_this12","_context7","resolveAndExit","tick_list","Total","sessionRuns","sessionProfit","register","clearStatistics","sellPrice","profit","win","accountStat","getAccountStat","PROFIT","LOST","tradeOption","limitations","_tradeOption$limitati","maxLoss","maxTrades","stop_loss","_class","sleep","getInterface","getDetail","createDetails","init","start","purchase","getAskPrice","getPayout","payout","sellAtMarket","getSellPrice","isResult","result","isTradeAgain","readDetails","getBotInterface","getToolsInterface","getTicksInterface","watch","alert","_alert","prompt","_prompt","_len2","_key2","toLocaleTimeString","isArray","_arrayLikeToArray","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","JSInterpreter","takeStateSnapshot","cloneThorough","stateStack","restoreStateSnapshot","snapshot","global","object","initFunc_","botInitialized","bot","shouldRestartOnError","errorName","includes","onFinish","Interface","interpreter","revert","paused_","loop","run","pseudoToNative","createAsync","js_interpreter","func","asyncFunc","reversed_args","first_defined_arg_idx","function_args","rv","nativeToPseudo","MAX_ACCEPTABLE_FUNC_ARGS","createAsyncFunction","initFunc","bot_interface","custom_console","ticks_interface","setProperty","pseudo_bot_interface","entries","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","startState","beforeState","duringState","_stop","_globalObserver$getSt","_bot$tradeEngine$data","_bot","_bot$tradeEngine3","_bot$tradeEngine3$dat","_bot$tradeEngine3$dat2","global_timeouts","is_timeouts_cancellable","timeout","is_cancellable","is_stopping","terminateSession","is_error_triggered","isMultiplierContract","_terminateSession","clearSubscriptions","unsubscribeFromTicksService","_unsubscribeFromTicksService","_bot$tradeEngine2","shouldStopOnError","botStarted","_bot$tradeEngine","goog","childCtor","parentCtor","tempCtor","superClass_","base","me","methodName","math","Size","width","height","isNumber","removeNode","node","parentNode","removeChild","Coordinate","isDef","scale","difference","coord1","coord2","modifyBlocklyWorkSpaceContextMenu","item_id","ContextMenuRegistry","registry","getItem","preconditionFn","items_to_localize","undoWorkspace","redoWorkspace","cleanWorkspace","collapseWorkspace","expandWorkspace","workspaceDelete","displayText","loadBlockly","BlocklyModule","BlocklyGenerator","BlocklyJavaScriptGenerator","Colours","BlocklyJavaScript","JavaScript","Themes","zelos_renderer","Theme","defineTheme","Zelos","componentStyles","setColors","DBot","terminateConnection","terminate","workspace","before_run_funcs","_initWorkspace","public_path","api_helpers_store","is_dark_mode","recent_files","that","getSavedWorkspaces","Interpreter","Blocks","trade_definition_tradetype","onchange","event","isFlyoutVisible","isDragging","enforceLimitations","Events","BLOCK_CHANGE","is_symbol_list_change","is_trade_type_cat_list_change","contracts_for","ApiHelpers","market","submarket","category","trade_type","getTradeTypeCategories","categories","category_field","updateOptions","default_value","should_pretend_empty","event_group","group","readOnly","run_button","document","querySelector","disabled","_that$interpreter","blockId","getTradeTypes","trade_types","__webpack_public_path__","setInstance","window_width","innerWidth","_document$getElementB","workspaceScale","getElementById","offsetWidth","el_scratch_div","inject","media","renderer","trashcan","zoom","wheel","startScale","scrollbars","theme","RTL","isDbotRTL","cached_xml","main","main_xml","addChangeListener","valueInputLimitationsListener","updateDisabledBlocks","dispatchBlockEventEffects","isStart","validateErrorOnBlockDelete","element","contextMenu","varDB","Names","variableMap","getVariableMap","variableDB_","addBeforeRunFunction","unselectBlocks","disableStrayBlocks","checkForErroredBlocks","checkForRequiredBlocks","current_strategy_id","idGenerator","genUid","strategy_to_load","getMainWorkspace","file_name","latest_file","xml","now","setGroup","Xml","domToWorkspace","textToDom","updateBotName","cleanUp","clearUndo","dispatchEvent","Event","addEventListener","handleDragOver","handleDropOver","overflow","_x4","_x5","current_xml_dom","_recent_files$filter","stored_strategy","strategy","_this3$workspace","stored_strategy_xml","current_xml","domToText","compareXml","_saveRecentWorkspace","_Blockly","_Blockly$Xml","workspaceToDom","isStrategyUpdated","saveWorkspaceToRecent","_initializeInterpreter","generateCode","setIsRunning","stopBot","javascriptGenerator","workspaceToCode","_stopBot","_terminateBot","getSelected","unselect","getTopBlocks","isMainBlock","isIndependentBlock","disableBlocksRecursively","_block$outputConnecti","_block$outputConnecti2","setDisabled","outputConnection","targetConnection","sourceBlock_","error_blocks","getAllBlocks","is_error_highlighted","self","error_message","centerOnBlock","should_animate","block_to_highlight","setErrorHighlighted","blink","_this$workspace","isAllRequiredBlocksEnabled","force_check","hideChaff","BLOCK_DRAG","BLOCK_DELETE","BLOCK_CREATE","UI","inputList","connection","target_block","targetBlock","isChangeInMyInputs","parent_block","getParent","isParentEnabledEvent","unhighlightRecursively","child_blocks","child_block","getChildren","getRequiredValueInputs","required_inputs_object","should_highlight","input_name","is_selected","is_disabled","getInheritedDisabled","isCollapsed","hasErrorHighlightedDescendant","getInput","domToMutation","order","ORDER_ATOMIC","valueToCode","inputValidatorFn","warn","removeSelect","current_collapsed_block","setCollapsed","notify_blocks","strategy_sounds","selected_sound","fieldRow","value_","stopPropagation","preventDefault","dataTransfer","dropEffect","main_workspace_dom","local_drag_zone","contains","target","effectAllowed","RootBlock","colour","colourSecondary","colourTertiary","Base","Special1","Special2","Special3","Special4","saveAs","filename","blob","Blob","filesaver","getContractTypeOptions","toUpperCase","contract_options","option","BlockConversion","blocks_pending_reconnect","createWorkspace","workspace_variables","has_market_block","exception_blocks","generateGrowingListBlock","block_node","block_type","variable_name","child_value_input_name","newBlock","block_child_nodes","children","mutation_dom","child_node","tagName","toLowerCase","items_amount","getAttribute","onIconClick","value_input_name","value_input_index","value_block_node","value_block","convertBlockNode","statement_block","getBlocksInStatement","connect","variable","generateUniqueVariable","variable_block","setFieldValue","getId","block_to_attach","statement_blocks","generateIndicatorBlock","value_input_name_mappings","input_list","old","new","period","fast_ema_period","signal_ema_period","slow_ema_period","std_dev_multiplier_up","std_dev_multiplier_down","bb_result_list","setValue","macd_fields_list","required_child_blocks","required_child_block_name","getLastConnectionInStatement","previousConnection","block_in_statement","value_name_mappings","value_name_mapping","el_value","value_input","el_value_child","converted_block","setShadow","is_symbol_type","block_node_to_use","barrier_inputs","has_prediction","block_child_node","createBarrierInputs","allow_both_types","createPredictionInput","field_name","lists_create_with","text_join","trade","block_fields","trade_definition_market","trade_definition_contracttype","trade_definition_candleinterval","trade_definition_restartbuysell","trade_definition_restartonerror","blocks_to_connect","child_block_name","illegal_blocks","active_symbols","active_symbol","symbol_name","opposites_name","Options","el_injection_div","DocumentFragment","createVirtualWorkspace_","el_block","el_field","textContent","current_previous_connection","previous_block","getPreviousBlock","getSurroundParent","renamed_fields","MARKET_LIST","volidx","TRADETYPECAT_LIST","endsinout","staysinout","callputequal","TRADETYPE_LIST","risefall","risefallequals","innerText","old_name","trade_definition_block","getTradeDefinitionBlock","has_initialization_block","last_connection","unplug","current_name","counter","ws_variable","Variables","getOrCreateVariablePackage","id_","strategy_node","showIncompatibleStrategyDialog","disable","updateRenamedFields","hasAttribute","enable","getIllegalBlocks","illegal_block_type","variable_nodes","block_nodes","strategy_child_node","nodeName","registerVariables","el_variables","el_variable","variable_id","querySelectorAll","previous_sibling_id","previous_sibling_block","sibling_previous_connection","sibling_previous_target_connection","highest_previous_connection","nextConnection","naivelyFixLegacyStrategyAfterConversion","initSvg","renderEfficiently","converted_xml","convertStrategyToIsDbot","conversions","getConversions","is_old_block","is_collapsed","is_immovable","is_undeletable","setBlockAttributes","setMovable","setDeletable","conversion_obj","previous_connection","getClosestLegalPreviousConnection","conversion_parent","el_block_child","FieldVariable","processValueInputs","statement_name","processStatementInputs","closest_statement","closest","el_sibling_block","sibling_block","el_input","el_input_child_block","input_child_block","el_node_with_children","block_to_use","statement_input","supposed_parent_block","useless_block","getInputTargetBlock","current_block","getFirstBlockInStack","is_protected_statement","isConnectedToProtectedStatementInput","new_parent","target_connection","getInputWithConnection","protected_statements","inject_workspace_options","updateXmlValues","blockly_options","strategy_id","convertedDom","block_string","xmlValues","getSelectedTradeType","trade_type_block","selected_trade_type","mandatory_tradeoptions_block","_Blockly$getSelected","_Blockly2","_Blockly2$getSelected","_error_message_map$Bl","_Blockly3","_Blockly3$getSelected","_Blockly$derivWorkspa","_Blockly$derivWorkspa2","match","translate_xy","_extractTranslateValu","svgGroup","parseFloat","translate_X","translate_Y","blockRect","getSvgRoot","getBoundingClientRect","translate_offset","blockX","left","blockY","top","required_block_types","error_message_map","updateWorkspaceName","_load_modal$dashboard","_load_modal$dashboard2","_load_modal$dashboard3","dashboard_strategies","title","indexOf","string_to_replace","substr","new_document_title","save","collection","xmlDom","setAttribute","domToPrettyText","delayExecution","ms","load","drop_event","_DBotStore$instance","setOpenButtonDisabled","setLoadedLocalFile","showInvalidStrategyError","blockConversion","blockly_xml","is_collection","botNotification","notification_message","invalid_xml","DOMParser","parseFromString","getElementsByTagName","t1","convertStrategy","removeLimitedBlocks","xml_block","loadBlocks","loadWorkspace","is_user_disabled_state","log_type","LOAD_BLOCK","t2","added_blocks","blocks_to_clean","_ref$clientX","clientX","_ref$clientY","clientY","blockly_metrics","getMetrics","scale_cancellation","blockly_left","absoluteLeft","viewLeft","blockly_top","offsetHeight","viewHeight","viewTop","cursor_x","cursor_y","cleanUpOnLoad","_ref4","asyncClear","loadBlocksFromRemote","has_possible_missing_index_xml","isKnownUrl","onFetchError","xml_string","addLoaderBlocksFirst","addDomAsBlock","loadBlocksFromHeader","promises","remove","loader","domToBlock","domToVariables","block_conversion","block_xml","blockToDom","el","blocks_added_by_me","throwNewErrorMessage","_error_message_map$bl","_error_message_map$bl2","_error_message_map$bl3","parent_block_error","parent_error_message","childBlock","_error_message_map$ch","child_error_message","mandatory_trade_option_block","required_blocks_check","category_","parentBlock_","getAllRequiredBlocks","missing_blocks","blockType","getMissingBlocks","disabled_blocks","hasDisabledChild","getDisabledBlocks","scrollWorkspace","scroll_amount","is_horizontal","is_chronological","_workspace$scrollbar3","ws_metrics","scroll_x","scrollLeft","delta_y","scrollTop","scroll_y","_document$getElementB2","_workspace$svgBlockCa","_workspace$svgBlockCa2","toolbox_top","svgBlockCanvas_","_workspace$scrollbar","_workspace$svgBlockCa3","_workspace$svgBlockCa4","_workspace$scrollbar2","scrollbar","calc_scroll","runGroupedEvents","use_existing_group","callbackFn","opt_group_name","getGroup","runIrreversibleEvents","recordUndo","setRecordUndo","runInvisibleEvents","restricted_parents","should_disable","restricted_parent","isDescendantOf","emptyTextValidator","appendCollapsedMainBlocksFields","block_instance","_block_instance$input3","collapsed_","_block_instance$input2","block_image","block_name","collapsed_field","COLLAPSED_FIELD_NAME","collapsed_input","COLLAPSED_INPUT_NAME","appendField","FieldImage","FieldLabel","dropdown_path","pathToMedia","field_expand_icon","sourceBlock","setVisible","appendCollapsedProcedureBlocksFields","_tmp_array$","_tmp_array$2","tmp_array","icon_added","_instance$arguments","function_name","join","forceRerender","download_option","enabled","_Blockly4","_Blockly4$getSelected","xml_text","excludeOptionFromContextMenu","menu","exclude_items","menu_text","splice","common_included_items","all_context_menu_options","deleteBlocksLocaleText","deleteAllBlocksLocaleText","modifyContextMenu","item","localized_text","evaluateExpression","Function","setCurrency","currency_field","getCurrencyDisplayCode","ActiveSymbols","trading_times","sortDropdownOptions","dropdown_options","closedFunc","sort","is_a_closed","is_b_closed","disabled_symbols","disabled_submarkets","init_promise","PendingPromise","is_initialised","processed_symbols","is_forced_update","_yield$this$ws$author","initialise","authorized","activeSymbols","processActiveSymbols","onMarketOpenCloseChanged","changes","symbol_obj","exchange_is_open","_retrieveActiveSymbols","isExistingValue","prop","display_name","market_display_name","submarkets","submarket_display_name","symbols","pip_size","pip","is_active","is_trading_suspended","should_be_open","all_symbols","market_name","isMarketClosed","submarket_name","market_display","submarket_display","symbol_display","getSymbolsForBot","symbols_for_bot","market_options","market_option","sorted_options","submarket_options","market_obj","isSubmarketClosed","symbol_options","symbol_display_name","isSymbolClosed","APIBase","account_id","is_running","time_interval","has_activeSymbols","reconnectIfNotConnected","readyState","getActiveSymbols","_ref2$active_symbols","toExponential","substring","toggle","_init","force_update","_args2","getLoginId","generateDerivApiInstance","initEventListeners","authorizeAndSubscribe","clearInterval","_this$api","ready_state","socket_state","disconnect","_createNewInstance","_authorizeAndSubscribe","_getToken","_yield$this$api$expec","authorize","getToken","expectResponse","_subscribe","_","setInterval","time","AccountLimits","landing_company_shortcode","selected_market","landing_company_details","landing_company","_landing_company$land","currency_config","TradingTimes","ContractsFor","account_limits","REQUESTS","APIMiddleware","getRequestType","req_type","defineMeasure","res_type","measure","performance","startTimeDate","startTime","sendIsCalled","response_promise","debounced_calls","socket_url","getSocketURL","getAppId","getLanguage","website_name","deriv_socket","WebSocket","DerivAPIBasic","middleware","login_id","localStorage","active_loginid","client_accounts","parse","active_account","server_time","getAccumulationRange","getHiddenCategories","hidden_categories","j","has_barrier","getTradeTypeOptions","trade_type_category","trade_type_options","is_muliplier","icon","getContractTypes","trade_type_value","opposite","cache_age_in_min","disabled_options","retrieving_contracts_for","_getBarriers","duration","barrier_types","barriers","barrier_props","contracts_for_category","durations","offset_regexp","isOffset","has_absolute_default_value","getContractsByTradeType","getDurations","RegExp","barrier_type","has_selected_offset_type","real_trade_type","getContractCategoryByTradeType","barrier_category","has_matching_category","contract_category","has_matching_duration","has_matching_barrier_category","has_matching_barrier_type","barrier","high_barrier","shift","barrier_prop_name","barrier_match","assign","expiry_type","allow_absolute_type","getTradeTypeCategoryByTradeType","_getContractsByTradeType","contracts","getContractsFor","getBarrierCategoryByTradeType","has_matching_barrier","_x6","_getContractsFor","getContractsForFromApi","_this$contracts_for$s","timestamp","filtered_contracts","available","start_type","unix","_x7","_getDurations","convert_day_to_hours","getDurationIndex","convertDuration","day_duration_index","_args6","unit_to_convert","duration_value","duration_index","target_index","default_duration","converted_duration","min_contract_duration","max_contract_duration","start_index","end_index","max","_x8","_x9","_getPredictionRange","prediction_range","subcategory","last_digit_range","_x10","_x11","_getMultiplierRange","_callee8","multiplier_range","_context8","_x12","_x13","_getMarketBySymbol","_callee9","_context9","_x14","_getSubmarketBySymbol","_callee10","_context10","_x15","_getGroupedTradeTypes","_callee11","trade_type_category_name","_context11","getTradeTypeCategoryNameByTradeType","getTradeTypeByTradeCategory","isDisabledOption","_x16","_getTradeTypeByTradeCategory","_callee12","subcategories","_loop","_context13","has_durations","types","icons","names","_context12","_x17","_x18","_x19","_x20","_getTradeTypesForQuickStrategy","_callee13","filtered_trade_type_categories","trade_type_categories","_i","_trade_type_category","_trade_types","_args14","_context14","getMarketBySymbol","getSubmarketBySymbol","_x21","_getTradeTypeCategories","_callee14","category_names","_context15","_x22","_x23","_x24","_getTradeTypes","_callee15","_context16","_x25","_x26","_x27","_x28","compare_obj","disabled_obj","common_store","clock_started","pending","NetworkMonitor","apiInstance","parentElement","addEvents","navigator","setStatus","onLine","html","ping","clone","timePromise","_initialise","_periodicUpdate","last_update_moment","local","updateTradingTimes","periodicUpdate","next_update_date","now_moment","next_update_moment","is_open_map","wait_period","updateMarketOpenClosed","nextUpdateDate","add","isAfter","is_opened","hour","minute","second","toDate","update_timer","_updateTradingTimes","last_update_date","date_str","getUTCDate","markets","format","tradingTimes","toISOString","processed_times","is_open_all_day","is_closed_all_day","calcIsMarketOpened","_this$trading_times$s","session","nextDate","_this4$trading_times$","symbol_names","className","sound","extra","duration_unit","selected_tick","barrierOffset","secondBarrierOffset","barrier2","isEmptyObject","parameters","app_markup_percentage","barrier_range","date_expiry","date_start","product_type","trading_period_start","_ticks$slice2","tickOld","tickNew","direction","number_string","promiseFn","recoverFn","_error$error$code2","_error$error4","_error$error$code","_error$error2","_error$error3","_error$error","_error$error$details","_error$error$details2","details","updateErrorMessage","is_ignorable_error","shouldThrowError","recoverResolve","getGlobalTimeouts","setState","error_obj","_TRADE_TYPE_CATEGORY_","next_delay_in_seconds","_error_obj$error","_error_obj$msg_type","_error_obj$echo_req","_error$code","_error$message","message_to_print","message_type","delay","req_id","logError","getBackoffDelayInMs","findValueByKeyRecursively","repeatFn","formatTime","entry_tick_time","exit_tick_time","exit_tick","random","CONNECTING","OPEN","CLOSING","CLOSED","generateErrorMessage","missing_space","missing","misplaced","default","trade_definition","trade_parameters","before_purchase","purchase_conditions","trade_definition_tradeoptions","trade_definition_multiplier","trade_definition_accumulator","trackAndEmitError","trackJs","track","getContractTypeName","contract_type_obj","contract_type_names","shortcode_suffix","shortcode","is_risefall","importExternal","script","createElement","src","onload","external_global_component","onerror","appendChild","timeSince","secondPast","minutePast","hourPast","days","timestampDate","day","getDate","month","toDateString","year","getFullYear","pipe","fns","initialValue","nextParam","fn","extractBlocksFromXml","blocks","fields","sortBlockChild","blocksArray","areFieldsEqual","fields1","fields2","_fields1$i","_fields2$i","_fields1$i2","_fields2$i2","xml1","xml2","sortedBlocks1","sortedBlocks2","blocks1","blocks2","_blocks1$i","_blocks2$i","_blocks1$i2","_blocks2$i2","onKeyDownHandleError","handleError","removeErrorHandlingEventListener","removeEventListener","initErrorHandlingListener","save_type","xml_dom","updateListStrategies","workspace_id","current_timestamp","current_workspace_index","current_workspace","bot_name","localForage","LZString","t3","t4","decompress","t5","removeExistingWorkspace","eam","_action","once","unregisterIfError","unregisterAllBefore","unregisterAll","apiError","unregister","unreg","actionList","searchBy","List","_this$state","_resolve","_reject","isPending","onWorkspaceResize","svgResize","block_types","ws_block","dispose","documentElement","path","getUrlBase","location","pathname","get_path","startsWith","getImageLocation","image_name","initSurvicateCalled","createContext","useContext","StoreContext","DRAGGABLE_CONSTANTS","calculateZindex","setZIndex","draggableModals","getElementsByClassName","maxZ","modal","getComputedStyle","zIndex","calculateWidth","_boundaryRect$left","_boundaryRect$width","_self$left","prevWidth","leftOffset","boundaryRect","initialSelfRight","resize_direction","newWidth","minWidth","leftBoundary","boundaryWidth","leftLimit","selfLeft","rightLimit","calculatedPreviousWidth","LEFT","SAFETY_MARGIN","RIGHT","calculateHeight","_boundaryRect$top","_boundaryRect$height","_self$top","prevHeight","topOffset","initialSelfBottom","newHeight","minHeight","topBoundary","boundaryHeight","topLimit","selfTop","bottomLimit","calculatedPreviousHeight","TOP","BOTTOM","boundary","_ref$initialValues","initialValues","xAxis","yAxis","_ref$minWidth","_ref$minHeight","_ref$enableResizing","enableResizing","_ref$enableDragging","enableDragging","_ref$header","header","onClose","_useState2","_slicedToArray","useState","position","setPosition","_useState4","setSize","_useState6","isResizing","useRef","_useState8","setIsDragging","draggableRef","_useState10","BODY_REF","boundaryRef","setBoundaryRef","useEffect","boundaryEl","handleMouseDown","_boundaryRef$offsetTo","_boundaryRef$offsetLe","_event$clientX","_event$clientY","_size$width","_size$height","_position$x","_position$y","_draggableRef$current","_draggableRef$current2","_draggableRef$current3","_draggableRef$current4","_draggableRef$current5","_draggableRef$current6","_draggableRef$current7","current","MOVE","offsetTop","offsetLeft","initialMouseX","initialMouseY","initialWidth","initialHeight","initialX","initialY","right","bottom","previousStyle","previousPointerEvent","draggableContentBody","pointerEvents","handleMouseMove","deltaX","deltaY","handleResize","handleDrag","handleMouseUp","_position$x2","_position$y2","_draggableRef$current8","newX","newY","maxY","maxX","boundedX","boundedY","_previousPointerEvent","_unused","React","onMouseDown","onKeyDown","tabIndex","ref","onClick","Icon","TOP_RIGHT","BOTTOM_RIGHT","BOTTOM_LEFT","TOP_LEFT","_ref$modalHeight","modalHeight","_ref$modalWidth","modalWidth","show","setShow","xAxisValue","yAxisValue","innerHeight","_React$useState2","setInitialValues","newx","newy","Draggable","AppStore","root_store","core","dbot_store","timer","disposeReloadOnLanguageChangeReaction","disposeCurrencyReaction","disposeSwitchAccountListener","disposeLandingCompanyChangeReaction","disposeResidenceChangeReaction","getErrorForNonEuClients","link","getErrorForEuClients","is_logged_in","country","route","routes","traders_hub","throwErrorForExceptionCountries","client_country","_this$core","common","country_name","au","sg","showDigitalOptionsUnavailableError","showError","handleErrorForEu","show_default_error","_this$core2","ui","toggleAccountsDialog","is_eu_country","has_logged_out","href","clients_country","is_landing_company_loaded","_client$account_setti","account_settings","country_code","should_show_eu_error","content_flag","ContentFlag","HIGH_RISK_CR","LOW_RISK_CR_EU","is_bot_allowed","is_eu","isEuResidenceWithOnlyVRTC","active_accounts","is_options_blocked","has_error","setError","onMount","_this$root_store","blockly_store","run_panel","_this$core3","showDigitalOptionsMaltainvestError","timer_counter","sendRequestsStatistic","clearMeasures","initWorkspace","setContainerSize","registerReloadOnLanguageChange","registerCurrencyReaction","registerOnAccountSwitch","registerLandingCompanyChangeReaction","registerResidenceChangeReaction","onClickOutsideBlockly","onBeforeUnload","getCachedActiveTab","when","onUnmount","terminateBot","save_workspace_interval","setAccountSwitcherDisabledMessage","setPromptHandler","is_stop_button_visible","returnValue","current_language","reload","trade_options_block","switch_broadcast","_ApiHelpers$instance","retrieveActiveSymbols","disposeCache","fake_create_event","BlockCreate","fire","initializeInterpreter","setDBotEngineStores","_this$root_store2","summary_card","_window$Blockly","composedPath","classList","makeObservable","tabs_title","WORKSPACE","CHART","DBOT_TABS","DASHBOARD","BOT_BUILDER","TUTORIAL","TAB_IDS","getSettingsFromLocal","getSetting","settings","storeSetting","setItem","BlocklyStore","is_loading","active_tab","setActiveTab","tab","observable","WS","g_subscribers_map","ChartStore","is_chart_loading","chart_type","onStartBot","updateSymbol","onStopBot","onSymbolChange","saveToLocalStorage","updateGranularity","updateChartType","setChartStatus","LocalStore","restoreFromStorage","props","_JSON$parse","wsSubscribe","req","subscriber","subscribeTicksHistory","wsForget","_g_subscribers_map$ke","wsForgetStream","stream_id","forgetStream","wsSendRequest","ServerTime","storage","getMarketsOrder","synthetic_index","has_synthetic_index","is_contract_ended","computed","transactions","is_ended","D_ALEMBERT","content","expanded","no_collapsible","alt","dark_src","styles","MARTINGALE","OSCARS_GRIND","REVERSE_D_ALEMBERT","REVERSE_MARTINGALE","STRATEGY_1_3_2_6","USER_GUIDE","VIDEOS","QUICK_STRATEGY_GUIDES","user_guide_content","subtype","search_id","guide_content","faq_content","imageclass","quick_strategy_content","qs_name","tour_type","setTourSettings","param","tour_list","DashboardStore","tutorials_combined_content","combined_search","active_tab_tutorials","active_tour_step_number","dialog_options","faq_search_value","getFileArray","has_file_loaded","has_mobile_preview_loaded","active_tour","is_dialog_open","is_file_supported","is_info_panel_visible","is_preview_on_popup","is_tour_dialog_visible","show_toast","show_mobile_tour_dialog","strategy_save_type","toast_message","is_web_socket_intialised","search_param","guide_tab_content","video_tab_content","faq_tab_content","quick_strategy_tab_content","filtered_tab_list","is_chart_modal_visible","is_trading_view_modal_visible","faq_title","setFaqTitle","resetTutorialTabContent","filterTuotrialTab","foundItems","filtered_user_guide","filter_video_guide","filtered_faq_content","filtered_quick_strategy_content","filtered_tutorial_content","identifier","setShowMobileTourDialog","setWebSocketState","setOpenSettings","setChartModalVisibility","setTradingViewModalVisibility","setIsFileSupported","setTourActiveStep","setPreviewOnDialog","onLoadModalClose","setStrategySaveType","setPreviewOnPopup","setTourDialogVisibility","setActiveTour","setFileLoaded","onCloseDialog","setActiveTabTutorial","setFAQSearchValue","showVideoDialog","dialog_option","_dialog_option$type","setInfoPanelVisibility","onZoomInOutClick","is_zoom_in","metrics","addition","viewWidth","onCloseTour","setTourEnd","onTourEnd","step","is_tour_active","initInfoPanel","bound","getUserGuideContent","getVideoContent","getFaqContent","inner_item","itemWithoutHTML","DOMPurify","sanitize","ALLOWED_TAGS","getQuickStrategyContent","qs_card_content","qs_description_content","_item$content","getQSDescriptionContent","strategy_description","app","DataCollectionStore","IS_PENDING","IS_PROCESSED","endpoint","run_id","run_start","should_post_xml","strategy_content","cleanXmlDom","useless_attributes","updated_dom","cloneObject","removeAttributesRecursively","useless_attribute","removeAttribute","child","getHash","string","btoa","crc32","trackRun","trackTransaction","setRunId","setRunStart","setStrategyContent","isProduction","hostname","_trackRun","converted_workspace_to_dom","xml_hash","_trackTransaction","pako","getPayload","gzip","Referer","help_content_types","TEXT","IMAGE","BLOCK","EXAMPLE","help_content_config","procedures_ifreturn","example_id","math_arithmetic","math_single","math_constrain","text_print","text_prompt_ext","tick_analysis","read_details","last_digit","read_ohlc","read_ohlc_obj","check_direction","get_ohlc","ohlc_values","is_candle_black","ohlc_values_in_list","variables_gets","variables_set","todatetime","totimestamp","notify_telegram","sma_statement","during_purchase","sell_at_market","after_purchase","trade_again","contract_check_result","controls_if","logic_operation","controls_whileUntil","controls_for","controls_forEach","controls_flow_statements","Localize","i18n_default_text","components","StaticUrl","pushDataLayer","onRunBot","FlyoutHelpStore","move","drag","sounds","examples","help_string","should_next_disable","should_previous_disable","active_helper","setHelpContent","example_blocks","meta","setExamples","example","childNodes","setFlyoutWidth","runInAction","is_help_content","help_strings","is_search_flyout","updateSequenceButtons","getHelpContent","block_content","target_blocks","xml_list_group","getFilledBlocksIndex","blocks_type","blocks_content","getNextHelpContentIndex","is_last","filled_blocks_index","setActiveHelper","onBackClick","onSequenceClick","initFlyoutHelp","search","getElementsByName","onSearch","refreshCategory","_onSequenceClick","should_go_next","current_block_index","_getNextBlock","xml_list","getNextBlock","_ref5","current_index","is_next","next_index","next_blocks_type","next_filled_block","next_filled_block_index","next_block_type","getCategoryContents","selected_category","groupBy","_updateSequenceButtons","last_filled_content_index","first_filled_content_index","nodes","should_include_block_only","block_group","all_examples","toolbox_examples","GTM","statistics","_root_store2","_root_store2$core","_root_store2$core$ser","counters","number_of_runs","total_stake","total_payout","lost_contracts","won_contracts","total_profit","_root_store","_root_store4","run_statistics","_root_store3","_root_store3$core","_root_store3$core$gtm","gtm","onTransactionClosed","reference_id","FlyoutStore","_window","_window$Blockly$Theme","block_listeners","block_workspaces","flyout_min_width","flyout_content","flyout_width","is_visible","search_term","initFlyout","initBlockWorkspace","getFlyout","setContents","setVisibility","setIsSearchFlyout","setSelectedCategory","getSelectedCategory","onClickOutsideFlyout","variables_blocks_count","first_get_variable_block_index","_window2","_window2$Blockly","_window2$Blockly$Them","flyoutWorkspaceOptions","parentWorkspace","rtl","horizontalLayout","HorizontalFlyout","VerticalFlyout","targetWorkspace","workspace_","getGesture","targetWorkspace_","VariableMap","createPotentialVariableMap","el_block_workspace","_window3","_window3$Blockly","_window3$Blockly$brow","_window4","_window4$Blockly","_window4$Blockly$brow","_window5","_window5$Blockly","_window5$Blockly$brow","block_hw","getHeightWidth","isInFlyout","ceil","moveBy","block_svg_root","browserEvents","conditionalBind","blockMouseDown","addSelect","processed_xml","listener","unbind","xmlList","longest_block_width","NODE_BLOCK","Block","getDimensions","is_search","is_flyout_click","is_search_focus","button_status","NORMAL","LOADING","COMPLETED","form_name","ACTION","NUMBER_DEFAULT_VALIDATION","getMessage","LABEL_SYMBOL","SYMBOL","LABEL_TRADETYPE","TRADETYPE","dependencies","LABEL_PURCHASE_TYPE","PURCHASE_TYPE","SELL_CONDITIONS_TYPE_INFO","additional_data","max_payout","max_ticks","SELL_CONDITIONS_TYPE","LABEL_STAKE","STAKE","validation","has_currency_unit","LABEL_DURATION","DURATION_TYPE","attached","DURATION","LABEL_PROFIT","GROWTH_RATE","GROWTH_RATE_VALUE","LABEL_LOSS","LOSS","LABEL_MARTINGALE_SIZE","LABEL_ACCUMULAORTS_UNIT","LABEL_ACCUMULAORTS_SIZE","LABEL_REVERSE_MARTINGALE_SIZE","SIZE","qs_config","LABEL_DALEMBERT_UNIT","LABEL_REVERSE_DALEMBERT_UNIT","UNIT","CHECKBOX_MAX_STAKE","MAX_STAKE","should_have","hide_without_should_have","TAKE_PROFIT","TICK_COUNT","LABEL_LAST_DIGIT_PREDICTION","multiple","LAST_DIGIT_PREDICTION","STRATEGIES","rs_strategy_name","ACCUMULATORS_MARTINGALE","ACCUMULATORS_DALEMBERT","ACCUMULATORS_MARTINGALE_ON_STAT_RESET","ACCUMULATORS_DALEMBERT_ON_STAT_RESET","ACCUMULATORS_REVERSE_MARTINGALE","ACCUMULATORS_REVERSE_MARTINGALE_ON_STAT_RESET","ACCUMULATORS_REVERSE_DALEMBERT","ACCUMULATORS_REVERSE_DALEMBERT_ON_STAT_RESET","hasStoredText","parameter","getRsStrategyType","selected_strategy","_STRATEGIES$selected_","LOAD_MODAL_TABS_VALUE","LOAD_MODAL_TABS","getTradeParameterData","form_values","stake","stored_texts","_localStorage$getItem","_localStorage","getRsDropdownTextFromLocalStorage","asset_type","purchase_condition","initial_stake","getStrategyType","xmlDoc","rudderStackSendOpenEvent","subpage_name","subform_source","subform_name","load_strategy_tab","cacheTrackEvents","loadEvent","properties","rudderStackSendCloseEvent","quick_strategy_tab","announcement_name","CLOSE","strategy_name","rudderStackSendUploadStrategyStartEvent","upload_provider","upload_id","UPLOAD_STRATEGY_START","rudderStackSendUploadStrategyCompletedEvent","upload_type","UPLOAD_STRATEGY_COMPLETED","rudderStackSendUploadStrategyFailedEvent","_ref6","UPLOAD_STRATEGY_FAILED","GoogleDriveStore","bot_folder_name","client_id","app_id","api_key","discovery_docs","is_google_drive_token_valid","is_authorised","setGoogleDriveTokenValid","setKey","_config$GOOGLE_DRIVE","process","gapi","setGoogleDriveTokenExpiry","seconds","expiry_time","floor","initialiseClient","google","accounts","oauth2","initTokenClient","setIsAuthorized","expires_in","verifyGoogleDriveAccessToken","signOut","removeItem","google_drive_error","closeButton","onDriveConnect","signIn","saveFile","loadFile","getPickerLanguage","checkFolderExists","createSaveFilePicker","createLoadFilePicker","showGoogleDriveFilePicker","is_authorized","_signIn","requestAccessToken","_signOut","_window$gapi","_window$gapi$client","_window2$google","_window2$google$accou","_window2$google$accou2","_localStorage2","setToken","revoke","language","_saveFile","_loadFile","_result","_result$error","_status","_picker$parentNode","picker","pickerBackground","xml_doc","drive","files","list","pageSize","_checkFolderExists","_response$result$file","mime_type","file","mimeType","resource","setButtonStatus","Action","PICKED","folder_id","docs","strategy_file","strategy_file_metadata","parents","form_data","FormData","append","xhr","XMLHttpRequest","responseType","setRequestHeader","CANCEL","loadPickerCallback","fileId","driveError","BOT_IMPORT","is_save","docs_view","DocsView","setIncludeFolders","setMimeTypes","setSelectFolderEnabled","PickerBuilder","setOrigin","protocol","host","setTitle","setLocale","setAppId","setOAuthToken","addView","setDeveloperKey","setCallback","build","getIcon","showErrorMessageWithButton","showErrorMessage","centerAndHighlightBlock","unique_id","btn_text","Button","has_effect","secondary","messageWithButton","parseArray","getStoredItemsByUser","storage_key","getStoredItemsByKey","session_storage_item","sessionStorage","decompressed_item","stored_items","setStoredItemsByKey","compressed_value","JournalStore","disposeReactionsFn","JOURNAL_CACHE","is_filter_dialog_visible","filters","ERROR","NOTIFY","SUCCESS","journal_filters","unfiltered_messages","playAudio","play","shallow","toggleFilterDialog","onLogSuccess","onNotify","pushMessage","filtered_messages","getServerTime","checked_filters","filterMessage","clear","registerReactions","restoreStoredJournals","_this$core$client","dbot","parsedArray","is","NaN","message_length","ExpansionPanel","onResize","isCustomJournalMessage","parsed_message","account_list","current_account","account","current_currency","is_virtual","WELCOME","date","formatDate","uuidv4","unshift","checked","disposeWriteJournalMessageListener","stored_journals","disposeJournalMessageListener","_client$account_list","_client$account_list$","WELCOME_BACK","fireImmediately","TAB_LOCAL","TAB_GOOGLE","TAB_RECENT","waitForDomElement","selector","observingParent","MutationObserver","childList","subtree","LoadModalStore","imported_strategy_type","recent_workspace","local_workspace","drop_zone","active_index","is_load_modal_open","is_explanation_expand","is_open_button_loading","is_open_button_disabled","loaded_local_file","recent_strategies","selected_strategy_id","is_strategy_loaded","is_delete_modal_open","is_strategy_removed","current_workspace_id","getSelectedStrategyID","setDashboardStrategies","getDashboardStrategies","onDriveOpen","google_drive","load_file","toggleLoadModal","onEntered","tab_name","loadStrategyOnModalRecentPreview","updateXmlValuesOnStrategySelection","setActiveTabIndex","preview_workspace","zoomCenter","setRecentStrategies","refreshStrategies","setSelectedStrategyId","toggleExplanationExpand","_this$recent_workspac","toggleTourLoadModal","getRecentFileIcon","getSaveType","onToggleDeleteDialog","resetBotBuilderStrategy","loadStrategyToBuilder","refreshStrategiesTheme","_this$selected_strate","_this$selected_strate2","_this$selected_strate3","_this$selected_strate4","loadFileFromRecent","_this$selected_strate5","loadFileFromLocal","readFile","onActiveIndexChange","_this$recent_workspac2","_this$local_workspace","is_body","is_preview","reader","FileReader","_ref7","_e$target","load_options","loadStrategyOnModalLocalPreview","readAsText","saveStrategyToLocalStorage","_recent_files$","_window$Blockly$xmlVa","loadStrategyOnBotBuilder","_window$Blockly$xmlVa2","_window$Blockly$xmlVa3","clearWorkspaceAndLoadFromXml","_window$Blockly2","_window$Blockly2$util","_window$Blockly2$util2","_this$selected_strate6","_this$selected_strate7","_this$selected_strate8","_ref10","_document","_window$Blockly3","_window$Blockly3$util","_window$Blockly3$util2","_this$selected_strate9","_window$Blockly4","_window$Blockly5","_window$Blockly5$Xml","inject_options","ref_preview","mainWorkspace","_ref11","_window3$Blockly$Them","_document2","_load_options$block_s","injectWorkspace","_ref12","saved_workspaces","_this$dashboard_strat","addDynamicBlockToDOM","name_block","strategy_value","trade_type_cat","strategy_dom","shadow_block","field_block","amount_block","parent_node","insertBefore","nextSibling","mutation_element","_objectWithoutProperties","_objectWithoutPropertiesLoose","propertyIsEnumerable","QuickStrategyStore","is_open","is_contract_dialog_open","is_stop_bot_dialog_open","current_duration_min_max","loss_threshold_warning_data","setAdditionalData","setLossThresholdWarningData","initializeLossThresholdWarningData","highlight_field","already_shown","setFormVisibility","setSelectedStrategy","setCurrentDurationMinMax","onSubmit","strategy_xml","modifyValueInputs","modifyFieldDropdownValues","rest_data","fields_to_update","el_value_inputs","el_value_input","innerHTML","name_list","el_blocks","dropdown_value","_excluded","tradetypecat","dalembert_unit","oscar_unit","growthrate","waitForBlockEvent","event_type","onRunButtonClick","toggleStopBotDialog","RoutePromptDialogStore","should_show","is_confirmed","last_location","shouldNavigateAfterPrompt","onConfirm","onCancel","continueRoute","setShoudShow","next_location","routeTo","contract_stages","NOT_RUNNING","STARTING","RUNNING","PURCHASE_SENT","PURCHASE_RECEIVED","IS_STOPPING","CONTRACT_CLOSED","SUMMARY","TRANSACTIONS","JOURNAL","switch_account_notification","is_persistent","helpers","keep_current_contract","rel","RunPanelStore","contract_stage","has_open_contract","is_statistics_info_modal_open","is_drawer_open","is_sell_requested","show_bot_stop_message","is_contracy_buying_in_progress","onOkButtonClick","onCancelButtonClick","error_type","setShowBotStopMessage","bot_stop","URL","positions","origin","searchParams","performSelfExclusionCheck","self_exclusion","checkRestriction","route_prompt_dialog","is_ios","mobileOSDetect","saveRecentWorkspace","unHighlightAllBlocks","showLoginDialog","isSafari","preloadAudio","should_bot_run","setIsRestricted","registerBotListeners","shouldRunBot","unregisterBotListeners","toggleDrawer","setContractStage","runBot","onStopButtonClick","is_multiplier","showStopMultiplierContractDialog","onStopBotClick","onClearStatClick","showClearStatDialog","clearStat","journal","setHasOpenContract","toggleStatisticsInfoModal","stopMyBot","_this$root_store3","quick_strategy","closeMultiplierContract","onClickSell","ok_button_text","cancel_button_text","showRealAccountDialog","showContractUpdateErrorDialog","_this$root_store4","onBotRunningEvent","onBotSellEvent","onBotStopEvent","onBotReadyEvent","onBotTradeAgain","onContractStatusEvent","onBotContractEvent","OpenPositionLimitExceededEvent","disposeIsSocketOpenedListener","disposeLogoutListener","notifications","registerIsSocketOpenedListener","is_socket_opened","addNotificationMessage","disposeStopBotListener","ignore_new_version","run_limit","_this$root_store5","indicateBotStopped","resetSelfExclusion","RECOVERABLE_ERRORS","_this$dbot","_this$dbot$interprete","_this$dbot$interprete2","_this$dbot$interprete3","trade_engine_options","UNRECOVERABLE_ERRORS","clearContractUpdateConfigValues","listen_new_version","is_trade_again","contract_status","switchToJournal","platform","platform_name","is_disposable","removeNotificationMessage","toggleNotificationsModal","removeNotificationByKey","handleInvalidToken","_this$root_store6","logout","getStrategySounds","audioElement","muted","pause","is_stop_button_disabled","is_clear_stat_disabled","_transactions$transac","_this$root_store7","SaveModalStore","is_save_modal_open","toggleSaveModal","validateBotName","errors","addStrategyToWorkspace","is_local","save_as_collection","_getSaveType","local_type","save_collection","workspace_structure","updated_strategies","onConfirmSave","main_strategy","_window$Blockly$Xml","_window$Blockly3$Xml","_selected_strategy$id","_window$Blockly4$util","SelfExclusionStore","api_max_losses","is_restricted","form_max_losses","initial_values","setApiMaxLosses","setRunLimit","getSelfExclusion","max_losses","_checkRestriction","getContractConfig","is_high_low","LBFLOATCALL","LBFLOATPUT","LBHIGHLOW","getSupportedContracts","getContractTypeDisplay","getContractUpdateConfig","contract_update_config","_getLimitOrderAmount","getLimitOrderAmount","contract_update_stop_loss","abs","contract_update_take_profit","has_contract_update_stop_loss","has_contract_update_take_profit","SummaryCardStore","disposeSwitchAcountListener","contract_info","indicative_movement","profit_movement","validation_errors","validation_rules","trigger","rules","condition","contract_store","_contract_store$contr","profit_loss","indicative","is_contract_completed","is_contract_loading","is_contract_inactive","getLimitOrder","onChange","populateContractUpdateConfig","setIsBotRunning","updateLimitOrder","setValidationErrorMessages","validateProperty","_this$contract_info","_this$contract_info2","_this$contract_info3","isAccumulatorContract","_getContractUpdateCon","_this$contract_update","_this$contract_update2","getIndicativePrice","movements","movement","current_movement","contract_update","isEqualObject","_this$contract_info4","_this$contract_info5","_this$contract_info6","contractUpdate","propertyName","messages","property","inputs","validator","Validator","isPassed","ToolbarStore","is_animation_info_modal_open","has_undo_stack","has_redo_stack","is_reset_button_clicked","setResetButtonState","onResetClick","closeResetDialog","onResetOkButtonClick","resetDefaultStrategy","_window$Blockly$utils","_window$Blockly$utils2","onSortClick","_config$workspaces$in","onUndoClick","is_redo","undo","setHasRedoStack","setHasUndoStack","_window$Blockly$deriv","_window$Blockly$deriv2","undoStack_","_window$Blockly$deriv3","_window$Blockly$deriv4","redoStack_","ToolboxStore","disposeToolboxToggleReaction","typing_timer","is_toolbox_open","is_search_loading","sub_category_index","toolbox_dom","is_workspace_scroll_adjusted","toolbox_ref","_this$toolbox_dom$chi","_this$toolbox_dom","adjustWorkspace","HTMLElement","setWorkspaceOptions","dynamic","fnToApply","getToolboxCategoryCallback","DataCategory","getAllCategories","hasSubCategory","subCategory","_ref$search","showSearch","search_words","all_variables","getVariablesOfType","all_procedures","Procedures","allProcedures","general_term","term","block_contents","contents","pushIfNotExists","array","element_to_push","priority","block_meta","block_definitions","definition","block_type_terms","block_name_terms","definition_key_to_search","word","def","definition_strings","matched_meta","block_meta_strings","pushBlockWithPriority","matched_variables","unique_var_blocks","searched_procedures","procedures_callnoreturn","procedures_callreturn","procedure","unique_proce_blocks","populateDynamicProcedures","procedure_block","onToolboxItemClick","onToolboxItemExpand","onSearchBlur","onSearchClear","onSearchKeyUp","languageTree","hasCategories","hasCollapse","hasComments","hasDisable","collapse","comments","workspace_metrics","block_canvas_space","scrollWidth","toolbox_width","block_canvas_rect","scroll_distance_mobile","scroll_distance_desktop","scroll_distance","round","_flyout$selected_cate","category_id","open_ids","open_id","submitForm","transaction_elements","CONTRACT","DIVIDER","TransactionsStore","TRANSACTION_CACHE","elements","active_transaction_id","recovered_completed_transactions","recovered_transactions","is_called_proposal_open_contract","is_transaction_details_modal_open","toggleTransactionDetailsModal","pushTransaction","recoverPendingContracts","updateResultsCompletedContract","sortOutPositionsBeforeAction","recoverPendingContractsById","_this$core2$client","_this$elements$this$c","_this$core3$client","total_runs","trx","stats","_ref2$profit","_ref2$is_completed","is_completed","_ref2$buy_price","_this$core4","_this$core4$client","_this$elements$curren","isEnded","entry_tick_display_value","exit_tick_display_value","same_contract_index","_c$data","_data$transaction_ids","_this$elements$curren2","_this$elements$curren5","_this$elements$curren3","_temp_contract$data","_this$elements$curren4","temp_contract","_this$elements$curren6","_this$core5","_this$core5$client","_this$recovered_compl","_this$recovered_trans","disposeTransactionElementsListener","_elements$slice","stored_transactions","disposeRecoverContracts","element_id","_this$core6","_this$core6$client","portfolio","_this$core7","_this$core7$client","_this$elements$curren7","_element$data","_elements$","RootStore","flyout_help","chart_store","data_collection_store","DBotStoreContext","DBotStoreProvider","mock","stores","useStore","memoizedValue","useMemo","Provider","useDBotStore","PARENT_CLASS","TableCell","_ref$extra_classes","extra_classes","_ref$loader","classNames","CellLoader","TableHeader","columns","column","extra_class","IconWrapper","Popover","alignment","ContentLoader","speed","backgroundColor","foregroundColor","rx","ry","DesktopTransactionTable","_result$total_stake","_result$total_payout","_result$total_profit","result_columns","transaction_columns","_data$transaction_ids2","_data$buy_price","_data$profit","convertDateFormat","underlying","IconTradeTypes","TransactionDetailsDesktop","transaction_list","DraggableResizeWrapper","wrapper_ref","classNameLabel","hasFilter","Checkbox","defaultChecked","toggle_ref","useOnClickOutside","_toggle_ref$current","Filters","logType","classnames","Text","color","interpolation","escapeValue","formatMoney","getLogMessage","row","is_new_row","in_prop","useNewRowTransition","date_el","DateItem","CSSTransition","in","FormatMessage","getJournalItemContent","downloadFile","_link$parentNode","hours","minutes","uri","encodeURI","getUTCFullYear","getUTCMonth","padStart","getUTCHours","getUTCMinutes","getUTCSeconds","click","Download","clickFunction","popover_message","_useDBotStore","items","_array_message","array_message","getSuccessJournalMessage","classNameBubble","enter","enterDone","exit","unmountOnExit","FilterDialog","Journal","filtered_messages_length","unfiltered_messages_length","is_desktop","JournalTools","DataList","data_source","rowRenderer","JournalItem","keyMapper","JournalLoader","as","weight","align","line_height","SelfExclusionForm","max_losses_error","setMaxLossesError","is_onscreen_keyboard_active","updateSelfExclusion","onSubmitLimits","set_losses","Formik","validate","is_number","is_integer","requested_field_message","valid_number_message","max_number_message","max_decimal_message","max_losses_limit_message","_values$item","amount_decimal_array","touched","isValid","handleChange","Form","role","Field","Input","_extends","hint","data_testId","large","primary","SelfExclusion","_useStore","self_exclusion_form_props","virtual_account_loginid","Modal","has_close_icon","toggleModal","FadeWrapper","keyname","PageOverlay","onClickClose","Div100vhContainer","propTypes","PropTypes","message_running_bot","_ref$speed","ContractCardRunningBot","SummaryCard","_contract_info$curren","is_accumulator","addToast","current_focus","removeToast","setCurrentFocus","card_header","ContractCard","Header","getCardLabels","has_progress_slider","card_body","Body","error_message_alignment","getContractById","card_footer","Footer","contract_el","ContractCardLoader","should_show_result_overlay","ThemedScrollbars","summary","has_won_contract","text_contract_stages","TradeAnimation","should_show_overlay","account_status","cashier_validation","shouldDisable","setShouldDisable","is_unavailable_for_payment_agent","status_classes","is_purchase_sent","is_purchase_received","progress_status","button_props","class","show_overlay","TAB_NAMES","RUN_BOT","green","ContractResultOverlay","ContractStageText","status_class","CircularWrapper","popover_zindex","TOOLBAR","TRANSACTION","SUMMARY_TOOLTIPS","RUN_PANEL","TransactionIconWithText","TransactionFieldLoader","TransactionIconLoader","PopoverItem","PopoverContent","tick_count","low_barrier","_contract$transaction","_contract$entry_tick","_contract$exit_tick","onClickTransaction","_contract$transaction2","Money","show_currency","TransactionItem","_ref$is_new_row","Transaction","Transactions","setActiveTransactionId","onClickOutsideTransaction","_classList","transactions__content","getRowSize","StatisticsTile","contentClassName","StatisticsSummary","has_sign","DrawerHeader","DrawerContent","Tabs","onTabItemClick","Summary","DrawerFooter","MobileDrawerFooter","StatisticsInfoModal","RunPanel","footer","Drawer","anchor","CardColumn","_ref$label","_ref$large_title","large_title","_ref$right_aligned","right_aligned","_ref$title","IconContainer","MobileTransactionCards","_transaction$transact","_transaction$buy_pric","_transaction$profit","TransactionDetailsMobile","_statistics$lost_cont","_statistics$number_of","_statistics$total_pay","_statistics$total_pro","_statistics$total_sta","_statistics$won_contr","MobileFullPageModal","is_modal_open","height_offset","Suspense","fallback","Loading","BotNotificationMessages","Notifications","notification_messages_ui","Dialog","is_mobile_full_width","confirm_button_text","_ref$should_open","should_open","network_status","setIsOpen","portal_el","ReactDOM","Toast","Group","GOOGLE_DRIVE_DISCONNECT","is_document","GOOGLE_DRIVE_CONNECT","Wrapper","mockZoomInOut","data_testid","file_input_ref","strategy_conversion","WorkspaceControl","LocalFooter","accept","SectionMessage","onDrop","_file_input_ref$curre","RecentWorkspace","RecentComponent","header_text","handleTabItemClick","SWITCH_LOAD_STRATEGY_TAB","page_overlay","Local","GoogleDrive","is_file_loaded","has_recent_strategies","elements_to_ignore","header_fit_content","Recent","has_separator","RecentFooter","google_drive_connected","is_drive_radio","SaveModalForm","content_height","autohide","placeholder","onFocus","currentTarget","onBlur","RadioGroup","selected","onToggle","Item","IconRadio","is_submit_success","SaveModal","_dashboard_strategies","_dashboard_strategies2","common_tour_button_properties","fontWeight","fontSize","padding","steps","handleCallback","ReactJoyride","continuous","locale","back","arrowColor","primaryColor","textColor","spotlightShadow","buttonBack","border","marginInlineEnd","borderRadius","buttonNext","buttonClose","insetInlineEnd","overlay","step_index","_ref$has_localize_com","has_localize_component","_ref$show_actions","show_actions","autoPlay","controls","preload","playsInline","disablePictureInPicture","controlsList","content_data","joyride_props","showProgress","spotlightClicks","disableBeacon","disableOverlay","disableCloseOnEsc","DBOT_ONBOARDING","TourSteps","placement","last","hideBackButton","Step1","_ref$show_label","show_label","Step1A","Step2","_ref2$show_label","Step3","_ref3$show_label","Step4","_ref4$show_label","Step5","_ref5$show_label","Step6","_ref6$show_label","BOT_BUILDER_TOUR","BOT_BUILDER_MOBILE","tour_step_key","DBOT_ONBOARDING_MOBILE","img","onboarding_tour_header","tour_token","onboard_tour","tour_dialog_info","tour_dialog_action","header_text_size","content_text_size","tour_headers","getBotBuilderTourHeader","useTourHandler","is_finished","setIsFinished","is_close_tour","setIsCloseTour","handleJoyrideCallback","_useTourHandler","TourEndDialog","TourStartDialog","ReactJoyrideWrapper","_ref$type","tour_step","setTourStep","test_id","tour_active","el_ref","tour_button_text","ProgressBarTracker","steps_list","onStepChange","TourButton","BotBuilderTourMobile","BotBuilderTourDesktop","rudderStackSendQsRunStrategyEvent","RUN_QUICK_STRATEGY","rudderStackSendQsEditStrategyEvent","EDIT_QUICK_STRATEGY","_ref$expanded","_ref$test_id","_ref$is_cursive","is_cursive","_ref$no_collapsible","_ref$has_subtitle","has_subtitle","font_size","setOpen","expanded_subtitles_storage","setExpandedSubtitlesStorage","accordion_subtitle","toLocaleLowerCase","should_be_expanded","_item$className","class_name","class_names","parsed_text","_item$content2","_item$dark_src","DescriptionContent","StrategyDescription","tutorial_selected_strategy","grouped_objects_by_title","desktop_font_size","_data$0$content$","_data$","_data$$content","_data$2","_data$3","subtitle_value","Accordion","_strategy$description","formfields","expanded_subtitles_storage_default","obj","_obj$expanded","generateStorageKey","AccordionStrategyGroup","_useFormikContext","useFormikContext","validateForm","handleSubmit","_values$loss","_values$profit","loss_amount","profit_threshold","stored_dont_show_warning_value","dont_show_warning","proceedFormSubmission","QsSteps","TRADE_TYPE_INDEX","ALL","ACCUMULATORS","OPTIONS","TRADE_TYPES","STRATEGY_TRADE_ASSOCIATIONS","parent","current_step","_ref$is_mobile","percentage","StrategyCompleted","LinearProgressBar","danger_limit","warning_limit","VerticalStepper","currentStep","labels","StrategyBlock","onSelectStrategy","Link","hasChevron","selector_chip_value","search_value","is_searching","is_parent_match_value","filterVisibleParents","tmp_item","matched_parents","MULTIPLIERS","selected_chip_value","filtered_strategies","has_visible_strategies","StrategyTemplatePicker","setCurrentStep","setSelectedTradeType","setSelectorChipValue","_React$useState4","setIsSearching","_React$useState6","setSearchValue","SearchField","inputSize","LegacyGuide1pxIcon","iconSize","Chip","Selectable","handleChipSelect","StrategyList","StrategyVerified","QuickSelectionPanel","selected_startegy_label","StrategyTabContent","FormWrapper","scroll_ref","useQsSubmitHandler","is_selected_strategy_step","StrategySelect","onEdit","renderContent","QSStepper","refSetter","transparent","classNameSpan","is_verified_or_completed_step","base_classname","portal_element_id","V2_QS_STRATEGIES","MarketOption","setActiveSymbols","is_input_started","setIsInputStarted","input_value","setInputValue","last_selected_symbol","setLastSelectedSymbol","is_strategy_accumulator","component","_symbols","_symbol$group","_symbols2","_symbols2$","_symbols3","_symbols3$","has_symbol","selected_symbol","handleFocus","handleInputChange","handleItemSelection","handleHideDropdownList","selectedSymbol","_ref4$field","rest_field","Autocomplete","inputMode","autoComplete","list_items","onItemSelection","onHideDropdownList","leading_icon","TradeTypeOption","_ref$trade_type","ic","setTradeTypes","is_symbol_accumulator","_trade_types$","has_selected","getTradeTypesForQuickStrategy","trade_type_dropdown_options","_selected_trade_type$","_selected_trade_type$2","ContractTypes","setList","_categories$","_categories$2","selected_item","prevSymbol","setPrevSymbol","prevTradeType","setPrevTradeType","getDurationUnits","duration_units","_durations$","_durations$2","_durations$3","_durations$4","_durations$0$unit","_durations$5","_duration$display","_duration$unit","_ref$attached","_ref$disabled","_ref$has_currency_uni","has_focus","setFocus","setFieldTouched","max_value","MAX_SAFE_INTEGER","input_ref","handleWheel","activeElement","passive","handleButtonInputChange","_loss_threshold_warni","is_exclusive_field","onMouseEnter","onMouseLeave","should_disable_pointer_events","highlight","trailing_icon","handleOnChange","bottom_label","max_characters","maxLength","isEnabledToggleSwitch","setIsEnabledToggleSwitch","max_stake","classNameTargetIcon","ToggleSwitch","handleToggle","is_enabled","tooltip_msg","setFieldError","prev_proposal_payload","ref_max_payout","prev_error","_prev_error$current$t","_prev_error$current","_prev_error$current$t2","_prev_error$current2","boolean_tick_count","validateMinMaxForAccumulators","request_proposal","_response$proposal","_response$proposal$va","_response$proposal2","_response$proposal2$v","min_error","max_error","current_tick_count","_error_response$messa","_error_response$error","errror_message","_error_response$error2","_error_response$error3","_error_response$error4","_error_response$error5","_error_response$error6","validation_params","debounceChange","trailing","leading","_prev_proposal_payloa","_prev_proposal_payloa2","_prev_proposal_payloa3","_prev_proposal_payloa4","_prev_proposal_payloa5","_prev_proposal_payloa6","_prev_proposal_payloa7","list_options","selectedValue","setSelectedValue","is_take_profit","QuickStrategyForm","_values$boolean_max_s","boolean_max_stake","_data","handleEnter","shouldEnable","_values$item$key","item_value","toggleSwitch","group_index","field_index","_field$hide","_field$hide2","hide","_field$should_have","_field$hide_without_s","_field$has_currency_u","should_enable","should_validate","last_digit_prediction","QSInput","_field$description","_field$should_have2","_field$hide_without_s2","QSInputLabel","QSCheckbox","SymbolSelect","TradeTypeSelect","DurationTypeSelect","ContractTypeSelect","GrowthRateSelect","SellConditions","getErrorMessage","MIN","MAX","FormikWrapper","Yup","shape","dynamic_schema","setDynamicSchema","is_mounted","initial_value","_data$symbol","_data$tradetype","_data$type","_data$durationtype","_data$duration","_data$stake","_data$loss","_data$size","_data$unit","_data$action","_data$max_stake","_data$boolean_max_sta","_data$last_digit_pred","_data$growth_rate","_data$tick_count","_data$take_profit","_data$boolean_tick_co","_data$max_payout","_data$max_ticks","updateSchema","formikData","sub_schema","_field$validation","schema","integer_error_message","_initial_value$stake","_initial_value","typeError","_formikData$item$key","required","integer","getSavedValues","validationSchema","validateOnChange","active_tab_ref","handleClose","_active_tab_ref$curre","_active_tab_ref$curre2","_active_tab_ref$curre3","FormikForm","LossThresholdWarningDialog","DesktopFormWrapper","MobileFormWrapper","should_hide_display_name","onInfoClick","is_variables_get","is_variables_set","AddButton","is_plus","addBlockNode","FlyoutBlock","lineHeight","frameBorder","allow","allowFullScreen","block_help_component","text_count","example_node","FlyoutText","FlyoutVideo","FlyoutImage","renderText","SearchResult","total_result","FlyoutContent","flyout_ref","is_empty","custom_color","platform_name_dbot","getPlatformSettings","FlyoutBlockGroup","NODE_LABEL","NODE_INPUT","NODE_BUTTON","callback_key","callback_id","button","getButtonCallback","getTargetWorkspace","Flyout","flyout__search","flyout__help","flyout__normal","HelpBase","title_text","toggle_dialog_or_stop","paddingBottom","paddingTop","paddingInlineStart","StopBotModal","StopBotModalContent","button_id","button_classname","buttonOnClick","button_text","icon_id","icon_color","renderIcon","WorkspaceGroup","ToolbarIcon","Toolbar","ToolbarButton","FormField","onKeyUp","SearchIcon","Arg","_objectDestructuringEmpty","Category","Example","Examples","Mutation","Next","_ref8","Shadow","_ref9","Statement","Value","ToolboxItems","ReactDomServer","xmlns","deletable","movable","has_first_barrier","has_second_barrier","divisor_input","variabletype","at","at1","at2","elseif","else","active","SearchBox","has_sub_category","is_sub_category_open","Toolbox","BotBuilder","is_blockly_listener_registered","is_blockly_delete_listener_registered","deleted_block_id","handleBlockChangeOnBotRun","removeBlockChangeListener","workspace_change","_window$Blockly2$deri","removeChangeListener","handleBlockDelete","oldElementId","handleBlockDeleteNotification","newValue","block_delete","closeToast","WorkspaceWrapper","BotBuilderTourHandler","LoadModal","QuickStrategy1","TradingViewComponent","module","component_name","moduleLoader","setSmartChartsPublicPath","SmartChart","ChartTitle","ChartMode","DrawTools","Share","StudyLegend","Views","ToolbarWidget","portalNodeId","onChartType","onGranularity","searchInputClassName","Chart","show_digits_stats","_useStore2$ui","assetInformation","countdown","isHighestLowestMarkerEnabled","is_chart_layout_default","showLastDigitStats","chartControlsWidgets","enabledChartFooter","chartStatusListener","toolbarWidget","ToolbarWidgets","chartType","isMobile","enabledNavigationWidget","requestAPI","requestForget","requestForgetStream","requestSubscribe","topWidgets","isConnectionOpened","isLive","leftMargin","ChartModalDesktop","default_tour_data","setStep","tour_data","setTourData","start_button","OnboardingTourMobile","OnboardingTourDesktop","rudderStackSendDashboardClickEvent","dashboard_click_name","DASHBOARD_CLICK","rudderStackSendAnnouncementActionEvent","announcement_action","ANNOUNCEMENT_ACTION","resetStrategiesAfterDelete","deleted_strategy_id","updated_workspaces","removeBotStrategy","strategy_from_workspace","BOT_DELETE","STRATEGY","CONTEXT_MENU","trigger_div_ref","visible","is_dropdown_visible","setDropdownVisibility","handleHideDropdown","handleClickOutside","_ref$current","useComponentVisibility","handleOpen","viewRecentStrategy","is_active_mobile","text_size","HEADERS","DashboardBotList","get_first_strategy_info","get_instacee","getStrategies","DeleteDialog","has_dashboard_strategies","actions","SIDEBAR_INTRO","faq_id","renderInfo","sidebar_item","tutorial_link","tutorial_label","switchTab","IconAnnounce","announce","LabelPairedCircleInfoCaptionBoldIcon","TitleAnnounce","MessageAnnounce","IconAnnounceModal","announce_id","ANNOUNCEMENTS","UPDATES_QUICK_STRATEGY_MODAL_ANNOUNCE","announcement","main_title","event_name","event_action","unordered_list","should_not_be_cancel","switch_tab_on_confirm","should_toggle_qs_modal","MOVING_STRATEGIES_ANNOUNCE","numbered_content","plain_text","OpenLiveChatLink","should_toggle_load_modal","BLOCKLY_ANNOUNCE","ACCUMULATOR_ANNOUNCE","switch_tab_on_cancel","handleOnConfirmAccumulator","BUTTON_ACTION_TYPE","BOT_ANNOUNCEMENTS_LIST","buttonAction","actionText","performButtonAction","modalButtonAction","handleRedirect","urlRedirect","url_redirect","handleOnConfirm","handleOnCancel","is_announce_dialog_open","setIsAnnounceDialogOpen","is_tablet","content_item","LabelPairedCheckCaptionFillIcon","listStyle","plain_text_item","handleTabChange","is_open_announce_list","setIsOpenAnnounceList","selected_announcement","setSelectedAnnouncement","_React$useState8","read_announcements_map","setReadAnnouncementsMap","_React$useState10","amount_active_announce","setAmountActiveAnnounce","useHistory","_React$useState12","setNotifications","action_button_class_name","storeDataInLocalStorage","updated_local_storage_data","ANNOUNCEMENT_CLICK","temp_notifications","updateNotifications","updateLocalStorage","_localStorage$getItem2","tmp_notifications","temp_localstorage_data","is_not_read","hasOwn","number_ammount_active_announce","prevState","StandaloneBullhornRegularIcon","Announcement","clearNotificationsCallback","temp_read_announcements_map","fromEntries","componentConfig","clearButtonText","modalTitle","noNotificationsMessage","noNotificationsTitle","isOpen","excludedClickOutsideClass","appElement","AnnouncementDialog","_selected_announcemen","_selected_announcemen2","_selected_announcemen3","accumulators_video","_selected_announcemen4","_selected_announcemen5","_selected_announcemen6","Announcements","Cards","InfoPanel","OnboardTourHandler","setTutorialSelectedStrategy","qs_guide","SELECT_QUICK_STRATEGY_GUIDE","rudderStackSendSelectQsStrategyGuideEvent","QuickStrategyGuidesDetail","FAQ","_ref$content","parsed_content","faq_list","faq_wrapper_element","timer_id","handleAccordionClick","_faq_wrapper_element$","open_accordion_element","previous_sibling_element","previousElementSibling","offset","desktop_scroll_element","mobile_scroll_element","wrapper_element","scrollTo","behavior","scrollToElement","handleKeyboardEvent","icon_close","icon_open","triggerTour","has_guide_content","backgroundImage","faq_value","setFaqSearchContent","prev_active_tutorials","SEARCH","tutorial_tabs","SearchInput","selectedTab","setSelectedTab","showSearchBar","setShowSearchBar","onChangeHandle","selectElement","SelectNative","should_show_empty_option","setPrevActiveTutorialsTab","has_content_guide_tab","GuideContent","FAQContent","QuickStrategyGuides","NoSearchResult","TutorialsTabDesktop","TutorialsTabMobile","AppWrapper","tab_value","init_render","url_hashed_values","hash","active_hash_tab","checkAndHandleConnection","api_status","getConnectionStatus","trashcan_init_id","_window$Blockly2$deri2","trashcanX","trashcanY","setTrashcanPosition","tab_index","el_id","el_tab","scrollIntoView","inline","onTabItemChange","Dashboard","Tutorial","RunStrategy","ChartModal","TradingViewModal","setIsLoading","DBotStores","combinedStore","is_subscribed_to_msg_listener","init_api_interval","msg_listener","handleMessage","checkIfApiInitialized","_api_base$api$onMessa","changeActiveSymbolLoadingState","onDisconnectFromNetwork","BlocklyLoading","Audio","Main","NetworkToastPopup","BotStopped","RoutePromptDialog","TransactionDetailsModal","ToastContainer","limit","draggable","hashObject","messageBuffer","hashBuffer","hashArray","hashHex","TextEncoder","encode","crypto","subtle","digest","Uint8Array","APIContext","initializeDerivAPI","onWSClose","_window$DerivAPI","_window$DerivAPI2","_window$DerivAPI3","DerivAPI","wss_url","websocketConnection","WSConnections","existingWebsocketInstance","getWebsocketInstance","isConnectionClosed","queryClient","ReactQueryClient","QueryClient","getEnvironment","_ref$standalone","standalone","useWS","reconnect","setReconnect","activeLoginid","environment","setEnvironment","standaloneDerivAPI","_subscriptions$curren","_standaloneDerivAPI$c2","_subscriptions$curren2","matchingSubscription","_payload","currentDerivApi","currentSubscriptions","switchEnvironment","useCallback","currentEnvironment","interval_id","_standaloneDerivAPI$c3","reconnectTimerId","derivAPI","_standaloneDerivAPI$c","_subscriptions$curren3","QueryClientProvider","FLAGS","dtrader_v2_mobile","dtrader_v2_desktop","next_qs","sharkfin","wallet","FeatureFlagsStore","_BaseStore","cleanup","update","flag","unmount","BaseStore","onHydrationDone","makePersistable","stopPersisting","is_mock","feature_flags","StoreProvider","APIProvider","originToDomainMap","targetDomain","vh","setAttributesIfAvailable","residence","account_type","creationDate","created_at","Survicate","survicateBox","firstScript","loadSurvicateScript","initSurvicate","survicate_box","DBotProviders","AppContent","notification_style","toast","TYPE","POSITION","autoClose","hideProgressBar","closeOnClick","pauseOnHover","pauseOnFocusLoss","NotificationContent","primary_action","handleToastVisibility","visibilityState","dismiss","custom_style","_custom_style$type","_custom_style$positio","_custom_style$autoClo","_custom_style$hidePro","_custom_style$closeOn","_custom_style$pauseOn","_custom_style$pauseOn2","_custom_style$closeBu","webpackAsyncContext","__webpack_require__","ids","exports"],"sourceRoot":""}