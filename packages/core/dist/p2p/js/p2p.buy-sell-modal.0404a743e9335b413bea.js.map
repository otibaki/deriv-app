{"version":3,"file":"p2p/js/p2p.buy-sell-modal.0404a743e9335b413bea.js","mappings":"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","sources":["webpack://@deriv/p2p/./src/components/modal-manager/modals/buy-sell-modal/buy-sell-modal-error/buy-sell-modal-error.scss","webpack://@deriv/p2p/./src/components/modal-manager/modals/buy-sell-modal/buy-sell-modal-footer/buy-sell-modal-footer.scss","webpack://@deriv/p2p/./src/components/modal-manager/modals/buy-sell-modal/buy-sell-modal-title/buy-sell-modal-title.scss","webpack://@deriv/p2p/./src/components/modal-manager/modals/buy-sell-modal/buy-sell-modal.scss","webpack://@deriv/p2p/./src/pages/buy-sell/buy-sell-form-receive-amount.scss","webpack://@deriv/p2p/./src/pages/buy-sell/buy-sell-form.scss","webpack://@deriv/p2p/./src/components/modal-manager/modals/buy-sell-modal/buy-sell-modal-error/buy-sell-modal-error.scss?0c57","webpack://@deriv/p2p/./src/components/modal-manager/modals/buy-sell-modal/buy-sell-modal-footer/buy-sell-modal-footer.scss?a793","webpack://@deriv/p2p/./src/components/modal-manager/modals/buy-sell-modal/buy-sell-modal-title/buy-sell-modal-title.scss?8d35","webpack://@deriv/p2p/./src/components/modal-manager/modals/buy-sell-modal/buy-sell-modal.scss?1a05","webpack://@deriv/p2p/./src/pages/buy-sell/buy-sell-form-receive-amount.scss?5c44","webpack://@deriv/p2p/./src/pages/buy-sell/buy-sell-form.scss?f4ed","webpack://@deriv/p2p/./src/pages/buy-sell/buy-sell-form-receive-amount.jsx","webpack://@deriv/p2p/./src/pages/buy-sell/buy-sell-form.jsx","webpack://@deriv/p2p/./src/components/modal-manager/modals/buy-sell-modal/buy-sell-modal-footer/buy-sell-modal-footer.tsx","webpack://@deriv/p2p/./src/components/modal-manager/modals/buy-sell-modal/buy-sell-modal-footer/index.ts","webpack://@deriv/p2p/./src/components/modal-manager/modals/buy-sell-modal/buy-sell-modal-title/buy-sell-modal-title.tsx","webpack://@deriv/p2p/./src/components/modal-manager/modals/buy-sell-modal/buy-sell-modal-title/index.ts","webpack://@deriv/p2p/./src/components/modal-manager/modals/buy-sell-modal/buy-sell-modal-error/buy-sell-modal-error.tsx","webpack://@deriv/p2p/./src/components/modal-manager/modals/buy-sell-modal/buy-sell-modal-error/index.ts","webpack://@deriv/p2p/./src/components/modal-manager/modals/buy-sell-modal/buy-sell-modal.tsx","webpack://@deriv/p2p/./src/components/modal-manager/modals/buy-sell-modal/index.ts"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".buy-sell-modal-error{padding:0 2.4rem;margin-bottom:1.6rem;width:-moz-fit-content;width:fit-content}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/modal-manager/modals/buy-sell-modal/buy-sell-modal-error/buy-sell-modal-error.scss\"],\"names\":[],\"mappings\":\"AAysBA,sBACI,gBAAA,CACA,oBAAA,CACA,sBAAA,CAAA,iBAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n.buy-sell-modal-error {\\n    padding: 0 2.4rem;\\n    margin-bottom: 1.6rem;\\n    width: fit-content;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"@media(max-width: 1279px){.buy-sell-modal-footer{border-top:2px solid var(--general-section-1);display:flex;flex-direction:row;justify-content:flex-end;margin-top:auto;padding:1.6rem}}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/modal-manager/modals/buy-sell-modal/buy-sell-modal-footer/buy-sell-modal-footer.scss\"],\"names\":[],\"mappings\":\"AAkrBI,0BAuBJ,uBAEQ,6CAAA,CACA,YAAA,CACA,kBAAA,CACA,wBAAA,CACA,eAAA,CACA,cAAA,CAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n.buy-sell-modal-footer {\\n    @include mobile-or-tablet-screen {\\n        border-top: 2px solid var(--general-section-1);\\n        display: flex;\\n        flex-direction: row;\\n        justify-content: flex-end;\\n        margin-top: auto;\\n        padding: 1.6rem;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".buy-sell-modal-title{display:flex;align-items:center}.buy-sell-modal-title__icon{margin-right:.8rem}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/modal-manager/modals/buy-sell-modal/buy-sell-modal-title/buy-sell-modal-title.scss\"],\"names\":[],\"mappings\":\"AAysBA,sBACI,YAAA,CACA,kBAAA,CAEA,4BACI,kBAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n.buy-sell-modal-title {\\n    display: flex;\\n    align-items: center;\\n\\n    &__icon {\\n        margin-right: 0.8rem;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".buy-sell-modal{opacity:1 !important}@media(max-width: 1279px){.buy-sell-modal .dc-mobile-full-page-modal__header--border-bottom{border-bottom:2px solid var(--general-section-1)}}.buy-sell-modal__body{position:relative;display:block;padding-top:2.4rem}@media(max-width: 1279px){.buy-sell-modal__body>form{height:-moz-fit-content !important;height:fit-content !important}}@media(max-width: 1279px){.buy-sell-modal__footer{border-top:2px solid var(--general-section-1);display:flex;flex-direction:row;justify-content:flex-end;margin-top:auto;padding:1.6rem}}.buy-sell-modal__layout{padding:0;padding:initial}.buy-sell-modal-field{margin-bottom:0 !important}.buy-sell-modal-field{flex:1;height:-moz-fit-content;height:fit-content}.buy-sell-modal-field .dc-input__container{width:91%;padding:.5rem 1rem .5rem 1.2rem}.buy-sell-modal-field--disable{opacity:.32}.buy-sell-modal-field--textarea{border-top:1px solid var(--general-section-5);margin-bottom:3.5rem;padding:1.8rem 2.4rem 0}.buy-sell-modal-field--textarea .dc-input__container{height:9.7rem}.buy-sell-modal-field--textarea .dc-input__field{height:100% !important}.buy-sell-modal-field-wrapper{display:flex;margin:-2.4rem 0 1.6rem -2.4rem;padding:0 2.4rem;word-break:break-word}.buy-sell-modal-field-wrapper>*{margin:2.4rem 0 0 2.4rem}@media(max-width: 1279px){.buy-sell-modal-field-wrapper{flex-direction:column}.buy-sell-modal-field-wrapper .dc-input__wrapper{margin-top:2.5rem;width:90vw}}.buy-sell-modal-field-wrapper>.dc-input{margin-top:1rem}.buy-sell-modal__form{height:-moz-fit-content !important;height:fit-content !important}.buy-sell-modal-hintbox{margin:-0.5rem 0 2.4rem;padding:0 2.4rem}.buy-sell-modal-hintbox .dc-hint-box__icon{align-self:flex-start}.buy-sell-modal__icon{margin-right:.8rem}.buy-sell-modal-line{border-top:1px solid var(--general-section-5);margin:1.6rem 0;width:100%}.buy-sell-modal-payment-method{padding:0 2.4rem}.buy-sell-modal-payment-method--container{align-self:center;display:flex;flex-direction:column;margin-bottom:1.6rem;padding:0 2.4rem}.buy-sell-modal-payment-method--icon{border-radius:2px;margin-right:.8rem}.buy-sell-modal-payment-method--row{align-items:center;display:flex;flex-direction:row;margin-bottom:.8rem}.buy-sell-modal-payment-method--title{margin-bottom:.8rem}.buy-sell-modal--input{display:flex;gap:2rem;flex-direction:column;padding:0 2.4rem 2rem;margin-bottom:2rem}.buy-sell-modal--input .dc-input__wrapper{margin-right:.2rem;margin-bottom:0;margin-bottom:initial}@media(min-width: 1280px){.buy-sell-modal--input-field{display:flex}}@media(max-width: 1279px){.buy-sell-modal--input .dc-input__container{width:100%;padding:.5rem 1rem .5rem 1.2rem}.buy-sell-modal--input .dc-input__wrapper{margin:.8rem .2rem 1.4rem 0}}.buy-sell-modal--sell-payment-methods{display:flex;flex-wrap:wrap;gap:.8rem;margin:1.6rem 0 2.4rem}.buy-sell-modal--sell-payment-methods .payment-method-card{margin:0;margin:initial}@media(max-width: 1279px){.buy-sell-modal--sell-payment-methods .payment-method-card{min-height:8.8rem;min-width:0;min-width:initial;width:13.6rem}}.buy-sell-modal--sell-payment-methods .payment-method-card--add{margin:0;margin:initial}@media(max-width: 1279px){.buy-sell-modal--sell-payment-methods .payment-method-card--add{min-height:8.8rem;width:13.6rem}}.buy-sell-modal--sell-payment-methods .payment-method-card__body{margin-top:.8rem}@media(max-width: 1279px){.buy-sell-modal--sell-payment-methods .payment-method-card__body{margin-top:0}}.buy-sell-modal--sell-payment-methods--disable{opacity:.32}.buy-sell-modal__content .dc-input{margin-bottom:0;margin-bottom:initial}.dc-modal__container_buy-sell-modal .dc-modal-header--buy-sell-modal{border-bottom:2px solid var(--general-section-5)}.dc-modal__container_buy-sell-modal .dc-modal-footer--separator{margin-top:1rem;border-top:2px solid var(--general-section-5)}@media(min-width: 1280px){.notification-messages{z-index:9999}}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/modal-manager/modals/buy-sell-modal/buy-sell-modal.scss\"],\"names\":[],\"mappings\":\"AAysBA,gBACI,oBAAA,CAxBA,0BA2BI,kEACI,gDAAA,CAAA,CAIR,sBACI,iBAAA,CACA,aAAA,CACA,kBAAA,CAnCJ,0BAsCQ,2BACI,kCAAA,CAAA,6BAAA,CAAA,CAvCZ,0BA4CA,wBAEQ,6CAAA,CACA,YAAA,CACA,kBAAA,CACA,wBAAA,CACA,eAAA,CACA,cAAA,CAAA,CAIR,wBACI,SAAA,CAAA,eAAA,CAGJ,sBACI,0BAEA,CAHJ,sBAEI,MAAA,CACA,uBAAA,CAAA,kBAAA,CAEA,2CACI,SAAA,CACA,+BAAA,CAGJ,+BACI,WAAA,CAGJ,gCACI,6CAAA,CACA,oBAAA,CACA,uBAAA,CAGI,qDACI,aAAA,CAEJ,iDACI,sBAAA,CAKZ,8BAEI,YAAA,CACA,+BAAA,CACA,gBAAA,CACA,qBAAA,CAEA,gCACI,wBAAA,CAhGZ,0BAwFI,8BAYQ,qBAAA,CAEA,iDACI,iBAAA,CACA,UAAA,CAAA,CAIR,wCACI,eAAA,CAKZ,sBACI,kCAAA,CAAA,6BAAA,CAGJ,wBACI,uBAAA,CACA,gBAAA,CAGI,2CACI,qBAAA,CAKZ,sBACI,kBAAA,CAGJ,qBACI,6CAAA,CACA,eAAA,CACA,UAAA,CAGJ,+BACI,gBAAA,CACA,0CACI,iBAAA,CACA,YAAA,CACA,qBAAA,CACA,oBAAA,CACA,gBAAA,CAGJ,qCACI,iBAAA,CACA,kBAAA,CAGJ,oCACI,kBAAA,CACA,YAAA,CACA,kBAAA,CACA,mBAAA,CAGJ,sCACI,mBAAA,CAIR,uBACI,YAAA,CACA,QAAA,CACA,qBAAA,CACA,qBAAA,CACA,kBAAA,CACA,0CACI,kBAAA,CACA,eAAA,CAAA,qBAAA,CApLR,0BAuLI,6BAEQ,YAAA,CAAA,CAnLZ,0BAwLY,4CACI,UAAA,CACA,+BAAA,CAEJ,0CACI,2BAAA,CAAA,CAMhB,sCACI,YAAA,CACA,cAAA,CACA,SAAA,CACA,sBAAA,CAEA,2DACI,QAAA,CAAA,cAAA,CA1MR,0BAyMI,2DAIQ,iBAAA,CACA,WAAA,CAAA,iBAAA,CACA,aAAA,CAAA,CAGJ,gEACI,QAAA,CAAA,cAAA,CAnNZ,0BAkNQ,gEAIQ,iBAAA,CACA,aAAA,CAAA,CAGR,iEACI,gBAAA,CA3NZ,0BA0NQ,iEAIQ,YAAA,CAAA,CAKZ,+CACI,WAAA,CAMR,mCACI,eAAA,CAAA,qBAAA,CAIJ,qEACI,gDAAA,CAGJ,gEACI,eAAA,CACA,6CAAA,CA3PJ,0BA+PJ,uBAEQ,YAAA,CAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n.buy-sell-modal {\\n    opacity: 1 !important;\\n\\n    @include mobile-or-tablet-screen {\\n        .dc-mobile-full-page-modal__header--border-bottom {\\n            border-bottom: 2px solid var(--general-section-1);\\n        }\\n    }\\n\\n    &__body {\\n        position: relative;\\n        display: block;\\n        padding-top: 2.4rem;\\n\\n        @include mobile-or-tablet-screen {\\n            & > form {\\n                height: fit-content !important;\\n            }\\n        }\\n    }\\n\\n    &__footer {\\n        @include mobile-or-tablet-screen {\\n            border-top: 2px solid var(--general-section-1);\\n            display: flex;\\n            flex-direction: row;\\n            justify-content: flex-end;\\n            margin-top: auto;\\n            padding: 1.6rem;\\n        }\\n    }\\n\\n    &__layout {\\n        padding: unset;\\n    }\\n\\n    &-field {\\n        margin-bottom: 0 !important;\\n        flex: 1;\\n        height: fit-content;\\n\\n        .dc-input__container {\\n            width: 91%;\\n            padding: 0.5rem 1rem 0.5rem 1.2rem;\\n        }\\n\\n        &--disable {\\n            opacity: 0.32;\\n        }\\n\\n        &--textarea {\\n            border-top: 1px solid var(--general-section-5);\\n            margin-bottom: 3.5rem;\\n            padding: 1.8rem 2.4rem 0;\\n\\n            .dc-input {\\n                &__container {\\n                    height: 9.7rem;\\n                }\\n                &__field {\\n                    height: 100% !important;\\n                }\\n            }\\n        }\\n\\n        &-wrapper {\\n            $gap: 2.4rem;\\n            display: flex;\\n            margin: -#{$gap} 0 1.6rem -#{$gap};\\n            padding: 0 2.4rem;\\n            word-break: break-word;\\n\\n            & > * {\\n                margin: $gap 0 0 $gap;\\n            }\\n\\n            @include mobile-or-tablet-screen {\\n                flex-direction: column;\\n\\n                .dc-input__wrapper {\\n                    margin-top: 2.5rem;\\n                    width: 90vw;\\n                }\\n            }\\n\\n            > .dc-input {\\n                margin-top: 1rem; // Compensate for label.\\n            }\\n        }\\n    }\\n\\n    &__form {\\n        height: fit-content !important;\\n    }\\n\\n    &-hintbox {\\n        margin: -0.5rem 0 2.4rem;\\n        padding: 0 2.4rem;\\n\\n        .dc-hint-box {\\n            &__icon {\\n                align-self: flex-start;\\n            }\\n        }\\n    }\\n\\n    &__icon {\\n        margin-right: 0.8rem;\\n    }\\n\\n    &-line {\\n        border-top: 1px solid var(--general-section-5);\\n        margin: 1.6rem 0;\\n        width: 100%;\\n    }\\n\\n    &-payment-method {\\n        padding: 0 2.4rem;\\n        &--container {\\n            align-self: center;\\n            display: flex;\\n            flex-direction: column;\\n            margin-bottom: 1.6rem;\\n            padding: 0 2.4rem;\\n        }\\n\\n        &--icon {\\n            border-radius: 2px;\\n            margin-right: 0.8rem;\\n        }\\n\\n        &--row {\\n            align-items: center;\\n            display: flex;\\n            flex-direction: row;\\n            margin-bottom: 0.8rem;\\n        }\\n\\n        &--title {\\n            margin-bottom: 0.8rem;\\n        }\\n    }\\n\\n    &--input {\\n        display: flex;\\n        gap: 2rem;\\n        flex-direction: column;\\n        padding: 0 2.4rem 2rem;\\n        margin-bottom: 2rem;\\n        .dc-input__wrapper {\\n            margin-right: 0.2rem;\\n            margin-bottom: unset;\\n        }\\n\\n        &-field {\\n            @include desktop-screen {\\n                display: flex;\\n            }\\n        }\\n        @include mobile-or-tablet-screen {\\n            .dc-input {\\n                &__container {\\n                    width: 100%;\\n                    padding: 0.5rem 1rem 0.5rem 1.2rem;\\n                }\\n                &__wrapper {\\n                    margin: 0.8rem 0.2rem 1.4rem 0;\\n                }\\n            }\\n        }\\n    }\\n\\n    &--sell-payment-methods {\\n        display: flex;\\n        flex-wrap: wrap;\\n        gap: 0.8rem;\\n        margin: 1.6rem 0 2.4rem;\\n\\n        .payment-method-card {\\n            margin: unset;\\n\\n            @include mobile-or-tablet-screen {\\n                min-height: 8.8rem;\\n                min-width: unset;\\n                width: 13.6rem;\\n            }\\n\\n            &--add {\\n                margin: unset;\\n\\n                @include mobile-or-tablet-screen {\\n                    min-height: 8.8rem;\\n                    width: 13.6rem;\\n                }\\n            }\\n            &__body {\\n                margin-top: 0.8rem;\\n\\n                @include mobile-or-tablet-screen {\\n                    margin-top: 0;\\n                }\\n            }\\n        }\\n\\n        &--disable {\\n            opacity: 0.32;\\n        }\\n    }\\n}\\n\\n.buy-sell-modal__content {\\n    .dc-input {\\n        margin-bottom: unset;\\n    }\\n}\\n.dc-modal__container_buy-sell-modal {\\n    .dc-modal-header--buy-sell-modal {\\n        border-bottom: 2px solid var(--general-section-5);\\n    }\\n\\n    .dc-modal-footer--separator {\\n        margin-top: 1rem;\\n        border-top: 2px solid var(--general-section-5);\\n    }\\n}\\n\\n.notification-messages {\\n    @include desktop-screen {\\n        z-index: 9999;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"@media(max-width: 1279px){.buy-sell-form-receive-amount{border-top:1px solid var(--general-section-2);padding:.8rem 1.6rem;background-color:var(--general-main-1)}}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/pages/buy-sell/buy-sell-form-receive-amount.scss\"],\"names\":[],\"mappings\":\"AAkrBI,0BAuBJ,8BAEQ,6CAAA,CACA,oBAAA,CACA,sCAAA,CAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n.buy-sell-form-receive-amount {\\n    @include mobile-or-tablet-screen {\\n        border-top: 1px solid var(--general-section-2);\\n        padding: 0.8rem 1.6rem;\\n        background-color: var(--general-main-1);\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".buy-sell-form{opacity:1 !important}@media(max-width: 1279px){.buy-sell-form .dc-mobile-full-page-modal__header--border-bottom{border-bottom:2px solid var(--general-section-1)}}.buy-sell-form__content .dc-input{margin-bottom:0;margin-bottom:initial}.buy-sell-form__field{margin-bottom:0 !important}.buy-sell-form__field{flex:1;min-height:4rem}.buy-sell-form__field .dc-input__container{width:91%;padding:.5rem 1rem .5rem 1.2rem}.buy-sell-form__field--disable{opacity:.32}.buy-sell-form__field--floating{margin-top:2.2rem}.buy-sell-form__field--textarea{border-top:1px solid var(--general-section-5);margin-bottom:3.5rem;padding:1.8rem 2.4rem 0}.buy-sell-form__field--textarea .dc-input__container{height:9.7rem}.buy-sell-form__field--textarea .dc-input__field{padding-top:1rem;padding-bottom:1rem}.buy-sell-form__field-rate{display:flex;align-items:center;gap:.5rem}.buy-sell-form__field-rate--floating{position:absolute}@media(min-width: 1280px){.buy-sell-form__field-rate--floating:hover{position:fixed}}.buy-sell-form__field-rate .dc-tooltip[data-tooltip]:before{background:var(--general-active);color:var(--text-prominent);width:17rem;border-radius:.8rem;left:9rem;text-align:center}.buy-sell-form__field-rate .dc-tooltip[data-tooltip]:after{border-top-color:var(--general-active);left:10rem}.buy-sell-form__field-rate--float{color:#1789e1;background:rgba(44,154,255,.08);padding:.2rem .4rem;border-radius:.4rem;cursor:pointer}.buy-sell-form__field-wrapper{display:flex;margin:-2.4rem 0 1.6rem -2.4rem;padding:0 2.4rem;word-break:break-word}.buy-sell-form__field-wrapper>*{margin:2.4rem 0 0 2.4rem}@media(max-width: 1279px){.buy-sell-form__field-wrapper{flex-direction:column}.buy-sell-form__field-wrapper .dc-input__wrapper{margin-top:2.5rem;width:90vw}}.buy-sell-form__field-wrapper>.dc-input{margin-top:1rem}.buy-sell-form-body{position:relative;display:block;padding-top:2.4rem}@media(max-width: 1279px){.buy-sell-form-body>form{height:-moz-fit-content !important;height:fit-content !important}}.buy-sell-form-danger{margin-bottom:1.6rem;width:-moz-fit-content;width:fit-content;align-items:flex-start}.buy-sell-form-form{height:-moz-fit-content !important;height:fit-content !important}@media(max-width: 1279px){.buy-sell-form-footer{border-top:2px solid var(--general-section-1);display:flex;flex-direction:row;justify-content:flex-end;margin-top:auto;padding:1.6rem}}.buy-sell-form--input{display:flex;gap:2rem;flex-direction:column;padding:0 2.4rem 2rem;margin-bottom:2rem}.buy-sell-form--input .dc-input__wrapper{margin-right:.2rem;margin-bottom:0;margin-bottom:initial}@media(min-width: 1280px){.buy-sell-form--input-field{display:flex}}@media(max-width: 1279px){.buy-sell-form--input .dc-input__container{width:100%;padding:.5rem 1rem .5rem 1.2rem}.buy-sell-form--input .dc-input__wrapper{margin:.8rem .2rem 1.4rem 0}}.buy-sell-form__inline-message{margin-bottom:2.4rem;padding:0 2.4rem}.buy-sell-form-icon{margin-right:.8rem}.buy-sell-form-line{border-top:1px solid var(--general-section-5);margin:1.6rem 0;width:100%}.buy-sell-form-payment-method{padding:0 2.4rem}.buy-sell-form-payment-method--container{align-self:center;display:flex;flex-direction:column;margin-bottom:1.6rem;padding:0 2.4rem}[dir=\\\"ltr\\\"] .buy-sell-form-payment-method--icon{margin-right:.8rem}[dir=\\\"rtl\\\"] .buy-sell-form-payment-method--icon{margin-left:.8rem}.buy-sell-form-payment-method--icon{border-radius:2px}.buy-sell-form-payment-method--row{align-items:center;display:flex;flex-direction:row;margin-bottom:.8rem}.buy-sell-form-payment-method--title{margin-bottom:.8rem}@media(max-width: 1279px){.buy-sell-form-receive-amount{border-top:1px solid var(--general-section-2);padding:.8rem 1.6rem;background-color:var(--general-main-1)}}.buy-sell-form--sell-payment-methods{display:flex;flex-wrap:wrap;gap:.8rem;margin:1.6rem 0 2.4rem}.buy-sell-form--sell-payment-methods .payment-method-card{margin:0;margin:initial}@media(max-width: 1279px){.buy-sell-form--sell-payment-methods .payment-method-card{min-height:8.8rem;min-width:0;min-width:initial;width:13.6rem}}.buy-sell-form--sell-payment-methods .payment-method-card--add{margin:0;margin:initial}@media(max-width: 1279px){.buy-sell-form--sell-payment-methods .payment-method-card--add{min-height:8.8rem;width:13.6rem}}.buy-sell-form--sell-payment-methods .payment-method-card__body{margin-top:.8rem}@media(max-width: 1279px){.buy-sell-form--sell-payment-methods .payment-method-card__body{margin-top:0}}.buy-sell-form--sell-payment-methods--disable{opacity:.32}.buy-sell-form--layout{padding:0;padding:initial}.buy-sell-form--error-message{padding:0 2.4rem}.dc-modal__container_buy-sell-form .dc-modal-header--buy-sell-form{border-bottom:2px solid var(--general-section-5)}.dc-modal__container_buy-sell-form .dc-modal-footer--separator{margin-top:1rem;border-top:2px solid var(--general-section-5)}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/pages/buy-sell/buy-sell-form.scss\"],\"names\":[],\"mappings\":\"AAysBA,eACI,oBAAA,CAxBA,0BA2BI,iEACI,gDAAA,CAAA,CAKJ,kCACI,eAAA,CAAA,qBAAA,CAIR,sBACI,0BAEA,CAHJ,sBAEI,MAAA,CACA,eAAA,CAEA,2CACI,SAAA,CACA,+BAAA,CAGJ,+BACI,WAAA,CAGJ,gCACI,iBAAA,CAGJ,gCACI,6CAAA,CACA,oBAAA,CACA,uBAAA,CAGI,qDACI,aAAA,CAGJ,iDACI,gBAAA,CAAA,mBAAA,CAKZ,2BACI,YAAA,CACA,kBAAA,CACA,SAAA,CAEA,qCACI,iBAAA,CApFZ,0BAsFY,2CAEQ,cAAA,CAAA,CAKZ,4DACI,gCAAA,CACA,2BAAA,CACA,WAAA,CACA,mBAAA,CACA,SAAA,CACA,iBAAA,CAGJ,2DACI,sCAAA,CACA,UAAA,CAGJ,kCACI,aAAA,CACA,+BAAA,CACA,mBAAA,CACA,mBAAA,CACA,cAAA,CAIR,8BAEI,YAAA,CACA,+BAAA,CACA,gBAAA,CACA,qBAAA,CAEA,gCACI,wBAAA,CAtHZ,0BA8GI,8BAYQ,qBAAA,CAEA,iDACI,iBAAA,CACA,UAAA,CAAA,CAIR,wCACI,eAAA,CAKZ,oBACI,iBAAA,CACA,aAAA,CACA,kBAAA,CA3IJ,0BA8IQ,yBACI,kCAAA,CAAA,6BAAA,CAAA,CAKZ,sBACI,oBAAA,CACA,sBAAA,CAAA,iBAAA,CACA,sBAAA,CAGJ,oBACI,kCAAA,CAAA,6BAAA,CA3JJ,0BA8JA,sBAEQ,6CAAA,CACA,YAAA,CACA,kBAAA,CACA,wBAAA,CACA,eAAA,CACA,cAAA,CAAA,CAIR,sBACI,YAAA,CACA,QAAA,CACA,qBAAA,CACA,qBAAA,CACA,kBAAA,CACA,yCACI,kBAAA,CACA,eAAA,CAAA,qBAAA,CAvLR,0BA0LI,4BAEQ,YAAA,CAAA,CAtLZ,0BA2LY,2CACI,UAAA,CACA,+BAAA,CAEJ,yCACI,2BAAA,CAAA,CAMhB,+BACI,oBAAA,CACA,gBAAA,CAGJ,oBACI,kBAAA,CAGJ,oBACI,6CAAA,CACA,eAAA,CACA,UAAA,CAGJ,8BACI,gBAAA,CACA,yCACI,iBAAA,CACA,YAAA,CACA,qBAAA,CACA,oBAAA,CACA,gBAAA,CAGJ,gDAEI,kBAAA,CAFJ,gDAEI,iBAAA,CAFJ,oCACI,iBACA,CAGJ,mCACI,kBAAA,CACA,YAAA,CACA,kBAAA,CACA,mBAAA,CAGJ,qCACI,mBAAA,CA5OR,0BAgPA,8BAEQ,6CAAA,CACA,oBAAA,CACA,sCAAA,CAAA,CAIR,qCACI,YAAA,CACA,cAAA,CACA,SAAA,CACA,sBAAA,CAEA,0DACI,QAAA,CAAA,cAAA,CA/PR,0BA8PI,0DAIQ,iBAAA,CACA,WAAA,CAAA,iBAAA,CACA,aAAA,CAAA,CAGJ,+DACI,QAAA,CAAA,cAAA,CAxQZ,0BAuQQ,+DAIQ,iBAAA,CACA,aAAA,CAAA,CAGR,gEACI,gBAAA,CAhRZ,0BA+QQ,gEAIQ,YAAA,CAAA,CAKZ,8CACI,WAAA,CAIR,uBACI,SAAA,CAAA,eAAA,CAGJ,8BACI,gBAAA,CAKJ,mEACI,gDAAA,CAGJ,+DACI,eAAA,CACA,6CAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n.buy-sell-form {\\n    opacity: 1 !important;\\n\\n    @include mobile-or-tablet-screen {\\n        .dc-mobile-full-page-modal__header--border-bottom {\\n            border-bottom: 2px solid var(--general-section-1);\\n        }\\n    }\\n\\n    &__content {\\n        .dc-input {\\n            margin-bottom: unset;\\n        }\\n    }\\n\\n    &__field {\\n        margin-bottom: 0 !important;\\n        flex: 1;\\n        min-height: 4rem;\\n\\n        .dc-input__container {\\n            width: 91%;\\n            padding: 0.5rem 1rem 0.5rem 1.2rem;\\n        }\\n\\n        &--disable {\\n            opacity: 0.32;\\n        }\\n\\n        &--floating {\\n            margin-top: 2.2rem;\\n        }\\n\\n        &--textarea {\\n            border-top: 1px solid var(--general-section-5);\\n            margin-bottom: 3.5rem;\\n            padding: 1.8rem 2.4rem 0;\\n\\n            .dc-input {\\n                &__container {\\n                    height: 9.7rem;\\n                }\\n\\n                &__field {\\n                    padding-block: 1rem;\\n                }\\n            }\\n        }\\n\\n        &-rate {\\n            display: flex;\\n            align-items: center;\\n            gap: 0.5rem;\\n\\n            &--floating {\\n                position: absolute;\\n\\n                &:hover {\\n                    @include desktop-screen {\\n                        position: fixed;\\n                    }\\n                }\\n            }\\n\\n            .dc-tooltip[data-tooltip]:before {\\n                background: var(--general-active);\\n                color: var(--text-prominent);\\n                width: 17rem;\\n                border-radius: 0.8rem;\\n                left: 9rem;\\n                text-align: center;\\n            }\\n\\n            .dc-tooltip[data-tooltip]:after {\\n                border-top-color: var(--general-active);\\n                left: 10rem;\\n            }\\n\\n            &--float {\\n                color: #1789e1;\\n                background: rgba(44, 154, 255, 0.08);\\n                padding: 0.2rem 0.4rem;\\n                border-radius: 0.4rem;\\n                cursor: pointer;\\n            }\\n        }\\n\\n        &-wrapper {\\n            $gap: 2.4rem;\\n            display: flex;\\n            margin: -#{$gap} 0 1.6rem -#{$gap};\\n            padding: 0 2.4rem;\\n            word-break: break-word;\\n\\n            & > * {\\n                margin: $gap 0 0 $gap;\\n            }\\n\\n            @include mobile-or-tablet-screen {\\n                flex-direction: column;\\n\\n                .dc-input__wrapper {\\n                    margin-top: 2.5rem;\\n                    width: 90vw;\\n                }\\n            }\\n\\n            > .dc-input {\\n                margin-top: 1rem; // Compensate for label.\\n            }\\n        }\\n    }\\n\\n    &-body {\\n        position: relative;\\n        display: block;\\n        padding-top: 2.4rem;\\n\\n        @include mobile-or-tablet-screen {\\n            & > form {\\n                height: fit-content !important;\\n            }\\n        }\\n    }\\n\\n    &-danger {\\n        margin-bottom: 1.6rem;\\n        width: fit-content;\\n        align-items: flex-start;\\n    }\\n\\n    &-form {\\n        height: fit-content !important;\\n    }\\n\\n    &-footer {\\n        @include mobile-or-tablet-screen {\\n            border-top: 2px solid var(--general-section-1);\\n            display: flex;\\n            flex-direction: row;\\n            justify-content: flex-end;\\n            margin-top: auto;\\n            padding: 1.6rem;\\n        }\\n    }\\n\\n    &--input {\\n        display: flex;\\n        gap: 2rem;\\n        flex-direction: column;\\n        padding: 0 2.4rem 2rem;\\n        margin-bottom: 2rem;\\n        .dc-input__wrapper {\\n            margin-right: 0.2rem;\\n            margin-bottom: unset;\\n        }\\n\\n        &-field {\\n            @include desktop-screen {\\n                display: flex;\\n            }\\n        }\\n        @include mobile-or-tablet-screen {\\n            .dc-input {\\n                &__container {\\n                    width: 100%;\\n                    padding: 0.5rem 1rem 0.5rem 1.2rem;\\n                }\\n                &__wrapper {\\n                    margin: 0.8rem 0.2rem 1.4rem 0;\\n                }\\n            }\\n        }\\n    }\\n\\n    &__inline-message {\\n        margin-bottom: 2.4rem;\\n        padding: 0 2.4rem;\\n    }\\n\\n    &-icon {\\n        margin-right: 0.8rem;\\n    }\\n\\n    &-line {\\n        border-top: 1px solid var(--general-section-5);\\n        margin: 1.6rem 0;\\n        width: 100%;\\n    }\\n\\n    &-payment-method {\\n        padding: 0 2.4rem;\\n        &--container {\\n            align-self: center;\\n            display: flex;\\n            flex-direction: column;\\n            margin-bottom: 1.6rem;\\n            padding: 0 2.4rem;\\n        }\\n\\n        &--icon {\\n            border-radius: 2px;\\n            margin-inline-end: 0.8rem;\\n        }\\n\\n        &--row {\\n            align-items: center;\\n            display: flex;\\n            flex-direction: row;\\n            margin-bottom: 0.8rem;\\n        }\\n\\n        &--title {\\n            margin-bottom: 0.8rem;\\n        }\\n    }\\n\\n    &-receive-amount {\\n        @include mobile-or-tablet-screen {\\n            border-top: 1px solid var(--general-section-2);\\n            padding: 0.8rem 1.6rem;\\n            background-color: var(--general-main-1);\\n        }\\n    }\\n\\n    &--sell-payment-methods {\\n        display: flex;\\n        flex-wrap: wrap;\\n        gap: 0.8rem;\\n        margin: 1.6rem 0 2.4rem;\\n\\n        .payment-method-card {\\n            margin: unset;\\n\\n            @include mobile-or-tablet-screen {\\n                min-height: 8.8rem;\\n                min-width: unset;\\n                width: 13.6rem;\\n            }\\n\\n            &--add {\\n                margin: unset;\\n\\n                @include mobile-or-tablet-screen {\\n                    min-height: 8.8rem;\\n                    width: 13.6rem;\\n                }\\n            }\\n            &__body {\\n                margin-top: 0.8rem;\\n\\n                @include mobile-or-tablet-screen {\\n                    margin-top: 0;\\n                }\\n            }\\n        }\\n\\n        &--disable {\\n            opacity: 0.32;\\n        }\\n    }\\n\\n    &--layout {\\n        padding: unset;\\n    }\\n\\n    &--error-message {\\n        padding: 0 2.4rem;\\n    }\\n}\\n\\n.dc-modal__container_buy-sell-form {\\n    .dc-modal-header--buy-sell-form {\\n        border-bottom: 2px solid var(--general-section-5);\\n    }\\n\\n    .dc-modal-footer--separator {\\n        margin-top: 1rem;\\n        border-top: 2px solid var(--general-section-5);\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","var api = require(\"!../../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./buy-sell-modal-error.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./buy-sell-modal-footer.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./buy-sell-modal-title.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./buy-sell-modal.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./buy-sell-form-receive-amount.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./buy-sell-form.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","import React from 'react';\nimport { Text } from '@deriv/components';\nimport { getFormattedText } from '@deriv/shared';\nimport { observer } from '@deriv/stores';\nimport { Localize } from 'Components/i18next';\nimport { roundOffDecimal } from 'Utils/format-value';\nimport { useStores } from 'Stores';\nimport './buy-sell-form-receive-amount.scss';\n\nconst BuySellFormReceiveAmount = () => {\n    const { buy_sell_store } = useStores();\n\n    return (\n        <div className='buy-sell-form-receive-amount'>\n            <Text as='p' color='less-prominent' size='xxs'>\n                {buy_sell_store?.is_sell_advert ? (\n                    <Localize i18n_default_text=\"You'll receive\" />\n                ) : (\n                    <Localize i18n_default_text=\"You'll send\" />\n                )}\n            </Text>\n            <Text as='p' size='xs' weight='bold'>\n                {getFormattedText(\n                    roundOffDecimal(buy_sell_store?.receive_amount),\n                    buy_sell_store?.advert?.local_currency\n                )}\n            </Text>\n        </div>\n    );\n};\n\nexport default observer(BuySellFormReceiveAmount);\n","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { useFormik } from 'formik';\nimport { reaction } from 'mobx';\nimport { observer, Observer } from 'mobx-react-lite';\nimport { Input, Text, Tooltip } from '@deriv/components';\nimport { useP2PAdvertiserPaymentMethods, useP2PExchangeRate } from '@deriv/hooks';\nimport { getDecimalPlaces } from '@deriv/shared';\nimport { useDevice } from '@deriv-com/ui';\nimport { localize, Localize } from 'Components/i18next';\nimport { useModalManagerContext } from 'Components/modal-manager/modal-manager-context';\nimport { ad_type } from 'Constants/floating-rate';\nimport { useStores } from 'Stores';\nimport BuySellFormReceiveAmount from './buy-sell-form-receive-amount.jsx';\nimport PaymentMethodCard from 'Components/payment-method-card';\nimport { floatingPointValidator } from 'Utils/validations';\nimport { countDecimalPlaces } from 'Utils/string';\nimport { formatTime } from 'Utils/orders';\nimport { generateEffectiveRate, setDecimalPlaces, roundOffDecimal, removeTrailingZeros } from 'Utils/format-value';\nimport PaymentMethodIcon from 'Components/payment-method-icon';\nimport './buy-sell-form.scss';\n\nconst BuySellForm = props => {\n    const { isDesktop } = useDevice();\n    const { advertiser_page_store, buy_sell_store, general_store, my_profile_store } = useStores();\n    const [selected_methods, setSelectedMethods] = React.useState([]);\n    const { data: p2p_advertiser_payment_methods } = useP2PAdvertiserPaymentMethods();\n    const { stacked_modal } = useModalManagerContext();\n\n    const { advert, has_rate_changed, setHasRateChanged, setPageFooterParent } = props;\n    const {\n        advertiser_details,\n        description,\n        effective_rate: market_rate,\n        local_currency,\n        max_order_amount_limit_display,\n        min_order_amount_limit,\n        min_order_amount_limit_display,\n        order_expiry_period,\n        payment_method_names,\n        price,\n        rate,\n        rate_type,\n    } = advert || {};\n\n    const exchange_rate = useP2PExchangeRate(local_currency);\n    const order_completion_time = order_expiry_period / 60;\n    const [input_amount, setInputAmount] = React.useState(min_order_amount_limit);\n    const [current_effective_rate, setCurrentEffectiveRate] = React.useState(0);\n    const [changed_rate, setChangedRate] = React.useState(undefined);\n\n    React.useEffect(() => {\n        buy_sell_store.setFormProps({ ...props, input_amount });\n    }, [props, buy_sell_store, input_amount]);\n\n    const { effective_rate, display_effective_rate } = generateEffectiveRate({\n        price,\n        rate_type,\n        rate,\n        local_currency,\n        exchange_rate,\n        market_rate,\n    });\n\n    const { advertiser_buy_limit, advertiser_sell_limit, balance } = general_store;\n\n    const should_disable_field =\n        !buy_sell_store.is_buy_advert && (parseFloat(balance) === 0 || parseFloat(balance) < min_order_amount_limit);\n\n    const style = {\n        borderColor: 'var(--brand-secondary)',\n        borderWidth: '2px',\n        cursor: should_disable_field ? 'not-allowed' : 'pointer',\n    };\n\n    const calculated_rate = removeTrailingZeros(roundOffDecimal(effective_rate, setDecimalPlaces(effective_rate, 6)));\n\n    const is_float = rate_type === ad_type.FLOAT;\n\n    React.useEffect(\n        () => {\n            my_profile_store.setShouldShowAddPaymentMethodForm(false);\n            my_profile_store.setSelectedPaymentMethod('');\n            my_profile_store.setSelectedPaymentMethodDisplayName('');\n            buy_sell_store.setHasPaymentMethods(!!payment_method_names);\n            setCurrentEffectiveRate(effective_rate);\n\n            const disposeReceiveAmountReaction = reaction(\n                () => buy_sell_store.receive_amount,\n                () => {\n                    if (!isDesktop && typeof setPageFooterParent === 'function') {\n                        setPageFooterParent(<BuySellFormReceiveAmount />);\n                    }\n                }\n            );\n\n            if (!my_profile_store.advertiser_has_payment_methods) {\n                my_profile_store.getPaymentMethodsList();\n                my_profile_store.getAdvertiserPaymentMethods();\n            }\n\n            advertiser_page_store.setFormErrorMessage('');\n            buy_sell_store.setInitialReceiveAmount(calculated_rate);\n\n            return () => {\n                disposeReceiveAmountReaction();\n            };\n        },\n        [] // eslint-disable-line react-hooks/exhaustive-deps\n    );\n\n    React.useEffect(() => {\n        const receive_amount = input_amount * calculated_rate;\n        buy_sell_store.setReceiveAmount(receive_amount);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [input_amount, calculated_rate]);\n\n    // This is to prevent the rate from changing when the MarketRateChangeErrorModal is shown on mobile and counterparty\n    // changes the rate. This is to ensure that the rate is not changed when the user is in the middle of placing an order.\n    React.useEffect(() => {\n        if (\n            !isDesktop &&\n            has_rate_changed &&\n            current_effective_rate !== effective_rate &&\n            stacked_modal?.key !== 'MarketRateChangeErrorModal'\n        ) {\n            setChangedRate(effective_rate);\n        }\n    }, [current_effective_rate, effective_rate, has_rate_changed, stacked_modal]);\n\n    React.useEffect(() => {\n        if (current_effective_rate !== effective_rate && current_effective_rate !== 0) setHasRateChanged(true);\n    }, [current_effective_rate, effective_rate, setHasRateChanged]);\n\n    const default_effective_rate = changed_rate ?? effective_rate;\n\n    const onClickPaymentMethodCard = payment_method => {\n        if (!should_disable_field) {\n            if (!buy_sell_store.payment_method_ids.includes(payment_method.id)) {\n                if (buy_sell_store.payment_method_ids.length < 3) {\n                    buy_sell_store.payment_method_ids.push(payment_method.id);\n                    setSelectedMethods([...selected_methods, payment_method.id]);\n                }\n            } else {\n                buy_sell_store.payment_method_ids = buy_sell_store.payment_method_ids.filter(\n                    payment_method_id => payment_method_id !== payment_method.id\n                );\n                setSelectedMethods(selected_methods.filter(i => i !== payment_method.id));\n            }\n        }\n    };\n\n    const { errors, getFieldProps, isSubmitting, isValid, validateForm, setFieldValue, submitForm, touched } =\n        useFormik({\n            enableReinitialize: true,\n            validate: buy_sell_store.validatePopup,\n            validateOnMount: !should_disable_field,\n            initialValues: {\n                amount: min_order_amount_limit,\n                contact_info: buy_sell_store.temp_contact_info || general_store.contact_info,\n                payment_info: buy_sell_store.temp_payment_info || general_store.payment_info,\n                rate: is_float ? default_effective_rate : null,\n            },\n            initialErrors: buy_sell_store.is_sell_advert ? { contact_info: true } : {},\n            onSubmit: (...args) => buy_sell_store.handleSubmit(...args),\n        });\n\n    const getAdvertiserMaxLimit = () => {\n        if (buy_sell_store.is_buy_advert) {\n            if (advertiser_buy_limit < max_order_amount_limit_display) return roundOffDecimal(advertiser_buy_limit);\n        } else if (advertiser_sell_limit < max_order_amount_limit_display)\n            return roundOffDecimal(advertiser_sell_limit);\n        return max_order_amount_limit_display;\n    };\n\n    React.useEffect(() => {\n        buy_sell_store.form_props.setIsSubmitDisabled(\n            !isValid ||\n                isSubmitting ||\n                (buy_sell_store.is_sell_advert && payment_method_names && selected_methods.length < 1)\n        );\n    }, [\n        isValid,\n        isSubmitting,\n        selected_methods.length,\n        buy_sell_store.is_sell_advert,\n        payment_method_names,\n        buy_sell_store.form_props,\n    ]);\n\n    React.useEffect(() => {\n        buy_sell_store.setSubmitForm(submitForm);\n    }, [submitForm]);\n\n    return (\n        <React.Fragment>\n            <form noValidate onSubmit={submitForm}>\n                <div className='buy-sell-form__content'>\n                    <div className='buy-sell-form__field-wrapper'>\n                        <div className='buy-sell-form__field'>\n                            <Text as='p' color='less-prominent' size='xxs'>\n                                {buy_sell_store.is_buy_advert ? (\n                                    <Localize i18n_default_text='Seller' />\n                                ) : (\n                                    <Localize i18n_default_text='Buyer' />\n                                )}\n                            </Text>\n                            <Text as='p' size='xs'>\n                                {advertiser_details?.name}\n                            </Text>\n                        </div>\n                        <div className='buy-sell-form__field'>\n                            <div\n                                className={classNames('buy-sell-form__field-rate', {\n                                    'buy-sell-form__field-rate--floating': is_float,\n                                })}\n                            >\n                                <Text as='p' color='less-prominent' size='xxs'>\n                                    <Localize\n                                        i18n_default_text='Rate (1 {{ currency }})'\n                                        values={{ currency: buy_sell_store.account_currency }}\n                                    />\n                                </Text>\n                                {is_float && (\n                                    <Tooltip\n                                        alignment='top'\n                                        message={localize('Floating exchange rate shifts with market fluctuations.')}\n                                    >\n                                        <Text as='p' className='buy-sell-form__field-rate--float' size='xxs'>\n                                            <Localize i18n_default_text='Floating' />\n                                        </Text>\n                                    </Tooltip>\n                                )}\n                            </div>\n                            <Text\n                                as='p'\n                                className={classNames({ 'buy-sell-form__field--floating': is_float })}\n                                size='xs'\n                            >\n                                {display_effective_rate} {local_currency}\n                            </Text>\n                        </div>\n                    </div>\n                    <div className='buy-sell-form-payment-method--container'>\n                        {payment_method_names && (\n                            <Text\n                                as='p'\n                                className='buy-sell-form-payment-method--title'\n                                color='less-prominent'\n                                size='xxs'\n                            >\n                                <Localize i18n_default_text='Payment methods' />\n                            </Text>\n                        )}\n                        {payment_method_names &&\n                            payment_method_names.map((payment_method, key) => (\n                                <div className='buy-sell-form-payment-method--row' key={key}>\n                                    <PaymentMethodIcon\n                                        className='buy-sell-form-payment-method--icon'\n                                        display_name={payment_method}\n                                    />\n                                    <Text as='p' size='xs'>\n                                        {payment_method}\n                                    </Text>\n                                </div>\n                            ))}\n                    </div>\n                    <div className='buy-sell-form__field-wrapper'>\n                        <div className='buy-sell-form__field'>\n                            <Text as='p' color='less-prominent' size='xxs'>\n                                {buy_sell_store.is_buy_advert ? (\n                                    <Localize i18n_default_text=\"Seller's instructions\" />\n                                ) : (\n                                    <Localize i18n_default_text=\"Buyer's instructions\" />\n                                )}\n                            </Text>\n                            {description &&\n                                description\n                                    .trim()\n                                    .replace(/([\\r\\n]){2,}/g, '\\n\\n')\n                                    .split('\\n')\n                                    .map((text, idx) => (\n                                        <Text key={idx} as='p' size='xs'>\n                                            {text || '-'}\n                                        </Text>\n                                    ))}\n                        </div>\n                    </div>\n                    <div className='buy-sell-form__field-wrapper'>\n                        <div className='buy-sell-form-field'>\n                            <Text as='p' color='less-prominent' size='xxs'>\n                                <Localize i18n_default_text='Orders must be completed in' />\n                            </Text>\n                            <Text as='p' color='general' size='xs'>\n                                {formatTime(order_completion_time)}\n                            </Text>\n                        </div>\n                    </div>\n                    <div className='buy-sell-form-line' />\n                    {buy_sell_store.is_sell_advert && payment_method_names && (\n                        <React.Fragment>\n                            <div className='buy-sell-form-payment-method'>\n                                <Text\n                                    as='p'\n                                    className='buy-sell-form-payment-method--title'\n                                    color='less-prominent'\n                                    size='xxs'\n                                >\n                                    <Localize i18n_default_text='Receive payment to' />\n                                </Text>\n                                <Text as='p' color='prominent' size='xxs'>\n                                    {my_profile_store.advertiser_has_payment_methods ? (\n                                        <Localize i18n_default_text='You may choose up to 3.' />\n                                    ) : (\n                                        <Localize i18n_default_text=\"To place an order, add one of the advertiser's preferred payment methods:\" />\n                                    )}\n                                </Text>\n                                <Observer>\n                                    {() => (\n                                        <div\n                                            className={classNames('buy-sell-form--sell-payment-methods', {\n                                                'buy-sell-form--sell-payment-methods--disable': should_disable_field,\n                                            })}\n                                        >\n                                            {payment_method_names\n                                                ?.map((add_payment_method, key) => {\n                                                    const {\n                                                        setSelectedPaymentMethodDisplayName,\n                                                        setShouldShowAddPaymentMethodForm,\n                                                    } = my_profile_store;\n                                                    const matching_payment_methods =\n                                                        p2p_advertiser_payment_methods?.filter(\n                                                            advertiser_payment_method =>\n                                                                advertiser_payment_method.display_name ===\n                                                                add_payment_method\n                                                        );\n\n                                                    return matching_payment_methods?.length > 0 ? (\n                                                        matching_payment_methods.map(payment_method => (\n                                                            <PaymentMethodCard\n                                                                is_vertical_ellipsis_visible={false}\n                                                                key={key}\n                                                                medium\n                                                                onClick={async () => {\n                                                                    onClickPaymentMethodCard(payment_method);\n                                                                    await validateForm();\n                                                                }}\n                                                                payment_method={payment_method}\n                                                                style={\n                                                                    selected_methods.includes(payment_method.id)\n                                                                        ? style\n                                                                        : {}\n                                                                }\n                                                                disabled={should_disable_field}\n                                                            />\n                                                        ))\n                                                    ) : (\n                                                        <PaymentMethodCard\n                                                            add_payment_method={add_payment_method}\n                                                            is_add\n                                                            key={key}\n                                                            medium\n                                                            onClickAdd={() => {\n                                                                if (!should_disable_field) {\n                                                                    setSelectedPaymentMethodDisplayName(\n                                                                        add_payment_method\n                                                                    );\n                                                                    setShouldShowAddPaymentMethodForm(true);\n                                                                }\n                                                            }}\n                                                            disabled={should_disable_field}\n                                                            style={{\n                                                                cursor: should_disable_field\n                                                                    ? 'not-allowed'\n                                                                    : 'pointer',\n                                                            }}\n                                                        />\n                                                    );\n                                                })\n                                                .sort(payment_method_card_node =>\n                                                    Array.isArray(payment_method_card_node) &&\n                                                    !payment_method_card_node[0].props?.is_add\n                                                        ? -1\n                                                        : 1\n                                                )}\n                                        </div>\n                                    )}\n                                </Observer>\n                            </div>\n                            <div className='buy-sell-form-line' />\n                        </React.Fragment>\n                    )}\n\n                    <div className='buy-sell-form--input'>\n                        <Text color='less-prominent' size='xxs'>\n                            {localize('Enter {{transaction_type}} amount', {\n                                transaction_type: buy_sell_store.is_buy_advert ? 'buy' : 'sell',\n                            })}\n                        </Text>\n                        <section className='buy-sell-form--input-field'>\n                            <Input\n                                {...getFieldProps('amount')}\n                                data-lpignore='true'\n                                type='number'\n                                error={errors.amount}\n                                label={localize('{{ad_type}}', {\n                                    ad_type: buy_sell_store.is_buy_advert ? 'Buy amount' : 'Sell amount',\n                                })}\n                                hint={\n                                    <Localize\n                                        i18n_default_text='Limit: {{min}}–{{max}} {{currency}}'\n                                        values={{\n                                            min: min_order_amount_limit_display,\n                                            max: getAdvertiserMaxLimit(),\n                                            currency: buy_sell_store.account_currency,\n                                        }}\n                                    />\n                                }\n                                is_relative_hint\n                                className='buy-sell-form__field'\n                                trailing_icon={\n                                    <Text color='less-prominent' size='xs'>\n                                        {buy_sell_store.account_currency}\n                                    </Text>\n                                }\n                                onKeyDown={event => {\n                                    if (!floatingPointValidator(event.key)) {\n                                        event.preventDefault();\n                                    }\n                                }}\n                                onChange={event => {\n                                    const { value } = event.target;\n\n                                    if (countDecimalPlaces(value) > getDecimalPlaces(buy_sell_store.account_currency)) {\n                                        setFieldValue('amount', parseFloat(input_amount));\n                                    } else {\n                                        setFieldValue('amount', parseFloat(value));\n                                        setInputAmount(value);\n                                    }\n                                }}\n                                required\n                                value={input_amount}\n                                disabled={should_disable_field}\n                            />\n                            {isDesktop && (\n                                <div\n                                    className={classNames('buy-sell-form__field', {\n                                        'buy-sell-form__field--disable': should_disable_field,\n                                    })}\n                                >\n                                    <BuySellFormReceiveAmount />\n                                </div>\n                            )}\n                        </section>\n                    </div>\n                    {buy_sell_store.is_sell_advert && (\n                        <React.Fragment>\n                            {!payment_method_names && (\n                                <div className='buy-sell-form__field--textarea'>\n                                    <Input\n                                        {...getFieldProps('payment_info')}\n                                        data-lpignore='true'\n                                        type='textarea'\n                                        error={touched.payment_info && errors.payment_info}\n                                        hint={localize('Bank name, account number, beneficiary name')}\n                                        is_relative_hint\n                                        label={localize('Your bank details')}\n                                        required\n                                        has_character_counter\n                                        initial_character_count={general_store.payment_info.length}\n                                        max_characters={300}\n                                        disabled={should_disable_field}\n                                        onChange={event => buy_sell_store.setTempPaymentInfo(event.target.value)}\n                                    />\n                                </div>\n                            )}\n                            <div className='buy-sell-form__field--textarea'>\n                                <Input\n                                    {...getFieldProps('contact_info')}\n                                    data-lpignore='true'\n                                    type='textarea'\n                                    error={touched.contact_info && errors.contact_info}\n                                    label={localize('Your contact details')}\n                                    required\n                                    has_character_counter\n                                    initial_character_count={general_store.contact_info.length}\n                                    max_characters={300}\n                                    disabled={should_disable_field}\n                                    onChange={event => buy_sell_store.setTempContactInfo(event.target.value)}\n                                />\n                            </div>\n                        </React.Fragment>\n                    )}\n                </div>\n            </form>\n        </React.Fragment>\n    );\n};\n\nBuySellForm.propTypes = {\n    advert: PropTypes.object,\n    contact_info: PropTypes.string,\n    form_props: PropTypes.object,\n    has_rate_changed: PropTypes.bool,\n    setIsSubmitDisabled: PropTypes.func,\n    setPageFooterParent: PropTypes.func,\n    has_payment_info: PropTypes.bool,\n    is_buy_advert: PropTypes.bool,\n    is_sell_advert: PropTypes.bool,\n    payment_info: PropTypes.string,\n    receive_amount: PropTypes.number,\n    setFormProps: PropTypes.func,\n    setHasRateChanged: PropTypes.func,\n    setInitialReceiveAmount: PropTypes.func,\n    setReceiveAmount: PropTypes.func,\n    validatePopup: PropTypes.func,\n};\n\nexport default observer(BuySellForm);\n","import React from 'react';\nimport { Button } from '@deriv/components';\nimport { localize } from 'Components/i18next';\nimport { useStores } from 'Stores';\n\ntype TBuySellModalFooterProps = {\n    is_submit_disabled: boolean;\n    onCancel: () => void;\n    onSubmit: null | void | (() => void);\n};\n\nconst BuySellModalFooter = ({ is_submit_disabled, onCancel, onSubmit }: TBuySellModalFooterProps) => {\n    const { my_profile_store } = useStores();\n\n    return (\n        <div\n            className={\n                my_profile_store.should_show_add_payment_method_form\n                    ? 'add-payment-method__footer'\n                    : 'buy-sell-modal-footer'\n            }\n        >\n            <Button.Group>\n                <Button secondary onClick={onCancel} large>\n                    {localize('Cancel')}\n                </Button>\n                <Button is_disabled={is_submit_disabled} primary large onClick={onSubmit}>\n                    {localize('Confirm')}\n                </Button>\n            </Button.Group>\n        </div>\n    );\n};\n\nexport default BuySellModalFooter;\n","import BuySellModalFooter from './buy-sell-modal-footer';\nimport './buy-sell-modal-footer.scss';\n\nexport default BuySellModalFooter;\n","import React from 'react';\nimport { Icon, Text } from '@deriv/components';\nimport { observer } from '@deriv/stores';\nimport { useDevice } from '@deriv-com/ui';\nimport { useStores } from 'Stores';\nimport { Localize } from 'Components/i18next';\n\ntype TBuySellModalTitleProps = {\n    is_buy?: boolean;\n    onReturn: () => void;\n};\n\nconst BuySellModalTitle = ({ is_buy = false, onReturn }: TBuySellModalTitleProps) => {\n    const { isDesktop } = useDevice();\n    const { buy_sell_store, my_profile_store } = useStores();\n    const { selected_ad_state } = buy_sell_store;\n\n    const { account_currency } = selected_ad_state;\n\n    const getModalTitle = () => {\n        if (my_profile_store.should_show_add_payment_method_form) {\n            if (isDesktop) {\n                return (\n                    <div className='buy-sell-modal-title'>\n                        <Icon\n                            icon='IcArrowLeftBold'\n                            data_testid='dt_buy_sell_modal_back_icon'\n                            onClick={onReturn}\n                            className='buy-sell-modal-title__icon'\n                        />\n                        <Localize i18n_default_text='Add payment method' />\n                    </div>\n                );\n            }\n            return <Localize i18n_default_text='Add payment method' />;\n        }\n        if (is_buy) {\n            return <Localize i18n_default_text='Buy {{ currency }}' values={{ currency: account_currency }} />;\n        }\n        return <Localize i18n_default_text='Sell {{ currency }}' values={{ currency: account_currency }} />;\n    };\n\n    return (\n        <Text as='p' color='prominent' weight='bold'>\n            {getModalTitle()}\n        </Text>\n    );\n};\n\nexport default observer(BuySellModalTitle);\n","import BuySellModalTitle from './buy-sell-modal-title';\nimport './buy-sell-modal-title.scss';\n\nexport default BuySellModalTitle;\n","import React from 'react';\nimport { InlineMessage } from '@deriv/components';\nimport { useDevice } from '@deriv-com/ui';\nimport { localize } from 'Components/i18next';\nimport { getInlineTextSize } from 'Utils/responsive';\n\ntype TBuySellModalErrorProps = {\n    error_message: string;\n    show_low_balance_message: boolean;\n};\n\nconst BuySellModalError = ({ error_message, show_low_balance_message }: TBuySellModalErrorProps) => {\n    const { isMobile } = useDevice();\n    if (error_message || show_low_balance_message) {\n        return (\n            <div className='buy-sell-modal-error'>\n                <InlineMessage\n                    message={\n                        show_low_balance_message\n                            ? localize(\n                                  \"Your Deriv P2P balance isn't enough. Please increase your balance before trying again.\"\n                              )\n                            : error_message\n                    }\n                    size={getInlineTextSize('sm', 'xs', isMobile)}\n                    type='error'\n                />\n            </div>\n        );\n    }\n    return null;\n};\n\nexport default BuySellModalError;\n","import BuySellModalError from './buy-sell-modal-error';\nimport './buy-sell-modal-error.scss';\n\nexport default BuySellModalError;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { reaction } from 'mobx';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { useInvalidateQuery } from '@deriv/api';\nimport { MobileFullPageModal, Modal, ThemedScrollbars } from '@deriv/components';\nimport { routes } from '@deriv/shared';\nimport { observer } from '@deriv/stores';\nimport { useDevice } from '@deriv-com/ui';\nimport { localize } from 'Components/i18next';\nimport { useModalManagerContext } from 'Components/modal-manager/modal-manager-context';\nimport AddPaymentMethodForm from 'Components/add-payment-method-form';\nimport BuySellForm from 'Pages/buy-sell/buy-sell-form.jsx';\nimport BuySellFormReceiveAmount from 'Pages/buy-sell/buy-sell-form-receive-amount.jsx';\nimport { useStores } from 'Stores';\nimport { getTextSize } from 'Utils/responsive';\nimport BuySellModalFooter from './buy-sell-modal-footer';\nimport BuySellModalTitle from './buy-sell-modal-title';\nimport BuySellModalError from './buy-sell-modal-error';\n\nconst BuySellModal = () => {\n    const { isDesktop, isMobile } = useDevice();\n    const { hideModal, is_modal_open, showModal } = useModalManagerContext();\n    const { buy_sell_store, general_store, my_profile_store, order_store } = useStores();\n    const { is_buy_advert, selected_ad_state, submitForm } = buy_sell_store;\n    const { account_currency } = selected_ad_state;\n    const { balance } = general_store;\n    const { should_show_add_payment_method_form } = my_profile_store;\n\n    const invalidate = useInvalidateQuery();\n    const history = useHistory();\n    const location = useLocation();\n    const scroll_ref = React.useRef<HTMLDivElement & SVGSVGElement>(null);\n    const [error_message, setErrorMessage] = React.useState('');\n    const [is_submit_disabled, setIsSubmitDisabled] = React.useState(false);\n    const [is_account_balance_low, setIsAccountBalanceLow] = React.useState(false);\n    const [has_rate_changed, setHasRateChanged] = React.useState(false);\n    const [is_market_rate_error_modal_open, setIsMarketRateErrorModalOpen] = React.useState(false);\n\n    const show_low_balance_message = !is_buy_advert && is_account_balance_low;\n\n    const onCancel = () => {\n        if (should_show_add_payment_method_form) {\n            if (general_store.is_form_modified) {\n                showModal({\n                    key: 'CancelAddPaymentMethodModal',\n                    props: {},\n                });\n            } else {\n                my_profile_store.hideAddPaymentMethodForm();\n            }\n        } else {\n            hideModal({ should_hide_all_modals: true });\n            buy_sell_store.fetchAdvertiserAdverts();\n            buy_sell_store.unsubscribeAdvertInfo();\n            buy_sell_store.setTempContactInfo(null);\n            buy_sell_store.setTempPaymentInfo(null);\n            buy_sell_store.payment_method_ids = [];\n        }\n    };\n\n    const onConfirmClick = (order_info: { id: string }) => {\n        const current_query_params = new URLSearchParams(location.search);\n        current_query_params.append('order', order_info.id);\n        general_store.redirectTo('orders', { nav: { location: 'buy_sell' } });\n        history.replace({\n            pathname: routes.p2p_orders,\n            search: current_query_params.toString(),\n            hash: location.hash,\n        });\n        order_store.setOrderId(order_info.id);\n        hideModal();\n        buy_sell_store.fetchAdvertiserAdverts();\n        buy_sell_store.setShowAdvertiserPage(false);\n    };\n\n    const getModalTitle = () => {\n        if (should_show_add_payment_method_form) {\n            return localize('Add payment method');\n        }\n        if (is_buy_advert) {\n            return localize('Buy {{ currency }}', { currency: account_currency });\n        }\n        return localize('Sell {{ currency }}', { currency: account_currency });\n    };\n\n    const onReturn = () => {\n        if (general_store.is_form_modified) {\n            showModal({\n                key: 'CancelAddPaymentMethodModal',\n                props: {},\n            });\n        } else {\n            my_profile_store.setShouldShowAddPaymentMethodForm(false);\n        }\n    };\n\n    const onSubmit = () => {\n        if (has_rate_changed) {\n            showModal({\n                key: 'MarketRateChangeErrorModal',\n                props: {\n                    submitForm,\n                    values: {\n                        currency: buy_sell_store.account_currency,\n                        input_amount: Number(buy_sell_store.form_props.input_amount).toFixed(2),\n                        local_currency: buy_sell_store?.advert?.local_currency,\n                        received_amount: buy_sell_store?.receive_amount.toFixed(2),\n                    },\n                },\n            });\n        } else {\n            submitForm();\n            hideModal({ should_hide_all_modals: true });\n        }\n    };\n\n    React.useEffect(() => {\n        const balance_check =\n            parseFloat(balance) === 0 || parseFloat(balance) < buy_sell_store.advert?.min_order_amount_limit;\n\n        setIsAccountBalanceLow(balance_check);\n        if (!is_modal_open) {\n            setErrorMessage('');\n        }\n\n        if (general_store.counterparty_advert_id) general_store.setCounterpartyAdvertId('');\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [is_modal_open]);\n\n    React.useEffect(() => {\n        if ((error_message || show_low_balance_message) && scroll_ref.current) {\n            scroll_ref.current.scrollTo({ top: 0, behavior: 'smooth' });\n        }\n    }, [error_message, show_low_balance_message]);\n\n    React.useEffect(() => {\n        const disposeHasRateChangedReaction = reaction(\n            () => buy_sell_store.advert,\n            (new_advert, previous_advert) => {\n                // check to see if the rate is initialized in the store for the first time (when uninitialized it is undefined) AND\n                const rate_has_changed = previous_advert?.rate !== new_advert.rate;\n                // check to see if user is not switching between different adverts, it should not trigger rate change modal\n                const is_the_same_advert = previous_advert?.id === new_advert.id;\n                if (rate_has_changed && is_the_same_advert && !is_market_rate_error_modal_open) {\n                    showModal({\n                        key: 'ErrorModal',\n                        props: {\n                            error_modal_button_text: localize('Try again'),\n                            error_message: localize('The advertiser changed the rate before you confirmed the order.'),\n                            text_size: getTextSize('xxs', 'xs', isMobile),\n                            onClose: () => {\n                                showModal({\n                                    key: 'BuySellModal',\n                                    props: {},\n                                });\n                            },\n                        },\n                    });\n                    buy_sell_store.setFormErrorCode('');\n                    invalidate('p2p_advert_list');\n                }\n            },\n            { fireImmediately: true }\n        );\n\n        return () => {\n            disposeHasRateChangedReaction();\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [is_market_rate_error_modal_open]);\n\n    if (isDesktop) {\n        return (\n            <Modal\n                className={classNames('buy-sell-modal', {\n                    'buy-sell-modal__form': should_show_add_payment_method_form,\n                })}\n                has_return_icon={should_show_add_payment_method_form}\n                height={is_buy_advert ? 'auto' : '649px'}\n                is_open={is_modal_open}\n                onReturn={onReturn}\n                portalId='modal_root'\n                title={getModalTitle()}\n                toggleModal={onCancel}\n                width='456px'\n            >\n                {/* Parent height - Modal.Header height - Modal.Footer height */}\n                <ThemedScrollbars\n                    height={is_buy_advert ? '100%' : 'calc(100% - 5.8rem - 7.4rem)'}\n                    refSetter={scroll_ref}\n                >\n                    <Modal.Body className='buy-sell-modal__layout'>\n                        <BuySellModalError\n                            error_message={error_message}\n                            show_low_balance_message={show_low_balance_message}\n                        />\n                        {should_show_add_payment_method_form ? (\n                            <AddPaymentMethodForm should_show_separated_footer />\n                        ) : (\n                            <BuySellForm\n                                advert={selected_ad_state}\n                                has_rate_changed={has_rate_changed}\n                                handleClose={onCancel}\n                                handleConfirm={onConfirmClick}\n                                setIsSubmitDisabled={setIsSubmitDisabled}\n                                setErrorMessage={setErrorMessage}\n                                setHasRateChanged={setHasRateChanged}\n                                setIsMarketRateErrorModalOpen={setIsMarketRateErrorModalOpen}\n                            />\n                        )}\n                    </Modal.Body>\n                </ThemedScrollbars>\n                {!should_show_add_payment_method_form && (\n                    <Modal.Footer has_separator>\n                        <BuySellModalFooter\n                            is_submit_disabled={!!is_submit_disabled}\n                            onCancel={onCancel}\n                            onSubmit={onSubmit}\n                        />\n                    </Modal.Footer>\n                )}\n            </Modal>\n        );\n    }\n\n    return (\n        <MobileFullPageModal\n            body_className='buy-sell-modal__body'\n            className='buy-sell-modal'\n            height_offset='80px'\n            is_flex\n            is_modal_open={is_modal_open}\n            page_header_className='buy-sell-modal__header'\n            renderPageHeaderElement={<BuySellModalTitle is_buy={is_buy_advert} onReturn={onReturn} />}\n            pageHeaderReturnFn={onCancel}\n        >\n            <ThemedScrollbars refSetter={scroll_ref}>\n                <BuySellModalError error_message={error_message} show_low_balance_message={show_low_balance_message} />\n                {should_show_add_payment_method_form ? (\n                    <AddPaymentMethodForm should_show_separated_footer />\n                ) : (\n                    <React.Fragment>\n                        <BuySellForm\n                            advert={selected_ad_state}\n                            has_rate_changed={has_rate_changed}\n                            handleClose={onCancel}\n                            handleConfirm={onConfirmClick}\n                            setIsSubmitDisabled={setIsSubmitDisabled}\n                            setErrorMessage={setErrorMessage}\n                            setHasRateChanged={setHasRateChanged}\n                            setIsMarketRateErrorModalOpen={setIsMarketRateErrorModalOpen}\n                        />\n                        <BuySellFormReceiveAmount />\n                        <BuySellModalFooter\n                            is_submit_disabled={!!is_submit_disabled}\n                            onCancel={onCancel}\n                            onSubmit={onSubmit}\n                        />\n                    </React.Fragment>\n                )}\n            </ThemedScrollbars>\n        </MobileFullPageModal>\n    );\n};\n\nexport default observer(BuySellModal);\n","import BuySellModal from './buy-sell-modal';\nimport './buy-sell-modal.scss';\n\nexport default BuySellModal;\n"],"names":["___CSS_LOADER_EXPORT___","push","module","id","api","content","__esModule","default","options","exports","locals","observer","_buy_sell_store$adver","buy_sell_store","useStores","React","className","Text","as","color","size","is_sell_advert","Localize","i18n_default_text","weight","getFormattedText","roundOffDecimal","receive_amount","advert","local_currency","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","_toConsumableArray","Array","isArray","_arrayLikeToArray","_arrayWithoutHoles","from","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","ownKeys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","_objectSpread","_defineProperty","getOwnPropertyDescriptors","defineProperties","toPrimitive","String","Number","_toPrimitive","_toPropertyKey","_slicedToArray","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","toString","test","BuySellForm","props","isDesktop","useDevice","_useStores","advertiser_page_store","general_store","my_profile_store","_React$useState2","selected_methods","setSelectedMethods","p2p_advertiser_payment_methods","useP2PAdvertiserPaymentMethods","data","stacked_modal","useModalManagerContext","has_rate_changed","setHasRateChanged","setPageFooterParent","_ref","advertiser_details","description","market_rate","effective_rate","max_order_amount_limit_display","min_order_amount_limit","min_order_amount_limit_display","order_expiry_period","payment_method_names","price","rate","rate_type","exchange_rate","useP2PExchangeRate","order_completion_time","_React$useState4","input_amount","setInputAmount","_React$useState6","current_effective_rate","setCurrentEffectiveRate","_React$useState8","undefined","changed_rate","setChangedRate","setFormProps","_generateEffectiveRat","generateEffectiveRate","display_effective_rate","advertiser_buy_limit","advertiser_sell_limit","balance","should_disable_field","is_buy_advert","parseFloat","style","borderColor","borderWidth","cursor","calculated_rate","removeTrailingZeros","setDecimalPlaces","is_float","ad_type","FLOAT","setShouldShowAddPaymentMethodForm","setSelectedPaymentMethod","setSelectedPaymentMethodDisplayName","setHasPaymentMethods","disposeReceiveAmountReaction","reaction","BuySellFormReceiveAmount","advertiser_has_payment_methods","getPaymentMethodsList","getAdvertiserPaymentMethods","setFormErrorMessage","setInitialReceiveAmount","setReceiveAmount","key","default_effective_rate","onClickPaymentMethodCard","payment_method","payment_method_ids","includes","payment_method_id","concat","_useFormik","useFormik","enableReinitialize","validate","validatePopup","validateOnMount","initialValues","amount","contact_info","temp_contact_info","payment_info","temp_payment_info","initialErrors","onSubmit","handleSubmit","errors","getFieldProps","isSubmitting","isValid","validateForm","setFieldValue","submitForm","touched","form_props","setIsSubmitDisabled","setSubmitForm","noValidate","classNames","currency","account_currency","Tooltip","alignment","message","localize","map","PaymentMethodIcon","display_name","trim","replace","split","text","idx","formatTime","Observer","add_payment_method","matching_payment_methods","advertiser_payment_method","PaymentMethodCard","is_vertical_ellipsis_visible","medium","onClick","_callee","_context","disabled","is_add","onClickAdd","sort","payment_method_card_node","_payment_method_card_","transaction_type","Input","_extends","error","label","hint","min","max","getAdvertiserMaxLimit","is_relative_hint","trailing_icon","onKeyDown","event","floatingPointValidator","preventDefault","onChange","target","countDecimalPlaces","getDecimalPlaces","required","has_character_counter","initial_character_count","max_characters","setTempPaymentInfo","setTempContactInfo","propTypes","PropTypes","has_payment_info","is_submit_disabled","onCancel","should_show_add_payment_method_form","Button","Group","secondary","large","is_disabled","primary","_ref$is_buy","is_buy","onReturn","selected_ad_state","Icon","icon","data_testid","error_message","show_low_balance_message","isMobile","InlineMessage","getInlineTextSize","_useDevice","_useModalManagerConte","hideModal","is_modal_open","showModal","order_store","invalidate","useInvalidateQuery","history","useHistory","location","useLocation","scroll_ref","setErrorMessage","is_account_balance_low","setIsAccountBalanceLow","_React$useState10","is_market_rate_error_modal_open","setIsMarketRateErrorModalOpen","is_form_modified","hideAddPaymentMethodForm","should_hide_all_modals","fetchAdvertiserAdverts","unsubscribeAdvertInfo","onConfirmClick","order_info","current_query_params","URLSearchParams","search","append","redirectTo","nav","pathname","routes","p2p_orders","hash","setOrderId","setShowAdvertiserPage","toFixed","received_amount","_buy_sell_store$adver2","balance_check","counterparty_advert_id","setCounterpartyAdvertId","current","scrollTo","top","behavior","disposeHasRateChangedReaction","new_advert","previous_advert","rate_has_changed","is_the_same_advert","error_modal_button_text","text_size","getTextSize","onClose","setFormErrorCode","fireImmediately","Modal","has_return_icon","height","is_open","portalId","title","toggleModal","width","ThemedScrollbars","refSetter","Body","BuySellModalError","AddPaymentMethodForm","should_show_separated_footer","handleClose","handleConfirm","Footer","has_separator","BuySellModalFooter","MobileFullPageModal","body_className","height_offset","is_flex","page_header_className","renderPageHeaderElement","BuySellModalTitle","pageHeaderReturnFn"],"sourceRoot":""}