{"version":3,"file":"p2p/js/p2p.quick-add-modal.a65b81354f1b366c7759.js","mappings":"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","sources":["webpack://@deriv/p2p/./src/components/modal-manager/modals/quick-add-modal/quick-add-modal.scss","webpack://@deriv/p2p/./src/components/modal-manager/modals/quick-add-modal/quick-add-modal.scss?8886","webpack://@deriv/p2p/./src/components/modal-manager/modals/quick-add-modal/quick-add-modal.jsx","webpack://@deriv/p2p/./src/components/modal-manager/modals/quick-add-modal/index.js"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".quick-add-modal--form{height:-moz-fit-content !important;height:fit-content !important}.quick-add-modal .dc-modal-header__title--quick-add-modal{padding:2.4rem 2.4rem 0 !important}.quick-add-modal .dc-modal__container_quick-add-modal .dc-modal-footer{padding-top:0 !important}.quick-add-modal .dc-modal__container_quick-add-modal .dc-modal-header{padding-bottom:1rem}.quick-add-modal__body{display:flex;flex-direction:column;padding:1.5rem}.quick-add-modal__body__payment-method-form{padding:0}.quick-add-modal__button{margin-left:.5rem}.quick-add-modal__info{margin-bottom:1.3rem}.quick-add-modal__icon{margin-right:.8rem}.quick-add-modal__scroll{overflow:auto;padding:1rem 0 0}.quick-add-modal__horizontal{padding-right:0rem}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/modal-manager/modals/quick-add-modal/quick-add-modal.scss\"],\"names\":[],\"mappings\":\"AA0sBI,uBACI,kCAAA,CAAA,6BAAA,CAGJ,0DACI,kCAAA,CAIA,uEACI,wBAAA,CAGJ,uEACI,mBAAA,CAIR,uBACI,YAAA,CACA,qBAAA,CACA,cAAA,CAEA,4CACI,SAAA,CAIR,yBACI,iBAAA,CAGJ,uBACI,oBAAA,CAGJ,uBACI,kBAAA,CAGJ,yBACI,aAAA,CACA,gBAAA,CAGJ,6BACI,kBAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n.quick-add-modal {\\n    &--form {\\n        height: fit-content !important;\\n    }\\n\\n    .dc-modal-header__title--quick-add-modal {\\n        padding: 2.4rem 2.4rem 0 !important;\\n    }\\n\\n    .dc-modal__container_quick-add-modal {\\n        .dc-modal-footer {\\n            padding-top: 0 !important;\\n        }\\n\\n        .dc-modal-header {\\n            padding-bottom: 1rem;\\n        }\\n    }\\n\\n    &__body {\\n        display: flex;\\n        flex-direction: column;\\n        padding: 1.5rem;\\n\\n        &__payment-method-form {\\n            padding: 0;\\n        }\\n    }\\n\\n    &__button {\\n        margin-left: 0.5rem;\\n    }\\n\\n    &__info {\\n        margin-bottom: 1.3rem;\\n    }\\n\\n    &__icon {\\n        margin-right: 0.8rem;\\n    }\\n\\n    &__scroll {\\n        overflow: auto;\\n        padding: 1rem 0 0;\\n    }\\n\\n    &__horizontal {\\n        padding-right: 0rem;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","var api = require(\"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./quick-add-modal.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","import React from 'react';\nimport classNames from 'classnames';\nimport { Button, Icon, MobileFullPageModal, Modal, Text } from '@deriv/components';\nimport { useP2PAdvertiserPaymentMethods } from '@deriv/hooks';\nimport { observer } from '@deriv/stores';\nimport { useDevice } from '@deriv-com/ui';\nimport { localize, Localize } from 'Components/i18next';\nimport { useModalManagerContext } from 'Components/modal-manager/modal-manager-context';\nimport AddPaymentMethod from 'Components/add-payment-method';\nimport BuyAdPaymentMethodsList from 'Pages/my-ads/buy-ad-payment-methods-list.jsx';\nimport SellAdPaymentMethodsList from 'Pages/my-ads/sell-ad-payment-methods-list.jsx';\nimport { buy_sell } from 'Constants/buy-sell';\nimport { useStores } from 'Stores';\n\nconst QuickAddModal = ({ advert }) => {\n    const { isDesktop } = useDevice();\n    const { is_modal_open, showModal, useSavedState } = useModalManagerContext();\n    const { my_ads_store, my_profile_store } = useStores();\n    const { data: p2p_advertiser_payment_methods } = useP2PAdvertiserPaymentMethods();\n\n    const type = advert ? advert.type : null;\n\n    const [selected_methods, setSelectedMethods] = useSavedState('selected_methods', []);\n\n    const is_buy_advert = type === buy_sell.BUY;\n    const is_sell_ad_add_payment_methods_selected =\n        !is_buy_advert && my_profile_store.selected_payment_method.length > 0;\n    const is_buy_ad_add_payment_methods_selected = is_buy_advert && selected_methods.length > 0;\n    const is_payment_methods_selected =\n        is_sell_ad_add_payment_methods_selected || is_buy_ad_add_payment_methods_selected;\n\n    const onClickPaymentMethodCard = payment_method => {\n        if (!my_ads_store.payment_method_ids.includes(payment_method.id)) {\n            if (my_ads_store.payment_method_ids.length < 3) {\n                my_ads_store.payment_method_ids.push(payment_method.id);\n                setSelectedMethods([...selected_methods, payment_method.id]);\n            }\n        } else {\n            my_ads_store.payment_method_ids = my_ads_store.payment_method_ids.filter(\n                payment_method_id => payment_method_id !== payment_method.id\n            );\n            setSelectedMethods(selected_methods.filter(i => i !== payment_method.id));\n        }\n    };\n\n    const setShouldCloseAllModals = should_close_all_modals => {\n        if (is_payment_methods_selected) {\n            showModal({\n                key: 'CancelAddPaymentMethodModal',\n                props: {\n                    should_hide_all_modals_on_cancel: is_buy_advert,\n                    onCancel: () => {\n                        my_ads_store.payment_method_ids = [];\n                        my_ads_store.payment_method_names = [];\n                    },\n                },\n            });\n        } else {\n            my_ads_store.payment_method_ids = [];\n            my_ads_store.payment_method_names = [];\n            setSelectedMethods([]);\n            if (should_close_all_modals) {\n                my_ads_store.setShouldShowAddPaymentMethod(false);\n                my_ads_store.hideQuickAddModal();\n            } else {\n                if (!my_ads_store.should_show_add_payment_method) {\n                    my_ads_store.hideQuickAddModal();\n                }\n                my_ads_store.setShouldShowAddPaymentMethod(false);\n            }\n        }\n    };\n\n    if (!isDesktop) {\n        if (is_buy_advert) {\n            return (\n                <MobileFullPageModal\n                    body_className='quick-add-modal__body'\n                    height_offset='80px'\n                    is_flex\n                    is_modal_open={is_modal_open}\n                    page_header_text={localize('Add payment method')}\n                    pageHeaderReturnFn={() => setShouldCloseAllModals(false)}\n                    secondary\n                    text={localize('Cancel')}\n                    renderPageFooterChildren={() => (\n                        <>\n                            <Button\n                                has_effect\n                                large\n                                onClick={setShouldCloseAllModals}\n                                secondary\n                                text={localize('Cancel')}\n                            />\n                            <Button\n                                className='quick-add-modal__button'\n                                has_effect\n                                is_disabled={\n                                    selected_methods.length === 0 || my_ads_store.payment_method_names.length === 0\n                                }\n                                large\n                                onClick={() => my_ads_store.onClickUpdatePaymentMethods(advert?.id, is_buy_advert)}\n                                primary\n                                text={localize('Add')}\n                            />\n                        </>\n                    )}\n                >\n                    <div className='quick-add-modal__info'>\n                        <Text color='prominent' size='xxs'>\n                            <Localize i18n_default_text='You may choose up to 3 payment methods for this ad.' />\n                        </Text>\n                    </div>\n                    <BuyAdPaymentMethodsList\n                        is_alignment_top={false}\n                        list_portal_id='popup_root'\n                        should_show_hint\n                        selected_methods={selected_methods}\n                        setSelectedMethods={setSelectedMethods}\n                        should_clear_payment_method_selections={!is_payment_methods_selected}\n                    />\n                </MobileFullPageModal>\n            );\n        }\n\n        return (\n            <MobileFullPageModal\n                body_className='quick-add-modal__body'\n                height_offset='80px'\n                is_flex\n                is_modal_open={is_modal_open}\n                page_header_text={localize('Add payment method')}\n                pageHeaderReturnFn={() => setShouldCloseAllModals(false)}\n                secondary\n                text={localize('Cancel')}\n                {...(!my_ads_store.should_show_add_payment_method && {\n                    renderPageFooterChildren: () => (\n                        <>\n                            <Button\n                                has_effect\n                                large\n                                onClick={setShouldCloseAllModals}\n                                secondary\n                                text={localize('Cancel')}\n                            />\n                            <Button\n                                className='quick-add-modal__button'\n                                has_effect\n                                is_disabled={\n                                    selected_methods.length === 0 || my_ads_store.payment_method_ids.length === 0\n                                }\n                                large\n                                onClick={() => my_ads_store.onClickUpdatePaymentMethods(advert?.id, is_buy_advert)}\n                                primary\n                                text={localize('Add')}\n                            />\n                        </>\n                    ),\n                })}\n            >\n                {my_ads_store.should_show_add_payment_method ? (\n                    <AddPaymentMethod should_show_page_return={false} />\n                ) : (\n                    <>\n                        <Text color='prominent' size='xxs'>\n                            <Localize i18n_default_text='You may choose up to 3 payment methods for this ad.' />\n                        </Text>\n                        <SellAdPaymentMethodsList\n                            onClickPaymentMethodCard={onClickPaymentMethodCard}\n                            onClickAdd={() => my_ads_store.setShouldShowAddPaymentMethod(true)}\n                            p2p_advertiser_payment_methods={p2p_advertiser_payment_methods}\n                            selected_methods={selected_methods}\n                        />\n                    </>\n                )}\n            </MobileFullPageModal>\n        );\n    }\n\n    if (is_buy_advert) {\n        return (\n            <Modal\n                className='quick-add-modal'\n                has_close_icon\n                height='452px'\n                is_open={is_modal_open}\n                title={localize('Add payment method')}\n                toggleModal={() => setShouldCloseAllModals(true)}\n            >\n                <Modal.Body>\n                    <div className='quick-add-modal__info'>\n                        <Text color='prominent' size='xxs'>\n                            <Localize i18n_default_text='You may choose up to 3 payment methods for this ad.' />\n                        </Text>\n                    </div>\n                    <BuyAdPaymentMethodsList\n                        is_alignment_top={false}\n                        list_portal_id='modal_root'\n                        should_show_hint\n                        selected_methods={selected_methods}\n                        setSelectedMethods={setSelectedMethods}\n                        should_clear_payment_method_selections={!is_payment_methods_selected}\n                    />\n                </Modal.Body>\n                <Modal.Footer has_separator>\n                    <Button\n                        has_effect\n                        large\n                        onClick={() => setShouldCloseAllModals(true)}\n                        secondary\n                        text={localize('Cancel')}\n                    />\n\n                    <Button\n                        has_effect\n                        is_disabled={selected_methods.length === 0 || my_ads_store.payment_method_names.length === 0}\n                        large\n                        onClick={() => my_ads_store.onClickUpdatePaymentMethods(advert?.id, is_buy_advert)}\n                        primary\n                        text={localize('Add')}\n                    />\n                </Modal.Footer>\n            </Modal>\n        );\n    }\n\n    return (\n        <Modal\n            className={classNames('quick-add-modal', {\n                'quick-add-modal--form': my_profile_store.selected_payment_method,\n            })}\n            has_close_icon\n            height={my_ads_store.should_show_add_payment_method ? '560px' : 'auto'}\n            is_open={is_modal_open}\n            title={\n                <React.Fragment>\n                    {my_ads_store.should_show_add_payment_method && (\n                        <Icon\n                            className='quick-add-modal__icon'\n                            icon='icArrowLeftBold'\n                            onClick={() => {\n                                setShouldCloseAllModals(false);\n                            }}\n                        />\n                    )}\n                    {my_ads_store.should_show_add_payment_method\n                        ? localize('Add payment method')\n                        : localize('Add payment methods')}\n                </React.Fragment>\n            }\n            width='440px'\n            toggleModal={() => setShouldCloseAllModals(true)}\n        >\n            <Modal.Body\n                className={classNames({\n                    'quick-add-modal__horizontal': !my_ads_store.should_show_add_payment_method,\n                    'quick-add-modal__scroll': my_profile_store.selected_payment_method,\n                })}\n            >\n                {my_ads_store.should_show_add_payment_method ? (\n                    <AddPaymentMethod should_show_page_return={false} />\n                ) : (\n                    <>\n                        <Text color='prominent' size='xs'>\n                            <Localize i18n_default_text='You may choose up to 3 payment methods for this ad.' />\n                        </Text>\n                        <SellAdPaymentMethodsList\n                            is_only_horizontal={!isDesktop}\n                            is_scrollable={!isDesktop}\n                            onClickPaymentMethodCard={onClickPaymentMethodCard}\n                            onClickAdd={() => my_ads_store.setShouldShowAddPaymentMethod(true)}\n                            p2p_advertiser_payment_methods={p2p_advertiser_payment_methods}\n                            selected_methods={selected_methods}\n                        />\n                    </>\n                )}\n            </Modal.Body>\n            {!my_ads_store.should_show_add_payment_method && (\n                <Modal.Footer has_separator>\n                    <Button has_effect large onClick={setShouldCloseAllModals} secondary text={localize('Cancel')} />\n\n                    <Button\n                        has_effect\n                        is_disabled={selected_methods.length === 0 || my_ads_store.payment_method_ids.length === 0}\n                        large\n                        onClick={() => my_ads_store.onClickUpdatePaymentMethods(advert?.id, is_buy_advert)}\n                        primary\n                        text={localize('Add')}\n                    />\n                </Modal.Footer>\n            )}\n            {!my_profile_store.selected_payment_method && my_ads_store.should_show_add_payment_method && (\n                <Modal.Footer>\n                    <Button\n                        has_effect\n                        large\n                        onClick={() => setShouldCloseAllModals(false)}\n                        secondary\n                        text={localize('Cancel')}\n                    />\n                </Modal.Footer>\n            )}\n        </Modal>\n    );\n};\n\nexport default observer(QuickAddModal);\n","import QuickAddModal from './quick-add-modal.jsx';\nimport './quick-add-modal.scss';\n\nexport default QuickAddModal;\n"],"names":["___CSS_LOADER_EXPORT___","push","module","id","api","content","__esModule","default","options","exports","locals","observer","_ref","advert","isDesktop","useDevice","_useModalManagerConte","useModalManagerContext","is_modal_open","showModal","useSavedState","_useStores","useStores","my_ads_store","my_profile_store","p2p_advertiser_payment_methods","useP2PAdvertiserPaymentMethods","data","type","_useSavedState2","_slicedToArray","selected_methods","setSelectedMethods","is_buy_advert","buy_sell","BUY","is_sell_ad_add_payment_methods_selected","selected_payment_method","length","is_buy_ad_add_payment_methods_selected","is_payment_methods_selected","onClickPaymentMethodCard","payment_method","payment_method_ids","includes","filter","payment_method_id","i","concat","_toConsumableArray","setShouldCloseAllModals","should_close_all_modals","key","props","should_hide_all_modals_on_cancel","onCancel","payment_method_names","setShouldShowAddPaymentMethod","hideQuickAddModal","should_show_add_payment_method","React","Modal","className","has_close_icon","height","is_open","title","localize","toggleModal","Body","Text","color","size","Localize","i18n_default_text","BuyAdPaymentMethodsList","is_alignment_top","list_portal_id","should_show_hint","should_clear_payment_method_selections","Footer","has_separator","Button","has_effect","large","onClick","secondary","text","is_disabled","onClickUpdatePaymentMethods","primary","classNames","Icon","icon","width","AddPaymentMethod","should_show_page_return","SellAdPaymentMethodsList","is_only_horizontal","is_scrollable","onClickAdd","MobileFullPageModal","body_className","height_offset","is_flex","page_header_text","pageHeaderReturnFn","renderPageFooterChildren","_extends"],"sourceRoot":""}