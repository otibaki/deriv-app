{"version":3,"file":"cfd/js/cfd.src_Containers_cfd-password-modal-tnc_tsx.4e83d82883533e2c5044.js","mappings":"kWAmDA,QAvC6B,SAAHA,GAAmE,IAAAC,EAAAC,EAA7DC,EAAQH,EAARG,SAAUC,EAAOJ,EAAPI,QAASC,EAAQL,EAARK,SACvCC,GAAgCC,EAAAA,EAAAA,kCAAhCD,4BACR,OACIE,IAAAA,cAAA,OAAKC,UAAU,2BACXD,IAAAA,cAAA,OAAKC,UAAU,iCACXD,IAAAA,cAACE,EAAAA,KAAI,CAACC,KAAK,iBAEfH,IAAAA,cAACI,EAAAA,KAAI,CAACC,KAAK,QACNR,EACGG,IAAAA,cAACM,EAAAA,SAAQ,CACLC,kBAAkB,sIAClBC,OAAQ,CACJb,SAAAA,EACAC,QAAAA,EACAa,QAASX,aAA2B,EAA3BA,EAA6BY,KACtCC,qBAAuE,QAAnDlB,EAAEK,aAA2B,EAA3BA,EAA6Ba,4BAAoB,IAAAlB,EAAAA,EAAI,IAE/EmB,WAAY,CACRZ,IAAAA,cAAA,QACIa,IAAK,EACLC,wBAAyB,CAAEC,OAAmD,QAA7CrB,EAAEI,aAA2B,EAA3BA,EAA6BkB,sBAAc,IAAAtB,EAAAA,EAAI,SAK9FM,IAAAA,cAACM,EAAAA,SAAQ,CACLC,kBAAkB,0EAClBC,OAAQ,CACJb,SAAAA,EACAC,QAAAA,EACAa,QAASX,aAA2B,EAA3BA,EAA6BY,SAOlE,ECFA,SAjC6BO,EAAAA,EAAAA,WACzB,SAAAzB,GAAsG,IAE5E0B,EAFvBC,EAAU3B,EAAV2B,WAAYC,EAAU5B,EAAV4B,WAAYC,EAA+B7B,EAA/B6B,gCAAiCC,EAAO9B,EAAP8B,QAChDxB,GAAgCC,EAAAA,EAAAA,kCAAhCD,4BAkBR,OACIE,IAAAA,cAAA,OAAKC,UAAWkB,GACZnB,IAAAA,cAACuB,EAAAA,SAAQ,CACLC,MAAOJ,EACPK,SAAUH,EACVI,MArBR1B,IAAAA,cAACI,EAAAA,KAAI,CAACuB,GAAG,IAAItB,KAAK,MAAMuB,YAAY,KAChC5B,IAAAA,cAACM,EAAAA,SAAQ,CACLC,kBAAkB,kEAClBC,OAAQ,CAAEC,QAASX,aAA2B,EAA3BA,EAA6BY,MAChDE,WAAY,CACRZ,IAAAA,cAAC6B,EAAAA,UAAS,CACNhB,IAAK,EACLZ,UAAU,0BACV6B,KAAyD,QAArDZ,EAAEa,EAAAA,mBAAmBV,UAAgC,IAAAH,OAAA,EAAnDA,EAAqDc,QAC3DC,aAAW,QAanBC,iBAAkBd,IAIlC,I,wFCJJ,SAxB4BH,EAAAA,EAAAA,WACxB,SAAAzB,GAAmF,IAAhFG,EAAQH,EAARG,SAAUwC,EAAO3C,EAAP2C,QAASb,EAAO9B,EAAP8B,QAASrB,EAAST,EAATS,UAAWJ,EAAQL,EAARK,SACtCuC,GAA2DC,EAAAA,EAAAA,KAAnDhB,EAA+Be,EAA/Bf,gCAAiCiB,EAAaF,EAAbE,cACzC,OACItC,IAAAA,cAAA,OAAKC,UAAWsC,IAAW,yBAA0BtC,IACjDD,IAAAA,cAACwC,EAAoB,CACjBnB,gCAAiCA,EACjC1B,UAAU8C,EAAAA,EAAAA,qBAAoB9C,GAC9BC,QAAS0C,EACTzC,SAAUA,IAEbA,GACGG,IAAAA,cAAC0C,EAAoB,CACjBtB,WAAYe,EACZb,QAASA,EACTH,WAAW,+BACXE,gCAAiCA,IAKrD,G","sources":["webpack://@deriv/cfd/./src/Containers/cfd-password-modal-info.tsx","webpack://@deriv/cfd/./src/Containers/jurisdiction-checkbox.tsx","webpack://@deriv/cfd/./src/Containers/cfd-password-modal-tnc.tsx"],"sourcesContent":["import React from 'react';\nimport { Icon, Text } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport { useIsSelectedMT5AccountCreated } from '@deriv/hooks';\n\ntype CfdPasswordModalInfoProps = {\n    jurisdiction_selected_shortcode: string;\n    platform: string;\n    product: string;\n    need_tnc: boolean;\n};\n\nconst CfdPasswordModalInfo = ({ platform, product, need_tnc }: CfdPasswordModalInfoProps) => {\n    const { available_account_to_create } = useIsSelectedMT5AccountCreated();\n    return (\n        <div className='cfd-password-modal-info'>\n            <div className='cfd-password-modal-info__icon'>\n                <Icon icon='IcInfoLight' />\n            </div>\n            <Text size='xxxs'>\n                {need_tnc ? (\n                    <Localize\n                        i18n_default_text='You are adding your {{platform}} {{product}} account under {{company}}, regulated by the {{regulatory_authority}} (license no.<0/>)'\n                        values={{\n                            platform,\n                            product,\n                            company: available_account_to_create?.name,\n                            regulatory_authority: available_account_to_create?.regulatory_authority ?? '',\n                        }}\n                        components={[\n                            <span\n                                key={0}\n                                dangerouslySetInnerHTML={{ __html: available_account_to_create?.licence_number ?? '' }}\n                            />,\n                        ]}\n                    />\n                ) : (\n                    <Localize\n                        i18n_default_text='You are adding your {{platform}} {{product}} account under {{company}}.'\n                        values={{\n                            platform,\n                            product,\n                            company: available_account_to_create?.name,\n                        }}\n                    />\n                )}\n            </Text>\n        </div>\n    );\n};\n\nexport default CfdPasswordModalInfo;\n","import React from 'react';\nimport { Checkbox, StaticUrl, Text } from '@deriv/components';\nimport { DBVI_COMPANY_NAMES } from '@deriv/shared';\nimport { observer } from '@deriv/stores';\nimport { Localize } from '@deriv/translations';\nimport { useIsSelectedMT5AccountCreated } from '@deriv/hooks';\n\ntype TJurisdictionCheckBoxProps = {\n    class_name: string;\n    is_checked: boolean;\n    jurisdiction_selected_shortcode: string;\n    onCheck: () => void;\n};\n\nconst JurisdictionCheckBox = observer(\n    ({ class_name, is_checked, jurisdiction_selected_shortcode, onCheck }: TJurisdictionCheckBoxProps) => {\n        const { available_account_to_create } = useIsSelectedMT5AccountCreated();\n        const getCheckboxLabel = () => (\n            <Text as='p' size='xxs' line_height='m'>\n                <Localize\n                    i18n_default_text=\"I confirm and accept {{company}} 's <0>terms and conditions</0>\"\n                    values={{ company: available_account_to_create?.name }}\n                    components={[\n                        <StaticUrl\n                            key={0}\n                            className='link link--no-underline'\n                            href={DBVI_COMPANY_NAMES[jurisdiction_selected_shortcode]?.tnc_url}\n                            is_document\n                        />,\n                    ]}\n                />\n            </Text>\n        );\n\n        return (\n            <div className={class_name}>\n                <Checkbox\n                    value={is_checked}\n                    onChange={onCheck}\n                    label={getCheckboxLabel()}\n                    defaultChecked={!!is_checked}\n                />\n            </div>\n        );\n    }\n);\n\nexport default JurisdictionCheckBox;\n","import React from 'react';\nimport { getCFDPlatformLabel, CFD_PRODUCTS_TITLE, CFD_PLATFORMS } from '@deriv/shared';\nimport { observer } from '@deriv/stores';\nimport CfdPasswordModalInfo from './cfd-password-modal-info';\nimport JurisdictionCheckBox from './jurisdiction-checkbox';\nimport { useCfdStore } from '../Stores/Modules/CFD/Helpers/useCfdStores';\nimport classNames from 'classnames';\n\ntype CfdPasswordModalTncProps = {\n    platform: typeof CFD_PLATFORMS[keyof typeof CFD_PLATFORMS];\n    checked: boolean;\n    need_tnc: boolean;\n    onCheck: () => void;\n    className?: string;\n};\n\nconst CfdPasswordModalTnc = observer(\n    ({ platform, checked, onCheck, className, need_tnc }: CfdPasswordModalTncProps) => {\n        const { jurisdiction_selected_shortcode, account_title } = useCfdStore();\n        return (\n            <div className={classNames('cfd-password-modal-tnc', className)}>\n                <CfdPasswordModalInfo\n                    jurisdiction_selected_shortcode={jurisdiction_selected_shortcode}\n                    platform={getCFDPlatformLabel(platform)}\n                    product={account_title}\n                    need_tnc={need_tnc}\n                />\n                {need_tnc && (\n                    <JurisdictionCheckBox\n                        is_checked={checked}\n                        onCheck={onCheck}\n                        class_name='cfd-password-modal__checkbox'\n                        jurisdiction_selected_shortcode={jurisdiction_selected_shortcode}\n                    />\n                )}\n            </div>\n        );\n    }\n);\n\nexport default CfdPasswordModalTnc;\n"],"names":["_ref","_available_account_to","_available_account_to2","platform","product","need_tnc","available_account_to_create","useIsSelectedMT5AccountCreated","React","className","Icon","icon","Text","size","Localize","i18n_default_text","values","company","name","regulatory_authority","components","key","dangerouslySetInnerHTML","__html","licence_number","observer","_DBVI_COMPANY_NAMES$j","class_name","is_checked","jurisdiction_selected_shortcode","onCheck","Checkbox","value","onChange","label","as","line_height","StaticUrl","href","DBVI_COMPANY_NAMES","tnc_url","is_document","defaultChecked","checked","_useCfdStore","useCfdStore","account_title","classNames","CfdPasswordModalInfo","getCFDPlatformLabel","JurisdictionCheckBox"],"sourceRoot":""}