{"version":3,"file":"cfd/js/CFDTopUpDemoModal.js","mappings":"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","sources":["webpack://@deriv/cfd/webpack/universalModuleDefinition","webpack://@deriv/cfd/webpack/runtime/chunk loaded","webpack://@deriv/cfd/./src/Components/success-dialog/success-dialog.tsx","webpack://@deriv/cfd/./src/Components/success-dialog/index.tsx","webpack://@deriv/cfd/./src/Containers/cfd-top-up-demo-modal.tsx","webpack://@deriv/cfd/external umd \"@deriv/components\"","webpack://@deriv/cfd/external umd \"@deriv/shared\"","webpack://@deriv/cfd/external umd \"@deriv/stores\"","webpack://@deriv/cfd/external umd \"@deriv/translations\"","webpack://@deriv/cfd/external umd \"classnames\"","webpack://@deriv/cfd/external umd \"react\"","webpack://@deriv/cfd/webpack/bootstrap","webpack://@deriv/cfd/webpack/runtime/compat get default export","webpack://@deriv/cfd/webpack/runtime/define property getters","webpack://@deriv/cfd/webpack/runtime/ensure chunk","webpack://@deriv/cfd/webpack/runtime/hasOwnProperty shorthand","webpack://@deriv/cfd/webpack/runtime/runtimeId","webpack://@deriv/cfd/webpack/runtime/jsonp chunk loading","webpack://@deriv/cfd/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@deriv/components\"), require(\"@deriv/shared\"), require(\"@deriv/stores\"), require(\"@deriv/translations\"), require(\"classnames\"), require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"@deriv/components\", \"@deriv/shared\", \"@deriv/stores\", \"@deriv/translations\", \"classnames\", \"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"@deriv/cfd\"] = factory(require(\"@deriv/components\"), require(\"@deriv/shared\"), require(\"@deriv/stores\"), require(\"@deriv/translations\"), require(\"classnames\"), require(\"react\"));\n\telse\n\t\troot[\"@deriv/cfd\"] = factory(root[\"@deriv/components\"], root[\"@deriv/shared\"], root[\"@deriv/stores\"], root[\"@deriv/translations\"], root[\"classnames\"], root[\"react\"]);\n})(self, (__WEBPACK_EXTERNAL_MODULE__deriv_components__, __WEBPACK_EXTERNAL_MODULE__deriv_shared__, __WEBPACK_EXTERNAL_MODULE__deriv_stores__, __WEBPACK_EXTERNAL_MODULE__deriv_translations__, __WEBPACK_EXTERNAL_MODULE_classnames__, __WEBPACK_EXTERNAL_MODULE_react__) => {\nreturn ","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","import React from 'react';\nimport classNames from 'classnames';\nimport { Button, Icon, Modal, Text } from '@deriv/components';\nimport { localize, Localize } from '@deriv/translations';\n\ntype TSuccessDialogProps = {\n    is_open: boolean;\n    toggleModal: () => void;\n    onCancel?: () => void;\n    onSubmit?: () => void;\n    classNameMessage?: string;\n    message: string | React.ReactElement;\n    icon: React.ReactElement;\n    icon_size?: string;\n    text_submit?: string;\n    text_cancel?: string;\n    heading?: string | React.ReactElement;\n    title?: string;\n    icon_type?: string;\n    is_medium_button?: boolean;\n    has_close_icon: boolean;\n    width?: string;\n    has_cancel?: boolean;\n    has_submit?: boolean;\n};\n\nconst SuccessDialog = ({\n    classNameMessage = '',\n    has_cancel = false,\n    has_submit = true,\n    icon,\n    message,\n    onCancel,\n    onSubmit,\n    heading,\n    icon_size = 'large',\n    text_submit,\n    text_cancel,\n    is_open,\n    toggleModal,\n    title,\n    has_close_icon,\n    width = '',\n    is_medium_button,\n}: TSuccessDialogProps) => {\n    return (\n        <Modal\n            className='cfd-success-dialog'\n            is_open={is_open}\n            toggleModal={toggleModal}\n            has_close_icon={has_close_icon}\n            small={!title}\n            title={title}\n            width={width}\n        >\n            <Modal.Body>\n                <div\n                    className={classNames('success-change__icon-area', {\n                        'success-change__icon-area--large': icon_size === 'large',\n                        'success-change__icon-area--xlarge': icon_size === 'xlarge',\n                    })}\n                    data-testid='dt_cfd_success_modal_icon_wrapper'\n                >\n                    {icon}\n                    <Icon\n                        className='bottom-right-overlay'\n                        icon='IcCheckmarkCircle'\n                        custom_color='var(--status-success)'\n                        size={24}\n                    />\n                </div>\n                {!heading ? (\n                    <Text as='h2' weight='bold' size='s' className='dc-modal-header__title'>\n                        <Localize i18n_default_text='Success!' />\n                    </Text>\n                ) : (\n                    <React.Fragment>{heading}</React.Fragment>\n                )}\n\n                {React.isValidElement(message) && message}\n                {!React.isValidElement(message) && <p className={classNameMessage}>{message}</p>}\n            </Modal.Body>\n            <Modal.Footer>\n                {has_cancel && onCancel && (\n                    <Button\n                        onClick={onCancel}\n                        has_effect\n                        text={text_cancel || localize('Maybe later')}\n                        secondary\n                        {...(is_medium_button ? { medium: true } : { large: true })}\n                    />\n                )}\n                {has_submit && onSubmit && (\n                    <Button\n                        has_effect\n                        onClick={onSubmit}\n                        text={text_submit}\n                        primary\n                        {...(is_medium_button ? { medium: true } : { large: true })}\n                    />\n                )}\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default SuccessDialog;\n","import SuccessDialog from './success-dialog';\n\nexport default SuccessDialog;\n","import React from 'react';\nimport SuccessDialog from '../Components/success-dialog';\nimport { getTopUpConfig } from '../Helpers/constants';\nimport { Icon, Modal, Button, Money, Text } from '@deriv/components';\nimport { getCFDPlatformLabel } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { localize, Localize } from '@deriv/translations';\nimport {\n    getCTraderCompanies,\n    TCTraderCompanies,\n    TDxCompanies,\n    TMtCompanies,\n} from '../Stores/Modules/CFD/Helpers/cfd-config';\nimport { useCfdStore } from '../Stores/Modules/CFD/Helpers/useCfdStores';\nimport { CFD_PLATFORMS } from '../Helpers/cfd-config';\n\ntype TCFDTopUpDemoModalProps = {\n    platform: string;\n};\n\nconst CFDTopUpDemoModal = observer(({ platform }: TCFDTopUpDemoModalProps) => {\n    const { ui } = useStore();\n\n    const {\n        is_top_up_virtual_open,\n        is_top_up_virtual_in_progress,\n        is_top_up_virtual_success,\n        closeTopUpModal,\n        closeSuccessTopUpModal,\n    } = ui;\n\n    const { current_account, dxtrade_companies, mt5_companies, topUpVirtual } = useCfdStore();\n\n    const ctrader_companies = getCTraderCompanies();\n\n    const getAccountTitle = React.useCallback(() => {\n        let title = '';\n        if ((!mt5_companies && !dxtrade_companies) || !current_account) return '';\n\n        switch (platform) {\n            case CFD_PLATFORMS.MT5:\n                title =\n                    mt5_companies[current_account.category as keyof TMtCompanies][\n                        current_account.type as keyof TMtCompanies['demo' | 'real']\n                    ].title;\n                break;\n            case CFD_PLATFORMS.CTRADER:\n                title =\n                    ctrader_companies[current_account.category as keyof TCTraderCompanies][\n                        current_account.type as keyof TCTraderCompanies['demo' | 'real']\n                    ].title;\n                break;\n            case CFD_PLATFORMS.DXTRADE:\n                title =\n                    dxtrade_companies[current_account.category as keyof TDxCompanies][\n                        current_account.type as keyof TDxCompanies['demo' | 'real']\n                    ].title;\n                break;\n            default:\n                break;\n        }\n\n        return title;\n    }, [mt5_companies, dxtrade_companies, current_account, ctrader_companies, platform]);\n\n    const onCloseSuccess = () => {\n        closeSuccessTopUpModal();\n    };\n\n    const has_sub_title = platform === CFD_PLATFORMS.CTRADER;\n\n    const platform_title = getCFDPlatformLabel(platform, has_sub_title);\n\n    if ((!mt5_companies && !dxtrade_companies && !getCTraderCompanies()) || !current_account) return null;\n    const { minimum_amount, additional_amount } = getTopUpConfig();\n\n    return (\n        <React.Fragment>\n            <Modal\n                toggleModal={closeTopUpModal}\n                is_open={is_top_up_virtual_open}\n                className='top-up-virtual'\n                title={localize('Fund top up')}\n                width='384px'\n            >\n                <div className='dc-modal__container_top-up-virtual__body'>\n                    <Text\n                        as='p'\n                        align='center'\n                        size='xxs'\n                        line_height='xs'\n                        className='dc-modal__container_top-up-virtual__description'\n                        data-testid='dt_top_up_virtual_description'\n                    >\n                        <Localize\n                            i18n_default_text='You can top up your demo account with an additional <0></0> if your balance is <1></1> or less.'\n                            components={[\n                                <Money\n                                    key={0}\n                                    amount={additional_amount}\n                                    currency={current_account.currency}\n                                    show_currency\n                                />,\n                                <Money\n                                    key={1}\n                                    amount={minimum_amount}\n                                    currency={current_account.currency}\n                                    show_currency\n                                />,\n                            ]}\n                        />\n                    </Text>\n                    <h4 className='dc-modal__container_top-up-virtual--h4'>\n                        <Localize\n                            i18n_default_text='{{ platform }} {{ account_title }} account'\n                            values={{\n                                platform: platform_title,\n                                account_title: getAccountTitle(),\n                            }}\n                        />\n                    </h4>\n                    <div>\n                        <Text as='p' align='center' size='xxs'>\n                            <Localize i18n_default_text='Current balance' />\n                        </Text>\n                        <div className='dc-modal__container_top-up-virtual--balance'>\n                            <Money\n                                amount={current_account.display_balance}\n                                currency={current_account.currency}\n                                has_sign={(current_account.balance as number) < 0}\n                            />\n                        </div>\n                    </div>\n                    <div className='dc-modal__container_top-up-virtual--button'>\n                        <Button\n                            is_disabled={(current_account.balance as number) > 1000 || is_top_up_virtual_in_progress}\n                            type='button'\n                            is_loading={is_top_up_virtual_in_progress}\n                            onClick={() => topUpVirtual(platform)}\n                            primary\n                            large\n                        >\n                            {!is_top_up_virtual_in_progress && (\n                                <Localize\n                                    i18n_default_text='Top up &nbsp;<0></0>'\n                                    components={[\n                                        <Money\n                                            key={0}\n                                            amount={additional_amount}\n                                            currency={current_account.currency}\n                                            show_currency\n                                        />,\n                                    ]}\n                                />\n                            )}\n                        </Button>\n                    </div>\n                </div>\n            </Modal>\n            <SuccessDialog\n                is_open={is_top_up_virtual_success}\n                toggleModal={onCloseSuccess}\n                has_close_icon\n                title={localize('Fund top up')}\n                icon={<Icon icon='IcCashierWallet' size={128} />}\n                heading={\n                    <h3 className='cfd-success-topup__heading'>\n                        <Localize\n                            i18n_default_text='<0></0> has been credited into your {{platform}} {{title}} account.'\n                            values={{ platform: platform_title, title: getAccountTitle() }}\n                            components={[\n                                <Money\n                                    key={0}\n                                    amount={additional_amount}\n                                    currency={current_account.currency}\n                                    show_currency\n                                />,\n                            ]}\n                        />\n                    </h3>\n                }\n                message={\n                    <div className='cfd-success-topup__description'>\n                        <p>\n                            <Localize i18n_default_text='New current balance' />\n                        </p>\n                        <div className='dc-modal__container_top-up-virtual--balance'>\n                            <Money amount={current_account.balance} currency={current_account.currency} />\n                        </div>\n                    </div>\n                }\n                icon_size='large'\n                has_cancel={false}\n                has_submit={false}\n                width='384px'\n            />\n        </React.Fragment>\n    );\n});\n\nexport default CFDTopUpDemoModal;\n","module.exports = __WEBPACK_EXTERNAL_MODULE__deriv_components__;","module.exports = __WEBPACK_EXTERNAL_MODULE__deriv_shared__;","module.exports = __WEBPACK_EXTERNAL_MODULE__deriv_stores__;","module.exports = __WEBPACK_EXTERNAL_MODULE__deriv_translations__;","module.exports = __WEBPACK_EXTERNAL_MODULE_classnames__;","module.exports = __WEBPACK_EXTERNAL_MODULE_react__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","// The chunk loading function for additional chunks\n// Since all referenced chunks are already included\n// in this file, this function is empty here.\n__webpack_require__.e = () => (Promise.resolve());","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","__webpack_require__.j = \"CFDTopUpDemoModal\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"CFDTopUpDemoModal\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunk_deriv_cfd\"] = self[\"webpackChunk_deriv_cfd\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"internalCFDStoreUsage\",\"utilities\"], () => (__webpack_require__(\"./src/Containers/cfd-top-up-demo-modal.tsx\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["root","factory","exports","module","require","define","amd","self","__WEBPACK_EXTERNAL_MODULE__deriv_components__","__WEBPACK_EXTERNAL_MODULE__deriv_shared__","__WEBPACK_EXTERNAL_MODULE__deriv_stores__","__WEBPACK_EXTERNAL_MODULE__deriv_translations__","__WEBPACK_EXTERNAL_MODULE_classnames__","__WEBPACK_EXTERNAL_MODULE_react__","deferred","_ref","_ref$classNameMessage","classNameMessage","_ref$has_cancel","has_cancel","_ref$has_submit","has_submit","icon","message","onCancel","onSubmit","heading","_ref$icon_size","icon_size","text_submit","text_cancel","is_open","toggleModal","title","has_close_icon","_ref$width","width","is_medium_button","React","Modal","className","small","Body","classNames","Icon","custom_color","size","Text","as","weight","Localize","i18n_default_text","Footer","Button","_extends","onClick","has_effect","text","localize","secondary","medium","large","primary","observer","platform","ui","useStore","is_top_up_virtual_open","is_top_up_virtual_in_progress","is_top_up_virtual_success","closeTopUpModal","closeSuccessTopUpModal","_useCfdStore","useCfdStore","current_account","dxtrade_companies","mt5_companies","topUpVirtual","ctrader_companies","getCTraderCompanies","getAccountTitle","CFD_PLATFORMS","MT5","category","type","CTRADER","DXTRADE","has_sub_title","platform_title","getCFDPlatformLabel","_getTopUpConfig","getTopUpConfig","minimum_amount","additional_amount","align","line_height","components","Money","key","amount","currency","show_currency","values","account_title","display_balance","has_sign","balance","is_disabled","is_loading","SuccessDialog","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","m","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","length","fulfilled","j","Object","keys","every","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","e","Promise","resolve","obj","prop","prototype","hasOwnProperty","call","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","some","id","chunkLoadingGlobal","forEach","bind","push","__webpack_exports__"],"sourceRoot":""}