{"version":3,"file":"trader/js/trader.trader-app-v2.3cc798b369796d64eee5.js","mappings":"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","sources":["webpack://@deriv/trader/./src/AppV2/Components/Guide/Description/video-fragment.tsx","webpack://@deriv/trader/./src/AppV2/Utils/contract-description-utils.tsx","webpack://@deriv/trader/../reports/src/Stores/Modules/Profit/Helpers/format-request.ts","webpack://@deriv/trader/../reports/src/Stores/base-store.js","webpack://@deriv/trader/../reports/src/Stores/Modules/Profit/profit-store.js","webpack://@deriv/trader/../reports/src/Stores/Modules/Profit/Helpers/format-response.ts","webpack://@deriv/trader/../reports/src/Stores/Modules/Statement/Helpers/format-response.ts","webpack://@deriv/trader/../reports/src/Stores/Modules/Statement/statement-store.js","webpack://@deriv/trader/../reports/src/Stores/useReportsStores.tsx","webpack://@deriv/trader/./src/AppV2/Containers/Notifications/notifications.tsx","webpack://@deriv/trader/./src/AppV2/Containers/Notifications/index.ts","webpack://@deriv/trader/../hooks/src/useLocalStorageData.ts","webpack://@deriv/trader/./src/AppV2/Components/AccumulatorStats/accumulator-stats-row.tsx","webpack://@deriv/trader/./src/AppV2/Utils/layout-utils.tsx","webpack://@deriv/trader/./src/AppV2/Components/StreamIframe/stream-iframe.tsx","webpack://@deriv/trader/./src/AppV2/Components/StreamIframe/index.ts","webpack://@deriv/trader/./src/AppV2/Components/AccumulatorStats/accumulator-stats-description.tsx","webpack://@deriv/trader/./src/AppV2/Components/AccumulatorStats/accumulator-stats-modal.tsx","webpack://@deriv/trader/./src/AppV2/Components/AccumulatorStats/accumulator-stats.tsx","webpack://@deriv/trader/./src/AppV2/Components/AccumulatorStats/index.ts","webpack://@deriv/trader/./src/AppV2/Components/BottomNav/bottom-nav.tsx","webpack://@deriv/trader/./src/AppV2/Components/BottomNav/index.ts","webpack://@deriv/trader/./src/AppV2/Hooks/useDtraderQuery.ts","webpack://@deriv/trader/./src/AppV2/Utils/contract-type.ts","webpack://@deriv/trader/./src/AppV2/Hooks/useContractsForCompany.ts","webpack://@deriv/trader/./src/AppV2/Utils/client.ts","webpack://@deriv/trader/./src/AppV2/Hooks/useActiveSymbols.ts","webpack://@deriv/trader/./src/AppV2/Components/MarketOpeningTimeBanner/market-opening-time-banner.tsx","webpack://@deriv/trader/./src/AppV2/Components/MarketOpeningTimeBanner/index.ts","webpack://@deriv/trader/./src/AppV2/Components/MarketCountdownTimer/market-countdown-timer.tsx","webpack://@deriv/trader/./src/AppV2/Components/MarketCountdownTimer/index.ts","webpack://@deriv/trader/./src/AppV2/Utils/closed-market-message-utils.ts","webpack://@deriv/trader/./src/AppV2/Components/ClosedMarketMessage/closed-market-message.tsx","webpack://@deriv/trader/./src/AppV2/Components/ClosedMarketMessage/index.ts","webpack://@deriv/trader/./src/AppV2/Components/CurrentSpot/current-spot-display.tsx","webpack://@deriv/trader/./src/AppV2/Components/CurrentSpot/current-spot.tsx","webpack://@deriv/trader/./src/AppV2/Components/CurrentSpot/index.ts","webpack://@deriv/trader/./src/AppV2/Components/SymbolsSearchField/symbols-search-field.tsx","webpack://@deriv/trader/./src/AppV2/Components/SymbolsSearchField/index.ts","webpack://@deriv/trader/./src/AppV2/Utils/sort-symbols-utils.ts","webpack://@deriv/trader/./src/AppV2/Utils/symbol-categories-utils.ts","webpack://@deriv/trader/./src/AppV2/Utils/market-icons.ts","webpack://@deriv/trader/./src/AppV2/Components/SymbolIconsMapper/symbol-icons-mapper.tsx","webpack://@deriv/trader/./src/AppV2/Components/MarketCategoryItem/market-category-item.tsx","webpack://@deriv/trader/./src/AppV2/Components/MarketCategoryItem/index.ts","webpack://@deriv/trader/./src/AppV2/Components/FavoriteSymbols/no-favorite-symbols.tsx","webpack://@deriv/trader/./src/AppV2/Components/FavoriteSymbols/favorite-symbols.tsx","webpack://@deriv/trader/./src/AppV2/Components/FavoriteSymbols/index.ts","webpack://@deriv/trader/./src/AppV2/Hooks/useGetFavoriteSymbols.ts","webpack://@deriv/trader/./src/AppV2/Components/MarketCategory/market-category.tsx","webpack://@deriv/trader/./src/AppV2/Components/MarketCategory/index.ts","webpack://@deriv/trader/./src/AppV2/Components/MarketCategoryTab/market-category-tab.tsx","webpack://@deriv/trader/./src/AppV2/Components/MarketCategories/market-categories.tsx","webpack://@deriv/trader/./src/AppV2/Components/MarketCategories/index.ts","webpack://@deriv/trader/./src/AppV2/Components/SymbolNotFound/symbol-not-found.tsx","webpack://@deriv/trader/./src/AppV2/Components/SymbolNotFound/index.ts","webpack://@deriv/trader/./src/AppV2/Components/SymbolSearchResults/symbol-search-results.tsx","webpack://@deriv/trader/./src/AppV2/Components/SymbolSearchResults/index.ts","webpack://@deriv/trader/./src/AppV2/Hooks/useGetSymbolSearchResults.ts","webpack://@deriv/trader/./src/AppV2/Components/ActiveSymbolsList/active-symbols-list.tsx","webpack://@deriv/trader/./src/AppV2/Components/ActiveSymbolsList/index.ts","webpack://@deriv/trader/./src/AppV2/Components/MarketSelector/market-selector.tsx","webpack://@deriv/trader/./src/AppV2/Components/MarketSelector/index.ts","webpack://@deriv/trader/./src/AppV2/Components/OnboardingGuide/GuideForPages/guide-tooltip.tsx","webpack://@deriv/trader/./src/AppV2/Components/OnboardingGuide/GuideForPages/steps-config.tsx","webpack://@deriv/trader/./src/AppV2/Components/OnboardingGuide/GuideForPages/guide-container.tsx","webpack://@deriv/trader/./src/AppV2/Components/OnboardingGuide/GuideForPages/onboarding-video.tsx","webpack://@deriv/trader/./src/AppV2/Components/OnboardingGuide/GuideForPages/onboarding-guide.tsx","webpack://@deriv/trader/./src/AppV2/Components/OnboardingGuide/GuideForPages/index.ts","webpack://@deriv/trader/./src/AppV2/Components/PurchaseButton/purchase-button-content.tsx","webpack://@deriv/trader/./src/AppV2/Components/PurchaseButton/purchase-button.tsx","webpack://@deriv/trader/./src/AppV2/Components/PurchaseButton/index.ts","webpack://@deriv/trader/./src/AppV2/Components/ServiceErrorSheet/service-error-description.tsx","webpack://@deriv/trader/./src/AppV2/Components/ServiceErrorSheet/service-error-sheet.tsx","webpack://@deriv/trader/./src/AppV2/Components/ServiceErrorSheet/index.ts","webpack://@deriv/trader/./src/AppV2/Hooks/useTradeError.ts","webpack://@deriv/trader/./src/AppV2/Components/TradeErrorSnackbar/trade-error-snackbar.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeErrorSnackbar/index.ts","webpack://@deriv/trader/./src/AppV2/Components/Guide/guide-definition-modal.tsx","webpack://@deriv/trader/./src/AppV2/Components/Guide/Description/trade-description.tsx","webpack://@deriv/trader/./src/AppV2/Components/Guide/Description/video-preview.tsx","webpack://@deriv/trader/./src/AppV2/Components/Guide/guide-content.tsx","webpack://@deriv/trader/./src/AppV2/Components/Guide/guide-description-modal.tsx","webpack://@deriv/trader/./src/AppV2/Components/Guide/guide.tsx","webpack://@deriv/trader/./src/AppV2/Components/Guide/index.ts","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/trade-parameters-container.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/AccumulatorsInformation/accumulators-information.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/AccumulatorsInformation/index.ts","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/AllowEquals/allow-equals.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/AllowEquals/index.ts","webpack://@deriv/trader/./src/AppV2/Components/Carousel/carousel.tsx","webpack://@deriv/trader/./src/AppV2/Components/Carousel/index.ts","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/Barrier/barrier-description.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/Barrier/barrier-input.tsx","webpack://@deriv/trader/./src/AppV2/Components/Carousel/carousel-header.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/Barrier/barrier.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/Barrier/index.ts","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/BarrierInfo/barrier-info.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/BarrierInfo/index.ts","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/Duration/chips.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/Duration/hourpicker.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/Duration/duration-wheel-picker.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/Duration/datepicker.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/Duration/timepicker.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/Duration/day.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/Duration/container.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/Duration/duration.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/Duration/index.ts","webpack://@deriv/trader/./src/AppV2/Components/TradeParamDefinition/trade-param-definition.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParamDefinition/index.ts","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/GrowthRate/growth-rate-picker.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/GrowthRate/growth-rate.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/GrowthRate/index.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/LastDigitPrediction/digit.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/LastDigitPrediction/last-digit-selector.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/LastDigitPrediction/last-digit-prediction.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/LastDigitPrediction/index.ts","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/Multiplier/multiplier-wheel-picker.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/Multiplier/multiplier.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/Multiplier/index.ts","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/MultipliersDealCancellationInfo/multipliers-deal-cancellation-info.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/MultipliersDealCancellationInfo/index.ts","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/MultipliersExpirationInfo/multipliers-expiration-info.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/MultipliersExpirationInfo/index.ts","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/PayoutInfo/payout-info.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/PayoutInfo/index.ts","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/PayoutPerPoint/payout-per-point-wheel.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/PayoutPerPoint/payout-per-point.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/PayoutPerPoint/index.ts","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/PayoutPerPointInfo/payout-per-point-info.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/PayoutPerPointInfo/index.ts","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/RiskManagement/deal-cancellation.tsx","webpack://@deriv/trader/./src/AppV2/Hooks/useIsVirtualKeyboardOpen.ts","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/RiskManagement/take-profit-and-stop-loss-input.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/RiskManagement/take-profit-and-stop-loss-container.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/RiskManagement/risk-management-picker.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/RiskManagement/risk-management-content.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/RiskManagement/risk-management.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/RiskManagement/index.ts","webpack://@deriv/trader/./src/AppV2/Hooks/useFetchProposalData.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/Stake/stake-details.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/Stake/stake-input.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/Stake/stake.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/Stake/index.ts","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/Strike/strike-wheel.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/Strike/strike.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/Strike/index.ts","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/TakeProfit/take-profit.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/TakeProfit/index.ts","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/TradeTypeTabs/trade-type-tabs.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/TradeTypeTabs/index.ts","webpack://@deriv/trader/./src/AppV2/Components/TradeParameters/trade-parameters.tsx","webpack://@deriv/trader/./src/AppV2/Hooks/useDefaultSymbol.ts","webpack://@deriv/trader/./src/AppV2/Containers/Chart/trade-chart.tsx","webpack://@deriv/trader/./src/AppV2/Components/OnboardingGuide/TradeTypesSelectionGuide/trade-types-selection-guide.tsx","webpack://@deriv/trader/./src/AppV2/Components/OnboardingGuide/TradeTypesSelectionGuide/index.ts","webpack://@deriv/trader/./src/AppV2/Components/DraggableList/draggable-list-item.tsx","webpack://@deriv/trader/./src/AppV2/Components/DraggableList/draggable-list.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeTypeList/trade-type-list-item.tsx","webpack://@deriv/trader/./src/AppV2/Components/TradeTypeList/trade-type-list.tsx","webpack://@deriv/trader/./src/AppV2/Containers/Trade/trade-types-content.tsx","webpack://@deriv/trader/./src/AppV2/Containers/Trade/trade-types.tsx","webpack://@deriv/trader/./src/AppV2/Containers/Trade/trade.tsx","webpack://@deriv/trader/./src/AppV2/Containers/Trade/index.ts","webpack://@deriv/trader/./src/AppV2/Components/EmptyPositions/empty-positions.tsx","webpack://@deriv/trader/./src/AppV2/Components/ContractCard/contract-card-status-timer.tsx","webpack://@deriv/trader/./src/AppV2/Components/ContractCard/forward-starting-tag.tsx","webpack://@deriv/trader/./src/AppV2/Components/ContractCard/contract-card.tsx","webpack://@deriv/trader/./src/AppV2/Components/ContractCard/contract-card-list.tsx","webpack://@deriv/trader/./src/AppV2/Components/ContractCard/contract-cards-sections.tsx","webpack://@deriv/trader/./src/AppV2/Components/Filter/contract-type-filter.tsx","webpack://@deriv/trader/./src/AppV2/Components/Filter/custom-time-filter-button.tsx","webpack://@deriv/trader/./src/AppV2/Components/DatePicker/date-picker.tsx","webpack://@deriv/trader/./src/AppV2/Components/DatePicker/index.ts","webpack://@deriv/trader/./src/AppV2/Components/Filter/time-filter.tsx","webpack://@deriv/trader/./src/AppV2/Components/TotalProfitLoss/total-profit-loss.tsx","webpack://@deriv/trader/./src/AppV2/Components/TotalProfitLoss/index.ts","webpack://@deriv/trader/./src/AppV2/Hooks/useTradeTypeFilter.ts","webpack://@deriv/trader/./src/AppV2/Hooks/useTimeFilter.ts","webpack://@deriv/trader/./src/AppV2/Containers/Positions/positions-content.tsx","webpack://@deriv/trader/./src/AppV2/Containers/Positions/positions.tsx","webpack://@deriv/trader/./src/AppV2/Containers/Positions/index.ts","webpack://@deriv/trader/./src/AppV2/Components/EntryExitDetails/entry-exit-details-row.tsx","webpack://@deriv/trader/./src/AppV2/Components/CardWrapper/card-wrapper.tsx","webpack://@deriv/trader/./src/AppV2/Components/CardWrapper/index.ts","webpack://@deriv/trader/./src/AppV2/Components/EntryExitDetails/entry-exit-details.tsx","webpack://@deriv/trader/./src/AppV2/Components/EntryExitDetails/index.ts","webpack://@deriv/trader/./src/AppV2/Components/TakeProfitHistory/take-profit-history.tsx","webpack://@deriv/trader/./src/AppV2/Components/TakeProfitHistory/index.ts","webpack://@deriv/trader/./src/AppV2/Components/PayoutInfo/payout-info.tsx","webpack://@deriv/trader/./src/AppV2/Components/PayoutInfo/index.ts","webpack://@deriv/trader/./src/AppV2/Hooks/useContractDetails.ts","webpack://@deriv/trader/./src/AppV2/Containers/Chart/contract-details-chart.tsx","webpack://@deriv/trader/./src/AppV2/Hooks/useOrderDetails.ts","webpack://@deriv/trader/./src/AppV2/Components/OrderDetails/order-details.tsx","webpack://@deriv/trader/./src/AppV2/Components/OrderDetails/index.ts","webpack://@deriv/trader/./src/AppV2/Utils/contract-details-config.ts","webpack://@deriv/trader/./src/AppV2/Components/RiskManagementInfoModal/risk-management-info-modal.tsx","webpack://@deriv/trader/./src/AppV2/Components/RiskManagementInfoModal/index.ts","webpack://@deriv/trader/./src/AppV2/Components/DealCancellationRemainingTime/deal-cancellation-remaining-time.tsx","webpack://@deriv/trader/./src/AppV2/Components/RiskManagementItem/risk-management-item.tsx","webpack://@deriv/trader/./src/AppV2/Components/RiskManagementItem/index.ts","webpack://@deriv/trader/./src/AppV2/Components/TakeProfit/take-profit.tsx","webpack://@deriv/trader/./src/AppV2/Components/StopLoss/stop-loss.tsx","webpack://@deriv/trader/./src/AppV2/Components/DealCancellation/deal-cancellation.tsx","webpack://@deriv/trader/./src/AppV2/Components/ContractDetailsFooter/contract-details-footer.tsx","webpack://@deriv/trader/./src/AppV2/Components/ContractDetailsFooter/index.ts","webpack://@deriv/trader/./src/AppV2/Components/ForwardStartingBanner/forward-starting-banner.tsx","webpack://@deriv/trader/./src/AppV2/Components/ForwardStartingBanner/index.ts","webpack://@deriv/trader/./src/AppV2/Components/ContractDetailsHeader/contract-details-header.tsx","webpack://@deriv/trader/./src/AppV2/Components/ContractDetailsHeader/index.ts","webpack://@deriv/trader/./src/AppV2/Containers/ContractDetails/contract-details.tsx","webpack://@deriv/trader/./src/AppV2/Containers/ContractDetails/index.ts","webpack://@deriv/trader/./src/AppV2/Routes/routes.tsx","webpack://@deriv/trader/./src/AppV2/Routes/router.tsx","webpack://@deriv/trader/./src/AppV2/Components/ServicesErrorSnackbar/services-error-snackbar.tsx","webpack://@deriv/trader/./src/AppV2/Components/ServicesErrorSnackbar/index.ts","webpack://@deriv/trader/./src/AppV2/app.tsx","webpack://@deriv/trader/./src/AppV2/index.tsx","webpack://@deriv/trader/./src/Modules/Contract/Components/InfoBox/info-box-longcode.tsx","webpack://@deriv/trader/./src/Modules/Contract/Components/contract-error.tsx","webpack://@deriv/trader/./src/Modules/Contract/Components/InfoBox/info-box.tsx","webpack://@deriv/trader/./src/Modules/Contract/Components/InfoBox/index.ts","webpack://@deriv/trader/./src/Modules/Contract/Containers/contract-replay-widget.tsx","webpack://@deriv/trader/./src/Modules/SmartChart/Components/Markers/reset-contract-chart-elements.tsx","webpack://@deriv/trader/./src/Modules/Contract/Containers/replay-chart.tsx","webpack://@deriv/trader/./src/Stores/Modules/Trading/Helpers/end-time.ts","webpack://@deriv/trader/./src/Stores/Modules/Trading/Helpers/logic.ts"],"sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Skeleton } from '@deriv/components';\nimport { useDevice } from '@deriv-com/ui';\nimport { getUrlBase } from '@deriv/shared';\nimport { CONTRACT_LIST } from 'AppV2/Utils/trade-types-utils';\nimport { DotLottieReact } from '@lottiefiles/dotlottie-react';\n\ntype TVideoFragment = {\n    contract_type: string;\n};\n\nconst VideoFragment = ({ contract_type }: TVideoFragment) => {\n    const [is_loading, setIsLoading] = React.useState(true);\n    const [dotLottie, setDotLottie] = React.useState<EventTarget | null>(null);\n\n    const { isMobile } = useDevice();\n\n    // memoize file paths for videos and open the modal only after we get them\n    const getVideoSource = React.useCallback(\n        (extension: string) =>\n            getUrlBase(`/public/videos/${contract_type.toLowerCase()}_${isMobile ? 'mobile' : 'desktop'}.${extension}`),\n        [contract_type, isMobile]\n    );\n    const lottie_src = React.useMemo(() => getVideoSource('lottie'), [getVideoSource]);\n\n    React.useEffect(() => {\n        const onLoad = () => setIsLoading(false);\n\n        if (dotLottie) dotLottie.addEventListener('load', onLoad);\n\n        return () => {\n            if (dotLottie) dotLottie.removeEventListener('load', onLoad);\n        };\n    }, [dotLottie]);\n\n    return (\n        <div\n            className={classNames('video-fragment__wrapper', {\n                'video-fragment__wrapper--accumulator':\n                    contract_type.toLowerCase() === CONTRACT_LIST.ACCUMULATORS.toLowerCase(),\n            })}\n        >\n            {is_loading && <Skeleton width={248} height={161} className='skeleton-video-loader' />}\n            <DotLottieReact\n                autoplay\n                dotLottieRefCallback={\n                    ((dotLottie: EventTarget | null) => setDotLottie(dotLottie)) as React.ComponentProps<\n                        typeof DotLottieReact\n                    >['dotLottieRefCallback']\n                }\n                src={lottie_src}\n                loop\n            />\n        </div>\n    );\n};\n\nexport default VideoFragment;\n","import React from 'react';\nimport { Localize, localize } from '@deriv/translations';\nimport { Text } from '@deriv-com/quill-ui';\nimport VideoFragment from 'AppV2/Components/Guide/Description/video-fragment';\nimport { DESCRIPTION_VIDEO_ID } from 'Modules/Trading/Helpers/video-config';\nimport { CONTRACT_LIST } from './trade-types-utils';\n\ntype TDtraderVideoUrl = {\n    [key: string]: TVideoVariants;\n};\n\ntype TVideoVariants = {\n    dark: string;\n    light: string;\n};\n\nexport const getTerm = () => ({\n    BARRIER: localize('Barrier'),\n    CONTRACT_VALUE: localize('Contract value'),\n    DEAL_CANCELLATION: localize('Deal cancellation'),\n    ENTRY_SPOT: localize('Entry spot'),\n    EXIT_SPOT: localize('Exit spot'),\n    EXPIRY: localize('Expiry'),\n    FINAL_PRICE: localize('Final price'),\n    GROWTH_RATE: localize('Growth rate'),\n    PAYOUT: localize('Payout'),\n    PAYOUT_PER_POINT: localize('Payout per point'),\n    PREVIOUS_SPOT_PRICE: localize('Previous spot price'),\n    RANGE: localize('Range'),\n    SLIPPAGE_RISK: localize('Slippage risk'),\n    STOP_OUT_LEVEL: localize('Stop out level'),\n    STOP_LOSS: localize('Stop loss'),\n    STRIKE_PRICE: localize('Strike price'),\n    TAKE_PROFIT: localize('Take profit'),\n});\n\nconst getDefinition = () => {\n    const {\n        BARRIER,\n        CONTRACT_VALUE,\n        DEAL_CANCELLATION,\n        ENTRY_SPOT,\n        EXIT_SPOT,\n        EXPIRY,\n        FINAL_PRICE,\n        GROWTH_RATE,\n        PAYOUT,\n        PAYOUT_PER_POINT,\n        PREVIOUS_SPOT_PRICE,\n        RANGE,\n        SLIPPAGE_RISK,\n        STOP_OUT_LEVEL,\n        STOP_LOSS,\n        STRIKE_PRICE,\n        TAKE_PROFIT,\n    } = getTerm();\n    return {\n        [BARRIER]: (\n            <Localize i18n_default_text='This is the corresponding price level based on the payout per point you’ve selected. If this barrier is ever breached, your contract would be terminated.' />\n        ),\n        [CONTRACT_VALUE]: (contract_type: string) =>\n            contract_type === CONTRACT_LIST.VANILLAS ? (\n                <Localize i18n_default_text='We’ll offer to buy your contract at this price should you choose to sell it before its expiry. This is based on several factors, such as the current spot price, duration, etc. However, we won’t offer a contract value if the remaining duration is below 60 seconds.' />\n            ) : (\n                <Localize i18n_default_text='This is the resale value of your contract, based on the prevailing market conditions (e.g, the current spot), including additional commissions if any.' />\n            ),\n        [DEAL_CANCELLATION]: (\n            <Localize i18n_default_text='If you select this feature, you can cancel your trade within a chosen time frame if the asset price moves against your favour. You will get your stake back without profit/loss. We charge a small fee for this. Take profit and stop loss are disabled when deal cancellation is active.' />\n        ),\n        [ENTRY_SPOT]: (\n            <Localize i18n_default_text='We use current-tick-execution mechanism, which is the latest asset price when the trade opening is processed by our servers for Volatility Index, Basket Indices, Jump Indices and Crash/Boom Indices.' />\n        ),\n        [EXIT_SPOT]: (\n            <Localize i18n_default_text='The latest asset price when the trade closure is processed by our servers.' />\n        ),\n        [EXPIRY]: (\n            <React.Fragment>\n                <Text className='definition__paragraph'>\n                    <Localize i18n_default_text='This is when your contract will expire based on the duration or end time you’ve selected. If the duration is more than 24 hours, the cut-off time and expiry date will apply instead.' />\n                </Text>\n                <Text>\n                    <Localize i18n_default_text='Cut off time:' />\n                </Text>\n                <Text className='definition__paragraph'>\n                    <Localize i18n_default_text='Contracts will expire at exactly 23:59:59 GMT on your selected expiry date.' />\n                </Text>\n                <Text>\n                    <Localize i18n_default_text='Expiry date:' />\n                </Text>\n                <Text>\n                    <Localize i18n_default_text='Your contract will expire on this date (in GMT), based on the end time you’ve selected.' />\n                </Text>\n            </React.Fragment>\n        ),\n        [FINAL_PRICE]: <Localize i18n_default_text='This is the spot price of the last tick at expiry.' />,\n        [GROWTH_RATE]: (\n            <Localize i18n_default_text='You can choose a growth rate with values of 1%, 2%, 3%, 4%, and 5%.' />\n        ),\n        [PAYOUT]: (contract_type: string) => {\n            if (contract_type === CONTRACT_LIST.VANILLAS) {\n                return (\n                    <Localize i18n_default_text='Your payout is equal to the payout per point multiplied by the difference between the final price and the strike price.' />\n                );\n            }\n            if (contract_type === CONTRACT_LIST.TURBOS) {\n                return (\n                    <Localize i18n_default_text='The payout at expiry is equal to the payout per point multiplied by the distance between the final price and the barrier.' />\n                );\n            }\n            return <Localize i18n_default_text='Payout is the sum of your initial stake and profit.' />;\n        },\n        [PAYOUT_PER_POINT]: (contract_type: string) =>\n            contract_type === CONTRACT_LIST.VANILLAS ? (\n                <Localize i18n_default_text='We calculate this based on the strike price and duration you’ve selected.' />\n            ) : (\n                <Localize i18n_default_text='The amount you choose to receive at expiry for every point of change between the final price and the barrier. ' />\n            ),\n        [PREVIOUS_SPOT_PRICE]: <Localize i18n_default_text='Spot price on the previous tick.' />,\n        [RANGE]: (\n            <Localize i18n_default_text='It is a percentage of the previous spot price. The percentage rate is based on your choice of the index and the growth rate.' />\n        ),\n        [SLIPPAGE_RISK]: (contract_type: string) =>\n            contract_type === CONTRACT_LIST.ACCUMULATORS ? (\n                <Localize i18n_default_text='The spot price may change by the time your order reaches our servers. When this happens, your payout may be affected.' />\n            ) : (\n                <Localize i18n_default_text='Slippage happens when the asset price changes by the time it reaches our servers.' />\n            ),\n        [STOP_OUT_LEVEL]: (\n            <Localize i18n_default_text='Your trade will be closed automatically at the nearest available asset price when your loss reaches a certain percentage of your stake, but your loss never exceeds your stake. This percentage depends on the chosen underlying asset and the Multiplier.' />\n        ),\n        [STOP_LOSS]: (\n            <Localize i18n_default_text='If you select this feature, your trade will be closed automatically at the nearest available asset price when your loss reaches or exceeds the stop loss amount. Your loss may be more than the amount you entered depending on the market price at closing.' />\n        ),\n        [STRIKE_PRICE]: (\n            <React.Fragment>\n                <Text className='definition__paragraph'>\n                    <Localize i18n_default_text='You must select the strike price before entering the contract.' />\n                </Text>\n                <Text className='definition__paragraph'>\n                    <Localize i18n_default_text='If you select “Call”, you’ll earn a payout if the final price is above the strike price at expiry. Otherwise, you won’t receive a payout.' />\n                </Text>\n                <Text>\n                    <Localize i18n_default_text='If you select ‘Put”, you’ll earn a payout if the final price is below the strike price at expiry. Otherwise, you won’t receive a payout.' />\n                </Text>\n            </React.Fragment>\n        ),\n        [TAKE_PROFIT]: (\n            <Localize i18n_default_text='If you select this feature, your trade will be closed automatically at the nearest available asset price when your profit reaches or exceeds the take profit amount. Your profit may be more than the amount you entered depending on the market price at closing.' />\n        ),\n    };\n};\n\nexport const getTermDefinition = ({ contract_type, term }: { contract_type?: string; term?: string }) => {\n    if (!contract_type || !term) return;\n    const result = getDefinition()[term];\n    if (typeof result === 'function') return result(contract_type);\n    return result ?? '';\n};\n\nexport const getContractDescription = (\n    content: {\n        type: string;\n        text: JSX.Element | string;\n    }[]\n) =>\n    content.map(({ type, text }, index) => {\n        if (type === 'heading' && typeof text !== 'string')\n            return (\n                <Text key={text.props.i18n_default_text} bold size='md' className='description__heading'>\n                    {text}\n                </Text>\n            );\n        if ((type === 'paragraph' || type === 'general') && typeof text !== 'string')\n            return (\n                <Text\n                    as='p'\n                    key={text.props.i18n_default_text}\n                    size='sm'\n                    className={`description__${type}`}\n                    color='quill-typography__color--default'\n                >\n                    {text}\n                </Text>\n            );\n        if (type === 'video' && typeof text === 'string')\n            return <VideoFragment contract_type={text} key={text + index} />;\n    });\n\nexport const DESCRIPTION_VIDEO_IDS: TDtraderVideoUrl = {\n    [CONTRACT_LIST.ACCUMULATORS]: DESCRIPTION_VIDEO_ID.accumulator,\n    [CONTRACT_LIST.EVEN_ODD]: DESCRIPTION_VIDEO_ID.even_odd,\n    [CONTRACT_LIST.HIGHER_LOWER]: DESCRIPTION_VIDEO_ID.high_low,\n    [CONTRACT_LIST.MATCHES_DIFFERS]: DESCRIPTION_VIDEO_ID.match_diff,\n    [CONTRACT_LIST.MULTIPLIERS]: DESCRIPTION_VIDEO_ID.multiplier,\n    [CONTRACT_LIST.OVER_UNDER]: DESCRIPTION_VIDEO_ID.over_under,\n    [CONTRACT_LIST.RISE_FALL]: DESCRIPTION_VIDEO_ID.rise_fall,\n    [CONTRACT_LIST.TOUCH_NO_TOUCH]: DESCRIPTION_VIDEO_ID.touch,\n    [CONTRACT_LIST.VANILLAS]: DESCRIPTION_VIDEO_ID.vanilla,\n    [CONTRACT_LIST.TURBOS]: DESCRIPTION_VIDEO_ID.turbos,\n};\n\nexport const getDescriptionVideoIds = (contract_type = '', is_dark_theme = false) =>\n    DESCRIPTION_VIDEO_IDS[contract_type]?.[is_dark_theme ? 'dark' : 'light'];\n","import { epochToMoment, toMoment } from '@deriv/shared';\n\ntype TDateToOrFrom = number | null;\ntype TPartialFetchTime = boolean | number;\n\nconst getDateTo = (date_to: TDateToOrFrom) => {\n    const today = toMoment().startOf('day').unix();\n    if (date_to && today > date_to) {\n        return date_to;\n    }\n    return epochToMoment(today).add(1, 'd').subtract(1, 's').unix();\n};\n\nconst getDateFrom = (\n    should_load_partially: boolean,\n    partial_fetch_time: TPartialFetchTime,\n    date_from: TDateToOrFrom,\n    date_to: TDateToOrFrom\n) => {\n    const today = toMoment().startOf('day').unix();\n    if (date_to && today > date_to) {\n        return date_from;\n    }\n    return should_load_partially && partial_fetch_time ? partial_fetch_time : date_from;\n};\n\nconst shouldSendDateFrom = (\n    date_from: TDateToOrFrom,\n    should_load_partially: boolean,\n    partial_fetch_time: TPartialFetchTime,\n    date_to: TDateToOrFrom\n) => {\n    const today = toMoment().startOf('day').unix();\n    if (date_to && today > date_to) {\n        return !!date_from || should_load_partially;\n    }\n    return should_load_partially ? partial_fetch_time || date_from : !!date_from || false;\n};\n\nconst getDateBoundaries = (\n    date_from: TDateToOrFrom,\n    date_to: TDateToOrFrom,\n    partial_fetch_time: TPartialFetchTime,\n    should_load_partially = false\n) => ({\n    // eslint-disable-next-line max-len\n    ...(shouldSendDateFrom(date_from, should_load_partially, partial_fetch_time, date_to) && {\n        date_from: getDateFrom(should_load_partially, partial_fetch_time, date_from, date_to),\n    }),\n    ...((date_to || should_load_partially) && { date_to: getDateTo(date_to) }),\n});\n\nexport default getDateBoundaries;\n","import { action, intercept, makeObservable, observable, reaction, toJS, when } from 'mobx';\n\nimport { isEmptyObject, isProduction, Validator } from '@deriv/shared';\n\n/**\n * BaseStore class is the base class for all defined stores in the application. It handles some stuff such as:\n *  1. Creating snapshot object from the store.\n *  2. Saving the store's snapshot in local/session storage and keeping them in sync.\n */\nexport default class BaseStore {\n    /**\n     * An enum object to define LOCAL_STORAGE and SESSION_STORAGE\n     */\n    static STORAGES = Object.freeze({\n        LOCAL_STORAGE: Symbol('LOCAL_STORAGE'),\n        SESSION_STORAGE: Symbol('SESSION_STORAGE'),\n    });\n\n    validation_errors = {};\n\n    validation_rules = {};\n\n    preSwitchAccountDisposer = null;\n    pre_switch_account_listener = null;\n\n    switchAccountDisposer = null;\n    switch_account_listener = null;\n\n    logoutDisposer = null;\n    logout_listener = null;\n\n    clientInitDisposer = null;\n    client_init_listener = null;\n\n    networkStatusChangeDisposer = null;\n    network_status_change_listener = null;\n\n    themeChangeDisposer = null;\n    theme_change_listener = null;\n\n    realAccountSignupEndedDisposer = null;\n    real_account_signup_ended_listener = null;\n\n    partial_fetch_time = 0;\n\n    /**\n     * Constructor of the base class that gets properties' name of child which should be saved in storages\n     *\n     * @param {Object} options - An object that contains the following properties:\n     *     @property {Object}   root_store - An object that contains the root store of the app.\n     *     @property {String[]} local_storage_properties - A list of properties' names that should be kept in localStorage.\n     *     @property {String[]} session_storage_properties - A list of properties' names that should be kept in sessionStorage.\n     *     @property {Object}   validation_rules - An object that contains the validation rules for each property of the store.\n     *     @property {String}   store_name - Explicit store name for browser application storage (to bypass minification)\n     */\n    constructor(options = {}) {\n        makeObservable(this, {\n            validation_errors: observable,\n            validation_rules: observable,\n            partial_fetch_time: observable,\n            retrieveFromStorage: action,\n            setValidationErrorMessages: action,\n            setValidationRules: action,\n            addRule: action,\n            validateProperty: action,\n            validateAllProperties: action,\n            onSwitchAccount: action.bound,\n            onPreSwitchAccount: action.bound,\n            onLogout: action.bound,\n            onClientInit: action.bound,\n            onNetworkStatusChange: action.bound,\n            onThemeChange: action.bound,\n            onRealAccountSignupEnd: action.bound,\n            disposePreSwitchAccount: action.bound,\n            disposeSwitchAccount: action.bound,\n            disposeLogout: action.bound,\n            disposeClientInit: action.bound,\n            disposeNetworkStatusChange: action.bound,\n            disposeThemeChange: action.bound,\n            disposeRealAccountSignupEnd: action.bound,\n            onUnmount: action.bound,\n            assertHasValidCache: action.bound,\n        });\n\n        const { root_store, local_storage_properties, session_storage_properties, validation_rules, store_name } =\n            options;\n\n        Object.defineProperty(this, 'root_store', {\n            enumerable: false,\n            writable: true,\n        });\n        Object.defineProperty(this, 'local_storage_properties', {\n            enumerable: false,\n            writable: true,\n        });\n        Object.defineProperty(this, 'session_storage_properties', {\n            enumerable: false,\n            writable: true,\n        });\n\n        const has_local_or_session_storage =\n            (local_storage_properties && local_storage_properties.length) ||\n            (session_storage_properties && session_storage_properties.length);\n\n        if (has_local_or_session_storage) {\n            if (!store_name) {\n                throw new Error('store_name is required for local/session storage');\n            }\n\n            Object.defineProperty(this, 'store_name', {\n                value: store_name,\n                enumerable: false,\n                writable: false,\n            });\n        }\n\n        this.root_store = root_store;\n        this.local_storage_properties = local_storage_properties || [];\n        this.session_storage_properties = session_storage_properties || [];\n\n        setTimeout(() => {\n            this.setValidationRules(validation_rules);\n\n            this.setupReactionForLocalStorage();\n            this.setupReactionForSessionStorage();\n            this.retrieveFromStorage();\n        }, 0);\n    }\n\n    /**\n     * Returns an snapshot of the current store\n     *\n     * @param {String[]} properties - A list of properties' names that should be in the snapshot.\n     *\n     * @return {Object} Returns a cloned object of the store.\n     */\n    getSnapshot(properties) {\n        let snapshot = toJS(this);\n\n        if (!isEmptyObject(this.root_store)) {\n            snapshot.root_store = this.root_store;\n        }\n\n        if (properties && properties.length) {\n            snapshot = properties.reduce((result, p) => Object.assign(result, { [p]: snapshot[p] }), {});\n        }\n\n        return snapshot;\n    }\n\n    /**\n     * Sets up a reaction on properties which are mentioned in `local_storage_properties`\n     *  and invokes `saveToStorage` when there are any changes on them.\n     *\n     */\n    setupReactionForLocalStorage() {\n        if (this.local_storage_properties.length) {\n            reaction(\n                () => this.local_storage_properties.map(i => this[i]),\n                () => this.saveToStorage(this.local_storage_properties, BaseStore.STORAGES.LOCAL_STORAGE)\n            );\n        }\n    }\n\n    /**\n     * Sets up a reaction on properties which are mentioned in `session_storage_properties`\n     *  and invokes `saveToStorage` when there are any changes on them.\n     *\n     */\n    setupReactionForSessionStorage() {\n        if (this.session_storage_properties.length) {\n            reaction(\n                () => this.session_storage_properties.map(i => this[i]),\n                () => this.saveToStorage(this.session_storage_properties, BaseStore.STORAGES.SESSION_STORAGE)\n            );\n        }\n    }\n\n    /**\n     * Removes properties that are not passed from the snapshot of the store and saves it to the passed storage\n     *\n     * @param {String[]} properties - A list of the store's properties' names which should be saved in the storage.\n     * @param {Symbol}   storage    - A symbol object that defines the storage which the snapshot should be stored in it.\n     *\n     */\n    saveToStorage(properties, storage) {\n        const snapshot = JSON.stringify(this.getSnapshot(properties), (key, value) => {\n            if (value !== null) return value;\n            return undefined;\n        });\n\n        if (storage === BaseStore.STORAGES.LOCAL_STORAGE) {\n            localStorage.setItem(this.store_name, snapshot);\n        } else if (storage === BaseStore.STORAGES.SESSION_STORAGE) {\n            sessionStorage.setItem(this.store_name, snapshot);\n        }\n    }\n\n    /**\n     * Retrieves saved snapshot of the store and assigns to the current instance.\n     *\n     */\n    retrieveFromStorage() {\n        const local_storage_snapshot = JSON.parse(localStorage.getItem(this.store_name, {}));\n        const session_storage_snapshot = JSON.parse(sessionStorage.getItem(this.store_name, {}));\n\n        const snapshot = { ...local_storage_snapshot, ...session_storage_snapshot };\n\n        Object.keys(snapshot).forEach(k => (this[k] = snapshot[k]));\n    }\n\n    /**\n     * Sets validation error messages for an observable property of the store\n     *\n     * @param {String} propertyName - The observable property's name\n     * @param [{String}] messages - An array of strings that contains validation error messages for the particular property.\n     *\n     */\n    setValidationErrorMessages(propertyName, messages) {\n        const is_different = () =>\n            !!this.validation_errors[propertyName]\n                .filter(x => !messages.includes(x))\n                .concat(messages.filter(x => !this.validation_errors[propertyName].includes(x))).length;\n        if (!this.validation_errors[propertyName] || is_different()) {\n            this.validation_errors[propertyName] = messages;\n        }\n    }\n\n    /**\n     * Sets validation rules\n     *\n     * @param {object} rules\n     *\n     */\n    setValidationRules(rules = {}) {\n        Object.keys(rules).forEach(key => {\n            this.addRule(key, rules[key]);\n        });\n    }\n\n    /**\n     * Adds rules to the particular property\n     *\n     * @param {String} property\n     * @param {String} rules\n     *\n     */\n    addRule(property, rules) {\n        this.validation_rules[property] = rules;\n\n        intercept(this, property, change => {\n            this.validateProperty(property, change.newValue);\n            return change;\n        });\n    }\n\n    /**\n     * Validates a particular property of the store\n     *\n     * @param {String} property - The name of the property in the store\n     * @param {object} value    - The value of the property, it can be undefined.\n     *\n     */\n    validateProperty(property, value) {\n        const trigger = this.validation_rules[property].trigger;\n        const inputs = { [property]: value !== undefined ? value : this[property] };\n        const validation_rules = { [property]: this.validation_rules[property].rules || [] };\n\n        if (!!trigger && Object.hasOwnProperty.call(this, trigger)) {\n            inputs[trigger] = this[trigger];\n            validation_rules[trigger] = this.validation_rules[trigger].rules || [];\n        }\n\n        const validator = new Validator(inputs, validation_rules, this);\n\n        validator.isPassed();\n\n        Object.keys(inputs).forEach(key => {\n            this.setValidationErrorMessages(key, validator.errors.get(key));\n        });\n    }\n\n    /**\n     * Validates all properties which validation rule has been set for.\n     *\n     */\n    validateAllProperties() {\n        const validation_rules = Object.keys(this.validation_rules);\n        const validation_errors = Object.keys(this.validation_errors);\n\n        validation_rules.forEach(p => {\n            this.validateProperty(p, this[p]);\n        });\n\n        // Remove keys that are present in error, but not in rules:\n        validation_errors.forEach(error => {\n            if (!validation_rules.includes(error)) {\n                delete this.validation_errors[error];\n            }\n        });\n    }\n\n    onSwitchAccount(listener) {\n        if (listener) {\n            this.switch_account_listener = listener;\n\n            this.switchAccountDisposer = when(\n                () => this.root_store.client.switch_broadcast,\n                () => {\n                    try {\n                        const result = this.switch_account_listener();\n                        if (result && result.then && typeof result.then === 'function') {\n                            result.then(() => {\n                                this.root_store.client.switchEndSignal();\n                                this.onSwitchAccount(this.switch_account_listener);\n                            });\n                        } else {\n                            throw new Error('Switching account listeners are required to return a promise.');\n                        }\n                    } catch (error) {\n                        // there is no listener currently active. so we can just ignore the error raised from treating\n                        // a null object as a function. Although, in development mode, we throw a console error.\n                        if (!isProduction()) {\n                            console.error(error); // eslint-disable-line\n                        }\n                    }\n                }\n            );\n        }\n    }\n\n    onPreSwitchAccount(listener) {\n        if (listener) {\n            this.pre_switch_account_listener = listener;\n            this.preSwitchAccountDisposer = when(\n                () => this.root_store.client.pre_switch_broadcast,\n                () => {\n                    try {\n                        const result = this.pre_switch_account_listener?.();\n                        if (result && result.then && typeof result.then === 'function') {\n                            result.then(() => {\n                                this.root_store.client.setPreSwitchAccount(false);\n                                this.onPreSwitchAccount(this.pre_switch_account_listener);\n                            });\n                        } else {\n                            throw new Error('Pre-switch account listeners are required to return a promise.');\n                        }\n                    } catch (error) {\n                        // there is no listener currently active. so we can just ignore the error raised from treating\n                        // a null object as a function. Although, in development mode, we throw a console error.\n                        if (!isProduction()) {\n                            console.error(error); // eslint-disable-line\n                        }\n                    }\n                }\n            );\n        }\n    }\n\n    onLogout(listener) {\n        this.logoutDisposer = when(\n            () => this.root_store.client.has_logged_out,\n            async () => {\n                try {\n                    const result = this.logout_listener();\n                    if (result && result.then && typeof result.then === 'function') {\n                        result.then(() => {\n                            this.root_store.client.setLogout(false);\n                            this.onLogout(this.logout_listener);\n                        });\n                    } else {\n                        throw new Error('Logout listeners are required to return a promise.');\n                    }\n                } catch (error) {\n                    // there is no listener currently active. so we can just ignore the error raised from treating\n                    // a null object as a function. Although, in development mode, we throw a console error.\n                    if (!isProduction()) {\n                        console.error(error); // eslint-disable-line\n                    }\n                }\n            }\n        );\n        this.logout_listener = listener;\n    }\n\n    onClientInit(listener) {\n        this.clientInitDisposer = when(\n            () => this.root_store.client.initialized_broadcast,\n            async () => {\n                try {\n                    const result = this.client_init_listener();\n                    if (result && result.then && typeof result.then === 'function') {\n                        result.then(() => {\n                            this.root_store.client.setInitialized(false);\n                            this.onClientInit(this.client_init_listener);\n                        });\n                    } else {\n                        throw new Error('Client init listeners are required to return a promise.');\n                    }\n                } catch (error) {\n                    // there is no listener currently active. so we can just ignore the error raised from treating\n                    // a null object as a function. Although, in development mode, we throw a console error.\n                    if (!isProduction()) {\n                        console.error(error); // eslint-disable-line\n                    }\n                }\n            }\n        );\n        this.client_init_listener = listener;\n    }\n\n    onNetworkStatusChange(listener) {\n        this.networkStatusChangeDisposer = reaction(\n            () => this.root_store.common.is_network_online,\n            is_online => {\n                try {\n                    this.network_status_change_listener(is_online);\n                } catch (error) {\n                    // there is no listener currently active. so we can just ignore the error raised from treating\n                    // a null object as a function. Although, in development mode, we throw a console error.\n                    if (!isProduction()) {\n                        console.error(error); // eslint-disable-line\n                    }\n                }\n            }\n        );\n\n        this.network_status_change_listener = listener;\n    }\n\n    onThemeChange(listener) {\n        this.themeChangeDisposer = reaction(\n            () => this.root_store.ui.is_dark_mode_on,\n            is_dark_mode_on => {\n                try {\n                    this.theme_change_listener(is_dark_mode_on);\n                } catch (error) {\n                    // there is no listener currently active. so we can just ignore the error raised from treating\n                    // a null object as a function. Although, in development mode, we throw a console error.\n                    if (!isProduction()) {\n                        console.error(error); // eslint-disable-line\n                    }\n                }\n            }\n        );\n\n        this.theme_change_listener = listener;\n    }\n\n    onRealAccountSignupEnd(listener) {\n        this.realAccountSignupEndedDisposer = when(\n            () => this.root_store.ui.has_real_account_signup_ended,\n            () => {\n                try {\n                    const result = this.real_account_signup_ended_listener();\n                    if (result && result.then && typeof result.then === 'function') {\n                        result.then(() => {\n                            this.root_store.ui.setRealAccountSignupEnd(false);\n                            this.onRealAccountSignupEnd(this.real_account_signup_ended_listener);\n                        });\n                    } else {\n                        throw new Error('Real account signup listeners are required to return a promise.');\n                    }\n                } catch (error) {\n                    // there is no listener currently active. so we can just ignore the error raised from treating\n                    // a null object as a function. Although, in development mode, we throw a console error.\n                    if (!isProduction()) {\n                        console.error(error); // eslint-disable-line\n                    }\n                }\n            }\n        );\n\n        this.real_account_signup_ended_listener = listener;\n    }\n\n    disposePreSwitchAccount() {\n        if (typeof this.preSwitchAccountDisposer === 'function') {\n            this.preSwitchAccountDisposer();\n        }\n        this.pre_switch_account_listener = null;\n    }\n\n    disposeSwitchAccount() {\n        if (typeof this.switchAccountDisposer === 'function') {\n            this.switchAccountDisposer();\n        }\n        this.switch_account_listener = null;\n    }\n\n    disposeLogout() {\n        if (typeof this.logoutDisposer === 'function') {\n            this.logoutDisposer();\n        }\n        this.logout_listener = null;\n    }\n\n    disposeClientInit() {\n        if (typeof this.clientInitDisposer === 'function') {\n            this.clientInitDisposer();\n        }\n        this.client_init_listener = null;\n    }\n\n    disposeNetworkStatusChange() {\n        if (typeof this.networkStatusChangeDisposer === 'function') {\n            this.networkStatusChangeDisposer();\n        }\n        this.network_status_change_listener = null;\n    }\n\n    disposeThemeChange() {\n        if (typeof this.themeChangeDisposer === 'function') {\n            this.themeChangeDisposer();\n        }\n        this.theme_change_listener = null;\n    }\n\n    disposeRealAccountSignupEnd() {\n        if (typeof this.realAccountSignupEndedDisposer === 'function') {\n            this.realAccountSignupEndedDisposer();\n        }\n        this.real_account_signup_ended_listener = null;\n    }\n\n    onUnmount() {\n        this.disposePreSwitchAccount();\n        this.disposeSwitchAccount();\n        this.disposeLogout();\n        this.disposeClientInit();\n        this.disposeNetworkStatusChange();\n        this.disposeThemeChange();\n        this.disposeRealAccountSignupEnd();\n    }\n\n    assertHasValidCache(loginid, ...reactions) {\n        // account was changed when this was unmounted.\n        if (this.root_store.client.loginid !== loginid) {\n            reactions.forEach(act => act());\n            this.partial_fetch_time = false;\n        }\n    }\n}\n","import debounce from 'lodash.debounce';\nimport { action, computed, observable, makeObservable, override } from 'mobx';\nimport { filterDisabledPositions, toMoment, WS } from '@deriv/shared';\n\nimport getDateBoundaries from './Helpers/format-request';\nimport { formatProfitTableTransactions } from './Helpers/format-response';\nimport BaseStore from '../../base-store';\n\nconst batch_size = 50;\nconst delay_on_scroll_time = 150;\n\nexport default class ProfitTableStore extends BaseStore {\n    data = [];\n    date_from = null;\n    date_to = toMoment().startOf('day').add(1, 'd').subtract(1, 's').unix();\n    error = '';\n    has_loaded_all = false;\n    is_loading = true;\n    filtered_date_range;\n\n    // `client_loginid` is only used to detect if this is in sync with the client-store, don't rely on\n    // this for calculations. Use the client.currency instead.\n    client_loginid = '';\n\n    constructor({ root_store }) {\n        // TODO: [mobx-undecorate] verify the constructor arguments and the arguments of this automatically generated super call\n        super({ root_store });\n\n        makeObservable(this, {\n            data: observable,\n            date_from: observable,\n            date_to: observable,\n            error: observable,\n            has_loaded_all: observable,\n            is_loading: observable,\n            filtered_date_range: observable,\n            client_loginid: observable,\n            is_empty: computed,\n            has_selected_date: computed,\n            fetchNextBatch: action.bound,\n            profitTableResponseHandler: action.bound,\n            handleScroll: action.bound,\n            networkStatusChangeListener: action.bound,\n            onMount: action.bound,\n            onUnmount: override,\n            totals: computed,\n            accountSwitcherListener: action.bound,\n            clearTable: action.bound,\n            clearDateFilter: action.bound,\n            handleDateChange: action.bound,\n        });\n    }\n\n    get is_empty() {\n        return !this.is_loading && this.data.length === 0;\n    }\n\n    get has_selected_date() {\n        return !!(this.date_from || this.date_to);\n    }\n\n    shouldFetchNextBatch(is_mounting) {\n        return !!is_mounting || (!this.has_loaded_all && !this.is_loading);\n    }\n\n    async fetchNextBatch(shouldFilterContractTypes, isMounting) {\n        if (!this.shouldFetchNextBatch(isMounting)) return;\n        this.is_loading = true;\n        const dateParams = getDateBoundaries(this.date_from, this.date_to, 0, false);\n        const params = shouldFilterContractTypes\n            ? {\n                  ...getDateBoundaries(\n                      this.root_store.modules.positions?.dateFrom,\n                      this.root_store.modules.positions?.dateTo,\n                      0,\n                      false\n                  ),\n                  contract_type: this.root_store.modules.positions.filteredContractTypes,\n              }\n            : dateParams;\n\n        const response = await WS.profitTable(batch_size, this.data.length, params);\n\n        this.profitTableResponseHandler(response);\n    }\n\n    profitTableResponseHandler(response) {\n        if ('error' in response) {\n            this.error = response.error.message;\n            return;\n        }\n\n        const formatted_transactions = response.profit_table.transactions\n            .map(transaction =>\n                formatProfitTableTransactions(\n                    transaction,\n                    this.root_store.client.currency,\n                    this.root_store.active_symbols.active_symbols\n                )\n            )\n            .filter(filterDisabledPositions);\n\n        this.data = [...this.data, ...formatted_transactions];\n        this.has_loaded_all = formatted_transactions.length < batch_size;\n        this.is_loading = false;\n    }\n\n    fetchOnScroll = debounce((left, shouldFilterContractTypes) => {\n        if (left < 1500) {\n            this.fetchNextBatch(shouldFilterContractTypes);\n        }\n    }, delay_on_scroll_time);\n\n    handleScroll(event, shouldFilterContractTypes) {\n        const { scrollTop, scrollHeight, clientHeight } = event.target;\n        const left_to_scroll = scrollHeight - (scrollTop + clientHeight);\n        this.fetchOnScroll(left_to_scroll, shouldFilterContractTypes);\n    }\n\n    networkStatusChangeListener(is_online) {\n        this.is_loading = this.is_loading || !is_online;\n    }\n\n    async onMount(shouldFilterContractTypes) {\n        this.assertHasValidCache(this.client_loginid, this.clearDateFilter, WS.forgetAll.bind(null, 'proposal'));\n        this.client_loginid = this.root_store.client.loginid;\n        this.onSwitchAccount(this.accountSwitcherListener);\n        this.onNetworkStatusChange(this.networkStatusChangeListener);\n        await WS.wait('authorize');\n\n        /* Caching won't work for profit_table because date filtering happens based on `buy_time` of a contract.\n        If we already have a cache for a period and if we sell a contract that was purchased in that period\n        then the sold contract won't be there in profit_table when visited again unless we fetch it again.\n        Caching will only work if the date filtering happens based on `sell_time` of a contract in BE. */\n        this.fetchNextBatch(shouldFilterContractTypes, true);\n    }\n\n    /* DO NOT call clearDateFilter() upon unmounting the component, date filters should stay\n    as we change tab or click on any contract for later references as discussed with UI/UX and QA */\n    onUnmount() {\n        this.disposeSwitchAccount();\n        WS.forgetAll('proposal');\n    }\n\n    get totals() {\n        let profit_loss = 0;\n\n        this.data.forEach(transaction => {\n            profit_loss += parseFloat(transaction.profit_loss.replace(/,/g, ''));\n        });\n        return {\n            profit_loss: profit_loss.toString(),\n        };\n    }\n\n    accountSwitcherListener() {\n        return new Promise(resolve => {\n            this.clearTable();\n            this.clearDateFilter();\n            return resolve(this.fetchNextBatch());\n        });\n    }\n\n    clearTable() {\n        this.data = [];\n        this.has_loaded_all = false;\n        this.is_loading = false;\n    }\n\n    clearDateFilter() {\n        this.date_from = null;\n        this.date_to = toMoment().startOf('day').add(1, 'd').subtract(1, 's').unix();\n    }\n\n    handleDateChange(date_values, { date_range, shouldFilterContractTypes } = {}) {\n        const { from, to, is_batch } = date_values;\n\n        this.filtered_date_range = date_range;\n\n        if (from) {\n            this.date_from = toMoment(from).unix();\n        } else if (is_batch) {\n            this.date_from = null;\n        }\n\n        if (to) this.date_to = toMoment(to).unix();\n\n        if (shouldFilterContractTypes) {\n            this.root_store.modules.positions.setDateFrom(this.date_from);\n            this.root_store.modules.positions.setDateTo(this.date_to);\n        }\n\n        this.clearTable();\n        this.fetchNextBatch(shouldFilterContractTypes);\n    }\n}\n","import { formatMoney, toMoment, getSymbolDisplayName, getMarketInformation } from '@deriv/shared';\nimport { ActiveSymbols, ProfitTable } from '@deriv/api-types';\n\nexport type TTransaction = NonNullable<NonNullable<ProfitTable>['transactions']>[number];\n\nexport const formatProfitTableTransactions = (\n    transaction: TTransaction,\n    currency: string,\n    active_symbols: ActiveSymbols = []\n) => {\n    const format_string = 'DD MMM YYYY HH:mm:ss';\n    const purchase_time =\n        transaction.purchase_time && `${toMoment(Number(transaction.purchase_time)).format(format_string)}`;\n    const purchase_time_unix = transaction.purchase_time;\n    const sell_time = transaction.sell_time && `${toMoment(Number(transaction.sell_time)).format(format_string)}`;\n    const payout = transaction.payout ?? NaN;\n    const sell_price = transaction.sell_price ?? NaN;\n    const buy_price = transaction.buy_price ?? NaN;\n    const profit_loss = formatMoney(currency, Number(sell_price - buy_price), true);\n    const display_name = getSymbolDisplayName(\n        active_symbols,\n        getMarketInformation(transaction.shortcode ?? '').underlying\n    );\n\n    return {\n        ...transaction,\n        ...{\n            payout,\n            sell_price,\n            buy_price,\n            profit_loss,\n            sell_time,\n            purchase_time,\n            display_name,\n            purchase_time_unix,\n        },\n    };\n};\n","import { formatMoney, toTitleCase, toMoment, getMarketInformation, getSymbolDisplayName } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport { ActiveSymbols, Statement } from '@deriv/api-types';\n\nexport const formatStatementTransaction = (\n    transaction: NonNullable<Statement['transactions']>[number],\n    currency: string,\n    active_symbols: ActiveSymbols = []\n) => {\n    const { action_type, app_id, contract_id, longcode, purchase_time, withdrawal_details } = transaction;\n    const format_string = 'DD MMM YYYY HH:mm:ss';\n    const transaction_time = toMoment(transaction.transaction_time).format(format_string);\n    const payout = transaction.payout ?? NaN;\n    const amount = transaction.amount ?? NaN;\n    const balance = transaction.balance_after ?? NaN;\n    const should_exclude_currency = true;\n    const shortcode = ['buy', 'sell'].includes(action_type ?? '') ? transaction.shortcode : null;\n    const display_name = shortcode\n        ? getSymbolDisplayName(active_symbols, getMarketInformation(shortcode).underlying)\n        : '';\n\n    return {\n        action: localize(toTitleCase(action_type ?? '')), // 'Buy', 'Sell', 'Deposit', 'Withdrawal'\n        date: transaction_time,\n        display_name,\n        refid: transaction.transaction_id,\n        payout: isNaN(payout) ? '-' : formatMoney(currency, payout, should_exclude_currency),\n        amount: isNaN(amount) ? '-' : formatMoney(currency, amount, should_exclude_currency),\n        balance: isNaN(balance) ? '-' : formatMoney(currency, balance, should_exclude_currency),\n        desc: longcode?.replace(/\\n/g, '<br />'),\n        id: contract_id,\n        app_id,\n        shortcode,\n        action_type,\n        purchase_time,\n        transaction_time: transaction.transaction_time,\n        ...(withdrawal_details && {\n            withdrawal_details,\n            longcode,\n        }),\n    };\n};\n","import debounce from 'lodash.debounce';\nimport { action, computed, observable, makeObservable, override } from 'mobx';\nimport { filterDisabledPositions, toMoment, WS } from '@deriv/shared';\n\nimport { formatStatementTransaction } from './Helpers/format-response';\nimport getDateBoundaries from '../Profit/Helpers/format-request';\nimport BaseStore from '../../base-store';\n\nconst batch_size = 100; // request response limit\nconst delay_on_scroll_time = 150; // fetch debounce delay on scroll\n\nexport default class StatementStore extends BaseStore {\n    data = [];\n    is_loading = true;\n    has_loaded_all = false;\n    date_from = null;\n    date_to = toMoment().startOf('day').add(1, 'd').subtract(1, 's').unix();\n    error = '';\n    action_type = 'all';\n    filtered_date_range;\n\n    // `client_loginid` is only used to detect if this is in sync with the client-store, don't rely on\n    // this for calculations. Use the client.currency instead.\n    client_loginid = '';\n\n    account_statistics = {};\n\n    constructor({ root_store }) {\n        // TODO: [mobx-undecorate] verify the constructor arguments and the arguments of this automatically generated super call\n        super({ root_store });\n\n        makeObservable(this, {\n            data: observable,\n            is_loading: observable,\n            has_loaded_all: observable,\n            date_from: observable,\n            date_to: observable,\n            error: observable,\n            action_type: observable,\n            filtered_date_range: observable,\n            client_loginid: observable,\n            account_statistics: observable,\n            is_empty: computed,\n            has_selected_date: computed,\n            clearTable: action.bound,\n            clearDateFilter: action.bound,\n            fetchNextBatch: action.bound,\n            statementHandler: action.bound,\n            handleDateChange: action.bound,\n            handleFilterChange: action.bound,\n            handleScroll: action.bound,\n            accountSwitcherListener: action.bound,\n            networkStatusChangeListener: action.bound,\n            onMount: action.bound,\n            onUnmount: override,\n        });\n    }\n\n    get is_empty() {\n        return !this.is_loading && this.data.length === 0;\n    }\n\n    get has_selected_date() {\n        return !!(this.date_from || this.date_to);\n    }\n\n    clearTable() {\n        this.data = [];\n        this.has_loaded_all = false;\n        this.is_loading = false;\n    }\n\n    clearDateFilter() {\n        this.date_from = null;\n        this.date_to = toMoment().startOf('day').add(1, 'd').subtract(1, 's').unix();\n        this.partial_fetch_time = 0;\n    }\n\n    shouldFetchNextBatch(should_load_partially) {\n        if (!should_load_partially && (this.has_loaded_all || this.is_loading)) return false;\n        const today = toMoment().startOf('day').add(1, 'd').subtract(1, 's').unix();\n        if (this.date_to < today) return !should_load_partially && this.partial_fetch_time;\n        return true;\n    }\n\n    async fetchNextBatch(should_load_partially = false) {\n        if (!this.shouldFetchNextBatch(should_load_partially)) return;\n        this.is_loading = true;\n\n        const optional_arguments = getDateBoundaries(\n            this.date_from,\n            this.date_to,\n            this.partial_fetch_time,\n            should_load_partially\n        );\n\n        if (this.action_type !== 'all') {\n            optional_arguments.action_type = this.action_type;\n        }\n\n        const response = await WS.statement(\n            batch_size,\n            !should_load_partially ? this.data.length : undefined,\n            optional_arguments\n        );\n        this.statementHandler(response, should_load_partially);\n    }\n\n    statementHandler(response, should_load_partially) {\n        if ('error' in response) {\n            this.error = response.error.message;\n            return;\n        }\n\n        const formatted_transactions = response.statement.transactions\n            .map(transaction =>\n                formatStatementTransaction(\n                    transaction,\n                    this.root_store.client.currency,\n                    this.root_store.active_symbols.active_symbols\n                )\n            )\n            .filter(filterDisabledPositions);\n\n        if (should_load_partially) {\n            this.data = [...formatted_transactions, ...this.data];\n        } else {\n            this.data = [...this.data, ...formatted_transactions];\n        }\n        this.has_loaded_all = !should_load_partially && formatted_transactions.length < batch_size;\n        this.is_loading = false;\n        if (formatted_transactions.length > 0) {\n            this.partial_fetch_time = toMoment().unix();\n        }\n    }\n\n    handleDateChange(date_values, { date_range } = {}) {\n        const { from, to, is_batch } = date_values;\n\n        this.filtered_date_range = date_range;\n\n        if (from) {\n            this.date_from = toMoment(from).unix();\n        } else if (is_batch) {\n            this.date_from = null;\n        }\n\n        if (to) this.date_to = toMoment(to).unix();\n\n        this.clearTable();\n        this.fetchNextBatch();\n    }\n\n    handleFilterChange(filterValue = {}) {\n        this.action_type = filterValue;\n        this.clearTable();\n        this.fetchNextBatch();\n    }\n\n    fetchOnScroll = debounce(left => {\n        if (left < 1500) {\n            this.fetchNextBatch();\n        }\n    }, delay_on_scroll_time);\n\n    handleScroll(event) {\n        const { scrollTop, scrollHeight, clientHeight } = event.target;\n        const left_to_scroll = scrollHeight - (scrollTop + clientHeight);\n\n        this.fetchOnScroll(left_to_scroll);\n    }\n\n    accountSwitcherListener() {\n        return new Promise(resolve => {\n            this.clearTable();\n            this.clearDateFilter();\n            return resolve(this.fetchNextBatch());\n        });\n    }\n\n    networkStatusChangeListener(is_online) {\n        this.is_loading = this.is_loading || !is_online;\n    }\n\n    async onMount() {\n        this.assertHasValidCache(\n            this.client_loginid,\n            this.clearDateFilter,\n            this.client_loginid ? this.clearTable : () => null,\n            WS.forgetAll.bind(null, 'proposal')\n        );\n        this.client_loginid = this.root_store.client.loginid;\n        this.onSwitchAccount(this.accountSwitcherListener);\n        this.onNetworkStatusChange(this.networkStatusChangeListener);\n        await WS.wait('authorize');\n        this.fetchNextBatch(true);\n    }\n\n    /* DO NOT call clearDateFilter() upon unmounting the component, date filters should stay\n    as we change tab or click on any contract for later references as discussed with UI/UX and QA */\n    onUnmount() {\n        this.disposeSwitchAccount();\n        WS.forgetAll('proposal');\n    }\n}\n","import React from 'react';\nimport { useStore } from '@deriv/stores';\nimport ProfitStores from './Modules/Profit/profit-store';\nimport StatementStores from './Modules/Statement/statement-store';\nimport { formatProfitTableTransactions } from './Modules/Profit/Helpers/format-response';\n\ntype TOverrideProfitStore = Omit<ProfitStores, 'data' | 'date_from' | 'totals' | 'handleDateChange'> & {\n    date_from: number;\n    data: ReturnType<typeof formatProfitTableTransactions>[];\n    handleDateChange: (\n        values: { to?: moment.Moment; from?: moment.Moment; is_batch?: boolean },\n        otherParams?: {\n            date_range?: Record<string, string | number>;\n            shouldFilterContractTypes?: boolean;\n        }\n    ) => void;\n    totals: { [key: string]: unknown };\n};\n\ntype TOverrideStatementStore = Omit<\n    StatementStores,\n    | 'account_statistics'\n    | 'action_type'\n    | 'data'\n    | 'date_from'\n    | 'date_to'\n    | 'filtered_date_range'\n    | 'handleDateChange'\n    | 'handleFilterChange'\n    | 'handleScroll'\n    | 'suffix_icon'\n> & {\n    account_statistics: { total_deposits: number; total_withdrawals: number };\n    action_type: string;\n    data: { [key: string]: string }[];\n    date_from: number;\n    date_to: number;\n    filtered_date_range: {\n        duration: number;\n        label: string;\n        onClick?: () => void;\n        value?: string;\n    };\n    handleDateChange: () => void;\n    handleFilterChange: () => void;\n    handleScroll: React.UIEventHandler<HTMLDivElement>;\n    suffix_icon: string;\n};\n\nexport type TReportsStore = {\n    profit_table: TOverrideProfitStore;\n    statement: TOverrideStatementStore;\n};\n\nconst ReportsStoreContext = React.createContext<TReportsStore | null>(null);\n\nexport const ReportsStoreProvider = ({ children }: React.PropsWithChildren<unknown>) => {\n    const root_store = useStore();\n    const memoizedValue = React.useMemo(() => {\n        return {\n            profit_table: new ProfitStores({ root_store }),\n            statement: new StatementStores({ root_store }),\n        } as unknown as TReportsStore;\n    }, [root_store]);\n\n    return <ReportsStoreContext.Provider value={memoizedValue}>{children}</ReportsStoreContext.Provider>;\n};\n\nexport const useReportsStore = () => {\n    const store = React.useContext(ReportsStoreContext);\n\n    if (!store) {\n        throw new Error('useReportsStore must be used within ReportsStoreProvider');\n    }\n\n    return store;\n};\n","import React from 'react';\nimport { observer, useStore } from '@deriv/stores';\nimport { useNotifications, NotificationBanners } from '@deriv-com/quill-ui';\nimport { StandaloneFlagCheckeredFillIcon } from '@deriv/quill-icons';\nimport { routes } from '@deriv/shared';\nimport { useLocation } from 'react-router-dom';\n\nconst Notifications = observer(() => {\n    const { addBanner, banners, removeBanner } = useNotifications();\n    const { portfolio } = useStore();\n    const { setAddNotificationBannerCallback } = portfolio;\n    const { pathname } = useLocation();\n\n    React.useEffect(() => {\n        if (banners.length > 1) removeBanner(banners[0].id);\n        if (pathname === routes.trade) return;\n        banners.forEach(({ type, id }) => {\n            if (!type) {\n                // Sell notifications have type and Purchase ones do not.\n                removeBanner(id);\n            }\n        });\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [banners, pathname]);\n\n    React.useEffect(() => {\n        const addNotificationBannerCallback = (params: Parameters<typeof addBanner>[0], result: string) =>\n            addBanner({\n                icon: (\n                    <StandaloneFlagCheckeredFillIcon\n                        iconSize='sm'\n                        className={`trade-notification--${result}`}\n                        key='contract-closed'\n                    />\n                ),\n                ...params,\n            });\n\n        setAddNotificationBannerCallback(addNotificationBannerCallback);\n\n        return () => setAddNotificationBannerCallback();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return (\n        <NotificationBanners\n            autohideTimeout={4000}\n            banners={banners}\n            className='trade-notification'\n            isMobile\n            onClose={removeBanner}\n            zIndex={100}\n        />\n    );\n});\n\nexport default Notifications;\n","import './notifications.scss';\nimport Notifications from './notifications';\n\nexport default Notifications;\n","import React from 'react';\nimport { getLocalStorage } from '@deriv/utils';\n\n/**\n * Hook that manages a localStorage value as a React state.\n * @template T - The generic type of the localStorage value.\n * @param {string} key - The localStorage key.\n * @param {T} [fallback_value] - Optional fallback value if the key does not exist or has no value.\n * @returns - An array containing the current value, a function to update the value, and a function to clear the value.\n */\nconst useLocalStorageData = <T>(\n    key: string,\n    fallback_value?: T\n): [T | null, React.Dispatch<React.SetStateAction<T | null>>, VoidFunction] => {\n    const [data, setData] = React.useState<T | null>(getLocalStorage(key) ?? fallback_value ?? null);\n\n    React.useEffect(() => {\n        localStorage.setItem(key, JSON.stringify(data));\n    }, [key, data]);\n\n    const clearData = () => {\n        localStorage.removeItem(key);\n        setData(fallback_value ?? null);\n    };\n\n    return [data, setData, clearData];\n};\n\nexport default useLocalStorageData;\n","import React, { useEffect, useState } from 'react';\nimport { Text } from '@deriv-com/quill-ui';\nimport clsx from 'clsx';\n\nconst StatsRow = ({\n    rows,\n    animation_class,\n    is_moving_transaction,\n    className,\n}: {\n    rows: number[];\n    animation_class?: string;\n    is_moving_transaction: boolean;\n    className: string;\n}) => {\n    const [animationKey, setAnimationKey] = useState<number>(0);\n\n    useEffect(() => {\n        setAnimationKey(prevKey => prevKey + 1);\n    }, [animation_class]);\n\n    return (\n        <>\n            <div className={`${className}__stat`}>\n                <Text\n                    size='sm'\n                    bold\n                    className={animation_class}\n                    data-testid='accumulator-first-stat'\n                    color='quill-typography__color--prominent'\n                    key={animationKey}\n                >\n                    {rows[0]}\n                </Text>\n            </div>\n            {rows.slice(1)?.map((el: number, i: number) => (\n                <div\n                    key={i + 1}\n                    className={clsx(`${className}__stat`, {\n                        'slide-right': is_moving_transaction && i == 0,\n                    })}\n                >\n                    <Text size='sm'>{el}</Text>\n                </div>\n            ))}\n        </>\n    );\n};\n\nexport default StatsRow;\n","import { TCommonStoreServicesError } from '@deriv/stores/types';\n\nimport { getTradeParams } from './trade-params-utils';\n\nexport const HEIGHT = {\n    ADVANCED_FOOTER: 136,\n    ADDITIONAL_INFO: 30,\n    BOTTOM_NAV: 56,\n    CHART_STATS: 56,\n    HEADER: 40,\n    PADDING: 24,\n};\n\nexport const ASPECT_RATIO = 0.5625;\n\nexport const isTradeParamVisible = ({\n    component_key,\n    contract_type,\n    has_cancellation,\n    symbol,\n}: {\n    component_key: string;\n    contract_type: string;\n    has_cancellation: boolean;\n    symbol: string;\n}) => {\n    const params = getTradeParams(symbol, has_cancellation)?.[contract_type] ?? {};\n    return component_key in params;\n};\n\nexport const getChartHeight = ({\n    contract_type,\n    has_cancellation,\n    is_accumulator,\n    symbol,\n}: {\n    contract_type: string;\n    has_cancellation: boolean;\n    is_accumulator: boolean;\n    symbol: string;\n}) => {\n    const height = window.innerHeight - HEIGHT.HEADER - HEIGHT.BOTTOM_NAV - HEIGHT.ADVANCED_FOOTER - HEIGHT.PADDING;\n    const isVisible = (component_key: string) =>\n        isTradeParamVisible({ component_key, symbol, has_cancellation, contract_type });\n\n    if (is_accumulator) return height - HEIGHT.CHART_STATS;\n    if (\n        isVisible('expiration') ||\n        isVisible('mult_info_display') ||\n        isVisible('payout_per_point_info') ||\n        isVisible('allow_equals') ||\n        isVisible('payout')\n    )\n        return height - HEIGHT.ADDITIONAL_INFO;\n    return height;\n};\n\nexport const SERVICE_ERROR = {\n    INSUFFICIENT_BALANCE: 'InsufficientBalance',\n    INVALID_CONTRACT_PROPOSAL: 'InvalidContractProposal',\n    AUTHORIZATION_REQUIRED: 'AuthorizationRequired',\n    PLEASE_AUTHENTICATE: 'PleaseAuthenticate',\n    PENDING_VERIFICATION: 'PendingVerification',\n    COMPANY_WIDE_LIMIT_EXCEEDED: 'CompanyWideLimitExceeded',\n};\n\nexport const checkIsServiceModalError = ({\n    services_error,\n    is_mf_verification_pending_modal_visible,\n}: {\n    services_error: TCommonStoreServicesError;\n    is_mf_verification_pending_modal_visible?: boolean;\n}) => {\n    const { code, type } = services_error || {};\n    // Error modal is shown only for next four types. For the rest - snackbar.\n    const is_insufficient_balance = code === SERVICE_ERROR.INSUFFICIENT_BALANCE;\n    const is_authorization_required = code === SERVICE_ERROR.AUTHORIZATION_REQUIRED && type === 'buy';\n    const is_account_verification_required = code === SERVICE_ERROR.PLEASE_AUTHENTICATE;\n    return (\n        is_insufficient_balance ||\n        is_authorization_required ||\n        is_account_verification_required ||\n        !!is_mf_verification_pending_modal_visible\n    );\n};\n","import React from 'react';\nimport clsx from 'clsx';\nimport { Skeleton } from '@deriv-com/quill-ui';\nimport { ASPECT_RATIO } from 'AppV2/Utils/layout-utils';\n\ntype TStreamIframeProps = Pick<React.ComponentProps<'iframe'>, 'height' | 'width' | 'onLoad'> & {\n    autoplay?: boolean;\n    controls?: boolean;\n    letterbox_color?: string;\n    loop?: boolean;\n    muted?: boolean;\n    preload?: string;\n    src: string;\n    test_id?: string;\n    title?: string;\n};\n\nconst StreamIframe = ({\n    autoplay = true,\n    controls = false,\n    letterbox_color = 'transparent',\n    loop = true,\n    muted = true,\n    preload = 'auto',\n    src,\n    test_id,\n    title,\n    ...props\n}: TStreamIframeProps) => {\n    const [is_loading, setIsLoading] = React.useState(true);\n\n    const params = [\n        `letterboxColor=${encodeURIComponent(letterbox_color)}`,\n        `muted=${muted}`,\n        `preload=${preload}`,\n        `loop=${loop}`,\n        `autoplay=${autoplay}`,\n        `controls=${controls}`,\n    ].join('&');\n\n    return (\n        <div className={clsx('stream__wrapper', is_loading && 'stream__wrapper--is-loading')}>\n            {is_loading && <Skeleton.Square height={`calc(100vw * ${ASPECT_RATIO})`} />}\n            <iframe\n                allowFullScreen={false}\n                className='stream__iframe'\n                width='100%'\n                height='100%'\n                src={`https://iframe.cloudflarestream.com/${src}?${params}`}\n                data-testid={test_id}\n                title={title}\n                onLoad={() => setIsLoading(false)}\n                {...props}\n            />\n        </div>\n    );\n};\n\nexport default StreamIframe;\n","import './stream-iframe.scss';\nimport StreamIframe from './stream-iframe';\n\nexport default StreamIframe;\n","import React from 'react';\nimport { ActionSheet, Text } from '@deriv-com/quill-ui';\nimport { Localize } from '@deriv/translations';\nimport { UNIFIED_MODE_VIDEO_ID } from 'Modules/Trading/Helpers/video-config';\nimport StreamIframe from '../StreamIframe';\n\nconst AccumulatorStatsDescription = ({ onActionSheetClose }: { onActionSheetClose: () => void }) => {\n    return (\n        <ActionSheet.Portal showHandlebar shouldCloseOnDrag handleBarPosition='absolute'>\n            <div className='stats-description'>\n                <StreamIframe src={UNIFIED_MODE_VIDEO_ID.accumulator_stats} title='accumulator_stats' />\n                <div className='stats-description__content'>\n                    <div className='stats-description__content__title'>\n                        <Text size='lg' bold color='quill-typography__color--prominent'>\n                            <Localize i18n_default_text='Stats' />\n                        </Text>\n                    </div>\n                    <div className='stats-description__content__description'>\n                        <Text>\n                            <Localize i18n_default_text='Stats show the history of consecutive tick counts, i.e. the number of ticks the price remained within range continuously.' />\n                        </Text>\n                    </div>\n                </div>\n            </div>\n            <ActionSheet.Footer\n                alignment='vertical'\n                primaryAction={{\n                    content: <Localize i18n_default_text='Got it' />,\n                    onAction: onActionSheetClose,\n                }}\n            />\n        </ActionSheet.Portal>\n    );\n};\n\nexport default AccumulatorStatsDescription;\n","import React from 'react';\nimport { ActionSheet, Text } from '@deriv-com/quill-ui';\nimport StatsRow from './accumulator-stats-row';\nimport { Localize } from '@deriv/translations';\n\nconst AccumulatorStatsModal = ({\n    rows,\n    animation_class,\n    is_moving_transaction,\n}: {\n    rows: number[][];\n    animation_class?: string;\n    is_moving_transaction: boolean;\n}) => {\n    return (\n        <ActionSheet.Portal shouldCloseOnDrag>\n            <div className='stats-sheet'>\n                <div className='stats-sheet__title'>\n                    <Text size='lg' bold color='quill-typography__color--prominent'>\n                        <Localize i18n_default_text='Stats' />\n                    </Text>\n                </div>\n                <Text>\n                    <Localize i18n_default_text='History of tick counts' />\n                </Text>\n            </div>\n            <ActionSheet.Content>\n                <div className='stats-sheet__stats'>\n                    <StatsRow\n                        rows={rows[0]}\n                        animation_class={animation_class}\n                        is_moving_transaction={is_moving_transaction}\n                        className='stats-sheet__stats'\n                    />\n                </div>\n                {rows.slice(1).map((item: number[], index: number) => (\n                    <div key={index} className='stats-sheet__stats'>\n                        {item.map((item: number, innerIndex: number) => (\n                            <div key={`${index}-${innerIndex}`} className='stats-sheet__stats__number'>\n                                <Text size='sm'>{item}</Text>\n                            </div>\n                        ))}\n                    </div>\n                ))}\n            </ActionSheet.Content>\n        </ActionSheet.Portal>\n    );\n};\n\nexport default AccumulatorStatsModal;\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { ActionSheet, Text } from '@deriv-com/quill-ui';\nimport { LabelPairedChevronUpSmBoldIcon } from '@deriv/quill-icons';\nimport { Localize } from '@deriv/translations';\nimport { observer } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport StatsRow from './accumulator-stats-row';\nimport AccumulatorStatsDescription from './accumulator-stats-description';\nimport AccumulatorStatsModal from './accumulator-stats-modal';\n\nconst AccumulatorStats = observer(() => {\n    const { ticks_history_stats = {} } = useTraderStore();\n    const [is_open, setIsOpen] = useState(false);\n    const [is_open_description, setIsOpenDescription] = useState(false);\n    const [animation_class, setAnimationClass] = useState('');\n    const [last_value, setLastValue] = useState<number | null>(null);\n    const [is_moving_transaction, setIsMovingTransition] = useState(false);\n\n    const ticks_history = useMemo(() => {\n        return ticks_history_stats?.ticks_stayed_in ?? [];\n    }, [ticks_history_stats]);\n\n    const rows: number[][] = useMemo(() => {\n        const row_size = 5;\n        return ticks_history.reduce<number[][]>((acc, _el, index) => {\n            if (index % row_size === 0) {\n                acc.push(ticks_history.slice(index, index + row_size));\n            }\n            return acc;\n        }, []);\n    }, [ticks_history]);\n\n    const onActionSheetClose = () => {\n        setIsOpen(false);\n        setIsOpenDescription(false);\n    };\n\n    useEffect(() => {\n        let success_timeout: ReturnType<typeof setTimeout> | undefined,\n            error_timeout: ReturnType<typeof setTimeout> | undefined,\n            transition_timeout: ReturnType<typeof setTimeout> | undefined;\n\n        if (rows[0] && rows[0].length > 0) {\n            setAnimationClass('');\n            clearTimeout(success_timeout);\n            clearTimeout(error_timeout);\n            clearTimeout(transition_timeout);\n\n            const is_same_value = last_value === rows[0][1];\n\n            is_same_value\n                ? (error_timeout = setTimeout(() => setAnimationClass('animate-error'), 0))\n                : (success_timeout = setTimeout(() => setAnimationClass('animate-success'), 0));\n\n            setIsMovingTransition(is_same_value);\n            if (is_same_value) {\n                transition_timeout = setTimeout(() => setIsMovingTransition(false), 600);\n            }\n\n            setLastValue(rows[0][0]);\n        }\n\n        return () => {\n            clearTimeout(success_timeout);\n            clearTimeout(error_timeout);\n            clearTimeout(transition_timeout);\n        };\n    }, [rows[0]?.[0], ticks_history]);\n\n    if (rows.length === 0) {\n        return null;\n    }\n    return (\n        <div>\n            <div className='accumulators-stats-v2'>\n                <div className='accumulators-stats-v2__container'>\n                    <button\n                        className='accumulators-stats-v2__container__heading'\n                        onClick={() => setIsOpenDescription(true)}\n                    >\n                        <Text size='sm'>\n                            <Localize i18n_default_text='Stats' />\n                        </Text>\n                    </button>\n                    <div className='accumulators-stats-v2__container__divider' />\n                    <div className='accumulators-stats-v2__container__stats'>\n                        <StatsRow\n                            rows={[...rows[0], ...(rows[1] || [])]}\n                            animation_class={animation_class}\n                            is_moving_transaction={is_moving_transaction}\n                            className='accumulators-stats-v2__container__stats'\n                        />\n                    </div>\n                    <button className='accumulators-stats-v2__container__expand' onClick={() => setIsOpen(true)}>\n                        <LabelPairedChevronUpSmBoldIcon\n                            data-testid='expand-stats-icon'\n                            fill='var(--semantic-color-monochrome-textIcon-normal-high)'\n                        />\n                    </button>\n                </div>\n            </div>\n            <ActionSheet.Root\n                isOpen={is_open || is_open_description}\n                onClose={onActionSheetClose}\n                position='left'\n                className='accumulator-stats-sheet-wrapper'\n                expandable={false}\n            >\n                {is_open && (\n                    <AccumulatorStatsModal\n                        rows={rows}\n                        is_moving_transaction={is_moving_transaction}\n                        animation_class={animation_class}\n                    />\n                )}\n                {is_open_description && <AccumulatorStatsDescription onActionSheetClose={onActionSheetClose} />}\n            </ActionSheet.Root>\n        </div>\n    );\n});\n\nexport default AccumulatorStats;\n","import './accumulator-stats.scss';\nimport Stats from './accumulator-stats';\n\nexport default Stats;\n","import React from 'react';\nimport classNames from 'classnames';\nimport clsx from 'clsx';\nimport { observer } from 'mobx-react-lite';\nimport { Localize } from '@deriv/translations';\nimport { routes } from '@deriv/shared';\nimport {\n    StandaloneChartAreaFillIcon,\n    StandaloneChartAreaRegularIcon,\n    StandaloneClockThreeFillIcon,\n    StandaloneClockThreeRegularIcon,\n} from '@deriv/quill-icons';\nimport { Badge, Navigation } from '@deriv-com/quill-ui';\nimport { useStore } from '@deriv/stores';\nimport { useHistory, useLocation } from 'react-router';\n\ntype BottomNavProps = {\n    children: React.ReactNode;\n    className?: string;\n    onScroll?: (e: React.UIEvent<HTMLDivElement>) => void;\n};\n\nconst BottomNav = observer(({ children, className, onScroll }: BottomNavProps) => {\n    const history = useHistory();\n    const location = useLocation();\n    const { client, portfolio } = useStore();\n    const { active_positions_count } = portfolio;\n    const { is_logged_in } = client;\n\n    const bottomNavItems = [\n        {\n            icon: <StandaloneChartAreaRegularIcon iconSize='sm' />,\n            activeIcon: <StandaloneChartAreaFillIcon iconSize='sm' />,\n            label: <Localize i18n_default_text='Trade' />,\n            path: routes.trade,\n        },\n        {\n            icon:\n                active_positions_count > 0 ? (\n                    <Badge\n                        variant='notification'\n                        position='top-right'\n                        label={active_positions_count.toString()}\n                        color='danger'\n                        size='sm'\n                        contentSize='sm'\n                        className='bottom-nav-item__position-badge'\n                    >\n                        <StandaloneClockThreeRegularIcon iconSize='sm' />\n                    </Badge>\n                ) : (\n                    <StandaloneClockThreeRegularIcon iconSize='sm' />\n                ),\n            activeIcon:\n                active_positions_count > 0 ? (\n                    <Badge\n                        variant='notification'\n                        position='top-right'\n                        label={active_positions_count.toString()}\n                        color='danger'\n                        size='sm'\n                        contentSize='sm'\n                        className='bottom-nav-item__position-badge'\n                    >\n                        <StandaloneClockThreeFillIcon iconSize='sm' />\n                    </Badge>\n                ) : (\n                    <StandaloneClockThreeFillIcon iconSize='sm' />\n                ),\n            label: (\n                <React.Fragment>\n                    <span className='user-guide__anchor' />\n                    <Localize i18n_default_text='Positions' />\n                </React.Fragment>\n            ),\n            path: routes.trader_positions,\n        },\n    ];\n\n    const navIndex = bottomNavItems.findIndex(item => item.path === location.pathname);\n    const [selectedIndex, setSelectedIndex] = React.useState(navIndex > -1 ? navIndex : 0);\n\n    const handleSelect = (index: number) => {\n        setSelectedIndex(index);\n        history.push(bottomNavItems[index].path);\n    };\n\n    return (\n        <div className={classNames('bottom-nav', className)}>\n            <div className='bottom-nav-selection' onScroll={onScroll}>\n                {children}\n            </div>\n            {is_logged_in ? (\n                <Navigation.Bottom className='bottom-nav-container' onChange={(_, index) => handleSelect(index)}>\n                    {bottomNavItems.map((item, index) => (\n                        <Navigation.BottomAction\n                            key={index}\n                            index={index}\n                            activeIcon={<></>}\n                            icon={index === selectedIndex ? item.activeIcon : item.icon}\n                            label={item.label}\n                            selected={index === selectedIndex}\n                            showLabel\n                            className={clsx(\n                                'bottom-nav-item',\n                                index === selectedIndex && 'bottom-nav-item--active',\n                                item.path === routes.trader_positions && 'bottom-nav-item--positions'\n                            )}\n                        />\n                    ))}\n                </Navigation.Bottom>\n            ) : (\n                <></>\n            )}\n        </div>\n    );\n});\n\nexport default BottomNav;\n","import BottomNav from './bottom-nav';\nimport './bottom-nav.scss';\n\nexport default BottomNav;\n","import { WS } from '@deriv/shared';\nimport { useState, useEffect, useCallback, useRef } from 'react';\nimport { TServerError } from 'Types';\n\ntype QueryResult<T> = {\n    data: null | T;\n    error: TServerError | null;\n    is_fetching: boolean;\n    refetch: () => void;\n};\n\ntype QueryOptions = {\n    wait_for_authorize?: boolean;\n    enabled?: boolean;\n};\n\n// Cache object to store the results\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst cache: Record<string, any> = {};\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst ongoing_requests: Record<string, Promise<any> | undefined> = {};\n\nconst getKey = (keys: string | string[]) => (Array.isArray(keys) ? keys.join('-') : keys);\n\nexport const useDtraderQuery = <Response>(\n    keys: string | string[],\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    request: Record<string, any>,\n    options: QueryOptions = {}\n): QueryResult<Response> => {\n    const key = getKey(keys);\n    const { enabled = true } = options;\n    const [data, setData] = useState<Response | null>(cache[key] || null);\n    const [error, setError] = useState<TServerError | null>(null);\n    const [is_fetching, setIsFetching] = useState(!cache[key] && enabled);\n    const is_mounted = useRef(false);\n    const request_string = JSON.stringify(request);\n\n    const { wait_for_authorize = true } = options;\n\n    useEffect(() => {\n        is_mounted.current = true;\n\n        return () => {\n            is_mounted.current = false;\n        };\n    }, []);\n\n    const fetchData = useCallback(() => {\n        setIsFetching(true);\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let send_promise: Promise<any> | undefined;\n\n        if (ongoing_requests[key]) {\n            send_promise = ongoing_requests[key];\n        } else {\n            const request = JSON.parse(request_string);\n            send_promise = wait_for_authorize ? WS.authorized.send(request) : WS.send(request);\n            ongoing_requests[key] = send_promise;\n        }\n\n        send_promise\n            ?.then((result: Response) => {\n                if (!is_mounted.current) return;\n\n                cache[key] = result;\n                setData(result);\n                setIsFetching(false);\n            })\n            .catch((err: TServerError) => {\n                if (!is_mounted.current) return;\n\n                setError(err);\n                setIsFetching(false);\n            })\n            .finally(() => {\n                delete ongoing_requests[key];\n            });\n    }, [key, request_string, wait_for_authorize]);\n\n    useEffect(() => {\n        if (enabled && !cache[key]) {\n            fetchData();\n        }\n    }, [key, fetchData, enabled]);\n\n    useEffect(() => {\n        if (enabled && data !== cache[key]) {\n            setData(cache[key]);\n        }\n    }, [enabled, key, data]);\n\n    const refetch = useCallback(() => {\n        cache[key] = null;\n        fetchData();\n    }, [fetchData, key]);\n\n    return { data, error, is_fetching, refetch };\n};\n\nexport const invalidateDTraderCache = (keys: string | string[]) => {\n    const key = getKey(keys);\n    cache[key] = null;\n};\n","import { isRiseFallContract, isTurbosContract, isVanillaContract } from '@deriv/shared';\n\nexport const checkContractTypePrefix = (values: string[]): boolean => {\n    return [isVanillaContract, isTurbosContract, isRiseFallContract].some(contractTypeCheck =>\n        values.every(value => contractTypeCheck(value))\n    );\n};\n","import React, { useCallback, useEffect, useRef } from 'react';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { useStore } from '@deriv/stores';\nimport { cloneObject, getContractCategoriesConfig, getContractTypesConfig, setTradeURLParams } from '@deriv/shared';\nimport { TConfig, TContractTypesList } from 'Types';\nimport { useDtraderQuery } from './useDtraderQuery';\nimport { isLoginidDefined } from 'AppV2/Utils/client';\nimport { getTradeTypesList } from 'AppV2/Utils/trade-types-utils';\nimport { TContractType } from 'Modules/Trading/Components/Form/ContractType/types';\nimport { checkContractTypePrefix } from 'AppV2/Utils/contract-type';\n\ntype TContractsForCompanyResponse = {\n    contracts_for_company: {\n        available: {\n            barrier_category: string;\n            contract_category: string;\n            contract_category_display: string;\n            contract_display: string;\n            contract_type: string;\n            default_stake: number;\n            sentiment: string;\n        }[];\n        hit_count: number;\n    };\n};\n\nconst useContractsForCompany = () => {\n    const [contract_types_list, setContractTypesList] = React.useState<TContractTypesList | []>([]);\n\n    const [trade_types, setTradeTypes] = React.useState<TContractType[]>([]);\n    const { contract_type, onChange, setContractTypesListV2, setDefaultStake, processContractsForV2, symbol } =\n        useTraderStore();\n    const { client } = useStore();\n    const { loginid, is_switching, landing_company_shortcode } = client;\n    const prev_landing_company_shortcode_ref = React.useRef(landing_company_shortcode);\n\n    const isQueryEnabled = useCallback(() => {\n        if (isLoginidDefined(loginid) && !landing_company_shortcode) return false;\n        if (is_switching) return false;\n        return true;\n    }, [loginid, is_switching, landing_company_shortcode]);\n\n    const {\n        data: response,\n        error,\n        is_fetching,\n    } = useDtraderQuery<TContractsForCompanyResponse>(\n        ['contracts_for_company', loginid ?? '', landing_company_shortcode],\n        {\n            contracts_for_company: 1,\n            landing_company: landing_company_shortcode,\n        },\n        {\n            enabled: isQueryEnabled(),\n        }\n    );\n\n    const contract_categories = getContractCategoriesConfig();\n    const available_categories = cloneObject(contract_categories);\n    const contract_types = getContractTypesConfig();\n    const [available_contract_types, setAvailableContractTypes] = React.useState<\n        ReturnType<typeof getContractTypesConfig> | undefined\n    >();\n\n    const is_fetching_ref = useRef(is_fetching);\n\n    const isContractTypeAvailable = useCallback(\n        (trade_types: TContractType[]) => {\n            return trade_types.some(\n                type => checkContractTypePrefix([contract_type, type.value]) || contract_type === type.value\n            );\n        },\n        [contract_type]\n    );\n\n    const getTradeTypes = useCallback((categories: TContractTypesList) => {\n        return Array.isArray(categories) && categories.length === 0\n            ? []\n            : getTradeTypesList(categories as TContractTypesList);\n    }, []);\n\n    const getNewContractType = useCallback(\n        (trade_types: TContractType[]) => {\n            if (!isContractTypeAvailable(trade_types) && trade_types.length > 0) {\n                return trade_types[0].value;\n            }\n            return contract_type;\n        },\n        [contract_type, isContractTypeAvailable]\n    );\n\n    const processNewContractType = useCallback(\n        (new_contract_type: string) => {\n            const has_contract_type_changed = contract_type != new_contract_type && new_contract_type;\n            if (has_contract_type_changed) {\n                onChange({\n                    target: {\n                        name: 'contract_type',\n                        value: new_contract_type,\n                    },\n                });\n            }\n            setTradeURLParams({ contractType: new_contract_type });\n        },\n        [contract_type, onChange]\n    );\n\n    useEffect(() => {\n        setAvailableContractTypes(undefined);\n        setContractTypesList([]);\n        is_fetching_ref.current = true;\n    }, [loginid]);\n\n    useEffect(() => {\n        try {\n            const { contracts_for_company } = response || {};\n            const available_contract_types: ReturnType<typeof getContractTypesConfig> = {};\n            is_fetching_ref.current = false;\n\n            if (!error && contracts_for_company?.available.length) {\n                contracts_for_company.available.forEach(contract => {\n                    const type = Object.keys(contract_types).find(\n                        key =>\n                            contract_types[key].trade_types.indexOf(contract.contract_type) !== -1 &&\n                            (contract.contract_type !== 'PUT' || contract_types[key].barrier_count === 1) // To distinguish betweeen Rise/Fall & Higher/Lower\n                    );\n\n                    if (!type) return; // ignore unsupported contract types\n\n                    if (!available_contract_types[type]) {\n                        // extend contract_categories to include what is needed to create the contract list\n                        const category =\n                            Object.keys(available_categories).find(\n                                key => available_categories[key].categories.indexOf(type) !== -1\n                            ) ?? '';\n\n                        const sub_cats = available_categories[category]?.categories;\n\n                        if (!sub_cats) return;\n\n                        sub_cats[(sub_cats as string[]).indexOf(type)] = {\n                            value: type,\n                            text: contract_types[type].title,\n                            barrier_category: contract.barrier_category,\n                        };\n\n                        available_contract_types[type] = cloneObject(contract_types[type]);\n                    }\n                    const config: TConfig = available_contract_types[type].config || {};\n                    config.barrier_category =\n                        contract_types[type].barrier_count === 0\n                            ? 'euro_atm'\n                            : (contract.barrier_category as TConfig['barrier_category']);\n                    config.default_stake = contract.default_stake;\n                    if (type === contract_type) setDefaultStake(contract.default_stake);\n                    available_contract_types[type].config = config;\n                });\n\n                setContractTypesListV2(available_categories);\n                setContractTypesList(available_categories);\n                setAvailableContractTypes(available_contract_types);\n\n                const trade_types = getTradeTypes(available_categories);\n                setTradeTypes(trade_types);\n\n                const new_contract_type = getNewContractType(trade_types);\n                processNewContractType(new_contract_type);\n\n                if (landing_company_shortcode !== prev_landing_company_shortcode_ref.current) {\n                    onChange({\n                        target: {\n                            name: 'symbol',\n                            value: symbol,\n                        },\n                    }).then(() => {\n                        processContractsForV2();\n                        prev_landing_company_shortcode_ref.current = landing_company_shortcode;\n                    });\n                }\n            }\n        } catch (err) {\n            /* eslint-disable no-console */\n            console.error(err);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [response]);\n\n    const resetTradeTypes = () => {\n        setTradeTypes([]);\n    };\n\n    return { trade_types, contract_types_list, available_contract_types, is_fetching_ref, resetTradeTypes };\n};\n\nexport default useContractsForCompany;\n","export const isLoginidDefined = (loginid: string | undefined) => {\n    return loginid && loginid !== 'null';\n};\n","import { useState, useEffect, useCallback } from 'react';\nimport {\n    CONTRACT_TYPES,\n    TRADE_TYPES,\n    getContractTypesConfig,\n    isTurbosContract,\n    isVanillaContract,\n} from '@deriv/shared';\nimport { useStore } from '@deriv/stores';\nimport { localize } from '@deriv/translations';\nimport { ActiveSymbols, ActiveSymbolsResponse } from '@deriv/api-types';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport useContractsForCompany from './useContractsForCompany';\nimport { useDtraderQuery } from './useDtraderQuery';\n\nconst useActiveSymbols = () => {\n    const { client, common } = useStore();\n    const { loginid, is_switching } = client;\n    const { showError, current_language } = common;\n    const {\n        active_symbols: symbols_from_store,\n        contract_type,\n        is_vanilla,\n        is_turbos,\n        setActiveSymbolsV2,\n    } = useTraderStore();\n    const [activeSymbols, setActiveSymbols] = useState<ActiveSymbols | []>(symbols_from_store);\n\n    const { available_contract_types, is_fetching_ref: is_contracts_loading_ref } = useContractsForCompany();\n\n    const trade_types_with_barrier_category = [\n        TRADE_TYPES.RISE_FALL,\n        TRADE_TYPES.RISE_FALL_EQUAL,\n        TRADE_TYPES.HIGH_LOW,\n    ] as string[];\n\n    const getContractTypesList = () => {\n        if (is_turbos) return [CONTRACT_TYPES.TURBOS.LONG, CONTRACT_TYPES.TURBOS.SHORT];\n        if (is_vanilla) return [CONTRACT_TYPES.VANILLA.CALL, CONTRACT_TYPES.VANILLA.PUT];\n        return getContractTypesConfig()[contract_type]?.trade_types ?? [];\n    };\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const { barrier_category } = (available_contract_types?.[contract_type]?.config || {}) as any;\n\n    const isQueryEnabled = useCallback(() => {\n        if (!available_contract_types || is_contracts_loading_ref.current || is_switching) return false;\n        return true;\n    }, [available_contract_types, is_switching, is_contracts_loading_ref]);\n\n    const getContractType = () => {\n        if (isTurbosContract(contract_type)) {\n            return 'turbos';\n        } else if (isVanillaContract(contract_type)) {\n            return 'vanilla';\n        }\n        return contract_type;\n    };\n\n    const { data: response } = useDtraderQuery<ActiveSymbolsResponse>(\n        ['active_symbols', loginid ?? '', getContractType(), current_language],\n        {\n            active_symbols: 'brief',\n            contract_type: getContractTypesList(),\n            ...(trade_types_with_barrier_category.includes(contract_type) && barrier_category\n                ? { barrier_category: [barrier_category] }\n                : {}),\n        },\n        {\n            enabled: isQueryEnabled(),\n        }\n    );\n\n    useEffect(\n        () => {\n            const process = async () => {\n                if (!response) return;\n\n                const { active_symbols = [], error } = response;\n                if (error) {\n                    showError({ message: localize('Trading is unavailable at this time.') });\n                } else if (!active_symbols?.length) {\n                    setActiveSymbols([]);\n                } else {\n                    setActiveSymbols(active_symbols);\n                    setActiveSymbolsV2(active_symbols);\n                }\n            };\n            process();\n        },\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [response]\n    );\n\n    return { activeSymbols };\n};\n\nexport default useActiveSymbols;\n","import React from 'react';\nimport { convertTimeFormat, toMoment } from '@deriv/shared';\nimport { Localize } from '@deriv/translations';\nimport { CaptionText } from '@deriv-com/quill-ui';\n\ntype TMarketOpeningTimeBanner = {\n    opening_time: string;\n    days_offset: number;\n    current_language: string;\n};\n\nconst MarketOpeningTimeBanner = ({ opening_time, days_offset, current_language }: TMarketOpeningTimeBanner) => {\n    const formatted_opening_time = convertTimeFormat(opening_time);\n    const target_date = toMoment(new Date()).locale(current_language.toLowerCase()).add(days_offset, 'days');\n    const opening_date = target_date.format('DD MMM YYYY');\n\n    return (\n        <CaptionText bold className='market-opening-time-banner'>\n            <Localize\n                i18n_default_text='{{formatted_opening_time}} (GMT), {{opening_date}}'\n                values={{\n                    formatted_opening_time,\n                    opening_date,\n                }}\n            />\n        </CaptionText>\n    );\n};\n\nexport default MarketOpeningTimeBanner;\n","import './market-opening-time-banner.scss';\nimport MarketOpeningTimeBanner from './market-opening-time-banner';\n\nexport default MarketOpeningTimeBanner;\n","import React from 'react';\nimport { Text } from '@deriv-com/quill-ui';\nimport { LabelPairedStopwatchMdBoldIcon } from '@deriv/quill-icons';\n\ntype TMarketCountDownTimer = {\n    time_left: {\n        days?: number;\n        hours?: number;\n        minutes?: number;\n        seconds?: number;\n    };\n};\n\nconst MarketCountdownTimer = ({ time_left }: TMarketCountDownTimer) => {\n    let timer_components = '';\n\n    if (Object.keys(time_left).length) {\n        const hours = (Number(time_left.days) * 24 + Number(time_left.hours)).toString().padStart(2, '0');\n        const minutes = Number(time_left.minutes).toString().padStart(2, '0');\n        const seconds = Number(time_left.seconds).toString().padStart(2, '0');\n        timer_components = `${hours}:${minutes}:${seconds}`;\n    }\n\n    return (\n        <div className='market-countdown-timer'>\n            <LabelPairedStopwatchMdBoldIcon fill='var(--component-textIcon-static-prominentDark)' />\n            <Text bold size='md' className='market-countdown-timer-text'>\n                {timer_components}\n            </Text>\n        </div>\n    );\n};\n\nexport default MarketCountdownTimer;\n","import './market-countdown-timer.scss';\nimport MarketCountdownTimer from './market-countdown-timer';\n\nexport default MarketCountdownTimer;\n","import { TradingTimesResponse } from '@deriv/api-types';\n\nexport const calculateTimeLeft = (remaining_time_to_open: number) => {\n    const difference = remaining_time_to_open - Date.now();\n    return difference > 0\n        ? {\n              days: Math.floor(difference / (1000 * 60 * 60 * 24)),\n              hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\n              minutes: Math.floor((difference / 1000 / 60) % 60),\n              seconds: Math.floor((difference / 1000) % 60),\n          }\n        : {};\n};\n\nexport const getSymbol = (\n    target_symbol: string,\n    trading_times: NonNullable<DeepRequired<TradingTimesResponse['trading_times']>>\n) => {\n    let symbol;\n    const { markets } = trading_times;\n    for (let i = 0; i < markets.length; i++) {\n        const { submarkets } = markets[i];\n        if (submarkets) {\n            for (let j = 0; j < submarkets.length; j++) {\n                const { symbols } = submarkets[j];\n                symbol = symbols?.find(item => item.symbol === target_symbol);\n                if (symbol !== undefined) return symbol;\n            }\n        }\n    }\n};\n","import React from 'react';\nimport { useIsMounted, WS, isMarketClosed, toMoment } from '@deriv/shared';\nimport { Localize } from '@deriv/translations';\nimport { observer, useStore } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { TradingTimesRequest } from '@deriv/api-types';\nimport useActiveSymbols from 'AppV2/Hooks/useActiveSymbols';\nimport MarketOpeningTimeBanner from '../MarketOpeningTimeBanner';\nimport MarketCountdownTimer from '../MarketCountdownTimer';\nimport { CaptionText } from '@deriv-com/quill-ui';\nimport clsx from 'clsx';\nimport { calculateTimeLeft, getSymbol } from 'AppV2/Utils/closed-market-message-utils';\n\ntype TWhenMarketOpens = {\n    days_offset: number;\n    opening_time: string;\n    remaining_time_to_open: number;\n};\n\nconst days_to_check_before_exit = 7;\n\nconst getTradingTimes = async (target_time: TradingTimesRequest['trading_times']) => {\n    const data = await WS.tradingTimes(target_time);\n    if (data.error) {\n        return { api_initial_load_error: data.error.message };\n    }\n    return data;\n};\n\nconst ClosedMarketMessage = observer(() => {\n    const { common } = useStore();\n    const { current_language } = common;\n    const { symbol, prepareTradeStore, is_market_closed } = useTraderStore();\n    const { activeSymbols } = useActiveSymbols();\n\n    const isMounted = useIsMounted();\n    const [when_market_opens, setWhenMarketOpens] = React.useState<TWhenMarketOpens>({} as TWhenMarketOpens);\n    const [time_left, setTimeLeft] = React.useState(calculateTimeLeft(when_market_opens?.remaining_time_to_open));\n    const [is_loading, setLoading] = React.useState(true);\n\n    React.useEffect(() => {\n        if (is_market_closed) {\n            setLoading(true);\n            const whenMarketOpens = async (\n                days_offset: number,\n                target_symbol: string\n            ): Promise<void | Record<string, unknown>> => {\n                if (days_offset > days_to_check_before_exit) return {};\n                let remaining_time_to_open;\n                const target_date = toMoment(new Date()).add(days_offset, 'days');\n                const api_response = await getTradingTimes(target_date.format('YYYY-MM-DD'));\n                if (!api_response.api_initial_load_error) {\n                    const returned_symbol = getSymbol(target_symbol, api_response.trading_times);\n                    const open = returned_symbol?.times.open as string[];\n                    const close = returned_symbol?.times.close as string[];\n                    const is_closed_all_day = open?.length === 1 && open[0] === '--' && close[0] === '--';\n                    if (is_closed_all_day) {\n                        return whenMarketOpens(days_offset + 1, target_symbol);\n                    }\n                    const date_str = target_date.toISOString().substring(0, 11);\n                    const getUTCDate = (hour: string) => new Date(`${date_str}${hour}Z`);\n                    for (let i = 0; i < open?.length; i++) {\n                        const diff = +getUTCDate(open[i]) - Date.now();\n                        if (diff > 0) {\n                            remaining_time_to_open = +getUTCDate(open[i]);\n                            if (isMounted() && target_symbol === symbol) {\n                                return setWhenMarketOpens({\n                                    days_offset,\n                                    opening_time: open[i],\n                                    remaining_time_to_open,\n                                });\n                            }\n                        }\n                    }\n                    whenMarketOpens(days_offset + 1, target_symbol);\n                }\n            };\n\n            whenMarketOpens(0, symbol);\n        }\n        setTimeLeft({});\n        setWhenMarketOpens({} as TWhenMarketOpens);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [activeSymbols, symbol]);\n\n    React.useEffect(() => {\n        let timer: ReturnType<typeof setTimeout>;\n        if (when_market_opens?.remaining_time_to_open) {\n            timer = setTimeout(() => {\n                setTimeLeft(calculateTimeLeft(when_market_opens.remaining_time_to_open));\n                if (+new Date(when_market_opens.remaining_time_to_open) - +new Date() < 1000) {\n                    setLoading(true);\n                    prepareTradeStore(false);\n                }\n            }, 1000);\n        }\n        return () => {\n            if (timer) {\n                clearTimeout(timer);\n            }\n        };\n    }, [time_left, when_market_opens, prepareTradeStore]);\n\n    if (!(when_market_opens && Object.keys(time_left).length) || !is_market_closed) return null;\n\n    const { opening_time, days_offset } = when_market_opens;\n\n    if (is_loading) setLoading(false);\n\n    return (\n        <div className={clsx('closed-market-message--container', { 'closed-market-message--loading': is_loading })}>\n            <div className='closed-market-message--left'>\n                <CaptionText className='closed-market-message--left-message'>\n                    <Localize i18n_default_text='This market will reopen at' />\n                </CaptionText>\n                <MarketOpeningTimeBanner\n                    opening_time={opening_time}\n                    days_offset={days_offset}\n                    current_language={current_language}\n                />\n            </div>\n            <MarketCountdownTimer time_left={time_left} />\n        </div>\n    );\n});\n\nexport default ClosedMarketMessage;\n","import './closed-market-message.scss';\nimport ClosedMarketMessage from './closed-market-message';\n\nexport default ClosedMarketMessage;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { Heading, Text } from '@deriv-com/quill-ui';\nimport { Localize } from '@deriv/translations';\nimport { usePrevious } from '@deriv/components';\n\ntype TCurrentSpotDisplayProps = {\n    has_tick_count?: boolean;\n    spot: string | null;\n    tick: number | null;\n};\n\nconst ACTIONS = {\n    INC: 'increment',\n    DEC: 'decrement',\n    ADD10: 'add10',\n} as const;\nconst TOTAL_ANIMATION_TIME = 80;\n\nconst CurrentSpotDisplay = ({ has_tick_count, spot, tick }: TCurrentSpotDisplayProps) => {\n    const last_digit = Number(spot?.slice(-1));\n    const prev_spot = usePrevious(spot);\n    const prev_last_digit = Number(prev_spot?.slice(-1));\n\n    const [should_enter_from_top, setShouldEnterFromTop] = React.useState(false);\n    const [should_enter_from_bottom, setShouldEnterFromBottom] = React.useState(false);\n    const [next_displayed_last_digit, setNextDisplayedLastDigit] = React.useState(last_digit);\n    const [displayed_last_digit, setDisplayedLastDigit] = React.useState(last_digit);\n\n    const last_digit_ref = React.useRef(prev_last_digit);\n    const spin_interval_id = React.useRef<ReturnType<typeof setInterval>>();\n    const spin_timeout_id = React.useRef<ReturnType<typeof setTimeout>>();\n    const spinning_wrapper_ref = React.useRef<HTMLDivElement>(null);\n\n    const spinLastDigit = (\n        action: typeof ACTIONS[keyof typeof ACTIONS],\n        interval_ms: number,\n        start: number,\n        end: number\n    ) => {\n        clearInterval(spin_interval_id.current);\n        const interval_id = setInterval(() => {\n            if (action === ACTIONS.INC && last_digit_ref.current < end) {\n                last_digit_ref.current = (last_digit_ref.current + 1) % 10;\n            } else if (action === ACTIONS.DEC && last_digit_ref.current > end) {\n                last_digit_ref.current = Math.abs(last_digit_ref.current - 1) % 10;\n            } else if (action === ACTIONS.ADD10 && last_digit_ref.current < start + 10) {\n                last_digit_ref.current += 1;\n            } else if (\n                action === ACTIONS.ADD10 ? last_digit_ref.current === start + 10 : last_digit_ref.current === end\n            ) {\n                clearInterval(interval_id);\n            }\n            setNextDisplayedLastDigit(last_digit_ref.current % 10);\n        }, interval_ms);\n        spin_interval_id.current = interval_id;\n    };\n\n    React.useEffect(() => {\n        if (isNaN(prev_last_digit) || isNaN(last_digit) || !spot) return;\n\n        const diff = Math.abs(Number(prev_last_digit) - last_digit);\n        const timeout_speed = diff > 0 ? Math.floor(TOTAL_ANIMATION_TIME / diff) : TOTAL_ANIMATION_TIME;\n        const should_increment = Number(prev_last_digit) <= last_digit;\n\n        spinning_wrapper_ref.current?.style.setProperty('--animation-time', `${timeout_speed}ms`);\n\n        if (should_increment) {\n            setShouldEnterFromTop(true);\n        } else {\n            setShouldEnterFromBottom(true);\n        }\n\n        spin_timeout_id.current = setTimeout(() => {\n            setShouldEnterFromTop(false);\n            setShouldEnterFromBottom(false);\n            setDisplayedLastDigit(last_digit_ref.current % 10);\n        }, TOTAL_ANIMATION_TIME);\n\n        const getAction = () => {\n            let action: typeof ACTIONS[keyof typeof ACTIONS] = ACTIONS.ADD10;\n            if (Number(prev_last_digit) < last_digit) {\n                action = ACTIONS.INC;\n            } else if (Number(prev_last_digit) > last_digit) {\n                action = ACTIONS.DEC;\n            }\n            return action;\n        };\n        last_digit_ref.current = Number(prev_last_digit);\n        spinLastDigit(getAction(), timeout_speed, Number(prev_last_digit), last_digit);\n\n        return () => {\n            clearTimeout(spin_timeout_id.current);\n            clearInterval(spin_interval_id.current);\n        };\n    }, [spot, prev_last_digit, last_digit]);\n\n    if (!spot) return null;\n    return (\n        <div className='current-spot__display'>\n            {has_tick_count && (\n                <Text size='xl' color='quill-typography__color--prominent'>\n                    <Localize i18n_default_text='Tick {{current_tick}}' values={{ current_tick: tick }} />\n                </Text>\n            )}\n            <div className='current-spot'>\n                <Text size='xl' bold color='quill-typography__color--prominent'>\n                    {spot.slice(0, -1)}\n                </Text>\n                <div className='current-spot__last-digit-container'>\n                    <div\n                        ref={spinning_wrapper_ref}\n                        className={clsx(\n                            'current-spot__last-digit-wrapper',\n                            should_enter_from_top && 'current-spot__last-digit-wrapper--enter-from-top',\n                            should_enter_from_bottom && 'current-spot__last-digit-wrapper--enter-from-bottom'\n                        )}\n                    >\n                        {should_enter_from_top && (\n                            <Heading.H2 color='quill-typography__color--prominent' className='current-spot__last-digit'>\n                                {next_displayed_last_digit}\n                            </Heading.H2>\n                        )}\n                        <Heading.H2 color='quill-typography__color--prominent' className='current-spot__last-digit'>\n                            {displayed_last_digit}\n                        </Heading.H2>\n                        {should_enter_from_bottom && (\n                            <Heading.H2 color='quill-typography__color--prominent' className='current-spot__last-digit'>\n                                {next_displayed_last_digit}\n                            </Heading.H2>\n                        )}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default React.memo(CurrentSpotDisplay);\n","import React from 'react';\nimport { observer } from 'mobx-react-lite';\nimport clsx from 'clsx';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { Skeleton, usePrevious } from '@deriv/components';\nimport { useStore } from '@deriv/stores';\nimport { isContractElapsed } from '@deriv/shared';\nimport { toJS } from 'mobx';\nimport { TickSpotData } from '@deriv/api-types';\nimport CurrentSpotDisplay from './current-spot-display';\nimport { isDigitContractWinning } from 'AppV2/Utils/trade-params-utils';\n\nconst STATUS = {\n    LOST: 'lost',\n    WON: 'won',\n};\n\nconst CurrentSpot = observer(() => {\n    const contract_switching_timer = React.useRef<ReturnType<typeof setTimeout>>();\n\n    const { contract_trade } = useStore();\n    const { last_contract, prev_contract } = contract_trade;\n    const {\n        contract_info = {},\n        digits_info = {},\n        display_status,\n        is_digit_contract,\n        is_ended,\n    } = last_contract.contract_info?.entry_tick || !prev_contract ? last_contract : prev_contract;\n    const { tick_data, symbol } = useTraderStore();\n    const { contract_id, entry_tick, date_start, contract_type, tick_stream, underlying } = contract_info;\n    const prev_contract_id = usePrevious(contract_id);\n    const last_contract_ticks = last_contract.contract_info?.tick_stream?.length;\n    const prev_last_contract_ticks = usePrevious(last_contract_ticks);\n\n    let tick = tick_data;\n\n    const is_contract_elapsed = isContractElapsed(contract_info, tick);\n    const is_prev_contract_elapsed = isContractElapsed(prev_contract?.contract_info, tick);\n    const status = !is_contract_elapsed && !!tick ? display_status : null;\n\n    // tick from contract_info.tick_stream differs from a ticks_history API tick.\n    if (date_start && !is_contract_elapsed) {\n        if (tick_stream?.length) {\n            const { epoch, tick: latest_stream_tick, tick_display_value } = toJS(tick_stream.slice(-1)[0]);\n            tick = {\n                ask: latest_stream_tick,\n                bid: latest_stream_tick,\n                epoch,\n                pip_size: tick_display_value?.split('.')[1].length,\n                quote: latest_stream_tick,\n                current_tick: tick_stream.length,\n            } as TickSpotData;\n        }\n    }\n    const current_tick = tick && 'current_tick' in tick ? (tick.current_tick as number) : null;\n    // 'won' or 'lost' status exists after contract expiry:\n    const is_digit_contract_ended = is_ended && is_digit_contract;\n    const is_won = is_digit_contract_ended && status === STATUS.WON;\n    const is_lost = is_digit_contract_ended && status === STATUS.LOST;\n    const digits_array = Object.keys(digits_info)\n        .sort((a, b) => +a - +b)\n        .map(spot_time => digits_info[+spot_time]);\n    // last_contract_digit refers to digit and spot values from last digit contract in contracts array:\n    const last_contract_digit = React.useMemo(() => digits_array.slice(-1)[0] || {}, [digits_array]);\n    const latest_tick_pip_size = tick ? +tick.pip_size : null;\n    const latest_tick_quote_price =\n        tick?.quote && latest_tick_pip_size ? tick.quote.toFixed(latest_tick_pip_size) : null;\n    const latest_tick_digit = latest_tick_quote_price ? +(latest_tick_quote_price.split('').pop() || '') : null;\n    // latest_digit refers to digit and spot values from the latest price:\n    const latest_digit = React.useMemo(\n        () =>\n            is_won || is_lost\n                ? (last_contract_digit as { digit: number | null; spot: string | null })\n                : { digit: latest_tick_digit, spot: latest_tick_quote_price },\n        [is_won, is_lost, latest_tick_digit, latest_tick_quote_price, last_contract_digit]\n    );\n\n    const [displayed_tick, setDisplayedTick] = React.useState<number | null>(current_tick);\n    const [displayed_spot, setDisplayedSpot] = React.useState<string | null>(latest_digit.spot);\n    const [should_enter_from_top, setShouldEnterFromTop] = React.useState(false);\n\n    const barrier = !is_contract_elapsed && !!tick ? Number(contract_info.barrier) : null;\n    const is_winning = isDigitContractWinning(contract_type, barrier, latest_digit.digit);\n    const has_contract = is_digit_contract && status && latest_digit.spot && !!entry_tick;\n    const has_open_contract = has_contract && !is_ended;\n    const has_relevant_tick_data = underlying === symbol || !underlying;\n    const should_show_tick_count = has_contract && has_relevant_tick_data;\n    const should_enter_from_left =\n        !prev_contract?.contract_info ||\n        !!(is_prev_contract_elapsed && last_contract_ticks === 1 && !prev_last_contract_ticks);\n\n    const setNewData = React.useCallback(() => {\n        setDisplayedTick(current_tick);\n        setDisplayedSpot(latest_digit.spot);\n    }, [current_tick, latest_digit.spot]);\n\n    React.useEffect(() => {\n        const has_multiple_contracts =\n            prev_contract?.contract_info && !is_prev_contract_elapsed && last_contract.contract_info?.entry_tick;\n        const is_next_contract_opened = prev_contract_id && contract_id && prev_contract_id !== contract_id;\n        if (has_multiple_contracts && is_next_contract_opened) {\n            setShouldEnterFromTop(true);\n            contract_switching_timer.current = setTimeout(() => {\n                setShouldEnterFromTop(false);\n                setNewData();\n            }, 240); // equal to animation duration\n        } else if (!should_enter_from_top) {\n            setNewData();\n        }\n    }, [\n        contract_id,\n        is_prev_contract_elapsed,\n        last_contract,\n        prev_contract,\n        prev_contract_id,\n        setNewData,\n        should_enter_from_top,\n    ]);\n\n    React.useEffect(() => {\n        return () => {\n            clearTimeout(contract_switching_timer.current);\n        };\n    }, []);\n\n    return (\n        <div\n            className={clsx(\n                'trade__current-spot',\n                should_show_tick_count && 'trade__current-spot--has-contract',\n                should_show_tick_count && should_enter_from_left && 'trade__current-spot--enter-from-left',\n                !should_show_tick_count && is_contract_elapsed && 'trade__current-spot--enter-from-right',\n                has_open_contract && is_winning && 'trade__current-spot--winning',\n                is_won && 'trade__current-spot--won',\n                has_open_contract && !is_winning && 'trade__current-spot--losing',\n                is_lost && 'trade__current-spot--lost'\n            )}\n        >\n            {tick && has_relevant_tick_data && displayed_spot ? (\n                <div\n                    className={clsx(\n                        'current-spot__wrapper',\n                        should_enter_from_top && 'current-spot__wrapper--enter-from-top'\n                    )}\n                >\n                    {should_enter_from_top && (\n                        <CurrentSpotDisplay\n                            has_tick_count={!!has_contract}\n                            spot={latest_digit.spot}\n                            tick={current_tick}\n                        />\n                    )}\n                    <CurrentSpotDisplay has_tick_count={!!has_contract} spot={displayed_spot} tick={displayed_tick} />\n                </div>\n            ) : (\n                <Skeleton width={128} height={32} />\n            )}\n        </div>\n    );\n});\n\nexport default CurrentSpot;\n","import CurrentSpot from './current-spot';\nimport './current-spot.scss';\n\nexport default CurrentSpot;\n","import React, { useRef, useEffect } from 'react';\nimport { Button, SearchField } from '@deriv-com/quill-ui';\nimport clsx from 'clsx';\nimport { observer, useStore } from '@deriv/stores';\nimport { Localize, localize } from '@deriv/translations';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { getContractTypesConfig } from '@deriv/shared';\n\nexport type TSymbolsSearchField = {\n    isSearching: boolean;\n    setIsSearching: (input: boolean) => void;\n    searchValue: string;\n    setSearchValue: (input: string) => void;\n};\n\nconst SymbolsSearchField = observer(\n    ({ isSearching, setIsSearching, searchValue, setSearchValue }: TSymbolsSearchField) => {\n        const { ui } = useStore();\n        const { is_dark_mode_on } = ui;\n        const { contract_type } = useTraderStore();\n        const contract_name = getContractTypesConfig()[contract_type]?.title;\n        const inputRef = useRef<HTMLInputElement | null>(null);\n\n        useEffect(() => {\n            const inputElement = inputRef.current;\n\n            if (inputElement) {\n                const handleFocus = () => setIsSearching(true);\n                inputElement.addEventListener('focus', handleFocus);\n\n                return () => {\n                    inputElement.removeEventListener('focus', handleFocus);\n                };\n            }\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n        }, []);\n\n        const handleClear = () => {\n            setSearchValue('');\n            setIsSearching(false);\n        };\n\n        return (\n            <div\n                className={clsx('symbols-search-field__container', {\n                    'symbols-search-field--is-focused': isSearching,\n                })}\n            >\n                <SearchField\n                    inputSize='sm'\n                    placeholder={localize('Search markets on ') + contract_name}\n                    variant='fill'\n                    ref={inputRef}\n                    value={searchValue}\n                    onChange={e => {\n                        setSearchValue(e.target.value);\n                    }}\n                />\n                {isSearching && (\n                    <Button\n                        variant='tertiary'\n                        label={<Localize i18n_default_text='Cancel' />}\n                        size='sm'\n                        color={is_dark_mode_on ? 'white' : 'black'}\n                        onClick={handleClear}\n                    />\n                )}\n            </div>\n        );\n    }\n);\n\nexport default SymbolsSearchField;\n","import './symbols-search-field.scss';\nimport SymbolsSearchField from './symbols-search-field';\n\nexport default SymbolsSearchField;\n","import { ActiveSymbols } from '@deriv/api-types';\n\ntype MarketOrderMap = {\n    [key: string]: number;\n};\n\nconst sortSymbols = (symbolsList: ActiveSymbols) => {\n    const marketSortingOrder = ['synthetic_index', 'forex', 'indices', 'cryptocurrency', 'commodities'];\n    const marketOrderMap: MarketOrderMap = marketSortingOrder.reduce(\n        (acc: MarketOrderMap, market: string, index: number) => {\n            acc[market] = index;\n            return acc;\n        },\n        {}\n    );\n\n    return symbolsList.slice().sort((a, b) => {\n        const marketOrderA = marketOrderMap[a.market] !== undefined ? marketOrderMap[a.market] : symbolsList.length;\n        const marketOrderB = marketOrderMap[b.market] !== undefined ? marketOrderMap[b.market] : symbolsList.length;\n        if (marketOrderA !== marketOrderB) {\n            return marketOrderA - marketOrderB;\n        }\n        return a.submarket_display_name.localeCompare(b.submarket_display_name);\n    });\n};\n\nexport default sortSymbols;\n","import { ActiveSymbols } from '@deriv/api-types';\nimport { localize } from '@deriv/translations';\nimport sortSymbols from './sort-symbols-utils';\n\ntype SubmarketGroup = {\n    submarket_display_name: string;\n    items: ActiveSymbols;\n};\n\ntype SubgroupGroup = {\n    subgroup_display_name: string;\n    submarkets: Record<string, SubmarketGroup>;\n};\n\nexport type MarketGroup = {\n    market: string;\n    market_display_name: string;\n    subgroups: Record<string, SubgroupGroup>;\n};\n\nexport const categorizeSymbols = (symbols: ActiveSymbols): Record<string, MarketGroup> => {\n    if (symbols.length === 0) {\n        return {};\n    }\n    // Categorize ActiveSymbols array into object categorized by markets\n    const sortedSymbols = sortSymbols(symbols);\n    let categorizedSymbols = sortedSymbols.reduce((acc: Record<string, MarketGroup>, symbol: ActiveSymbols[0]) => {\n        const { market, market_display_name, subgroup, subgroup_display_name, submarket, submarket_display_name } =\n            symbol;\n\n        acc[market] ??= { market, market_display_name, subgroups: {} };\n\n        acc[market].subgroups[subgroup] ??= {\n            subgroup_display_name,\n            submarkets: {},\n        };\n\n        acc[market].subgroups[subgroup].submarkets[submarket] ??= {\n            submarket_display_name,\n            items: [],\n        };\n\n        acc[market].subgroups[subgroup].submarkets[submarket].items.push(symbol);\n\n        return acc;\n    }, {});\n    // Sort categorizedSymbols by submarket_display_name\n    Object.keys(categorizedSymbols).forEach(market => {\n        Object.keys(categorizedSymbols[market].subgroups).forEach(subgroup => {\n            const submarkets = categorizedSymbols[market].subgroups[subgroup].submarkets;\n            const sortedSubmarkets = Object.entries(submarkets)\n                .sort(([, a], [, b]) => a.submarket_display_name.localeCompare(b.submarket_display_name))\n                .reduce((sortedAcc, [key, value]) => {\n                    sortedAcc[key] = value;\n                    return sortedAcc;\n                }, {} as Record<string, SubmarketGroup>);\n            categorizedSymbols[market].subgroups[subgroup].submarkets = sortedSubmarkets;\n        });\n    });\n\n    //format the all submarkets into a single subgroup objects, renaming keys, and subgroup_display_name if they are 'none'\n    const allCategory = Object.values(categorizedSymbols).reduce((result, item) => {\n        Object.keys(item.subgroups).forEach(key => {\n            const newKey = key === 'none' ? item.market : key;\n            const newName = key === 'none' ? item.market_display_name : item.subgroups[key].subgroup_display_name;\n\n            result[newKey] = {\n                subgroup_display_name: newName,\n                submarkets: item.subgroups[key].submarkets,\n            };\n        });\n\n        return result;\n    }, {} as Record<string, SubgroupGroup>);\n\n    // Assign a new category called 'all' with the same data shape as the rest of the categories for rendering\n    categorizedSymbols = {\n        favorites: {\n            market: 'favorites',\n            market_display_name: localize('Favourites'),\n            subgroups: {},\n        },\n        all: {\n            market: 'all',\n            market_display_name: localize('All'),\n            subgroups: { ...allCategory } as Record<string, SubgroupGroup>,\n        },\n        /// spread the rest of the categories into final object\n        ...categorizedSymbols,\n    };\n\n    return categorizedSymbols;\n};\n","import {\n    MarketForexAudcadIcon,\n    MarketForexAudchfIcon,\n    MarketForexAudjpyIcon,\n    MarketForexAudnzdIcon,\n    MarketForexAudusdIcon,\n    MarketDerivedAudBasketIcon,\n    MarketDerivedBearIcon,\n    MarketDerivedBoom1000Icon,\n    MarketDerivedBoom600Icon,\n    MarketDerivedBoom900Icon,\n    MarketDerivedBoom300Icon,\n    MarketDerivedBoom500Icon,\n    MarketDerivedBullIcon,\n    MarketDerivedCrash1000Icon,\n    MarketDerivedCrash600Icon,\n    MarketDerivedCrash900Icon,\n    MarketDerivedCrash300Icon,\n    MarketDerivedCrash500Icon,\n    MarketCommoditySilverusdIcon,\n    MarketCommodityGoldusdIcon,\n    MarketCommodityPalladiumusdIcon,\n    MarketCommodityPlatinumusdIcon,\n    MarketCryptocurrencyBtcusdIcon,\n    MarketCryptocurrencyEthusdIcon,\n    MarketDerivedEurBasketIcon,\n    MarketDerivedGbpBasketIcon,\n    MarketDerivedGoldBasketIcon,\n    MarketDerivedJump10Icon,\n    MarketDerivedJump100Icon,\n    MarketDerivedJump25Icon,\n    MarketDerivedJump50Icon,\n    MarketDerivedJump75Icon,\n    MarketDerivedStepIndices100Icon,\n    MarketDerivedStepIndices200Icon,\n    MarketDerivedStepIndices300Icon,\n    MarketDerivedStepIndices400Icon,\n    MarketDerivedStepIndices500Icon,\n    MarketDerivedUsdBasketIcon,\n    MarketDerivedVolatility101sIcon,\n    MarketDerivedVolatility1001sIcon,\n    MarketDerivedVolatility1501sIcon,\n    MarketDerivedVolatility2501sIcon,\n    MarketDerivedVolatility251sIcon,\n    MarketDerivedVolatility501sIcon,\n    MarketDerivedVolatility751sIcon,\n    MarketForexEuraudIcon,\n    MarketForexEurcadIcon,\n    MarketForexEurchfIcon,\n    MarketForexEurgbpIcon,\n    MarketForexEurjpyIcon,\n    MarketForexEurnzdIcon,\n    MarketForexEurusdIcon,\n    MarketForexGbpaudIcon,\n    MarketForexGbpcadIcon,\n    MarketForexGbpchfIcon,\n    MarketForexGbpjpyIcon,\n    MarketForexGbpnokIcon,\n    MarketForexGbpnzdIcon,\n    MarketForexGbpusdIcon,\n    MarketForexNzdjpnIcon,\n    MarketForexNzdusdIcon,\n    MarketForexUsdcadIcon,\n    MarketForexUsdchfIcon,\n    MarketForexUsdjpyIcon,\n    MarketForexUsdmxnIcon,\n    MarketForexUsdnokIcon,\n    MarketForexUsdplnIcon,\n    MarketForexUsdsekIcon,\n    MarketIndicesAustralia200Icon,\n    MarketIndicesEuro50Icon,\n    MarketIndicesFrance40Icon,\n    MarketIndicesGerman40Icon,\n    MarketIndicesHongKong50Icon,\n    MarketIndicesJapan225Icon,\n    MarketIndicesNetherlands25Icon,\n    MarketIndicesSwiss20Icon,\n    MarketIndicesUk100Icon,\n    MarketIndicesUs500Icon,\n    MarketIndicesUsTech100Icon,\n    MarketIndicesWallStreet30Icon,\n    MarketDerivedVolatility10Icon,\n    MarketDerivedVolatility100Icon,\n    MarketDerivedVolatility25Icon,\n    MarketDerivedVolatility50Icon,\n    MarketDerivedVolatility75Icon,\n} from '@deriv/quill-icons';\nimport type { IconTypes } from '@deriv/quill-icons';\n\nexport const marketIcons: {\n    [key: string]: IconTypes;\n} = {\n    frxAUDCAD: MarketForexAudcadIcon,\n    frxAUDCHF: MarketForexAudchfIcon,\n    frxAUDJPY: MarketForexAudjpyIcon,\n    frxAUDNZD: MarketForexAudnzdIcon,\n    frxAUDUSD: MarketForexAudusdIcon,\n    WLDAUD: MarketDerivedAudBasketIcon,\n    RDBEAR: MarketDerivedBearIcon,\n    BOOM1000: MarketDerivedBoom1000Icon,\n    BOOM600: MarketDerivedBoom600Icon,\n    BOOM900: MarketDerivedBoom900Icon,\n    BOOM300N: MarketDerivedBoom300Icon,\n    BOOM500: MarketDerivedBoom500Icon,\n    RDBULL: MarketDerivedBullIcon,\n    CRASH1000: MarketDerivedCrash1000Icon,\n    CRASH600: MarketDerivedCrash600Icon,\n    CRASH900: MarketDerivedCrash900Icon,\n    CRASH300N: MarketDerivedCrash300Icon,\n    CRASH500: MarketDerivedCrash500Icon,\n    frxXAGUSD: MarketCommoditySilverusdIcon,\n    frxXAUUSD: MarketCommodityGoldusdIcon,\n    frxXPDUSD: MarketCommodityPalladiumusdIcon,\n    frxXPTUSD: MarketCommodityPlatinumusdIcon,\n    cryBTCUSD: MarketCryptocurrencyBtcusdIcon,\n    cryETHUSD: MarketCryptocurrencyEthusdIcon,\n    WLDEUR: MarketDerivedEurBasketIcon,\n    WLDGBP: MarketDerivedGbpBasketIcon,\n    WLDXAU: MarketDerivedGoldBasketIcon,\n    JD10: MarketDerivedJump10Icon,\n    JD100: MarketDerivedJump100Icon,\n    JD25: MarketDerivedJump25Icon,\n    JD50: MarketDerivedJump50Icon,\n    JD75: MarketDerivedJump75Icon,\n    stpRNG: MarketDerivedStepIndices100Icon,\n    stpRNG2: MarketDerivedStepIndices200Icon,\n    stpRNG3: MarketDerivedStepIndices300Icon,\n    stpRNG4: MarketDerivedStepIndices400Icon,\n    stpRNG5: MarketDerivedStepIndices500Icon,\n    WLDUSD: MarketDerivedUsdBasketIcon,\n    '1HZ10V': MarketDerivedVolatility101sIcon,\n    '1HZ100V': MarketDerivedVolatility1001sIcon,\n    '1HZ150V': MarketDerivedVolatility1501sIcon,\n    '1HZ250V': MarketDerivedVolatility2501sIcon,\n    '1HZ25V': MarketDerivedVolatility251sIcon,\n    '1HZ50V': MarketDerivedVolatility501sIcon,\n    '1HZ75V': MarketDerivedVolatility751sIcon,\n    frxEURAUD: MarketForexEuraudIcon,\n    frxEURCAD: MarketForexEurcadIcon,\n    frxEURCHF: MarketForexEurchfIcon,\n    frxEURGBP: MarketForexEurgbpIcon,\n    frxEURJPY: MarketForexEurjpyIcon,\n    frxEURNZD: MarketForexEurnzdIcon,\n    frxEURUSD: MarketForexEurusdIcon,\n    frxGBPAUD: MarketForexGbpaudIcon,\n    frxGBPCAD: MarketForexGbpcadIcon,\n    frxGBPCHF: MarketForexGbpchfIcon,\n    frxGBPJPY: MarketForexGbpjpyIcon,\n    frxGBPNOK: MarketForexGbpnokIcon,\n    frxGBPNZD: MarketForexGbpnzdIcon,\n    frxGBPUSD: MarketForexGbpusdIcon,\n    frxNZDJPY: MarketForexNzdjpnIcon,\n    frxNZDUSD: MarketForexNzdusdIcon,\n    frxUSDCAD: MarketForexUsdcadIcon,\n    frxUSDCHF: MarketForexUsdchfIcon,\n    frxUSDJPY: MarketForexUsdjpyIcon,\n    frxUSDMXN: MarketForexUsdmxnIcon,\n    frxUSDNOK: MarketForexUsdnokIcon,\n    frxUSDPLN: MarketForexUsdplnIcon,\n    frxUSDSEK: MarketForexUsdsekIcon,\n    OTC_AS51: MarketIndicesAustralia200Icon,\n    OTC_SX5E: MarketIndicesEuro50Icon,\n    OTC_FCHI: MarketIndicesFrance40Icon,\n    OTC_GDAXI: MarketIndicesGerman40Icon,\n    OTC_HSI: MarketIndicesHongKong50Icon,\n    OTC_N225: MarketIndicesJapan225Icon,\n    OTC_AEX: MarketIndicesNetherlands25Icon,\n    OTC_SSMI: MarketIndicesSwiss20Icon,\n    OTC_FTSE: MarketIndicesUk100Icon,\n    OTC_SPC: MarketIndicesUs500Icon,\n    OTC_NDX: MarketIndicesUsTech100Icon,\n    OTC_DJI: MarketIndicesWallStreet30Icon,\n    R_10: MarketDerivedVolatility10Icon,\n    R_100: MarketDerivedVolatility100Icon,\n    R_25: MarketDerivedVolatility25Icon,\n    R_50: MarketDerivedVolatility50Icon,\n    R_75: MarketDerivedVolatility75Icon,\n} as const;\n","import React from 'react';\nimport { marketIcons } from 'AppV2/Utils/market-icons';\n\ntype TSymbolIconsMapper = {\n    symbol: string;\n};\n\nconst SymbolIconsMapper = ({ symbol }: TSymbolIconsMapper) => {\n    const iconSize = 'md';\n\n    const IconComponent = marketIcons[symbol as keyof typeof marketIcons];\n    return IconComponent ? <IconComponent iconSize={iconSize} /> : null;\n};\n\nexport default SymbolIconsMapper;\n","import React, { useState, useEffect, forwardRef, Ref } from 'react';\nimport { Tag, Text, useSnackbar } from '@deriv-com/quill-ui';\nimport { StandaloneStarFillIcon, StandaloneStarRegularIcon } from '@deriv/quill-icons';\nimport { Localize } from '@deriv/translations';\nimport SymbolIconsMapper from '../SymbolIconsMapper/symbol-icons-mapper';\nimport { ActiveSymbols } from '@deriv/api-types';\nimport clsx from 'clsx';\nimport { observer } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { useModulesStore } from 'Stores/useModulesStores';\nimport { clickAndKeyEventHandler } from '@deriv/shared';\n\ntype TMarketCategoryItem = {\n    item: ActiveSymbols[0];\n    selectedSymbol: string;\n    setSelectedSymbol: (input: string) => void;\n    setIsOpen: (input: boolean) => void;\n};\n\nconst MarketCategoryItem = forwardRef(\n    ({ item, selectedSymbol, setSelectedSymbol, setIsOpen }: TMarketCategoryItem, ref: Ref<HTMLDivElement>) => {\n        const [isFavorite, setIsFavorite] = useState(false);\n        const { onChange: onSymbolChange } = useTraderStore();\n        const { markets } = useModulesStore();\n        const { favoriteSymbols, setFavoriteSymbols, removeFavoriteSymbol } = markets;\n        const { addSnackbar } = useSnackbar();\n\n        useEffect(() => {\n            setIsFavorite(favoriteSymbols.includes(item.symbol));\n        }, [favoriteSymbols, item.symbol]);\n\n        const handleSelect = async (symbol: string) => {\n            setSelectedSymbol(symbol);\n            await onSymbolChange({ target: { name: 'symbol', value: symbol } });\n            setIsOpen(false);\n        };\n\n        const toggleFavorites = (symbol: string) => {\n            if (!symbol) return;\n            const symbolIndex = favoriteSymbols.indexOf(symbol);\n\n            if (symbolIndex !== -1) {\n                removeFavoriteSymbol(symbol);\n                addSnackbar({\n                    icon: <StandaloneStarRegularIcon fill='var(--component-snackbar-icon-neutral)' iconSize='sm' />,\n                    message: <Localize i18n_default_text='Removed from favourites' />,\n                    hasCloseButton: false,\n                });\n            } else {\n                setFavoriteSymbols([...favoriteSymbols, symbol]);\n                addSnackbar({\n                    icon: <StandaloneStarFillIcon fill='var(--core-color-solid-mustard-700)' iconSize='sm' />,\n                    message: <Localize i18n_default_text='Added to favourites' />,\n                    hasCloseButton: false,\n                });\n            }\n            setIsFavorite(favoriteSymbols.includes(symbol));\n        };\n\n        const handleSelectDecorator = (e?: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>) => {\n            const symbol = (e?.currentTarget as HTMLElement).getAttribute('data-symbol') || '';\n            clickAndKeyEventHandler(() => handleSelect(symbol), e);\n        };\n\n        const toggleFavoritesDecorator = (e?: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>) => {\n            const symbol = (e?.currentTarget as HTMLElement).getAttribute('data-symbol') || '';\n            clickAndKeyEventHandler(() => toggleFavorites(symbol), e);\n        };\n\n        return (\n            <div\n                className={clsx('market-category-item', {\n                    'market-category-item--selected': selectedSymbol === item.symbol,\n                })}\n                ref={ref}\n            >\n                <span\n                    className='market-category-item-left'\n                    data-symbol={item.symbol}\n                    onClick={handleSelectDecorator}\n                    onKeyDown={handleSelectDecorator}\n                >\n                    <SymbolIconsMapper symbol={item.symbol} />\n                    <Text\n                        size='sm'\n                        className={clsx('market-category-item-symbol', {\n                            'market-category-item-symbol--selected': selectedSymbol === item.symbol,\n                        })}\n                    >\n                        <span>{item.display_name}</span>\n                    </Text>\n                    {!item.exchange_is_open && (\n                        <Tag\n                            label={<Localize key='exchange-closed' i18n_default_text='CLOSED' />}\n                            color='error'\n                            variant={selectedSymbol === item.symbol ? 'outline' : 'fill'}\n                            showIcon={false}\n                        />\n                    )}\n                </span>\n                <span onClick={toggleFavoritesDecorator} onKeyDown={toggleFavoritesDecorator} data-symbol={item.symbol}>\n                    {isFavorite ? (\n                        <StandaloneStarFillIcon fill='var(--core-color-solid-mustard-700)' iconSize='sm' />\n                    ) : (\n                        <StandaloneStarRegularIcon\n                            fill={\n                                selectedSymbol === item.symbol\n                                    ? 'var(--semantic-color-slate-solid-textIcon-inverse-highest)'\n                                    : 'var(--semantic-color-monochrome-textIcon-normal-mid)'\n                            }\n                            iconSize='sm'\n                        />\n                    )}\n                </span>\n            </div>\n        );\n    }\n);\n\nMarketCategoryItem.displayName = 'MarketCategoryItem';\n\nexport default observer(MarketCategoryItem);\n","import './market-category-item.scss';\nimport MarketCategoryItem from './market-category-item';\n\nexport default MarketCategoryItem;\n","import React from 'react';\nimport { Text } from '@deriv-com/quill-ui';\nimport { StandaloneStarFillIcon } from '@deriv/quill-icons';\nimport { Localize } from '@deriv/translations';\n\nconst NoFavoriteSymbols = () => (\n    <div className='favorite-symbols--no-fav'>\n        <StandaloneStarFillIcon fill='var(--semantic-color-slate-solid-surface-static-midLowest)' iconSize='2xl' />\n        <Text size='lg' bold color='quill-typography__color--subtle'>\n            <Localize i18n_default_text='No favourites' />\n        </Text>\n        <Text size='sm' color='quill-typography__color--subtle'>\n            <Localize i18n_default_text='Your favourite markets will appear here.' />\n        </Text>\n    </div>\n);\n\nexport default NoFavoriteSymbols;\n","import React from 'react';\nimport MarketCategoryItem from '../MarketCategoryItem';\nimport { useGetFavoriteSymbols } from 'AppV2/Hooks/useGetFavoriteSymbols';\nimport NoFavoriteSymbols from './no-favorite-symbols';\nimport { observer } from '@deriv/stores';\n\ntype TFavoriteSymbols = {\n    selectedSymbol: string;\n    setSelectedSymbol: (input: string) => void;\n    setIsOpen: (input: boolean) => void;\n};\n\nconst FavoriteSymbols = observer(({ selectedSymbol, setSelectedSymbol, setIsOpen }: TFavoriteSymbols) => {\n    const favoriteSymbols = useGetFavoriteSymbols();\n\n    return (\n        <React.Fragment>\n            {favoriteSymbols.length > 0 ? (\n                <div className='favorite-symbols__container'>\n                    {favoriteSymbols.map(symbol => (\n                        <MarketCategoryItem\n                            key={symbol?.display_name}\n                            item={symbol}\n                            selectedSymbol={selectedSymbol}\n                            setSelectedSymbol={setSelectedSymbol}\n                            setIsOpen={setIsOpen}\n                        />\n                    ))}\n                </div>\n            ) : (\n                <NoFavoriteSymbols />\n            )}\n        </React.Fragment>\n    );\n});\n\nexport default FavoriteSymbols;\n","import './favorite-symbols.scss';\nimport FavoriteSymbols from './favorite-symbols';\n\nexport default FavoriteSymbols;\n","import React, { useMemo } from 'react';\nimport useActiveSymbols from 'AppV2/Hooks/useActiveSymbols';\nimport { ActiveSymbols } from '@deriv/api-types';\nimport sortSymbols from 'AppV2/Utils/sort-symbols-utils';\nimport { useModulesStore } from 'Stores/useModulesStores';\n\nexport const useGetFavoriteSymbols = () => {\n    const { activeSymbols } = useActiveSymbols();\n    const { markets } = useModulesStore();\n    const { favoriteSymbols } = markets;\n\n    const clientFavoriteList = useMemo(() => {\n        return favoriteSymbols\n            ?.map(client_fav_symbol => activeSymbols.find(symbol_info => symbol_info.symbol === client_fav_symbol))\n            .filter((symbol_info): symbol_info is ActiveSymbols[0] => symbol_info !== undefined);\n    }, [activeSymbols, favoriteSymbols]);\n\n    const sortedFavoriteSymbols = useMemo(() => {\n        return sortSymbols(clientFavoriteList);\n    }, [clientFavoriteList]);\n\n    return sortedFavoriteSymbols;\n};\n","import React, { useRef, useEffect } from 'react';\nimport { MarketGroup } from 'AppV2/Utils/symbol-categories-utils';\nimport { Tab, Text, CaptionText } from '@deriv-com/quill-ui';\nimport MarketCategoryItem from '../MarketCategoryItem';\nimport { ActiveSymbols } from '@deriv/api-types';\nimport FavoriteSymbols from '../FavoriteSymbols';\nimport { usePrevious } from '@deriv/components';\n\ntype TMarketCategory = {\n    category: MarketGroup;\n    selectedSymbol: string;\n    setSelectedSymbol: (input: string) => void;\n    setIsOpen: (input: boolean) => void;\n    isOpen: boolean;\n};\n\nconst MarketCategory = ({ category, selectedSymbol, setSelectedSymbol, setIsOpen, isOpen }: TMarketCategory) => {\n    const itemRefs = useRef<{ [key: string]: HTMLDivElement | null }>({});\n    const prevSymbol = usePrevious(selectedSymbol);\n\n    useEffect(() => {\n        if (isOpen && category.market === 'all' && selectedSymbol && itemRefs.current[selectedSymbol] && !prevSymbol) {\n            itemRefs.current[selectedSymbol]?.scrollIntoView({ block: 'center' });\n        }\n    }, [isOpen, category.market, selectedSymbol, prevSymbol]);\n\n    return (\n        <Tab.Panel key={category.market_display_name}>\n            {category.market !== 'favorites' ? (\n                Object.entries(category.subgroups).map(([subgroupKey, subgroup]) => (\n                    <div key={subgroupKey} className='market-category-content__container'>\n                        {subgroupKey !== 'none' && (\n                            <div className='market-category-title__container'>\n                                <Text size='sm' className='market-category-title'>\n                                    {category.subgroups[subgroupKey].subgroup_display_name}\n                                </Text>\n                            </div>\n                        )}\n                        {Object.entries(subgroup.submarkets).map(([submarketKey, submarket]) => (\n                            <div className='market-category-body' key={submarketKey}>\n                                <CaptionText size='sm' className='market-category-subtitle'>\n                                    {submarket.submarket_display_name}\n                                </CaptionText>\n                                <div className='market-category-items'>\n                                    {submarket.items.map((item: ActiveSymbols[0]) => (\n                                        <MarketCategoryItem\n                                            key={item.display_name}\n                                            ref={\n                                                item.symbol === selectedSymbol\n                                                    ? el => (itemRefs.current[item.symbol] = el)\n                                                    : undefined\n                                            }\n                                            item={item}\n                                            selectedSymbol={selectedSymbol}\n                                            setSelectedSymbol={setSelectedSymbol}\n                                            setIsOpen={setIsOpen}\n                                        />\n                                    ))}\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                ))\n            ) : (\n                <div>\n                    <FavoriteSymbols\n                        selectedSymbol={selectedSymbol}\n                        setSelectedSymbol={setSelectedSymbol}\n                        setIsOpen={setIsOpen}\n                    />\n                </div>\n            )}\n        </Tab.Panel>\n    );\n};\n\nexport default MarketCategory;\n","import './market-category.scss';\nimport MarketCategory from './market-category';\n\nexport default MarketCategory;\n","import React from 'react';\nimport { Tab } from '@deriv-com/quill-ui';\nimport { Localize } from '@deriv/translations';\nimport { MarketGroup } from 'AppV2/Utils/symbol-categories-utils';\n\ntype TMarketCategoryTab = {\n    category: MarketGroup;\n};\n\nconst MarketCategoryTab = ({ category }: TMarketCategoryTab) => {\n    return (\n        <Tab.Trigger key={category.market_display_name}>\n            {category.market === 'indices' ? (\n                <Localize i18n_default_text='Stocks & indices' />\n            ) : (\n                category.market_display_name\n            )}\n        </Tab.Trigger>\n    );\n};\n\nexport default MarketCategoryTab;\n","import React from 'react';\nimport { Tab } from '@deriv-com/quill-ui';\nimport useActiveSymbols from 'AppV2/Hooks/useActiveSymbols';\nimport { categorizeSymbols } from 'AppV2/Utils/symbol-categories-utils';\nimport MarketCategory from '../MarketCategory';\nimport MarketCategoryTab from '../MarketCategoryTab/market-category-tab';\nimport { observer } from '@deriv/stores';\n\ntype TMarketCategories = {\n    selectedSymbol: string;\n    setSelectedSymbol: (input: string) => void;\n    setIsOpen: (input: boolean) => void;\n    isOpen: boolean;\n    marketCategoriesRef: React.RefObject<HTMLDivElement>;\n};\n\nconst MarketCategories = observer(\n    ({ selectedSymbol, setSelectedSymbol, setIsOpen, isOpen, marketCategoriesRef }: TMarketCategories) => {\n        const { activeSymbols } = useActiveSymbols();\n        const categorizedSymbols = categorizeSymbols(activeSymbols);\n\n        return (\n            <React.Fragment>\n                <Tab.List>\n                    {Object.values(categorizedSymbols).map(category => (\n                        <MarketCategoryTab key={category.market} category={category} />\n                    ))}\n                </Tab.List>\n                <Tab.Content className='market-categories__list' ref={marketCategoriesRef}>\n                    {Object.values(categorizedSymbols).map(category => (\n                        <MarketCategory\n                            key={category.market}\n                            category={category}\n                            selectedSymbol={selectedSymbol}\n                            setSelectedSymbol={setSelectedSymbol}\n                            setIsOpen={setIsOpen}\n                            isOpen={isOpen}\n                        />\n                    ))}\n                </Tab.Content>\n            </React.Fragment>\n        );\n    }\n);\n\nexport default MarketCategories;\n","import './market-categories.scss';\nimport MarketCategories from './market-categories';\n\nexport default MarketCategories;\n","import { Text } from '@deriv-com/quill-ui';\nimport { Localize } from '@deriv/translations';\nimport React from 'react';\n\nconst SymbolNotFound = ({ searchTerm }: { searchTerm?: string }) => {\n    return (\n        <div className='symbol-not-found__container'>\n            <div className='symbol-not-found__content'>\n                <Text size='lg' bold color='quill-typography__color--subtle'>\n                    <Localize i18n_default_text='No results for {{searchTerm}}' values={{ searchTerm }} />\n                </Text>\n                <Text size='sm' color='quill-typography__color--subtle'>\n                    <Localize i18n_default_text='Try searching for something else.' />\n                </Text>\n            </div>\n        </div>\n    );\n};\n\nexport default SymbolNotFound;\n","import './symbol-not-found.scss';\nimport SymbolNotFound from './symbol-not-found';\n\nexport default SymbolNotFound;\n","import React from 'react';\nimport { Text } from '@deriv-com/quill-ui';\nimport { Localize } from '@deriv/translations';\nimport SymbolNotFound from '../SymbolNotFound';\nimport { useGetSymbolSearchResults } from 'AppV2/Hooks/useGetSymbolSearchResults';\nimport { observer } from '@deriv/stores';\nimport MarketCategoryItem from '../MarketCategoryItem';\n\ntype TSymbolSearchResults = {\n    searchValue: string;\n    setSearchValue: (input: string) => void;\n    setIsOpen: (input: boolean) => void;\n    setSelectedSymbol: (input: string) => void;\n};\nconst SymbolSearchResults = observer(({ searchValue, setIsOpen, setSelectedSymbol }: TSymbolSearchResults) => {\n    const searchResults = useGetSymbolSearchResults(searchValue);\n\n    return (\n        <div className='symbol-search-results__container'>\n            {searchValue === '' && (\n                <Text size='sm' color='quill-typography__color--subtle' className='symbol-search-results--suggestion'>\n                    <Localize i18n_default_text='Try searching for markets or keywords' />\n                </Text>\n            )}\n            {searchValue !== '' &&\n                (searchResults.length > 0 ? (\n                    searchResults.map(symbol => (\n                        <MarketCategoryItem\n                            key={symbol?.display_name}\n                            item={symbol}\n                            selectedSymbol={''}\n                            setSelectedSymbol={setSelectedSymbol}\n                            setIsOpen={setIsOpen}\n                        />\n                    ))\n                ) : (\n                    <SymbolNotFound searchTerm={searchValue} />\n                ))}\n        </div>\n    );\n});\n\nexport default SymbolSearchResults;\n","import './symbol-search-results.scss';\nimport SymbolSearchResults from './symbol-search-results';\n\nexport default SymbolSearchResults;\n","import React, { useMemo } from 'react';\nimport useActiveSymbols from 'AppV2/Hooks/useActiveSymbols';\nimport sortSymbols from 'AppV2/Utils/sort-symbols-utils';\n\nexport const useGetSymbolSearchResults = (searchValue: string) => {\n    const { activeSymbols } = useActiveSymbols();\n\n    const searchResults = useMemo(() => {\n        if (searchValue.trim() === '') return [];\n        return activeSymbols.filter(symbol => symbol.display_name.toLowerCase().includes(searchValue.toLowerCase()));\n    }, [searchValue, activeSymbols]);\n\n    const sortedSearchResults = useMemo(() => {\n        return sortSymbols(searchResults);\n    }, [searchResults]);\n\n    return sortedSearchResults;\n};\n","import { ActionSheet, Tab } from '@deriv-com/quill-ui';\nimport { observer } from '@deriv/stores';\nimport React, { useState, useEffect, useRef } from 'react';\nimport SymbolsSearchField from '../SymbolsSearchField';\nimport MarketCategories from '../MarketCategories';\nimport SymbolSearchResults from '../SymbolSearchResults';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { sendMarketTypeToAnalytics } from '../../../Analytics';\n\ntype TActiveSymbolsList = {\n    isOpen: boolean;\n    setIsOpen: (input: boolean) => void;\n};\n\nconst ActiveSymbolsList = observer(({ isOpen, setIsOpen }: TActiveSymbolsList) => {\n    const { setTickData, setDigitStats, symbol, contract_type } = useTraderStore();\n    const [isSearching, setIsSearching] = useState(false);\n    const [selectedSymbol, setSelectedSymbol] = useState(symbol);\n    const [searchValue, setSearchValue] = useState('');\n\n    const marketCategoriesRef = useRef<HTMLDivElement>(null);\n\n    useEffect(() => {\n        setSelectedSymbol(symbol);\n        setTickData(null);\n        setDigitStats([]);\n    }, [setDigitStats, setTickData, symbol]);\n\n    return (\n        <React.Fragment>\n            <ActionSheet.Root isOpen={isOpen} onClose={() => setIsOpen(false)}>\n                <ActionSheet.Portal shouldCloseOnDrag fullHeightOnOpen>\n                    <SymbolsSearchField\n                        searchValue={searchValue}\n                        setSearchValue={setSearchValue}\n                        isSearching={isSearching}\n                        setIsSearching={setIsSearching}\n                    />\n                    <Tab.Container\n                        contentStyle='hug'\n                        size='md'\n                        className='active-symbols-list__content'\n                        selectedTabIndex={1}\n                        onChangeTab={index => {\n                            if (index !== 1) {\n                                marketCategoriesRef.current?.scrollTo({ top: 0 });\n                            }\n                        }}\n                    >\n                        {isSearching ? (\n                            <SymbolSearchResults\n                                searchValue={searchValue}\n                                setSearchValue={setSearchValue}\n                                setIsOpen={setIsOpen}\n                                setSelectedSymbol={(symbol: string) => {\n                                    sendMarketTypeToAnalytics(symbol, contract_type);\n                                    setSelectedSymbol(symbol);\n                                }}\n                            />\n                        ) : (\n                            <MarketCategories\n                                selectedSymbol={selectedSymbol}\n                                setSelectedSymbol={(symbol: string) => {\n                                    sendMarketTypeToAnalytics(symbol, contract_type);\n                                    setSelectedSymbol(symbol);\n                                }}\n                                setIsOpen={setIsOpen}\n                                isOpen={isOpen}\n                                marketCategoriesRef={marketCategoriesRef}\n                            />\n                        )}\n                    </Tab.Container>\n                </ActionSheet.Portal>\n            </ActionSheet.Root>\n        </React.Fragment>\n    );\n});\n\nexport default ActiveSymbolsList;\n","import './active-symbols-list.scss';\nimport ActiveSymbolsList from './active-symbols-list';\n\nexport default ActiveSymbolsList;\n","import React, { useState } from 'react';\nimport ActiveSymbolsList from '../ActiveSymbolsList';\nimport useActiveSymbols from 'AppV2/Hooks/useActiveSymbols';\nimport SymbolIconsMapper from '../SymbolIconsMapper/symbol-icons-mapper';\nimport { CaptionText, Skeleton, Tag, Text } from '@deriv-com/quill-ui';\nimport { Localize } from '@deriv/translations';\nimport { LabelPairedChevronDownMdRegularIcon } from '@deriv/quill-icons';\nimport { observer } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\nconst MarketSelector = observer(() => {\n    const [isOpen, setIsOpen] = useState(false);\n    const { activeSymbols } = useActiveSymbols();\n    const { symbol: storeSymbol, tick_data, is_market_closed } = useTraderStore();\n\n    const currentSymbol = activeSymbols.find(({ symbol }) => symbol === storeSymbol);\n    const { pip_size, quote } = tick_data ?? {};\n    const current_spot = quote?.toFixed(pip_size);\n    const current_spot_replacement = is_market_closed ? (\n        <Text>-</Text>\n    ) : (\n        <Skeleton.Square height={18} width={64} rounded />\n    );\n\n    // For closed markets exchange_is_open === 0\n    if (typeof currentSymbol?.exchange_is_open === 'undefined')\n        return <Skeleton.Square height={42} width={240} rounded />;\n\n    return (\n        <React.Fragment>\n            <div className='market-selector__container' onClick={() => setIsOpen(true)}>\n                <div className='market-selector'>\n                    <SymbolIconsMapper symbol={storeSymbol} />\n                    <div className='market-selector-info'>\n                        <div className='market-selector-info__label'>\n                            <Text bold>{currentSymbol?.display_name}</Text>\n                            {!currentSymbol?.exchange_is_open && (\n                                <Tag\n                                    label={<Localize key='closed' i18n_default_text='CLOSED' />}\n                                    color='error'\n                                    variant='fill'\n                                    showIcon={false}\n                                    size='sm'\n                                />\n                            )}\n                            <LabelPairedChevronDownMdRegularIcon fill='var(--component-textIcon-normal-default' />\n                        </div>\n                        {current_spot ? (\n                            <CaptionText className='market-selector-info__price'>{current_spot}</CaptionText>\n                        ) : (\n                            current_spot_replacement\n                        )}\n                    </div>\n                </div>\n            </div>\n            <ActiveSymbolsList isOpen={isOpen} setIsOpen={setIsOpen} />\n        </React.Fragment>\n    );\n});\n\nexport default MarketSelector;\n","import './market-selector.scss';\nimport MarketSelector from './market-selector';\n\nexport default MarketSelector;\n","import React from 'react';\nimport { Button, CaptionText, IconButton, Text } from '@deriv-com/quill-ui';\nimport { LabelPairedChevronsUpXlBoldIcon, LabelPairedXmarkSmBoldIcon } from '@deriv/quill-icons';\nimport { Localize } from '@deriv/translations';\nimport { TooltipRenderProps } from 'react-joyride';\nimport { useSwipeable } from 'react-swipeable';\n\nexport interface GuideTooltipProps extends TooltipRenderProps {\n    setStepIndex: React.Dispatch<React.SetStateAction<number>>;\n}\n\nconst GuideTooltip = ({ isLastStep, primaryProps, skipProps, step, tooltipProps, setStepIndex }: GuideTooltipProps) => {\n    const swipe_handlers = useSwipeable({\n        onSwipedUp: () => {\n            document.querySelector('.trade__chart')?.scrollIntoView();\n            setStepIndex((prev: number) => prev + 1);\n        },\n        preventDefaultTouchmoveEvent: true,\n        trackTouch: true,\n        trackMouse: true,\n    });\n\n    if (step.title === 'scroll-icon') {\n        return (\n            <div {...swipe_handlers} className='guide-tooltip__wrapper-scroll'>\n                <LabelPairedChevronsUpXlBoldIcon className='guide-tooltip--bounce' />\n                <Text size='sm' bold className='guide-tooltip__wrapper-scroll-text'>\n                    <Localize i18n_default_text='Swipe up to see the chart' />\n                </Text>\n            </div>\n        );\n    }\n\n    return (\n        <div {...tooltipProps} className='guide-tooltip__wrapper'>\n            <div>\n                {step.title && (\n                    <div className='guide-tooltip__header'>\n                        <CaptionText bold className='guide-tooltip__header__title'>\n                            {step.title}\n                        </CaptionText>\n                        <IconButton\n                            onClick={skipProps.onClick}\n                            icon={\n                                <LabelPairedXmarkSmBoldIcon\n                                    fill='var(--component-textIcon-inverse-prominent)'\n                                    key='close-button'\n                                />\n                            }\n                            className='guide-tooltip__close'\n                            size='sm'\n                            color='white-black'\n                            variant='tertiary'\n                        />\n                    </div>\n                )}\n                {step.content && <CaptionText className='guide-tooltip__content'>{step.content}</CaptionText>}\n            </div>\n            <Button\n                onClick={e => {\n                    setStepIndex((prev: number) => prev + 1);\n                    primaryProps.onClick(e);\n                }}\n                color='white-black'\n                className='guide-tooltip__button'\n                variant='secondary'\n                size='sm'\n                label={isLastStep ? <Localize i18n_default_text='Done' /> : <Localize i18n_default_text='Next' />}\n            />\n        </div>\n    );\n};\n\nexport default GuideTooltip;\n","import React from 'react';\nimport { Step } from 'react-joyride';\nimport { Localize } from '@deriv/translations';\n\nconst STEPS = [\n    {\n        content: <Localize i18n_default_text='Scroll left or right to explore trade types.' />,\n        offset: 0,\n        spotlightPadding: 2,\n        target: '.trade__trade-types',\n        title: <Localize i18n_default_text='Explore trade types (1/6)' />,\n    },\n    {\n        content: <Localize i18n_default_text='View available markets here.' />,\n        offset: 4,\n        placement: 'bottom-start' as Step['placement'],\n        spotlightPadding: 8,\n        target: '.market-selector__container',\n        title: <Localize i18n_default_text='Choose a market (2/6)' />,\n    },\n    {\n        content: <Localize i18n_default_text='Specify your trade parameters.' />,\n        offset: 4,\n        spotlightPadding: 8,\n        target: '.trade-params',\n        title: <Localize i18n_default_text='Open your trade (3/6)' />,\n    },\n    {\n        content: '',\n        disableBeacon: false,\n        offset: 0,\n        spotlightPadding: 0,\n        styles: {\n            spotlight: {\n                display: 'none',\n            },\n            arrow: {\n                display: 'none',\n            },\n        },\n        target: '#react-joyride-portal',\n        title: 'scroll-icon',\n    },\n    {\n        content: <Localize i18n_default_text='Track market trends with our interactive charts.' />,\n        spotlightPadding: 8,\n        offset: 4,\n        target: '.trade__chart-tooltip',\n        title: <Localize i18n_default_text='Analyse with charts (4/6)' />,\n        placement: 'bottom' as Step['placement'],\n    },\n    {\n        content: <Localize i18n_default_text='Scroll left or right to adjust your trade parameters.' />,\n        disableScrolling: false,\n        offset: -4,\n        target: '.trade__parameter',\n        title: <Localize i18n_default_text='Make quick adjustments (5/6)' />,\n    },\n    {\n        content: <Localize i18n_default_text='View your positions here.' />,\n        offset: -4,\n        target: '.user-guide__anchor',\n        title: <Localize i18n_default_text='Check your positions (6/6)' />,\n    },\n];\n\nexport default STEPS;\n","import React from 'react';\nimport Joyride, { CallBackProps, STATUS } from 'react-joyride';\nimport GuideTooltip from './guide-tooltip';\nimport STEPS from './steps-config';\n\ntype TGuideContainerProps = {\n    should_run: boolean;\n    onFinishGuide: () => void;\n};\n\ntype TFinishedStatuses = CallBackProps['status'][];\n\nconst GuideContainer = ({ should_run, onFinishGuide }: TGuideContainerProps) => {\n    const [step_index, setStepIndex] = React.useState(0);\n\n    const callbackHandle = (data: CallBackProps) => {\n        const { status, step, index } = data;\n        if (index === 0) {\n            step.disableBeacon = true;\n        }\n        const finished_statuses: TFinishedStatuses = [STATUS.FINISHED, STATUS.SKIPPED];\n\n        if (finished_statuses.includes(status)) onFinishGuide();\n    };\n\n    return (\n        <Joyride\n            continuous\n            callback={callbackHandle}\n            disableCloseOnEsc\n            disableOverlayClose\n            disableScrolling\n            floaterProps={{\n                styles: {\n                    arrow: {\n                        length: 4,\n                        spread: 8,\n                        display: step_index === 3 ? 'none' : 'inline-flex',\n                    },\n                },\n            }}\n            run={should_run}\n            showSkipButton\n            steps={STEPS}\n            spotlightPadding={0}\n            scrollToFirstStep\n            styles={{\n                options: {\n                    arrowColor: 'var(--component-textIcon-normal-prominent)',\n                    overlayColor: 'var(--core-color-opacity-black-600)',\n                },\n                spotlight: {\n                    borderRadius: 'unset',\n                },\n            }}\n            stepIndex={step_index}\n            tooltipComponent={props => <GuideTooltip {...props} setStepIndex={setStepIndex} />}\n        />\n    );\n};\n\nexport default React.memo(GuideContainer);\n","import React from 'react';\nimport clsx from 'clsx';\nimport { Skeleton } from '@deriv-com/quill-ui';\nimport { getUrlBase } from '@deriv/shared';\nimport { Localize } from '@deriv/translations';\nimport { ASPECT_RATIO } from 'AppV2/Utils/layout-utils';\n\ntype TOnboardingVideoProps = {\n    type: 'trade_page' | 'positions_page' | 'trade_page_dark' | 'positions_page_dark';\n};\n\nconst OnboardingVideo = ({ type }: TOnboardingVideoProps) => {\n    const [is_loading, setIsLoading] = React.useState(true);\n\n    // memoize file paths for videos and open the modal only after we get them\n    const getVideoSource = React.useCallback(\n        (extension: string) =>\n            getUrlBase(`/public/videos/user-onboarding-guide-${type.replaceAll('_', '-')}.${extension}`),\n        [type]\n    );\n    const mp4_src = React.useMemo(() => getVideoSource('mp4'), [getVideoSource]);\n\n    return (\n        <div className={clsx('guide__player__wrapper', is_loading && 'guide__player__wrapper--is-loading')}>\n            {is_loading && <Skeleton.Square height={`calc(100vw * ${ASPECT_RATIO})`} />}\n            <video\n                autoPlay\n                className='guide__player'\n                data-testid='dt_onboarding_guide_video'\n                muted\n                loop\n                onLoadedData={() => setIsLoading(false)}\n                playsInline\n                preload='auto'\n            >\n                {/* a browser will select a source with extension it recognizes */}\n                <source src={mp4_src} type='video/mp4' />\n                <Localize i18n_default_text='Unfortunately, your browser does not support the video.' />\n            </video>\n        </div>\n    );\n};\n\nexport default OnboardingVideo;\n","import React from 'react';\nimport { Modal } from '@deriv-com/quill-ui';\nimport { useLocalStorageData } from '@deriv/hooks';\nimport { Localize } from '@deriv/translations';\nimport GuideContainer from './guide-container';\nimport OnboardingVideo from './onboarding-video';\n\ntype TOnboardingGuideProps = {\n    callback?: () => void;\n    is_dark_mode_on?: boolean;\n    type?: 'trade_page' | 'positions_page';\n};\n\nconst OnboardingGuide = ({ type = 'trade_page', is_dark_mode_on, callback }: TOnboardingGuideProps) => {\n    const [is_modal_open, setIsModalOpen] = React.useState(false);\n    const [should_run_guide, setShouldRunGuide] = React.useState(false);\n    const guide_timeout_ref = React.useRef<ReturnType<typeof setTimeout>>();\n    const is_button_clicked_ref = React.useRef(false);\n\n    const [guide_dtrader_v2, setGuideDtraderV2] = useLocalStorageData<Record<string, boolean>>('guide_dtrader_v2', {\n        trade_types_selection: false,\n        trade_page: false,\n        positions_page: false,\n    });\n\n    const is_trade_page_guide = type === 'trade_page';\n\n    const onFinishGuide = React.useCallback(() => {\n        setShouldRunGuide(false);\n        setGuideDtraderV2({ ...guide_dtrader_v2, [type]: true });\n        callback?.();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [setGuideDtraderV2]);\n\n    const onGuideSkip = () => {\n        if (is_button_clicked_ref.current) return;\n        onFinishGuide();\n        setIsModalOpen(false);\n    };\n\n    const onGuideStart = () => {\n        is_button_clicked_ref.current = true;\n        setShouldRunGuide(true);\n        setIsModalOpen(false);\n    };\n\n    const modal_content = {\n        image: <OnboardingVideo type={is_dark_mode_on ? `${type}_dark` : type} />,\n        title: <Localize i18n_default_text='View your positions' />,\n        content: (\n            <Localize i18n_default_text='You can view your open and closed positions here. Tap an item for more details.' />\n        ),\n        button_label: <Localize i18n_default_text='Got it' />,\n        primaryButtonCallback: onGuideSkip,\n        ...(is_trade_page_guide\n            ? {\n                  title: <Localize i18n_default_text='Welcome to the new Deriv Trader' />,\n                  content: (\n                      <Localize i18n_default_text='Enjoy a smoother, more intuitive trading experience. Here’s a quick tour to get you started.' />\n                  ),\n                  button_label: <Localize i18n_default_text=\"Let's begin\" />,\n                  primaryButtonCallback: onGuideStart,\n              }\n            : {}),\n    };\n\n    React.useEffect(() => {\n        if (!guide_dtrader_v2?.[type]) guide_timeout_ref.current = setTimeout(() => setIsModalOpen(true), 800);\n\n        return () => clearTimeout(guide_timeout_ref.current);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [guide_dtrader_v2?.[type]]);\n\n    return (\n        <React.Fragment>\n            <Modal\n                isOpened={is_modal_open}\n                isNonExpandable\n                isMobile\n                showHandleBar\n                shouldCloseModalOnSwipeDown\n                toggleModal={onGuideSkip}\n                primaryButtonLabel={modal_content.button_label}\n                primaryButtonCallback={modal_content.primaryButtonCallback}\n            >\n                <Modal.Header image={modal_content.image} title={modal_content.title} />\n                <Modal.Body>{modal_content.content}</Modal.Body>\n            </Modal>\n            {is_trade_page_guide && <GuideContainer should_run={should_run_guide} onFinishGuide={onFinishGuide} />}\n        </React.Fragment>\n    );\n};\n\nexport default React.memo(OnboardingGuide);\n","import './onboarding-guide.scss';\nimport OnboardingGuide from './onboarding-guide';\n\nexport default OnboardingGuide;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { CaptionText } from '@deriv-com/quill-ui';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { getLocalizedBasis } from '@deriv/shared';\nimport { Money } from '@deriv/components';\n\ntype TPurchaseButtonContent = {\n    has_no_button_content?: boolean;\n    info: ReturnType<typeof useTraderStore>['proposal_info'][0] | Record<string, never>;\n    is_reverse?: boolean;\n} & Pick<\n    ReturnType<typeof useTraderStore>,\n    'currency' | 'has_open_accu_contract' | 'is_multiplier' | 'is_vanilla' | 'is_turbos'\n>;\n\nconst PurchaseButtonContent = ({\n    currency,\n    has_open_accu_contract,\n    has_no_button_content,\n    info,\n    is_multiplier,\n    is_turbos,\n    is_vanilla,\n    is_reverse,\n}: TPurchaseButtonContent) => {\n    if (has_no_button_content) return null;\n\n    const { payout, stake } = getLocalizedBasis();\n\n    const getAmount = () => {\n        const { stake, obj_contract_basis } = info;\n        return is_multiplier ? stake : obj_contract_basis?.value;\n    };\n    const getTextBasis = () => (is_multiplier ? stake : payout);\n\n    const text_basis = getTextBasis();\n    const amount = getAmount();\n    const is_content_empty = !text_basis || !amount;\n\n    return (\n        <CaptionText\n            size='sm'\n            className={clsx(\n                'purchase-button__information__wrapper',\n                is_reverse && 'purchase-button__information__wrapper--reverse',\n                is_content_empty && 'purchase-button__information__wrapper--disabled-placeholder'\n            )}\n            data-testid='dt_purchase_button_wrapper'\n        >\n            {!is_content_empty && (\n                <React.Fragment>\n                    <CaptionText\n                        as='span'\n                        size='sm'\n                        className={clsx(!has_open_accu_contract && 'purchase-button__information__item')}\n                        color='quill-typography__color--prominent'\n                    >\n                        {text_basis}\n                    </CaptionText>\n                    <CaptionText\n                        as='span'\n                        size='sm'\n                        className={clsx(!has_open_accu_contract && 'purchase-button__information__item')}\n                        color='quill-typography__color--prominent'\n                    >\n                        <Money\n                            amount={amount}\n                            currency={currency}\n                            should_format={!is_turbos && !is_vanilla}\n                            show_currency\n                        />\n                    </CaptionText>\n                </React.Fragment>\n            )}\n        </CaptionText>\n    );\n};\n\nexport default PurchaseButtonContent;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { observer } from 'mobx-react-lite';\nimport { useStore } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { Button, useNotifications } from '@deriv-com/quill-ui';\nimport { useDevice } from '@deriv-com/ui';\nimport {\n    getCardLabelsV2,\n    getContractTypeDisplay,\n    getIndicativePrice,\n    hasContractEntered,\n    isAccumulatorContract,\n    isOpen,\n    isValidToSell,\n    MT5_ACCOUNT_STATUS,\n} from '@deriv/shared';\nimport { useMFAccountStatus } from '@deriv/hooks';\nimport PurchaseButtonContent from './purchase-button-content';\nimport { getTradeTypeTabsList } from 'AppV2/Utils/trade-params-utils';\nimport { StandaloneStopwatchRegularIcon } from '@deriv/quill-icons';\nimport { CSSTransition } from 'react-transition-group';\nimport { getDisplayedContractTypes } from 'AppV2/Utils/trade-types-utils';\nimport { usePrevious } from '@deriv/components';\nimport { checkIsServiceModalError } from 'AppV2/Utils/layout-utils';\nimport { sendDtraderV2PurchaseToAnalytics } from '../../../Analytics';\n\nconst PurchaseButton = observer(() => {\n    const [loading_button_index, setLoadingButtonIndex] = React.useState<number | null>(null);\n    const { isMobile } = useDevice();\n    const { addBanner } = useNotifications();\n    const {\n        portfolio: { all_positions, onClickSell, open_accu_contract, active_positions },\n        client: { is_logged_in },\n        common: { services_error },\n        ui: { is_mf_verification_pending_modal_visible, setIsMFVericationPendingModal },\n    } = useStore();\n    const {\n        contract_type,\n        currency,\n        has_open_accu_contract,\n        is_accumulator,\n        is_multiplier,\n        is_purchase_enabled,\n        is_touch,\n        is_trade_enabled_v2,\n        is_turbos,\n        is_vanilla_fx,\n        is_vanilla,\n        proposal_info,\n        purchase_info,\n        onPurchaseV2,\n        symbol,\n        trade_type_tab,\n        trade_types,\n    } = useTraderStore();\n\n    const [is_sell_button_visible, setIsSellButtonVisibile] = React.useState(is_accumulator && has_open_accu_contract);\n    const [animation_duration, setAnimationDuration] = React.useState(450);\n    const prev_has_open_accu_contract = usePrevious(\n        !!open_accu_contract &&\n            !!active_positions.find(\n                ({ contract_info, type }) => isAccumulatorContract(type) && contract_info.underlying === symbol\n            )\n    );\n    const mf_account_status = useMFAccountStatus();\n\n    /*TODO: add error handling when design will be ready. validation_errors can be taken from useTraderStore\n    const hasError = (info: TTradeStore['proposal_info'][string]) => {\n        const has_validation_error = Object.values(validation_errors).some(e => e.length);\n        return has_validation_error || info?.has_error\n    };*/\n    const is_high_low = /^high_low$/.test(contract_type.toLowerCase());\n    const purchase_button_content_props = {\n        currency,\n        has_open_accu_contract,\n        is_multiplier,\n        is_turbos,\n        is_vanilla,\n    };\n    const has_no_button_content =\n        is_vanilla ||\n        is_vanilla_fx ||\n        is_turbos ||\n        is_high_low ||\n        is_touch ||\n        (is_accumulator && !has_open_accu_contract);\n    const contract_types = getDisplayedContractTypes(trade_types, contract_type, trade_type_tab);\n    const active_accu_contract = is_accumulator\n        ? all_positions.find(\n              ({ contract_info, type }) =>\n                  isAccumulatorContract(type) && contract_info.underlying === symbol && !contract_info.is_sold\n          )\n        : undefined;\n    const is_valid_to_sell = active_accu_contract?.contract_info\n        ? hasContractEntered(active_accu_contract.contract_info) &&\n          isOpen(active_accu_contract.contract_info) &&\n          isValidToSell(active_accu_contract.contract_info)\n        : false;\n    const current_stake =\n        (is_valid_to_sell && active_accu_contract && getIndicativePrice(active_accu_contract.contract_info)) || null;\n    const cardLabels = getCardLabelsV2();\n    const is_modal_error = checkIsServiceModalError({ services_error, is_mf_verification_pending_modal_visible });\n    const is_accu_sell_disabled = !is_valid_to_sell || active_accu_contract?.is_sell_requested;\n\n    const getButtonType = (index: number, trade_type: string) => {\n        const tab_index = getTradeTypeTabsList(contract_type).findIndex(tab => tab.contract_type === trade_type);\n        const button_index = tab_index < 0 ? index : tab_index;\n        return button_index ? 'sell' : 'purchase';\n    };\n\n    const addNotificationBannerCallback = (params: Parameters<typeof addBanner>[0], contract_id: number) => {\n        sendDtraderV2PurchaseToAnalytics(contract_type, symbol, contract_id);\n        return addBanner({\n            icon: (\n                <StandaloneStopwatchRegularIcon\n                    iconSize='sm'\n                    className='trade-notification--purchase'\n                    key='contract-opened'\n                />\n            ),\n            ...params,\n        });\n    };\n\n    React.useEffect(() => {\n        if (is_purchase_enabled) setLoadingButtonIndex(null);\n    }, [is_purchase_enabled]);\n\n    React.useEffect(() => {\n        const is_animated =\n            (!prev_has_open_accu_contract && has_open_accu_contract) ||\n            (prev_has_open_accu_contract && !has_open_accu_contract && is_accumulator);\n        setAnimationDuration(is_animated ? 450 : 0);\n\n        setIsSellButtonVisibile(is_accumulator ? has_open_accu_contract : false);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [is_accumulator, has_open_accu_contract]);\n\n    return (\n        <React.Fragment>\n            <CSSTransition\n                in={!is_sell_button_visible}\n                timeout={animation_duration}\n                classNames='slide'\n                key='purchase-button'\n                unmountOnExit\n                mountOnEnter\n            >\n                <div\n                    className={clsx('purchase-button__wrapper', {\n                        'purchase-button__wrapper__un-auth': !is_logged_in,\n                    })}\n                >\n                    {contract_types.map((trade_type, index) => {\n                        const info = proposal_info?.[trade_type] || {};\n                        const is_single_button = contract_types.length === 1;\n                        const is_loading = loading_button_index === index;\n                        const is_disabled =\n                            !is_trade_enabled_v2 || info.has_error || (!!purchase_info.error && !is_modal_error);\n\n                        return (\n                            <React.Fragment key={trade_type}>\n                                <Button\n                                    color={getButtonType(index, trade_type)}\n                                    size='lg'\n                                    label={getContractTypeDisplay(trade_type, {\n                                        isHighLow: is_high_low,\n                                        showButtonName: true,\n                                    })}\n                                    fullWidth\n                                    className={clsx(\n                                        'purchase-button',\n                                        is_loading && 'purchase-button--loading',\n                                        is_single_button && 'purchase-button--single'\n                                    )}\n                                    isLoading={is_loading}\n                                    isOpaque\n                                    disabled={is_disabled && !is_loading}\n                                    onClick={() => {\n                                        if (is_multiplier && mf_account_status === MT5_ACCOUNT_STATUS.PENDING) {\n                                            setIsMFVericationPendingModal(true);\n                                        } else {\n                                            setLoadingButtonIndex(index);\n                                            onPurchaseV2(trade_type, isMobile, addNotificationBannerCallback);\n                                        }\n                                    }}\n                                >\n                                    {!is_loading && (\n                                        <PurchaseButtonContent\n                                            {...purchase_button_content_props}\n                                            has_no_button_content={has_no_button_content}\n                                            info={info}\n                                            is_reverse={!!index}\n                                        />\n                                    )}\n                                </Button>\n                            </React.Fragment>\n                        );\n                    })}\n                </div>\n            </CSSTransition>\n            <CSSTransition\n                in={is_sell_button_visible}\n                timeout={animation_duration}\n                classNames='slide'\n                key='sell-button'\n                unmountOnExit\n                mountOnEnter\n            >\n                <div className='purchase-button__wrapper'>\n                    <Button\n                        color='black-white'\n                        size='lg'\n                        label={\n                            is_accu_sell_disabled\n                                ? `${cardLabels.CLOSE}`\n                                : `${cardLabels.CLOSE} ${current_stake} ${currency}`\n                        }\n                        fullWidth\n                        isOpaque\n                        isLoading={active_accu_contract?.is_sell_requested}\n                        className='purchase-button purchase-button--single'\n                        disabled={!is_valid_to_sell}\n                        onClick={() => onClickSell(active_accu_contract?.contract_info.contract_id)}\n                    />\n                </div>\n            </CSSTransition>\n        </React.Fragment>\n    );\n});\n\nexport default PurchaseButton;\n","import PurchaseButton from './purchase-button';\nimport './purchase-button.scss';\n\nexport default PurchaseButton;\n","import React from 'react';\nimport { Localize } from '@deriv/translations';\nimport { Text } from '@deriv-com/quill-ui';\nimport { SERVICE_ERROR } from 'AppV2/Utils/layout-utils';\n\ntype ServiceErrorProps = {\n    error_type: string | null;\n    services_error_message?: string;\n};\n\nconst ServiceErrorDescription: React.FC<ServiceErrorProps> = ({ error_type, services_error_message }) => {\n    const getContent = () => {\n        switch (error_type) {\n            case SERVICE_ERROR.INSUFFICIENT_BALANCE:\n                return {\n                    title: <Localize i18n_default_text='Insufficient balance' />,\n                    text: services_error_message || <Localize i18n_default_text='An error occurred.' />,\n                };\n            case SERVICE_ERROR.AUTHORIZATION_REQUIRED:\n                return {\n                    title: <Localize i18n_default_text='Start trading with us' />,\n                    text: <Localize i18n_default_text='Log in or create a free account to place a trade.' />,\n                };\n            case SERVICE_ERROR.PLEASE_AUTHENTICATE:\n                return {\n                    title: <Localize i18n_default_text='Account verification required' />,\n                    text: (\n                        <Localize i18n_default_text='Please submit your proof of identity and proof of address to verify your account and continue trading.' />\n                    ),\n                };\n            case SERVICE_ERROR.PENDING_VERIFICATION:\n                return {\n                    title: <Localize i18n_default_text='Pending verification' />,\n                    text: (\n                        <Localize i18n_default_text='You cannot trade as your documents are still under review. We will notify you by email once your verification is approved.' />\n                    ),\n                };\n            default:\n                return {};\n        }\n    };\n    const { title, text } = getContent() || {};\n\n    return (\n        <>\n            <Text size='lg' bold className='service-error-sheet__body__heading'>\n                {title}\n            </Text>\n            <Text>{text}</Text>\n        </>\n    );\n};\n\nexport default ServiceErrorDescription;\n","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router';\n\nimport { isEmptyObject, redirectToLogin, redirectToSignUp, routes } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { getLanguage, Localize } from '@deriv/translations';\nimport { ActionSheet } from '@deriv-com/quill-ui';\n\nimport { checkIsServiceModalError, SERVICE_ERROR } from 'AppV2/Utils/layout-utils';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\nimport ServiceErrorDescription from './service-error-description';\n\nconst ServiceErrorSheet = observer(() => {\n    const [is_open, setIsOpen] = useState(false);\n    const { common, client, ui } = useStore();\n    const { is_mf_verification_pending_modal_visible, setIsMFVericationPendingModal } = ui;\n    const { has_wallet, is_virtual } = client;\n    const { services_error, resetServicesError } = common;\n    const { clearPurchaseInfo, requestProposal: resetPurchase } = useTraderStore();\n    const history = useHistory();\n\n    const { code, message, type } = services_error || {};\n    const is_insufficient_balance = code === SERVICE_ERROR.INSUFFICIENT_BALANCE;\n    const is_authorization_required = code === SERVICE_ERROR.AUTHORIZATION_REQUIRED && type === 'buy';\n    const is_account_verification_required = code === SERVICE_ERROR.PLEASE_AUTHENTICATE;\n    const should_show_error_modal =\n        (!isEmptyObject(services_error) || is_mf_verification_pending_modal_visible) &&\n        checkIsServiceModalError({ services_error, is_mf_verification_pending_modal_visible });\n\n    const onClose = () => {\n        setIsOpen(false);\n        if (services_error.type === 'buy') {\n            if (is_insufficient_balance) {\n                return;\n            }\n            clearPurchaseInfo();\n            resetPurchase();\n        }\n    };\n\n    const getActionButtonProps = () => {\n        if (is_insufficient_balance) {\n            return {\n                primaryAction: {\n                    content: <Localize i18n_default_text='Deposit now' />,\n                    onAction: () => {\n                        resetServicesError();\n                        if (!is_virtual) {\n                            history?.push?.(has_wallet ? routes.wallets_deposit : routes.cashier_deposit);\n                        } else {\n                            onClose();\n                        }\n                    },\n                },\n            };\n        }\n        if (is_authorization_required) {\n            return {\n                primaryAction: {\n                    content: <Localize i18n_default_text='Create free account' />,\n                    onAction: () => {\n                        resetServicesError();\n                        redirectToSignUp();\n                    },\n                },\n                secondaryAction: {\n                    content: <Localize i18n_default_text='Login' />,\n                    onAction: () => {\n                        resetServicesError();\n                        redirectToLogin(false, getLanguage());\n                    },\n                },\n            };\n        }\n        if (is_account_verification_required) {\n            return {\n                primaryAction: {\n                    content: <Localize i18n_default_text='Submit Proof' />,\n                    onAction: () => {\n                        resetServicesError();\n                        history.push(routes.proof_of_identity);\n                    },\n                },\n            };\n        }\n        if (is_mf_verification_pending_modal_visible) {\n            return {\n                primaryAction: {\n                    content: <Localize i18n_default_text='Got it' />,\n                    onAction: () => {\n                        resetServicesError();\n                        setIsMFVericationPendingModal(false);\n                        onClose();\n                    },\n                },\n            };\n        }\n    };\n\n    const getErrorType = () => {\n        if (is_insufficient_balance) return SERVICE_ERROR.INSUFFICIENT_BALANCE;\n        if (is_authorization_required) return SERVICE_ERROR.AUTHORIZATION_REQUIRED;\n        if (is_account_verification_required) return SERVICE_ERROR.PLEASE_AUTHENTICATE;\n        if (is_mf_verification_pending_modal_visible) return SERVICE_ERROR.PENDING_VERIFICATION;\n        return null;\n    };\n\n    useEffect(() => {\n        setIsOpen(should_show_error_modal);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [should_show_error_modal]);\n\n    useEffect(() => {\n        if (!is_open && code) resetServicesError();\n        if (!is_open) setIsMFVericationPendingModal(false);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [is_open]);\n\n    if (!should_show_error_modal) return null;\n\n    return (\n        <ActionSheet.Root\n            className='service-error-sheet'\n            isOpen={is_open}\n            onClose={onClose}\n            expandable={false}\n            position='left'\n        >\n            <ActionSheet.Portal showHandlebar shouldCloseOnDrag>\n                <div className='service-error-sheet__body'>\n                    <ServiceErrorDescription error_type={getErrorType()} services_error_message={message} />\n                </div>\n                <ActionSheet.Footer\n                    className='service-error-sheet__footer'\n                    alignment='vertical'\n                    primaryButtonColor='coral'\n                    {...getActionButtonProps()}\n                />\n            </ActionSheet.Portal>\n        </ActionSheet.Root>\n    );\n});\n\nexport default ServiceErrorSheet;\n","import './service-error-sheet.scss';\nimport ServiceErrorSheet from './service-error-sheet';\n\nexport default ServiceErrorSheet;\n","import React from 'react';\n\nimport { getDisplayedContractTypes } from 'AppV2/Utils/trade-types-utils';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\nexport type TErrorFields = 'take_profit' | 'stop_loss' | 'date_start' | 'stake' | 'amount';\n\nconst useTradeError = ({ error_fields }: { error_fields: TErrorFields[] }) => {\n    const { contract_type, proposal_info, validation_errors, trade_type_tab, trade_types } = useTraderStore();\n    const contract_types = getDisplayedContractTypes(trade_types, contract_type, trade_type_tab);\n\n    const {\n        has_error: proposal_has_error,\n        error_field: proposal_error_field,\n        message: proposal_error_message,\n    } = proposal_info?.[contract_types[0]] ?? {};\n\n    const checkErrorForField = (field: TErrorFields) => {\n        const validation_has_error = validation_errors?.[field]?.length > 0;\n        const is_error_matching_field = (proposal_has_error && proposal_error_field === field) || validation_has_error;\n\n        const message = proposal_error_message ?? validation_errors?.[field]?.[0] ?? '';\n\n        return { is_error_matching_field, message };\n    };\n\n    const error = error_fields\n        .map(field => checkErrorForField(field)) // Mapping each param to its error result\n        .find(result => result.is_error_matching_field); // Find the first match\n\n    // If an error was found, return the error; otherwise return no error\n    return error || { is_error_matching_field: false, message: '' };\n};\n\nexport default useTradeError;\n","import React from 'react';\nimport { observer, useStore } from '@deriv/stores';\nimport { SnackbarController, useSnackbar } from '@deriv-com/quill-ui';\nimport useTradeError, { TErrorFields } from '../../Hooks/useTradeError';\n\nconst TradeErrorSnackbar = observer(\n    ({ error_fields, should_show_snackbar }: { error_fields: TErrorFields[]; should_show_snackbar?: boolean }) => {\n        const {\n            client: { is_logged_in },\n        } = useStore();\n        const { addSnackbar } = useSnackbar();\n        const { is_error_matching_field: has_error, message } = useTradeError({\n            error_fields, // array with BE error_fields, for which we will track errors.\n        });\n\n        React.useEffect(() => {\n            if (has_error && should_show_snackbar) {\n                addSnackbar({\n                    message,\n                    status: 'fail',\n                    hasCloseButton: true,\n                    hasFixedHeight: false,\n                    style: {\n                        marginBottom: is_logged_in ? '48px' : '-8px',\n                        width: 'calc(100% - var(--core-spacing-800)',\n                    },\n                });\n            }\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n        }, [has_error, should_show_snackbar]);\n\n        return <SnackbarController />;\n    }\n);\n\nexport default TradeErrorSnackbar;\n","import TradeErrorSnackbar from './trade-error-snackbar';\n\nexport default TradeErrorSnackbar;\n","import React from 'react';\nimport { ActionSheet, Heading, Text } from '@deriv-com/quill-ui';\nimport { Localize } from '@deriv/translations';\nimport { getTermDefinition } from 'AppV2/Utils/contract-description-utils';\n\ntype TGuideDefinitionModal = {\n    contract_type: string;\n    term: string;\n    onClose: () => void;\n};\n\nconst GuideDefinitionModal = ({ contract_type, term, onClose }: TGuideDefinitionModal) => (\n    <ActionSheet.Root isOpen={!!term} onClose={onClose} position='left' expandable={false}>\n        <ActionSheet.Portal shouldCloseOnDrag>\n            <ActionSheet.Content className='definition__wrapper'>\n                <Heading.H4 className='definition__title'>{term}</Heading.H4>\n                <Text as='div'>{getTermDefinition({ term, contract_type })}</Text>\n            </ActionSheet.Content>\n            <ActionSheet.Footer\n                alignment='vertical'\n                primaryAction={{\n                    content: <Localize i18n_default_text='Got it' />,\n                    onAction: onClose,\n                }}\n                className='definition__button'\n            />\n        </ActionSheet.Portal>\n    </ActionSheet.Root>\n);\n\nexport default GuideDefinitionModal;\n","import React from 'react';\nimport { Text } from '@deriv-com/quill-ui';\nimport { Localize } from '@deriv/translations';\nimport { makeLazyLoader, moduleLoader } from '@deriv/shared';\nimport { Loading } from '@deriv/components';\nimport { CONTRACT_LIST } from 'AppV2/Utils/trade-types-utils';\n\ntype TContractDescription = {\n    onTermClick: (term: string) => void;\n};\n\nconst AccumulatorsTradeDescription = makeLazyLoader(\n    () =>\n        moduleLoader(\n            () =>\n                import(\n                    /* webpackChunkName: \"accumulators-trade-description\" */ './ContractDescription/accumulators-trade-description'\n                )\n        ),\n    () => <Loading is_fullscreen={false} />\n)() as React.ComponentType<TContractDescription>;\n\nconst MultiplierTradeDescriptions = makeLazyLoader(\n    () =>\n        moduleLoader(\n            () =>\n                import(\n                    /* webpackChunkName: \"multipliers-trade-description\" */ './ContractDescription/multipliers-trade-description'\n                )\n        ),\n    () => <Loading is_fullscreen={false} />\n)() as React.ComponentType<TContractDescription>;\n\nconst VanillasTradeDescription = makeLazyLoader(\n    () =>\n        moduleLoader(\n            () =>\n                import(\n                    /* webpackChunkName: \"vanillas-trade-description\" */ './ContractDescription/vanillas-trade-description'\n                )\n        ),\n    () => <Loading is_fullscreen={false} />\n)() as React.ComponentType<TContractDescription>;\n\nconst TurbosTradeDescription = makeLazyLoader(\n    () =>\n        moduleLoader(\n            () =>\n                import(\n                    /* webpackChunkName: \"turbos-trade-description\" */ './ContractDescription/turbos-trade-description'\n                )\n        ),\n    () => <Loading is_fullscreen={false} />\n)() as React.ComponentType<TContractDescription>;\n\nconst RiseFallTradeDescription = makeLazyLoader(\n    () =>\n        moduleLoader(\n            () =>\n                import(\n                    /* webpackChunkName: \"rise-fall-trade-description\" */ './ContractDescription/rise-fall-trade-description'\n                )\n        ),\n    () => <Loading is_fullscreen={false} />\n)();\n\nconst HigherLowerTradeDescription = makeLazyLoader(\n    () =>\n        moduleLoader(\n            () =>\n                import(\n                    /* webpackChunkName: \"higher-lower-trade-description\" */ './ContractDescription/higher-lower-trade-description'\n                )\n        ),\n    () => <Loading is_fullscreen={false} />\n)();\n\nconst TouchNoTouchTradeDescription = makeLazyLoader(\n    () =>\n        moduleLoader(\n            () =>\n                import(\n                    /* webpackChunkName: \"touch-no-touch-trade-description\" */ './ContractDescription/touch-no-touch-trade-description'\n                )\n        ),\n    () => <Loading is_fullscreen={false} />\n)();\n\nconst MatchesDiffersTradeDescription = makeLazyLoader(\n    () =>\n        moduleLoader(\n            () =>\n                import(\n                    /* webpackChunkName: \"matches-differs-trade-description\" */ './ContractDescription/matches-differs-trade-description'\n                )\n        ),\n    () => <Loading is_fullscreen={false} />\n)();\n\nconst EvenOddTradeDescription = makeLazyLoader(\n    () =>\n        moduleLoader(\n            () =>\n                import(\n                    /* webpackChunkName: \"even-odd-trade-description\" */ './ContractDescription/even-odd-trade-description'\n                )\n        ),\n    () => <Loading is_fullscreen={false} />\n)();\n\nconst OverUnderTradeDescription = makeLazyLoader(\n    () =>\n        moduleLoader(\n            () =>\n                import(\n                    /* webpackChunkName: \"over-under-trade-description\" */ './ContractDescription/over-under-trade-description'\n                )\n        ),\n    () => <Loading is_fullscreen={false} />\n)();\n\nconst TradeDescription = ({\n    contract_type,\n    onTermClick,\n}: {\n    contract_type: string;\n    onTermClick: (term: string) => void;\n}) => {\n    let trade_type_template;\n    switch (contract_type) {\n        case CONTRACT_LIST.ACCUMULATORS:\n            trade_type_template = <AccumulatorsTradeDescription onTermClick={onTermClick} />;\n            break;\n        case CONTRACT_LIST.RISE_FALL:\n            trade_type_template = <RiseFallTradeDescription />;\n            break;\n        case CONTRACT_LIST.MULTIPLIERS:\n            trade_type_template = <MultiplierTradeDescriptions onTermClick={onTermClick} />;\n            break;\n        case CONTRACT_LIST.VANILLAS:\n            trade_type_template = <VanillasTradeDescription onTermClick={onTermClick} />;\n            break;\n        case CONTRACT_LIST.TURBOS:\n            trade_type_template = <TurbosTradeDescription onTermClick={onTermClick} />;\n            break;\n        case CONTRACT_LIST.HIGHER_LOWER:\n            trade_type_template = <HigherLowerTradeDescription />;\n            break;\n        case CONTRACT_LIST.TOUCH_NO_TOUCH:\n            trade_type_template = <TouchNoTouchTradeDescription />;\n            break;\n        case CONTRACT_LIST.MATCHES_DIFFERS:\n            trade_type_template = <MatchesDiffersTradeDescription />;\n            break;\n        case CONTRACT_LIST.EVEN_ODD:\n            trade_type_template = <EvenOddTradeDescription />;\n            break;\n        case CONTRACT_LIST.OVER_UNDER:\n            trade_type_template = <OverUnderTradeDescription />;\n            break;\n        default:\n            trade_type_template = (\n                <Text as='p'>\n                    <Localize i18n_default_text='Description not found.' />\n                </Text>\n            );\n            break;\n    }\n    return <React.Fragment>{trade_type_template}</React.Fragment>;\n};\n\nexport default TradeDescription;\n","import React from 'react';\nimport { Stream } from '@cloudflare/stream-react';\nimport { CaptionText } from '@deriv-com/quill-ui';\nimport { LabelPairedPlayMdFillIcon } from '@deriv/quill-icons';\nimport { Localize } from '@deriv/translations';\n\ntype TVideoPreview = {\n    contract_type: string;\n    toggleVideoPlayer: () => void;\n    video_src: string;\n};\n\nconst VideoPreview = ({ contract_type, toggleVideoPlayer, video_src }: TVideoPreview) => (\n    <div className='guide-video__wrapper' onClick={toggleVideoPlayer} onKeyDown={toggleVideoPlayer}>\n        <div className='guide-video__preview' data-testid='dt_video_preview'>\n            <Stream\n                className='guide-video'\n                letterboxColor='transparent'\n                muted\n                preload='auto'\n                responsive={false}\n                src={video_src}\n                width='112px'\n                height='73px'\n            />\n            <div className='guide-video__preview__icon__wrapper'>\n                <LabelPairedPlayMdFillIcon className='guide-video__preview__icon' />\n            </div>\n        </div>\n        <div className='guide-video__description'>\n            <CaptionText bold color='quill-typography__color--default'>\n                <Localize i18n_default_text='How to trade ' />\n                {contract_type}?\n            </CaptionText>\n            <CaptionText color='quill-typography__color--default'>\n                <Localize i18n_default_text='Watch this video to learn about this trade type.' />\n            </CaptionText>\n        </div>\n    </div>\n);\n\nexport default VideoPreview;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { Chip, Text } from '@deriv-com/quill-ui';\nimport TradeDescription from './Description/trade-description';\nimport VideoPreview from './Description/video-preview';\n\ntype TGuideContent = {\n    contract_list: { tradeType: React.ReactNode; id: string }[];\n    onChipSelect: (id: string) => void;\n    onTermClick: (term: string) => void;\n    selected_contract_type: string;\n    show_guide_for_selected_contract?: boolean;\n    show_description_in_a_modal?: boolean;\n    toggleVideoPlayer: (e?: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>) => void;\n    video_src: string;\n};\n\nconst GuideContent = ({\n    contract_list,\n    onChipSelect,\n    onTermClick,\n    selected_contract_type,\n    show_guide_for_selected_contract,\n    show_description_in_a_modal = true,\n    toggleVideoPlayer,\n    video_src,\n}: TGuideContent) => (\n    <React.Fragment>\n        {!show_guide_for_selected_contract && (\n            <div className='guide__menu'>\n                {contract_list.map(({ tradeType, id }: { tradeType: React.ReactNode; id: string }) => (\n                    <Chip.Selectable\n                        key={id}\n                        onChipSelect={() => onChipSelect(id)}\n                        selected={id === selected_contract_type}\n                    >\n                        <Text size='sm'>{tradeType}</Text>\n                    </Chip.Selectable>\n                ))}\n            </div>\n        )}\n        <div\n            className={clsx('guide__contract-description', {\n                'guide__contract-description--without-btn': !show_description_in_a_modal,\n            })}\n            key={selected_contract_type}\n        >\n            <TradeDescription contract_type={selected_contract_type} onTermClick={onTermClick} />\n            <VideoPreview\n                contract_type={selected_contract_type}\n                toggleVideoPlayer={toggleVideoPlayer}\n                video_src={video_src}\n            />\n        </div>\n    </React.Fragment>\n);\n\nexport default GuideContent;\n","import React from 'react';\nimport { ActionSheet, Heading } from '@deriv-com/quill-ui';\nimport { VideoPlayer } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport { clickAndKeyEventHandler } from '@deriv/shared';\nimport { getDescriptionVideoIds } from 'AppV2/Utils/contract-description-utils';\nimport GuideContent from './guide-content';\n\ntype TGuideDescriptionModal = {\n    contract_list: { tradeType: React.ReactNode; id: string }[];\n    is_dark_mode_on?: boolean;\n    is_open?: boolean;\n    onChipSelect: (id: string) => void;\n    onClose: () => void;\n    onTermClick: (term: string) => void;\n    selected_contract_type: string;\n    show_guide_for_selected_contract?: boolean;\n    show_description_in_a_modal?: boolean;\n};\n\nconst GuideDescriptionModal = ({\n    contract_list,\n    is_dark_mode_on,\n    is_open,\n    onChipSelect,\n    onClose,\n    onTermClick,\n    selected_contract_type,\n    show_guide_for_selected_contract,\n    show_description_in_a_modal = true,\n}: TGuideDescriptionModal) => {\n    const [is_video_player_opened, setIsVideoPlayerOpened] = React.useState(false);\n    const modal_ref = React.useRef<HTMLDialogElement>(null);\n\n    const video_src = getDescriptionVideoIds(selected_contract_type, is_dark_mode_on);\n\n    const toggleVideoPlayer = (e?: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>) => {\n        clickAndKeyEventHandler(() => setIsVideoPlayerOpened(!is_video_player_opened), e);\n    };\n\n    const guide_content_props = {\n        contract_list,\n        onChipSelect,\n        onTermClick,\n        selected_contract_type,\n        show_guide_for_selected_contract,\n        show_description_in_a_modal,\n        toggleVideoPlayer,\n        video_src,\n    };\n\n    React.useEffect(() => {\n        if (modal_ref.current) is_video_player_opened ? modal_ref.current.showModal() : modal_ref.current.close();\n    }, [is_video_player_opened]);\n\n    return (\n        <React.Fragment>\n            {show_description_in_a_modal ? (\n                <ActionSheet.Root isOpen={is_open} onClose={onClose} position='left' expandable={false}>\n                    <ActionSheet.Portal shouldCloseOnDrag>\n                        <ActionSheet.Content className='guide__wrapper__content'>\n                            <Heading.H4 className='guide__title'>\n                                {show_guide_for_selected_contract ? (\n                                    selected_contract_type\n                                ) : (\n                                    <Localize i18n_default_text='Trade types' />\n                                )}\n                            </Heading.H4>\n                            <GuideContent {...guide_content_props} />\n                        </ActionSheet.Content>\n                        <ActionSheet.Footer\n                            alignment='vertical'\n                            primaryAction={{\n                                content: <Localize i18n_default_text='Got it' />,\n                                onAction: onClose,\n                            }}\n                            className='guide__button'\n                        />\n                    </ActionSheet.Portal>\n                </ActionSheet.Root>\n            ) : (\n                <div className='guide__wrapper__content--separate'>\n                    <GuideContent {...guide_content_props} />\n                </div>\n            )}\n            {is_video_player_opened && (\n                <dialog\n                    ref={modal_ref}\n                    onClick={toggleVideoPlayer}\n                    onKeyDown={toggleVideoPlayer}\n                    className='modal-player'\n                >\n                    <div onClick={e => e.stopPropagation()} onKeyDown={e => e.stopPropagation()}>\n                        <VideoPlayer\n                            className='modal-player__wrapper'\n                            data_testid='dt_video_player'\n                            height='180px'\n                            is_mobile\n                            increased_drag_area\n                            src={video_src}\n                        />\n                    </div>\n                </dialog>\n            )}\n        </React.Fragment>\n    );\n};\n\nexport default React.memo(GuideDescriptionModal);\n","import React from 'react';\n\nimport { LabelPairedPresentationScreenSmRegularIcon } from '@deriv/quill-icons';\nimport { observer, useStore } from '@deriv/stores';\nimport { Localize } from '@deriv/translations';\nimport { Button, Text } from '@deriv-com/quill-ui';\n\nimport useContractsForCompany from 'AppV2/Hooks/useContractsForCompany';\nimport { AVAILABLE_CONTRACTS, CONTRACT_LIST } from 'AppV2/Utils/trade-types-utils';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\nimport { sendOpenGuideToAnalytics } from '../../../Analytics';\n\nimport GuideDefinitionModal from './guide-definition-modal';\nimport GuideDescriptionModal from './guide-description-modal';\n\ntype TGuide = {\n    has_label?: boolean;\n    is_open_by_default?: boolean;\n    show_guide_for_selected_contract?: boolean;\n    show_trigger_button?: boolean;\n    show_description_in_a_modal?: boolean;\n};\n\nconst Guide = observer(\n    ({\n        has_label,\n        is_open_by_default,\n        show_guide_for_selected_contract,\n        show_trigger_button = true,\n        show_description_in_a_modal = true,\n    }: TGuide) => {\n        const {\n            ui: { is_dark_mode_on },\n            common: { current_language },\n        } = useStore();\n        const { contract_type } = useTraderStore();\n        const contract_type_title = AVAILABLE_CONTRACTS.find(item => item.for.includes(contract_type))?.id ?? '';\n        const { trade_types } = useContractsForCompany();\n        const order = [\n            CONTRACT_LIST.RISE_FALL,\n            CONTRACT_LIST.ACCUMULATORS,\n            CONTRACT_LIST.MULTIPLIERS,\n            CONTRACT_LIST.VANILLAS,\n            CONTRACT_LIST.TURBOS,\n            CONTRACT_LIST.HIGHER_LOWER,\n            CONTRACT_LIST.TOUCH_NO_TOUCH,\n            CONTRACT_LIST.MATCHES_DIFFERS,\n            CONTRACT_LIST.EVEN_ODD,\n            CONTRACT_LIST.OVER_UNDER,\n        ];\n\n        const filtered_contract_list = AVAILABLE_CONTRACTS.filter(contract =>\n            trade_types.some((trade: { text?: string }) => trade.text === contract.id)\n        );\n\n        const ordered_contract_list = [...filtered_contract_list].sort(\n            (a, b) => order.findIndex(item => item === a.id) - order.findIndex(item => item === b.id)\n        );\n\n        const [is_description_opened, setIsDescriptionOpened] = React.useState(is_open_by_default);\n        const [selected_contract_type, setSelectedContractType] = React.useState(contract_type_title);\n        const [selected_term, setSelectedTerm] = React.useState<string>('');\n\n        const onChipSelect = React.useCallback((id: string) => setSelectedContractType(id ?? ''), []);\n\n        const onClose = React.useCallback(() => setIsDescriptionOpened(false), []);\n\n        React.useEffect(() => {\n            if (show_guide_for_selected_contract) setSelectedContractType(contract_type_title);\n        }, [show_guide_for_selected_contract, contract_type_title]);\n\n        React.useEffect(() => {\n            setIsDescriptionOpened(is_description_opened);\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n        }, [is_open_by_default]);\n\n        return (\n            <React.Fragment>\n                {show_trigger_button && (\n                    <Button\n                        color={is_dark_mode_on ? 'white' : 'black'}\n                        icon={<LabelPairedPresentationScreenSmRegularIcon key='guide-button-icon' />}\n                        onClick={() => {\n                            sendOpenGuideToAnalytics(contract_type, 'main_trade_page');\n                            setIsDescriptionOpened(true);\n                        }}\n                        variant={has_label ? 'secondary' : 'tertiary'}\n                        key={current_language}\n                    >\n                        {has_label && (\n                            <Text size='sm' bold color='quill-typography__color--prominent'>\n                                <Localize i18n_default_text='Guide' />\n                            </Text>\n                        )}\n                    </Button>\n                )}\n                <GuideDescriptionModal\n                    contract_list={ordered_contract_list}\n                    is_dark_mode_on={is_dark_mode_on}\n                    is_open={is_description_opened}\n                    onChipSelect={(id: string) => {\n                        const selected_trade_type = ordered_contract_list.find(item => item.id === id);\n                        sendOpenGuideToAnalytics(selected_trade_type?.for?.[0] ?? '', 'trade_type_page');\n                        onChipSelect(id);\n                    }}\n                    onClose={onClose}\n                    onTermClick={setSelectedTerm}\n                    selected_contract_type={selected_contract_type}\n                    show_guide_for_selected_contract={show_guide_for_selected_contract}\n                    show_description_in_a_modal={show_description_in_a_modal}\n                />\n                <GuideDefinitionModal\n                    contract_type={selected_contract_type}\n                    term={selected_term}\n                    onClose={() => setSelectedTerm('')}\n                />\n            </React.Fragment>\n        );\n    }\n);\n\nexport default Guide;\n","import Guide from './guide';\nimport './guide.scss';\n\nexport default Guide;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { Localize } from '@deriv/translations';\nimport { Text } from '@deriv-com/quill-ui';\nimport Guide from '../Guide';\n\ntype TTradeParametersContainer = {\n    is_minimized?: boolean;\n    is_minimized_visible?: boolean;\n};\n\nconst TradeParametersContainer = ({\n    children,\n    is_minimized,\n    is_minimized_visible,\n}: React.PropsWithChildren<TTradeParametersContainer>) => {\n    const is_minimized_and_visible = is_minimized && is_minimized_visible;\n    return (\n        <section\n            className={clsx('', {\n                'trade-params--minimized': is_minimized_and_visible,\n                'trade-params': !is_minimized_and_visible,\n            })}\n        >\n            {!is_minimized_and_visible && (\n                <div className='trade-params__title'>\n                    <Text>\n                        <Localize i18n_default_text='Set your trade' />\n                    </Text>\n                    <Guide has_label show_guide_for_selected_contract />\n                </div>\n            )}\n            {children}\n        </section>\n    );\n};\n\nexport default React.memo(TradeParametersContainer);\n","import React from 'react';\nimport clsx from 'clsx';\nimport { observer } from 'mobx-react-lite';\nimport { Localize } from '@deriv/translations';\nimport { Money, Skeleton } from '@deriv/components';\nimport { Text } from '@deriv-com/quill-ui';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { CONTRACT_TYPES } from '@deriv/shared';\n\nconst AccumulatorsInformation = observer(() => {\n    const { currency, is_market_closed, maximum_payout, proposal_info } = useTraderStore();\n    const has_error = proposal_info[CONTRACT_TYPES.ACCUMULATOR]?.has_error;\n\n    if (has_error) return null;\n\n    return (\n        <div className='accumulators-info__wrapper'>\n            <Text size='sm' className={clsx(is_market_closed && 'trade-params__text--disabled')}>\n                <Localize i18n_default_text='Max. payout' />\n            </Text>\n            {maximum_payout ? (\n                <Text size='sm' bold className={clsx(is_market_closed && 'trade-params__text--disabled')}>\n                    <Money amount={maximum_payout} show_currency currency={currency} />\n                </Text>\n            ) : (\n                <Skeleton width={100} height={14} />\n            )}\n        </div>\n    );\n});\n\nexport default AccumulatorsInformation;\n","import AccumulatorsInformation from './accumulators-information';\nimport './accumulators-information.scss';\n\nexport default AccumulatorsInformation;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { observer } from 'mobx-react-lite';\nimport { ActionSheet, ToggleSwitch, Text, Heading } from '@deriv-com/quill-ui';\nimport { Localize } from '@deriv/translations';\nimport { clickAndKeyEventHandler } from '@deriv/shared';\nimport { hasCallPutEqual, hasDurationForCallPutEqual } from 'Stores/Modules/Trading/Helpers/allow-equals';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\nconst AllowEquals = observer(() => {\n    const {\n        contract_types_list,\n        contract_start_type,\n        duration_unit,\n        expiry_type,\n        is_equal,\n        is_market_closed,\n        onChange,\n    } = useTraderStore();\n\n    const [is_open, setIsOpen] = React.useState(false);\n\n    const has_callputequal_duration = hasDurationForCallPutEqual(\n        contract_types_list,\n        duration_unit,\n        contract_start_type\n    );\n    const has_callputequal = hasCallPutEqual(contract_types_list);\n    const has_allow_equals = (has_callputequal_duration || expiry_type === 'endtime') && has_callputequal;\n\n    const onToggleSwitch = (is_enabled: boolean) => {\n        onChange({ target: { name: 'is_equal', value: Number(is_enabled) } });\n        setIsOpen(false);\n    };\n\n    const openDescription = (e?: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>) => {\n        if (is_market_closed) return;\n        clickAndKeyEventHandler(() => setIsOpen(true), e);\n    };\n\n    const closeDescription = () => setIsOpen(false);\n\n    if (!has_allow_equals) return null;\n\n    return (\n        <React.Fragment>\n            <div className='allow-equals__wrapper'>\n                <Text\n                    size='sm'\n                    className={clsx('allow-equals__title', is_market_closed && 'allow-equals__title--disabled')}\n                    onClick={openDescription}\n                    onKeyDown={openDescription}\n                >\n                    <Localize i18n_default_text='Allow equals' />\n                </Text>\n                <ToggleSwitch checked={!!is_equal} onChange={onToggleSwitch} disabled={is_market_closed} />\n            </div>\n            <ActionSheet.Root isOpen={is_open} onClose={closeDescription} position='left' expandable={false}>\n                <ActionSheet.Portal shouldCloseOnDrag>\n                    <ActionSheet.Content className='allow-equals__definition__wrapper'>\n                        <Heading.H4 className='allow-equals__definition__title'>\n                            <Localize i18n_default_text='Allow equals' />\n                        </Heading.H4>\n                        <Text as='div'>\n                            <Localize i18n_default_text='Win payout if exit spot is also equal to entry spot.' />\n                        </Text>\n                    </ActionSheet.Content>\n                    <ActionSheet.Footer\n                        alignment='vertical'\n                        primaryAction={{\n                            content: <Localize i18n_default_text='Got it' />,\n                            onAction: closeDescription,\n                        }}\n                        className='allow-equals__button'\n                    />\n                </ActionSheet.Portal>\n            </ActionSheet.Root>\n        </React.Fragment>\n    );\n});\n\nexport default AllowEquals;\n","import './allow-equals.scss';\nimport AllowEquals from './allow-equals';\n\nexport default AllowEquals;\n","import React from 'react';\nimport { useSwipeable } from 'react-swipeable';\nimport clsx from 'clsx';\nimport { getLanguage } from '@deriv/translations';\nimport CarouselHeader, { TQuillIcon } from './carousel-header';\n\ntype TCarousel = {\n    classname?: string;\n    current_index?: number;\n    header?: typeof CarouselHeader;\n    is_swipeable?: boolean;\n    is_infinite_loop?: boolean;\n    onNextButtonClick?: () => void;\n    onPreviousButtonClick?: () => void;\n    pages: { id: number; component: JSX.Element }[];\n    previous_icon?: TQuillIcon;\n    title?: React.ReactNode;\n    next_icon?: TQuillIcon;\n    setCurrentIndex?: (arg: number) => void;\n};\n\nconst Carousel = ({\n    classname,\n    current_index,\n    header,\n    is_swipeable,\n    is_infinite_loop,\n    onNextButtonClick,\n    onPreviousButtonClick,\n    pages,\n    previous_icon,\n    title,\n    next_icon,\n    setCurrentIndex,\n}: TCarousel) => {\n    const [internalIndex, setInternalIndex] = React.useState(0);\n\n    const HeaderComponent = header;\n\n    const isControlled = current_index !== undefined && setCurrentIndex !== undefined;\n    const index = isControlled ? current_index : internalIndex;\n    const lang = getLanguage();\n    const is_rtl = lang === 'AR';\n\n    const handleNextClick = () => {\n        if (!is_infinite_loop && index + 1 >= pages.length) return;\n        const newIndex = (index + 1) % pages.length;\n        isControlled ? setCurrentIndex?.(newIndex) : setInternalIndex(newIndex);\n        onNextButtonClick?.();\n    };\n\n    const handlePrevClick = () => {\n        if (!is_infinite_loop && index - 1 < 0) return;\n        const newIndex = (index - 1 + pages.length) % pages.length;\n        isControlled ? setCurrentIndex?.(newIndex) : setInternalIndex(newIndex);\n        onPreviousButtonClick?.();\n    };\n\n    const swipe_handlers = useSwipeable({\n        onSwipedLeft: handleNextClick,\n        onSwipedRight: handlePrevClick,\n    });\n\n    return (\n        <React.Fragment>\n            {HeaderComponent && (\n                <HeaderComponent\n                    current_index={index}\n                    onNextClick={handleNextClick}\n                    onPrevClick={handlePrevClick}\n                    previous_icon={previous_icon}\n                    next_icon={next_icon}\n                    title={title}\n                />\n            )}\n            <ul\n                className={clsx('carousel', classname)}\n                data-testid='dt_carousel'\n                {...(is_swipeable ? swipe_handlers : {})}\n            >\n                {pages.map(({ component, id }) => (\n                    <li\n                        className='carousel__item'\n                        style={{ transform: `translateX(${index * 100 * (is_rtl ? 1 : -1)}%)` }}\n                        key={id}\n                    >\n                        {component}\n                    </li>\n                ))}\n            </ul>\n        </React.Fragment>\n    );\n};\n\nexport default Carousel;\n","import './carousel.scss';\nimport Carousel from './carousel';\n\nexport default Carousel;\n","import React from 'react';\nimport { ActionSheet, Text } from '@deriv-com/quill-ui';\nimport { Localize } from '@deriv/translations';\n\nconst BarrierDescription = ({ isDays }: { isDays: boolean }) => {\n    return (\n        <ActionSheet.Content className='barrier-params__description-content'>\n            {isDays ? (\n                <div className='content-section'>\n                    <Text bold>\n                        <Localize i18n_default_text='Fixed barrier:' />\n                    </Text>\n                    <Text>\n                        <Localize i18n_default_text='Barrier set at specific price.' />\n                    </Text>\n                </div>\n            ) : (\n                <>\n                    <div className='content-section'>\n                        <Text bold>\n                            <Localize i18n_default_text='Above spot:' />\n                        </Text>\n                        <Text>\n                            <Localize i18n_default_text='Barrier set above spot price.' />\n                        </Text>\n                    </div>\n                    <div className='content-section'>\n                        <Text bold>\n                            <Localize i18n_default_text='Below spot:' />\n                        </Text>\n                        <Text>\n                            <Localize i18n_default_text='Barrier set below spot price.' />\n                        </Text>\n                    </div>\n                    <div className='content-section'>\n                        <Text bold>\n                            <Localize i18n_default_text='Fixed barrier:' />\n                        </Text>\n                        <Text>\n                            <Localize i18n_default_text='Barrier set at specific price.' />\n                        </Text>\n                    </div>\n                </>\n            )}\n        </ActionSheet.Content>\n    );\n};\n\nexport default BarrierDescription;\n","import React from 'react';\nimport { ActionSheet, Chip, Text, TextField, TextFieldAddon } from '@deriv-com/quill-ui';\n\nimport { localize, Localize } from '@deriv/translations';\nimport { observer } from 'mobx-react-lite';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\nconst chips_options = [\n    {\n        name: <Localize i18n_default_text='Above spot' />,\n    },\n    {\n        name: <Localize i18n_default_text='Below spot' />,\n    },\n    {\n        name: <Localize i18n_default_text='Fixed barrier' />,\n    },\n];\nconst BarrierInput = observer(\n    ({\n        setInitialBarrierValue,\n        isDays,\n        onClose,\n    }: {\n        setInitialBarrierValue: (val: string) => void;\n        isDays: boolean;\n        onClose: (val: boolean) => void;\n    }) => {\n        const { barrier_1, onChange, validation_errors, tick_data, setV2ParamsInitialValues } = useTraderStore();\n        const [option, setOption] = React.useState(0);\n        const [should_show_error, setShouldShowError] = React.useState(false);\n        const [previous_value, setPreviousValue] = React.useState(barrier_1);\n        const [is_focused, setIsFocused] = React.useState(false);\n        const { pip_size } = tick_data ?? {};\n        const barrier_ref = React.useRef<HTMLInputElement | null>(null);\n        const show_hidden_error = validation_errors?.barrier_1.length > 0 && (barrier_1 || should_show_error);\n\n        React.useEffect(() => {\n            setInitialBarrierValue(barrier_1);\n            setV2ParamsInitialValues({ name: 'barrier_1', value: barrier_1 });\n            if (barrier_1.includes('-')) {\n                setOption(1);\n            } else if (barrier_1.includes('+')) {\n                setOption(0);\n            } else {\n                setOption(2);\n            }\n            onChange({ target: { name: 'barrier_1', value: barrier_1 } });\n        }, []);\n\n        React.useEffect(() => {\n            const barrier_element = barrier_ref.current;\n            const checkFocus = () => {\n                setIsFocused(!!(barrier_element && barrier_element.contains(document.activeElement)));\n            };\n            document.addEventListener('focusin', checkFocus);\n            document.addEventListener('focusout', checkFocus);\n\n            return () => {\n                document.removeEventListener('focusin', checkFocus);\n                document.removeEventListener('focusout', checkFocus);\n            };\n        });\n\n        React.useEffect(() => {\n            if (is_focused) {\n                setShouldShowError(false);\n            }\n        }, [is_focused]);\n\n        const handleChipSelect = (index: number) => {\n            setOption(index);\n            const current_value = barrier_1.replace(/^[+-]/, '');\n            let newValue = previous_value.replace(/^[+-]/, '');\n\n            if (index === 0) {\n                newValue = `+${newValue}`;\n            } else if (index === 1) {\n                newValue = `-${newValue}`;\n            } else if (index === 2) {\n                newValue = '';\n                setPreviousValue(current_value);\n            }\n\n            if ((newValue.startsWith('+') || newValue.startsWith('-')) && newValue.charAt(1) === '.') {\n                newValue = `${newValue.charAt(0)}0${newValue.slice(1)}`;\n            } else if (newValue.startsWith('.')) {\n                newValue = `0${newValue}`;\n            }\n\n            onChange({ target: { name: 'barrier_1', value: newValue } });\n        };\n\n        const handleOnChange = (e: { target: { name: string; value: string } }) => {\n            let value = e.target.value;\n            if (option === 0) value = `+${value}`;\n            if (option === 1) value = `-${value}`;\n            onChange({ target: { name: 'barrier_1', value } });\n            setV2ParamsInitialValues({ name: 'barrier_1', value });\n            setPreviousValue(value);\n        };\n\n        return (\n            <>\n                <ActionSheet.Content>\n                    <div className='barrier-params'>\n                        {!isDays && (\n                            <div className='barrier-params__chips'>\n                                {chips_options.map((item, index) => (\n                                    <Chip.Selectable\n                                        key={index}\n                                        onClick={() => handleChipSelect(index)}\n                                        selected={index == option}\n                                    >\n                                        <Text size='sm'>{item.name}</Text>\n                                    </Chip.Selectable>\n                                ))}\n                            </div>\n                        )}\n\n                        <div>\n                            {option === 2 || isDays ? (\n                                <TextField\n                                    customType='commaRemoval'\n                                    name='barrier_1'\n                                    noStatusIcon\n                                    status={show_hidden_error ? 'error' : 'neutral'}\n                                    shouldRound={false}\n                                    value={barrier_1}\n                                    allowDecimals\n                                    decimals={pip_size}\n                                    allowSign={false}\n                                    inputMode='decimal'\n                                    regex={/[^0-9.,]/g}\n                                    textAlignment='center'\n                                    onChange={handleOnChange}\n                                    placeholder={localize('Price')}\n                                    variant='fill'\n                                    message={show_hidden_error ? validation_errors?.barrier_1[0] : ''}\n                                    ref={barrier_ref}\n                                />\n                            ) : (\n                                <TextFieldAddon\n                                    fillAddonBorderColor='var(--semantic-color-slate-solid-surface-frame-mid)'\n                                    customType='commaRemoval'\n                                    name='barrier_1'\n                                    noStatusIcon\n                                    addonLabel={option == 0 ? '+' : '-'}\n                                    decimals={pip_size}\n                                    value={barrier_1.replace(/[+-]/g, '')}\n                                    allowDecimals\n                                    inputMode='decimal'\n                                    allowSign={false}\n                                    status={show_hidden_error ? 'error' : 'neutral'}\n                                    shouldRound={false}\n                                    onChange={handleOnChange}\n                                    placeholder={localize('Distance to spot')}\n                                    regex={/[^0-9.,]/g}\n                                    variant='fill'\n                                    message={show_hidden_error ? validation_errors?.barrier_1[0] : ''}\n                                    ref={barrier_ref}\n                                />\n                            )}\n                            {(validation_errors?.barrier_1.length == 0 || !show_hidden_error) && (\n                                <div className='barrier-params__error-area' />\n                            )}\n                        </div>\n                        <div className='barrier-params__current-spot-wrapper'>\n                            <Text size='sm'>\n                                <Localize i18n_default_text='Current spot' />\n                            </Text>\n                            <Text size='sm'>{tick_data?.quote}</Text>\n                        </div>\n                    </div>\n                </ActionSheet.Content>\n                <ActionSheet.Footer\n                    alignment='vertical'\n                    shouldCloseOnPrimaryButtonClick={false}\n                    primaryAction={{\n                        content: <Localize i18n_default_text='Save' />,\n                        onAction: () => {\n                            if (validation_errors.barrier_1.length === 0) {\n                                onClose(true);\n\n                                // This is a workaround to re-trigger any validation errors that were hidden behind the action sheet\n                                handleOnChange({\n                                    target: { name: 'barrier_1', value: barrier_1.replace(/[+-]/g, '') },\n                                });\n                            } else {\n                                setShouldShowError(true);\n                            }\n                        },\n                    }}\n                />\n            </>\n        );\n    }\n);\n\nexport default BarrierInput;\n","import React from 'react';\nimport { ActionSheet } from '@deriv-com/quill-ui';\nimport { LabelPairedArrowLeftMdRegularIcon, LabelPairedCircleInfoMdRegularIcon } from '@deriv/quill-icons';\n\nexport type TQuillIcon = typeof LabelPairedArrowLeftMdRegularIcon;\ntype TCarouselHeaderProps = {\n    current_index: number;\n    onNextClick: () => void;\n    onPrevClick: () => void;\n    previous_icon?: TQuillIcon;\n    next_icon?: TQuillIcon;\n    title?: React.ReactNode;\n};\n\nconst CarouselHeader = ({\n    current_index,\n    onNextClick,\n    onPrevClick,\n    previous_icon,\n    next_icon,\n    title,\n}: TCarouselHeaderProps) => {\n    const NextIcon = next_icon ?? LabelPairedCircleInfoMdRegularIcon;\n    const PreviousIcon = previous_icon ?? LabelPairedArrowLeftMdRegularIcon;\n\n    return (\n        <ActionSheet.Header\n            className='carousel-controls'\n            title={title}\n            icon={current_index ? <PreviousIcon onClick={onPrevClick} /> : <NextIcon onClick={onNextClick} />}\n            iconPosition={current_index ? 'left' : 'right'}\n        />\n    );\n};\n\nexport default CarouselHeader;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { observer } from 'mobx-react-lite';\nimport { ActionSheet, TextField, useSnackbar } from '@deriv-com/quill-ui';\nimport { Localize } from '@deriv/translations';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport Carousel from 'AppV2/Components/Carousel';\nimport BarrierDescription from './barrier-description';\nimport BarrierInput from './barrier-input';\nimport CarouselHeader from 'AppV2/Components/Carousel/carousel-header';\nimport { TTradeParametersProps } from '../trade-parameters';\n\nconst Barrier = observer(({ is_minimized }: TTradeParametersProps) => {\n    const {\n        barrier_1,\n        onChange,\n        duration_unit,\n        is_market_closed,\n        setV2ParamsInitialValues,\n        v2_params_initial_values,\n        validation_errors,\n        proposal_info,\n        trade_type_tab,\n    } = useTraderStore();\n    const [is_open, setIsOpen] = React.useState(false);\n    const [initialBarrierValue, setInitialBarrierValue] = React.useState('');\n    const isDays = duration_unit == 'd';\n    const has_error =\n        validation_errors.barrier_1.length > 0 ||\n        (proposal_info?.[trade_type_tab]?.has_error && proposal_info?.[trade_type_tab]?.error_field === 'barrier');\n    const { addSnackbar } = useSnackbar();\n    const [barrier_error_shown, setBarrierErrorShown] = React.useState(false);\n\n    const onClose = React.useCallback(\n        (is_saved = false) => {\n            if (is_open) {\n                if (!is_saved) {\n                    onChange({ target: { name: 'barrier_1', value: initialBarrierValue } });\n                }\n                setV2ParamsInitialValues({ value: '', name: 'barrier_1' });\n                setIsOpen(false);\n            }\n        },\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [initialBarrierValue, is_open]\n    );\n\n    React.useEffect(() => {\n        const has_error = proposal_info?.[trade_type_tab]?.has_error;\n        const error_field = proposal_info?.[trade_type_tab]?.error_field;\n        const message = proposal_info?.[trade_type_tab]?.message;\n\n        if (has_error && error_field === 'barrier' && !barrier_error_shown && !is_open && !is_minimized) {\n            addSnackbar({\n                message,\n                hasCloseButton: true,\n                status: 'fail',\n                style: { marginBottom: '48px' },\n            });\n            setBarrierErrorShown(true);\n        }\n    }, [proposal_info]);\n\n    React.useEffect(() => {\n        if (is_open) {\n            setBarrierErrorShown(false);\n        }\n    }, [is_open]);\n\n    const barrier_carousel_pages = [\n        {\n            id: 1,\n            component: (\n                <BarrierInput isDays={isDays} setInitialBarrierValue={setInitialBarrierValue} onClose={onClose} />\n            ),\n        },\n        {\n            id: 2,\n            component: <BarrierDescription isDays={isDays} />,\n        },\n    ];\n\n    return (\n        <>\n            <TextField\n                className={clsx('trade-params__option', is_minimized && 'trade-params__option--minimized')}\n                disabled={is_market_closed}\n                variant='fill'\n                readOnly\n                noStatusIcon\n                label={<Localize i18n_default_text='Barrier' key={`barrier${is_minimized ? '-minimized' : ''}`} />}\n                value={v2_params_initial_values.barrier_1 || barrier_1}\n                onClick={() => setIsOpen(true)}\n                status={has_error && !is_open ? 'error' : undefined}\n            />\n            <ActionSheet.Root\n                isOpen={is_open}\n                onClose={onClose}\n                position='left'\n                expandable={false}\n                shouldBlurOnClose={is_open}\n            >\n                <ActionSheet.Portal shouldCloseOnDrag>\n                    <Carousel\n                        header={CarouselHeader}\n                        title={<Localize i18n_default_text='Barrier' />}\n                        pages={barrier_carousel_pages}\n                    />\n                </ActionSheet.Portal>\n            </ActionSheet.Root>\n        </>\n    );\n});\n\nexport default Barrier;\n","import Barrier from './barrier';\nimport './barrier.scss';\n\nexport default Barrier;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { observer } from '@deriv/stores';\nimport { Skeleton } from '@deriv/components';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { Text } from '@deriv-com/quill-ui';\nimport { Localize } from '@deriv/translations';\n\nconst BarrierInfo = observer(() => {\n    const { barrier_1, contract_type, is_market_closed, proposal_info } = useTraderStore();\n    const contract_key = contract_type.toUpperCase();\n    const has_error = proposal_info[contract_key]?.has_error;\n\n    if (has_error) return null;\n    return (\n        <div className='barrier-info__container'>\n            <Text size='sm' className={clsx(is_market_closed && 'trade-params__text--disabled')}>\n                <Localize i18n_default_text='Barrier' />\n            </Text>\n            {barrier_1 ? (\n                <Text size='sm' bold className={clsx(is_market_closed && 'trade-params__text--disabled')}>\n                    {barrier_1}\n                </Text>\n            ) : (\n                <Skeleton width={50} height={14} />\n            )}\n        </div>\n    );\n});\n\nexport default BarrierInfo;\n","import BarrierInfo from './barrier-info';\nimport './barrier-info.scss';\n\nexport default BarrierInfo;\n","import { Chip, Text } from '@deriv-com/quill-ui';\nimport { Localize } from '@deriv/translations';\nimport React from 'react';\n\nconst DurationChips = ({\n    duration_units_list,\n    onChangeUnit,\n    unit,\n}: {\n    duration_units_list: { text: string; value: string }[];\n    onChangeUnit: (arg: string) => void;\n    unit: string;\n}) => {\n    const show_end_time = duration_units_list.length > 1;\n\n    if (!show_end_time) {\n        return <></>;\n    }\n\n    return (\n        <div className='duration-container__chips'>\n            {duration_units_list.map(\n                (item, index) =>\n                    item.value !== 'd' && (\n                        <Chip.Selectable\n                            key={`${item.text}-${index}`}\n                            selected={unit == item.value}\n                            className='duration-container__chips__chip'\n                            onClick={() => onChangeUnit(item.value)}\n                        >\n                            <Text size='sm'>{item.text}</Text>\n                        </Chip.Selectable>\n                    )\n            )}\n            {show_end_time && (\n                <Chip.Selectable\n                    key='end-time'\n                    selected={unit === 'd'}\n                    className='duration-container__chips__chip'\n                    onClick={() => onChangeUnit('d')}\n                >\n                    <Text size='sm'>\n                        <Localize i18n_default_text='End Time' />\n                    </Text>\n                </Chip.Selectable>\n            )}\n        </div>\n    );\n};\n\nexport default DurationChips;\n","import { WheelPickerContainer } from '@deriv-com/quill-ui';\nimport { localize } from '@deriv/translations';\nimport React, { useState, useEffect } from 'react';\n\ntype TimeOption = {\n    label: string;\n    value: number;\n};\n\nconst HourPicker = ({\n    setWheelPickerValue,\n    selected_hour,\n    selected_time,\n    duration_min_max,\n}: {\n    setWheelPickerValue: (index: number, value: string | number) => void;\n    selected_hour: number[];\n    selected_time: number[];\n    duration_min_max: Record<string, { min: number; max: number }>;\n}) => {\n    const [hours, setHours] = useState<TimeOption[]>([]);\n    const [minutes, setMinutes] = useState<TimeOption[]>([]);\n\n    useEffect(() => {\n        const min_seconds = Math.max(duration_min_max.intraday.min, 3600);\n        const max_seconds = duration_min_max.intraday.max;\n\n        const min_hours = Math.max(1, Math.ceil(min_seconds / 3600));\n        const max_hours = Math.floor(max_seconds / 3600);\n\n        const new_hours = Array.from({ length: max_hours - min_hours + 1 }, (_, i) => ({\n            label: `${i + min_hours} ${localize('h')}`,\n            value: i + min_hours,\n        }));\n        setHours(new_hours);\n\n        update_minutes(selected_hour[0] || min_hours, min_seconds, max_seconds);\n    }, [duration_min_max, selected_hour]);\n\n    const update_minutes = (selected_hour: number, min_seconds: number, max_seconds: number) => {\n        let min_minutes = 0;\n        let max_minutes = 59;\n\n        if (selected_hour === Math.ceil(min_seconds / 3600)) {\n            min_minutes = Math.ceil((min_seconds % 3600) / 60);\n        }\n\n        if (selected_hour === Math.floor(max_seconds / 3600)) {\n            max_minutes = Math.floor((max_seconds % 3600) / 60);\n        }\n\n        if (min_minutes > 0 && selected_hour * 3600 >= min_seconds) {\n            min_minutes = 0;\n        }\n\n        const new_minutes = Array.from({ length: max_minutes - min_minutes + 1 }, (_, i) => ({\n            label: `${i + min_minutes} ${localize('min')}`,\n            value: i + min_minutes,\n        }));\n        setMinutes(new_minutes);\n    };\n\n    const handle_value_change = (index: number, value: string | number) => {\n        setWheelPickerValue(index, value);\n        if (index === 0) {\n            update_minutes(Number(value), duration_min_max.intraday.min, duration_min_max.intraday.max);\n        }\n    };\n\n    const getDefaultValue = (options: TimeOption[], selected_value: number) => {\n        const option = options.find(opt => opt.value === selected_value);\n        return option ? option.label : options[0]?.label || `1 ${localize('h')}`;\n    };\n\n    return (\n        <WheelPickerContainer\n            data={[hours, minutes]}\n            defaultValue={[getDefaultValue(hours, selected_hour[0]), getDefaultValue(minutes, selected_time[1])]}\n            containerHeight='268px'\n            inputValues={[selected_hour[0] || hours[0]?.value, selected_time[1] || minutes[0]?.value]}\n            setInputValues={handle_value_change}\n        />\n    );\n};\n\nexport default HourPicker;\n","import { WheelPickerContainer } from '@deriv-com/quill-ui';\nimport { observer } from '@deriv/stores';\nimport { DURATION_UNIT, getOptionPerUnit } from 'AppV2/Utils/trade-params-utils';\nimport clsx from 'clsx';\nimport React from 'react';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport HourPicker from './hourpicker';\n\nconst DurationWheelPicker = observer(\n    ({\n        unit,\n        setWheelPickerValue,\n        selected_hour,\n        selected_time,\n    }: {\n        unit: string;\n        setWheelPickerValue: (index: number, value: string | number) => void;\n        selected_hour: number[];\n        selected_time: number[];\n    }) => {\n        const { duration_min_max, duration_units_list } = useTraderStore();\n        const options = React.useMemo(() => getOptionPerUnit(unit, duration_min_max), [unit, duration_min_max]);\n\n        const handleContainerHeight = () => {\n            if (unit === DURATION_UNIT.DAYS) {\n                return '228px';\n            }\n            return duration_units_list.length === 1 ? '230px' : '268px';\n        };\n        return (\n            <div\n                className={clsx('duration-container__wheel-picker-container', {\n                    'duration-container__wheel-picker-container__single':\n                        duration_units_list.length == 1 && unit !== DURATION_UNIT.DAYS,\n                })}\n            >\n                {unit !== DURATION_UNIT.HOURS ? (\n                    <WheelPickerContainer\n                        data={options}\n                        defaultValue={[String(selected_time)]}\n                        containerHeight={handleContainerHeight()}\n                        inputValues={selected_time}\n                        setInputValues={setWheelPickerValue}\n                    />\n                ) : (\n                    <HourPicker\n                        setWheelPickerValue={setWheelPickerValue}\n                        selected_hour={selected_hour}\n                        selected_time={selected_time}\n                        duration_min_max={duration_min_max}\n                    />\n                )}\n            </div>\n        );\n    }\n);\n\nexport default DurationWheelPicker;\n","import { DatePicker } from '@deriv-com/quill-ui';\nimport { toMoment, useIsMounted } from '@deriv/shared';\nimport React, { useEffect } from 'react';\nimport { ContractType } from 'Stores/Modules/Trading/Helpers/contract-type';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\nconst DaysDatepicker = ({\n    start_date,\n    end_date,\n    setEndDate,\n}: {\n    start_date: Date;\n    setEndDate: (arg: Date) => void;\n    end_date: Date;\n}) => {\n    const [disabled_days, setDisabledDays] = React.useState<number[]>([]);\n    const { symbol } = useTraderStore();\n    const isMounted = useIsMounted();\n\n    const onChangeCalendarMonth = React.useCallback(\n        async (e = toMoment().format('YYYY-MM-DD')) => {\n            let new_disabled_days: number[] = [];\n            const events = await ContractType.getTradingEvents(e, symbol);\n            events?.forEach(evt => {\n                const dates = evt.dates.split(', ');\n                const idx = dates.indexOf('Fridays');\n                if (idx !== -1) {\n                    new_disabled_days = [6, 0];\n                }\n            });\n\n            if (isMounted()) {\n                setDisabledDays(new_disabled_days);\n            }\n        },\n        [isMounted, symbol]\n    );\n\n    useEffect(() => {\n        onChangeCalendarMonth();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const getDisabledDays = ({ date }: { date: Date }) => {\n        const day = date.getDay();\n        return disabled_days.includes(day);\n    };\n    return (\n        <div className='duration-datepicker duration-container__date-picker'>\n            <DatePicker\n                className='date-picker'\n                hasFixedWidth={false}\n                minDate={new Date(start_date)}\n                maxDate={new Date(new Date().setFullYear(new Date().getFullYear() + 1))}\n                view='month'\n                value={end_date}\n                tileDisabled={getDisabledDays}\n                onChange={date => {\n                    if (date && date instanceof Date) {\n                        setEndDate(date);\n                    }\n                }}\n                wrapperClassName='duration-container__date-picker__sheet'\n            />\n        </div>\n    );\n};\n\nexport default DaysDatepicker;\n","import { CaptionText, Text, TimeWheelPickerContainer } from '@deriv-com/quill-ui';\nimport { Localize } from '@deriv/translations';\nimport React from 'react';\n\nconst EndTimePicker = ({\n    end_time,\n    setEndTime,\n    current_gmt_time,\n    adjusted_start_time,\n}: {\n    end_time: string;\n    setEndTime: (arg: string) => void;\n    current_gmt_time: string;\n    adjusted_start_time: string;\n}) => {\n    return (\n        <div className='duration-container__time-picker'>\n            <TimeWheelPickerContainer\n                is12Hour={false}\n                startTimeIn24Format={adjusted_start_time}\n                minutesInterval={5}\n                selectedTime={end_time}\n                setSelectedValue={val => setEndTime(val as string)}\n                containerHeight='256px'\n                hoursInterval={1}\n            />\n            <div className='duration-container__endtime'>\n                <CaptionText color='quill-typography__color--subtle'>\n                    <Localize i18n_default_text='Current time' />\n                </CaptionText>\n                <Text size='sm'>{`${current_gmt_time} GMT`}</Text>\n            </div>\n        </div>\n    );\n};\n\nexport default EndTimePicker;\n","import { ActionSheet, Text, TextField, useSnackbar } from '@deriv-com/quill-ui';\nimport { LabelPairedCalendarSmRegularIcon, LabelPairedClockThreeSmRegularIcon } from '@deriv/quill-icons';\nimport { Localize } from '@deriv/translations';\nimport React, { useEffect, useState } from 'react';\n\nimport DaysDatepicker from './datepicker';\nimport EndTimePicker from './timepicker';\nimport { useStore } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { hasIntradayDurationUnit, setTime, toMoment } from '@deriv/shared';\nimport { getBoundaries } from 'Stores/Modules/Trading/Helpers/end-time';\nimport {\n    getClosestTimeToCurrentGMT,\n    getDatePickerStartDate,\n    getProposalRequestObject,\n} from 'AppV2/Utils/trade-params-utils';\nimport { invalidateDTraderCache, useDtraderQuery } from 'AppV2/Hooks/useDtraderQuery';\nimport { ProposalResponse } from 'Stores/Modules/Trading/trade-store';\n\nconst timeToMinutes = (time: string) => {\n    const [hours, minutes] = time.split(':').map(Number);\n    return hours * 60 + minutes;\n};\n\nconst DayInput = ({\n    end_time,\n    expiry_time_input,\n    saved_expiry_date_v2,\n    setEndTime,\n    setExpiryTimeInput,\n    setUnsavedExpiryDateV2,\n    unsaved_expiry_date_v2,\n}: {\n    end_time: string;\n    expiry_time_input: string;\n    saved_expiry_date_v2: string;\n    setEndTime: (arg: string) => void;\n    setExpiryTimeInput: (arg: string) => void;\n    setUnsavedExpiryDateV2: (arg: string) => void;\n    unsaved_expiry_date_v2: string;\n}) => {\n    const [current_gmt_time, setCurrentGmtTime] = React.useState<string>('');\n    const [open, setOpen] = React.useState(false);\n    const [open_timepicker, setOpenTimePicker] = React.useState(false);\n    const [trigger_date, setTriggerDate] = useState(false);\n    const [is_disabled, setIsDisabled] = useState(false);\n    const [calendar_date_input, setCalendarDateInput] = useState(\n        new Date(saved_expiry_date_v2 || unsaved_expiry_date_v2)\n    );\n    const [payout_per_point, setPayoutPerPoint] = useState<number | undefined>();\n    const [barrier_value, setBarrierValue] = useState<string | undefined>();\n    const { common } = useStore();\n    const [day, setDay] = useState<number | null>(null);\n    const { server_time } = common;\n    const {\n        barrier_1,\n        contract_type,\n        duration_min_max,\n        duration_units_list,\n        duration,\n        expiry_date,\n        is_turbos,\n        market_close_times,\n        market_open_times,\n        start_date,\n        start_time,\n        symbol,\n        tick_data,\n        trade_types,\n    } = useTraderStore();\n    const trade_store = useTraderStore();\n    const { addSnackbar } = useSnackbar();\n\n    const new_values = {\n        duration_unit: 'd',\n        duration: day || duration,\n        expiry_type: 'duration',\n        contract_type,\n        basis: 'stake',\n        amount: '5',\n        symbol,\n        ...(payout_per_point && { payout_per_point }),\n        ...(barrier_value && { barrier: barrier_value }),\n    };\n\n    const proposal_req = getProposalRequestObject({\n        new_values,\n        trade_store,\n        trade_type: Object.keys(trade_types)[0],\n    });\n\n    const { data: response } = useDtraderQuery<ProposalResponse>(\n        ['proposal', JSON.stringify(day), JSON.stringify(payout_per_point), JSON.stringify(barrier_value)],\n        {\n            ...proposal_req,\n            symbol,\n            ...(barrier_1 && !is_turbos && !barrier_value ? { barrier: Math.round(tick_data?.quote as number) } : {}),\n        },\n        {\n            enabled: trigger_date,\n        }\n    );\n\n    useEffect(() => {\n        if (response) {\n            if (response?.error?.code === 'ContractBuyValidationError') {\n                const details = response.error.details;\n\n                if (details?.field === 'payout_per_point' && details?.payout_per_point_choices) {\n                    const suggested_payout = details?.payout_per_point_choices[0];\n                    setPayoutPerPoint(suggested_payout);\n                    setTriggerDate(true);\n                    return;\n                }\n\n                if (details?.field === 'barrier' && details?.barrier_choices) {\n                    const suggested_barrier = details?.barrier_choices[0];\n                    setBarrierValue(suggested_barrier);\n                    setTriggerDate(true);\n                    return;\n                }\n            }\n\n            if (response?.error?.message && response?.error?.details?.field === 'duration') {\n                addSnackbar({\n                    message: <Localize i18n_default_text={response?.error?.message} />,\n                    status: 'fail',\n                    hasCloseButton: true,\n                    style: { marginBottom: '48px' },\n                });\n                setIsDisabled(true);\n            } else {\n                setIsDisabled(false);\n            }\n\n            if (response?.proposal?.date_expiry) {\n                setExpiryTimeInput(\n                    new Date((response?.proposal?.date_expiry as number) * 1000)\n                        .toISOString()\n                        .split('T')[1]\n                        .substring(0, 8)\n                );\n            }\n\n            invalidateDTraderCache([\n                'proposal',\n                JSON.stringify(day),\n                JSON.stringify(payout_per_point),\n                JSON.stringify(barrier_value),\n            ]);\n            setTriggerDate(false);\n        }\n    }, [response, setExpiryTimeInput, setUnsavedExpiryDateV2]);\n\n    const moment_expiry_date = toMoment(expiry_date);\n    const market_open_datetimes = market_open_times.map(open_time => setTime(moment_expiry_date.clone(), open_time));\n    const market_close_datetimes = market_close_times.map(close_time =>\n        setTime(moment_expiry_date.clone(), close_time)\n    );\n    const server_datetime = toMoment(server_time);\n    const boundaries = getBoundaries(server_datetime.clone(), market_open_datetimes, market_close_datetimes);\n    const adjusted_start_time =\n        boundaries.start[0]?.clone().add(5, 'minutes').format('HH:mm') || getClosestTimeToCurrentGMT(5);\n\n    const formatted_date = new Date(unsaved_expiry_date_v2).toLocaleDateString('en-GB', {\n        day: 'numeric',\n        month: 'short',\n        year: 'numeric',\n    });\n    const formatted_current_date = new Date().toLocaleDateString('en-GB', {\n        day: 'numeric',\n        month: 'short',\n        year: 'numeric',\n    });\n\n    React.useEffect(() => {\n        const updateCurrentGmtTime = () => {\n            const now = new Date();\n            const gmt_time = now.toLocaleTimeString('en-GB', { timeZone: 'GMT', hour12: false });\n            setCurrentGmtTime(gmt_time);\n        };\n        updateCurrentGmtTime();\n        const interval = setInterval(updateCurrentGmtTime, 1000);\n        // Adjusts end_time to match adjusted_start_time only if end_time is less than adjusted_start_time\n        // and the difference is exactly 5 minutes, ensuring time remains valid.\n        if (\n            end_time !== '' &&\n            timeToMinutes(end_time) < timeToMinutes(adjusted_start_time) &&\n            Math.abs(timeToMinutes(adjusted_start_time) - timeToMinutes(end_time)) === 5 &&\n            !open_timepicker\n        ) {\n            setEndTime(adjusted_start_time);\n        }\n        return () => clearInterval(interval);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [end_time, adjusted_start_time]);\n\n    useEffect(() => {\n        if (formatted_date === formatted_current_date && !end_time) {\n            setEndTime(adjusted_start_time);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [unsaved_expiry_date_v2]);\n\n    let is_24_hours_contract = false;\n\n    const has_intraday_duration_unit = hasIntradayDurationUnit(duration_units_list);\n    const parsedFormattedDate = new Date(Date.parse(`${formatted_date} 00:00:00`));\n\n    const isSameDate =\n        parsedFormattedDate.getFullYear() === server_time.year() &&\n        parsedFormattedDate.getMonth() === server_time.month() &&\n        parsedFormattedDate.getDate() === server_time.date();\n\n    is_24_hours_contract = (!!start_date || isSameDate) && has_intraday_duration_unit;\n\n    const handleDate = (date: Date) => {\n        const difference_in_time = date.getTime() - new Date().getTime();\n        const difference_in_days = Math.ceil(difference_in_time / (1000 * 3600 * 24));\n        setDay(Number(difference_in_days));\n        setCalendarDateInput(date);\n        if (difference_in_days == 0) {\n            setEndTime(adjusted_start_time);\n            const today = new Date().toISOString().split('T')[0];\n            setUnsavedExpiryDateV2(today);\n        } else {\n            setEndTime('');\n            setUnsavedExpiryDateV2(\n                `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')}`\n            );\n        }\n        setTriggerDate(true);\n    };\n\n    return (\n        <div className='duration-container__days-input'>\n            <TextField\n                variant='fill'\n                readOnly\n                name='date'\n                data-testid='dt_date_input'\n                textAlignment='center'\n                value={formatted_date}\n                disabled={duration_units_list.filter(item => item.value === 'd').length === 0}\n                onClick={() => {\n                    setOpen(true);\n                }}\n                leftIcon={<LabelPairedCalendarSmRegularIcon width={24} height={24} />}\n            />\n\n            <TextField\n                variant='fill'\n                readOnly\n                textAlignment='center'\n                name='time'\n                value={`${(is_24_hours_contract ? end_time : expiry_time_input) || '23:59:59'} GMT`}\n                disabled={!is_24_hours_contract}\n                onClick={() => {\n                    setOpenTimePicker(true);\n                }}\n                leftIcon={<LabelPairedClockThreeSmRegularIcon width={24} height={24} />}\n            />\n\n            <div className='duration-container__days-input__expiry'>\n                <Text size='sm' color='quill-typography__color--subtle'>\n                    <Localize i18n_default_text='Expiry' />\n                </Text>\n                <Text size='sm'>{`\n                ${formatted_date} ${\n                    (formatted_date === formatted_current_date ? end_time : expiry_time_input) || '23:59:59'\n                } GMT`}</Text>\n            </div>\n            <ActionSheet.Root\n                isOpen={open || open_timepicker}\n                onClose={() => {\n                    setOpen(false);\n                    setOpenTimePicker(false);\n                    setIsDisabled(false);\n                }}\n                position='left'\n                expandable={false}\n            >\n                <ActionSheet.Portal shouldCloseOnDrag>\n                    <ActionSheet.Header\n                        title={\n                            open ? (\n                                <Localize i18n_default_text='Pick an end date' />\n                            ) : (\n                                <Localize i18n_default_text='Pick an end time' />\n                            )\n                        }\n                    />\n                    {open && (\n                        <DaysDatepicker\n                            start_date={getDatePickerStartDate(\n                                duration_units_list,\n                                server_time,\n                                start_time,\n                                duration_min_max\n                            )}\n                            end_date={calendar_date_input}\n                            setEndDate={handleDate}\n                        />\n                    )}\n                    {open_timepicker && (\n                        <EndTimePicker\n                            setEndTime={setEndTime}\n                            end_time={end_time}\n                            current_gmt_time={current_gmt_time}\n                            adjusted_start_time={adjusted_start_time}\n                        />\n                    )}\n                    <ActionSheet.Footer\n                        alignment='vertical'\n                        shouldCloseOnPrimaryButtonClick={false}\n                        isPrimaryButtonDisabled={is_disabled}\n                        primaryAction={{\n                            content: <Localize i18n_default_text='Done' />,\n                            onAction: () => {\n                                if (!is_disabled) {\n                                    setOpen(false);\n                                    setOpenTimePicker(false);\n                                    const end_date = new Date(unsaved_expiry_date_v2).toLocaleDateString('en-GB', {\n                                        day: 'numeric',\n                                        month: 'short',\n                                        year: 'numeric',\n                                    });\n\n                                    if (end_date !== formatted_current_date) {\n                                        setEndTime('');\n                                    }\n                                    if (timeToMinutes(adjusted_start_time) > timeToMinutes(end_time)) {\n                                        setEndTime(adjusted_start_time);\n                                    }\n                                }\n                            },\n                        }}\n                    />\n                </ActionSheet.Portal>\n            </ActionSheet.Root>\n        </div>\n    );\n};\n\nexport default DayInput;\n","import React, { useState } from 'react';\nimport { ActionSheet } from '@deriv-com/quill-ui';\nimport { Localize } from '@deriv/translations';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { observer } from '@deriv/stores';\nimport DurationChips from './chips';\nimport DurationWheelPicker from './duration-wheel-picker';\nimport DayInput from './day';\nimport { DURATION_UNIT } from 'AppV2/Utils/trade-params-utils';\n\nconst DurationActionSheetContainer = observer(\n    ({\n        end_time,\n        expiry_time_string,\n        saved_expiry_date_v2,\n        selected_hour,\n        setEndTime,\n        setExpiryTimeString,\n        setSavedExpiryDateV2,\n        setSelectedHour,\n        setUnit,\n        setUnsavedExpiryDateV2,\n        unit,\n        unsaved_expiry_date_v2,\n    }: {\n        selected_hour: number[];\n        setSelectedHour: (arg: number[]) => void;\n        unit: string;\n        setUnit: (arg: string) => void;\n        end_time: string;\n        setEndTime: (arg: string) => void;\n        expiry_time_string: string;\n        setExpiryTimeString: (arg: string) => void;\n        saved_expiry_date_v2: string;\n        setSavedExpiryDateV2: (arg: string) => void;\n        unsaved_expiry_date_v2: string;\n        setUnsavedExpiryDateV2: (arg: string) => void;\n    }) => {\n        const { duration, duration_units_list, onChangeMultiple } = useTraderStore();\n        const [selected_time, setSelectedTime] = useState([duration]);\n        const [expiry_time_input, setExpiryTimeInput] = React.useState(expiry_time_string);\n\n        React.useEffect(() => {\n            setUnsavedExpiryDateV2(saved_expiry_date_v2 || unsaved_expiry_date_v2);\n        }, []);\n\n        const onAction = () => {\n            setExpiryTimeString(expiry_time_input);\n            setSavedExpiryDateV2(unsaved_expiry_date_v2);\n            if (unit === DURATION_UNIT.HOURS) {\n                const minutes = selected_hour[0] * 60 + selected_hour[1];\n                const hour = Math.floor(duration / 60);\n                const min = duration % 60;\n                setSelectedHour([hour, min]);\n                setEndTime('');\n                onChangeMultiple({\n                    duration_unit: DURATION_UNIT.MINUTES,\n                    duration: Number(minutes),\n                    expiry_time: null,\n                    expiry_type: 'duration',\n                });\n            } else if (unit === DURATION_UNIT.DAYS) {\n                const difference_in_time = new Date(unsaved_expiry_date_v2).getTime() - new Date().getTime();\n                const difference_in_days = Math.ceil(difference_in_time / (1000 * 3600 * 24));\n                setSelectedHour([]);\n                if (end_time) {\n                    onChangeMultiple({\n                        expiry_time: end_time,\n                        expiry_type: 'endtime',\n                    });\n                } else {\n                    setEndTime('');\n                    onChangeMultiple({\n                        duration_unit: DURATION_UNIT.DAYS,\n                        duration: Number(difference_in_days),\n                        expiry_time: null,\n                        expiry_type: 'duration',\n                    });\n                }\n            } else {\n                setEndTime('');\n                setSelectedHour([]);\n                onChangeMultiple({\n                    duration_unit: unit,\n                    duration: Number(selected_time),\n                    expiry_time: null,\n                    expiry_type: 'duration',\n                });\n            }\n        };\n\n        const onChangeUnit = React.useCallback(\n            (value: string) => {\n                setUnit(value);\n                setSelectedTime([]);\n                if (value !== DURATION_UNIT.HOURS) {\n                    setSelectedHour([]);\n                }\n            },\n            [setUnit, setSelectedHour]\n        );\n\n        const setWheelPickerValue = (index: number, value: string | number) => {\n            const num_value = Number(value);\n            if (unit === DURATION_UNIT.HOURS) {\n                const arr = selected_hour;\n                arr[index] = num_value;\n                setSelectedHour(arr);\n            } else {\n                setSelectedTime([num_value]);\n            }\n        };\n\n        return (\n            <div className='duration-container'>\n                <ActionSheet.Header title={<Localize i18n_default_text='Duration' />} />\n                <DurationChips duration_units_list={duration_units_list} onChangeUnit={onChangeUnit} unit={unit} />\n                {unit !== DURATION_UNIT.DAYS && (\n                    <DurationWheelPicker\n                        unit={unit}\n                        setWheelPickerValue={setWheelPickerValue}\n                        selected_hour={selected_hour}\n                        selected_time={selected_time}\n                    />\n                )}\n\n                {unit === DURATION_UNIT.DAYS && (\n                    <DayInput\n                        end_time={end_time}\n                        expiry_time_input={expiry_time_input}\n                        saved_expiry_date_v2={saved_expiry_date_v2}\n                        setEndTime={setEndTime}\n                        setExpiryTimeInput={setExpiryTimeInput}\n                        setUnsavedExpiryDateV2={setUnsavedExpiryDateV2}\n                        unsaved_expiry_date_v2={unsaved_expiry_date_v2 || saved_expiry_date_v2}\n                    />\n                )}\n                <ActionSheet.Footer\n                    alignment='vertical'\n                    primaryAction={{\n                        content: <Localize i18n_default_text='Save' />,\n                        onAction,\n                    }}\n                />\n            </div>\n        );\n    }\n);\n\nexport default DurationActionSheetContainer;\n","import React, { useEffect, useRef, useState } from 'react';\nimport clsx from 'clsx';\nimport { observer } from 'mobx-react-lite';\nimport { ActionSheet, TextField, useSnackbar } from '@deriv-com/quill-ui';\nimport { getUnitMap } from '@deriv/shared';\nimport { Localize, localize } from '@deriv/translations';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport DurationActionSheetContainer from './container';\nimport { getDisplayedContractTypes } from 'AppV2/Utils/trade-types-utils';\nimport { getDatePickerStartDate, getSmallestDuration } from 'AppV2/Utils/trade-params-utils';\nimport { useStore } from '@deriv/stores';\nimport { TTradeParametersProps } from '../trade-parameters';\n\nconst Duration = observer(({ is_minimized }: TTradeParametersProps) => {\n    const {\n        contract_type,\n        duration_min_max,\n        duration_unit,\n        duration_units_list,\n        duration,\n        expiry_epoch,\n        expiry_time,\n        expiry_type,\n        is_market_closed,\n        onChangeMultiple,\n        proposal_info,\n        saved_expiry_date_v2,\n        setSavedExpiryDateV2,\n        setUnsavedExpiryDateV2,\n        start_time,\n        symbol,\n        trade_type_tab,\n        trade_types,\n        unsaved_expiry_date_v2,\n        validation_errors,\n    } = useTraderStore();\n    const { addSnackbar } = useSnackbar();\n    const { name_plural, name } = getUnitMap()[duration_unit] ?? {};\n    const duration_unit_text = name_plural ?? name;\n    const [selected_hour, setSelectedHour] = useState<number[]>([]);\n    const [is_open, setOpen] = useState(false);\n    const [expiry_time_string, setExpiryTimeString] = useState('');\n    const [expiry_date_string, setExpiryDateString] = useState('');\n    const [end_date, setEndDate] = useState<Date>(new Date());\n    const [end_time, setEndTime] = useState<string>('');\n    const [unit, setUnit] = useState(expiry_time ? 'd' : duration_unit);\n    const contract_type_object = getDisplayedContractTypes(trade_types, contract_type, trade_type_tab);\n    const has_error =\n        (proposal_info[contract_type_object[0]]?.has_error &&\n            proposal_info[contract_type_object[0]]?.error_field === 'duration') ||\n        validation_errors.duration.length > 0;\n    const isInitialMount = useRef(true);\n    const { common, client } = useStore();\n    const { is_logged_in } = client;\n    const { server_time } = common;\n\n    useEffect(() => {\n        if (expiry_epoch) {\n            setExpiryTimeString(\n                new Date((expiry_epoch as number) * 1000).toISOString().split('T')[1].substring(0, 8) || ''\n            );\n\n            const new_date_string = new Date((expiry_epoch as number) * 1000).toISOString().split('T')[0];\n            setExpiryDateString(new Date((expiry_epoch as number) * 1000).toISOString().split('T')[0]);\n            setSavedExpiryDateV2(new_date_string);\n        }\n    }, [expiry_epoch]);\n\n    useEffect(() => {\n        if (duration_unit == 'd') {\n            const newDate = new Date();\n            newDate.setDate(newDate.getDate() + duration);\n            setEndDate(newDate);\n        }\n    }, [duration_unit]);\n\n    useEffect(() => {\n        if (isInitialMount.current) {\n            const timer = setTimeout(() => {\n                isInitialMount.current = false;\n            }, 500);\n            return () => clearTimeout(timer);\n        }\n\n        const result = getSmallestDuration(duration_min_max, duration_units_list);\n        if (result?.unit == 'd') {\n            setEndDate(new Date());\n        }\n\n        const start_duration = setTimeout(() => {\n            onChangeMultiple({\n                duration_unit: result?.unit,\n                duration: result?.value,\n                expiry_time: null,\n                expiry_type: 'duration',\n            });\n        }, 10);\n\n        const start_date = getDatePickerStartDate(duration_units_list, server_time, start_time, duration_min_max);\n\n        setEndDate(new Date(start_date));\n\n        return () => clearTimeout(start_duration);\n    }, [symbol, contract_type, duration_min_max, duration_units_list]);\n\n    const onClose = React.useCallback(() => setOpen(false), []);\n\n    const getInputValues = () => {\n        const formatted_date = saved_expiry_date_v2\n            ? new Date(saved_expiry_date_v2).toLocaleDateString('en-GB', {\n                  day: 'numeric',\n                  month: 'short',\n                  year: 'numeric',\n              })\n            : '';\n        if (expiry_type == 'duration') {\n            if (duration_unit === 'm' && duration > 59) {\n                const hours = Math.floor(duration / 60);\n                const minutes = duration % 60;\n                return `${hours} ${localize('hours')} ${minutes ? `${minutes} ${localize('minutes')}` : ''} `;\n            } else if (duration_unit === 'd') {\n                if (!formatted_date) {\n                    return '';\n                }\n                return `${localize('Ends on')} ${formatted_date}, ${expiry_time_string || '23:59:59'} GMT`;\n            }\n            return `${duration} ${duration_unit_text}`;\n        }\n        if (expiry_time) {\n            return `${localize('Ends on')} ${formatted_date} ${expiry_time} GMT`;\n        }\n    };\n\n    useEffect(() => {\n        if (has_error && !is_minimized) {\n            const error_obj = proposal_info[contract_type_object[0]] || validation_errors?.duration?.[0];\n            if (error_obj?.error_field === 'duration') {\n                addSnackbar({\n                    message: error_obj.message,\n                    status: 'fail',\n                    hasCloseButton: true,\n                    hasFixedHeight: false,\n                    style: {\n                        marginBottom: is_logged_in ? '48px' : '-8px',\n                        width: 'calc(100% - var(--core-spacing-800)',\n                    },\n                });\n            }\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [has_error, contract_type_object[0]]);\n\n    const handleHour = React.useCallback(() => {\n        if (expiry_time) {\n            setUnit('d');\n            setEndTime(expiry_time);\n        } else {\n            // eslint-disable-next-line no-lonely-if\n            if (duration_unit === 'm' && duration > 59) {\n                const hour = Math.floor(duration / 60);\n                const minutes = duration % 60;\n                setUnit('h');\n                setSelectedHour([hour, minutes]);\n            } else {\n                setSelectedHour([]);\n                setUnit(duration_unit);\n            }\n        }\n    }, [duration, duration_unit, expiry_time]);\n\n    useEffect(() => {\n        if (is_open) {\n            handleHour();\n        }\n    }, [is_open]);\n\n    return (\n        <>\n            <TextField\n                variant='fill'\n                key={`${duration}-$${duration_unit}`}\n                readOnly\n                label={<Localize i18n_default_text='Duration' key={`duration${is_minimized ? '-minimized' : ''}`} />}\n                value={getInputValues()}\n                noStatusIcon\n                disabled={is_market_closed}\n                className={clsx('trade-params__option', is_minimized && 'trade-params__option--minimized')}\n                onClick={() => setOpen(true)}\n                status={has_error ? 'error' : 'neutral'}\n            />\n            <ActionSheet.Root\n                isOpen={is_open}\n                onClose={onClose}\n                position='left'\n                expandable={false}\n                shouldBlurOnClose={is_open}\n            >\n                <ActionSheet.Portal shouldCloseOnDrag>\n                    <DurationActionSheetContainer\n                        selected_hour={selected_hour}\n                        setSelectedHour={setSelectedHour}\n                        unit={unit}\n                        setUnit={setUnit}\n                        expiry_time_string={expiry_time_string}\n                        setExpiryTimeString={setExpiryTimeString}\n                        end_time={end_time}\n                        setEndTime={setEndTime}\n                        saved_expiry_date_v2={saved_expiry_date_v2}\n                        setSavedExpiryDateV2={setSavedExpiryDateV2}\n                        unsaved_expiry_date_v2={unsaved_expiry_date_v2}\n                        setUnsavedExpiryDateV2={setUnsavedExpiryDateV2}\n                    />\n                </ActionSheet.Portal>\n            </ActionSheet.Root>\n        </>\n    );\n});\n\nexport default Duration;\n","import Duration from './duration';\nimport './duration.scss';\n\nexport default Duration;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { ActionSheet, Text } from '@deriv-com/quill-ui';\n\ntype TTradeParamDefinitionProps = {\n    classname?: string;\n    description?: React.ReactNode;\n    is_custom_description?: boolean;\n};\n\nconst TradeParamDefinition = ({ classname, description, is_custom_description }: TTradeParamDefinitionProps) => {\n    if (!description) return null;\n    return (\n        <ActionSheet.Content className={clsx('trade-param-definition', classname)}>\n            {is_custom_description ? description : <Text>{description}</Text>}\n        </ActionSheet.Content>\n    );\n};\n\nexport default TradeParamDefinition;\n","import './trade-param-definition.scss';\nimport TradeParamDefinition from './trade-param-definition';\n\nexport default TradeParamDefinition;\n","import React from 'react';\nimport debounce from 'lodash.debounce';\nimport { ActionSheet, Text, WheelPicker } from '@deriv-com/quill-ui';\nimport { localize, Localize } from '@deriv/translations';\nimport { getGrowthRatePercentage } from '@deriv/shared';\nimport { Skeleton } from '@deriv/components';\nimport type { TV2ParamsInitialValues } from 'Stores/Modules/Trading/trade-store';\n\ntype TGrowthRatePickerProps = {\n    accumulator_range_list?: number[];\n    growth_rate: number;\n    maximum_ticks: number;\n    setGrowthRate: (growth_rate: number) => void;\n    setV2ParamsInitialValues: ({ value, name }: { value: number | string; name: keyof TV2ParamsInitialValues }) => void;\n    should_show_details?: boolean;\n    tick_size_barrier_percentage: string;\n};\n\nconst debouncedSetGrowthRate = debounce((setGrowthRate, growth_rate) => {\n    setGrowthRate(growth_rate);\n}, 200);\n\nconst GrowthRatePicker = ({\n    accumulator_range_list = [],\n    growth_rate,\n    maximum_ticks,\n    setGrowthRate,\n    setV2ParamsInitialValues,\n    should_show_details,\n    tick_size_barrier_percentage,\n}: TGrowthRatePickerProps) => {\n    const initial_growth_rate = React.useRef<number>();\n    const selected_growth_rate = React.useRef<number>(growth_rate);\n    const data = accumulator_range_list.map(rate => ({ value: `${getGrowthRatePercentage(rate)}%` }));\n    const details_content = [\n        {\n            label: <Localize i18n_default_text='Barrier' />,\n            value: `±${tick_size_barrier_percentage}`,\n        },\n        {\n            label: <Localize i18n_default_text='Max duration' />,\n            value: `${maximum_ticks || 0} ${maximum_ticks === 1 ? localize('tick') : localize('ticks')}`,\n        },\n    ];\n\n    React.useEffect(() => {\n        if (!initial_growth_rate.current && growth_rate) {\n            initial_growth_rate.current = growth_rate;\n            setV2ParamsInitialValues({ value: growth_rate, name: 'growth_rate' });\n        }\n        return () => {\n            if (initial_growth_rate.current && initial_growth_rate.current !== selected_growth_rate.current) {\n                setGrowthRate(initial_growth_rate.current);\n            }\n            debouncedSetGrowthRate.cancel();\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const handleSave = () => {\n        initial_growth_rate.current = selected_growth_rate.current;\n        setV2ParamsInitialValues({ value: selected_growth_rate.current, name: 'growth_rate' });\n    };\n\n    const handlePickerValuesChange = (value: string | number) => {\n        const new_value = Number((value as string).slice(0, -1)) / 100;\n        if (new_value === selected_growth_rate.current) return;\n        debouncedSetGrowthRate(setGrowthRate, new_value);\n        selected_growth_rate.current = new_value;\n    };\n\n    return (\n        <React.Fragment>\n            <ActionSheet.Content className='growth-rate__picker'>\n                <div className='growth-rate__wheel-picker'>\n                    {accumulator_range_list.length ? (\n                        <WheelPicker\n                            data={data}\n                            selectedValue={`${getGrowthRatePercentage(selected_growth_rate.current)}%`}\n                            setSelectedValue={handlePickerValuesChange}\n                        />\n                    ) : (\n                        <Skeleton />\n                    )}\n                </div>\n                <div className='growth-rate__details'>\n                    {details_content.map(({ label, value }) => (\n                        <span key={value} className='growth-rate__details-item'>\n                            <Text color='quill-typography__color--subtle' size='sm'>\n                                {label}\n                            </Text>\n                            <div className='growth-rate__details-item-value'>\n                                {should_show_details ? (\n                                    <Text size='sm'>{value}</Text>\n                                ) : (\n                                    <Skeleton height={14} width={75} />\n                                )}\n                            </div>\n                        </span>\n                    ))}\n                </div>\n            </ActionSheet.Content>\n            <ActionSheet.Footer\n                alignment='vertical'\n                primaryAction={{\n                    content: <Localize i18n_default_text='Save' />,\n                    onAction: handleSave,\n                }}\n            />\n        </React.Fragment>\n    );\n};\n\nexport default GrowthRatePicker;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { observer } from 'mobx-react-lite';\nimport { ActionSheet, TextField } from '@deriv-com/quill-ui';\nimport { Skeleton } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { CONTRACT_TYPES, getGrowthRatePercentage, isEmptyObject } from '@deriv/shared';\nimport Carousel from 'AppV2/Components/Carousel';\nimport CarouselHeader from 'AppV2/Components/Carousel/carousel-header';\nimport TradeParamDefinition from 'AppV2/Components/TradeParamDefinition';\nimport { isSmallScreen } from 'AppV2/Utils/trade-params-utils';\nimport GrowthRatePicker from './growth-rate-picker';\nimport { TTradeParametersProps } from '../trade-parameters';\n\nconst GrowthRate = observer(({ is_minimized }: TTradeParametersProps) => {\n    const {\n        accumulator_range_list,\n        growth_rate,\n        is_purchase_enabled,\n        is_trade_enabled,\n        is_market_closed,\n        has_open_accu_contract,\n        maximum_ticks,\n        onChange,\n        proposal_info,\n        setV2ParamsInitialValues,\n        tick_size_barrier_percentage,\n        v2_params_initial_values,\n    } = useTraderStore();\n\n    const [is_open, setIsOpen] = React.useState(false);\n    const is_small_screen = isSmallScreen();\n    const info = proposal_info?.[CONTRACT_TYPES.ACCUMULATOR] || {};\n    const is_proposal_data_available =\n        is_trade_enabled && !isEmptyObject(proposal_info) && !!info.id && is_purchase_enabled;\n    const classname = clsx('trade-params__option', is_minimized && 'trade-params__option--minimized');\n\n    const handleGrowthRateChange = (rate: number) => {\n        onChange({ target: { name: 'growth_rate', value: rate } });\n    };\n    const onActionSheetClose = React.useCallback(() => setIsOpen(false), []);\n\n    const action_sheet_content = [\n        {\n            id: 1,\n            component: (\n                <GrowthRatePicker\n                    accumulator_range_list={accumulator_range_list}\n                    maximum_ticks={maximum_ticks}\n                    growth_rate={growth_rate}\n                    setGrowthRate={handleGrowthRateChange}\n                    setV2ParamsInitialValues={setV2ParamsInitialValues}\n                    should_show_details={is_proposal_data_available}\n                    tick_size_barrier_percentage={tick_size_barrier_percentage}\n                />\n            ),\n        },\n        {\n            id: 2,\n            component: (\n                <TradeParamDefinition\n                    description={\n                        <Localize\n                            i18n_default_text='Your stake will grow at {{growth_rate}}% per tick as long as the current spot price remains within ±{{tick_size_barrier_percentage}} from the previous spot price.'\n                            values={{\n                                growth_rate: getGrowthRatePercentage(growth_rate),\n                                tick_size_barrier_percentage,\n                            }}\n                        />\n                    }\n                />\n            ),\n        },\n    ];\n\n    React.useEffect(() => {\n        const initial_growth_rate = v2_params_initial_values?.growth_rate;\n        if (initial_growth_rate && growth_rate !== initial_growth_rate) handleGrowthRateChange(initial_growth_rate);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    if (!growth_rate)\n        return (\n            <div className={classname}>\n                <Skeleton />\n            </div>\n        );\n    return (\n        <>\n            <TextField\n                className={classname}\n                disabled={has_open_accu_contract || is_market_closed}\n                label={\n                    <Localize i18n_default_text='Growth rate' key={`growth-rate${is_minimized ? '-minimized' : ''}`} />\n                }\n                onClick={() => setIsOpen(true)}\n                readOnly\n                value={`${getGrowthRatePercentage(growth_rate)}%`}\n                variant='fill'\n            />\n            <ActionSheet.Root\n                isOpen={is_open}\n                onClose={onActionSheetClose}\n                position='left'\n                expandable={false}\n                shouldBlurOnClose={is_open}\n            >\n                <ActionSheet.Portal shouldCloseOnDrag>\n                    <Carousel\n                        classname={clsx('growth-rate__carousel', is_small_screen && 'growth-rate__carousel--small')}\n                        header={CarouselHeader}\n                        pages={action_sheet_content}\n                        title={<Localize i18n_default_text='Growth rate' />}\n                    />\n                </ActionSheet.Portal>\n            </ActionSheet.Root>\n        </>\n    );\n});\n\nexport default GrowthRate;\n","import './growth-rate.scss';\nimport GrowthRate from './growth-rate';\n\nexport default GrowthRate;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { CaptionText, Text, Skeleton } from '@deriv-com/quill-ui';\n\ntype TDigitsProps = {\n    is_active?: boolean;\n    is_disabled?: boolean;\n    is_max?: boolean;\n    is_min?: boolean;\n    digit: number;\n    digit_stats: number[];\n    onClick?: (digit: number) => void;\n};\n\nconst Digit = ({ digit, digit_stats = [], is_active, is_disabled, is_max, is_min, onClick }: TDigitsProps) => {\n    const stats = digit_stats.length ? digit_stats[digit] : null;\n    const percentage = stats ? (stats * 100) / 1000 : null;\n    const display_percentage = percentage && !isNaN(percentage) ? parseFloat(percentage.toFixed(1)) : null;\n\n    if (!digit && isNaN(digit)) return null;\n    return (\n        <div key={digit} className='digit'>\n            <button\n                className={clsx(is_active && 'active')}\n                disabled={is_disabled}\n                onClick={() => onClick?.(digit)}\n                name='last_digit'\n            >\n                <Text size='xl' color={is_disabled ? 'quill-typography__color--disabled' : ''}>\n                    {digit}\n                </Text>\n            </button>\n            {display_percentage ? (\n                <CaptionText\n                    size='sm'\n                    className={clsx('percentage', is_max && 'percentage--max', is_min && 'percentage--min')}\n                    data-testid='dt_digit_stats_percentage'\n                >\n                    {display_percentage}%\n                </CaptionText>\n            ) : (\n                <Skeleton.Square width={36} height={12} rounded />\n            )}\n        </div>\n    );\n};\n\nexport default Digit;\n","import React from 'react';\nimport Digit from './digit';\n\ntype TLastDigitSelectorProps = {\n    digits: number[];\n    digit_stats: number[];\n    is_disabled?: boolean;\n    onDigitSelect?: (digit: number) => void;\n    selected_digit?: number;\n};\n\nconst LastDigitSelector = ({\n    digits = [],\n    digit_stats,\n    is_disabled,\n    onDigitSelect,\n    selected_digit,\n}: TLastDigitSelectorProps) => (\n    <div className='last-digit-prediction__selector'>\n        {[...Array(2).keys()].map(row_key => (\n            <div key={row_key} className='last-digit-prediction__selector-row'>\n                {digits.slice(row_key * 5, (row_key + 1) * 5).map(digit => (\n                    <Digit\n                        key={digit}\n                        digit={digit}\n                        digit_stats={digit_stats}\n                        is_active={selected_digit === digit}\n                        is_disabled={is_disabled}\n                        is_max={digit_stats[digit] === Math.max(...digit_stats)}\n                        is_min={digit_stats[digit] === Math.min(...digit_stats)}\n                        onClick={onDigitSelect}\n                    />\n                ))}\n            </div>\n        ))}\n    </div>\n);\n\nexport default LastDigitSelector;\n","import React from 'react';\nimport { observer } from 'mobx-react-lite';\nimport clsx from 'clsx';\nimport { ActionSheet, CaptionText, TextField } from '@deriv-com/quill-ui';\nimport { Localize } from '@deriv/translations';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport LastDigitSelector from './last-digit-selector';\nimport { TTradeParametersProps } from '../trade-parameters';\n\nconst displayed_digits = [...Array(10).keys()]; // digits array [0 - 9]\n\nconst LastDigitPrediction = observer(({ is_minimized }: TTradeParametersProps) => {\n    const { digit_stats = [], is_market_closed, last_digit, onChange } = useTraderStore();\n    const [is_open, setIsOpen] = React.useState(false);\n    const [selected_digit, setSelectedDigit] = React.useState(last_digit);\n\n    React.useEffect(() => {\n        setSelectedDigit(last_digit);\n    }, [last_digit]);\n\n    const handleLastDigitChange = (digit: number) => {\n        onChange({ target: { name: 'last_digit', value: digit } });\n    };\n    const onSaveButtonClick = () => {\n        if (last_digit !== selected_digit) handleLastDigitChange(selected_digit);\n    };\n    const onActionSheetClose = React.useCallback(() => {\n        setIsOpen(false);\n        setSelectedDigit(last_digit);\n    }, [last_digit]);\n\n    if (is_minimized)\n        return (\n            <>\n                <TextField\n                    className={clsx('trade-params__option', 'trade-params__option--minimized')}\n                    disabled={is_market_closed}\n                    variant='fill'\n                    readOnly\n                    label={\n                        <Localize\n                            i18n_default_text='Last digit prediction'\n                            key={`last-digit-prediction${is_minimized ? '-minimized' : ''}`}\n                        />\n                    }\n                    value={last_digit}\n                    onClick={() => setIsOpen(true)}\n                />\n                <ActionSheet.Root\n                    isOpen={is_open}\n                    onClose={onActionSheetClose}\n                    position='left'\n                    expandable={false}\n                    shouldBlurOnClose={is_open}\n                >\n                    <ActionSheet.Portal shouldCloseOnDrag>\n                        <ActionSheet.Header title={<Localize i18n_default_text='Last digit prediction' />} />\n                        <ActionSheet.Content>\n                            <LastDigitSelector\n                                digits={displayed_digits}\n                                digit_stats={digit_stats}\n                                onDigitSelect={setSelectedDigit}\n                                selected_digit={selected_digit}\n                            />\n                        </ActionSheet.Content>\n                        <ActionSheet.Footer\n                            alignment='vertical'\n                            primaryAction={{\n                                content: <Localize i18n_default_text='Save' />,\n                                onAction: onSaveButtonClick,\n                            }}\n                        />\n                    </ActionSheet.Portal>\n                </ActionSheet.Root>\n            </>\n        );\n\n    return (\n        <div className={clsx('last-digit-prediction', is_market_closed && 'last-digit-prediction--disabled')}>\n            <CaptionText size='sm' className='last-digit-prediction__title'>\n                <Localize i18n_default_text='Last digit prediction' />\n            </CaptionText>\n            <LastDigitSelector\n                digits={displayed_digits}\n                digit_stats={digit_stats}\n                onDigitSelect={handleLastDigitChange}\n                selected_digit={last_digit}\n                is_disabled={is_market_closed}\n            />\n        </div>\n    );\n});\n\nexport default LastDigitPrediction;\n","import LastDigitPrediction from './last-digit-prediction';\nimport './last-digit-prediction.scss';\n\nexport default LastDigitPrediction;\n","import React, { useEffect } from 'react';\nimport { ActionSheet, Text, WheelPicker, Skeleton } from '@deriv-com/quill-ui';\nimport { Localize } from '@deriv/translations';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport debounce from 'lodash.debounce';\nimport { formatMoney } from '@deriv/shared';\n\ntype TMultiplierWheelPickerProps = {\n    multiplier: ReturnType<typeof useTraderStore>['multiplier'];\n    multiplier_range_list: ReturnType<typeof useTraderStore>['multiplier_range_list'];\n    currency: ReturnType<typeof useTraderStore>['currency'];\n    commission: ReturnType<typeof useTraderStore>['commission'];\n    setMultiplier: (multiplier: number) => void;\n};\n\nconst debouncedSetMultiplier = debounce((setMultiplier, multiplier) => {\n    setMultiplier(multiplier);\n}, 200);\n\nconst MultiplierWheelPicker = ({\n    multiplier,\n    multiplier_range_list = [],\n    currency,\n    commission,\n    setMultiplier,\n}: TMultiplierWheelPickerProps) => {\n    const multiplier_array = multiplier_range_list.map(item => ({ value: item.text }));\n    const initial_multiplier = React.useRef<number>(multiplier);\n    const selected_multiplier = React.useRef<number>(multiplier);\n\n    useEffect(() => {\n        return () => {\n            if (initial_multiplier.current && initial_multiplier.current !== selected_multiplier.current) {\n                setMultiplier(initial_multiplier.current);\n            }\n            debouncedSetMultiplier.cancel();\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const handlePickerValuesChange = (value: string | number) => {\n        const new_value = Number((value as string).slice(1));\n        if (new_value === selected_multiplier.current) return;\n        debouncedSetMultiplier(setMultiplier, new_value);\n        selected_multiplier.current = Number(new_value);\n    };\n\n    const handleSave = () => {\n        initial_multiplier.current = selected_multiplier.current;\n    };\n    return (\n        <React.Fragment>\n            <ActionSheet.Content className='multiplier__picker'>\n                <div className='multiplier__wheel-picker'>\n                    {multiplier_array.length ? (\n                        <WheelPicker\n                            data={multiplier_array}\n                            selectedValue={`x${selected_multiplier.current}`}\n                            setSelectedValue={handlePickerValuesChange}\n                        />\n                    ) : (\n                        <Skeleton.Square />\n                    )}\n                </div>\n                <div className='multiplier__commission'>\n                    <Text color='quill-typography__color--subtle' size='sm'>\n                        <Localize i18n_default_text='Commission' />\n                    </Text>\n                    <Text size='sm' as='div' className='multiplier__commission-value'>\n                        {commission ? (\n                            <React.Fragment>\n                                {formatMoney(currency, commission, true)} {currency}\n                            </React.Fragment>\n                        ) : (\n                            <Skeleton.Square width={60} height={14} />\n                        )}\n                    </Text>\n                </div>\n            </ActionSheet.Content>\n            <ActionSheet.Footer\n                isPrimaryButtonDisabled={false}\n                shouldCloseOnPrimaryButtonClick\n                primaryAction={{\n                    content: <Localize i18n_default_text='Save' />,\n                    onAction: handleSave,\n                }}\n            />\n        </React.Fragment>\n    );\n};\n\nexport default MultiplierWheelPicker;\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport { observer } from 'mobx-react-lite';\nimport { ActionSheet, Skeleton, TextField } from '@deriv-com/quill-ui';\nimport { Localize } from '@deriv/translations';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport Carousel from 'AppV2/Components/Carousel';\nimport CarouselHeader from 'AppV2/Components/Carousel/carousel-header';\nimport TradeParamDefinition from 'AppV2/Components/TradeParamDefinition';\nimport { isSmallScreen } from 'AppV2/Utils/trade-params-utils';\nimport MultiplierWheelPicker from './multiplier-wheel-picker';\nimport { TTradeParametersProps } from '../trade-parameters';\n\nconst Multiplier = observer(({ is_minimized }: TTradeParametersProps) => {\n    const { multiplier, multiplier_range_list, commission, is_market_closed, onChange, currency } = useTraderStore();\n\n    const [isOpen, setIsOpen] = useState(false);\n    const is_small_screen_device = isSmallScreen();\n    const classname = clsx('trade-params__option', is_minimized && 'trade-params__option--minimized');\n\n    const handleMultiplierChange = (multiplier: number) => {\n        onChange({ target: { name: 'multiplier', value: multiplier } });\n    };\n\n    const onClose = React.useCallback(() => setIsOpen(false), []);\n\n    const action_sheet_content = [\n        {\n            id: 1,\n            component: (\n                <MultiplierWheelPicker\n                    multiplier={multiplier}\n                    multiplier_range_list={multiplier_range_list}\n                    currency={currency}\n                    commission={commission}\n                    setMultiplier={handleMultiplierChange}\n                />\n            ),\n        },\n        {\n            id: 2,\n            component: (\n                <TradeParamDefinition\n                    description={\n                        <Localize i18n_default_text='Multipliers amplify your potential profit if the market moves in your favour, with losses limited to your initial capital.' />\n                    }\n                />\n            ),\n        },\n    ];\n\n    if (!multiplier)\n        return (\n            <div className={classname}>\n                <Skeleton.Square />\n            </div>\n        );\n\n    return (\n        <React.Fragment>\n            <TextField\n                className={classname}\n                disabled={is_market_closed}\n                variant='fill'\n                readOnly\n                label={\n                    <Localize i18n_default_text='Multiplier' key={`multiplier${is_minimized ? '-minimized' : ''}`} />\n                }\n                value={`x${multiplier}`}\n                onClick={() => setIsOpen(true)}\n            />\n            <ActionSheet.Root\n                expandable={false}\n                isOpen={isOpen}\n                position='left'\n                onClose={onClose}\n                shouldBlurOnClose={isOpen}\n            >\n                <ActionSheet.Portal shouldCloseOnDrag>\n                    <Carousel\n                        classname={clsx(\n                            'multiplier__carousel',\n                            is_small_screen_device && 'multiplier__carousel--small'\n                        )}\n                        header={CarouselHeader}\n                        pages={action_sheet_content}\n                        title={<Localize i18n_default_text='Multiplier' />}\n                    />\n                </ActionSheet.Portal>\n            </ActionSheet.Root>\n        </React.Fragment>\n    );\n});\n\nexport default Multiplier;\n","import Multiplier from './multiplier';\nimport './multiplier.scss';\n\nexport default Multiplier;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { observer } from 'mobx-react-lite';\nimport { Localize } from '@deriv/translations';\nimport { Money, Skeleton } from '@deriv/components';\nimport { Text } from '@deriv-com/quill-ui';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { CONTRACT_TYPES } from '@deriv/shared';\n\nconst MultipliersDealCancellationInfo = observer(() => {\n    const { currency, is_market_closed, proposal_info } = useTraderStore();\n    const deal_cancellation_fee_value = proposal_info?.[CONTRACT_TYPES.MULTIPLIER.UP]?.cancellation?.ask_price;\n    const has_error =\n        proposal_info?.[CONTRACT_TYPES.MULTIPLIER.UP]?.has_error ||\n        proposal_info?.[CONTRACT_TYPES.MULTIPLIER.DOWN]?.has_error;\n\n    if (has_error) return null;\n\n    return (\n        <div className='multipliers-info__row'>\n            <Text size='sm' className={clsx(is_market_closed && 'trade-params__text--disabled')}>\n                <Localize i18n_default_text='Deal cancellation fee' />\n            </Text>\n            <Text size='sm' bold as='div' className={clsx(is_market_closed && 'trade-params__text--disabled')}>\n                {deal_cancellation_fee_value ? (\n                    <Money amount={deal_cancellation_fee_value} show_currency currency={currency} />\n                ) : (\n                    <Skeleton width={65} height={18} />\n                )}\n            </Text>\n        </div>\n    );\n});\n\nexport default MultipliersDealCancellationInfo;\n","import MultipliersDealCancellationInfo from './multipliers-deal-cancellation-info';\nimport './multipliers-deal-cancellation-info.scss';\n\nexport default MultipliersDealCancellationInfo;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { observer, useStore } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { Text } from '@deriv-com/quill-ui';\nimport { Localize } from '@deriv/translations';\nimport { formatDuration, getDateFromNow, getDiffDuration } from '@deriv/shared';\n\nconst MultipliersExpirationInfo = observer(() => {\n    const { expiration, is_market_closed } = useTraderStore();\n    const { common } = useStore();\n    const { server_time: start_time } = common;\n    const { days, timestamp } = formatDuration(\n        getDiffDuration(Number(start_time?.unix()), Number(expiration)),\n        'HH:mm'\n    );\n    const date = getDateFromNow(days, 'day', 'DD MMM YYYY');\n\n    return (\n        <div className='multipliers-expiration-info__container'>\n            <Text size='sm' className={clsx(is_market_closed && 'trade-params__text--disabled')}>\n                <Localize i18n_default_text='Expires on' />\n            </Text>\n            <Text size='sm' bold className={clsx(is_market_closed && 'trade-params__text--disabled')}>\n                <Localize i18n_default_text='{{date}} at {{timestamp}}' values={{ date, timestamp }} />\n            </Text>\n        </div>\n    );\n});\n\nexport default MultipliersExpirationInfo;\n","import MultipliersExpirationInfo from './multipliers-expiration-info';\nimport './multipliers-expiration-info.scss';\n\nexport default MultipliersExpirationInfo;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { observer } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { Text } from '@deriv-com/quill-ui';\nimport { Money, Skeleton } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\n\nconst PayoutInfo = observer(() => {\n    const { currency, is_market_closed, proposal_info, trade_type_tab } = useTraderStore();\n    const { value: payout } = proposal_info[trade_type_tab]?.obj_contract_basis || {};\n    const has_error = proposal_info[trade_type_tab]?.has_error;\n\n    return (\n        <div className='payout-info__container'>\n            <Text size='sm' className={clsx(is_market_closed && 'trade-params__text--disabled')}>\n                <Localize i18n_default_text='Payout' />\n            </Text>\n            {payout ? (\n                <Text size='sm' bold className={clsx(is_market_closed && 'trade-params__text--disabled')}>\n                    <Money amount={payout} show_currency currency={currency} />\n                </Text>\n            ) : has_error ? (\n                <Text size='sm' bold>\n                    - {currency}\n                </Text>\n            ) : (\n                <Skeleton width={60} height={14} />\n            )}\n        </div>\n    );\n});\n\nexport default PayoutInfo;\n","import PayoutInfo from './payout-info';\nimport './payout-info.scss';\n\nexport default PayoutInfo;\n","import React from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { ActionSheet, Text, WheelPicker } from '@deriv-com/quill-ui';\nimport { Skeleton } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport { getProposalRequestObject } from 'AppV2/Utils/trade-params-utils';\nimport { useDtraderQuery } from 'AppV2/Hooks/useDtraderQuery';\nimport { TTradeStore } from 'Types';\n\ntype TPayoutPerPointWheelProps = {\n    barrier?: string | number;\n    is_open?: boolean;\n    current_payout_per_point: string;\n    onPayoutPerPointSelect: (new_value: string | number) => void;\n    onClose: () => void;\n    payout_per_point_list: {\n        value: string;\n    }[];\n};\ntype TOnProposalResponse = TTradeStore['onProposalResponse'];\n\nconst PayoutPerPointWheel = observer(\n    ({\n        barrier,\n        current_payout_per_point,\n        is_open,\n        onPayoutPerPointSelect,\n        onClose,\n        payout_per_point_list,\n    }: TPayoutPerPointWheelProps) => {\n        const trade_store = useTraderStore();\n        const { trade_types } = trade_store;\n\n        const [value, setValue] = React.useState<string | number>(current_payout_per_point);\n        const [displayed_barrier_value, setDisplayedBarrierValue] = React.useState(barrier);\n\n        // For handling cases when user clicks on Save btn before we got response from API\n        const is_api_response_received_ref = React.useRef(false);\n\n        const new_values = { payout_per_point: String(value) };\n        const proposal_req = getProposalRequestObject({\n            new_values,\n            trade_store,\n            trade_type: Object.keys(trade_types)[0],\n        });\n        // Sending proposal without subscription to get a new barrier value\n        const { data: response } = useDtraderQuery<Parameters<TOnProposalResponse>[0]>(\n            [\n                'proposal',\n                ...Object.entries(new_values).flat().join('-'),\n                `${barrier}`,\n                Object.keys(trade_types)[0],\n                JSON.stringify(proposal_req),\n            ],\n            proposal_req,\n            {\n                enabled: is_open,\n            }\n        );\n\n        const onChange = (new_value: string | number) => {\n            // If a new value is equal to previous one, then we won't send API request\n            const is_equal = value === new_value;\n            is_api_response_received_ref.current = is_equal;\n            if (is_equal) return;\n\n            setValue(new_value);\n        };\n\n        const onSave = () => {\n            // Prevent from saving if user clicks before BE validation\n            if (!is_api_response_received_ref.current) return;\n            onPayoutPerPointSelect(value);\n            onClose();\n        };\n\n        React.useEffect(() => {\n            const onProposalResponse: TOnProposalResponse = response => {\n                const { error, proposal } = response;\n                const { barrier_spot_distance } = proposal ?? {};\n                // Currently we are not handling errors\n                if (barrier_spot_distance && !error) setDisplayedBarrierValue(barrier_spot_distance);\n\n                is_api_response_received_ref.current = true;\n            };\n\n            if (response) onProposalResponse(response);\n        }, [response]);\n\n        return (\n            <React.Fragment>\n                <ActionSheet.Content className='payout-per-point__wrapper' data-testid='dt_payout-per-point_wrapper'>\n                    <div className='payout-per-point__wheel-picker'>\n                        <WheelPicker data={payout_per_point_list} selectedValue={value} setSelectedValue={onChange} />\n                    </div>\n                    <div className='payout-per-point__barrier'>\n                        <Text color='quill-typography__color--subtle' size='sm'>\n                            <Localize i18n_default_text='Barrier' />\n                        </Text>\n                        <Text size='sm' as='div' className='payout-per-point__barrier__content'>\n                            {displayed_barrier_value ?? <Skeleton width={90} height={14} />}\n                        </Text>\n                    </div>\n                </ActionSheet.Content>\n                <ActionSheet.Footer\n                    alignment='vertical'\n                    primaryAction={{\n                        content: <Localize i18n_default_text='Save' />,\n                        onAction: onSave,\n                    }}\n                    shouldCloseOnPrimaryButtonClick={false}\n                />\n            </React.Fragment>\n        );\n    }\n);\n\nexport default PayoutPerPointWheel;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { observer } from 'mobx-react-lite';\nimport { ActionSheet, TextField } from '@deriv-com/quill-ui';\nimport { Localize } from '@deriv/translations';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { getCurrencyDisplayCode } from '@deriv/shared';\nimport { Skeleton } from '@deriv/components';\nimport { isSmallScreen } from 'AppV2/Utils/trade-params-utils';\nimport Carousel from 'AppV2/Components/Carousel';\nimport CarouselHeader from 'AppV2/Components/Carousel/carousel-header';\nimport TradeParamDefinition from 'AppV2/Components/TradeParamDefinition';\nimport PayoutPerPointWheel from './payout-per-point-wheel';\nimport { TTradeParametersProps } from '../trade-parameters';\n\nconst PayoutPerPoint = observer(({ is_minimized }: TTradeParametersProps) => {\n    const [is_open, setIsOpen] = React.useState(false);\n    const { barrier_1, currency, is_market_closed, payout_choices, payout_per_point, setPayoutPerPoint } =\n        useTraderStore();\n    const is_small_screen = isSmallScreen();\n    const currency_display_code = getCurrencyDisplayCode(currency);\n    const payout_per_point_list = [...payout_choices]\n        .sort((a, b) => Number(a) - Number(b))\n        .map((payout_per_point: string) => ({\n            value: payout_per_point,\n            label: `${payout_per_point} ${currency_display_code}`,\n        }));\n\n    const onClose = React.useCallback(() => setIsOpen(false), []);\n\n    const action_sheet_content = [\n        {\n            id: 1,\n            component: (\n                <PayoutPerPointWheel\n                    barrier={barrier_1}\n                    current_payout_per_point={payout_per_point}\n                    is_open={is_open}\n                    onPayoutPerPointSelect={\n                        setPayoutPerPoint as React.ComponentProps<typeof PayoutPerPointWheel>['onPayoutPerPointSelect']\n                    }\n                    onClose={onClose}\n                    payout_per_point_list={payout_per_point_list}\n                />\n            ),\n        },\n        {\n            id: 2,\n            component: (\n                <TradeParamDefinition\n                    description={\n                        <Localize i18n_default_text='The amount you choose to receive at expiry for every point of change between the final price and the barrier.' />\n                    }\n                />\n            ),\n        },\n    ];\n    const classname = clsx('trade-params__option', is_minimized && 'trade-params__option--minimized');\n\n    if (!payout_per_point)\n        return (\n            <div className={classname}>\n                <Skeleton />\n            </div>\n        );\n\n    return (\n        <React.Fragment>\n            <TextField\n                disabled={is_market_closed}\n                className={classname}\n                label={\n                    <Localize\n                        i18n_default_text='Payout per point'\n                        key={`payout-per-point${is_minimized ? '-minimized' : ''}`}\n                    />\n                }\n                onClick={() => setIsOpen(true)}\n                readOnly\n                variant='fill'\n                value={`${payout_per_point} ${currency_display_code}`}\n            />\n            <ActionSheet.Root\n                isOpen={is_open}\n                onClose={onClose}\n                position='left'\n                expandable={false}\n                shouldBlurOnClose={is_open}\n            >\n                <ActionSheet.Portal shouldCloseOnDrag>\n                    <Carousel\n                        classname={clsx(\n                            'payout-per-point__carousel',\n                            is_small_screen && 'payout-per-point__carousel--small'\n                        )}\n                        header={CarouselHeader}\n                        pages={action_sheet_content}\n                        title={<Localize i18n_default_text='Payout per point' />}\n                    />\n                </ActionSheet.Portal>\n            </ActionSheet.Root>\n        </React.Fragment>\n    );\n});\n\nexport default PayoutPerPoint;\n","import './payout-per-point.scss';\nimport PayoutPerPoint from './payout-per-point';\n\nexport default PayoutPerPoint;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { observer } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { Text } from '@deriv-com/quill-ui';\nimport { Localize } from '@deriv/translations';\nimport { Skeleton } from '@deriv/components';\n\nconst PayoutPerPointInfo = observer(() => {\n    const { contract_type, currency, is_market_closed, proposal_info } = useTraderStore();\n    const contract_key = contract_type.toUpperCase();\n    const { value: payout_per_point } = proposal_info[contract_key]?.obj_contract_basis || {};\n    const has_error = proposal_info[contract_key]?.has_error;\n\n    if (has_error) return null;\n\n    return (\n        <div className='payout-per-point-info__container'>\n            <Text size='sm' className={clsx(is_market_closed && 'trade-params__text--disabled')}>\n                <Localize i18n_default_text='Payout per point' />\n            </Text>\n            {payout_per_point ? (\n                <Text size='sm' bold className={clsx(is_market_closed && 'trade-params__text--disabled')}>\n                    {payout_per_point} {currency}\n                </Text>\n            ) : (\n                <Skeleton width={100} height={14} />\n            )}\n        </div>\n    );\n});\n\nexport default PayoutPerPointInfo;\n","import PayoutPerPointInfo from './payout-per-point-info';\nimport './payout-per-point-info.scss';\n\nexport default PayoutPerPointInfo;\n","import React from 'react';\nimport { observer } from 'mobx-react-lite';\n\nimport { Localize } from '@deriv/translations';\nimport { Button, Skeleton, Text, ToggleSwitch, useSnackbar, WheelPicker } from '@deriv-com/quill-ui';\n\nimport { addUnit, getSnackBarText } from 'AppV2/Utils/trade-params-utils';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\ntype TDealCancellationProps = {\n    closeActionSheet: () => void;\n};\n\nconst DealCancellation = observer(({ closeActionSheet }: TDealCancellationProps) => {\n    const {\n        has_cancellation,\n        has_take_profit,\n        has_stop_loss,\n        cancellation_range_list,\n        cancellation_duration,\n        onChangeMultiple,\n    } = useTraderStore();\n    const { addSnackbar } = useSnackbar();\n\n    const [is_enabled, setIsEnabled] = React.useState(has_cancellation);\n    const [selected_value, setSelectedValue] = React.useState(cancellation_duration);\n\n    const data = cancellation_range_list.map(({ text, value }) => ({ label: addUnit({ value: text }), value }));\n\n    const onSave = () => {\n        if (has_cancellation === is_enabled && selected_value === cancellation_duration) {\n            closeActionSheet();\n            return;\n        }\n\n        if (is_enabled && (has_take_profit || has_stop_loss)) {\n            addSnackbar({\n                message: getSnackBarText({\n                    has_cancellation: is_enabled,\n                    has_stop_loss,\n                    has_take_profit,\n                    switching_cancellation: true,\n                }),\n                hasCloseButton: true,\n            });\n        }\n        // We should switch off TP and SL if DC is on and vice versa\n        onChangeMultiple({\n            has_cancellation: is_enabled,\n            ...(is_enabled ? { has_take_profit: false, has_stop_loss: false } : {}),\n            cancellation_duration: selected_value,\n        });\n        closeActionSheet();\n    };\n\n    return (\n        <React.Fragment>\n            <div className='deal-cancellation__container'>\n                <div className='deal-cancellation__toggle'>\n                    <Text>\n                        <Localize i18n_default_text='Deal cancellation' />\n                    </Text>\n                    <ToggleSwitch checked={is_enabled} onChange={setIsEnabled} />\n                </div>\n                <div className='deal-cancellation__wheel-picker'>\n                    {cancellation_range_list.length ? (\n                        <WheelPicker\n                            data={data}\n                            disabled={!is_enabled}\n                            selectedValue={selected_value}\n                            setSelectedValue={\n                                setSelectedValue as React.ComponentProps<typeof WheelPicker>['setSelectedValue']\n                            }\n                        />\n                    ) : (\n                        <Skeleton.Square />\n                    )}\n                </div>\n            </div>\n            <Button\n                color='black-white'\n                size='lg'\n                label={<Localize i18n_default_text='Save' />}\n                fullWidth\n                className='risk-management__save-button'\n                onClick={onSave}\n            />\n        </React.Fragment>\n    );\n});\n\nexport default DealCancellation;\n","import React from 'react';\n\ntype TWindow = Window & { height?: number; scale?: number };\n\nconst useIsVirtualKeyboardOpen = (target_id: string) => {\n    const [is_focus, setIsFocus] = React.useState(false);\n    const [is_open, setIsOpen] = React.useState(false);\n\n    // A ratio of available screen space to all space, which corresponds with opened virtual keyboard\n    const RATIO = 0.75;\n\n    React.useEffect(() => {\n        const handleFocus = (e: FocusEvent) => {\n            const target = e.target;\n            const is_focus_in = e.type === 'focusin';\n\n            if (!target) return;\n            if ((target as HTMLElement).id === target_id) setIsFocus(is_focus_in);\n        };\n\n        const resizeHandler = (e: Event) => {\n            const target = e.target as TWindow;\n            if (!target || !target?.height || !target?.scale) return;\n            const has_keyboard_changed_viewport = (target.height * target.scale) / window.screen.height < RATIO;\n            setIsOpen(has_keyboard_changed_viewport);\n        };\n\n        document.addEventListener('focusin', handleFocus);\n        document.addEventListener('focusout', handleFocus);\n        window.visualViewport?.addEventListener('resize', resizeHandler);\n\n        return () => {\n            document.removeEventListener('focusin', handleFocus);\n            document.removeEventListener('focusout', handleFocus);\n            window.visualViewport?.removeEventListener('resize', resizeHandler);\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return { is_key_board_visible: is_focus && is_open };\n};\n\nexport default useIsVirtualKeyboardOpen;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { observer } from 'mobx-react-lite';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { getCurrencyDisplayCode, getDecimalPlaces } from '@deriv/shared';\nimport { focusAndOpenKeyboard, getProposalRequestObject } from 'AppV2/Utils/trade-params-utils';\nimport { ActionSheet, CaptionText, Text, ToggleSwitch, TextFieldWithSteppers } from '@deriv-com/quill-ui';\nimport { Localize, localize } from '@deriv/translations';\nimport { TTradeStore } from 'Types';\nimport { getDisplayedContractTypes } from 'AppV2/Utils/trade-types-utils';\nimport { useDtraderQuery } from 'AppV2/Hooks/useDtraderQuery';\nimport useIsVirtualKeyboardOpen from 'AppV2/Hooks/useIsVirtualKeyboardOpen';\nimport useTradeError from 'AppV2/Hooks/useTradeError';\nimport { ExpandedProposal } from 'Stores/Modules/Trading/Helpers/proposal';\n\ntype TTakeProfitAndStopLossInputProps = {\n    classname?: string;\n    has_save_button?: boolean;\n    has_actionsheet_wrapper?: boolean;\n    initial_error_text?: React.ReactNode;\n    onActionSheetClose: () => void;\n    parent_ref?: React.MutableRefObject<{\n        has_take_profit?: boolean;\n        has_stop_loss?: boolean;\n        take_profit?: string;\n        tp_error_text?: string;\n        stop_loss?: string;\n        sl_error_text?: string;\n    }>;\n    parent_is_api_response_received_ref?: React.MutableRefObject<boolean>;\n    type?: 'take_profit' | 'stop_loss';\n};\ntype TOnProposalResponse = TTradeStore['onProposalResponse'];\n\nconst TakeProfitAndStopLossInput = ({\n    classname,\n    has_save_button = true,\n    has_actionsheet_wrapper = true,\n    initial_error_text,\n    onActionSheetClose,\n    parent_ref,\n    parent_is_api_response_received_ref,\n    type = 'take_profit',\n}: TTakeProfitAndStopLossInputProps) => {\n    const trade_store = useTraderStore();\n    const {\n        contract_type,\n        currency,\n        has_take_profit,\n        has_stop_loss,\n        is_accumulator,\n        take_profit,\n        stop_loss,\n        trade_types,\n        trade_type_tab,\n        onChangeMultiple,\n        validation_params,\n    } = trade_store;\n\n    const is_take_profit_input = type === 'take_profit';\n    const contract_types = getDisplayedContractTypes(trade_types, contract_type, trade_type_tab);\n\n    // For tracking errors, that are coming from proposal for take profit and stop loss\n    const { message } = useTradeError({ error_fields: [type] });\n\n    // For handling cases when user clicks on Save btn before we got response from API\n    const is_api_response_received = React.useRef(false);\n    const is_api_response_received_ref = parent_is_api_response_received_ref || is_api_response_received;\n\n    const [is_enabled, setIsEnabled] = React.useState(is_take_profit_input ? has_take_profit : has_stop_loss);\n    const [new_input_value, setNewInputValue] = React.useState(is_take_profit_input ? take_profit : stop_loss);\n    const [error_text, setErrorText] = React.useState('');\n    const [fe_error_text, setFEErrorText] = React.useState(initial_error_text ?? message ?? '');\n    const [max_length, setMaxLength] = React.useState(10);\n\n    // Refs for handling focusing and bluring input\n    const input_ref = React.useRef<HTMLInputElement>(null);\n    const focused_input_ref = React.useRef<HTMLInputElement>(null);\n    const focus_timeout = React.useRef<ReturnType<typeof setTimeout>>();\n\n    const decimals = getDecimalPlaces(currency);\n    const currency_display_code = getCurrencyDisplayCode(currency);\n    const Component = has_actionsheet_wrapper ? ActionSheet.Content : 'div';\n\n    const min_value = validation_params[contract_types[0]]?.[type]?.min;\n    const max_value = validation_params[contract_types[0]]?.[type]?.max;\n    // Storing data from validation params (proposal) in state in case if we got a validation error from API and proposal stop streaming\n    const [info, setInfo] = React.useState<Record<string, string | undefined>>({ min_value, max_value });\n\n    const new_values = {\n        ...(is_take_profit_input ? { has_take_profit: is_enabled } : { has_stop_loss: is_enabled }),\n        has_cancellation: false,\n        ...(is_take_profit_input\n            ? { take_profit: is_enabled ? new_input_value : '' }\n            : { stop_loss: is_enabled ? new_input_value : '' }),\n    };\n\n    const proposal_req = getProposalRequestObject({\n        new_values,\n        trade_store,\n        trade_type: Object.keys(trade_types)[0],\n    });\n\n    // We need to exclude tp in case if type === sl and vise versa in limit order to validate them independently\n    if (is_take_profit_input && proposal_req.limit_order?.stop_loss) {\n        delete proposal_req.limit_order.stop_loss;\n    }\n    if (!is_take_profit_input && proposal_req.limit_order?.take_profit) {\n        delete proposal_req.limit_order.take_profit;\n    }\n\n    const { data: response } = useDtraderQuery<Parameters<TOnProposalResponse>[0]>(\n        [\n            'proposal',\n            ...Object.entries(new_values).flat().join('-'),\n            Object.keys(trade_types)[0],\n            JSON.stringify(proposal_req),\n        ],\n        proposal_req,\n        {\n            enabled: is_enabled,\n        }\n    );\n\n    const input_message =\n        info.min_value && info.max_value ? (\n            <Localize\n                i18n_default_text='Acceptable range: {{min_value}} to {{max_value}} {{currency}}'\n                values={{\n                    currency: currency_display_code,\n                    min_value: info.min_value,\n                    max_value: info.max_value,\n                }}\n            />\n        ) : (\n            ''\n        );\n\n    const updateParentRef = ({ field_name, new_value }: { field_name: string; new_value: React.ReactNode }) => {\n        if (!parent_ref?.current || !field_name) return;\n        parent_ref.current = { ...parent_ref.current, [field_name]: new_value };\n    };\n\n    const onToggleSwitch = (new_value: boolean) => {\n        is_api_response_received_ref.current = false;\n        setIsEnabled(new_value);\n        updateParentRef({ field_name: is_take_profit_input ? 'has_take_profit' : 'has_stop_loss', new_value });\n\n        if (new_value) {\n            clearTimeout(focus_timeout.current);\n            focus_timeout.current = focusAndOpenKeyboard(focused_input_ref.current, input_ref.current);\n        } else {\n            setFEErrorText('');\n            setErrorText('');\n            updateParentRef({ field_name: is_take_profit_input ? 'tp_error_text' : 'sl_error_text', new_value: '' });\n            input_ref.current?.blur();\n        }\n    };\n\n    React.useEffect(() => {\n        const onProposalResponse: TOnProposalResponse = response => {\n            const { error, proposal } = response;\n\n            const new_error = error?.message ?? '';\n            const is_error_field_match = error?.details?.field === type || !error?.details?.field;\n            setErrorText(is_error_field_match ? new_error : '');\n            updateParentRef({\n                field_name: is_take_profit_input ? 'tp_error_text' : 'sl_error_text',\n                new_value: is_error_field_match ? new_error : '',\n            });\n\n            // Recovery for min and max allowed values in case of error\n            if (!info.min_value || !info.max_value) {\n                const { min, max } = (proposal as ExpandedProposal)?.validation_params?.[type] ?? {};\n                setInfo(info =>\n                    (info.min_value !== min && min) || (info.max_value !== max && max)\n                        ? { min_value: min, max_value: max }\n                        : info\n                );\n            }\n            is_api_response_received_ref.current = true;\n        };\n\n        if (response) onProposalResponse(response);\n    }, [is_enabled, response]);\n\n    const onInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        let value = String(e.target.value);\n        if (value.length > 1) value = /^[0-]+$/.test(value) ? '0' : value.replace(/^0*/, '').replace(/^\\./, '0.');\n\n        // If new value is equal to previous one, then we won't send API request\n        const is_equal = value === new_input_value;\n        is_api_response_received_ref.current = is_equal;\n        if (is_equal) return;\n        setFEErrorText('');\n        setNewInputValue(value);\n        updateParentRef({ field_name: type, new_value: value });\n    };\n\n    const onSave = () => {\n        // Prevent from saving if user clicks before BE validation\n        if (!is_api_response_received_ref.current && is_enabled) return;\n\n        if (error_text && is_enabled) return;\n        if (!new_input_value && is_enabled) {\n            setFEErrorText(\n                is_take_profit_input\n                    ? localize('Please enter a take profit amount.')\n                    : localize('Please enter a stop loss amount.')\n            );\n            return;\n        }\n\n        const is_tp_enabled = error_text ? false : is_enabled;\n        onChangeMultiple({\n            ...(is_take_profit_input ? { has_take_profit: is_tp_enabled } : { has_stop_loss: is_tp_enabled }),\n            ...(is_take_profit_input\n                ? {\n                      take_profit: error_text || new_input_value === '0' ? '' : new_input_value,\n                  }\n                : {\n                      stop_loss: error_text || new_input_value === '0' ? '' : new_input_value,\n                  }),\n            ...(is_tp_enabled ? { has_cancellation: false } : {}),\n        });\n        onActionSheetClose();\n    };\n\n    // scroll the page when a virtual keyboard pop up\n    const { is_key_board_visible: should_scroll } = useIsVirtualKeyboardOpen(type);\n\n    React.useEffect(() => {\n        if (should_scroll) window?.scrollTo({ top: 225, behavior: 'smooth' });\n    }, [should_scroll]);\n\n    React.useEffect(() => {\n        setFEErrorText(initial_error_text ?? '');\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [initial_error_text]);\n\n    React.useEffect(() => {\n        setInfo(info =>\n            (info.min_value !== min_value && min_value) || (info.max_value !== max_value && max_value)\n                ? { min_value, max_value }\n                : info\n        );\n    }, [min_value, max_value]);\n\n    React.useEffect(() => () => clearTimeout(focus_timeout.current), []);\n\n    return (\n        <React.Fragment>\n            <Component className={clsx('take-profit__wrapper', classname)}>\n                <div className='take-profit__content'>\n                    <Text>\n                        {is_take_profit_input ? (\n                            <Localize i18n_default_text='Take profit' />\n                        ) : (\n                            <Localize i18n_default_text='Stop loss' />\n                        )}\n                    </Text>\n                    <ToggleSwitch checked={is_enabled} onChange={onToggleSwitch} />\n                </div>\n                <TextFieldWithSteppers\n                    allowDecimals\n                    customType='commaRemoval'\n                    className='text-field--custom'\n                    disabled={!is_enabled}\n                    decimals={decimals}\n                    data-testid={is_take_profit_input ? 'dt_tp_input' : 'dt_sl_input'}\n                    inputMode='decimal'\n                    id={type}\n                    message={is_enabled && (fe_error_text || error_text || input_message)}\n                    minusDisabled={Number(new_input_value) - 1 <= 0}\n                    name={type}\n                    noStatusIcon\n                    onChange={onInputChange}\n                    placeholder={localize('Amount')}\n                    ref={input_ref}\n                    regex={/[^0-9.,]/g}\n                    status={fe_error_text || error_text ? 'error' : 'neutral'}\n                    shouldRound={false}\n                    textAlignment='center'\n                    unitLeft={currency_display_code}\n                    variant='fill'\n                    value={new_input_value ?? ''}\n                    onBeforeInput={(e: React.FormEvent<HTMLInputElement>) => {\n                        if (\n                            ['.', ','].includes((e.nativeEvent as InputEvent)?.data ?? '') &&\n                            (new_input_value?.length ?? 0) <= 10\n                        ) {\n                            setMaxLength(decimals ? 11 + decimals : 10);\n                        } else if (!new_input_value?.includes('.')) {\n                            setMaxLength(10);\n                        }\n                    }}\n                    maxLength={max_length}\n                />\n                {!is_enabled && (\n                    <button\n                        className='take-profit__overlay'\n                        data-testid='dt_take_profit_overlay'\n                        onClick={() => onToggleSwitch(true)}\n                    />\n                )}\n                {/* this input with inline styles is needed to fix a focus issue in Safari */}\n                <input ref={focused_input_ref} style={{ height: 0, opacity: 0, display: 'none' }} inputMode='decimal' />\n                {is_accumulator && (\n                    <CaptionText color='quill-typography__color--subtle' className='take-profit__accu-information'>\n                        <Localize i18n_default_text='Note: Cannot be adjusted for ongoing accumulator contracts.' />\n                    </CaptionText>\n                )}\n            </Component>\n            {has_save_button && (\n                <ActionSheet.Footer\n                    alignment='vertical'\n                    primaryAction={{\n                        content: <Localize i18n_default_text='Save' />,\n                        onAction: onSave,\n                    }}\n                    shouldCloseOnPrimaryButtonClick={false}\n                />\n            )}\n        </React.Fragment>\n    );\n};\n\nexport default observer(TakeProfitAndStopLossInput);\n","import React from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { Button, useSnackbar } from '@deriv-com/quill-ui';\nimport { Localize } from '@deriv/translations';\nimport { getSnackBarText } from 'AppV2/Utils/trade-params-utils';\nimport TakeProfitAndStopLossInput from './take-profit-and-stop-loss-input';\n\ntype TTakeProfitAndStopLossContainerProps = {\n    closeActionSheet: () => void;\n    should_show_deal_cancellation?: boolean;\n};\n\nconst TakeProfitAndStopLossContainer = observer(({ closeActionSheet }: TTakeProfitAndStopLossContainerProps) => {\n    const {\n        has_take_profit,\n        has_cancellation,\n        has_stop_loss,\n        take_profit,\n        onChangeMultiple,\n        stop_loss,\n        validation_errors,\n    } = useTraderStore();\n\n    const { addSnackbar } = useSnackbar();\n\n    const [tp_error_text, setTPErrorText] = React.useState<React.ReactNode>(validation_errors?.take_profit?.[0] ?? '');\n    const tp_ref = React.useRef({ has_take_profit, take_profit, tp_error_text: validation_errors?.take_profit?.[0] });\n    const is_api_response_tp_received_ref = React.useRef(false);\n\n    const [sl_error_text, setSLErrorText] = React.useState<React.ReactNode>(validation_errors?.stop_loss?.[0] ?? '');\n    const sl_ref = React.useRef({ has_stop_loss, stop_loss, sl_error_text: validation_errors?.stop_loss?.[0] });\n    const is_api_response_sl_received_ref = React.useRef(false);\n\n    const onSave = () => {\n        // Prevent from saving if user clicks before we got response from API\n        if (!is_api_response_tp_received_ref.current && tp_ref.current.has_take_profit) return;\n        if (!is_api_response_sl_received_ref.current && sl_ref.current.has_stop_loss) return;\n\n        const {\n            has_take_profit: has_take_profit_current,\n            take_profit: take_profit_current,\n            tp_error_text: tp_error_text_current,\n        } = tp_ref.current;\n        const {\n            has_stop_loss: has_stop_loss_current,\n            stop_loss: stop_loss_current,\n            sl_error_text: sl_error_text_current,\n        } = sl_ref.current;\n\n        const is_tp_empty = !take_profit_current && has_take_profit_current;\n        const is_sl_empty = !stop_loss_current && has_stop_loss_current;\n        if (is_tp_empty) setTPErrorText(<Localize i18n_default_text='Please enter a take profit amount.' />);\n        if (is_sl_empty) setSLErrorText(<Localize i18n_default_text='Please enter a stop loss amount.' />);\n        if ((tp_error_text_current && has_take_profit_current) || (sl_error_text_current && has_stop_loss_current))\n            return;\n        if (is_sl_empty || is_tp_empty) return;\n\n        // Show notification, that DC will be disabled if TP or SL is enabled\n        const is_tp_enabled = tp_error_text_current ? false : has_take_profit_current;\n        const is_sl_enabled = sl_error_text_current ? false : has_stop_loss_current;\n        if ((is_tp_enabled || is_sl_enabled) && has_cancellation) {\n            addSnackbar({\n                message: getSnackBarText({\n                    has_cancellation,\n                    has_stop_loss: is_sl_enabled,\n                    has_take_profit: is_tp_enabled,\n                    switching_tp_sl: true,\n                }),\n                hasCloseButton: true,\n            });\n        }\n\n        onChangeMultiple({\n            has_take_profit: has_take_profit_current,\n            take_profit: tp_error_text_current || take_profit_current === '0' ? '' : take_profit_current,\n            has_stop_loss: has_stop_loss_current,\n            stop_loss: sl_error_text_current || stop_loss_current === '0' ? '' : stop_loss_current,\n            ...(is_tp_enabled || is_sl_enabled ? { has_cancellation: false } : {}),\n        });\n\n        closeActionSheet();\n    };\n\n    return (\n        <div className='risk-management__tp-sl__wrapper'>\n            <TakeProfitAndStopLossInput\n                classname='risk-management__tp-sl'\n                has_save_button={false}\n                has_actionsheet_wrapper={false}\n                initial_error_text={tp_error_text}\n                onActionSheetClose={closeActionSheet}\n                parent_ref={tp_ref}\n                parent_is_api_response_received_ref={is_api_response_tp_received_ref}\n            />\n            <TakeProfitAndStopLossInput\n                classname='risk-management__tp-sl'\n                has_save_button={false}\n                has_actionsheet_wrapper={false}\n                initial_error_text={sl_error_text}\n                onActionSheetClose={closeActionSheet}\n                parent_ref={sl_ref}\n                parent_is_api_response_received_ref={is_api_response_sl_received_ref}\n                type='stop_loss'\n            />\n            <Button\n                color='black-white'\n                size='lg'\n                label={<Localize i18n_default_text='Save' />}\n                fullWidth\n                className='risk-management__save-button'\n                onClick={onSave}\n            />\n        </div>\n    );\n});\n\nexport default TakeProfitAndStopLossContainer;\n","import React from 'react';\nimport { ActionSheet, SegmentedControlSingleChoice } from '@deriv-com/quill-ui';\nimport { Localize } from '@deriv/translations';\nimport DealCancellation from './deal-cancellation';\nimport TakeProfitAndStopLossContainer from './take-profit-and-stop-loss-container';\n\ntype TRiskManagementPickerProps = {\n    closeActionSheet: () => void;\n    initial_tab_index?: number;\n    should_show_deal_cancellation?: boolean;\n};\n\nconst RiskManagementPicker = ({\n    closeActionSheet,\n    initial_tab_index = 0,\n    should_show_deal_cancellation,\n}: TRiskManagementPickerProps) => {\n    const [tab_index, setTabIndex] = React.useState(initial_tab_index);\n\n    return (\n        <ActionSheet.Content className='risk-management__picker'>\n            {should_show_deal_cancellation && (\n                <SegmentedControlSingleChoice\n                    hasContainerWidth\n                    onChange={setTabIndex}\n                    options={[\n                        { label: <Localize i18n_default_text='TP & SL' /> },\n                        { label: <Localize i18n_default_text='Deal cancellation' /> },\n                    ]}\n                    size='sm'\n                    selectedItemIndex={tab_index}\n                />\n            )}\n            {tab_index ? (\n                <DealCancellation closeActionSheet={closeActionSheet} />\n            ) : (\n                <TakeProfitAndStopLossContainer closeActionSheet={closeActionSheet} />\n            )}\n        </ActionSheet.Content>\n    );\n};\n\nexport default RiskManagementPicker;\n","import React from 'react';\nimport { Text, SectionMessage } from '@deriv-com/quill-ui';\nimport { Localize } from '@deriv/translations';\n\ntype TRiskManagementContentProps = {\n    should_show_deal_cancellation?: boolean;\n};\n\nconst RiskManagementContent = ({ should_show_deal_cancellation }: TRiskManagementContentProps) => {\n    const content = [\n        {\n            definition: (\n                <Localize i18n_default_text='When your profit reaches or exceeds this amount, your trade will be closed automatically.' />\n            ),\n            is_displayed: true,\n            label: <Localize i18n_default_text='Take Profit' />,\n        },\n        {\n            definition: (\n                <Localize i18n_default_text='When your loss reaches or exceeds this amount, your trade will be closed automatically.' />\n            ),\n            is_displayed: true,\n            label: <Localize i18n_default_text='Stop loss' />,\n        },\n        {\n            definition: (\n                <Localize i18n_default_text='When this is active, you can cancel your trade within the chosen time frame. Your stake will be returned without loss.' />\n            ),\n            is_displayed: should_show_deal_cancellation,\n            label: <Localize i18n_default_text='Deal cancellation' />,\n        },\n    ];\n\n    return (\n        <React.Fragment>\n            {content.map(\n                ({ definition, is_displayed, label }) =>\n                    is_displayed && (\n                        <React.Fragment key={definition.props.i18n_default_text}>\n                            <Text bold>{label}</Text>\n                            <Text className='risk-management__description__definition'>{definition}</Text>\n                        </React.Fragment>\n                    )\n            )}\n            {should_show_deal_cancellation && (\n                <SectionMessage\n                    message={\n                        <Localize i18n_default_text='Take profit and/or stop loss are not available while deal cancellation is active.' />\n                    }\n                    size='sm'\n                    status='info'\n                />\n            )}\n        </React.Fragment>\n    );\n};\n\nexport default RiskManagementContent;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { observer } from 'mobx-react-lite';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { ActionSheet, TextField } from '@deriv-com/quill-ui';\nimport { localize, Localize } from '@deriv/translations';\nimport { getCurrencyDisplayCode } from '@deriv/shared';\nimport Carousel from 'AppV2/Components/Carousel';\nimport CarouselHeader from 'AppV2/Components/Carousel/carousel-header';\nimport TradeParamDefinition from 'AppV2/Components/TradeParamDefinition';\nimport { addUnit, isSmallScreen } from 'AppV2/Utils/trade-params-utils';\nimport RiskManagementPicker from './risk-management-picker';\nimport RiskManagementContent from './risk-management-content';\nimport { TTradeParametersProps } from '../trade-parameters';\nimport useTradeError from 'AppV2/Hooks/useTradeError';\n\nconst RiskManagement = observer(({ is_minimized }: TTradeParametersProps) => {\n    const [is_open, setIsOpen] = React.useState(false);\n    const {\n        cancellation_range_list,\n        cancellation_duration,\n        currency,\n        has_cancellation,\n        has_take_profit,\n        has_stop_loss,\n        is_market_closed,\n        take_profit,\n        stop_loss,\n    } = useTraderStore();\n\n    const { is_error_matching_field: has_error } = useTradeError({\n        error_fields: ['stop_loss', 'take_profit'],\n    });\n\n    const closeActionSheet = React.useCallback(() => setIsOpen(false), []);\n    const getRiskManagementText = () => {\n        if (has_cancellation) return `DC: ${addUnit({ value: cancellation_duration, unit: localize('minutes') })}`;\n        if (has_take_profit && has_stop_loss)\n            return `TP: ${take_profit} ${getCurrencyDisplayCode(currency)} / SL: ${stop_loss} ${getCurrencyDisplayCode(\n                currency\n            )}`;\n        if (has_take_profit) return `TP: ${take_profit} ${getCurrencyDisplayCode(currency)}`;\n        if (has_stop_loss) return `SL: ${stop_loss} ${getCurrencyDisplayCode(currency)}`;\n        return '-';\n    };\n\n    const is_small_screen = isSmallScreen();\n    const should_show_deal_cancellation = cancellation_range_list?.length > 0;\n    const classname = clsx('trade-params__option', is_minimized && 'trade-params__option--minimized');\n    const action_sheet_content = [\n        {\n            id: 1,\n            component: (\n                <RiskManagementPicker\n                    closeActionSheet={closeActionSheet}\n                    initial_tab_index={Number(has_cancellation)}\n                    should_show_deal_cancellation={should_show_deal_cancellation}\n                />\n            ),\n        },\n        {\n            id: 2,\n            component: (\n                <TradeParamDefinition\n                    classname='risk-management__description'\n                    description={\n                        <RiskManagementContent should_show_deal_cancellation={should_show_deal_cancellation} />\n                    }\n                    is_custom_description\n                />\n            ),\n        },\n    ];\n\n    return (\n        <React.Fragment>\n            <TextField\n                className={classname}\n                disabled={is_market_closed}\n                label={\n                    <Localize\n                        i18n_default_text='Risk management'\n                        key={`risk-management${is_minimized ? '-minimized' : ''}`}\n                    />\n                }\n                onClick={() => setIsOpen(true)}\n                readOnly\n                value={getRiskManagementText()}\n                variant='fill'\n                status={has_error ? 'error' : 'neutral'}\n            />\n            <ActionSheet.Root\n                isOpen={is_open}\n                onClose={closeActionSheet}\n                position='left'\n                expandable={false}\n                shouldBlurOnClose={is_open}\n            >\n                <ActionSheet.Portal shouldCloseOnDrag>\n                    <Carousel\n                        classname={clsx(\n                            'risk-management__carousel',\n                            is_small_screen && 'risk-management__carousel--small'\n                        )}\n                        header={CarouselHeader}\n                        pages={action_sheet_content}\n                        title={<Localize i18n_default_text='Risk management' />}\n                    />\n                </ActionSheet.Portal>\n            </ActionSheet.Root>\n        </React.Fragment>\n    );\n});\n\nexport default RiskManagement;\n","import './risk-management.scss';\nimport RiskManagement from './risk-management';\n\nexport default RiskManagement;\n","import React from 'react';\n\nimport { getProposalRequestObject } from 'AppV2/Utils/trade-params-utils';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { TTradeStore } from 'Types';\n\nimport { useDtraderQuery } from './useDtraderQuery';\n\ntype TOnProposalResponse = TTradeStore['onProposalResponse'];\ntype TNewValues = {\n    amount?: string | number;\n    payout_per_point?: string | number;\n    barrier_1?: string | number;\n};\n// TODO: We can reuse it in TakeProfitAndStopLoss and PayoutPerPoint components.\nexport const useFetchProposalData = ({\n    trade_store,\n    proposal_request_values,\n    contract_type,\n    contract_types,\n    is_enabled,\n}: {\n    trade_store: ReturnType<typeof useTraderStore>;\n    proposal_request_values: TNewValues;\n    contract_type: string;\n    contract_types: string[];\n    is_enabled?: boolean;\n}) => {\n    const proposal_request = getProposalRequestObject({\n        new_values: proposal_request_values,\n        trade_store,\n        trade_type: contract_type,\n    });\n\n    const entries = proposal_request_values ? Object.entries(proposal_request_values) : [];\n    const query_key = [\n        'proposal',\n        ...entries.flat().join('-'),\n        `${proposal_request_values?.amount ?? ''}`,\n        JSON.stringify(proposal_request),\n        contract_types.join('-'),\n    ];\n\n    return useDtraderQuery<Parameters<TOnProposalResponse>[0]>(query_key, proposal_request, {\n        enabled: is_enabled,\n    });\n};\n","import React from 'react';\nimport clsx from 'clsx';\n\nimport { formatMoney, getCurrencyDisplayCode, getTradeTypeName, TRADE_TYPES } from '@deriv/shared';\nimport { Localize } from '@deriv/translations';\nimport { Text } from '@deriv-com/quill-ui';\n\nimport { TTradeStore } from 'Types';\n\ntype TStakeDetailsProps = Pick<TTradeStore, 'contract_type' | 'currency' | 'has_stop_loss' | 'is_multiplier'> & {\n    contract_types: string[];\n    details: {\n        commission?: string | number;\n        error_1?: string;\n        error_2?: string;\n        first_contract_payout: number;\n        is_first_payout_exceeded?: boolean;\n        is_second_payout_exceeded?: boolean;\n        max_payout: string | number;\n        max_stake: string | number;\n        min_stake: string | number;\n        second_contract_payout: number;\n        stop_out?: number | string;\n    };\n    is_loading_proposal: boolean;\n    is_empty?: boolean;\n    should_show_payout_details: boolean;\n};\n\nconst StakeDetails = ({\n    contract_type,\n    contract_types,\n    currency,\n    details,\n    has_stop_loss,\n    is_loading_proposal,\n    is_multiplier,\n    is_empty,\n    should_show_payout_details,\n}: TStakeDetailsProps) => {\n    const [displayed_values, setDisplayedValues] = React.useState({\n        is_first_payout_exceeded: false,\n        is_second_payout_exceeded: false,\n        commission: '',\n        first_contract_payout: '',\n        max_payout: '',\n        second_contract_payout: '',\n        stop_out: '',\n    });\n\n    React.useEffect(() => {\n        const getDisplayedValue = (new_value?: number | string, current_value?: string) => {\n            return (current_value === '-' && is_loading_proposal) || !new_value || is_empty\n                ? '-'\n                : formatMoney(currency, Number(new_value), true);\n        };\n\n        const {\n            commission: commission_value,\n            first_contract_payout,\n            is_first_payout_exceeded,\n            is_second_payout_exceeded,\n            second_contract_payout,\n            stop_out: stop_out_value,\n            max_payout,\n        } = displayed_values;\n        const new_commission = getDisplayedValue(Math.abs(Number(details.commission)), commission_value);\n        const new_payout_1 = getDisplayedValue(details.first_contract_payout, first_contract_payout);\n        const new_payout_2 = getDisplayedValue(details.second_contract_payout, second_contract_payout);\n        const new_stop_out = getDisplayedValue(Math.abs(Number(details.stop_out)), stop_out_value);\n        const new_max_payout = getDisplayedValue(details.max_payout, max_payout);\n\n        if (\n            commission_value !== new_commission ||\n            first_contract_payout !== new_payout_1 ||\n            displayed_values.is_first_payout_exceeded !== is_first_payout_exceeded ||\n            displayed_values.is_second_payout_exceeded !== is_second_payout_exceeded ||\n            second_contract_payout !== new_payout_2 ||\n            stop_out_value !== new_stop_out ||\n            max_payout !== new_max_payout\n        ) {\n            setDisplayedValues({\n                commission: new_commission,\n                first_contract_payout: new_payout_1,\n                is_first_payout_exceeded,\n                is_second_payout_exceeded,\n                second_contract_payout: new_payout_2,\n                stop_out: new_stop_out,\n                max_payout: new_max_payout,\n            });\n        }\n    }, [currency, details, displayed_values, is_loading_proposal, is_empty]);\n\n    const payout_title = <Localize i18n_default_text='Payout' />;\n    const content = [\n        {\n            is_displayed: !has_stop_loss && is_multiplier && !should_show_payout_details,\n            label: <Localize i18n_default_text='Stop out' />,\n            value: displayed_values.stop_out,\n        },\n        {\n            is_displayed: is_multiplier && !should_show_payout_details,\n            label: <Localize i18n_default_text='Commission' />,\n            value: displayed_values.commission,\n        },\n        {\n            is_displayed: !!details.max_payout && should_show_payout_details,\n            label: <Localize i18n_default_text='Max payout' />,\n            value: formatMoney(currency, +details.max_payout, true),\n        },\n        {\n            contract_type: getTradeTypeName(contract_types[0], {\n                isHighLow: contract_type === TRADE_TYPES.HIGH_LOW,\n            }),\n            is_displayed: !!contract_types.length && should_show_payout_details,\n            label: payout_title,\n            has_error: details.is_first_payout_exceeded,\n            value: displayed_values.first_contract_payout,\n        },\n        {\n            contract_type: getTradeTypeName(contract_types[1], {\n                isHighLow: contract_type === TRADE_TYPES.HIGH_LOW,\n            }),\n            is_displayed: contract_types.length > 1 && should_show_payout_details,\n            label: payout_title,\n            has_error: details.is_second_payout_exceeded,\n            value: displayed_values.second_contract_payout,\n        },\n    ];\n\n    return (\n        <div className='stake-content__details'>\n            {content.map(\n                ({ contract_type, is_displayed, label, has_error, value }, idx) =>\n                    is_displayed && (\n                        <div\n                            key={`${idx}_${value}`}\n                            className={clsx('stake-content__details-row', has_error && 'error')}\n                        >\n                            <Text size='sm'>\n                                {label}\n                                {contract_type && ` (${contract_type})`}\n                            </Text>\n                            <Text size='sm'>\n                                {value} {getCurrencyDisplayCode(currency)}\n                            </Text>\n                        </div>\n                    )\n            )}\n        </div>\n    );\n};\n\nexport default StakeDetails;\n","import React from 'react';\nimport { observer } from 'mobx-react-lite';\n\nimport { formatMoney, getCurrencyDisplayCode, getDecimalPlaces } from '@deriv/shared';\nimport { Localize, localize } from '@deriv/translations';\nimport { ActionSheet, TextFieldWithSteppers } from '@deriv-com/quill-ui';\n\nimport { useFetchProposalData } from 'AppV2/Hooks/useFetchProposalData';\nimport useIsVirtualKeyboardOpen from 'AppV2/Hooks/useIsVirtualKeyboardOpen';\nimport { getPayoutInfo } from 'AppV2/Utils/trade-params-utils';\nimport { getDisplayedContractTypes } from 'AppV2/Utils/trade-types-utils';\nimport { ExpandedProposal, getProposalInfo } from 'Stores/Modules/Trading/Helpers/proposal';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { TTradeStore } from 'Types';\n\nimport StakeDetails from './stake-details';\n\ntype TResponse = Parameters<TTradeStore['onProposalResponse']>[0];\ntype TStakeInput = {\n    onClose: () => void;\n    is_open?: boolean;\n};\ntype TNewValues = {\n    amount?: string | number;\n    payout_per_point?: string | number;\n    barrier_1?: string | number;\n};\ntype TStakeState = {\n    proposal_request_values: TNewValues;\n    stake_error: string;\n    fe_stake_error: string;\n    max_length: number;\n    details: {\n        commission?: string | number;\n        error_1: string;\n        error_2: string;\n        first_contract_payout: number;\n        second_contract_payout: number;\n        is_first_payout_exceeded: boolean;\n        is_second_payout_exceeded: boolean;\n        max_payout: string | number;\n        max_stake: string | number;\n        min_stake: string | number;\n        stop_out?: string | number;\n    };\n};\ntype TStakeAction =\n    | { type: 'SET_PROPOSAL_VALUES'; payload: Partial<TNewValues> }\n    | { type: 'SET_STAKE_ERROR'; payload: string }\n    | { type: 'SET_FE_STAKE_ERROR'; payload: string }\n    | { type: 'UPDATE_DETAILS'; payload: Partial<TStakeState['details']> }\n    | { type: 'SET_MAX_LENGTH'; payload: number }\n    | { type: 'RESET_ERRORS' };\n\nconst reducer = (state: TStakeState, action: TStakeAction): TStakeState => {\n    switch (action.type) {\n        case 'SET_PROPOSAL_VALUES':\n            return {\n                ...state,\n                proposal_request_values: {\n                    ...state.proposal_request_values,\n                    ...action.payload,\n                },\n            };\n        case 'SET_STAKE_ERROR':\n            return {\n                ...state,\n                stake_error: action.payload,\n            };\n        case 'SET_FE_STAKE_ERROR':\n            return {\n                ...state,\n                fe_stake_error: action.payload,\n            };\n        case 'UPDATE_DETAILS':\n            return {\n                ...state,\n                details: {\n                    ...state.details,\n                    ...action.payload,\n                },\n            };\n        case 'SET_MAX_LENGTH':\n            return {\n                ...state,\n                max_length: action.payload,\n            };\n        case 'RESET_ERRORS':\n            return {\n                ...state,\n                stake_error: '',\n                fe_stake_error: '',\n            };\n        default:\n            return state;\n    }\n};\n\nconst createInitialState = (trade_store: ReturnType<typeof useTraderStore>, decimals: number) => {\n    const {\n        amount,\n        commission,\n        contract_type,\n        trade_type_tab,\n        trade_types,\n        proposal_info,\n        validation_params,\n        stop_out,\n    } = trade_store;\n\n    const contract_types = getDisplayedContractTypes(trade_types, contract_type, trade_type_tab);\n    const {\n        contract_payout: first_contract_payout,\n        max_payout,\n        error: first_payout_error,\n    } = getPayoutInfo(proposal_info[contract_types[0]]);\n    const { contract_payout: second_contract_payout, error: second_payout_error } = getPayoutInfo(\n        proposal_info[contract_types[1]]\n    );\n\n    const { stake } = (validation_params[contract_types[0]] || validation_params[contract_types[1]]) ?? {};\n    const { max: max_stake = 0, min: min_stake = 0 } = stake ?? {};\n\n    return {\n        proposal_request_values: { amount },\n        stake_error: '',\n        fe_stake_error: '',\n        max_length: calculateMaxLength(amount, decimals),\n        details: {\n            commission,\n            error_1: first_payout_error,\n            error_2: second_payout_error,\n            first_contract_payout,\n            second_contract_payout,\n            is_first_payout_exceeded: !!first_payout_error && first_contract_payout > max_payout,\n            is_second_payout_exceeded: !!second_payout_error && second_contract_payout > max_payout,\n            max_payout,\n            max_stake,\n            min_stake,\n            stop_out,\n        },\n    };\n};\n\nconst calculateMaxLength = (amount: number | string, decimals: number): number => {\n    const is_decimal = String(amount).includes('.') || String(amount).includes(',');\n    return is_decimal ? 11 + decimals : 10;\n};\n\nconst StakeInput = observer(({ onClose, is_open }: TStakeInput) => {\n    const trade_store = useTraderStore();\n    const {\n        contract_type,\n        currency,\n        barrier_1,\n        has_stop_loss,\n        is_accumulator,\n        is_multiplier,\n        is_turbos,\n        is_vanilla,\n        onChange,\n        trade_type_tab,\n        trade_types,\n    } = trade_store;\n\n    const decimals = getDecimalPlaces(currency);\n    const [state, dispatch] = React.useReducer(reducer, null, () => createInitialState(trade_store, decimals));\n    const { proposal_request_values, stake_error, fe_stake_error, details } = state;\n\n    const contract_types = React.useMemo(\n        () => getDisplayedContractTypes(trade_types, contract_type, trade_type_tab),\n        [trade_types, contract_type, trade_type_tab]\n    );\n\n    const should_show_payout_details = !is_accumulator && !is_multiplier && !is_turbos && !is_vanilla;\n\n    // scroll the page when a virtual keyboard pops up\n    const input_id = 'stake_input';\n    const { is_key_board_visible: should_scroll } = useIsVirtualKeyboardOpen(input_id);\n\n    React.useEffect(() => {\n        if (should_scroll) window?.scrollTo({ top: 225, behavior: 'smooth' });\n    }, [should_scroll]);\n\n    React.useEffect(() => {\n        const initial_state = createInitialState(trade_store, decimals);\n        dispatch({ type: 'SET_PROPOSAL_VALUES', payload: initial_state.proposal_request_values });\n        dispatch({ type: 'UPDATE_DETAILS', payload: initial_state.details });\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    // Parallel proposal without subscription\n    // For Rise/Fall and all Digits we should do 2 proposal requests\n    const should_send_multiple_proposals = contract_types.length > 1 && !is_multiplier;\n    const has_both_errors = !!details.error_1 && !!details.error_2;\n    // Need for cases with Rise/Fall and Digits, when only one response contains error and we should allow to save the value\n    const should_show_stake_error =\n        !should_send_multiple_proposals || (should_send_multiple_proposals && has_both_errors);\n\n    const { data: response_1, is_fetching: is_fetching_1 } = useFetchProposalData({\n        trade_store,\n        proposal_request_values,\n        contract_type: contract_types[0],\n        contract_types,\n        is_enabled: is_open,\n    });\n    const { data: response_2, is_fetching: is_fetching_2 } = useFetchProposalData({\n        trade_store,\n        proposal_request_values,\n        contract_type: contract_types[1],\n        contract_types,\n        is_enabled: is_open && should_send_multiple_proposals,\n    });\n\n    const is_loading_proposal = is_fetching_1 || (should_send_multiple_proposals && is_fetching_2);\n\n    const handleProposalResponse = (response: TResponse, contractType: 'first' | 'second') => {\n        const { error, proposal } = response;\n\n        // In case if the value is empty we are showing custom error text from FE (in onSave function)\n        if (proposal_request_values.amount === '') {\n            dispatch({ type: 'SET_STAKE_ERROR', payload: '' });\n            return;\n        }\n\n        // Handle edge cases for Vanilla contracts\n        if (is_vanilla && error?.details?.barrier_choices) {\n            const { barrier_choices } = error.details;\n            if (!barrier_choices?.includes(barrier_1)) {\n                const index = Math.floor(barrier_choices.length / 2);\n                dispatch({\n                    type: 'SET_PROPOSAL_VALUES',\n                    payload: { barrier_1: barrier_choices[index] },\n                });\n                return;\n            }\n        }\n\n        // Handle edge cases for Turbo contracts\n        if (is_turbos && error?.details?.payout_per_point_choices && error?.details?.field === 'payout_per_point') {\n            const { payout_per_point_choices } = error.details;\n            const index = Math.floor(payout_per_point_choices.length / 2);\n            dispatch({\n                type: 'SET_PROPOSAL_VALUES',\n                payload: { payout_per_point: payout_per_point_choices[index] },\n            });\n            return;\n        }\n\n        // Set proposal error\n        const new_error = error?.message ?? '';\n        const is_error_field_match =\n            ['amount', 'stake'].includes(error?.details?.field ?? '') || !error?.details?.field;\n        dispatch({ type: 'SET_STAKE_ERROR', payload: is_error_field_match ? new_error : '' });\n\n        // Handle old contracts with payout (Rise/Fall, Higher/Lower, Touch/No Touch, Digits)\n        if (should_show_payout_details) {\n            const new_proposal = getProposalInfo(trade_store, response as Parameters<typeof getProposalInfo>[1]);\n            const { contract_payout, max_payout, error } = getPayoutInfo(new_proposal);\n\n            dispatch({\n                type: 'UPDATE_DETAILS',\n                payload: {\n                    ...(max_payout ? { max_payout } : {}),\n                    [`${contractType}_contract_payout`]: contract_payout || 0,\n                    [`is_${contractType}_payout_exceeded`]: !!error && contract_payout > max_payout,\n                    [`error_${contractType === 'first' ? 1 : 2}`]: error,\n                },\n            });\n        } else {\n            // Recovery for minimum and maximum allowed values in case of errors\n            if ((!details.min_stake || !details.max_stake) && error?.details) {\n                const { max_stake, min_stake } = error.details;\n                if (max_stake && min_stake) {\n                    dispatch({\n                        type: 'UPDATE_DETAILS',\n                        payload: {\n                            max_stake,\n                            min_stake,\n                        },\n                    });\n                }\n            }\n\n            // Update proposal details after a successful API call\n            if (proposal) {\n                const { commission, limit_order, validation_params } = proposal as ExpandedProposal;\n                const { max, min } = validation_params?.stake ?? {};\n                const { order_amount } = limit_order?.stop_out ?? {};\n\n                dispatch({\n                    type: 'UPDATE_DETAILS',\n                    payload: {\n                        ...(is_multiplier && commission && order_amount ? { commission, stop_out: order_amount } : {}),\n                        ...(details.max_stake || details.min_stake ? {} : { max_stake: max, min_stake: min }),\n                    },\n                });\n            } else if (!proposal && is_multiplier) {\n                dispatch({\n                    type: 'UPDATE_DETAILS',\n                    payload: { commission: 0, stop_out: 0 },\n                });\n            }\n        }\n    };\n\n    React.useEffect(() => {\n        if (response_1) handleProposalResponse(response_1, 'first');\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [response_1]);\n\n    React.useEffect(() => {\n        if (response_2) handleProposalResponse(response_2, 'second');\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [response_2]);\n\n    const getInputMessage = () =>\n        !!details.min_stake &&\n        !!details.max_stake && (\n            <Localize\n                i18n_default_text='Acceptable range: {{min_stake}} to {{max_stake}} {{currency}}'\n                values={{\n                    currency: getCurrencyDisplayCode(currency),\n                    min_stake: formatMoney(currency, +details.min_stake, true),\n                    max_stake: formatMoney(currency, +details.max_stake, true),\n                }}\n            />\n        );\n\n    const onInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const new_value = String(e.target.value);\n        dispatch({\n            type: 'SET_MAX_LENGTH',\n            payload: calculateMaxLength(new_value, decimals),\n        });\n        if (new_value.endsWith('.') || new_value.endsWith(',')) {\n            dispatch({\n                type: 'SET_FE_STAKE_ERROR',\n                payload: localize('Should be a valid number.'),\n            });\n            return;\n        }\n        // If a new value is equal to a previous one, then we won't send API request\n        const is_equal = new_value === String(proposal_request_values.amount);\n        if (is_equal) return;\n\n        dispatch({ type: 'RESET_ERRORS' });\n        dispatch({\n            type: 'SET_PROPOSAL_VALUES',\n            payload: { amount: new_value },\n        });\n    };\n\n    const onBeforeInputChange = (e: React.FormEvent<HTMLInputElement>) => {\n        if (\n            ['.', ','].includes((e.nativeEvent as InputEvent)?.data ?? '') &&\n            (String(proposal_request_values.amount)?.length ?? 0) <= 10\n        ) {\n            dispatch({\n                type: 'SET_MAX_LENGTH',\n                payload: decimals ? 11 + decimals : 10,\n            });\n        }\n    };\n\n    const onSave = () => {\n        // Prevent from saving if user clicks before we get theAPI response or if we get an error in response or the field is empty\n        if (\n            is_fetching_1 ||\n            (should_send_multiple_proposals && is_fetching_2) ||\n            (should_show_stake_error && stake_error) ||\n            fe_stake_error\n        )\n            return;\n        if (proposal_request_values.amount === '') {\n            dispatch({\n                type: 'SET_FE_STAKE_ERROR',\n                payload: localize('Amount is a required field.'),\n            });\n            return;\n        }\n\n        // Setting new stake value to the store and send it in streaming proposal\n        onChange({ target: { name: 'amount', value: proposal_request_values.amount } });\n        onClose();\n    };\n\n    return (\n        <React.Fragment>\n            <ActionSheet.Content className='stake-content'>\n                <TextFieldWithSteppers\n                    allowDecimals\n                    allowSign={false}\n                    className='text-field--custom'\n                    customType='commaRemoval'\n                    data-testid='dt_input_with_steppers'\n                    decimals={decimals}\n                    inputMode='decimal'\n                    id={input_id}\n                    maxLength={state.max_length}\n                    message={fe_stake_error || (should_show_stake_error && stake_error) || getInputMessage()}\n                    minusDisabled={Number(proposal_request_values.amount) - 1 <= 0}\n                    name='amount'\n                    noStatusIcon\n                    onChange={onInputChange}\n                    onBeforeInput={onBeforeInputChange}\n                    placeholder={localize('Amount')}\n                    regex={/[^0-9.,]/g}\n                    status={fe_stake_error || (should_show_stake_error && stake_error) ? 'error' : 'neutral'}\n                    shouldRound={false}\n                    textAlignment='center'\n                    unitLeft={getCurrencyDisplayCode(currency)}\n                    value={proposal_request_values.amount}\n                    variant='fill'\n                />\n                <StakeDetails\n                    contract_type={contract_type}\n                    contract_types={contract_types}\n                    currency={currency}\n                    details={details}\n                    has_stop_loss={has_stop_loss}\n                    is_loading_proposal={is_loading_proposal}\n                    is_multiplier={is_multiplier}\n                    is_empty={!proposal_request_values.amount}\n                    should_show_payout_details={should_show_payout_details}\n                />\n            </ActionSheet.Content>\n            <ActionSheet.Footer\n                alignment='vertical'\n                shouldCloseOnPrimaryButtonClick={false}\n                primaryAction={{\n                    content: <Localize i18n_default_text='Save' />,\n                    onAction: onSave,\n                }}\n            />\n        </React.Fragment>\n    );\n});\n\nexport default StakeInput;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { observer } from 'mobx-react-lite';\n\nimport { getCurrencyDisplayCode } from '@deriv/shared';\nimport { Localize } from '@deriv/translations';\nimport { ActionSheet, TextField } from '@deriv-com/quill-ui';\n\nimport useTradeError from 'AppV2/Hooks/useTradeError';\nimport { getDisplayedContractTypes } from 'AppV2/Utils/trade-types-utils';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\nimport { TTradeParametersProps } from '../trade-parameters';\n\nimport StakeInput from './stake-input';\n\nconst Stake = observer(({ is_minimized }: TTradeParametersProps) => {\n    const {\n        amount,\n        currency,\n        contract_type,\n        has_open_accu_contract,\n        is_market_closed,\n        is_multiplier,\n        trade_types,\n        trade_type_tab,\n        proposal_info,\n    } = useTraderStore();\n    const { is_error_matching_field: has_error } = useTradeError({ error_fields: ['stake', 'amount'] });\n\n    const [is_open, setIsOpen] = React.useState(false);\n\n    const contract_types = getDisplayedContractTypes(trade_types, contract_type, trade_type_tab);\n    const is_all_types_with_errors = contract_types.every(item => proposal_info?.[item]?.has_error);\n\n    // Showing snackbar for all cases, except when it is Rise/Fall or Digits and only one subtype has error\n    const should_show_snackbar = contract_types.length === 1 || is_multiplier || is_all_types_with_errors;\n\n    const onClose = React.useCallback(() => setIsOpen(false), []);\n\n    return (\n        <React.Fragment>\n            <TextField\n                disabled={has_open_accu_contract || is_market_closed}\n                variant='fill'\n                readOnly\n                label={<Localize i18n_default_text='Stake' key={`stake${is_minimized ? '-minimized' : ''}`} />}\n                noStatusIcon\n                onClick={() => setIsOpen(true)}\n                value={`${amount} ${getCurrencyDisplayCode(currency)}`}\n                className={clsx('trade-params__option', is_minimized && 'trade-params__option--minimized')}\n                status={has_error && should_show_snackbar ? 'error' : 'neutral'}\n            />\n            <ActionSheet.Root\n                isOpen={is_open}\n                onClose={onClose}\n                position='left'\n                expandable={false}\n                shouldBlurOnClose={is_open}\n            >\n                <ActionSheet.Portal shouldCloseOnDrag>\n                    <ActionSheet.Header title={<Localize i18n_default_text='Stake' />} />\n                    <StakeInput onClose={onClose} is_open={is_open} />\n                </ActionSheet.Portal>\n            </ActionSheet.Root>\n        </React.Fragment>\n    );\n});\n\nexport default Stake;\n","import Stake from './stake';\n\nimport './stake.scss';\n\nexport default Stake;\n","import React from 'react';\nimport debounce from 'lodash.debounce';\nimport { ActionSheet, Text, WheelPicker } from '@deriv-com/quill-ui';\nimport { Skeleton } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport type { TV2ParamsInitialValues } from 'Stores/Modules/Trading/trade-store';\n\ntype TStrikeWheelProps = {\n    current_strike: string;\n    currency: string;\n    onStrikePriceSelect: (new_value: string | number) => void;\n    payout_per_point?: string | number;\n    strike_price_list: {\n        value: string;\n    }[];\n    setV2ParamsInitialValues: ({ value, name }: { value: number | string; name: keyof TV2ParamsInitialValues }) => void;\n};\n\nconst onWheelPickerScrollDebounced = debounce(\n    (new_value: string | number, callback: TStrikeWheelProps['onStrikePriceSelect']) => callback(new_value),\n    200\n);\n\nconst StrikeWheel = ({\n    current_strike,\n    currency,\n    onStrikePriceSelect,\n    payout_per_point,\n    strike_price_list,\n    setV2ParamsInitialValues,\n}: TStrikeWheelProps) => {\n    const initial_value_ref = React.useRef<string | number>();\n    const selected_value_ref = React.useRef<string | number>(current_strike);\n\n    const onSave = () => {\n        initial_value_ref.current = selected_value_ref.current;\n        setV2ParamsInitialValues({ value: selected_value_ref.current, name: 'strike' });\n    };\n\n    React.useEffect(() => {\n        if (!initial_value_ref.current && current_strike) {\n            initial_value_ref.current = current_strike;\n            setV2ParamsInitialValues({ value: current_strike, name: 'strike' });\n        }\n\n        return () => {\n            if (initial_value_ref.current && initial_value_ref.current !== selected_value_ref.current) {\n                onStrikePriceSelect(initial_value_ref.current);\n            }\n            onWheelPickerScrollDebounced.cancel();\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return (\n        <React.Fragment>\n            <ActionSheet.Content className='strike__wrapper' data-testid='dt_strike_wrapper'>\n                <div className='strike__wheel-picker'>\n                    <WheelPicker\n                        data={strike_price_list}\n                        selectedValue={selected_value_ref.current}\n                        setSelectedValue={(new_value: string | number) => {\n                            if (new_value === selected_value_ref.current) return;\n                            selected_value_ref.current = new_value;\n                            onWheelPickerScrollDebounced(new_value, onStrikePriceSelect);\n                        }}\n                    />\n                </div>\n                <div className='strike__payout'>\n                    <Text color='quill-typography__color--subtle' size='sm'>\n                        <Localize i18n_default_text='Payout per point:' />\n                    </Text>\n                    <Text size='sm' as='div' className='strike__payout__content'>\n                        {payout_per_point ? (\n                            <React.Fragment>\n                                {payout_per_point} {currency}\n                            </React.Fragment>\n                        ) : (\n                            <Skeleton width={90} height={14} />\n                        )}\n                    </Text>\n                </div>\n            </ActionSheet.Content>\n            <ActionSheet.Footer\n                alignment='vertical'\n                primaryAction={{\n                    content: <Localize i18n_default_text='Save' />,\n                    onAction: onSave,\n                }}\n            />\n        </React.Fragment>\n    );\n};\n\nexport default StrikeWheel;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { observer } from 'mobx-react-lite';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { ActionSheet, TextField } from '@deriv-com/quill-ui';\nimport { getCurrencyDisplayCode, isEmptyObject } from '@deriv/shared';\nimport { Localize } from '@deriv/translations';\nimport { Skeleton } from '@deriv/components';\nimport TradeParamDefinition from 'AppV2/Components/TradeParamDefinition';\nimport Carousel from 'AppV2/Components/Carousel';\nimport CarouselHeader from 'AppV2/Components/Carousel/carousel-header';\nimport { isSmallScreen } from 'AppV2/Utils/trade-params-utils';\nimport StrikeWheel from './strike-wheel';\nimport { TTradeParametersProps } from '../trade-parameters';\n\nconst Strike = observer(({ is_minimized }: TTradeParametersProps) => {\n    const [is_open, setIsOpen] = React.useState(false);\n    const {\n        barrier_1,\n        barrier_choices: strike_price_choices,\n        contract_type,\n        currency,\n        is_market_closed,\n        onChange,\n        proposal_info,\n        setV2ParamsInitialValues,\n        v2_params_initial_values,\n    } = useTraderStore();\n\n    const is_small_screen = isSmallScreen();\n    const strike_price_list = strike_price_choices.map((strike_price: string) => ({ value: strike_price }));\n    const payout_per_point: string | number = isEmptyObject(proposal_info)\n        ? ''\n        : proposal_info[contract_type.toUpperCase()]?.obj_contract_basis?.value;\n\n    const handleStrikeChange = (new_value: number | string) =>\n        onChange({ target: { name: 'barrier_1', value: new_value } });\n    const onClose = React.useCallback(() => setIsOpen(false), []);\n\n    const action_sheet_content = [\n        {\n            id: 1,\n            component: (\n                <StrikeWheel\n                    current_strike={barrier_1}\n                    currency={getCurrencyDisplayCode(currency)}\n                    onStrikePriceSelect={handleStrikeChange}\n                    payout_per_point={payout_per_point}\n                    strike_price_list={strike_price_list}\n                    setV2ParamsInitialValues={setV2ParamsInitialValues}\n                />\n            ),\n        },\n        {\n            id: 2,\n            component: (\n                <TradeParamDefinition\n                    description={\n                        <>\n                            <p>\n                                <Localize i18n_default_text='It is the price where you can start receiving a payout from an option.' />\n                            </p>\n                            <br />\n                            <p>\n                                <Localize i18n_default_text='For a Call option, you receive a payout if the final price is higher than the strike price.' />\n                            </p>\n                            <br />\n                            <p>\n                                <Localize i18n_default_text='For a Put option, you receive a payout if the final price is lower than the strike price.' />\n                            </p>\n                        </>\n                    }\n                />\n            ),\n        },\n    ];\n    const classname = clsx('trade-params__option', is_minimized && 'trade-params__option--minimized');\n\n    React.useEffect(() => {\n        const initial_strike = v2_params_initial_values?.strike;\n        if (initial_strike && barrier_1 !== initial_strike) {\n            handleStrikeChange(initial_strike);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    if (!barrier_1)\n        return (\n            <div className={classname}>\n                <Skeleton />\n            </div>\n        );\n\n    return (\n        <React.Fragment>\n            <TextField\n                className={classname}\n                disabled={is_market_closed}\n                label={<Localize i18n_default_text='Strike price' key={`strike${is_minimized ? '-minimized' : ''}`} />}\n                onClick={() => setIsOpen(true)}\n                readOnly\n                variant='fill'\n                value={barrier_1}\n            />\n            <ActionSheet.Root\n                isOpen={is_open}\n                onClose={onClose}\n                position='left'\n                expandable={false}\n                shouldBlurOnClose={is_open}\n            >\n                <ActionSheet.Portal shouldCloseOnDrag>\n                    <Carousel\n                        classname={clsx('strike__carousel', is_small_screen && 'strike__carousel--small')}\n                        header={CarouselHeader}\n                        pages={action_sheet_content}\n                        title={<Localize i18n_default_text='Strike price' />}\n                    />\n                </ActionSheet.Portal>\n            </ActionSheet.Root>\n        </React.Fragment>\n    );\n});\n\nexport default Strike;\n","import './strike.scss';\nimport Strike from './strike';\n\nexport default Strike;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { observer } from 'mobx-react-lite';\nimport { ActionSheet, TextField } from '@deriv-com/quill-ui';\nimport { Localize } from '@deriv/translations';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { getCurrencyDisplayCode } from '@deriv/shared';\nimport Carousel from 'AppV2/Components/Carousel';\nimport CarouselHeader from 'AppV2/Components/Carousel/carousel-header';\nimport TakeProfitAndStopLossInput from '../RiskManagement/take-profit-and-stop-loss-input';\nimport TradeParamDefinition from 'AppV2/Components/TradeParamDefinition';\nimport { TTradeParametersProps } from '../trade-parameters';\nimport useTradeError from 'AppV2/Hooks/useTradeError';\n\nconst TakeProfit = observer(({ is_minimized }: TTradeParametersProps) => {\n    const { currency, has_open_accu_contract, has_take_profit, is_market_closed, take_profit } = useTraderStore();\n    const { is_error_matching_field: has_error } = useTradeError({ error_fields: ['take_profit'] });\n    const [is_open, setIsOpen] = React.useState(false);\n\n    const onActionSheetClose = React.useCallback(() => setIsOpen(false), []);\n\n    const action_sheet_content = [\n        {\n            id: 1,\n            component: <TakeProfitAndStopLossInput onActionSheetClose={onActionSheetClose} />,\n        },\n        {\n            id: 2,\n            component: (\n                <TradeParamDefinition\n                    description={\n                        <Localize i18n_default_text='When your profit reaches or exceeds the set amount, your trade will be closed automatically.' />\n                    }\n                />\n            ),\n        },\n    ];\n\n    return (\n        <React.Fragment>\n            <TextField\n                className={clsx('trade-params__option', is_minimized && 'trade-params__option--minimized')}\n                disabled={has_open_accu_contract || is_market_closed}\n                label={\n                    <Localize i18n_default_text='Take profit' key={`take-profit${is_minimized ? '-minimized' : ''}`} />\n                }\n                onClick={() => setIsOpen(true)}\n                readOnly\n                variant='fill'\n                value={has_take_profit && take_profit ? `${take_profit} ${getCurrencyDisplayCode(currency)}` : '-'}\n                status={has_error ? 'error' : 'neutral'}\n            />\n            <ActionSheet.Root\n                isOpen={is_open}\n                onClose={onActionSheetClose}\n                position='left'\n                expandable={false}\n                shouldBlurOnClose={is_open}\n            >\n                <ActionSheet.Portal shouldCloseOnDrag>\n                    <Carousel\n                        header={CarouselHeader}\n                        pages={action_sheet_content}\n                        title={<Localize i18n_default_text='Take profit' />}\n                    />\n                </ActionSheet.Portal>\n            </ActionSheet.Root>\n        </React.Fragment>\n    );\n});\n\nexport default TakeProfit;\n","import TakeProfit from './take-profit';\n\nexport default TakeProfit;\n","import React from 'react';\nimport { observer } from 'mobx-react-lite';\nimport clsx from 'clsx';\nimport { SegmentedControlSingleChoice } from '@deriv-com/quill-ui';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { getTradeTypeTabsList } from 'AppV2/Utils/trade-params-utils';\nimport { TTradeParametersProps } from '../trade-parameters';\n\nconst TradeTypeTabs = observer(({ is_minimized }: TTradeParametersProps) => {\n    const { contract_type, is_market_closed, onChange, trade_type_tab, setTradeTypeTab } = useTraderStore();\n    const tab_list = getTradeTypeTabsList(contract_type);\n    let initial_index = 0;\n\n    // If the trade type tab is VANILLALONGPUT or TURBOSSHORT, keep the first tab\n    if (\n        !(\n            (trade_type_tab === 'VANILLALONGPUT' && contract_type === 'vanillalongcall') ||\n            (trade_type_tab === 'TURBOSSHORT' && contract_type === 'turboslong')\n        )\n    ) {\n        initial_index = tab_list.findIndex(tab =>\n            trade_type_tab ? tab.contract_type === trade_type_tab : tab.value === contract_type\n        );\n    }\n\n    const initial_tab_index = initial_index < 0 ? 0 : initial_index;\n    const [tab_index, setTabIndex] = React.useState(initial_tab_index);\n\n    const handleTabChange = (selected_item_index: number) => {\n        const { contract_type: type, value: trade_type } = tab_list[selected_item_index] ?? {};\n        setTabIndex(selected_item_index);\n        setTradeTypeTab(type);\n        if (trade_type !== contract_type) {\n            onChange({ target: { name: 'contract_type', value: trade_type } });\n        }\n    };\n\n    React.useEffect(() => {\n        setTabIndex(initial_tab_index);\n        setTradeTypeTab(tab_list[initial_tab_index]?.contract_type);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [tab_list, initial_tab_index]);\n\n    if (!tab_list.length) return null;\n    return (\n        <SegmentedControlSingleChoice\n            className={clsx('trade-params__option', is_minimized && 'trade-params__option--minimized')}\n            hasContainerWidth\n            onChange={handleTabChange}\n            options={tab_list.map(({ label }) => ({ disabled: is_market_closed, label }))}\n            selectedItemIndex={tab_index}\n            key={`${tab_index}${is_market_closed}`}\n        />\n    );\n});\n\nexport default TradeTypeTabs;\n","import TradeTypeTabs from './trade-type-tabs';\n\nexport default TradeTypeTabs;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { observer } from 'mobx-react-lite';\n\nimport { isTradeParamVisible } from 'AppV2/Utils/layout-utils';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\nimport AccumulatorsInformation from './AccumulatorsInformation';\nimport AllowEquals from './AllowEquals';\nimport Barrier from './Barrier';\nimport BarrierInfo from './BarrierInfo';\nimport Duration from './Duration';\nimport GrowthRate from './GrowthRate';\nimport LastDigitPrediction from './LastDigitPrediction';\nimport Multiplier from './Multiplier';\nimport MultipliersDealCancellationInfo from './MultipliersDealCancellationInfo';\nimport MultipliersExpirationInfo from './MultipliersExpirationInfo';\nimport PayoutInfo from './PayoutInfo';\nimport PayoutPerPoint from './PayoutPerPoint';\nimport PayoutPerPointInfo from './PayoutPerPointInfo';\nimport RiskManagement from './RiskManagement';\nimport Stake from './Stake';\nimport Strike from './Strike';\nimport TakeProfit from './TakeProfit';\nimport TradeTypeTabs from './TradeTypeTabs';\n\nexport type TTradeParametersProps = { is_minimized?: boolean };\n\nconst TradeParameters = observer(({ is_minimized }: TTradeParametersProps) => {\n    const { contract_type, has_cancellation, symbol } = useTraderStore();\n    const isVisible = (component_key: string) =>\n        isTradeParamVisible({ component_key, contract_type, has_cancellation, symbol });\n\n    return (\n        <div\n            className={clsx(\n                'trade-params__options__wrapper',\n                is_minimized && 'trade-params__options__wrapper--minimized'\n            )}\n        >\n            {is_minimized && (\n                <React.Fragment>\n                    {isVisible('expiration') && <MultipliersExpirationInfo />}\n                    {isVisible('mult_info_display') && <MultipliersDealCancellationInfo />}\n                    {isVisible('payout_per_point_info') && <PayoutPerPointInfo />}\n                    {isVisible('allow_equals') && <AllowEquals />}\n                    {isVisible('payout') && <PayoutInfo />}\n                </React.Fragment>\n            )}\n            <div\n                className={clsx(\n                    'trade-params__options__wrapper',\n                    is_minimized && 'trade-params__options__wrapper--horizontal'\n                )}\n            >\n                {isVisible('trade_type_tabs') && <TradeTypeTabs is_minimized={is_minimized} />}\n                {isVisible('last_digit') && <LastDigitPrediction is_minimized={is_minimized} />}\n                {isVisible('duration') && <Duration is_minimized={is_minimized} />}\n                {isVisible('strike') && <Strike is_minimized={is_minimized} />}\n                {isVisible('barrier') && <Barrier is_minimized={is_minimized} />}\n                {isVisible('growth_rate') && <GrowthRate is_minimized={is_minimized} />}\n                {isVisible('multiplier') && <Multiplier is_minimized={is_minimized} />}\n                {isVisible('stake') && <Stake is_minimized={is_minimized} />}\n                {isVisible('payout_per_point') && <PayoutPerPoint is_minimized={is_minimized} />}\n                {isVisible('allow_equals') && !is_minimized && <AllowEquals />}\n                {isVisible('take_profit') && <TakeProfit is_minimized={is_minimized} />}\n                {isVisible('risk_management') && <RiskManagement is_minimized={is_minimized} />}\n                {isVisible('expiration') && !is_minimized && <MultipliersExpirationInfo />}\n                {isVisible('accu_info_display') && !is_minimized && <AccumulatorsInformation />}\n                {isVisible('barrier_info') && !is_minimized && <BarrierInfo />}\n                {isVisible('payout_per_point_info') && !is_minimized && <PayoutPerPointInfo />}\n                {isVisible('payout') && !is_minimized && <PayoutInfo />}\n                {isVisible('mult_info_display') && !is_minimized && <MultipliersDealCancellationInfo />}\n            </div>\n        </div>\n    );\n});\n\nexport default TradeParameters;\n","import { useCallback, useEffect, useRef, useState } from 'react';\nimport { pickDefaultSymbol, setTradeURLParams } from '@deriv/shared';\nimport { ActiveSymbols } from '@deriv/api-types';\nimport useActiveSymbols from './useActiveSymbols';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\n// The hook handles the cases when the selected `contract_type` is changed during account switch or if the symbol is not available in the URL param.\nconst useDefaultSymbol = () => {\n    const { processContractsForV2, onChange, symbol: symbol_from_store } = useTraderStore();\n    const { activeSymbols: active_symbols } = useActiveSymbols();\n    const has_initialized_ref = useRef(false);\n    const [symbol, setSymbol] = useState('');\n\n    const isSymbolAvailable = useCallback(\n        (active_symbols: ActiveSymbols) => {\n            const has_initialized = has_initialized_ref.current;\n\n            return active_symbols.some(symbol_info => {\n                const exchange_open_check = has_initialized ? true : symbol_info.exchange_is_open === 1;\n                return symbol_info.symbol === symbol_from_store && exchange_open_check;\n            });\n        },\n        [symbol_from_store]\n    );\n\n    const processNewSymbol = useCallback(\n        async (new_symbol: string) => {\n            // To call contracts_for during initialization\n            const has_initialized = has_initialized_ref.current;\n            const is_initailization = !has_initialized && new_symbol;\n            const has_symbol_changed = symbol_from_store != new_symbol && new_symbol;\n            setSymbol(new_symbol);\n\n            if (is_initailization || has_symbol_changed) {\n                await onChange({ target: { name: 'symbol', value: new_symbol } });\n                processContractsForV2();\n            }\n            setTradeURLParams({ symbol: new_symbol });\n        },\n        [onChange, processContractsForV2, symbol_from_store]\n    );\n\n    useEffect(() => {\n        const process = async () => {\n            const new_symbol = isSymbolAvailable(active_symbols)\n                ? symbol_from_store\n                : (await pickDefaultSymbol(active_symbols)) || '1HZ100V';\n\n            processNewSymbol(new_symbol);\n            has_initialized_ref.current = true;\n        };\n        process();\n    }, [active_symbols, isSymbolAvailable, processNewSymbol, symbol_from_store]);\n\n    return { symbol };\n};\n\nexport default useDefaultSymbol;\n","import React from 'react';\nimport { ActiveSymbols, TickSpotData } from '@deriv/api-types';\nimport { useDevice } from '@deriv-com/ui';\nimport { ChartBarrierStore, isAccumulatorContract } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { SmartChart } from 'Modules/SmartChart';\nimport AccumulatorsChartElements from 'Modules/SmartChart/Components/Markers/accumulators-chart-elements';\nimport ToolbarWidgets from 'Modules/SmartChart/Components/toolbar-widgets';\nimport useActiveSymbols from 'AppV2/Hooks/useActiveSymbols';\nimport useDefaultSymbol from 'AppV2/Hooks/useDefaultSymbol';\n\ntype TBottomWidgetsParams = {\n    digits: number[];\n    tick: TickSpotData | null;\n};\n\nconst BottomWidgetsMobile = observer(({ digits, tick }: TBottomWidgetsParams) => {\n    const { setDigitStats, setTickData } = useTraderStore();\n\n    // Using bottom widgets in V2 to get tick data for all trade types and to get digit stats for Digit trade types\n    React.useEffect(() => {\n        setTickData(tick);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [tick]);\n\n    React.useEffect(() => {\n        setDigitStats(digits);\n        // For digits array, which is coming from SmartChart, reference is not always changing.\n        // As it is the same, this useEffect was not triggered on every array update.\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [digits.join('-')]);\n\n    // render no bottom widgets on chart\n    return null;\n});\n\nconst TradeChart = observer(() => {\n    const { ui, common, contract_trade, portfolio } = useStore();\n    const { isMobile } = useDevice();\n    const {\n        accumulator_barriers_data,\n        accumulator_contract_barriers_data,\n        chart_type,\n        granularity,\n        has_crossed_accu_barriers,\n        markers_array,\n        updateChartType,\n        updateGranularity,\n    } = contract_trade;\n    const ref = React.useRef<{ hasPredictionIndicators(): void; triggerPopup(arg: () => void): void }>(null);\n    const { all_positions } = portfolio;\n    const { is_chart_countdown_visible, is_chart_layout_default, is_dark_mode_on, is_positions_drawer_on } = ui;\n    const { current_language, is_socket_opened } = common;\n    const { activeSymbols: active_symbols } = useActiveSymbols();\n    const { symbol } = useDefaultSymbol();\n    const {\n        barriers_flattened: extra_barriers,\n        chartStateChange,\n        chart_layout,\n        contract_type,\n        exportLayout,\n        has_alternative_source,\n        has_barrier,\n        main_barrier_flattened: main_barrier,\n        setChartStatus,\n        show_digits_stats,\n        onChange,\n        prev_contract_type,\n        wsForget,\n        wsForgetStream,\n        wsSendRequest,\n        wsSubscribe,\n    } = useTraderStore();\n    const is_accumulator = isAccumulatorContract(contract_type);\n    const settings = {\n        countdown: is_chart_countdown_visible,\n        isHighestLowestMarkerEnabled: false, // TODO: Pending UI,\n        language: current_language.toLowerCase(),\n        position: is_chart_layout_default ? 'bottom' : 'left',\n        theme: is_dark_mode_on ? 'dark' : 'light',\n        ...(is_accumulator ? { whitespace: 190, minimumLeftBars: isMobile ? 3 : undefined } : {}),\n        ...(has_barrier ? { whitespace: 110 } : {}),\n    };\n\n    const { current_spot, current_spot_time } = accumulator_barriers_data || {};\n\n    React.useEffect(() => {\n        if ((is_accumulator || show_digits_stats) && ref.current?.hasPredictionIndicators()) {\n            const cancelCallback = () => onChange({ target: { name: 'contract_type', value: prev_contract_type } });\n            ref.current?.triggerPopup(cancelCallback);\n        }\n    }, [is_accumulator, onChange, prev_contract_type, show_digits_stats]);\n\n    const getMarketsOrder = (active_symbols: ActiveSymbols): string[] => {\n        const synthetic_index = 'synthetic_index';\n        const has_synthetic_index = active_symbols.some(s => s.market === synthetic_index);\n        return active_symbols\n            .slice()\n            .sort((a, b) => (a.display_name < b.display_name ? -1 : 1))\n            .map(s => s.market)\n            .reduce(\n                (arr, market) => {\n                    if (arr.indexOf(market) === -1) arr.push(market);\n                    return arr;\n                },\n                has_synthetic_index ? [synthetic_index] : []\n            );\n    };\n\n    const barriers: ChartBarrierStore[] = main_barrier ? [main_barrier, ...extra_barriers] : extra_barriers;\n\n    // max ticks to display for mobile view for tick chart\n    const max_ticks = granularity === 0 ? 8 : 24;\n\n    if (!symbol || !active_symbols.length) return null;\n    return (\n        <SmartChart\n            ref={ref}\n            barriers={barriers}\n            contracts_array={markers_array}\n            bottomWidgets={BottomWidgetsMobile}\n            crosshair={isMobile ? 0 : undefined}\n            crosshairTooltipLeftAllow={560}\n            showLastDigitStats\n            chartControlsWidgets={null}\n            chartStatusListener={(v: boolean) => setChartStatus(!v, true)}\n            chartType={chart_type}\n            initialData={{\n                activeSymbols: JSON.parse(JSON.stringify(active_symbols)),\n            }}\n            chartData={{\n                activeSymbols: JSON.parse(JSON.stringify(active_symbols)),\n            }}\n            feedCall={{\n                activeSymbols: false,\n            }}\n            enabledNavigationWidget={!isMobile}\n            enabledChartFooter={false}\n            id='trade'\n            isMobile={isMobile}\n            isVerticalScrollEnabled={false}\n            maxTick={isMobile ? max_ticks : undefined}\n            granularity={show_digits_stats || is_accumulator ? 0 : granularity}\n            requestAPI={wsSendRequest}\n            requestForget={wsForget}\n            requestForgetStream={wsForgetStream}\n            requestSubscribe={wsSubscribe}\n            settings={settings}\n            allowTickChartTypeOnly={show_digits_stats || is_accumulator}\n            stateChangeListener={chartStateChange}\n            symbol={symbol}\n            topWidgets={() => <div /> /* to hide the original chart market dropdown */}\n            isConnectionOpened={is_socket_opened}\n            clearChart={false}\n            toolbarWidget={() => {\n                return <ToolbarWidgets updateChartType={updateChartType} updateGranularity={updateGranularity} />;\n            }}\n            importedLayout={chart_layout}\n            onExportLayout={exportLayout}\n            shouldFetchTradingTimes={false}\n            hasAlternativeSource={has_alternative_source}\n            getMarketsOrder={getMarketsOrder}\n            should_zoom_out_on_yaxis={is_accumulator}\n            yAxisMargin={{\n                top: isMobile ? 76 : 106,\n            }}\n            isLive\n            leftMargin={!isMobile && is_positions_drawer_on ? 328 : 80}\n        >\n            {is_accumulator && (\n                <AccumulatorsChartElements\n                    all_positions={all_positions}\n                    current_spot={current_spot}\n                    current_spot_time={current_spot_time}\n                    has_crossed_accu_barriers={has_crossed_accu_barriers}\n                    should_show_profit_text={!!accumulator_contract_barriers_data.accumulators_high_barrier}\n                    symbol={symbol}\n                    is_mobile={isMobile}\n                />\n            )}\n        </SmartChart>\n    );\n});\nexport default TradeChart;\n","import React from 'react';\nimport { Modal } from '@deriv-com/quill-ui';\nimport { useLocalStorageData } from '@deriv/hooks';\nimport { Localize } from '@deriv/translations';\nimport { DESCRIPTION_VIDEO_ID } from 'Modules/Trading/Helpers/video-config';\nimport StreamIframe from '../../StreamIframe';\n\ntype TTradeTypeSelectionGuideProps = {\n    is_dark_mode_on?: boolean;\n};\n\nconst TradeTypesSelectionGuide: React.FC<TTradeTypeSelectionGuideProps> = ({ is_dark_mode_on }) => {\n    const [is_modal_open, setIsModalOpen] = React.useState(false);\n    const guide_timeout_ref = React.useRef<ReturnType<typeof setTimeout>>();\n\n    const [guide_dtrader_v2, setGuideDtraderV2] = useLocalStorageData<Record<string, boolean>>('guide_dtrader_v2', {\n        trade_types_selection: false,\n        trade_page: false,\n        positions_page: false,\n    });\n    const { trade_types_selection } = guide_dtrader_v2 || {};\n\n    const video_src = is_dark_mode_on\n        ? DESCRIPTION_VIDEO_ID.trade_type_selection.dark\n        : DESCRIPTION_VIDEO_ID.trade_type_selection.light;\n\n    const onFinishGuide = () => {\n        setIsModalOpen(false);\n        setGuideDtraderV2({ ...guide_dtrader_v2, trade_types_selection: true });\n    };\n\n    React.useEffect(() => {\n        if (!trade_types_selection) guide_timeout_ref.current = setTimeout(() => setIsModalOpen(true), 800);\n\n        return () => clearTimeout(guide_timeout_ref.current);\n    }, [trade_types_selection]);\n\n    if (trade_types_selection) return null;\n\n    return (\n        <Modal\n            isOpened={is_modal_open}\n            isNonExpandable\n            isMobile\n            showHandleBar\n            shouldCloseModalOnSwipeDown\n            toggleModal={onFinishGuide}\n            primaryButtonLabel={<Localize i18n_default_text='Got it' />}\n            primaryButtonCallback={onFinishGuide}\n        >\n            <Modal.Header\n                image={<StreamIframe src={video_src} title='trade_types_selection' />}\n                title={<Localize i18n_default_text='Manage your trade types' />}\n            />\n            <Modal.Body>\n                <Localize i18n_default_text='Pin, rearrange, or remove your favorite trade types for easy access.' />\n            </Modal.Body>\n        </Modal>\n    );\n};\n\nexport default React.memo(TradeTypesSelectionGuide);\n","import TradeTypesSelectionGuide from './trade-types-selection-guide';\n\nexport default TradeTypesSelectionGuide;\n","import React, { useState } from 'react';\nimport { StandaloneGripDotsVerticalBoldIcon, StandaloneCircleMinusFillIcon } from '@deriv/quill-icons';\nimport clsx from 'clsx';\nimport { isTouchDevice } from '@deriv/shared';\n\ntype TDraggableListItemProps = {\n    active?: boolean;\n    disabled?: boolean;\n    leftIcon?: React.ReactNode;\n    onLeftIconClick?: () => void;\n    onRightIconClick?: () => void;\n    rightIcon?: React.ReactNode;\n    title: string;\n};\n\nconst DraggableListItem: React.FC<TDraggableListItemProps> = ({\n    active,\n    disabled,\n    leftIcon,\n    onLeftIconClick,\n    onRightIconClick,\n    rightIcon,\n    title,\n}) => {\n    const default_left_icon = (\n        <StandaloneGripDotsVerticalBoldIcon iconSize='sm' fill='var(--component-textIcon-normal-default)' />\n    );\n    const default_right_icon = <StandaloneCircleMinusFillIcon fill='var(--core-color-solid-red-700)' iconSize='sm' />;\n    const [is_moved, setIsMoved] = useState<boolean>(false);\n\n    return (\n        <div className={clsx('draggable-list-item', { 'draggable-list-item--active': active })}>\n            <div className='draggable-list-item__left'>\n                <button\n                    className='draggable-list-item__left-icon'\n                    data-testid='dt_draggable_list_item_left_icon'\n                    onClick={onLeftIconClick}\n                    disabled={disabled}\n                >\n                    {leftIcon || default_left_icon}\n                </button>\n                <div className='draggable-list-item__title'>{title}</div>\n            </div>\n            <button\n                className={clsx('draggable-list-item__icon', { 'draggable-list-item__icon--disabled': disabled })}\n                data-testid='dt_draggable_list_item_icon'\n                onClick={() => {\n                    if (!isTouchDevice() && onRightIconClick) onRightIconClick();\n                }}\n                onTouchMove={() => {\n                    if (!is_moved) setIsMoved(true);\n                }}\n                onTouchEnd={() => {\n                    if (!is_moved && onRightIconClick && !disabled) {\n                        onRightIconClick();\n                    }\n                    setIsMoved(false);\n                }}\n                disabled={disabled}\n            >\n                {rightIcon || default_right_icon}\n            </button>\n        </div>\n    );\n};\n\nexport default DraggableListItem;\n","import React from 'react';\nimport { DragDropContext, Droppable, Draggable, DropResult, DragStart } from 'react-beautiful-dnd';\nimport DraggableListItem from './draggable-list-item';\n\nexport type TDraggableListItem = {\n    id: string;\n    title: string;\n    icon?: React.ReactNode;\n};\n\nexport type TDraggableListCategory = {\n    id: string;\n    title?: string;\n    button_title?: string;\n    items: TDraggableListItem[];\n};\n\nexport type TDraggableListProps = {\n    categories: TDraggableListCategory[];\n    onRightIconClick: (item: TDraggableListItem) => void;\n    onDrag?: (categories: TDraggableListCategory[]) => void;\n    show_editing_divider?: boolean;\n};\n\nconst DraggableList: React.FC<TDraggableListProps> = ({\n    categories,\n    onRightIconClick,\n    onDrag,\n    show_editing_divider,\n}) => {\n    const [category_list, setCategoryList] = React.useState(categories);\n    const [draggedItemId, setDraggedItemId] = React.useState<string | null>(null);\n\n    const handleOnDragEnd = (result: DropResult) => {\n        setDraggedItemId(null);\n        if (!result.destination) return;\n\n        const new_category_list = updateCategoriesWithDragResult(category_list, result);\n        setCategoryList(new_category_list);\n        onDrag?.(new_category_list);\n    };\n\n    const handleOnDragStart = (start: DragStart) => setDraggedItemId(start.draggableId);\n\n    React.useEffect(() => setCategoryList(categories), [categories]);\n    return (\n        <DragDropContext onDragEnd={handleOnDragEnd} onDragStart={handleOnDragStart}>\n            {category_list.map(category => (\n                <DraggableCategory\n                    key={category.id}\n                    category={category}\n                    draggedItemId={draggedItemId}\n                    onRightIconClick={onRightIconClick}\n                    show_editing_divider={show_editing_divider}\n                />\n            ))}\n        </DragDropContext>\n    );\n};\n\nconst DraggableCategory: React.FC<{\n    category: TDraggableListCategory;\n    draggedItemId: string | null;\n    onRightIconClick: (item: TDraggableListItem) => void;\n    show_editing_divider?: boolean;\n}> = ({ category, draggedItemId, onRightIconClick, show_editing_divider }) => (\n    <div className={show_editing_divider ? 'draggable-list-category' : ''}>\n        <Droppable droppableId={category.id}>\n            {provided => (\n                <div\n                    {...provided.droppableProps}\n                    ref={provided.innerRef}\n                    className='draggable-list-category__droppable-area'\n                >\n                    <DraggableCategoryItems\n                        items={category.items}\n                        draggedItemId={draggedItemId}\n                        onRightIconClick={onRightIconClick}\n                    />\n                    {provided.placeholder}\n                </div>\n            )}\n        </Droppable>\n    </div>\n);\n\nconst DraggableCategoryItems: React.FC<{\n    items: TDraggableListItem[];\n    draggedItemId: string | null;\n    onRightIconClick: (item: TDraggableListItem) => void;\n}> = ({ items, draggedItemId, onRightIconClick }) => {\n    return (\n        <>\n            {items.map(\n                (item, index) =>\n                    item.id && (\n                        <Draggable key={item.id} draggableId={item.id} index={index}>\n                            {provided => (\n                                <div\n                                    ref={provided.innerRef}\n                                    {...provided.draggableProps}\n                                    {...provided.dragHandleProps}\n                                    className='draggable-list-category__item'\n                                >\n                                    <DraggableListItem\n                                        title={item.title}\n                                        onRightIconClick={() => onRightIconClick(item)}\n                                        active={draggedItemId === item.id}\n                                        disabled={items.length === 1}\n                                    />\n                                </div>\n                            )}\n                        </Draggable>\n                    )\n            )}\n        </>\n    );\n};\n\nconst updateCategoriesWithDragResult = (\n    category_list: TDraggableListCategory[],\n    result: DropResult\n): TDraggableListCategory[] => {\n    const { source, destination } = result;\n    if (!destination) return category_list;\n\n    const sourceIndex = category_list.findIndex(category => category.id === source.droppableId);\n    const destIndex = category_list.findIndex(category => category.id === destination.droppableId);\n\n    if (sourceIndex === -1 || destIndex === -1) return category_list;\n\n    const sourceCategory = category_list[sourceIndex];\n    const destCategory = category_list[destIndex];\n\n    const sourceItems = Array.from(sourceCategory.items);\n    const [movedItem] = sourceItems.splice(source.index, 1);\n\n    if (sourceIndex === destIndex) {\n        sourceItems.splice(destination.index, 0, movedItem);\n    } else {\n        const destItems = Array.from(destCategory.items);\n        destItems.splice(destination.index, 0, movedItem);\n        category_list[destIndex] = { ...destCategory, items: destItems };\n    }\n\n    category_list[sourceIndex] = { ...sourceCategory, items: sourceItems };\n    return Array.from(category_list);\n};\n\nexport default DraggableList;\n","import React from 'react';\nimport { StandaloneCirclePlusFillIcon } from '@deriv/quill-icons';\nimport clsx from 'clsx';\n\ntype TTradeTypeListItemProps = {\n    title: string;\n    selected?: boolean;\n    leftIcon?: React.ReactNode;\n    rightIcon?: React.ReactNode;\n    onLeftIconClick?: () => void;\n    onRightIconClick?: () => void;\n    onTradeTypeClick?: (e: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>) => void;\n};\n\nconst TradeTypeListItem: React.FC<TTradeTypeListItemProps> = ({\n    title,\n    selected,\n    leftIcon,\n    rightIcon,\n    onLeftIconClick,\n    onRightIconClick,\n    onTradeTypeClick,\n}) => {\n    const default_icon = <StandaloneCirclePlusFillIcon fill='var(--core-color-solid-green-700)' iconSize='sm' />;\n\n    return (\n        <div\n            className={clsx('trade-type-list-item', { 'trade-type-list-item--selected': selected })}\n            onClick={onTradeTypeClick}\n            onKeyDown={onTradeTypeClick}\n        >\n            {leftIcon && (\n                <button\n                    className='trade-type-list-item__left-icon'\n                    data-testid='dt_trade_type_list_item_left_icon'\n                    onClick={onLeftIconClick}\n                >\n                    {leftIcon}\n                </button>\n            )}\n            <div className='trade-type-list-item__title'>{title}</div>\n            {onRightIconClick && (\n                <button\n                    className='trade-type-list-item__icon'\n                    data-testid='dt_trade_type_list_item_right_icon'\n                    onClick={onRightIconClick}\n                >\n                    {rightIcon || default_icon}\n                </button>\n            )}\n        </div>\n    );\n};\n\nexport default TradeTypeListItem;\n","import React from 'react';\nimport TradeTypeListItem from './trade-type-list-item';\nimport { Button, Text } from '@deriv-com/quill-ui';\nimport './trade-type-list.scss';\nimport { Localize } from '@deriv/translations';\nimport clsx from 'clsx';\n\ntype TTradeTypeItem = {\n    id: string;\n    title: string;\n    icon?: React.ReactNode;\n};\n\ntype TTradeTypeCategory = {\n    id: string;\n    title?: string;\n    button_title?: string;\n    items: TTradeTypeItem[];\n};\n\ntype TTradeTypeListProps = {\n    categories?: TTradeTypeCategory[];\n    isSelected: (id: string) => boolean;\n    selectable?: boolean;\n    show_divider?: boolean;\n    onRightIconClick?: (item: TTradeTypeItem) => void;\n    onTradeTypeClick?: (e: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>) => void;\n};\n\nconst TradeTypeList: React.FC<TTradeTypeListProps> = ({\n    categories,\n    isSelected,\n    selectable,\n    show_divider,\n    onRightIconClick,\n    onTradeTypeClick,\n}) => {\n    const [category_list, setCategoryList] = React.useState(categories);\n\n    React.useEffect(() => {\n        setCategoryList(categories);\n    }, [categories]);\n\n    if (!categories?.[0]?.items.length) return null;\n    return (\n        <React.Fragment>\n            {category_list?.map(category => (\n                <div\n                    key={category.id}\n                    className={clsx('trade-type-list-category', {\n                        'trade-type-list-category__border': category.items && category.items.length > 0 && show_divider,\n                    })}\n                >\n                    <div className='trade-type-list-category__items'>\n                        {category.items?.map((item: TTradeTypeItem) => (\n                            <div key={item.id}>\n                                <TradeTypeListItem\n                                    title={item.title}\n                                    selected={!!selectable && isSelected(item.id)}\n                                    onRightIconClick={onRightIconClick && (() => onRightIconClick(item))}\n                                    onTradeTypeClick={onTradeTypeClick}\n                                />\n                            </div>\n                        ))}\n                    </div>\n                </div>\n            ))}\n        </React.Fragment>\n    );\n};\n\nexport default TradeTypeList;\n","import React from 'react';\nimport clsx from 'clsx';\n\nimport { Localize } from '@deriv/translations';\nimport { ActionSheet, Button, Text } from '@deriv-com/quill-ui';\n\nimport { DraggableList } from 'AppV2/Components/DraggableList';\nimport { TradeTypeList } from 'AppV2/Components/TradeTypeList';\n\nimport { TItem, TResultItem } from './trade-types';\n\ntype TTradeTypesContent = {\n    handleCustomizeTradeTypes: () => void;\n    handleRemovePinnedClick: (item: TItem) => void;\n    handleOnDrag: (categories: TResultItem[]) => void;\n    handleOnTradeTypeSelect: (e: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>) => void;\n    handleAddPinnedClick: (item: TItem) => void;\n    is_editing?: boolean;\n    is_dark_mode_on: boolean;\n    isTradeTypeSelected: (value: string) => boolean;\n    savePinnedToLocalStorage: () => void;\n    show_trade_type_list_divider?: boolean;\n    show_editing_divider?: boolean;\n    other_trade_types: TResultItem[];\n    pinned_trade_types: TResultItem[];\n};\n\nconst TradeTypesContent = ({\n    handleCustomizeTradeTypes,\n    handleRemovePinnedClick,\n    handleOnDrag,\n    handleOnTradeTypeSelect,\n    handleAddPinnedClick,\n    is_editing,\n    is_dark_mode_on,\n    isTradeTypeSelected,\n    savePinnedToLocalStorage,\n    show_trade_type_list_divider,\n    show_editing_divider,\n    other_trade_types,\n    pinned_trade_types,\n}: TTradeTypesContent) => (\n    <React.Fragment>\n        <div>\n            <div className='draggable-list-category-header'>\n                <Text size='sm' bold className='draggable-list-category-header-title'>\n                    {is_editing && <Localize i18n_default_text='Pinned' />}\n                </Text>\n                <Button\n                    color={is_dark_mode_on ? 'white' : 'black'}\n                    variant='secondary'\n                    className='draggable-list-category-header-button'\n                    onClick={is_editing ? savePinnedToLocalStorage : handleCustomizeTradeTypes}\n                >\n                    {is_editing ? <Localize i18n_default_text='Done' /> : <Localize i18n_default_text='Customise' />}\n                </Button>\n            </div>\n        </div>\n        <ActionSheet.Content className='trade-types-dialog__content'>\n            {is_editing ? (\n                <DraggableList\n                    categories={pinned_trade_types}\n                    onRightIconClick={handleRemovePinnedClick}\n                    onDrag={handleOnDrag}\n                    show_editing_divider={show_editing_divider}\n                />\n            ) : (\n                <TradeTypeList\n                    categories={pinned_trade_types}\n                    onTradeTypeClick={handleOnTradeTypeSelect}\n                    isSelected={isTradeTypeSelected}\n                    selectable\n                    show_divider={show_trade_type_list_divider}\n                />\n            )}\n            <TradeTypeList\n                categories={other_trade_types}\n                onRightIconClick={is_editing ? handleAddPinnedClick : undefined}\n                onTradeTypeClick={is_editing ? undefined : handleOnTradeTypeSelect}\n                isSelected={isTradeTypeSelected}\n                selectable={!is_editing}\n            />\n        </ActionSheet.Content>\n    </React.Fragment>\n);\n\nexport default TradeTypesContent;\n","import React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport clsx from 'clsx';\n\nimport { LabelPairedPresentationScreenSmRegularIcon } from '@deriv/quill-icons';\nimport { Localize, localize } from '@deriv/translations';\nimport { safeParse } from '@deriv/utils';\nimport { ActionSheet, Button, Chip, Text } from '@deriv-com/quill-ui';\n\nimport Carousel from 'AppV2/Components/Carousel';\nimport CarouselHeader from 'AppV2/Components/Carousel/carousel-header';\nimport TradeTypesSelectionGuide from 'AppV2/Components/OnboardingGuide/TradeTypesSelectionGuide';\nimport { checkContractTypePrefix } from 'AppV2/Utils/contract-type';\nimport { getTradeTypesList, sortCategoriesInTradeTypeOrder } from 'AppV2/Utils/trade-types-utils';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\nimport { sendOpenGuideToAnalytics } from '../../../Analytics';\nimport Guide from '../../Components/Guide';\n\nimport TradeTypesContent from './trade-types-content';\n\ntype TTradeTypesProps = {\n    onTradeTypeSelect: (\n        e: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>,\n        subform_name: string,\n        trade_type_count: number\n    ) => void;\n    trade_types: ReturnType<typeof getTradeTypesList>;\n    contract_type: string;\n    is_dark_mode_on: boolean;\n} & Pick<ReturnType<typeof useTraderStore>, 'contract_type'>;\n\nexport type TItem = {\n    id: string;\n    title: string;\n    icon?: React.ReactNode;\n};\n\nexport type TResultItem = {\n    id: string;\n    title?: string;\n    button_title?: string;\n    onButtonClick?: () => void;\n    items: TItem[];\n};\n\nconst TradeTypes = ({ contract_type, onTradeTypeSelect, trade_types, is_dark_mode_on }: TTradeTypesProps) => {\n    const [is_open, setIsOpen] = React.useState<boolean>(false);\n    const [is_editing, setIsEditing] = React.useState<boolean>(false);\n    const trade_types_ref = React.useRef<HTMLDivElement>(null);\n\n    const createArrayFromCategories = (data: TTradeTypesProps['trade_types']): TItem[] => {\n        const result: TItem[] = [];\n\n        data.forEach(category => {\n            result.push({\n                id: category.value,\n                title: category.text ?? '',\n            });\n        });\n\n        return result;\n    };\n\n    const saved_pinned_trade_types_string: string = localStorage.getItem('pinned_trade_types') ?? '[]';\n    const saved_pinned_trade_types: TResultItem[] = useMemo(\n        () => safeParse(saved_pinned_trade_types_string) ?? [],\n        [saved_pinned_trade_types_string]\n    );\n\n    const [other_trade_types, setOtherTradeTypes] = useState<TResultItem[]>([]);\n    const [pinned_trade_types, setPinnedTradeTypes] = useState<TResultItem[]>(saved_pinned_trade_types);\n\n    const trade_types_array = useMemo(() => {\n        return createArrayFromCategories(trade_types);\n    }, [trade_types]);\n\n    const getPinnedItems = useCallback(() => {\n        const pinned_items = filterItems(getItems(saved_pinned_trade_types), trade_types_array);\n\n        if (pinned_items.length === 0) {\n            pinned_items.push(...trade_types_array.slice(0, trade_types_array.length));\n        }\n        return pinned_items;\n    }, [saved_pinned_trade_types, trade_types_array]);\n\n    const setTradeTypes = useCallback(() => {\n        const pinned_items = getPinnedItems();\n\n        const default_pinned_trade_types = [\n            {\n                id: 'pinned',\n                title: localize('Pinned'),\n                items: pinned_items,\n            },\n        ];\n\n        const default_other_trade_types = [\n            {\n                id: 'other',\n                items: trade_types_array.filter(item => !pinned_items.some(pinned_item => pinned_item.id === item.id)),\n            },\n        ];\n\n        setPinnedTradeTypes(default_pinned_trade_types);\n        setOtherTradeTypes(default_other_trade_types);\n    }, [getPinnedItems, trade_types_array]);\n\n    useEffect(() => {\n        setTradeTypes();\n    }, [setTradeTypes]);\n\n    useEffect(() => {\n        scrollToSelectedTradeType();\n    }, []);\n\n    const handleCloseTradeTypes = () => {\n        setIsOpen(false);\n        setIsEditing(false);\n    };\n\n    const handleCustomizeTradeTypes = () => {\n        setIsEditing(true);\n    };\n\n    const handleAddPinnedClick = (item: TItem) => {\n        setOtherTradeTypes(prev_categories => modifyCategories(prev_categories, item));\n        setPinnedTradeTypes(prev_pinned => modifyPinnedCategories(prev_pinned, item, 'add'));\n    };\n\n    const handleRemovePinnedClick = (item: TItem) => {\n        setPinnedTradeTypes(prev_categories => modifyCategories(prev_categories, item));\n        setOtherTradeTypes(prev_others => modifyOtherCategories(prev_others, item));\n    };\n\n    const modifyPinnedCategories = (categories: TResultItem[], item: TItem, action: 'add' | 'remove') => {\n        return categories.map(category => {\n            if (category.id === 'pinned') {\n                return {\n                    ...category,\n                    items: action === 'add' ? [...category.items, item] : category.items.filter(i => i.id !== item.id),\n                };\n            }\n            return category;\n        });\n    };\n\n    const modifyCategories = (categories: TResultItem[], item: TItem) =>\n        categories.map(category => ({\n            ...category,\n            items: category.items.filter(i => i.id !== item.id),\n        }));\n\n    const modifyOtherCategories = (categories: TResultItem[], item: TItem) => {\n        return categories.map(category => {\n            if (category.id === 'other') {\n                return {\n                    ...category,\n                    items: sortCategoriesInTradeTypeOrder(trade_types, [...category.items, item]),\n                };\n            }\n            return category;\n        });\n    };\n\n    const scrollToSelectedTradeType = () => {\n        setTimeout(() => {\n            let position_x = 0;\n            if (trade_types_ref.current) {\n                const selected_chip = trade_types_ref.current.querySelector(\n                    'button[data-state=\"selected\"]'\n                ) as HTMLButtonElement;\n                if (selected_chip) {\n                    position_x =\n                        selected_chip.getBoundingClientRect().x -\n                            (window.innerWidth - selected_chip.getBoundingClientRect().width) / 2 || 0;\n                }\n                trade_types_ref.current.scrollBy({\n                    left: position_x,\n                    top: 0,\n                });\n            }\n        }, 0);\n    };\n\n    const savePinnedToLocalStorage = () => {\n        localStorage.setItem('pinned_trade_types', JSON.stringify(pinned_trade_types));\n        setIsEditing(false);\n    };\n\n    const handleOnDrag = (categories: TResultItem[]) => {\n        setPinnedTradeTypes(categories);\n    };\n\n    const handleOnTradeTypeSelect = (e: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>) => {\n        onTradeTypeSelect(e, 'trade_type_page', getPinnedItems().length);\n        scrollToSelectedTradeType();\n        setIsOpen(false);\n    };\n\n    const handleOpenActionSheet = () => {\n        setTradeTypes();\n        setIsOpen(true);\n    };\n\n    const isTradeTypeSelected = (value: string) =>\n        checkContractTypePrefix([contract_type, value]) || contract_type === value;\n\n    const getItems = (trade_types: TResultItem[]) => trade_types.flatMap(type => type.items);\n\n    const filterItems = (items: TItem[], tradeTypes: TItem[]): TItem[] => {\n        const trade_types_ids = tradeTypes.map(type => type.id);\n        return items.filter(item => trade_types_ids.includes(item.id));\n    };\n\n    const getTradeTypeChips = () => {\n        const pinned_items = getPinnedItems();\n        const is_contract_type_in_pinned = pinned_items.some(item => item.id === contract_type);\n\n        const other_item = !is_contract_type_in_pinned\n            ? getItems(other_trade_types).find(\n                  item => item && (item.id === contract_type || checkContractTypePrefix([item.id, contract_type]))\n              )\n            : null;\n\n        return [...pinned_items, other_item].filter(Boolean) as TItem[];\n    };\n\n    const trade_type_chips = getTradeTypeChips();\n    const should_show_view_all = trade_type_chips.length >= 2 || getItems(other_trade_types).length > 0;\n    const show_trade_type_list_divider = !!other_trade_types[0]?.items?.length;\n    const show_editing_divider = trade_types_array.length !== pinned_trade_types[0]?.items?.length;\n    const trade_type_content_props = {\n        handleCustomizeTradeTypes,\n        handleRemovePinnedClick,\n        handleOnDrag,\n        handleOnTradeTypeSelect,\n        handleAddPinnedClick,\n        is_editing,\n        is_dark_mode_on,\n        isTradeTypeSelected,\n        savePinnedToLocalStorage,\n        show_trade_type_list_divider,\n        show_editing_divider,\n        other_trade_types,\n        pinned_trade_types,\n    };\n\n    const action_sheet_content = [\n        {\n            id: 1,\n            component: <TradeTypesContent {...trade_type_content_props} />,\n        },\n        {\n            id: 2,\n            component: <Guide show_trigger_button={false} is_open_by_default show_description_in_a_modal={false} />,\n        },\n    ];\n\n    return (\n        <div className='trade__trade-types' ref={trade_types_ref}>\n            {trade_type_chips.map(({ title, id }: TItem) => (\n                <Chip.Selectable\n                    key={id}\n                    onChipSelect={e => onTradeTypeSelect(e, 'main_trade_page', getPinnedItems().length)}\n                    selected={isTradeTypeSelected(id)}\n                >\n                    <Text size='sm'>{title}</Text>\n                </Chip.Selectable>\n            ))}\n            {should_show_view_all && (\n                <Button\n                    key='trade-types-all'\n                    onClick={handleOpenActionSheet}\n                    variant='tertiary'\n                    className='trade__trade-types-header'\n                    color={is_dark_mode_on ? 'white' : 'black'}\n                >\n                    <Text size='sm' bold underlined color='var(--component-button-label-color-blackWhite-tertiary)'>\n                        <Localize i18n_default_text='View all' />\n                    </Text>\n                </Button>\n            )}\n            <ActionSheet.Root\n                className={clsx('trade-types-dialog', {\n                    'trade-types-dialog--is_editing': is_editing,\n                })}\n                isOpen={is_open}\n                expandable={false}\n                onClose={handleCloseTradeTypes}\n            >\n                <ActionSheet.Portal shouldCloseOnDrag>\n                    {is_editing ? (\n                        <React.Fragment>\n                            <ActionSheet.Header\n                                title={\n                                    <div className='trade-types-dialog__title'>\n                                        <Localize i18n_default_text='Trade types' />\n                                    </div>\n                                }\n                            />\n                            <TradeTypesContent {...trade_type_content_props} />\n                        </React.Fragment>\n                    ) : (\n                        <Carousel\n                            header={CarouselHeader}\n                            pages={action_sheet_content}\n                            title={<Localize i18n_default_text='Trade types' />}\n                            next_icon={LabelPairedPresentationScreenSmRegularIcon}\n                            onNextButtonClick={() => sendOpenGuideToAnalytics(contract_type, 'trade_type_page')}\n                        />\n                    )}\n                </ActionSheet.Portal>\n            </ActionSheet.Root>\n            {is_open && <TradeTypesSelectionGuide is_dark_mode_on={is_dark_mode_on} />}\n        </div>\n    );\n};\n\nexport default React.memo(TradeTypes);\n","import React, { useEffect } from 'react';\nimport clsx from 'clsx';\nimport { observer } from 'mobx-react-lite';\n\nimport { Loading } from '@deriv/components';\nimport { useLocalStorageData } from '@deriv/hooks';\nimport { useStore } from '@deriv/stores';\n\nimport AccumulatorStats from 'AppV2/Components/AccumulatorStats';\nimport BottomNav from 'AppV2/Components/BottomNav';\nimport ClosedMarketMessage from 'AppV2/Components/ClosedMarketMessage';\nimport CurrentSpot from 'AppV2/Components/CurrentSpot';\nimport MarketSelector from 'AppV2/Components/MarketSelector';\nimport OnboardingGuide from 'AppV2/Components/OnboardingGuide/GuideForPages';\nimport PurchaseButton from 'AppV2/Components/PurchaseButton';\nimport ServiceErrorSheet from 'AppV2/Components/ServiceErrorSheet';\nimport TradeErrorSnackbar from 'AppV2/Components/TradeErrorSnackbar';\nimport { TradeParameters, TradeParametersContainer } from 'AppV2/Components/TradeParameters';\nimport useContractsForCompany from 'AppV2/Hooks/useContractsForCompany';\nimport { getChartHeight, HEIGHT } from 'AppV2/Utils/layout-utils';\nimport { getDisplayedContractTypes } from 'AppV2/Utils/trade-types-utils';\nimport { isDigitTradeType } from 'Modules/Trading/Helpers/digits';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\nimport { sendSelectedTradeTypeToAnalytics } from '../../../Analytics';\nimport { TradeChart } from '../Chart';\n\nimport TradeTypes from './trade-types';\n\nconst Trade = observer(() => {\n    const [is_minimized_params_visible, setIsMinimizedParamsVisible] = React.useState(false);\n    const chart_ref = React.useRef<HTMLDivElement>(null);\n    const {\n        client: { is_logged_in, is_switching },\n        common: { current_language, network_status },\n        ui: { is_dark_mode_on },\n    } = useStore();\n    const {\n        active_symbols,\n        contract_type,\n        has_cancellation,\n        is_accumulator,\n        is_multiplier,\n        is_market_closed,\n        onChange,\n        onMount,\n        onUnmount,\n        symbol,\n        proposal_info,\n        trade_types: trade_types_store,\n        trade_type_tab,\n    } = useTraderStore();\n    const { trade_types, resetTradeTypes } = useContractsForCompany();\n    const [guide_dtrader_v2] = useLocalStorageData<Record<string, boolean>>('guide_dtrader_v2', {\n        trade_types_selection: false,\n        trade_page: false,\n        positions_page: false,\n    });\n\n    // For handling edge cases of snackbar:\n    const contract_types = getDisplayedContractTypes(trade_types_store, contract_type, trade_type_tab);\n    const is_all_types_with_errors = contract_types.every(item => proposal_info?.[item]?.has_error);\n    // Showing snackbar for all cases, except when it is Rise/Fall or Digits and only one subtype has error\n    const should_show_snackbar = contract_types.length === 1 || is_multiplier || is_all_types_with_errors;\n\n    const symbols = React.useMemo(\n        () =>\n            active_symbols.map(({ display_name, symbol: underlying }) => ({\n                text: display_name,\n                value: underlying,\n            })),\n        [active_symbols]\n    );\n\n    const onTradeTypeSelect = React.useCallback(\n        (\n            e: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>,\n            subform_name: string,\n            trade_type_count: number\n        ) => {\n            const value = trade_types.find(({ text }) => text === (e.target as HTMLButtonElement).textContent)?.value;\n            onChange({\n                target: {\n                    name: 'contract_type',\n                    value,\n                },\n            });\n            sendSelectedTradeTypeToAnalytics(value || '', subform_name, symbol, trade_type_count);\n        },\n        [trade_types, onChange, symbol]\n    );\n\n    const onScroll = React.useCallback(() => {\n        const current_chart_ref = chart_ref?.current;\n        if (current_chart_ref) {\n            const chart_bottom_Y = current_chart_ref.getBoundingClientRect().bottom;\n            const container_bottom_Y = window.innerHeight - HEIGHT.BOTTOM_NAV;\n            setIsMinimizedParamsVisible(chart_bottom_Y <= container_bottom_Y);\n        }\n    }, []);\n\n    React.useEffect(() => {\n        onMount();\n        return onUnmount;\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [current_language, network_status.class]);\n\n    useEffect(() => {\n        if (is_switching) {\n            resetTradeTypes();\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [is_switching]);\n\n    return (\n        <BottomNav onScroll={onScroll}>\n            {symbols.length && trade_types.length && !is_switching ? (\n                <React.Fragment>\n                    <div className='trade'>\n                        <TradeTypes\n                            contract_type={contract_type}\n                            onTradeTypeSelect={onTradeTypeSelect}\n                            trade_types={trade_types}\n                            is_dark_mode_on={is_dark_mode_on}\n                        />\n                        <MarketSelector />\n                        {isDigitTradeType(contract_type) && <CurrentSpot />}\n                        <TradeParametersContainer>\n                            <TradeParameters />\n                        </TradeParametersContainer>\n                        <div className='trade__chart-tooltip'>\n                            <section\n                                className={clsx('trade__chart', { 'trade__chart--with-borderRadius': !is_accumulator })}\n                                style={{\n                                    height: getChartHeight({ is_accumulator, symbol, has_cancellation, contract_type }),\n                                }}\n                                ref={chart_ref}\n                            >\n                                <TradeChart />\n                            </section>\n                        </div>\n                        {is_accumulator && <AccumulatorStats />}\n                    </div>\n                    <div className={clsx('trade__parameter', { 'trade__parameter--with-button': !is_market_closed })}>\n                        <TradeParametersContainer is_minimized_visible={is_minimized_params_visible} is_minimized>\n                            <TradeParameters is_minimized />\n                        </TradeParametersContainer>\n                        {!is_market_closed && <PurchaseButton />}\n                    </div>\n                    {!guide_dtrader_v2?.trade_page && is_logged_in && (\n                        <OnboardingGuide type='trade_page' is_dark_mode_on={is_dark_mode_on} />\n                    )}\n                </React.Fragment>\n            ) : (\n                <Loading.DTraderV2 />\n            )}\n            <ServiceErrorSheet />\n            <ClosedMarketMessage />\n            <TradeErrorSnackbar\n                error_fields={['stop_loss', 'take_profit', 'date_start', 'stake', 'amount']}\n                should_show_snackbar={should_show_snackbar}\n            />\n        </BottomNav>\n    );\n});\n\nexport default Trade;\n","import Trade from './trade';\nimport './trade.scss';\n\nexport default Trade;\n","import React from 'react';\nimport { Text } from '@deriv-com/quill-ui';\nimport { StandaloneBriefcaseFillIcon, StandaloneSearchFillIcon } from '@deriv/quill-icons';\nimport { Localize } from '@deriv/translations';\nimport { TAB_NAME } from 'AppV2/Utils/positions-utils';\n\nexport type TEmptyPositionsProps = {\n    isClosedTab?: boolean;\n    noMatchesFound?: boolean;\n};\n\nconst EmptyPositions = ({ isClosedTab, noMatchesFound }: TEmptyPositionsProps) => {\n    const Icon = noMatchesFound ? StandaloneSearchFillIcon : StandaloneBriefcaseFillIcon;\n\n    return (\n        <div\n            className={`empty-positions__${isClosedTab ? TAB_NAME.CLOSED.toLowerCase() : TAB_NAME.OPEN.toLowerCase()}`}\n        >\n            <div className='icon' data-testid='dt_empty_state_icon'>\n                <Icon iconSize='2xl' />\n            </div>\n            <div className='message'>\n                <Text bold size='lg' color='quill-typography__color--subtle'>\n                    {noMatchesFound && <Localize i18n_default_text='No matches found' />}\n                    {!noMatchesFound &&\n                        (isClosedTab ? (\n                            <Localize i18n_default_text='No closed positions' />\n                        ) : (\n                            <Localize i18n_default_text='No open positions' />\n                        ))}\n                </Text>\n                <Text size='sm' centered color='quill-typography__color--subtle'>\n                    {noMatchesFound && (\n                        <Localize i18n_default_text='Try changing or removing filters to view available positions.' />\n                    )}\n                    {!noMatchesFound &&\n                        (isClosedTab ? (\n                            <Localize i18n_default_text='Your closed positions will be shown here.' />\n                        ) : (\n                            <Localize i18n_default_text='Your open positions will appear here.' />\n                        ))}\n                </Text>\n            </div>\n        </div>\n    );\n};\n\nexport default EmptyPositions;\n","import React from 'react';\nimport { TPortfolioPosition } from '@deriv/stores/types';\nimport { Tag } from '@deriv-com/quill-ui';\nimport { LabelPairedStopwatchCaptionRegularIcon } from '@deriv/quill-icons';\nimport { getCardLabels } from '@deriv/shared';\nimport { RemainingTime } from '@deriv/components';\nimport { TRootStore } from 'Types';\n\nexport type TContractCardStatusTimerProps = Pick<TPortfolioPosition['contract_info'], 'date_expiry' | 'tick_count'> & {\n    currentTick?: number | null;\n    isSold?: boolean;\n    serverTime?: TRootStore['common']['server_time'];\n};\n\nexport const ContractCardStatusTimer = ({\n    currentTick,\n    date_expiry,\n    isSold,\n    serverTime,\n    tick_count,\n}: TContractCardStatusTimerProps) => {\n    const getDisplayedDuration = () => {\n        if (tick_count) {\n            return `${currentTick ?? 0}/${tick_count} ${getCardLabels().TICKS.toLowerCase()}`;\n        }\n        if (date_expiry && serverTime) {\n            return (\n                <RemainingTime\n                    as='span'\n                    end_time={date_expiry}\n                    getCardLabels={getCardLabels}\n                    start_time={serverTime as moment.Moment}\n                    key='remaining-time'\n                />\n            );\n        }\n        return null;\n    };\n    const displayedDuration = getDisplayedDuration();\n\n    if (!date_expiry || (serverTime as moment.Moment)?.unix() > +date_expiry || isSold) {\n        return <Tag className='status' label={getCardLabels().CLOSED} variant='custom' color='custom' size='sm' />;\n    }\n    return displayedDuration ? (\n        <Tag\n            className='timer'\n            icon={\n                <LabelPairedStopwatchCaptionRegularIcon\n                    key='open-contract-card'\n                    fill='var(--component-tag-label-color-default)'\n                />\n            }\n            label={displayedDuration}\n            variant='custom'\n            size='sm'\n        />\n    ) : null;\n};\n","import React from 'react';\nimport { Tag } from '@deriv-com/quill-ui';\nimport { Localize } from '@deriv/translations';\n\ntype TForwardStartingTagProps = {\n    formatted_date?: string;\n    formatted_time?: string;\n};\n\nconst ForwardStartingTag = ({ formatted_date, formatted_time }: TForwardStartingTagProps) => {\n    if (!formatted_date || !formatted_time) return null;\n\n    return (\n        <Tag\n            color='info'\n            className='forward-starting'\n            data-testid='dt_forward-starting'\n            label={\n                <Localize\n                    i18n_default_text='Starts on {{formatted_date}}, {{formatted_time}}'\n                    values={{\n                        formatted_date,\n                        formatted_time,\n                    }}\n                />\n            }\n            showIcon={false}\n            size='sm'\n            variant='fill'\n        />\n    );\n};\n\nexport default ForwardStartingTag;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { CaptionText, Tag, Text } from '@deriv-com/quill-ui';\nimport { useSwipeable } from 'react-swipeable';\nimport { IconTradeTypes, Money, RemainingTime } from '@deriv/components';\nimport {\n    TContractInfo,\n    formatDate,\n    formatTime,\n    getCardLabels,\n    getCurrentTick,\n    getMarketName,\n    getStartTime,\n    getTradeTypeName,\n    hasForwardContractStarted,\n    isCryptoContract,\n    isEnded,\n    isForwardStarting,\n    isHighLow,\n    isMultiplierContract,\n    isValidToCancel,\n    isValidToSell,\n    toMoment,\n} from '@deriv/shared';\nimport { ContractCardStatusTimer, TContractCardStatusTimerProps } from './contract-card-status-timer';\nimport { NavLink } from 'react-router-dom';\nimport { TClosedPosition } from 'AppV2/Containers/Positions/positions-content';\nimport { TRootStore } from 'Types';\nimport { getProfit } from 'AppV2/Utils/positions-utils';\nimport ForwardStartingTag from './forward-starting-tag';\n\ntype TContractCardProps = TContractCardStatusTimerProps & {\n    className?: string;\n    contractInfo: TContractInfo | TClosedPosition['contract_info'];\n    currency?: string;\n    hasActionButtons?: boolean;\n    isSellRequested?: boolean;\n    onClick?: (e?: React.MouseEvent<HTMLAnchorElement | HTMLDivElement>) => void;\n    onCancel?: (e?: React.MouseEvent<HTMLButtonElement>) => void;\n    onClose?: (e?: React.MouseEvent<HTMLButtonElement>) => void;\n    redirectTo?: string | React.ComponentProps<typeof NavLink>['to'];\n    serverTime?: TRootStore['common']['server_time'];\n};\n\nconst DIRECTION = {\n    LEFT: 'left',\n    RIGHT: 'right',\n};\n\nconst swipeConfig = {\n    trackMouse: true,\n    preventScrollOnSwipe: true,\n};\n\nconst ContractCard = ({\n    className = 'contract-card',\n    contractInfo,\n    currency,\n    hasActionButtons,\n    isSellRequested,\n    onCancel,\n    onClick,\n    onClose,\n    redirectTo,\n    serverTime,\n}: TContractCardProps) => {\n    const [isDeleted, setIsDeleted] = React.useState(false);\n    const [isClosing, setIsClosing] = React.useState(false);\n    const [isCanceling, setIsCanceling] = React.useState(false);\n    const [shouldShowButtons, setShouldShowButtons] = React.useState(false);\n    const { buy_price, contract_type, display_name, purchase_time, sell_time, shortcode, limit_order } =\n        contractInfo as TContractInfo;\n    const { take_profit, stop_loss } = limit_order ?? { take_profit: {}, stop_loss: {} };\n    const is_high_low = isHighLow({ shortcode });\n    const contract_main_title = getTradeTypeName(contract_type ?? '', {\n        isHighLow: is_high_low,\n        showMainTitle: true,\n    });\n    const cancellation_date_expiry = 'cancellation' in contractInfo ? contractInfo.cancellation?.date_expiry : null;\n    const currentTick = 'tick_count' in contractInfo && contractInfo.tick_count ? getCurrentTick(contractInfo) : null;\n    const tradeTypeName = `${contract_main_title} ${getTradeTypeName(contract_type ?? '', {\n        isHighLow: is_high_low,\n    })}`.trim();\n    const symbolName =\n        'underlying_symbol' in contractInfo ? getMarketName(contractInfo.underlying_symbol ?? '') : display_name;\n    const is_crypto = isCryptoContract((contractInfo as TContractInfo).underlying);\n    const isMultiplier = isMultiplierContract(contract_type);\n    const isSold = !!sell_time || isEnded(contractInfo as TContractInfo);\n    const totalProfit = getProfit(contractInfo);\n    const validToCancel = isValidToCancel(contractInfo as TContractInfo);\n    const validToSell = isValidToSell(contractInfo as TContractInfo) && !isSellRequested;\n    const isCancelButtonPressed = isSellRequested && isCanceling;\n    const isCloseButtonPressed = isSellRequested && isClosing;\n    const has_no_auto_expiry = isMultiplier && !is_crypto;\n    const is_forward_starting = isForwardStarting(shortcode ?? '', purchase_time);\n    const start_time = getStartTime(shortcode ?? '');\n    const has_forward_contract_started = hasForwardContractStarted(shortcode ?? '');\n    const show_tag_forward_starting = is_forward_starting && !!start_time && !has_forward_contract_started && !isSold;\n    const show_status_timer_tag = (!has_no_auto_expiry || (has_no_auto_expiry && isSold)) && !show_tag_forward_starting;\n    const Component = redirectTo ? NavLink : 'div';\n\n    const handleSwipe = (direction: string) => {\n        const isLeft = direction === DIRECTION.LEFT;\n        setShouldShowButtons(isLeft);\n    };\n\n    const swipeHandlers = useSwipeable({\n        onSwipedLeft: () => handleSwipe(DIRECTION.LEFT),\n        onSwipedRight: () => handleSwipe(DIRECTION.RIGHT),\n        ...swipeConfig,\n    });\n\n    const handleClose = (e: React.MouseEvent<HTMLButtonElement>, shouldCancel?: boolean) => {\n        e.preventDefault();\n        e.stopPropagation();\n        if (shouldCancel) {\n            onCancel?.(e);\n            setIsCanceling(true);\n        } else {\n            onClose?.(e);\n            setIsClosing(true);\n        }\n    };\n\n    const getRiskManagementLabels = () => {\n        const labels: string[] = [];\n        if (take_profit?.order_amount) labels.push('TP');\n        if (stop_loss?.order_amount) labels.push('SL');\n        if (validToCancel) labels.push('DC');\n        return labels;\n    };\n    const risk_management_labels = getRiskManagementLabels();\n    const show_risk_management_labels = !!risk_management_labels.length && !isSold;\n\n    React.useEffect(() => {\n        if (isSold && hasActionButtons) {\n            setIsDeleted(true);\n        }\n    }, [isSold, hasActionButtons]);\n\n    if (!contract_type) return null;\n    return (\n        <div className={clsx(`${className}-wrapper`, { deleted: isDeleted })}>\n            <Component\n                {...(hasActionButtons ? swipeHandlers : {})}\n                className={clsx(className, {\n                    'show-buttons': shouldShowButtons,\n                    'has-cancel-button': validToCancel,\n                    lost: Number(totalProfit) < 0,\n                    won: Number(totalProfit) >= 0,\n                })}\n                onClick={onClick}\n                onDragStart={e => e.preventDefault()}\n                to={redirectTo}\n            >\n                <div className={`${className}__body`}>\n                    <div className={`${className}__details`}>\n                        <IconTradeTypes type={is_high_low ? `${contract_type}_barrier` : contract_type} size={16} />\n                        <div className='tag__wrapper'>\n                            {show_risk_management_labels &&\n                                risk_management_labels.map(label => (\n                                    <Tag\n                                        className='risk-management'\n                                        label={label}\n                                        key={label}\n                                        variant='custom'\n                                        size='sm'\n                                    />\n                                ))}\n                            {show_status_timer_tag && (\n                                <ContractCardStatusTimer\n                                    currentTick={currentTick}\n                                    isSold={isSold}\n                                    serverTime={serverTime}\n                                    {...contractInfo}\n                                />\n                            )}\n                            {show_tag_forward_starting && (\n                                <ForwardStartingTag\n                                    formatted_date={formatDate(toMoment(parseInt(start_time || '')), 'DD MMM YYYY')}\n                                    formatted_time={formatTime(parseInt(start_time || ''), 'HH:mm [GMT]')}\n                                />\n                            )}\n                        </div>\n                    </div>\n                    <div className={`${className}__details`}>\n                        <Text className='trade-type' size='sm'>\n                            {tradeTypeName}\n                        </Text>\n                        <Text size='sm' color='quill-typography__color--subtle'>\n                            <Money amount={buy_price} currency={currency} show_currency />\n                        </Text>\n                    </div>\n                    <div className={`${className}__details`}>\n                        <Text size='sm' className='symbol' color='quill-typography__color--subtle'>\n                            {symbolName}\n                        </Text>\n                        <Text className='profit' size='sm'>\n                            <Money amount={totalProfit} currency={currency} has_sign show_currency />\n                        </Text>\n                    </div>\n                </div>\n                {hasActionButtons && (\n                    <div className='buttons'>\n                        {validToCancel && (\n                            <button\n                                className={clsx({ loading: isCancelButtonPressed })}\n                                disabled={Number((contractInfo as TContractInfo).profit) >= 0 || isSellRequested}\n                                onClick={e => handleClose(e, true)}\n                            >\n                                {isCancelButtonPressed ? (\n                                    <div className='circle-loader' data-testid='dt_button_loader' />\n                                ) : (\n                                    <>\n                                        <CaptionText\n                                            bold\n                                            as='div'\n                                            className='label'\n                                            color='quill-typography__color--prominent'\n                                        >\n                                            {getCardLabels().CANCEL}\n                                        </CaptionText>\n                                        {cancellation_date_expiry && (\n                                            <CaptionText\n                                                bold\n                                                as='div'\n                                                className='label'\n                                                color='quill-typography__color--prominent'\n                                            >\n                                                <RemainingTime\n                                                    end_time={cancellation_date_expiry}\n                                                    format='mm:ss'\n                                                    getCardLabels={getCardLabels}\n                                                    start_time={serverTime as moment.Moment}\n                                                />\n                                            </CaptionText>\n                                        )}\n                                    </>\n                                )}\n                            </button>\n                        )}\n                        <button\n                            className={clsx({ loading: isCloseButtonPressed })}\n                            disabled={!validToSell}\n                            onClick={handleClose}\n                        >\n                            {isCloseButtonPressed ? (\n                                <div className='circle-loader' data-testid='dt_button_loader' />\n                            ) : (\n                                <CaptionText\n                                    bold\n                                    as='div'\n                                    className='label'\n                                    color='var(--component-textIcon-static-prominentDark)'\n                                >\n                                    {getCardLabels().CLOSE}\n                                </CaptionText>\n                            )}\n                        </button>\n                    </div>\n                )}\n            </Component>\n        </div>\n    );\n};\n\nexport default ContractCard;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { getContractPath } from '@deriv/shared';\nimport { TPortfolioPosition } from '@deriv/stores/types';\nimport { TClosedPosition } from 'AppV2/Containers/Positions/positions-content';\nimport { TRootStore } from 'Types';\nimport ContractCard from './contract-card';\n\nexport type TContractCardListProps = {\n    currency?: string;\n    hasButtonsDemo?: boolean;\n    onClickCancel?: (contractId: number) => void;\n    onClickSell?: (contractId: number) => void;\n    positions?: (TPortfolioPosition | TClosedPosition)[];\n    setHasButtonsDemo?: React.Dispatch<React.SetStateAction<boolean>>;\n    serverTime?: TRootStore['common']['server_time'];\n};\n\nconst ContractCardList = ({\n    hasButtonsDemo,\n    onClickCancel,\n    onClickSell,\n    positions = [],\n    setHasButtonsDemo,\n    ...rest\n}: TContractCardListProps) => {\n    React.useEffect(() => {\n        let demoTimeout: ReturnType<typeof setTimeout>;\n        if (hasButtonsDemo && setHasButtonsDemo) {\n            demoTimeout = setTimeout(() => setHasButtonsDemo(false), 720); // 720 is the length of demo animation\n        }\n        return () => {\n            if (demoTimeout) clearTimeout(demoTimeout);\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    if (!positions.length) return null;\n    return (\n        <div\n            className={clsx('contract-card-list', {\n                'contract-card-list--has-buttons-demo': hasButtonsDemo && !positions[0].contract_info.sell_time,\n            })}\n        >\n            {positions.map(position => {\n                const { contract_id: id } = position.contract_info;\n                return (\n                    <ContractCard\n                        key={id}\n                        contractInfo={position.contract_info}\n                        hasActionButtons={!!onClickSell}\n                        isSellRequested={(position as TPortfolioPosition).is_sell_requested}\n                        onCancel={() => id && onClickCancel?.(id)}\n                        onClose={() => id && onClickSell?.(id)}\n                        redirectTo={\n                            id\n                                ? {\n                                      pathname: getContractPath(id),\n                                      state: {\n                                          from_table_row: true,\n                                      },\n                                  }\n                                : ''\n                        }\n                        {...rest}\n                    />\n                );\n            })}\n        </div>\n    );\n};\n\nexport default ContractCardList;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { Text } from '@deriv-com/quill-ui';\nimport { toMoment } from '@deriv/shared';\nimport { TClosedPosition } from 'AppV2/Containers/Positions/positions-content';\nimport ContractCardList from './contract-card-list';\nimport { StandaloneLoaderBoldIcon } from '@deriv/quill-icons';\n\ntype TContractCardsSections = {\n    isLoadingMore?: boolean;\n    hasBottomMargin?: boolean;\n    positions?: TClosedPosition[];\n    currency?: string;\n};\n\nconst ContractCardsSections = ({ isLoadingMore, hasBottomMargin, positions, currency }: TContractCardsSections) => {\n    const formatTime = (time: number) => toMoment(time).format('DD MMM YYYY');\n\n    const dates = positions?.map(element => {\n        const purchaseTime = element.contract_info.purchase_time_unix;\n        return purchaseTime && formatTime(purchaseTime);\n    });\n\n    const uniqueDates = [...new Set(dates)];\n\n    if (!positions?.length) return null;\n    return (\n        <React.Fragment>\n            <div\n                className={clsx(\n                    'contract-cards-sections',\n                    hasBottomMargin && 'contract-cards-sections--has-bottom-margin'\n                )}\n            >\n                {uniqueDates.map(date => (\n                    <div className='contract-cards-section' key={date}>\n                        <Text as='p' className='contract-cards-section__title' bold size='sm'>\n                            {date}\n                        </Text>\n                        <ContractCardList\n                            positions={positions.filter(position => {\n                                const purchaseTime = position.contract_info.purchase_time_unix;\n                                return purchaseTime && formatTime(purchaseTime) === date;\n                            })}\n                            currency={currency}\n                        />\n                    </div>\n                ))}\n            </div>\n            {isLoadingMore && (\n                <div className='load-more-spinner' data-testid='dt_load_more_spinner'>\n                    <StandaloneLoaderBoldIcon iconSize='md' />\n                </div>\n            )}\n        </React.Fragment>\n    );\n};\n\nexport default React.memo(ContractCardsSections);\n","import React from 'react';\nimport { ActionSheet, Checkbox, Chip, Text } from '@deriv-com/quill-ui';\nimport { Localize } from '@deriv/translations';\nimport { AVAILABLE_CONTRACTS } from 'AppV2/Utils/trade-types-utils';\n\ntype TContractTypeFilter = {\n    contractTypeFilter: string[] | [];\n    onApplyContractTypeFilter: (filterValues: string[]) => void;\n};\n\nconst ContractTypeFilter = ({ contractTypeFilter, onApplyContractTypeFilter }: TContractTypeFilter) => {\n    const [isDropdownOpen, setIsDropdownOpen] = React.useState(false);\n    const [changedOptions, setChangedOptions] = React.useState<string[]>(contractTypeFilter);\n\n    const onActionSheetClose = () => {\n        setIsDropdownOpen(false);\n        setChangedOptions(contractTypeFilter);\n    };\n\n    const onChange = (e: React.ChangeEvent<HTMLInputElement> | React.KeyboardEvent<HTMLSpanElement>) => {\n        const newSelectedOption = (e.target as EventTarget & HTMLInputElement).id;\n\n        if (changedOptions.includes(newSelectedOption)) {\n            setChangedOptions([...changedOptions.filter(item => item !== newSelectedOption)]);\n        } else {\n            setChangedOptions([...changedOptions, newSelectedOption]);\n        }\n    };\n\n    return (\n        <React.Fragment>\n            <Chip.Standard\n                className='filter__chip'\n                dropdown\n                isDropdownOpen={isDropdownOpen}\n                onClick={() => setIsDropdownOpen(!isDropdownOpen)}\n                selected={!!changedOptions.length}\n                size='md'\n            >\n                <Text size='sm'>\n                    <Localize i18n_default_text='Trade types' />\n                </Text>\n                {!!changedOptions.length && <Text>({changedOptions.length})</Text>}\n            </Chip.Standard>\n            <ActionSheet.Root isOpen={isDropdownOpen} onClose={onActionSheetClose} position='left' expandable={false}>\n                <ActionSheet.Portal shouldCloseOnDrag>\n                    <ActionSheet.Header title={<Localize i18n_default_text='Filter by trade types' />} />\n                    <ActionSheet.Content className='filter__item__wrapper'>\n                        {AVAILABLE_CONTRACTS.map(({ tradeType, id }) => (\n                            <Checkbox\n                                checked={changedOptions.includes(id)}\n                                checkboxPosition='right'\n                                className='filter__item'\n                                id={id}\n                                key={id}\n                                label={tradeType}\n                                onChange={onChange}\n                                size='md'\n                            />\n                        ))}\n                    </ActionSheet.Content>\n                    <ActionSheet.Footer\n                        alignment='horizontal'\n                        isSecondaryButtonDisabled={!changedOptions.length}\n                        primaryAction={{\n                            content: <Localize i18n_default_text='Apply' />,\n                            onAction: () => onApplyContractTypeFilter(changedOptions),\n                        }}\n                        secondaryAction={{\n                            content: <Localize i18n_default_text='Clear All' />,\n                            onAction: () => setChangedOptions([]),\n                        }}\n                        shouldCloseOnSecondaryButtonClick={false}\n                    />\n                </ActionSheet.Portal>\n            </ActionSheet.Root>\n        </React.Fragment>\n    );\n};\n\nexport default ContractTypeFilter;\n","import React from 'react';\nimport { Text } from '@deriv-com/quill-ui';\nimport { LabelPairedChevronRightSmBoldIcon } from '@deriv/quill-icons';\nimport { Localize } from '@deriv/translations';\n\ntype TCustomDateFilterButton = {\n    customTimeRangeFilter?: string;\n    setShowDatePicker: React.Dispatch<React.SetStateAction<boolean>>;\n};\n\nconst CustomDateFilterButton = ({ customTimeRangeFilter, setShowDatePicker }: TCustomDateFilterButton) => (\n    <button className='custom-time-filter__wrapper' onClick={() => setShowDatePicker(true)}>\n        <Text size='md' className='custom-time-filter__label'>\n            <Localize i18n_default_text='Custom' />\n        </Text>\n        {customTimeRangeFilter && (\n            <Text size='sm' color='quill-typography__color--subtle'>\n                {customTimeRangeFilter}\n            </Text>\n        )}\n        <LabelPairedChevronRightSmBoldIcon\n            className='custom-time-filter__icon'\n            fill='var(--component-textIcon-normal-default)'\n        />\n    </button>\n);\n\nexport default CustomDateFilterButton;\n","import React from 'react';\nimport { ActionSheet, DatePicker } from '@deriv-com/quill-ui';\nimport moment from 'moment';\nimport { toMoment } from '@deriv/shared';\nimport { Localize } from '@deriv/translations';\nimport { DEFAULT_DATE_FORMATTING_CONFIG } from 'AppV2/Utils/positions-utils';\n\ntype TDateRangePicker = {\n    applyHandler: () => void;\n    handleDateChange: (\n        values: { to?: moment.Moment; from?: moment.Moment; is_batch?: boolean },\n        otherParams?: {\n            date_range?: Record<string, string | number>;\n            shouldFilterContractTypes?: boolean;\n        }\n    ) => void;\n    onClose: () => void;\n    isOpen?: boolean;\n    setCustomTimeRangeFilter: (newCustomTimeFilter?: string | undefined) => void;\n};\nconst DateRangePicker = ({\n    applyHandler,\n    handleDateChange,\n    onClose,\n    isOpen,\n    setCustomTimeRangeFilter,\n}: TDateRangePicker) => {\n    const [chosenRangeString, setChosenRangeString] = React.useState<string>();\n    const [chosenRange, setChosenRange] = React.useState<(string | null | Date)[] | null | Date>([]);\n\n    const onApply = () => {\n        setCustomTimeRangeFilter(chosenRangeString);\n        if (Array.isArray(chosenRange) && chosenRange.length) {\n            handleDateChange(\n                {\n                    from: toMoment(chosenRange[0]),\n                    to: chosenRange[1] ? toMoment(chosenRange[1]) : moment(chosenRange[0]).endOf('day'),\n                },\n                { shouldFilterContractTypes: true }\n            );\n        }\n        applyHandler();\n    };\n\n    const onFormattedDate = (value: string) => {\n        const trimmedValue = value.trim();\n        const partialRange = trimmedValue.endsWith('-');\n        setChosenRangeString(partialRange ? trimmedValue.substring(0, trimmedValue.length - 1) : trimmedValue);\n    };\n\n    return (\n        <ActionSheet.Root isOpen={isOpen} onClose={onClose} position='left' expandable={false}>\n            <ActionSheet.Portal shouldCloseOnDrag>\n                <ActionSheet.Header title={<Localize i18n_default_text='Choose a date range' />} />\n                <ActionSheet.Content>\n                    <DatePicker\n                        allowPartialRange\n                        className='date-picker__action-sheet'\n                        locale='en-GB'\n                        selectRange\n                        onFormattedDate={onFormattedDate}\n                        onChange={setChosenRange}\n                        optionsConfig={DEFAULT_DATE_FORMATTING_CONFIG}\n                        tileDisabled={({ date }) => Date.parse(date.toDateString()) > Date.parse(toMoment().toString())}\n                        maxDate={new Date()}\n                    />\n                </ActionSheet.Content>\n                <ActionSheet.Footer\n                    alignment='vertical'\n                    isPrimaryButtonDisabled={!chosenRangeString}\n                    primaryAction={{\n                        content: <Localize i18n_default_text='Apply' />,\n                        onAction: onApply,\n                    }}\n                />\n            </ActionSheet.Portal>\n        </ActionSheet.Root>\n    );\n};\n\nexport default DateRangePicker;\n","import DatePicker from './date-picker';\nimport './date-picker.scss';\n\nexport default DatePicker;\n","import React from 'react';\nimport moment from 'moment';\nimport { toMoment } from '@deriv/shared';\nimport { ActionSheet, Chip, RadioGroup, Text } from '@deriv-com/quill-ui';\nimport { Localize } from '@deriv/translations';\nimport CustomDateFilterButton from './custom-time-filter-button';\nimport DateRangePicker from 'AppV2/Components/DatePicker';\n\ntype TTimeFilter = {\n    customTimeRangeFilter?: string;\n    handleDateChange: (\n        values: { to?: moment.Moment; from?: moment.Moment; is_batch?: boolean },\n        otherParams?: {\n            date_range?: Record<string, string | number>;\n            shouldFilterContractTypes?: boolean;\n        }\n    ) => void;\n    setTimeFilter: (newTimeFilter?: string | undefined) => void;\n    setCustomTimeRangeFilter: (newCustomTimeFilter?: string | undefined) => void;\n    setNoMatchesFound: React.Dispatch<React.SetStateAction<boolean>>;\n    timeFilter?: string;\n};\n\ntype TDateChangeArguments = Record<string, { from: moment.Moment; to: moment.Moment }>;\n\nconst timeFilterList = [\n    {\n        value: '0',\n        label: <Localize i18n_default_text='All time' />,\n    },\n    {\n        value: 'Today',\n        label: <Localize i18n_default_text='Today' />,\n    },\n    {\n        value: 'Yesterday',\n        label: <Localize i18n_default_text='Yesterday' />,\n    },\n    {\n        value: '7',\n        label: <Localize i18n_default_text='Last 7 days' />,\n    },\n    {\n        value: '30',\n        label: <Localize i18n_default_text='Last 30 days' />,\n    },\n    {\n        value: '60',\n        label: <Localize i18n_default_text='Last 60 days' />,\n    },\n    {\n        value: '90',\n        label: <Localize i18n_default_text='Last 90 days' />,\n    },\n];\n\nconst TimeFilter = ({\n    customTimeRangeFilter,\n    handleDateChange,\n    setTimeFilter,\n    setCustomTimeRangeFilter,\n    setNoMatchesFound,\n    timeFilter,\n}: TTimeFilter) => {\n    const [isDropdownOpen, setIsDropdownOpen] = React.useState(false);\n    const [showDatePicker, setShowDatePicker] = React.useState(false);\n\n    const defaultCheckedTime = '0';\n    const selectedRadioButtonValue = customTimeRangeFilter || timeFilter || defaultCheckedTime;\n    const isChipSelected = !!(customTimeRangeFilter || timeFilter);\n\n    const onRadioButtonChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const value = e.target.value;\n        if (value === defaultCheckedTime) {\n            onReset();\n            return;\n        }\n        setTimeFilter(value);\n        setIsDropdownOpen(false);\n\n        const dateChangeArguments: TDateChangeArguments = {\n            Today: {\n                from: toMoment().startOf('day'),\n                to: toMoment().endOf('day'),\n            },\n            Yesterday: {\n                from: toMoment().subtract(1, 'days').startOf('day'),\n                to: toMoment().subtract(1, 'days').endOf('day'),\n            },\n            default: {\n                from: toMoment().startOf('day').subtract(Number(value), 'day').add(1, 's'),\n                to: toMoment().endOf('day'),\n            },\n        };\n\n        handleDateChange(\n            { ...(dateChangeArguments[value] ?? dateChangeArguments.default), is_batch: true },\n            {\n                shouldFilterContractTypes: true,\n            }\n        );\n    };\n\n    const onReset = () => {\n        setTimeFilter('');\n        setCustomTimeRangeFilter('');\n        setIsDropdownOpen(false);\n        handleDateChange(\n            {\n                to: toMoment().endOf('day'),\n                is_batch: true,\n            },\n            { shouldFilterContractTypes: true }\n        );\n        setNoMatchesFound(false);\n    };\n\n    const getChipLabel = () =>\n        customTimeRangeFilter || timeFilterList.find(item => item.value === (timeFilter || defaultCheckedTime))?.label;\n\n    return (\n        <React.Fragment>\n            <Chip.Standard\n                className='filter__chip'\n                dropdown\n                isDropdownOpen={isDropdownOpen}\n                onClick={() => setIsDropdownOpen(!isDropdownOpen)}\n                selected={isChipSelected}\n                size='md'\n            >\n                <Text size='sm'>{getChipLabel()}</Text>\n            </Chip.Standard>\n            <ActionSheet.Root\n                isOpen={isDropdownOpen}\n                onClose={() => setIsDropdownOpen(false)}\n                position='left'\n                expandable={false}\n            >\n                <ActionSheet.Portal shouldCloseOnDrag>\n                    <ActionSheet.Header title={<Localize i18n_default_text='Filter by time' />} />\n                    <ActionSheet.Content className='filter__item__wrapper'>\n                        <RadioGroup\n                            className='filter__item--radio'\n                            onToggle={onRadioButtonChange}\n                            selected={selectedRadioButtonValue}\n                            size='sm'\n                        >\n                            {timeFilterList.map(({ value, label }) => (\n                                <RadioGroup.Item value={value} label={label} key={value} radioButtonPosition='right' />\n                            ))}\n                        </RadioGroup>\n                        <CustomDateFilterButton\n                            customTimeRangeFilter={customTimeRangeFilter}\n                            setShowDatePicker={setShowDatePicker}\n                        />\n                    </ActionSheet.Content>\n                    <ActionSheet.Footer\n                        alignment='vertical'\n                        secondaryAction={{\n                            content: <Localize i18n_default_text='Reset' />,\n                            onAction: onReset,\n                        }}\n                        shouldCloseOnSecondaryButtonClick={false}\n                    />\n                </ActionSheet.Portal>\n            </ActionSheet.Root>\n            {showDatePicker && (\n                <DateRangePicker\n                    applyHandler={() => {\n                        setShowDatePicker(false);\n                        setIsDropdownOpen(false);\n                    }}\n                    handleDateChange={handleDateChange}\n                    isOpen={showDatePicker}\n                    onClose={() => setShowDatePicker(false)}\n                    setCustomTimeRangeFilter={setCustomTimeRangeFilter}\n                />\n            )}\n        </React.Fragment>\n    );\n};\n\nexport default TimeFilter;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { Text } from '@deriv-com/quill-ui';\nimport { getCardLabels } from '@deriv/shared';\nimport { Money } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\n\ntype TTotalProfitLossProps = {\n    currency?: string;\n    hasBottomAlignment?: boolean;\n    is_bold?: boolean;\n    positionsCount?: number | string;\n    totalProfitLoss: number | string;\n};\n\nconst TotalProfitLoss = ({\n    currency,\n    hasBottomAlignment,\n    is_bold = true,\n    positionsCount = '',\n    totalProfitLoss,\n}: TTotalProfitLossProps) => (\n    <div className={clsx('total-profit-loss', hasBottomAlignment && 'bottom')} data-testid='dt_total_profit_loss'>\n        <Text bold={is_bold} size='sm' className='total-profit-loss__label'>\n            {hasBottomAlignment ? (\n                <Localize i18n_default_text='Last {{positionsCount}} contracts:' values={{ positionsCount }} />\n            ) : (\n                getCardLabels().TOTAL_PROFIT_LOSS\n            )}\n        </Text>\n        <Text\n            className={clsx('total-profit-loss__amount', {\n                positive: +totalProfitLoss > 0,\n                negative: +totalProfitLoss < 0,\n            })}\n            bold={is_bold}\n            size='sm'\n        >\n            <Money amount={totalProfitLoss} currency={currency} show_currency has_sign />\n        </Text>\n    </div>\n);\n\nexport default TotalProfitLoss;\n","import TotalProfitLoss from './total-profit-loss';\nimport './total-profit-loss.scss';\n\nexport default TotalProfitLoss;\n","import { useModulesStore } from 'Stores/useModulesStores';\n\ntype TUseTradeTypeFilter = { isClosedTab?: boolean };\n\nconst useTradeTypeFilter = ({ isClosedTab }: TUseTradeTypeFilter) => {\n    const { positions } = useModulesStore();\n    const { setClosedContractTypeFilter, setOpenContractTypeFilter, openContractTypeFilter, closedContractTypeFilter } =\n        positions;\n\n    const contractTypeFilter = isClosedTab ? closedContractTypeFilter : openContractTypeFilter;\n    const setContractTypeFilter = isClosedTab ? setClosedContractTypeFilter : setOpenContractTypeFilter;\n\n    return { contractTypeFilter, setContractTypeFilter };\n};\n\nexport default useTradeTypeFilter;\n","import { useModulesStore } from 'Stores/useModulesStores';\n\nconst useTimeFilter = () => {\n    const { positions } = useModulesStore();\n    const { timeFilter, setTimeFilter, customTimeRangeFilter, setCustomTimeRangeFilter } = positions;\n\n    return { timeFilter, setTimeFilter, customTimeRangeFilter, setCustomTimeRangeFilter };\n};\n\nexport default useTimeFilter;\n","import React from 'react';\nimport { TContractInfo } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { Loading } from '@deriv/components';\nimport { EmptyPositions, TEmptyPositionsProps } from 'AppV2/Components/EmptyPositions';\nimport { TPortfolioPosition } from '@deriv/stores/types';\nimport { ContractCardList, ContractCardsSections } from 'AppV2/Components/ContractCard';\nimport { ContractTypeFilter, TimeFilter } from 'AppV2/Components/Filter';\nimport TotalProfitLoss from 'AppV2/Components/TotalProfitLoss';\nimport { filterPositions, getTotalPositionsProfit, TAB_NAME } from '../../Utils/positions-utils';\nimport { TReportsStore, useReportsStore } from '../../../../../reports/src/Stores/useReportsStores';\nimport useTradeTypeFilter from 'AppV2/Hooks/useTradeTypeFilter';\nimport useTimeFilter from 'AppV2/Hooks/useTimeFilter';\n\ntype TPositionsContentProps = Omit<TEmptyPositionsProps, 'noMatchesFound'> & {\n    hasButtonsDemo?: boolean;\n    setHasButtonsDemo?: React.Dispatch<React.SetStateAction<boolean>>;\n};\n\nexport type TClosedPosition = {\n    contract_info: TReportsStore['profit_table']['data'][number];\n};\n\nconst PositionsContent = observer(({ hasButtonsDemo, isClosedTab, setHasButtonsDemo }: TPositionsContentProps) => {\n    const { contractTypeFilter, setContractTypeFilter } = useTradeTypeFilter({ isClosedTab });\n    const { timeFilter, setTimeFilter, customTimeRangeFilter, setCustomTimeRangeFilter } = useTimeFilter();\n    const [filteredPositions, setFilteredPositions] = React.useState<(TPortfolioPosition | TClosedPosition)[]>([]);\n    const [noMatchesFound, setNoMatchesFound] = React.useState(false);\n\n    const { common, client, portfolio } = useStore();\n    const { server_time = undefined } = isClosedTab ? {} : common; // Server time is required only to update cards timers in Open positions\n    const { currency } = client;\n    const {\n        active_positions,\n        is_active_empty,\n        is_loading,\n        onClickCancel,\n        onClickSell,\n        onMount: onOpenTabMount,\n    } = portfolio;\n    const {\n        clearTable,\n        data,\n        fetchNextBatch: fetchMoreClosedPositions,\n        handleScroll,\n        handleDateChange,\n        is_empty,\n        is_loading: isFetchingClosedPositions,\n        onMount: onClosedTabMount,\n        onUnmount: onClosedTabUnmount,\n    } = useReportsStore().profit_table;\n    const closedPositions = React.useMemo(() => data.map(d => ({ contract_info: d })), [data]);\n    const positions = React.useMemo(\n        () => (isClosedTab ? closedPositions : active_positions),\n        [active_positions, isClosedTab, closedPositions]\n    );\n    const hasNoActiveFilters = isClosedTab\n        ? !timeFilter && !customTimeRangeFilter && !contractTypeFilter.length\n        : !contractTypeFilter.length;\n    const hasNoPositions = hasNoActiveFilters && (isClosedTab ? is_empty : is_active_empty);\n    const shouldShowEmptyMessage = hasNoPositions || noMatchesFound;\n    const shouldShowContractCards =\n        !!filteredPositions.length && (isClosedTab || (filteredPositions[0]?.contract_info as TContractInfo)?.status);\n    const shouldShowLoading = isClosedTab ? isFetchingClosedPositions && !filteredPositions.length : is_loading;\n    const shouldShowTakeProfit = !isClosedTab || !!(timeFilter || customTimeRangeFilter);\n\n    const onScroll = (e: React.UIEvent<HTMLDivElement>) => {\n        if (isClosedTab) handleScroll(e, true);\n    };\n\n    const contractCards = isClosedTab ? (\n        <ContractCardsSections\n            currency={currency}\n            positions={filteredPositions as TClosedPosition[]}\n            isLoadingMore={isFetchingClosedPositions}\n            hasBottomMargin={shouldShowTakeProfit}\n        />\n    ) : (\n        <ContractCardList\n            currency={currency}\n            hasButtonsDemo={hasButtonsDemo}\n            onClickCancel={isClosedTab ? undefined : onClickCancel}\n            onClickSell={isClosedTab ? undefined : onClickSell}\n            positions={filteredPositions}\n            setHasButtonsDemo={setHasButtonsDemo}\n            serverTime={server_time}\n        />\n    );\n\n    const onApplyContractTypeFilter = (filters: string[] | []) => {\n        setContractTypeFilter(filters);\n        if (isClosedTab) {\n            clearTable();\n            fetchMoreClosedPositions(true);\n        }\n    };\n\n    React.useEffect(() => {\n        const result = filterPositions(positions, contractTypeFilter);\n        if (contractTypeFilter.length) {\n            setFilteredPositions(result);\n            if (!isClosedTab) setNoMatchesFound(!result.length);\n        } else {\n            setNoMatchesFound(false);\n            setFilteredPositions(positions);\n        }\n        if (isClosedTab)\n            setNoMatchesFound(!result.length && !!(timeFilter || customTimeRangeFilter || contractTypeFilter.length));\n    }, [isClosedTab, positions, contractTypeFilter, timeFilter, customTimeRangeFilter]);\n\n    React.useEffect(() => {\n        isClosedTab ? onClosedTabMount(true) : onOpenTabMount();\n\n        return () => {\n            if (isClosedTab) {\n                clearTable();\n                onClosedTabUnmount();\n            }\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    if (shouldShowLoading || (!shouldShowContractCards && !shouldShowEmptyMessage))\n        return <Loading.DTraderV2 is_positions is_closed_tab={isClosedTab} />;\n    return (\n        <div\n            className={`positions-page__${isClosedTab ? TAB_NAME.CLOSED.toLowerCase() : TAB_NAME.OPEN.toLowerCase()}`}\n            onScroll={isClosedTab ? onScroll : undefined}\n        >\n            {!hasNoPositions && (\n                <div className='positions-page__filter__wrapper'>\n                    {isClosedTab ? (\n                        <TimeFilter\n                            timeFilter={timeFilter}\n                            setTimeFilter={setTimeFilter}\n                            handleDateChange={handleDateChange}\n                            customTimeRangeFilter={customTimeRangeFilter}\n                            setCustomTimeRangeFilter={setCustomTimeRangeFilter}\n                            setNoMatchesFound={setNoMatchesFound}\n                        />\n                    ) : (\n                        <ContractTypeFilter\n                            contractTypeFilter={contractTypeFilter}\n                            onApplyContractTypeFilter={onApplyContractTypeFilter}\n                        />\n                    )}\n                </div>\n            )}\n            {shouldShowEmptyMessage ? (\n                <EmptyPositions isClosedTab={isClosedTab} noMatchesFound={noMatchesFound} />\n            ) : (\n                shouldShowContractCards && (\n                    <React.Fragment>\n                        {shouldShowTakeProfit && (\n                            <TotalProfitLoss\n                                positionsCount={filteredPositions.length}\n                                currency={currency}\n                                hasBottomAlignment={isClosedTab}\n                                totalProfitLoss={getTotalPositionsProfit(filteredPositions)}\n                            />\n                        )}\n                        {contractCards}\n                    </React.Fragment>\n                )\n            )}\n        </div>\n    );\n});\n\nexport default PositionsContent;\n","import React from 'react';\nimport { Localize } from '@deriv/translations';\nimport { getPositionsV2TabIndexFromURL } from '@deriv/shared';\nimport { useLocalStorageData } from '@deriv/hooks';\nimport { Tab } from '@deriv-com/quill-ui';\nimport { observer } from 'mobx-react-lite';\nimport { useStore } from '@deriv/stores';\nimport { useModulesStore } from 'Stores/useModulesStores';\nimport { setPositionURLParams, TAB_NAME } from 'AppV2/Utils/positions-utils';\nimport BottomNav from 'AppV2/Components/BottomNav';\nimport PositionsContent from './positions-content';\nimport { useHistory } from 'react-router-dom';\nimport OnboardingGuide from 'AppV2/Components/OnboardingGuide/GuideForPages';\n\nconst Positions = observer(() => {\n    const [hasButtonsDemo, setHasButtonsDemo] = React.useState(false);\n    const [activeTab, setActiveTab] = React.useState(getPositionsV2TabIndexFromURL());\n    const [guide_dtrader_v2] = useLocalStorageData<Record<string, boolean>>('guide_dtrader_v2', {\n        trade_types_selection: false,\n        trade_page: false,\n        positions_page: false,\n    });\n    const history = useHistory();\n\n    const {\n        client: { is_logged_in },\n        ui: { is_dark_mode_on },\n    } = useStore();\n    const {\n        positions: { onUnmount },\n    } = useModulesStore();\n\n    const tabs = [\n        {\n            id: TAB_NAME.OPEN.toLowerCase(),\n            title: <Localize i18n_default_text='Open' />,\n            content: <PositionsContent hasButtonsDemo={hasButtonsDemo} setHasButtonsDemo={setHasButtonsDemo} />,\n        },\n        {\n            id: TAB_NAME.CLOSED.toLowerCase(),\n            title: <Localize i18n_default_text='Closed' />,\n            content: <PositionsContent isClosedTab />,\n        },\n    ];\n\n    const onChangeTab = (new_active_tab: number) => {\n        setActiveTab(new_active_tab);\n        setPositionURLParams(tabs[new_active_tab].id);\n    };\n\n    React.useEffect(() => {\n        setPositionURLParams(tabs[activeTab].id);\n\n        if (guide_dtrader_v2?.positions_page) {\n            setHasButtonsDemo(true);\n        }\n\n        return () => {\n            const is_contract_details = history.location.pathname.startsWith('/contract/');\n            if (!is_contract_details) onUnmount();\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return (\n        <BottomNav>\n            <div className='positions-page'>\n                <Tab.Container\n                    contentStyle='fill'\n                    className='positions-page__tabs'\n                    size='md'\n                    selectedTabIndex={activeTab}\n                    onChangeTab={onChangeTab}\n                >\n                    <Tab.List>\n                        {tabs.map(({ id, title }) => (\n                            <Tab.Trigger key={id}>{title}</Tab.Trigger>\n                        ))}\n                    </Tab.List>\n                    <Tab.Content className='positions-page__tabs-content'>\n                        {tabs.map(({ id, content }) => (\n                            <Tab.Panel key={id}>{content}</Tab.Panel>\n                        ))}\n                    </Tab.Content>\n                </Tab.Container>\n            </div>\n            {!guide_dtrader_v2?.positions_page && is_logged_in && (\n                <OnboardingGuide\n                    type='positions_page'\n                    is_dark_mode_on={is_dark_mode_on}\n                    callback={() => setHasButtonsDemo(true)}\n                />\n            )}\n        </BottomNav>\n    );\n});\n\nexport default Positions;\n","import Positions from './positions';\nimport './positions.scss';\n\nexport default Positions;\n","import React from 'react';\nimport { Text, CaptionText } from '@deriv-com/quill-ui';\n\nconst EntryExitDetailRow = ({\n    label,\n    value,\n    date,\n    time,\n}: {\n    label: React.ReactNode;\n    value?: string;\n    date?: string;\n    time: string;\n}) => (\n    <div className='entry-exit-details__table-row'>\n        <div className='entry-exit-details__table-cell'>\n            <Text size='sm' color='quill-typography__color--subtle'>\n                {label}\n            </Text>\n        </div>\n        <div className='entry-exit-details__table-cell'>\n            <Text size='sm'>{value}</Text>\n            <Text size='sm' color='quill-typography__color--subtle'>\n                {date}\n            </Text>\n            <CaptionText color='quill-typography__color--subtle'>{time}</CaptionText>\n        </div>\n    </div>\n);\n\nexport default EntryExitDetailRow;\n","import { Text } from '@deriv-com/quill-ui';\nimport React from 'react';\nimport clsx from 'clsx';\n\nconst CardWrapper = ({\n    title,\n    children,\n    className,\n}: {\n    title?: React.ReactNode;\n    children: React.ReactNode;\n    className?: string;\n}) => {\n    return (\n        <div className={clsx('card-wrapper', className)}>\n            {title && (\n                <Text size='sm' bold className='title'>\n                    {title}\n                </Text>\n            )}\n            {children}\n        </div>\n    );\n};\n\nexport default CardWrapper;\n","import CardWrapper from './card-wrapper';\nimport './card-wrapper.scss';\n\nexport default CardWrapper;\n","import React, { useMemo } from 'react';\nimport { TContractInfo, addComma, formatDate, formatTime, getEndTime } from '@deriv/shared';\nimport { Localize } from '@deriv/translations';\nimport EntryExitDetailRow from './entry-exit-details-row';\nimport CardWrapper from '../CardWrapper';\nimport moment from 'moment';\n\nconst getDateTimeFromEpoch = (epoch: number) => {\n    if (epoch) {\n        const date = new Date(epoch * 1000);\n        const momentDate = moment(date);\n        const formattedDate = formatDate(momentDate, 'DD MMM YYYY');\n        const formattedTime = formatTime(epoch, 'HH:mm:ss [GMT]');\n\n        return {\n            date: formattedDate,\n            time: formattedTime,\n        };\n    }\n};\n\nconst EntryExitDetails = ({ contract_info }: { contract_info: TContractInfo }) => {\n    const { entry_tick_time, entry_spot_display_value, exit_tick_time, date_start, exit_tick_display_value } =\n        contract_info;\n\n    const dateTimes = useMemo(\n        () => ({\n            entry: entry_tick_time ? getDateTimeFromEpoch(entry_tick_time) : undefined,\n            exit: exit_tick_time ? getDateTimeFromEpoch(exit_tick_time) : undefined,\n            start: date_start ? getDateTimeFromEpoch(date_start) : undefined,\n            end: getEndTime(contract_info) ? getDateTimeFromEpoch(getEndTime(contract_info) ?? 0) : undefined,\n        }),\n        [contract_info]\n    );\n\n    const entryValue = entry_spot_display_value ? addComma(entry_spot_display_value) : null;\n    const exitValue = exit_tick_display_value ? addComma(exit_tick_display_value) : null;\n\n    return (\n        <CardWrapper title={<Localize i18n_default_text='Entry & exit details' />} className='entry-exit-details'>\n            <div className='entry-exit-details__table'>\n                {dateTimes.start && (\n                    <EntryExitDetailRow\n                        label={<Localize i18n_default_text='Start time' />}\n                        value={dateTimes.start.date}\n                        time={dateTimes.start.time}\n                    />\n                )}\n                {dateTimes.entry && entryValue && (\n                    <EntryExitDetailRow\n                        label={<Localize i18n_default_text='Entry spot' />}\n                        value={entryValue}\n                        {...dateTimes.entry}\n                    />\n                )}\n                {dateTimes.end && (\n                    <EntryExitDetailRow\n                        label={<Localize i18n_default_text='Exit time' />}\n                        value={dateTimes.end.date}\n                        time={dateTimes.end.time}\n                    />\n                )}\n                {dateTimes.exit && exitValue && (\n                    <EntryExitDetailRow\n                        label={<Localize i18n_default_text='Exit spot' />}\n                        value={exitValue}\n                        {...dateTimes.exit}\n                    />\n                )}\n            </div>\n        </CardWrapper>\n    );\n};\n\nexport default EntryExitDetails;\n","import EntryExitDetails from './entry-exit-details';\nimport './entry-exit-details.scss';\n\nexport default EntryExitDetails;\n","import { Text, CaptionText, Pagination } from '@deriv-com/quill-ui';\nimport { formatDate, formatMoney, formatTime, TContractStore } from '@deriv/shared';\nimport CardWrapper from '../CardWrapper';\nimport Carousel from 'AppV2/Components/Carousel';\nimport React, { useState } from 'react';\nimport clsx from 'classnames';\nimport { localize, Localize } from '@deriv/translations';\n\ntype THistory = TContractStore['contract_update_history'];\n\ntype TContractHistory = {\n    currency?: string;\n    history?: [] | THistory;\n    is_multiplier?: boolean;\n};\n\ntype TPagination = {\n    currentPage: number;\n    totalPageCount: number;\n};\n\nconst TakeProfitHistory = ({ history = [], currency, is_multiplier }: TContractHistory) => {\n    const [current_page, setCurrentPage] = useState(0);\n    const items_per_page = 4;\n    const total_pages = Math.ceil(history.length / items_per_page);\n\n    const handlePageChange = React.useCallback((pagination: TPagination) => {\n        setCurrentPage(pagination.currentPage - 1);\n    }, []);\n\n    const getHistoryTitle = () =>\n        is_multiplier ? <Localize i18n_default_text='TP & SL history' /> : <Localize i18n_default_text='TP history' />;\n\n    if (!history.length) return null;\n\n    const pages_config = (history as THistory).reduce((result: THistory[], _item: typeof history[0], index: number) => {\n        if (!(index % items_per_page)) {\n            result.push(history.slice(index, index + items_per_page));\n        }\n        return result;\n    }, []);\n\n    const pages = pages_config.map((array, index) => ({\n        id: index,\n        component: (\n            <React.Fragment>\n                {array.map((item, index) => (\n                    <div key={`take-profit-history-${index}`} className='take-profit-history__table-row'>\n                        <div\n                            className={clsx('take-profit-history__table-cell', 'take-profit-history__table-cell--left')}\n                        >\n                            <CaptionText color='quill-typography__color--subtle' size='sm'>\n                                {formatDate(item.order_date, 'DD MMM YYYY')}\n                            </CaptionText>\n                            <CaptionText color='quill-typography__color--subtle'>\n                                {formatTime(Number(item.order_date))}\n                            </CaptionText>\n                        </div>\n                        <div className='take-profit-history__table-cell'>\n                            <Text size='sm' color='quill-typography__color--subtle'>\n                                {item.display_name}\n                            </Text>\n                            <Text size='sm'>\n                                {Math.abs(Number(item.order_amount)) === 0\n                                    ? localize('Cancelled')\n                                    : `${formatMoney(String(currency), String(item.order_amount), true)} ${currency}`}\n                            </Text>\n                        </div>\n                    </div>\n                ))}\n            </React.Fragment>\n        ),\n    }));\n\n    return (\n        <CardWrapper title={getHistoryTitle()} className='take-profit-history'>\n            <div\n                className={clsx('take-profit-history__table', {\n                    'take-profit-history__table--fixed-height': history.length > items_per_page,\n                })}\n            >\n                <Carousel\n                    classname='take-profit-history__carousel'\n                    current_index={current_page}\n                    is_swipeable\n                    pages={pages}\n                    setCurrentIndex={setCurrentPage}\n                />\n            </div>\n            {total_pages > 1 && (\n                <Pagination\n                    initialPage={current_page + 1}\n                    contentLength={history.length}\n                    contentPerPage={items_per_page}\n                    hideChevron\n                    onClickPagination={handlePageChange}\n                    variant='bullet'\n                />\n            )}\n        </CardWrapper>\n    );\n};\n\nexport default TakeProfitHistory;\n","import TakeProfitHistory from './take-profit-history';\nimport './take-profit-history.scss';\n\nexport default TakeProfitHistory;\n","import { Localize } from '@deriv/translations';\nimport { TContractInfo } from '@deriv/shared';\nimport { Text } from '@deriv-com/quill-ui';\nimport CardWrapper from 'AppV2/Components/CardWrapper';\nimport React from 'react';\n\ninterface ContractInfoProps {\n    contract_info: TContractInfo;\n}\n\nconst PayoutInfo = ({ contract_info }: ContractInfoProps) => (\n    <CardWrapper title={<Localize i18n_default_text='How do I earn a payout?' />}>\n        <Text size='sm'>{contract_info.longcode}</Text>\n    </CardWrapper>\n);\n\nexport default PayoutInfo;\n","import PayoutInfo from './payout-info';\n\nexport default PayoutInfo;\n","import React, { useEffect } from 'react';\nimport { useLocation } from 'react-router';\nimport { useStore } from '@deriv/stores';\n\nconst useContractDetails = () => {\n    const store = useStore();\n    const { contract_replay, contract_trade } = store;\n    const { getContractById } = contract_trade;\n    const { contract_store, onMount, onUnmount } = contract_replay;\n\n    const { contract_info } = contract_store;\n    const contract = getContractById(contract_info.contract_id);\n    const location = useLocation();\n\n    useEffect(() => {\n        const urlContractId = location.pathname.split('/').pop();\n        if (urlContractId != contract_info.contract_id) {\n            onMount(parseInt(urlContractId));\n        }\n    }, [location.pathname, onMount, onUnmount, contract_info.contract_id]);\n\n    return {\n        contract_info,\n        contract,\n        is_loading: !contract_info.contract_id,\n    };\n};\n\nexport default useContractDetails;\n","import React from 'react';\nimport { isAccumulatorContract, isResetContract } from '@deriv/shared';\nimport useContractDetails from 'AppV2/Hooks/useContractDetails';\nimport { observer } from 'mobx-react-lite';\nimport ReplayChart from 'Modules/Contract/Containers/replay-chart';\nimport './contract-details-chart.scss';\n\nconst ContractDetailsChart = observer(() => {\n    const { contract_info } = useContractDetails();\n    const is_reset_contract = isResetContract(contract_info.contract_type);\n    const is_accumulator = isAccumulatorContract(contract_info.contract_type);\n\n    return (\n        <div className='contract-details-chart'>\n            <ReplayChart\n                is_accumulator_contract={is_accumulator}\n                is_reset_contract={is_reset_contract}\n                is_vertical_scroll_disabled\n            />\n        </div>\n    );\n});\n\nexport default ContractDetailsChart;\n","import {\n    addComma,\n    CONTRACT_TYPES,\n    formatMoney,\n    formatResetDuration,\n    getCardLabelsV2,\n    getDurationPeriod,\n    getDurationTime,\n    getDurationUnitText,\n    getGrowthRatePercentage,\n    getStartTime,\n    getUnitMap,\n    hasForwardContractStarted,\n    isAccumulatorContract,\n    isForwardStarting,\n    isResetContract,\n    isUserCancelled,\n    TContractInfo,\n} from '@deriv/shared';\nimport { getBarrierValue } from 'App/Components/Elements/PositionsDrawer/helpers';\nimport { isCancellationExpired } from 'Stores/Modules/Trading/Helpers/logic';\nimport { Localize } from '@deriv/translations';\nimport React from 'react';\n\ntype TCardLabels = ReturnType<typeof getCardLabelsV2>;\n\nconst formatTimestampToDateTime = (timestamp: number) => {\n    const date = new Date(timestamp * 1000);\n\n    const formattedDate = `${date.getUTCDate().toString().padStart(2, '0')} ${date.toLocaleString('en-GB', {\n        month: 'short',\n        timeZone: 'UTC',\n    })} ${date.getUTCFullYear()}`;\n\n    const formattedTime = `${date.getUTCHours().toString().padStart(2, '0')}:${date\n        .getUTCMinutes()\n        .toString()\n        .padStart(2, '0')}:${date.getUTCSeconds().toString().padStart(2, '0')} GMT`;\n\n    return [formattedDate, formattedTime];\n};\n\nconst getDealCancelFee = (data: TContractInfo, CARD_LABELS: TCardLabels) => {\n    if (!data.cancellation?.ask_price || !data.currency) return undefined;\n\n    let status;\n    if (isUserCancelled(data)) {\n        status = CARD_LABELS.EXECUTED;\n    } else if (isCancellationExpired(data)) {\n        status = CARD_LABELS.EXPIRED;\n    } else {\n        status = CARD_LABELS.ACTIVE;\n    }\n\n    return [`${formatMoney(data.currency, data.cancellation.ask_price, true)} ${data.currency}`, `(${status})`];\n};\n\n// Contains all key values that are used more than once in different transform objects\nconst getCommonFields = (data: TContractInfo, CARD_LABELS: TCardLabels) => {\n    const { tick_count, tick_passed, contract_type } = data;\n    const ticks_label = Number(tick_count) < 2 ? CARD_LABELS.TICK : CARD_LABELS.TICKS;\n    const ticks_duration_text = isAccumulatorContract(contract_type)\n        ? `${tick_passed}/${tick_count} ${CARD_LABELS.TICKS}`\n        : `${tick_count} ${ticks_label}`;\n\n    return {\n        [CARD_LABELS.REFERENCE_ID]: [\n            data.transaction_ids?.buy ? `${data.transaction_ids.buy} (${CARD_LABELS.BUY})` : '',\n            data.transaction_ids?.sell ? `${data.transaction_ids.sell} (${CARD_LABELS.SELL})` : '',\n        ],\n        [CARD_LABELS.STAKE]:\n            data.buy_price && data.currency\n                ? `${formatMoney(data.currency, data.buy_price, true)} ${data.currency}`\n                : '',\n        [CARD_LABELS.DURATION]:\n            Number(tick_count) > 0\n                ? ticks_duration_text\n                : `${getDurationTime(data) ?? ''} ${getDurationUnitText(getDurationPeriod(data)) ?? ''}`,\n        [CARD_LABELS.PAYOUT_PER_POINT]: data.display_number_of_contracts ?? '',\n        [CARD_LABELS.POTENTIAL_PAYOUT]: data.payout,\n    };\n};\n// For Multiplier\nconst transformMultiplierData = (data: TContractInfo, CARD_LABELS: TCardLabels) => {\n    const commonFields = getCommonFields(data, CARD_LABELS);\n    const dealCancelFee = getDealCancelFee(data, CARD_LABELS);\n\n    return {\n        [CARD_LABELS.REFERENCE_ID]: commonFields[CARD_LABELS.REFERENCE_ID],\n        [CARD_LABELS.MULTIPLIER]: data.multiplier ? `x${data.multiplier}` : '',\n        [CARD_LABELS.STAKE]: commonFields[CARD_LABELS.STAKE],\n        [CARD_LABELS.COMMISSION]: data.commission\n            ? `${formatMoney(data.currency as string, data.commission, true)} ${data.currency}`\n            : '',\n        ...(dealCancelFee && { [CARD_LABELS.DEAL_CANCEL_FEE]: dealCancelFee }),\n        [CARD_LABELS.TAKE_PROFIT]:\n            data.limit_order?.take_profit?.order_amount && data.currency\n                ? `${formatMoney(data.currency, data.limit_order.take_profit.order_amount, true)} ${data.currency}`\n                : CARD_LABELS.NOT_SET,\n        [CARD_LABELS.STOP_LOSS]:\n            data.limit_order?.stop_loss?.order_amount && data.currency\n                ? `${formatMoney(data.currency, data.limit_order.stop_loss.order_amount, true)} ${data.currency}`\n                : CARD_LABELS.NOT_SET,\n        [CARD_LABELS.STOP_OUT_LEVEL]:\n            data.limit_order?.stop_out?.order_amount && data.currency\n                ? `${formatMoney(data.currency, data.limit_order.stop_out.order_amount, true)} ${data.currency}`\n                : '',\n    };\n};\n\n// For Rise\nconst transformCallPutData = (data: TContractInfo, CARD_LABELS: TCardLabels) => {\n    const { barrier, purchase_time, shortcode } = data;\n    const is_forward_starting = isForwardStarting(shortcode ?? '', purchase_time);\n    const start_time = getStartTime(shortcode ?? '');\n    const has_forward_contract_started = hasForwardContractStarted(shortcode ?? '');\n    const show_barrier_placeholder = is_forward_starting && !!start_time && !has_forward_contract_started;\n\n    const commonFields = getCommonFields(data, CARD_LABELS);\n    return {\n        [CARD_LABELS.REFERENCE_ID]: commonFields[CARD_LABELS.REFERENCE_ID],\n        [CARD_LABELS.DURATION]: commonFields[CARD_LABELS.DURATION],\n        [CARD_LABELS.BARRIER]: (show_barrier_placeholder ? 'TBD' : barrier) ?? '',\n        [CARD_LABELS.STAKE]: commonFields[CARD_LABELS.STAKE],\n        [CARD_LABELS.POTENTIAL_PAYOUT]: commonFields[CARD_LABELS.POTENTIAL_PAYOUT],\n    };\n};\n\n// For Turbos\nconst transformTurbosData = (data: TContractInfo, CARD_LABELS: TCardLabels) => {\n    const commonFields = getCommonFields(data, CARD_LABELS);\n    return {\n        [CARD_LABELS.REFERENCE_ID]: commonFields[CARD_LABELS.REFERENCE_ID],\n        [CARD_LABELS.DURATION]: commonFields[CARD_LABELS.DURATION],\n        [CARD_LABELS.BARRIER]: data.barrier ?? '',\n        [CARD_LABELS.PAYOUT_PER_POINT]: `${commonFields[CARD_LABELS.PAYOUT_PER_POINT]} ${data.currency}`,\n        [CARD_LABELS.STAKE]: commonFields[CARD_LABELS.STAKE],\n        [CARD_LABELS.TAKE_PROFIT]:\n            data.limit_order?.take_profit?.order_amount && data.currency\n                ? `${formatMoney(data.currency, data.limit_order.take_profit.order_amount, true)} ${data.currency}`\n                : CARD_LABELS.NOT_SET,\n    };\n};\n\n// For Digits\nconst transformDigitsData = (data: TContractInfo, CARD_LABELS: TCardLabels) => {\n    const commonFields = getCommonFields(data, CARD_LABELS);\n    const duration_time = getDurationTime(data) ?? '';\n    return {\n        [CARD_LABELS.REFERENCE_ID]: commonFields[CARD_LABELS.REFERENCE_ID],\n        [CARD_LABELS.DURATION]: `${duration_time} ${\n            +duration_time > 1 ? getUnitMap().t.name_plural : getUnitMap().t.name_singular\n        }`,\n        [CARD_LABELS.TARGET]: getBarrierValue(data),\n        [CARD_LABELS.STAKE]: commonFields[CARD_LABELS.STAKE],\n        [CARD_LABELS.POTENTIAL_PAYOUT]: commonFields[CARD_LABELS.POTENTIAL_PAYOUT],\n    };\n};\n\n// For Accumulators\nconst transformAccumulatorData = (data: TContractInfo, CARD_LABELS: TCardLabels) => {\n    const commonFields = getCommonFields(data, CARD_LABELS);\n    return {\n        [CARD_LABELS.REFERENCE_ID]: commonFields[CARD_LABELS.REFERENCE_ID],\n        ...{\n            ...((data.is_expired || data.is_sold) && {\n                [CARD_LABELS.DURATION]: commonFields[CARD_LABELS.DURATION],\n            }),\n        },\n        [CARD_LABELS.GROWTH_RATE]: data.growth_rate ? `${getGrowthRatePercentage(data.growth_rate)}%` : '',\n        [CARD_LABELS.STAKE]: commonFields[CARD_LABELS.STAKE],\n        ...{\n            ...(data.limit_order?.take_profit && {\n                [CARD_LABELS.TAKE_PROFIT]:\n                    data.limit_order?.take_profit?.order_amount && data.currency\n                        ? `${formatMoney(data.currency, data.limit_order.take_profit.order_amount, true)} ${\n                              data.currency\n                          }`\n                        : CARD_LABELS.NOT_SET,\n            }),\n        },\n    };\n};\n\n// For Vanillas\nconst transformVanillaData = (data: TContractInfo, CARD_LABELS: TCardLabels) => {\n    const commonFields = getCommonFields(data, CARD_LABELS);\n    return {\n        [CARD_LABELS.REFERENCE_ID]: commonFields[`${CARD_LABELS.REFERENCE_ID}`],\n        [CARD_LABELS.DURATION]: `${getDurationTime(data) ?? ''} ${getDurationUnitText(getDurationPeriod(data)) ?? ''}`,\n        [CARD_LABELS.STRIKE_PRICE]:\n            (isResetContract(data.contract_type) ? addComma(data.entry_spot_display_value) : getBarrierValue(data)) ||\n            ' - ',\n        [CARD_LABELS.PAYOUT_PER_POINT]: `${commonFields[CARD_LABELS.PAYOUT_PER_POINT]} ${data.currency}`,\n        [CARD_LABELS.STAKE]: commonFields[CARD_LABELS.STAKE],\n    };\n};\n\nconst transformEndsBetween = (data: TContractInfo, CARD_LABELS: TCardLabels) => {\n    const commonFields = getCommonFields(data, CARD_LABELS);\n    return {\n        [CARD_LABELS.REFERENCE_ID]: commonFields[`${CARD_LABELS.REFERENCE_ID}`],\n        [CARD_LABELS.DURATION]: `${getDurationTime(data) ?? ''} ${getDurationUnitText(getDurationPeriod(data)) ?? ''}`,\n        [CARD_LABELS.HIGH_BARRIER]: data.high_barrier,\n        [CARD_LABELS.LOW_BARRIER]: data.low_barrier,\n        [CARD_LABELS.STAKE]: commonFields[CARD_LABELS.STAKE],\n        [CARD_LABELS.POTENTIAL_PAYOUT]:\n            data.payout && data.currency ? `${formatMoney(data.currency, data.payout, true)} ${data.currency}` : '',\n    };\n};\n\nconst transformAsian = (data: TContractInfo, CARD_LABELS: TCardLabels) => {\n    const commonFields = getCommonFields(data, CARD_LABELS);\n    return {\n        [CARD_LABELS.REFERENCE_ID]: commonFields[CARD_LABELS.REFERENCE_ID],\n        [CARD_LABELS.DURATION]: commonFields[CARD_LABELS.DURATION],\n        [CARD_LABELS.BARRIER]: data.barrier ?? '',\n        [CARD_LABELS.STAKE]: commonFields[CARD_LABELS.STAKE],\n        [CARD_LABELS.POTENTIAL_PAYOUT]:\n            data.payout && data.currency ? `${formatMoney(data.currency, data.payout, true)} ${data.currency}` : '',\n    };\n};\n\nconst transformLooksback = (data: TContractInfo, CARD_LABELS: TCardLabels) => {\n    const commonFields = getCommonFields(data, CARD_LABELS);\n    const is_call_contract = data.contract_type == CONTRACT_TYPES.LB_CALL;\n    let spot_key;\n\n    if (data.transaction_ids?.sell) {\n        spot_key = is_call_contract ? CARD_LABELS.LOW_SPOT : CARD_LABELS.HIGH_SPOT;\n    } else {\n        spot_key = is_call_contract ? CARD_LABELS.INDICATIVE_LOW_SPOT : CARD_LABELS.INDICATIVE_HIGH_SPOT;\n    }\n\n    return {\n        [CARD_LABELS.REFERENCE_ID]: commonFields[CARD_LABELS.REFERENCE_ID],\n        [CARD_LABELS.DURATION]: commonFields[CARD_LABELS.DURATION],\n        [CARD_LABELS.MULTIPLIER]: data.multiplier ?? '',\n        [spot_key]: data.barrier ?? '',\n        [CARD_LABELS.STAKE]: commonFields[CARD_LABELS.STAKE],\n    };\n};\n\nconst transformHighLowLookback = (data: TContractInfo, CARD_LABELS: TCardLabels) => {\n    const commonFields = getCommonFields(data, CARD_LABELS);\n    return {\n        [CARD_LABELS.REFERENCE_ID]: commonFields[CARD_LABELS.REFERENCE_ID],\n        [CARD_LABELS.DURATION]: commonFields[CARD_LABELS.DURATION],\n        [CARD_LABELS.MULTIPLIER]: data.multiplier ?? '',\n        ...{\n            [data.transaction_ids?.sell ? CARD_LABELS.HIGH_SPOT : CARD_LABELS.INDICATIVE_HIGH_SPOT]:\n                data.high_barrier ?? '',\n            [data.transaction_ids?.sell ? CARD_LABELS.LOW_SPOT : CARD_LABELS.INDICATIVE_LOW_SPOT]:\n                data.low_barrier ?? '',\n        },\n        [CARD_LABELS.STAKE]: commonFields[CARD_LABELS.STAKE],\n    };\n};\n\nconst transformReset = (data: TContractInfo, CARD_LABELS: TCardLabels) => {\n    const commonFields = getCommonFields(data, CARD_LABELS);\n\n    return {\n        [CARD_LABELS.REFERENCE_ID]: commonFields[CARD_LABELS.REFERENCE_ID],\n        [CARD_LABELS.DURATION]: [\n            commonFields[CARD_LABELS.DURATION],\n            {\n                caption: React.createElement(Localize, {\n                    key: 'reset_time',\n                    i18n_default_text: 'The reset time is {{ reset_time }}',\n                    values: {\n                        reset_time:\n                            data.tick_count !== undefined\n                                ? `${Math.floor(Number(data.tick_count) / 2)} ${\n                                      Number(data.tick_count) < 2 ? CARD_LABELS.TICK : CARD_LABELS.TICKS\n                                  }`\n                                : formatResetDuration(data),\n                    },\n                }),\n            },\n        ],\n        [CARD_LABELS.BARRIER]: data.barrier ?? '',\n        ...(data.reset_barrier ? { [CARD_LABELS.RESET_BARRIER]: data.reset_barrier } : {}),\n        ...(data.reset_time ? { [CARD_LABELS.RESET_TIME]: formatTimestampToDateTime(data.reset_time) ?? '' } : {}),\n        [CARD_LABELS.STAKE]: commonFields[CARD_LABELS.STAKE],\n        [CARD_LABELS.POTENTIAL_PAYOUT]:\n            data.payout && data.currency ? `${formatMoney(data.currency, data.payout, true)} ${data.currency}` : '',\n    };\n};\n\nconst transformRunHigh = (data: TContractInfo, CARD_LABELS: TCardLabels) => {\n    const commonFields = getCommonFields(data, CARD_LABELS);\n    return {\n        [CARD_LABELS.REFERENCE_ID]: commonFields[CARD_LABELS.REFERENCE_ID],\n        [CARD_LABELS.DURATION]: commonFields[CARD_LABELS.DURATION],\n        [CARD_LABELS.STAKE]: commonFields[CARD_LABELS.STAKE],\n        [CARD_LABELS.POTENTIAL_PAYOUT]:\n            data.payout && data.currency ? `${formatMoney(data.currency, data.payout, true)} ${data.currency}` : '',\n    };\n};\nconst transformHighLow = (data: TContractInfo, CARD_LABELS: TCardLabels) => {\n    const commonFields = getCommonFields(data, CARD_LABELS);\n    return {\n        [CARD_LABELS.REFERENCE_ID]: commonFields[CARD_LABELS.REFERENCE_ID],\n        [CARD_LABELS.DURATION]: commonFields[CARD_LABELS.DURATION],\n        [CARD_LABELS.SELECTED_TICK]: [data.selected_tick ?? '', { caption: data.barrier ?? '' }],\n        [CARD_LABELS.STAKE]: commonFields[CARD_LABELS.STAKE],\n        [CARD_LABELS.POTENTIAL_PAYOUT]:\n            data.payout && data.currency ? `${formatMoney(data.currency, data.payout, true)} ${data.currency}` : '',\n    };\n};\n\n// Map of contract types to their respective transform functions\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst transformFunctionMap: Record<string, (data: TContractInfo, card_label: TCardLabels) => Record<string, any>> = {\n    [CONTRACT_TYPES.TURBOS.LONG]: transformTurbosData,\n    [CONTRACT_TYPES.TURBOS.SHORT]: transformTurbosData,\n    [CONTRACT_TYPES.MULTIPLIER.DOWN]: transformMultiplierData,\n    [CONTRACT_TYPES.MULTIPLIER.UP]: transformMultiplierData,\n    [CONTRACT_TYPES.MATCH_DIFF.MATCH]: transformDigitsData,\n    [CONTRACT_TYPES.MATCH_DIFF.DIFF]: transformDigitsData,\n    [CONTRACT_TYPES.EVEN_ODD.EVEN]: transformDigitsData,\n    [CONTRACT_TYPES.EVEN_ODD.ODD]: transformDigitsData,\n    [CONTRACT_TYPES.OVER_UNDER.OVER]: transformDigitsData,\n    [CONTRACT_TYPES.OVER_UNDER.UNDER]: transformDigitsData,\n    [CONTRACT_TYPES.PUT]: transformCallPutData,\n    [CONTRACT_TYPES.PUTE]: transformCallPutData,\n    [CONTRACT_TYPES.CALLE]: transformCallPutData,\n    [CONTRACT_TYPES.CALL]: transformCallPutData,\n    [CONTRACT_TYPES.TOUCH.ONE_TOUCH]: transformCallPutData,\n    [CONTRACT_TYPES.TOUCH.NO_TOUCH]: transformCallPutData,\n    [CONTRACT_TYPES.ACCUMULATOR]: transformAccumulatorData,\n    [CONTRACT_TYPES.VANILLA.CALL]: transformVanillaData,\n    [CONTRACT_TYPES.VANILLA.PUT]: transformVanillaData,\n    //SMARTTRADER CONCTRACTS\n    [CONTRACT_TYPES.END.IN]: transformEndsBetween,\n    [CONTRACT_TYPES.END.OUT]: transformEndsBetween,\n    [CONTRACT_TYPES.STAY.IN]: transformEndsBetween,\n    [CONTRACT_TYPES.STAY.OUT]: transformEndsBetween,\n    [CONTRACT_TYPES.ASIAN.UP]: transformAsian,\n    [CONTRACT_TYPES.ASIAN.DOWN]: transformAsian,\n    [CONTRACT_TYPES.LB_HIGH_LOW]: transformHighLowLookback,\n    [CONTRACT_TYPES.LB_CALL]: transformLooksback,\n    [CONTRACT_TYPES.LB_PUT]: transformLooksback,\n    [CONTRACT_TYPES.RESET.CALL]: transformReset,\n    [CONTRACT_TYPES.RESET.PUT]: transformReset,\n    [CONTRACT_TYPES.TICK_HIGH_LOW.HIGH]: transformHighLow,\n    [CONTRACT_TYPES.TICK_HIGH_LOW.LOW]: transformHighLow,\n    [CONTRACT_TYPES.FALL]: transformEndsBetween,\n    [CONTRACT_TYPES.RUN_HIGH_LOW.HIGH]: transformRunHigh,\n    [CONTRACT_TYPES.RUN_HIGH_LOW.LOW]: transformRunHigh,\n};\n\nconst useOrderDetails = (contract_info: TContractInfo) => {\n    const contractInfo = contract_info;\n    if (!contractInfo.contract_type) return;\n    const transformFunction = transformFunctionMap[contractInfo.contract_type];\n    const details = transformFunction ? transformFunction(contractInfo, getCardLabelsV2()) : {};\n    return {\n        details,\n    };\n};\n\nexport default useOrderDetails;\n","import React from 'react';\nimport { CaptionText, Text } from '@deriv-com/quill-ui';\nimport useOrderDetails from 'AppV2/Hooks/useOrderDetails';\nimport { TContractInfo } from '@deriv/shared';\nimport CardWrapper from 'AppV2/Components/CardWrapper';\nimport { Localize } from '@deriv/translations';\n\ninterface ContractInfoProps {\n    contract_info: TContractInfo;\n}\n\nconst OrderDetails = ({ contract_info }: ContractInfoProps) => {\n    const orderDetails = useOrderDetails(contract_info);\n    const details = orderDetails ? orderDetails.details : {};\n    return (\n        <CardWrapper title={<Localize i18n_default_text='Order Details' />}>\n            <div className='order-details'>\n                <div className='order-details__table'>\n                    {Object.entries(details).map(([key, value]) => (\n                        <div className='order-details__table-row' key={key}>\n                            <div className='order-details__table-row-cell'>\n                                <Text size='sm' color='quill-typography__color--subtle'>\n                                    {key}\n                                </Text>\n                            </div>\n                            <div className='order-details__table-row-cell'>\n                                {Array.isArray(value) ? (\n                                    value.map((val, index) =>\n                                        ['number', 'string'].includes(typeof val) ? (\n                                            <Text key={`${key}_${index}`} size='sm'>\n                                                {val}\n                                            </Text>\n                                        ) : (\n                                            <CaptionText\n                                                key={`${key}_${index}`}\n                                                size='sm'\n                                                color='quill-typography__color--subtle'\n                                            >\n                                                {val?.caption ?? ''}\n                                            </CaptionText>\n                                        )\n                                    )\n                                ) : (\n                                    <Text size='sm'>{value}</Text>\n                                )}\n                            </div>\n                        </div>\n                    ))}\n                </div>\n            </div>\n        </CardWrapper>\n    );\n};\n\nexport default OrderDetails;\n","import OrderDetails from './order-details';\nimport './order-details.scss';\n\nexport default OrderDetails;\n","import { CONTRACT_TYPES } from '@deriv/shared';\n\nconst defaultConfig = {\n    isTakeProfitVisible: false,\n    isDealCancellationVisible: false,\n    isStopLossVisible: false,\n    isTpHistoryVisible: false,\n};\n\nexport const getContractDetailsConfig = (contractType: string) => {\n    const config = {\n        [CONTRACT_TYPES.ACCUMULATOR]: {\n            isTakeProfitVisible: true,\n            isDealCancellationVisible: false,\n            isStopLossVisible: false,\n            isTpHistoryVisible: true,\n        },\n        [CONTRACT_TYPES.MULTIPLIER.UP]: {\n            isTakeProfitVisible: true,\n            isDealCancellationVisible: true,\n            isStopLossVisible: true,\n            isTpHistoryVisible: true,\n        },\n        [CONTRACT_TYPES.MULTIPLIER.DOWN]: {\n            isTakeProfitVisible: true,\n            isDealCancellationVisible: true,\n            isStopLossVisible: true,\n            isTpHistoryVisible: true,\n        },\n        [CONTRACT_TYPES.TURBOS.LONG]: {\n            isTakeProfitVisible: true,\n            isDealCancellationVisible: false,\n            isStopLossVisible: false,\n            isTpHistoryVisible: true,\n        },\n        [CONTRACT_TYPES.TURBOS.SHORT]: {\n            isTakeProfitVisible: true,\n            isDealCancellationVisible: false,\n            isStopLossVisible: false,\n            isTpHistoryVisible: true,\n        },\n    } as const;\n\n    return config[contractType as keyof typeof config] || defaultConfig;\n};\n","import React from 'react';\nimport { Modal, SectionMessage, Text } from '@deriv-com/quill-ui';\nimport { Localize } from '@deriv/translations';\nimport { LabelPairedCircleInfoSmRegularIcon } from '@deriv/quill-icons';\n\ntype RiskManagementInfoModalProps = {\n    header_content: React.ReactNode;\n    body_content: React.ReactNode;\n    info_message?: React.ReactNode;\n};\n\nconst RiskManagementInfoModal = ({ header_content, body_content, info_message }: RiskManagementInfoModalProps) => {\n    const [isVisible, setIsVisible] = React.useState(false);\n    return (\n        <>\n            <button onClick={() => setIsVisible(!isVisible)}>\n                <LabelPairedCircleInfoSmRegularIcon fill='var(--component-textIcon-normal-default)' />\n            </button>\n            <Modal\n                isNonExpandable\n                shouldCloseModalOnSwipeDown\n                isOpened={isVisible}\n                toggleModal={setIsVisible}\n                primaryButtonLabel={<Localize i18n_default_text='Got it' />}\n                shouldCloseOnPrimaryButtonClick\n                isMobile\n                showHandleBar\n            >\n                <Modal.Header title={header_content} />\n                <Modal.Body>\n                    <div className='risk-management-info-modal__container'>\n                        <Text size='md'>{body_content}</Text>\n                        {info_message && <SectionMessage message={info_message} size='sm' status='info' />}\n                    </div>\n                </Modal.Body>\n            </Modal>\n        </>\n    );\n};\n\nexport default RiskManagementInfoModal;\n","import RiskManagementInfoModal from './risk-management-info-modal';\nimport './risk-management-info-modal.scss';\n\nexport default RiskManagementInfoModal;\n","import React from 'react';\nimport { Tag } from '@deriv-com/quill-ui';\nimport { RemainingTime } from '@deriv/components';\nimport { LabelPairedStopwatchCaptionRegularIcon } from '@deriv/quill-icons';\nimport { getCardLabelsV2 } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport useContractDetails from 'AppV2/Hooks/useContractDetails';\n\ntype DealCancellationRemainingTimeProps = {\n    format?: string;\n};\n\nconst DealCancellationRemainingTime = observer(({ format = 'mm:ss' }: DealCancellationRemainingTimeProps) => {\n    const { common } = useStore();\n    const { server_time: start_time } = common;\n    const { contract_info } = useContractDetails();\n\n    const { date_expiry: end_time } = contract_info.cancellation || {};\n    if (!end_time || start_time.unix() > +end_time) {\n        return null;\n    }\n\n    return (\n        <Tag\n            className='deal-cancellation-badge'\n            data-testid='dt_deal_cancellation_badge'\n            icon={\n                <LabelPairedStopwatchCaptionRegularIcon\n                    key='open-contract-card'\n                    fill='var(--component-tag-label-color-default)'\n                />\n            }\n            label={\n                <RemainingTime\n                    end_time={end_time}\n                    format={format}\n                    getCardLabels={getCardLabelsV2}\n                    start_time={start_time}\n                />\n            }\n            size='sm'\n            variant='custom'\n        />\n    );\n});\n\nexport default DealCancellationRemainingTime;\n","import React from 'react';\nimport { ActionSheet, Text, TextField, TextFieldWithSteppers, ToggleSwitch } from '@deriv-com/quill-ui';\nimport { localize, Localize } from '@deriv/translations';\nimport RiskManagementInfoModal from '../RiskManagementInfoModal';\nimport DealCancellationRemainingTime from '../DealCancellationRemainingTime/deal-cancellation-remaining-time';\nimport { observer } from '@deriv/stores';\nimport useContractDetails from 'AppV2/Hooks/useContractDetails';\nimport {\n    CONTRACT_TYPES,\n    formatMoney,\n    isAccumulatorContract,\n    isValidToCancel,\n    getDecimalPlaces,\n    getCurrencyDisplayCode,\n} from '@deriv/shared';\nimport TotalProfitLoss from '../TotalProfitLoss';\nimport { getProfit } from 'AppV2/Utils/positions-utils';\n\ntype RiskManagementItemProps = {\n    label: React.ReactNode;\n    modal_body_content: React.ReactNode;\n    is_deal_cancellation?: boolean;\n    value?: number | null;\n    type?: 'take_profit' | 'stop_loss';\n};\n\nconst RiskManagementItem = observer(\n    ({ label, modal_body_content, is_deal_cancellation = false, value, type }: RiskManagementItemProps) => {\n        const [isToggleOn, setIsToggleOn] = React.useState(Boolean(value));\n        const [isSheetOpen, setIsSheetOpen] = React.useState(false);\n        const [isEnabled, setIsEnabled] = React.useState(false);\n        const [stepperValue, setStepperValue] = React.useState<number | string>();\n        const [showError, setShowError] = React.useState(false);\n        const { contract_info, contract } = useContractDetails();\n        const { contract_type, currency, validation_params } = contract_info;\n        const { validation_errors, updateLimitOrder, clearContractUpdateConfigValues } = contract;\n        const is_valid_to_cancel = isValidToCancel(contract_info);\n        const is_accumulator = isAccumulatorContract(contract_type);\n        const total_profit = getProfit(contract_info);\n\n        React.useEffect(() => {\n            if (value) {\n                setStepperValue(value);\n                setIsToggleOn(Boolean(value));\n            }\n            return () => clearContractUpdateConfigValues();\n        }, [clearContractUpdateConfigValues, value]);\n\n        const isDealCancellation = is_valid_to_cancel;\n        const finalValue = Math.abs(value as number);\n\n        const errorKey = `contract_update_${type}` as 'contract_update_stop_loss' | 'contract_update_take_profit';\n        const validation_error_message = validation_errors[errorKey]?.[0] ?? '';\n\n        const messageForMultiplier = is_valid_to_cancel ? (\n            <Localize i18n_default_text='Take profit and/or stop loss are not available while deal cancellation is active.' />\n        ) : null;\n\n        const info_message = {\n            [CONTRACT_TYPES.ACCUMULATOR]: (\n                <Localize i18n_default_text='Take profit can’t be adjusted for ongoing accumulator contracts.' />\n            ),\n            [CONTRACT_TYPES.MULTIPLIER.UP]: messageForMultiplier,\n            [CONTRACT_TYPES.MULTIPLIER.DOWN]: messageForMultiplier,\n        };\n\n        const onChange = (\n            e: React.ChangeEvent<HTMLInputElement> | { target: { name: string; value: number | string | boolean } }\n        ) => {\n            const { value } = e.target;\n            setStepperValue(value as number);\n            setShowError(true);\n            contract.onChange?.({\n                name: `contract_update_${type}`,\n                value,\n            });\n        };\n\n        const handleToggleSwitch = (value: boolean) => {\n            clearContractUpdateConfigValues();\n            if (value) {\n                setIsSheetOpen(true);\n                setStepperValue('');\n                setIsEnabled(true);\n                setShowError(false);\n            } else {\n                contract.onChange?.({\n                    name: `has_contract_update_${type}`,\n                    value,\n                });\n                updateLimitOrder();\n                setIsToggleOn(!isToggleOn);\n            }\n        };\n\n        const min_value = type && (validation_params?.[type]?.min ?? 0);\n        const max_value = type && (validation_params?.[type]?.max ?? 0);\n\n        const getErrorMessage = () => {\n            const field_label = type === 'take_profit' ? localize('take profit') : localize('stop loss');\n            if (!stepperValue) {\n                return localize('Please enter a {{field_label}} amount.', { field_label });\n            }\n            if (min_value && +stepperValue < +min_value) {\n                return localize(\"Please enter a {{field_label}} amount that's at least {{min_value}}.\", {\n                    field_label,\n                    min_value,\n                });\n            }\n            if (max_value && +stepperValue > +max_value) {\n                return localize('Maximum {{field_label}} allowed is {{max_value}}.', {\n                    field_label,\n                    max_value,\n                });\n            }\n            return validation_error_message;\n        };\n\n        const error_message = showError ? getErrorMessage() : '';\n\n        const onSave = () => {\n            setShowError(true);\n            const current_error_message = getErrorMessage();\n            if (current_error_message) {\n                contract.onChange?.({\n                    name: errorKey,\n                    value: current_error_message,\n                });\n                return;\n            }\n            if (isEnabled) {\n                contract.onChange?.({\n                    name: `has_contract_update_${type}`,\n                    value: true,\n                });\n                setIsEnabled(false);\n            }\n            updateLimitOrder();\n            setIsSheetOpen(false);\n        };\n\n        return (\n            <div className='risk-management-item__container'>\n                <div className='risk-management-item'>\n                    <span className='risk-management-item__title'>\n                        <Text size='sm'>{label}</Text>\n                        <RiskManagementInfoModal\n                            header_content={label}\n                            body_content={modal_body_content}\n                            info_message={info_message[contract_type as keyof typeof info_message] || ''}\n                        />\n                    </span>\n                    {!is_deal_cancellation &&\n                        (is_accumulator && currency ? (\n                            <Text size='sm'>\n                                {formatMoney(currency, finalValue, true)} {currency}\n                            </Text>\n                        ) : (\n                            <ToggleSwitch\n                                disabled={isDealCancellation}\n                                checked={isToggleOn}\n                                onChange={handleToggleSwitch}\n                            />\n                        ))}\n                    {is_valid_to_cancel && is_deal_cancellation && <DealCancellationRemainingTime />}\n                </div>\n                {!is_accumulator && isToggleOn && currency && (\n                    <TextField\n                        variant='fill'\n                        inputSize='md'\n                        disabled={isSheetOpen}\n                        textAlignment='center'\n                        value={`${formatMoney(\n                            currency,\n                            type == 'stop_loss' ? -finalValue : finalValue,\n                            true\n                        )} ${currency}`}\n                        onClick={() => {\n                            clearContractUpdateConfigValues();\n                            setStepperValue(finalValue);\n                            setIsSheetOpen(true);\n                            setShowError(false);\n                        }}\n                        onFocus={() => setIsSheetOpen(true)}\n                    />\n                )}\n                <ActionSheet.Root\n                    expandable={false}\n                    isOpen={isSheetOpen}\n                    position='left'\n                    onClose={() => {\n                        setIsEnabled(false);\n                        setIsSheetOpen(false);\n                        setShowError(false);\n                    }}\n                >\n                    <ActionSheet.Portal shouldCloseOnDrag>\n                        <ActionSheet.Header title={label} />\n                        <ActionSheet.Content className='risk-management-item__action-sheet-content'>\n                            {isSheetOpen && (\n                                <TextFieldWithSteppers\n                                    allowDecimals\n                                    allowSign={false}\n                                    className='text-field--custom'\n                                    customType='commaRemoval'\n                                    decimals={getDecimalPlaces(currency)}\n                                    message={error_message}\n                                    minusDisabled={Number(stepperValue) - 1 <= 0}\n                                    name={type}\n                                    noStatusIcon\n                                    onChange={onChange}\n                                    placeholder={localize('Amount')}\n                                    regex={/[^0-9.,]/g}\n                                    status={error_message ? 'error' : 'neutral'}\n                                    shouldRound={false}\n                                    textAlignment='center'\n                                    inputMode='decimal'\n                                    unitLeft={getCurrencyDisplayCode(currency)}\n                                    value={stepperValue}\n                                    variant='fill'\n                                />\n                            )}\n                            {!!total_profit && (\n                                <TotalProfitLoss\n                                    currency={getCurrencyDisplayCode(currency)}\n                                    is_bold={false}\n                                    totalProfitLoss={total_profit}\n                                />\n                            )}\n                        </ActionSheet.Content>\n                        <ActionSheet.Footer\n                            shouldCloseOnPrimaryButtonClick={false}\n                            primaryAction={{\n                                content: <Localize i18n_default_text='Save' />,\n                                onAction: onSave,\n                            }}\n                        />\n                    </ActionSheet.Portal>\n                </ActionSheet.Root>\n            </div>\n        );\n    }\n);\n\nexport default RiskManagementItem;\n","import RiskManagementItem from './risk-management-item';\nimport './risk-management-item.scss';\n\nexport default RiskManagementItem;\n","import { Localize } from '@deriv/translations';\nimport React from 'react';\nimport { getContractDetailsConfig } from 'AppV2/Utils/contract-details-config';\nimport { observer } from '@deriv/stores';\nimport useContractDetails from 'AppV2/Hooks/useContractDetails';\nimport RiskManagementItem from '../RiskManagementItem';\n\nconst TakeProfit = observer(() => {\n    const { contract_info } = useContractDetails();\n    const { limit_order } = contract_info;\n    const { isTakeProfitVisible } = getContractDetailsConfig(contract_info.contract_type ?? '');\n    return isTakeProfitVisible ? (\n        <RiskManagementItem\n            label={<Localize i18n_default_text='Take profit' />}\n            modal_body_content={\n                <Localize i18n_default_text='When your profit reaches or exceeds the set amount, your trade will be closed automatically.' />\n            }\n            value={limit_order?.take_profit?.order_amount}\n            type='take_profit'\n        />\n    ) : null;\n});\n\nexport default TakeProfit;\n","import { Localize } from '@deriv/translations';\nimport React from 'react';\nimport { getContractDetailsConfig } from 'AppV2/Utils/contract-details-config';\nimport { observer } from '@deriv/stores';\nimport useContractDetails from 'AppV2/Hooks/useContractDetails';\nimport RiskManagementItem from '../RiskManagementItem';\n\nconst StopLoss = observer(() => {\n    const { contract_info } = useContractDetails();\n    const { limit_order } = contract_info;\n    const { isStopLossVisible } = getContractDetailsConfig(contract_info.contract_type ?? '');\n\n    return isStopLossVisible ? (\n        <RiskManagementItem\n            label={<Localize i18n_default_text='Stop loss' />}\n            modal_body_content={\n                <Localize i18n_default_text='When your loss reaches or exceeds the set amount, your trade will be closed automatically.' />\n            }\n            value={limit_order?.stop_loss?.order_amount}\n            type='stop_loss'\n        />\n    ) : null;\n});\n\nexport default StopLoss;\n","import { Localize } from '@deriv/translations';\nimport React from 'react';\nimport { getContractDetailsConfig } from 'AppV2/Utils/contract-details-config';\nimport { observer } from '@deriv/stores';\nimport useContractDetails from 'AppV2/Hooks/useContractDetails';\nimport RiskManagementItem from '../RiskManagementItem';\nimport { isValidToCancel, isOpen } from '@deriv/shared';\nimport CardWrapper from '../CardWrapper';\n\nconst DealCancellation = observer(() => {\n    const { contract_info } = useContractDetails();\n    const { isDealCancellationVisible } = getContractDetailsConfig(contract_info.contract_type ?? '');\n\n    const canCancel = isValidToCancel(contract_info);\n\n    return canCancel && isDealCancellationVisible && isOpen(contract_info) ? (\n        <CardWrapper>\n            <RiskManagementItem\n                label={<Localize i18n_default_text='Deal cancellation' />}\n                modal_body_content={\n                    <Localize i18n_default_text='When this is active, you can cancel your trade within the chosen time frame. Your stake will be returned without loss.' />\n                }\n                is_deal_cancellation\n            />\n        </CardWrapper>\n    ) : null;\n});\n\nexport default DealCancellation;\n","import React from 'react';\nimport { Button, TButtonColor } from '@deriv-com/quill-ui';\nimport { RemainingTime } from '@deriv/components';\nimport { TContractInfo, getCardLabelsV2, isMultiplierContract, isValidToCancel, isValidToSell } from '@deriv/shared';\nimport { useStore } from '@deriv/stores';\nimport { observer } from 'mobx-react-lite';\nimport { TRegularSizesWithExtraLarge } from '@deriv-com/quill-ui/dist/types';\nimport { FormatUtils } from '@deriv-com/utils';\n\ntype ContractInfoProps = {\n    contract_info: TContractInfo;\n};\n\ntype ButtonProps = {\n    color: TButtonColor;\n    size: TRegularSizesWithExtraLarge;\n    fullWidth: boolean;\n};\n\nconst ContractDetailsFooter = observer(({ contract_info }: ContractInfoProps) => {\n    const {\n        bid_price,\n        currency,\n        contract_id,\n        cancellation: { date_expiry: cancellation_date_expiry } = {},\n        profit,\n        contract_type,\n    } = contract_info;\n\n    const { contract_replay, common } = useStore();\n    const { server_time } = common;\n    const { onClickCancel, onClickSell, is_sell_requested } = contract_replay;\n    const is_valid_to_sell = isValidToSell(contract_info);\n    const is_valid_to_cancel = isValidToCancel(contract_info);\n    const is_multiplier = isMultiplierContract(contract_type);\n\n    const card_labels = getCardLabelsV2();\n    const formatted_bid_price = FormatUtils.formatMoney(bid_price || 0, {\n        currency: currency as 'USD', // currency types mismatched between utils and shared\n    });\n    const is_close_button_disabled = Number(profit) < 0 && is_valid_to_cancel;\n    const bid_details = is_close_button_disabled ? '' : `${formatted_bid_price} ${currency}`;\n    const label = `${card_labels.CLOSE} ${bid_details}`;\n    const button_props: ButtonProps = {\n        color: 'black-white',\n        size: 'lg',\n        fullWidth: true,\n    };\n\n    return (\n        <div className='contract-details-footer--container'>\n            {is_multiplier ? (\n                <>\n                    <span className='contract-details-footer-button__wrapper'>\n                        <Button\n                            label={label}\n                            isLoading={is_sell_requested}\n                            disabled={is_close_button_disabled}\n                            onClick={() => onClickSell(contract_id)}\n                            {...button_props}\n                        />\n                    </span>\n                    {is_valid_to_cancel && (\n                        <span className='contract-details-footer-button__wrapper'>\n                            <Button\n                                onClick={() => onClickCancel(contract_id)}\n                                label={\n                                    <>\n                                        {card_labels.CANCEL}{' '}\n                                        <RemainingTime\n                                            as='span'\n                                            end_time={cancellation_date_expiry}\n                                            format='mm:ss'\n                                            getCardLabels={getCardLabelsV2}\n                                            start_time={server_time}\n                                        />\n                                    </>\n                                }\n                                disabled={Number(profit) >= 0}\n                                variant='secondary'\n                                {...button_props}\n                            />\n                        </span>\n                    )}\n                </>\n            ) : (\n                <span className='contract-details-footer-button__wrapper'>\n                    <Button\n                        label={\n                            is_valid_to_sell\n                                ? `${card_labels.CLOSE} ${formatted_bid_price} ${currency}`\n                                : card_labels.RESALE_NOT_OFFERED\n                        }\n                        isLoading={is_sell_requested && is_valid_to_sell}\n                        isOpaque\n                        onClick={is_valid_to_sell ? () => onClickSell(contract_id) : undefined}\n                        disabled={!is_valid_to_sell}\n                        variant='primary'\n                        {...button_props}\n                    />\n                </span>\n            )}\n        </div>\n    );\n});\n\nexport default ContractDetailsFooter;\n","import ContractDetailsFooter from './contract-details-footer';\nimport './contract-details-footer.scss';\n\nexport default ContractDetailsFooter;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { CaptionText, Text } from '@deriv-com/quill-ui';\nimport {\n    TContractInfo,\n    formatDate,\n    formatTime,\n    getCardLabels,\n    getStartTime,\n    hasForwardContractStarted,\n    isEnded,\n    isForwardStarting,\n    toMoment,\n} from '@deriv/shared';\nimport { TClosedPosition } from 'AppV2/Containers/Positions/positions-content';\nimport { Localize } from '@deriv/translations';\nimport { RemainingTime } from '@deriv/components';\nimport { TRootStore } from 'Types';\nimport { LabelPairedStopwatchMdBoldIcon } from '@deriv/quill-icons';\n\ntype TForwardStartingBannerProps = {\n    class_name?: string;\n    contract_info: TContractInfo | TClosedPosition['contract_info'];\n    server_time?: TRootStore['common']['server_time'];\n};\n\nconst ForwardStartingBanner = ({ class_name, contract_info, server_time }: TForwardStartingBannerProps) => {\n    const { purchase_time, sell_time, shortcode } = contract_info;\n    const is_sold = !!sell_time || isEnded(contract_info as TContractInfo);\n    const is_forward_starting = isForwardStarting(shortcode ?? '', purchase_time);\n    const start_time = getStartTime(shortcode ?? '');\n    const has_forward_contract_started = hasForwardContractStarted(shortcode ?? '');\n    const show_banner = is_forward_starting && !!start_time && !has_forward_contract_started && !is_sold;\n\n    if (!show_banner) return null;\n\n    return (\n        <div className={clsx('banner__wrapper', class_name)}>\n            <div className='banner__content--left'>\n                <CaptionText size='sm' className='banner__text'>\n                    <Localize i18n_default_text='This contract starts on' />\n                </CaptionText>\n                <CaptionText bold size='sm' className='banner__text'>\n                    {formatDate(toMoment(parseInt(start_time || '')), 'DD MMM YYYY')}\n                    {', '}\n                    {formatTime(parseInt(start_time || ''), 'HH:mm [GMT]')}\n                </CaptionText>\n            </div>\n            <Text bold size='md' className='banner__timer' as='div'>\n                <LabelPairedStopwatchMdBoldIcon fill='var(--component-textIcon-static-prominentDark)' />\n                <RemainingTime\n                    as='span'\n                    className='banner__timer__countdown'\n                    end_time={parseInt(start_time || '')}\n                    getCardLabels={getCardLabels}\n                    start_time={server_time as moment.Moment}\n                    key='remaining-time'\n                />\n            </Text>\n        </div>\n    );\n};\n\nexport default ForwardStartingBanner;\n","import ForwardStartingBanner from './forward-starting-banner';\nimport './forward-starting-banner.scss';\n\nexport default ForwardStartingBanner;\n","import React from 'react';\nimport { observer, useStore } from '@deriv/stores';\nimport { Text, IconButton } from '@deriv-com/quill-ui';\nimport { LabelPairedArrowLeftSmBoldIcon } from '@deriv/quill-icons';\nimport { Localize } from '@deriv/translations';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { isEmptyObject } from '@deriv/shared';\n\nconst ContractDetailsHeader = observer(() => {\n    const { state } = useLocation();\n    const history = useHistory();\n    const { common } = useStore();\n    const { routeBackInApp } = common;\n\n    const handleBack = () => {\n        const is_from_table_row = !isEmptyObject(state) ? state.from_table_row : false;\n        return is_from_table_row\n            ? history.goBack()\n            : routeBackInApp(history as unknown as Parameters<typeof routeBackInApp>[0]);\n    };\n\n    return (\n        <header className='header contract-details-header-v2'>\n            <React.Suspense fallback={<div />}>\n                <IconButton\n                    variant='tertiary'\n                    icon={<LabelPairedArrowLeftSmBoldIcon height='22px' width='13px' data-testid='arrow' key='arrow' />}\n                    className='arrow'\n                    color='black-white'\n                    onClick={handleBack}\n                />\n                <Text size='md' bold color='quill-typography__color--prominent'>\n                    <Localize i18n_default_text='Contract Details' />\n                </Text>\n            </React.Suspense>\n        </header>\n    );\n});\n\nexport default ContractDetailsHeader;\n","import ContractDetailsHeader from './contract-details-header';\n\nexport default ContractDetailsHeader;\n","import React from 'react';\nimport EntryExitDetails from 'AppV2/Components/EntryExitDetails';\nimport TakeProfitHistory from 'AppV2/Components/TakeProfitHistory';\nimport PayoutInfo from 'AppV2/Components/PayoutInfo';\nimport ContractDetailsChart from '../Chart/contract-details-chart';\nimport CardWrapper from 'AppV2/Components/CardWrapper';\nimport { observer, useStore } from '@deriv/stores';\nimport useContractDetails from 'AppV2/Hooks/useContractDetails';\nimport OrderDetails from 'AppV2/Components/OrderDetails';\nimport { getContractDetailsConfig } from 'AppV2/Utils/contract-details-config';\nimport TakeProfit from 'AppV2/Components/TakeProfit/take-profit';\nimport StopLoss from 'AppV2/Components/StopLoss/stop-loss';\nimport DealCancellation from 'AppV2/Components/DealCancellation/deal-cancellation';\nimport {\n    isForwardStarting,\n    isMultiplierContract,\n    isOpen,\n    isValidToCancel,\n    WS,\n    TContractStore,\n    isValidToSell,\n    hasContractEntered,\n    isAccumulatorContract,\n} from '@deriv/shared';\nimport { Loading } from '@deriv/components';\nimport classNames from 'classnames';\nimport ContractDetailsFooter from 'AppV2/Components/ContractDetailsFooter';\nimport { ContractCard } from 'AppV2/Components/ContractCard';\nimport ForwardStartingBanner from 'AppV2/Components/ForwardStartingBanner';\nimport ContractDetailsHeader from 'AppV2/Components/ContractDetailsHeader';\n\nconst ContractDetails = observer(() => {\n    const { contract_info, is_loading } = useContractDetails();\n    const { contract_id, currency, contract_type, limit_order } = contract_info;\n    const { take_profit, stop_loss } = limit_order ?? { take_profit: {}, stop_loss: {} };\n    const [update_history, setUpdateHistory] = React.useState<TContractUpdateHistory>([]);\n    const { common } = useStore();\n    const { server_time } = common;\n    const { isTakeProfitVisible, isStopLossVisible } = getContractDetailsConfig(contract_type ?? '');\n    const canSell = isValidToSell(contract_info);\n    type TContractUpdateHistory = TContractStore['contract_update_history'];\n    type TResponse = {\n        contract_update_history: TContractUpdateHistory;\n    };\n\n    const getSortedUpdateHistory = (history: TContractUpdateHistory) =>\n        history.sort((a, b) => Number(b?.order_date) - Number(a?.order_date));\n    const requestUpdatedHistory = React.useCallback((id?: number) => {\n        if (!id) return;\n        WS.contractUpdateHistory(id)\n            .then((response: TResponse) => {\n                setUpdateHistory(getSortedUpdateHistory(response.contract_update_history));\n            })\n            .catch(() => null);\n    }, []);\n\n    React.useEffect(() => {\n        requestUpdatedHistory(contract_id);\n    }, [contract_id, take_profit?.order_amount, stop_loss?.order_amount, requestUpdatedHistory]);\n\n    if (is_loading) return <Loading.DTraderV2 is_contract_details />;\n\n    const isMultiplier = isMultiplierContract(contract_info.contract_type);\n\n    const canCancel = isValidToCancel(contract_info);\n    const shouldShowSell =\n        (hasContractEntered(contract_info) ||\n            isForwardStarting(contract_info?.shortcode ?? '', contract_info.purchase_time)) &&\n        isOpen(contract_info);\n    const { isTpHistoryVisible, isDealCancellationVisible } = getContractDetailsConfig(\n        contract_info.contract_type ?? ''\n    );\n    const showCancelButton = isMultiplier && canCancel;\n    let showRiskManagement =\n        isOpen(contract_info) && (isTakeProfitVisible || isStopLossVisible) && (canSell || isDealCancellationVisible);\n\n    if (isAccumulatorContract(contract_info.contract_type)) {\n        showRiskManagement = isOpen(contract_info) && Boolean(limit_order);\n    }\n    return (\n        <>\n            <ContractDetailsHeader />\n            <div\n                className={classNames('contract-details', {\n                    'contract-details--two-buttons': shouldShowSell && showCancelButton,\n                    'contract-details--one-button': shouldShowSell && !showCancelButton,\n                })}\n            >\n                <ForwardStartingBanner contract_info={contract_info} server_time={server_time} />\n                <ContractCard contractInfo={contract_info} serverTime={server_time} currency={currency} />\n                <ContractDetailsChart />\n                <DealCancellation />\n                {showRiskManagement && (\n                    <CardWrapper>\n                        <TakeProfit />\n                        <StopLoss />\n                    </CardWrapper>\n                )}\n                <OrderDetails contract_info={contract_info} />\n                <PayoutInfo contract_info={contract_info} />\n                <EntryExitDetails contract_info={contract_info} />\n                {isTpHistoryVisible && update_history.length > 0 && (\n                    <TakeProfitHistory history={update_history} currency={currency} is_multiplier={isMultiplier} />\n                )}\n            </div>\n            {shouldShowSell && <ContractDetailsFooter contract_info={contract_info} />}\n        </>\n    );\n});\n\nexport default ContractDetails;\n","import ContractDetails from './contract-details';\nimport './contract-details.scss';\n\nexport default ContractDetails;\n","import { lazy } from 'react';\nimport { routes } from '@deriv/shared';\nimport Trade from 'AppV2/Containers/Trade';\nimport Positions from 'AppV2/Containers/Positions';\nimport { TRouteConfig } from 'Types';\nimport ContractDetails from 'AppV2/Containers/ContractDetails';\n\ntype TRouteConfigExtended = Omit<TRouteConfig, 'routes'> & {\n    path: string;\n    component: React.ComponentType;\n    default: boolean;\n};\n\nconst traderRoutes: TRouteConfigExtended[] = [\n    {\n        path: routes.trade,\n        component: Trade,\n        exact: true,\n        default: false,\n    },\n    {\n        path: routes.trader_positions,\n        component: Positions,\n        is_authenticated: true,\n        default: false,\n    },\n    {\n        path: routes.contract,\n        component: ContractDetails,\n        is_authenticated: true,\n        default: false,\n    },\n    {\n        // default route\n        path: '/*',\n        component: lazy(() => import('Modules/Page404')),\n        default: false,\n    },\n];\n\nexport default traderRoutes;\n","import React, { Suspense } from 'react';\nimport { Switch } from 'react-router-dom';\nimport { UILoader, RouteWithSubroutes } from '@deriv/components';\nimport traderRoutes from './routes';\nimport { observer, useStore } from '@deriv/stores';\nimport Page404 from 'Modules/Page404';\n\nconst Router: React.FC = () => {\n    const { client, common, portfolio } = useStore();\n    const { is_logged_in } = client;\n    const { current_language } = common;\n    const { onMount, onUnmount } = portfolio;\n\n    React.useEffect(() => {\n        onMount();\n        return onUnmount;\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return (\n        <Suspense fallback={<UILoader />}>\n            <Switch>\n                {traderRoutes.map((route, index) => (\n                    <RouteWithSubroutes\n                        key={index}\n                        is_logged_in={is_logged_in}\n                        language={current_language}\n                        Component404={Page404}\n                        should_redirect_login\n                        routes={traderRoutes}\n                        to=''\n                        {...route}\n                    />\n                ))}\n            </Switch>\n        </Suspense>\n    );\n};\n\nexport default observer(Router);\n","import React from 'react';\nimport { localize } from '@deriv/translations';\nimport { useLocation } from 'react-router-dom';\nimport { observer, useStore } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { useSnackbar, SnackbarController } from '@deriv-com/quill-ui';\nimport { getStaticUrl, isEmptyObject, isValidToCancel, routes } from '@deriv/shared';\nimport useContractDetails from 'AppV2/Hooks/useContractDetails';\nimport { checkIsServiceModalError, SERVICE_ERROR } from 'AppV2/Utils/layout-utils';\nimport { getDisplayedContractTypes } from 'AppV2/Utils/trade-types-utils';\n\nconst ServicesErrorSnackbar = observer(() => {\n    const {\n        common: { services_error, resetServicesError },\n        ui: { is_mf_verification_pending_modal_visible },\n        client: { is_logged_in },\n    } = useStore();\n    const { is_multiplier, proposal_info, validation_errors, trade_types, contract_type, trade_type_tab } =\n        useTraderStore();\n    const { contract_info } = useContractDetails();\n    const { addSnackbar } = useSnackbar();\n    const { pathname } = useLocation();\n\n    const { code, message } = services_error || {};\n    const has_services_error = !isEmptyObject(services_error);\n    const is_modal_error = checkIsServiceModalError({ services_error, is_mf_verification_pending_modal_visible });\n    const contract_types = getDisplayedContractTypes(trade_types, contract_type, trade_type_tab);\n\n    // Some BO errors comes inside of proposal and we store them inside of proposal_info.\n    // Such error have no error_field and it is one of the main differences from trade parameters errors (duration, stake and etc).\n    // Another difference is that trade params errors arrays in validation_errors are empty.\n    const { has_error, error_field, message: contract_error_message } = proposal_info[contract_types[0]] ?? {};\n    const contract_error =\n        has_error && !error_field && !Object.keys(validation_errors).some(key => validation_errors[key].length);\n\n    const checkShouldShowErrorSnackBar = () => {\n        if (!has_services_error && !contract_error) return false;\n        if (pathname === routes.trade) return (has_services_error && !is_modal_error) || contract_error;\n        if (pathname === routes.trader_positions || location.pathname.startsWith('/contract/'))\n            return has_services_error;\n        return false;\n    };\n\n    const should_show_error_snackbar = checkShouldShowErrorSnackBar();\n    const should_contain_action = should_show_error_snackbar && code === SERVICE_ERROR.COMPANY_WIDE_LIMIT_EXCEEDED;\n    const bottom_position =\n        location.pathname.startsWith('/contract/') && is_multiplier && isValidToCancel(contract_info)\n            ? '104px'\n            : '48px';\n    const action_props = {\n        actionText: localize('View'),\n        onActionClick: () => window.open(getStaticUrl('tnc/trading-terms.pdf', true)),\n    };\n\n    React.useEffect(() => {\n        if (should_show_error_snackbar) {\n            addSnackbar({\n                message: message ?? contract_error_message,\n                status: 'fail',\n                hasCloseButton: true,\n                hasFixedHeight: false,\n                onSnackbarRemove: resetServicesError,\n                style: {\n                    marginBottom: is_logged_in ? bottom_position : '-8px',\n                    width: 'calc(100% - var(--core-spacing-800)',\n                },\n                ...(should_contain_action ? action_props : {}),\n            });\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [should_show_error_snackbar, should_contain_action]);\n\n    return <SnackbarController />;\n});\n\nexport default ServicesErrorSnackbar;\n","import ServicesErrorSnackbar from './services-error-snackbar';\n\nexport default ServicesErrorSnackbar;\n","import React from 'react';\nimport type { TWebSocket } from 'Types';\nimport initStore from 'App/init-store';\nimport type { TCoreStores } from '@deriv/stores/types';\nimport { routes } from '@deriv/shared';\nimport ModulesProvider from 'Stores/Providers/modules-providers';\nimport TraderProviders from '../trader-providers';\nimport { ReportsStoreProvider } from '../../../reports/src/Stores/useReportsStores';\nimport { NotificationsProvider, SnackbarProvider } from '@deriv-com/quill-ui';\nimport 'Sass/app.scss';\nimport Notifications from './Containers/Notifications';\nimport Router from './Routes/router';\nimport ServicesErrorSnackbar from './Components/ServicesErrorSnackbar';\nimport { sendDtraderV2OpenToAnalytics } from '../Analytics';\n\ntype Apptypes = {\n    passthrough: {\n        root_store: TCoreStores;\n        WS: TWebSocket;\n    };\n};\n\nconst App = ({ passthrough }: Apptypes) => {\n    const root_store = initStore(passthrough.root_store, passthrough.WS);\n\n    React.useEffect(() => {\n        return () => root_store.ui.setPromptHandler(false);\n    }, [root_store]);\n\n    React.useLayoutEffect(() => {\n        const head = document.head;\n        const links = head.querySelectorAll('link[rel=\"stylesheet\"]');\n        const is_last_dtrader = (links[links.length - 1] as HTMLLinkElement)?.href?.includes('/trader');\n        const dtrader_links = [...links].filter(link => (link as HTMLLinkElement)?.href?.includes('/trader'));\n\n        if (is_last_dtrader) return;\n\n        const dtrader_links_clone = dtrader_links?.map(link => link?.cloneNode(true));\n        dtrader_links_clone.forEach(link => head.appendChild(link));\n\n        return () => dtrader_links_clone?.forEach(link => head.removeChild(link));\n    }, []);\n\n    React.useEffect(() => {\n        if (window.location.pathname === routes.trade) {\n            sendDtraderV2OpenToAnalytics();\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [window.location.pathname]);\n\n    return (\n        <TraderProviders store={root_store}>\n            <ReportsStoreProvider>\n                <ModulesProvider store={root_store}>\n                    <NotificationsProvider>\n                        <SnackbarProvider>\n                            <Notifications />\n                            <Router />\n                            <ServicesErrorSnackbar />\n                        </SnackbarProvider>\n                    </NotificationsProvider>\n                </ModulesProvider>\n            </ReportsStoreProvider>\n        </TraderProviders>\n    );\n};\n\nexport default App;\n","import App from './app';\n\nexport default App;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Icon, Text, Modal, Button } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport { TContractInfo, isTabletOs } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\n\ntype TInfoBoxLongcode = { contract_info: TContractInfo };\n\nconst InfoBoxLongcode = observer(({ contract_info }: TInfoBoxLongcode) => {\n    const {\n        ui: { is_mobile },\n    } = useStore();\n    const max_longcode_length = is_mobile ? 47 : 150;\n    const [is_collapsed, setIsCollapsed] = React.useState(true);\n\n    const handleToggle = (e?: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>) => {\n        if (e) {\n            e.preventDefault();\n            if (e.type !== 'keydown' || (e.type === 'keydown' && (e as React.KeyboardEvent).key === 'Enter')) {\n                setIsCollapsed(!is_collapsed);\n            }\n        } else {\n            setIsCollapsed(!is_collapsed);\n        }\n    };\n\n    return (\n        <div className='info-box-longcode'>\n            <Icon icon='IcContractFlag' className='info-box-longcode-icon' size={24} />\n            <div\n                className='info-box-longcode-wrapper'\n                onClick={is_mobile ? handleToggle : undefined}\n                onKeyDown={handleToggle}\n            >\n                <Text\n                    size='xs'\n                    className={classNames('info-box-longcode-text', {\n                        'info-box-longcode-text--collapsed': is_collapsed || is_mobile,\n                        'info-box-longcode-text--collapsed--fixed-height': !isTabletOs && (is_collapsed || is_mobile),\n                    })}\n                >\n                    {contract_info.longcode}\n                </Text>\n                {` `}\n                {contract_info?.longcode && contract_info.longcode.length > max_longcode_length && (\n                    <Text as='a' href='#' size='xs' onClick={handleToggle} className='info-box-longcode-text'>\n                        {is_collapsed || is_mobile ? (\n                            <Localize i18n_default_text='View more' />\n                        ) : (\n                            <Localize i18n_default_text='View less' />\n                        )}\n                    </Text>\n                )}\n            </div>\n            <Modal\n                className='info-box-longcode--modal'\n                is_open={is_mobile && !is_collapsed}\n                title={<Localize i18n_default_text='Trade info' />}\n                has_close_icon={false}\n                should_close_on_click_outside\n                small\n                toggleModal={handleToggle}\n            >\n                <Modal.Body>\n                    <Text size='xs'>{contract_info.longcode}</Text>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button className='info-box-longcode--modal-button' primary large onClick={handleToggle}>\n                        <Localize i18n_default_text='OK' />\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </div>\n    );\n});\n\nexport default InfoBoxLongcode;\n","import React from 'react';\nimport { Icon } from '@deriv/components';\n\ntype TContractError = {\n    message?: string;\n    onClickClose: () => void;\n};\n\n// TODO: move to App/Components, Refactor svg, consider other types, more features;\n// when a general design and more icons for all messages is ready\nconst ContractError = ({ message = '', onClickClose }: TContractError) =>\n    !message ? null : (\n        <div className='message'>\n            <div className='message-icon'>\n                <svg width='16' height='16' viewBox='0 0 16 16'>\n                    <g fill='none' fillRule='evenodd'>\n                        <circle cx='8' cy='8' r='8' fill='#F44336' />\n                        <path\n                            fill='#FFF'\n                            fillRule='nonzero'\n                            d='M8 7.293l3.146-3.147a.5.5 0 0 1 .708.708L8.707 8l3.147 3.146a.5.5 0 0 1-.708.708L8 8.707l-3.146 3.147a.5.5 0 0 1-.708-.708L7.293 8 4.146 4.854a.5.5 0 1 1 .708-.708L8 7.293z'\n                        />\n                    </g>\n                </svg>\n            </div>\n            <div className='message-text'>{message}</div>\n            <div className='message-close' onClick={onClickClose}>\n                <Icon icon='IcCross' />\n            </div>\n        </div>\n    );\n\nexport default ContractError;\n","import React from 'react';\nimport { SlideIn } from 'App/Components/Animations';\nimport InfoBoxLongcode from './info-box-longcode';\nimport ContractError from '../contract-error';\nimport { TContractInfo } from '@deriv/shared';\n\ntype TInfoBox = {\n    contract_info: TContractInfo;\n    error_message?: string;\n    removeError: () => void;\n};\n\nconst InfoBox = ({ contract_info, error_message, removeError }: TInfoBox) => {\n    const is_ready = !!contract_info.longcode;\n    return (\n        <SlideIn is_visible={is_ready} className='info-box-container' keyname='info-box-container'>\n            {!!contract_info.contract_type && (\n                <div className='info-box'>\n                    <InfoBoxLongcode contract_info={contract_info} />\n                </div>\n            )}\n            <ContractError message={error_message} onClickClose={removeError} />\n        </SlideIn>\n    );\n};\n\nexport default InfoBox;\n","import InfoBox from './info-box';\n\nexport default InfoBox;\n","import React from 'react';\nimport Digits from 'Modules/Contract/Components/Digits';\nimport InfoBox from 'Modules/Contract/Components/InfoBox';\nimport BottomWidgets from '../../SmartChart/Components/bottom-widgets';\nimport TopWidgets from '../../SmartChart/Components/top-widgets';\nimport { observer, useStore } from '@deriv/stores';\n\nexport const DigitsWidget = observer(() => {\n    const { contract_replay, ui } = useStore();\n    const { is_mobile } = ui;\n    const { contract_store } = contract_replay;\n    const { contract_info, digits_info, display_status, is_digit_contract, is_ended } = contract_store;\n\n    return (\n        <Digits\n            is_digit_contract={is_digit_contract}\n            is_ended={is_ended}\n            is_mobile={is_mobile}\n            contract_info={contract_info}\n            digits_info={digits_info}\n            display_status={display_status}\n        />\n    );\n});\n\nexport const InfoBoxWidget = observer(() => {\n    const { contract_replay } = useStore();\n    const { contract_store, removeErrorMessage: removeError, error_message } = contract_replay;\n    const { contract_info } = contract_store;\n\n    return <InfoBox contract_info={contract_info} error_message={error_message} removeError={removeError} />;\n});\n\n// Chart widgets passed into SmartCharts\nexport const ChartTopWidgets = () => {\n    return <TopWidgets InfoBox={<InfoBoxWidget />} is_title_enabled={false} />;\n};\nexport const ChartBottomWidgets = () => <BottomWidgets Widget={<DigitsWidget />} />;\n","import React from 'react';\nimport type { TContractInfo } from '@deriv/shared';\nimport ChartMarker from './marker';\n\ntype ResetContractChartElements = {\n    contract_info: TContractInfo;\n};\n\nconst ResetContractChartElements = ({ contract_info }: ResetContractChartElements) => {\n    const { contract_type, entry_spot, reset_time, reset_barrier } = contract_info ?? {};\n    const is_reset_call = /CALL/i.test(contract_type ?? '');\n\n    // Gradient logic: when reset_time has come, we need to reapply gradient. For CALL, shade will be applied to the lowest barrier, for PUT - to the highest barrier\n    let y_axis_coordinates = Math.max(Number(entry_spot), Number(reset_barrier));\n    if (is_reset_call) {\n        y_axis_coordinates = Math.min(Number(entry_spot), Number(reset_barrier));\n    }\n\n    return (\n        <React.Fragment>\n            <ChartMarker\n                is_positioned_behind\n                marker_config={{\n                    ContentComponent: 'div',\n                    x: Number(reset_time),\n                    y: y_axis_coordinates,\n                }}\n                marker_content_props={{\n                    className: `sc-barrier_gradient sc-barrier_gradient--${is_reset_call ? 'to-bottom' : 'to-top'}`,\n                }}\n            />\n            <ChartMarker\n                is_positioned_behind\n                marker_config={{\n                    ContentComponent: 'div',\n                    x: Number(reset_time),\n                    y: Number(reset_barrier),\n                }}\n                marker_content_props={{ className: 'sc-reset_barrier' }}\n            />\n        </React.Fragment>\n    );\n};\n\nexport default React.memo(ResetContractChartElements);\n","import React from 'react';\nimport { usePrevious } from '@deriv/components';\nimport {\n    getDurationPeriod,\n    getDurationUnitText,\n    getEndTime,\n    getPlatformRedirect,\n    hasContractStarted,\n    isDtraderV2DesktopEnabled,\n    isDtraderV2MobileEnabled,\n} from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { ChartBottomWidgets, ChartTopWidgets } from './contract-replay-widget';\nimport ResetContractChartElements from 'Modules/SmartChart/Components/Markers/reset-contract-chart-elements';\nimport { SmartChart } from 'Modules/SmartChart';\nimport ChartMarker from 'Modules/SmartChart/Components/Markers/marker';\nimport { useDevice } from '@deriv-com/ui';\n\nconst ReplayChart = observer(\n    ({\n        is_dark_theme_prop,\n        is_accumulator_contract,\n        is_reset_contract,\n        is_vertical_scroll_disabled,\n    }: {\n        is_dark_theme_prop?: boolean;\n        is_accumulator_contract?: boolean;\n        is_reset_contract?: boolean;\n        is_vertical_scroll_disabled?: boolean;\n    }) => {\n        const trade = useTraderStore();\n        const { contract_replay, common, ui } = useStore();\n        const { isMobile } = useDevice();\n        const { contract_store, chart_state, chartStateChange, margin } = contract_replay;\n        const { contract_config, is_digit_contract, barriers_array, getContractsArray, markers_array, contract_info } =\n            contract_store;\n        const { underlying: symbol, audit_details, barrier_count } = contract_info;\n        const allow_scroll_to_epoch = chart_state === 'READY' || chart_state === 'SCROLL_TO_LEFT';\n        const { app_routing_history, current_language, is_socket_opened } = common;\n        const { is_chart_layout_default, is_chart_countdown_visible } = ui;\n        const { end_epoch, chart_type, start_epoch, granularity } = contract_config || {};\n        const is_dark_theme = is_dark_theme_prop || ui.is_dark_mode_on;\n        const is_sold_before_started =\n            !!contract_info?.is_forward_starting && !hasContractStarted(contract_info) && !!contract_info.is_sold;\n        /**\n         * TODO: remove forcing light theme once DBot supports dark theme\n         * DBot does not support for dark theme since till now,\n         * as a result, if any user come to report detail pages\n         * from DBot, we should force it to have light theme\n         */\n        const from_platform = getPlatformRedirect(app_routing_history);\n        const should_force_light_theme = from_platform.name === 'DBot';\n        const settings = {\n            language: current_language,\n            theme: is_dark_theme && !should_force_light_theme ? 'dark' : 'light',\n            position: is_chart_layout_default ? 'bottom' : 'left',\n            countdown: is_chart_countdown_visible,\n            assetInformation: false, // ui.is_chart_asset_info_visible,\n            isHighestLowestMarkerEnabled: false, // TODO: Pending UI\n        };\n        const scroll_to_epoch = allow_scroll_to_epoch && contract_config ? contract_config.scroll_to_epoch : undefined;\n        const all_ticks = audit_details ? audit_details.all_ticks : [];\n        const { wsForget, wsSubscribe, wsSendRequest, wsForgetStream } = trade;\n\n        const isBottomWidgetVisible = () => {\n            return !isMobile && is_digit_contract;\n        };\n\n        const getChartYAxisMargin = () => {\n            const chart_margin = {\n                top: isMobile ? 96 : 148,\n                bottom: isBottomWidgetVisible() ? 128 : 112,\n            };\n\n            if (isMobile) {\n                chart_margin.bottom = 48;\n                chart_margin.top = 48;\n            }\n\n            return chart_margin;\n        };\n        const prev_start_epoch = usePrevious(start_epoch);\n\n        const has_ended = !!getEndTime(contract_info);\n        const is_dtrader_v2_enabled =\n            isDtraderV2DesktopEnabled(ui.is_desktop) || isDtraderV2MobileEnabled(ui.is_mobile);\n\n        return (\n            <SmartChart\n                id='replay'\n                barriers={barriers_array}\n                bottomWidgets={isBottomWidgetVisible() ? ChartBottomWidgets : undefined}\n                chartControlsWidgets={null}\n                chartType={chart_type}\n                endEpoch={end_epoch}\n                margin={margin}\n                isMobile={isMobile}\n                enabledNavigationWidget={!isMobile}\n                enabledChartFooter={false}\n                granularity={granularity}\n                requestAPI={wsSendRequest}\n                requestForget={wsForget}\n                requestForgetStream={wsForgetStream}\n                crosshair={isMobile ? 0 : undefined}\n                maxTick={isMobile ? 8 : undefined}\n                requestSubscribe={wsSubscribe}\n                settings={settings}\n                startEpoch={is_sold_before_started ? contract_info.purchase_time : start_epoch}\n                scrollToEpoch={scroll_to_epoch}\n                stateChangeListener={chartStateChange}\n                symbol={symbol}\n                allTicks={all_ticks}\n                topWidgets={is_dtrader_v2_enabled ? () => <React.Fragment /> : ChartTopWidgets}\n                isConnectionOpened={is_socket_opened}\n                isStaticChart={\n                    // forcing chart reload when start_epoch changes to an earlier epoch for ACCU closed contract:\n                    !!is_accumulator_contract && !!end_epoch && Number(start_epoch) < Number(prev_start_epoch)\n                }\n                shouldFetchTradingTimes={false}\n                should_zoom_out_on_yaxis={is_accumulator_contract}\n                yAxisMargin={getChartYAxisMargin()}\n                anchorChartToLeft={isMobile}\n                shouldFetchTickHistory={\n                    getDurationUnitText(getDurationPeriod(contract_info)) !== 'seconds' ||\n                    contract_info.status === 'open'\n                }\n                shouldDrawTicksFromContractInfo={is_accumulator_contract}\n                contractInfo={contract_info}\n                contracts_array={getContractsArray()}\n                isLive={!has_ended}\n                isVerticalScrollEnabled={!is_vertical_scroll_disabled}\n                startWithDataFitMode={true}\n            >\n                {markers_array.map(({ content_config, marker_config, react_key, type }) => (\n                    <ChartMarker\n                        key={react_key}\n                        marker_config={marker_config}\n                        marker_content_props={content_config}\n                        is_positioned_before={(type === 'SPOT_ENTRY' || type === 'SPOT_EXIT') && barrier_count === 2}\n                    />\n                ))}\n                {is_reset_contract && contract_info?.reset_time && (\n                    <ResetContractChartElements contract_info={contract_info} />\n                )}\n            </SmartChart>\n        );\n    }\n);\nexport default ReplayChart;\n","import { useStore } from '@deriv/stores';\nimport { TTradeStore } from 'Types';\nimport moment from 'moment';\n\ntype TTime = {\n    server_time: NonNullable<ReturnType<typeof useStore>['common']['server_time']>;\n    selected_time: moment.Moment;\n    market_open_times: TTradeStore['market_open_times'];\n    market_close_times: TTradeStore['market_close_times'];\n};\n\nconst getClosestTime = (time: moment.Moment | string, interval: number): moment.Moment => {\n    const moment_time = moment(time); // Convert time to a moment object if it's a string\n    return moment_time.minute(Math.ceil(moment_time.minute() / interval) * interval);\n};\n\nexport const getSelectedTime = (\n    server_time: TTime['server_time'],\n    selected_time: TTime['selected_time'],\n    market_open_times: moment.Moment[],\n    market_close_times: moment.Moment[]\n) => {\n    for (let i = 0; i < market_open_times.length; i++) {\n        if (selected_time.isAfter(market_open_times[i]) && selected_time.isBefore(market_close_times[i])) {\n            return getClosestTime(selected_time, 5).format('HH:mm');\n        }\n    }\n\n    for (let i = 0; i < market_open_times.length; i++) {\n        const moment_market_open_time = moment(market_open_times[i]); // Convert market open time to a moment object\n        if (moment_market_open_time.isAfter(server_time)) {\n            return getClosestTime(moment_market_open_time, 5).format('HH:mm');\n        }\n    }\n\n    return getClosestTime(server_time, 5).format('HH:mm');\n};\n\nexport const getBoundaries = (\n    server_time: TTime['server_time'],\n    market_open_times: moment.Moment[],\n    market_close_times: moment.Moment[]\n) => {\n    const boundaries = {\n        start: market_open_times.map(open_time =>\n            server_time.isBefore(open_time) ? moment(open_time).clone() : server_time\n        ),\n        end: market_close_times,\n    };\n\n    if (boundaries.start.length > 0) {\n        boundaries.start[0] = getClosestTime(boundaries.start[0], 5);\n    }\n\n    return boundaries;\n};\n","import { TContractInfo } from '@deriv/shared';\nimport ServerTime from '_common/base/server_time';\n\nexport const isCancellationExpired = (contract_info: TContractInfo) =>\n    !!contract_info.cancellation?.date_expiry &&\n    contract_info.cancellation.date_expiry < (ServerTime.get() as moment.Moment).unix();\n"],"names":["_ref","contract_type","_React$useState2","_slicedToArray","React","is_loading","setIsLoading","_React$useState4","dotLottie","setDotLottie","isMobile","useDevice","getVideoSource","extension","getUrlBase","concat","toLowerCase","lottie_src","onLoad","addEventListener","removeEventListener","className","classNames","CONTRACT_LIST","ACCUMULATORS","Skeleton","width","height","DotLottieReact","autoplay","dotLottieRefCallback","src","loop","getTerm","BARRIER","localize","CONTRACT_VALUE","DEAL_CANCELLATION","ENTRY_SPOT","EXIT_SPOT","EXPIRY","FINAL_PRICE","GROWTH_RATE","PAYOUT","PAYOUT_PER_POINT","PREVIOUS_SPOT_PRICE","RANGE","SLIPPAGE_RISK","STOP_OUT_LEVEL","STOP_LOSS","STRIKE_PRICE","TAKE_PROFIT","getTermDefinition","_ref2","term","_getTerm","result","_defineProperty","Localize","i18n_default_text","VANILLAS","Text","TURBOS","getContractDescription","content","map","_ref3","index","type","text","key","props","bold","size","VideoFragment","as","color","DESCRIPTION_VIDEO_IDS","DESCRIPTION_VIDEO_ID","accumulator","EVEN_ODD","even_odd","HIGHER_LOWER","high_low","MATCHES_DIFFERS","match_diff","MULTIPLIERS","multiplier","OVER_UNDER","over_under","RISE_FALL","rise_fall","TOUCH_NO_TOUCH","touch","vanilla","turbos","getDescriptionVideoIds","_DESCRIPTION_VIDEO_ID2","is_dark_theme","arguments","length","undefined","getDateTo","date_to","today","toMoment","startOf","unix","epochToMoment","add","subtract","getDateFrom","should_load_partially","partial_fetch_time","date_from","_objectSpread","shouldSendDateFrom","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","_asyncToGenerator","apply","_next","_throw","ownKeys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","getOwnPropertyDescriptors","defineProperties","_toPropertyKey","_defineProperties","toPrimitive","String","Number","_toPrimitive","BaseStore","_this","options","_classCallCheck","validation_errors","validation_rules","preSwitchAccountDisposer","pre_switch_account_listener","switchAccountDisposer","switch_account_listener","logoutDisposer","logout_listener","clientInitDisposer","client_init_listener","networkStatusChangeDisposer","network_status_change_listener","themeChangeDisposer","theme_change_listener","realAccountSignupEndedDisposer","real_account_signup_ended_listener","makeObservable","this","observable","retrieveFromStorage","action","setValidationErrorMessages","setValidationRules","addRule","validateProperty","validateAllProperties","onSwitchAccount","bound","onPreSwitchAccount","onLogout","onClientInit","onNetworkStatusChange","onThemeChange","onRealAccountSignupEnd","disposePreSwitchAccount","disposeSwitchAccount","disposeLogout","disposeClientInit","disposeNetworkStatusChange","disposeThemeChange","disposeRealAccountSignupEnd","onUnmount","assertHasValidCache","root_store","local_storage_properties","session_storage_properties","store_name","setTimeout","setupReactionForLocalStorage","setupReactionForSessionStorage","properties","snapshot","toJS","isEmptyObject","reduce","assign","_this2","reaction","saveToStorage","STORAGES","LOCAL_STORAGE","_this3","SESSION_STORAGE","storage","JSON","stringify","getSnapshot","localStorage","setItem","sessionStorage","_this4","local_storage_snapshot","parse","getItem","session_storage_snapshot","k","propertyName","messages","_this5","x","includes","_this6","rules","property","_this7","intercept","change","newValue","_this8","trigger","inputs","validator","Validator","isPassed","errors","get","_this9","error","listener","_this10","when","client","switch_broadcast","switchEndSignal","isProduction","console","_this11","pre_switch_broadcast","_this11$pre_switch_ac","setPreSwitchAccount","_this12","has_logged_out","_callee","_context","setLogout","t0","_this13","initialized_broadcast","_callee2","_context2","setInitialized","_this14","common","is_network_online","is_online","_this15","ui","is_dark_mode_on","_this16","has_real_account_signup_ended","setRealAccountSignupEnd","loginid","_len","reactions","Array","_key","act","_callSuper","_getPrototypeOf","ReferenceError","_assertThisInitialized","_possibleConstructorReturn","_isNativeReflectConstruct","Reflect","construct","Boolean","valueOf","bind","_setPrototypeOf","freeze","ProfitTableStore","_BaseStore","data","has_loaded_all","filtered_date_range","client_loginid","fetchOnScroll","debounce","left","shouldFilterContractTypes","fetchNextBatch","is_empty","computed","has_selected_date","profitTableResponseHandler","handleScroll","networkStatusChangeListener","onMount","override","totals","accountSwitcherListener","clearTable","clearDateFilter","handleDateChange","_inherits","is_mounting","_fetchNextBatch","isMounting","_this$root_store$modu","_this$root_store$modu2","dateParams","params","response","shouldFetchNextBatch","getDateBoundaries","modules","positions","dateFrom","dateTo","filteredContractTypes","WS","profitTable","_x","_x2","message","formatted_transactions","profit_table","transactions","transaction","currency","_transaction$payout","_transaction$sell_pri","_transaction$buy_pric","_transaction$shortcod","active_symbols","format_string","purchase_time","format","purchase_time_unix","sell_time","payout","NaN","sell_price","buy_price","profit_loss","formatMoney","display_name","getSymbolDisplayName","getMarketInformation","shortcode","underlying","formatProfitTableTransactions","filterDisabledPositions","_toConsumableArray","event","_event$target","target","scrollTop","left_to_scroll","scrollHeight","clientHeight","_onMount","forgetAll","wait","_x3","parseFloat","replace","toString","date_values","date_range","from","to","is_batch","setDateFrom","setDateTo","formatStatementTransaction","_transaction$amount","_transaction$balance_","action_type","app_id","contract_id","longcode","withdrawal_details","transaction_time","amount","balance","balance_after","should_exclude_currency","toTitleCase","date","refid","transaction_id","desc","id","StatementStore","account_statistics","statementHandler","handleFilterChange","optional_arguments","_args","statement","filterValue","ReportsStoreContext","ReportsStoreProvider","children","useStore","memoizedValue","ProfitStores","StatementStores","Provider","Notifications","observer","_useNotifications","useNotifications","addBanner","banners","removeBanner","setAddNotificationBannerCallback","portfolio","pathname","useLocation","routes","trade","icon","StandaloneFlagCheckeredFillIcon","iconSize","NotificationBanners","autohideTimeout","onClose","zIndex","fallback_value","_getLocalStorage","getLocalStorage","setData","removeItem","_rows$slice","rows","animation_class","is_moving_transaction","_useState2","useState","animationKey","setAnimationKey","useEffect","prevKey","el","clsx","HEIGHT","ASPECT_RATIO","isTradeParamVisible","_getTradeParams$contr","_getTradeParams","component_key","has_cancellation","symbol","getTradeParams","getChartHeight","is_accumulator","window","innerHeight","isVisible","SERVICE_ERROR","checkIsServiceModalError","services_error","is_mf_verification_pending_modal_visible","_ref4","code","_ref$autoplay","_ref$controls","controls","_ref$letterbox_color","letterbox_color","_ref$loop","_ref$muted","muted","_ref$preload","preload","test_id","title","_objectWithoutProperties","_excluded","encodeURIComponent","join","Square","_extends","allowFullScreen","onActionSheetClose","ActionSheet","Portal","showHandlebar","shouldCloseOnDrag","handleBarPosition","StreamIframe","UNIFIED_MODE_VIDEO_ID","accumulator_stats","Footer","alignment","primaryAction","onAction","Content","StatsRow","item","innerIndex","_rows$","_useTraderStore$ticks","useTraderStore","ticks_history_stats","is_open","setIsOpen","_useState4","is_open_description","setIsOpenDescription","_useState6","setAnimationClass","_useState8","last_value","setLastValue","_useState10","setIsMovingTransition","ticks_history","useMemo","_ticks_history_stats$","ticks_stayed_in","acc","_el","success_timeout","error_timeout","transition_timeout","clearTimeout","is_same_value","onClick","LabelPairedChevronUpSmBoldIcon","fill","Root","isOpen","position","expandable","AccumulatorStatsModal","AccumulatorStatsDescription","onScroll","history","useHistory","location","_useStore","active_positions_count","is_logged_in","bottomNavItems","StandaloneChartAreaRegularIcon","activeIcon","StandaloneChartAreaFillIcon","label","path","Badge","variant","contentSize","StandaloneClockThreeRegularIcon","StandaloneClockThreeFillIcon","trader_positions","navIndex","findIndex","selectedIndex","setSelectedIndex","Navigation","Bottom","onChange","_","handleSelect","BottomAction","selected","showLabel","cache","ongoing_requests","getKey","isArray","useDtraderQuery","request","_options$enabled","enabled","setError","is_fetching","setIsFetching","is_mounted","useRef","request_string","_options$wait_for_aut","wait_for_authorize","current","fetchData","useCallback","_send_promise","send_promise","authorized","send","err","refetch","checkContractTypePrefix","isVanillaContract","isTurbosContract","isRiseFallContract","some","contractTypeCheck","every","contract_types_list","setContractTypesList","trade_types","setTradeTypes","_useTraderStore","setContractTypesListV2","setDefaultStake","processContractsForV2","is_switching","landing_company_shortcode","prev_landing_company_shortcode_ref","isQueryEnabled","isLoginidDefined","_useDtraderQuery","contracts_for_company","landing_company","contract_categories","getContractCategoriesConfig","available_categories","cloneObject","contract_types","getContractTypesConfig","_React$useState6","available_contract_types","setAvailableContractTypes","is_fetching_ref","isContractTypeAvailable","getTradeTypes","categories","getTradeTypesList","getNewContractType","processNewContractType","new_contract_type","setTradeURLParams","contractType","available","contract","find","indexOf","barrier_count","_Object$keys$find","_available_categories","category","sub_cats","barrier_category","config","default_stake","resetTradeTypes","_arrayWithHoles","_iterableToArrayLimit","_arrayLikeToArray","test","_unsupportedIterableToArray","_nonIterableRest","_available_contract_t","_getContractTypesConf","_getContractTypesConf2","showError","current_language","symbols_from_store","is_vanilla","is_turbos","setActiveSymbolsV2","activeSymbols","setActiveSymbols","_useContractsForCompa","useContractsForCompany","is_contracts_loading_ref","trade_types_with_barrier_category","TRADE_TYPES","RISE_FALL_EQUAL","HIGH_LOW","CONTRACT_TYPES","LONG","SHORT","VANILLA","CALL","PUT","process","_response$active_symb","opening_time","days_offset","formatted_opening_time","convertTimeFormat","opening_date","Date","locale","CaptionText","time_left","timer_components","hours","days","padStart","minutes","seconds","LabelPairedStopwatchMdBoldIcon","calculateTimeLeft","remaining_time_to_open","difference","now","Math","floor","getSymbol","target_symbol","trading_times","markets","submarkets","j","symbols","getTradingTimes","target_time","tradingTimes","api_initial_load_error","prepareTradeStore","is_market_closed","useActiveSymbols","isMounted","useIsMounted","when_market_opens","setWhenMarketOpens","setTimeLeft","setLoading","whenMarketOpens","target_date","api_response","returned_symbol","open","close","date_str","getUTCDate","times","toISOString","substring","hour","timer","MarketOpeningTimeBanner","MarketCountdownTimer","ACTIONS","CurrentSpotDisplay","has_tick_count","spot","tick","last_digit","prev_spot","usePrevious","prev_last_digit","should_enter_from_top","setShouldEnterFromTop","should_enter_from_bottom","setShouldEnterFromBottom","next_displayed_last_digit","setNextDisplayedLastDigit","_React$useState8","displayed_last_digit","setDisplayedLastDigit","last_digit_ref","spin_interval_id","spin_timeout_id","spinning_wrapper_ref","_spinning_wrapper_ref","diff","abs","timeout_speed","should_increment","style","setProperty","interval_ms","start","end","clearInterval","interval_id","setInterval","spinLastDigit","current_tick","ref","Heading","H2","STATUS","CurrentSpot","_last_contract$contra","_last_contract$contra2","_last_contract$contra3","_tick","contract_switching_timer","contract_trade","last_contract","prev_contract","contract_info","entry_tick","_ref$contract_info","_ref$digits_info","digits_info","display_status","is_digit_contract","is_ended","tick_data","date_start","tick_stream","prev_contract_id","last_contract_ticks","prev_last_contract_ticks","is_contract_elapsed","isContractElapsed","is_prev_contract_elapsed","status","_toJS","epoch","latest_stream_tick","tick_display_value","ask","bid","pip_size","split","quote","is_digit_contract_ended","is_won","is_lost","digits_array","sort","b","spot_time","last_contract_digit","latest_tick_pip_size","latest_tick_quote_price","toFixed","latest_tick_digit","latest_digit","digit","displayed_tick","setDisplayedTick","displayed_spot","setDisplayedSpot","barrier","is_winning","isDigitContractWinning","has_contract","has_open_contract","has_relevant_tick_data","should_show_tick_count","should_enter_from_left","setNewData","_last_contract$contra4","SymbolsSearchField","isSearching","setIsSearching","searchValue","setSearchValue","contract_name","inputRef","inputElement","handleFocus","SearchField","inputSize","placeholder","Button","symbolsList","marketOrderMap","market","marketOrderA","marketOrderB","submarket_display_name","localeCompare","marketIcons","frxAUDCAD","MarketForexAudcadIcon","frxAUDCHF","MarketForexAudchfIcon","frxAUDJPY","MarketForexAudjpyIcon","frxAUDNZD","MarketForexAudnzdIcon","frxAUDUSD","MarketForexAudusdIcon","WLDAUD","MarketDerivedAudBasketIcon","RDBEAR","MarketDerivedBearIcon","BOOM1000","MarketDerivedBoom1000Icon","BOOM600","MarketDerivedBoom600Icon","BOOM900","MarketDerivedBoom900Icon","BOOM300N","MarketDerivedBoom300Icon","BOOM500","MarketDerivedBoom500Icon","RDBULL","MarketDerivedBullIcon","CRASH1000","MarketDerivedCrash1000Icon","CRASH600","MarketDerivedCrash600Icon","CRASH900","MarketDerivedCrash900Icon","CRASH300N","MarketDerivedCrash300Icon","CRASH500","MarketDerivedCrash500Icon","frxXAGUSD","MarketCommoditySilverusdIcon","frxXAUUSD","MarketCommodityGoldusdIcon","frxXPDUSD","MarketCommodityPalladiumusdIcon","frxXPTUSD","MarketCommodityPlatinumusdIcon","cryBTCUSD","MarketCryptocurrencyBtcusdIcon","cryETHUSD","MarketCryptocurrencyEthusdIcon","WLDEUR","MarketDerivedEurBasketIcon","WLDGBP","MarketDerivedGbpBasketIcon","WLDXAU","MarketDerivedGoldBasketIcon","JD10","MarketDerivedJump10Icon","JD100","MarketDerivedJump100Icon","JD25","MarketDerivedJump25Icon","JD50","MarketDerivedJump50Icon","JD75","MarketDerivedJump75Icon","stpRNG","MarketDerivedStepIndices100Icon","stpRNG2","MarketDerivedStepIndices200Icon","stpRNG3","MarketDerivedStepIndices300Icon","stpRNG4","MarketDerivedStepIndices400Icon","stpRNG5","MarketDerivedStepIndices500Icon","WLDUSD","MarketDerivedUsdBasketIcon","MarketDerivedVolatility101sIcon","MarketDerivedVolatility1001sIcon","MarketDerivedVolatility1501sIcon","MarketDerivedVolatility2501sIcon","MarketDerivedVolatility251sIcon","MarketDerivedVolatility501sIcon","MarketDerivedVolatility751sIcon","frxEURAUD","MarketForexEuraudIcon","frxEURCAD","MarketForexEurcadIcon","frxEURCHF","MarketForexEurchfIcon","frxEURGBP","MarketForexEurgbpIcon","frxEURJPY","MarketForexEurjpyIcon","frxEURNZD","MarketForexEurnzdIcon","frxEURUSD","MarketForexEurusdIcon","frxGBPAUD","MarketForexGbpaudIcon","frxGBPCAD","MarketForexGbpcadIcon","frxGBPCHF","MarketForexGbpchfIcon","frxGBPJPY","MarketForexGbpjpyIcon","frxGBPNOK","MarketForexGbpnokIcon","frxGBPNZD","MarketForexGbpnzdIcon","frxGBPUSD","MarketForexGbpusdIcon","frxNZDJPY","MarketForexNzdjpnIcon","frxNZDUSD","MarketForexNzdusdIcon","frxUSDCAD","MarketForexUsdcadIcon","frxUSDCHF","MarketForexUsdchfIcon","frxUSDJPY","MarketForexUsdjpyIcon","frxUSDMXN","MarketForexUsdmxnIcon","frxUSDNOK","MarketForexUsdnokIcon","frxUSDPLN","MarketForexUsdplnIcon","frxUSDSEK","MarketForexUsdsekIcon","OTC_AS51","MarketIndicesAustralia200Icon","OTC_SX5E","MarketIndicesEuro50Icon","OTC_FCHI","MarketIndicesFrance40Icon","OTC_GDAXI","MarketIndicesGerman40Icon","OTC_HSI","MarketIndicesHongKong50Icon","OTC_N225","MarketIndicesJapan225Icon","OTC_AEX","MarketIndicesNetherlands25Icon","OTC_SSMI","MarketIndicesSwiss20Icon","OTC_FTSE","MarketIndicesUk100Icon","OTC_SPC","MarketIndicesUs500Icon","OTC_NDX","MarketIndicesUsTech100Icon","OTC_DJI","MarketIndicesWallStreet30Icon","R_10","MarketDerivedVolatility10Icon","R_100","MarketDerivedVolatility100Icon","R_25","MarketDerivedVolatility25Icon","R_50","MarketDerivedVolatility50Icon","R_75","MarketDerivedVolatility75Icon","IconComponent","MarketCategoryItem","forwardRef","selectedSymbol","setSelectedSymbol","isFavorite","setIsFavorite","onSymbolChange","useModulesStore","favoriteSymbols","setFavoriteSymbols","removeFavoriteSymbol","addSnackbar","useSnackbar","handleSelectDecorator","currentTarget","getAttribute","clickAndKeyEventHandler","toggleFavoritesDecorator","StandaloneStarRegularIcon","hasCloseButton","StandaloneStarFillIcon","toggleFavorites","onKeyDown","SymbolIconsMapper","exchange_is_open","Tag","showIcon","clientFavoriteList","client_fav_symbol","symbol_info","sortSymbols","useGetFavoriteSymbols","NoFavoriteSymbols","itemRefs","prevSymbol","_itemRefs$current$sel","scrollIntoView","block","Tab","Panel","market_display_name","entries","subgroups","subgroupKey","subgroup","subgroup_display_name","_ref5","submarketKey","submarket","items","FavoriteSymbols","Trigger","marketCategoriesRef","categorizedSymbols","_acc$market","_acc$market$subgroups","_acc$market$subgroups2","_acc$market$subgroups3","_acc$market$subgroups4","sortedSubmarkets","sortedAcc","_ref6","allCategory","newKey","newName","favorites","all","categorizeSymbols","List","MarketCategoryTab","MarketCategory","searchTerm","searchResults","trim","useGetSymbolSearchResults","SymbolNotFound","ActiveSymbolsList","setTickData","setDigitStats","fullHeightOnOpen","Container","contentStyle","selectedTabIndex","onChangeTab","_marketCategoriesRef$","scrollTo","top","SymbolSearchResults","sendMarketTypeToAnalytics","MarketCategories","MarketSelector","storeSymbol","currentSymbol","current_spot","current_spot_replacement","rounded","LabelPairedChevronDownMdRegularIcon","isLastStep","primaryProps","skipProps","step","tooltipProps","setStepIndex","swipe_handlers","useSwipeable","onSwipedUp","_document$querySelect","document","querySelector","preventDefaultTouchmoveEvent","trackTouch","trackMouse","LabelPairedChevronsUpXlBoldIcon","IconButton","LabelPairedXmarkSmBoldIcon","offset","spotlightPadding","placement","disableBeacon","styles","spotlight","display","arrow","disableScrolling","GuideContainer","should_run","onFinishGuide","step_index","Joyride","continuous","callback","FINISHED","SKIPPED","disableCloseOnEsc","disableOverlayClose","floaterProps","spread","run","showSkipButton","steps","STEPS","scrollToFirstStep","arrowColor","overlayColor","borderRadius","stepIndex","tooltipComponent","GuideTooltip","replaceAll","mp4_src","autoPlay","onLoadedData","playsInline","OnboardingGuide","_ref$type","is_modal_open","setIsModalOpen","should_run_guide","setShouldRunGuide","guide_timeout_ref","is_button_clicked_ref","_useLocalStorageData2","useLocalStorageData","trade_types_selection","trade_page","positions_page","guide_dtrader_v2","setGuideDtraderV2","is_trade_page_guide","onGuideSkip","modal_content","image","OnboardingVideo","button_label","primaryButtonCallback","Modal","isOpened","isNonExpandable","showHandleBar","shouldCloseModalOnSwipeDown","toggleModal","primaryButtonLabel","Header","Body","has_open_accu_contract","has_no_button_content","info","is_multiplier","is_reverse","_getLocalizedBasis","getLocalizedBasis","stake","text_basis","obj_contract_basis","getAmount","is_content_empty","Money","should_format","show_currency","PurchaseButton","loading_button_index","setLoadingButtonIndex","_useStore$portfolio","all_positions","onClickSell","open_accu_contract","active_positions","_useStore$ui","setIsMFVericationPendingModal","is_purchase_enabled","is_touch","is_trade_enabled_v2","is_vanilla_fx","proposal_info","purchase_info","onPurchaseV2","trade_type_tab","is_sell_button_visible","setIsSellButtonVisibile","animation_duration","setAnimationDuration","prev_has_open_accu_contract","isAccumulatorContract","mf_account_status","useMFAccountStatus","is_high_low","purchase_button_content_props","getDisplayedContractTypes","active_accu_contract","is_sold","is_valid_to_sell","hasContractEntered","isValidToSell","current_stake","getIndicativePrice","cardLabels","getCardLabelsV2","is_modal_error","is_accu_sell_disabled","is_sell_requested","getButtonType","trade_type","tab_index","getTradeTypeTabsList","tab","addNotificationBannerCallback","sendDtraderV2PurchaseToAnalytics","StandaloneStopwatchRegularIcon","CSSTransition","in","timeout","unmountOnExit","mountOnEnter","is_single_button","is_disabled","has_error","getContractTypeDisplay","isHighLow","showButtonName","fullWidth","isLoading","isOpaque","disabled","MT5_ACCOUNT_STATUS","PENDING","PurchaseButtonContent","CLOSE","error_type","services_error_message","getContent","has_wallet","is_virtual","resetServicesError","clearPurchaseInfo","resetPurchase","requestProposal","is_insufficient_balance","is_authorization_required","is_account_verification_required","should_show_error_modal","ServiceErrorDescription","primaryButtonColor","_history$push","wallets_deposit","cashier_deposit","redirectToSignUp","secondaryAction","redirectToLogin","getLanguage","proof_of_identity","_proposal_info$contra","error_fields","proposal_has_error","proposal_error_field","error_field","proposal_error_message","field","_validation_errors$fi","_validation_errors$fi2","validation_has_error","is_error_matching_field","checkErrorForField","should_show_snackbar","_useTradeError","useTradeError","hasFixedHeight","marginBottom","SnackbarController","H4","AccumulatorsTradeDescription","makeLazyLoader","moduleLoader","Loading","is_fullscreen","MultiplierTradeDescriptions","VanillasTradeDescription","TurbosTradeDescription","RiseFallTradeDescription","HigherLowerTradeDescription","TouchNoTouchTradeDescription","MatchesDiffersTradeDescription","EvenOddTradeDescription","OverUnderTradeDescription","trade_type_template","onTermClick","toggleVideoPlayer","video_src","Stream","letterboxColor","responsive","LabelPairedPlayMdFillIcon","contract_list","onChipSelect","selected_contract_type","show_guide_for_selected_contract","_ref$show_description","show_description_in_a_modal","tradeType","Chip","Selectable","TradeDescription","VideoPreview","GuideDescriptionModal","is_video_player_opened","setIsVideoPlayerOpened","modal_ref","guide_content_props","showModal","GuideContent","stopPropagation","VideoPlayer","data_testid","is_mobile","increased_drag_area","Guide","_AVAILABLE_CONTRACTS$","_AVAILABLE_CONTRACTS$2","has_label","is_open_by_default","_ref$show_trigger_but","show_trigger_button","contract_type_title","AVAILABLE_CONTRACTS","order","filtered_contract_list","ordered_contract_list","is_description_opened","setIsDescriptionOpened","setSelectedContractType","selected_term","setSelectedTerm","LabelPairedPresentationScreenSmRegularIcon","sendOpenGuideToAnalytics","_selected_trade_type$","_selected_trade_type$2","selected_trade_type","GuideDefinitionModal","TradeParametersContainer","is_minimized","is_minimized_visible","is_minimized_and_visible","_proposal_info$CONTRA","maximum_payout","ACCUMULATOR","contract_start_type","duration_unit","expiry_type","is_equal","has_callputequal_duration","hasDurationForCallPutEqual","has_callputequal","hasCallPutEqual","openDescription","closeDescription","ToggleSwitch","checked","is_enabled","classname","current_index","header","is_swipeable","is_infinite_loop","onNextButtonClick","onPreviousButtonClick","pages","previous_icon","next_icon","setCurrentIndex","internalIndex","setInternalIndex","HeaderComponent","isControlled","is_rtl","handleNextClick","newIndex","handlePrevClick","onSwipedLeft","onSwipedRight","onNextClick","onPrevClick","component","transform","isDays","chips_options","setInitialBarrierValue","barrier_1","setV2ParamsInitialValues","option","setOption","should_show_error","setShouldShowError","previous_value","setPreviousValue","is_focused","setIsFocused","barrier_ref","show_hidden_error","barrier_element","checkFocus","contains","activeElement","handleOnChange","current_value","startsWith","handleChipSelect","TextField","customType","noStatusIcon","shouldRound","allowDecimals","decimals","allowSign","inputMode","regex","textAlignment","TextFieldAddon","fillAddonBorderColor","addonLabel","shouldCloseOnPrimaryButtonClick","NextIcon","LabelPairedCircleInfoMdRegularIcon","PreviousIcon","LabelPairedArrowLeftMdRegularIcon","iconPosition","_proposal_info$trade_","_proposal_info$trade_2","v2_params_initial_values","initialBarrierValue","barrier_error_shown","setBarrierErrorShown","_proposal_info$trade_3","_proposal_info$trade_4","_proposal_info$trade_5","barrier_carousel_pages","BarrierInput","BarrierDescription","readOnly","shouldBlurOnClose","Carousel","CarouselHeader","BarrierInfo","toUpperCase","duration_units_list","onChangeUnit","unit","show_end_time","_hours$","_minutes$","setWheelPickerValue","selected_hour","selected_time","duration_min_max","setHours","setMinutes","min_seconds","max","intraday","min","max_seconds","min_hours","ceil","max_hours","new_hours","update_minutes","min_minutes","max_minutes","new_minutes","getDefaultValue","selected_value","_options$","opt","WheelPickerContainer","defaultValue","containerHeight","inputValues","setInputValues","getOptionPerUnit","DURATION_UNIT","DAYS","HOURS","HourPicker","start_date","end_date","setEndDate","disabled_days","setDisabledDays","onChangeCalendarMonth","new_disabled_days","events","ContractType","getTradingEvents","evt","dates","DatePicker","hasFixedWidth","minDate","maxDate","setFullYear","getFullYear","view","tileDisabled","day","getDay","wrapperClassName","end_time","setEndTime","current_gmt_time","adjusted_start_time","TimeWheelPickerContainer","is12Hour","startTimeIn24Format","minutesInterval","selectedTime","setSelectedValue","val","hoursInterval","timeToMinutes","time","_time$split$map2","_boundaries$start$","expiry_time_input","saved_expiry_date_v2","setExpiryTimeInput","setUnsavedExpiryDateV2","unsaved_expiry_date_v2","setCurrentGmtTime","setOpen","open_timepicker","setOpenTimePicker","trigger_date","setTriggerDate","setIsDisabled","calendar_date_input","setCalendarDateInput","payout_per_point","setPayoutPerPoint","barrier_value","setBarrierValue","_useState12","setDay","server_time","duration","expiry_date","market_close_times","market_open_times","start_time","trade_store","new_values","basis","proposal_req","getProposalRequestObject","round","_response$error","_response$error2","_response$error3","_response$error3$deta","_response$proposal","_response$error4","_response$proposal2","details","payout_per_point_choices","suggested_payout","barrier_choices","suggested_barrier","proposal","date_expiry","moment_expiry_date","market_open_datetimes","open_time","setTime","clone","market_close_datetimes","close_time","server_datetime","getBoundaries","getClosestTimeToCurrentGMT","formatted_date","toLocaleDateString","month","year","formatted_current_date","updateCurrentGmtTime","gmt_time","toLocaleTimeString","timeZone","hour12","interval","is_24_hours_contract","has_intraday_duration_unit","hasIntradayDurationUnit","parsedFormattedDate","isSameDate","getMonth","getDate","leftIcon","LabelPairedCalendarSmRegularIcon","LabelPairedClockThreeSmRegularIcon","DaysDatepicker","getDatePickerStartDate","difference_in_time","getTime","difference_in_days","EndTimePicker","isPrimaryButtonDisabled","DurationActionSheetContainer","expiry_time_string","setExpiryTimeString","setSavedExpiryDateV2","setSelectedHour","setUnit","onChangeMultiple","setSelectedTime","DurationChips","DurationWheelPicker","num_value","arr","DayInput","MINUTES","expiry_time","Duration","_getUnitMap$duration_","_proposal_info$contra2","expiry_epoch","getUnitMap","name_plural","duration_unit_text","setExpiryDateString","_useState14","contract_type_object","isInitialMount","new_date_string","newDate","setDate","getSmallestDuration","start_duration","_validation_errors$du","error_obj","handleHour","getInputValues","description","is_custom_description","debouncedSetGrowthRate","setGrowthRate","growth_rate","_ref$accumulator_rang","accumulator_range_list","maximum_ticks","should_show_details","tick_size_barrier_percentage","initial_growth_rate","selected_growth_rate","rate","getGrowthRatePercentage","details_content","cancel","WheelPicker","selectedValue","new_value","GrowthRate","is_trade_enabled","is_small_screen","isSmallScreen","is_proposal_data_available","handleGrowthRateChange","action_sheet_content","GrowthRatePicker","TradeParamDefinition","_ref$digit_stats","digit_stats","is_active","is_max","is_min","stats","percentage","display_percentage","_ref$digits","digits","onDigitSelect","selected_digit","row_key","Digit","displayed_digits","_useTraderStore$digit","setSelectedDigit","handleLastDigitChange","LastDigitSelector","debouncedSetMultiplier","setMultiplier","_ref$multiplier_range","multiplier_range_list","commission","multiplier_array","initial_multiplier","selected_multiplier","Multiplier","is_small_screen_device","MultiplierWheelPicker","_proposal_info$CONTRA2","_proposal_info$CONTRA3","_proposal_info$CONTRA4","deal_cancellation_fee_value","MULTIPLIER","UP","cancellation","ask_price","DOWN","expiration","_formatDuration","formatDuration","getDiffDuration","timestamp","getDateFromNow","PayoutPerPointWheel","current_payout_per_point","onPayoutPerPointSelect","payout_per_point_list","setValue","displayed_barrier_value","setDisplayedBarrierValue","is_api_response_received_ref","flat","barrier_spot_distance","onProposalResponse","PayoutPerPoint","payout_choices","currency_display_code","getCurrencyDisplayCode","PayoutPerPointInfo","contract_key","closeActionSheet","has_take_profit","has_stop_loss","cancellation_range_list","cancellation_duration","setIsEnabled","addUnit","getSnackBarText","switching_cancellation","target_id","is_focus","setIsFocus","_window$visualViewpor","is_focus_in","resizeHandler","scale","has_keyboard_changed_viewport","screen","visualViewport","_window$visualViewpor2","is_key_board_visible","_validation_params$co","_validation_params$co2","_validation_params$co3","_validation_params$co4","_proposal_req$limit_o","_proposal_req$limit_o2","_ref$has_save_button","has_save_button","_ref$has_actionsheet_","has_actionsheet_wrapper","initial_error_text","parent_ref","parent_is_api_response_received_ref","take_profit","stop_loss","validation_params","is_take_profit_input","is_api_response_received","new_input_value","setNewInputValue","error_text","setErrorText","fe_error_text","setFEErrorText","_React$useState10","max_length","setMaxLength","input_ref","focused_input_ref","focus_timeout","getDecimalPlaces","Component","min_value","max_value","_React$useState12","setInfo","limit_order","input_message","updateParentRef","field_name","onToggleSwitch","_input_ref$current","focusAndOpenKeyboard","blur","_error$message","_error$details","_error$details2","new_error","is_error_field_match","_validation_params$ty","_validation_params","should_scroll","useIsVirtualKeyboardOpen","_window","behavior","TextFieldWithSteppers","minusDisabled","unitLeft","onBeforeInput","_data","_e$nativeEvent","_new_input_value$leng","nativeEvent","maxLength","opacity","is_tp_enabled","TakeProfitAndStopLossContainer","_validation_errors$ta","_validation_errors$ta2","_validation_errors$ta3","_validation_errors$st","_validation_errors$st2","_validation_errors$st3","tp_error_text","setTPErrorText","tp_ref","is_api_response_tp_received_ref","sl_error_text","setSLErrorText","sl_ref","is_api_response_sl_received_ref","TakeProfitAndStopLossInput","_tp_ref$current","has_take_profit_current","take_profit_current","tp_error_text_current","_sl_ref$current","has_stop_loss_current","stop_loss_current","sl_error_text_current","is_tp_empty","is_sl_empty","is_sl_enabled","switching_tp_sl","_ref$initial_tab_inde","initial_tab_index","should_show_deal_cancellation","setTabIndex","SegmentedControlSingleChoice","hasContainerWidth","selectedItemIndex","DealCancellation","definition","is_displayed","SectionMessage","RiskManagement","RiskManagementPicker","RiskManagementContent","useFetchProposalData","_proposal_request_val","proposal_request_values","proposal_request","query_key","is_loading_proposal","should_show_payout_details","is_first_payout_exceeded","is_second_payout_exceeded","first_contract_payout","max_payout","second_contract_payout","stop_out","displayed_values","setDisplayedValues","getDisplayedValue","commission_value","stop_out_value","new_commission","new_payout_1","new_payout_2","new_stop_out","new_max_payout","payout_title","getTradeTypeName","idx","reducer","state","payload","stake_error","fe_stake_error","createInitialState","_getPayoutInfo","getPayoutInfo","contract_payout","first_payout_error","_getPayoutInfo2","second_payout_error","_ref3$max","max_stake","_ref3$min","min_stake","calculateMaxLength","error_1","error_2","StakeInput","_React$useReducer2","dispatch","input_id","initial_state","should_send_multiple_proposals","has_both_errors","should_show_stake_error","_useFetchProposalData","response_1","is_fetching_1","_useFetchProposalData2","response_2","is_fetching_2","handleProposalResponse","_error$details3","_error$details$field","_error$details4","_error$details5","new_proposal","getProposalInfo","_getPayoutInfo3","_error$details6","_validation_params$st","_limit_order$stop_out","order_amount","endsWith","_String$length","_String","StakeDetails","Stake","is_all_types_with_errors","_proposal_info$item","onWheelPickerScrollDebounced","current_strike","onStrikePriceSelect","strike_price_list","initial_value_ref","selected_value_ref","Strike","strike_price_choices","strike_price","handleStrikeChange","StrikeWheel","initial_strike","strike","TakeProfit","TradeTypeTabs","setTradeTypeTab","tab_list","initial_index","_tab_list$initial_tab","selected_item_index","_tab_list$selected_it","TradeParameters","MultipliersExpirationInfo","MultipliersDealCancellationInfo","AllowEquals","PayoutInfo","LastDigitPrediction","Barrier","AccumulatorsInformation","symbol_from_store","has_initialized_ref","setSymbol","isSymbolAvailable","has_initialized","exchange_open_check","processNewSymbol","new_symbol","is_initailization","has_symbol_changed","pickDefaultSymbol","t1","BottomWidgetsMobile","TradeChart","accumulator_barriers_data","accumulator_contract_barriers_data","chart_type","granularity","has_crossed_accu_barriers","markers_array","updateChartType","updateGranularity","is_chart_countdown_visible","is_chart_layout_default","is_positions_drawer_on","is_socket_opened","useDefaultSymbol","_useTraderStore2","extra_barriers","barriers_flattened","chartStateChange","chart_layout","exportLayout","has_alternative_source","has_barrier","main_barrier","main_barrier_flattened","setChartStatus","show_digits_stats","prev_contract_type","wsForget","wsForgetStream","wsSendRequest","wsSubscribe","settings","countdown","isHighestLowestMarkerEnabled","language","theme","whitespace","minimumLeftBars","current_spot_time","_ref$current","hasPredictionIndicators","_ref$current2","triggerPopup","barriers","max_ticks","SmartChart","contracts_array","bottomWidgets","crosshair","crosshairTooltipLeftAllow","showLastDigitStats","chartControlsWidgets","chartStatusListener","chartType","initialData","chartData","feedCall","enabledNavigationWidget","enabledChartFooter","isVerticalScrollEnabled","maxTick","requestAPI","requestForget","requestForgetStream","requestSubscribe","allowTickChartTypeOnly","stateChangeListener","topWidgets","isConnectionOpened","clearChart","toolbarWidget","ToolbarWidgets","importedLayout","onExportLayout","shouldFetchTradingTimes","hasAlternativeSource","getMarketsOrder","synthetic_index","has_synthetic_index","should_zoom_out_on_yaxis","yAxisMargin","isLive","leftMargin","AccumulatorsChartElements","should_show_profit_text","accumulators_high_barrier","TradeTypesSelectionGuide","trade_type_selection","dark","light","active","onLeftIconClick","onRightIconClick","rightIcon","default_left_icon","StandaloneGripDotsVerticalBoldIcon","default_right_icon","StandaloneCircleMinusFillIcon","is_moved","setIsMoved","isTouchDevice","onTouchMove","onTouchEnd","DraggableCategory","draggedItemId","show_editing_divider","Droppable","droppableId","provided","droppableProps","innerRef","DraggableCategoryItems","Draggable","draggableId","draggableProps","dragHandleProps","DraggableListItem","updateCategoriesWithDragResult","category_list","source","destination","sourceIndex","destIndex","sourceCategory","destCategory","sourceItems","movedItem","splice","destItems","onDrag","setCategoryList","setDraggedItemId","DragDropContext","onDragEnd","new_category_list","onDragStart","onTradeTypeClick","default_icon","StandaloneCirclePlusFillIcon","_categories$","isSelected","selectable","show_divider","_category$items","TradeTypeListItem","handleCustomizeTradeTypes","handleRemovePinnedClick","handleOnDrag","handleOnTradeTypeSelect","handleAddPinnedClick","is_editing","isTradeTypeSelected","savePinnedToLocalStorage","show_trade_type_list_divider","other_trade_types","pinned_trade_types","DraggableList","TradeTypeList","TradeTypes","_localStorage$getItem","_other_trade_types$","_other_trade_types$$i","_pinned_trade_types$","_pinned_trade_types$$","onTradeTypeSelect","setIsEditing","trade_types_ref","saved_pinned_trade_types_string","saved_pinned_trade_types","_safeParse","safeParse","setOtherTradeTypes","setPinnedTradeTypes","trade_types_array","_category$text","getPinnedItems","pinned_items","filterItems","getItems","default_pinned_trade_types","default_other_trade_types","pinned_item","scrollToSelectedTradeType","other_item","modifyPinnedCategories","modifyCategories","modifyOtherCategories","sortCategoriesInTradeTypeOrder","position_x","selected_chip","getBoundingClientRect","innerWidth","scrollBy","flatMap","tradeTypes","trade_types_ids","trade_type_chips","should_show_view_all","trade_type_content_props","prev_categories","prev_others","prev_pinned","TradeTypesContent","underlined","Trade","is_minimized_params_visible","setIsMinimizedParamsVisible","chart_ref","_useStore$client","_useStore$common","network_status","trade_types_store","subform_name","trade_type_count","_trade_types$find","textContent","sendSelectedTradeTypeToAnalytics","current_chart_ref","chart_bottom_Y","bottom","container_bottom_Y","BottomNav","isDigitTradeType","AccumulatorStats","DTraderV2","ServiceErrorSheet","ClosedMarketMessage","TradeErrorSnackbar","isClosedTab","noMatchesFound","Icon","StandaloneSearchFillIcon","StandaloneBriefcaseFillIcon","TAB_NAME","CLOSED","OPEN","centered","ContractCardStatusTimer","currentTick","isSold","serverTime","tick_count","displayedDuration","getCardLabels","TICKS","RemainingTime","LabelPairedStopwatchCaptionRegularIcon","formatted_time","DIRECTION","swipeConfig","preventScrollOnSwipe","_contractInfo$cancell","_contractInfo$underly","labels","_ref$className","contractInfo","hasActionButtons","isSellRequested","onCancel","redirectTo","isDeleted","setIsDeleted","isClosing","setIsClosing","isCanceling","setIsCanceling","shouldShowButtons","setShouldShowButtons","contract_main_title","showMainTitle","cancellation_date_expiry","getCurrentTick","tradeTypeName","symbolName","getMarketName","underlying_symbol","is_crypto","isCryptoContract","isMultiplier","isMultiplierContract","isEnded","totalProfit","getProfit","validToCancel","isValidToCancel","validToSell","isCancelButtonPressed","isCloseButtonPressed","has_no_auto_expiry","is_forward_starting","isForwardStarting","getStartTime","has_forward_contract_started","hasForwardContractStarted","show_tag_forward_starting","show_status_timer_tag","NavLink","handleSwipe","direction","swipeHandlers","handleClose","shouldCancel","preventDefault","risk_management_labels","show_risk_management_labels","deleted","lost","won","IconTradeTypes","ForwardStartingTag","formatDate","parseInt","formatTime","has_sign","loading","profit","CANCEL","hasButtonsDemo","onClickCancel","_ref$positions","setHasButtonsDemo","rest","demoTimeout","ContractCard","getContractPath","from_table_row","ContractCardsSections","isLoadingMore","hasBottomMargin","element","purchaseTime","uniqueDates","Set","ContractCardList","StandaloneLoaderBoldIcon","contractTypeFilter","onApplyContractTypeFilter","isDropdownOpen","setIsDropdownOpen","changedOptions","setChangedOptions","newSelectedOption","Standard","dropdown","Checkbox","checkboxPosition","isSecondaryButtonDisabled","shouldCloseOnSecondaryButtonClick","customTimeRangeFilter","setShowDatePicker","LabelPairedChevronRightSmBoldIcon","applyHandler","setCustomTimeRangeFilter","chosenRangeString","setChosenRangeString","chosenRange","setChosenRange","allowPartialRange","selectRange","onFormattedDate","trimmedValue","partialRange","optionsConfig","DEFAULT_DATE_FORMATTING_CONFIG","toDateString","moment","endOf","timeFilterList","_timeFilterList$find","setTimeFilter","setNoMatchesFound","timeFilter","showDatePicker","selectedRadioButtonValue","isChipSelected","onReset","RadioGroup","onToggle","_dateChangeArguments$","dateChangeArguments","Today","Yesterday","default","Item","radioButtonPosition","CustomDateFilterButton","DateRangePicker","hasBottomAlignment","_ref$is_bold","is_bold","_ref$positionsCount","positionsCount","totalProfitLoss","TOTAL_PROFIT_LOSS","positive","negative","setClosedContractTypeFilter","setOpenContractTypeFilter","openContractTypeFilter","closedContractTypeFilter","setContractTypeFilter","PositionsContent","_filteredPositions$","_filteredPositions$$c","_useTradeTypeFilter","useTradeTypeFilter","_useTimeFilter","useTimeFilter","filteredPositions","setFilteredPositions","_ref2$server_time","is_active_empty","onOpenTabMount","_useReportsStore$prof","store","useReportsStore","fetchMoreClosedPositions","isFetchingClosedPositions","onClosedTabMount","onClosedTabUnmount","closedPositions","hasNoPositions","shouldShowEmptyMessage","shouldShowContractCards","shouldShowLoading","shouldShowTakeProfit","contractCards","filterPositions","is_positions","is_closed_tab","TimeFilter","ContractTypeFilter","filters","EmptyPositions","TotalProfitLoss","getTotalPositionsProfit","getPositionsV2TabIndexFromURL","activeTab","setActiveTab","tabs","setPositionURLParams","new_active_tab","getDateTimeFromEpoch","momentDate","entry_tick_time","entry_spot_display_value","exit_tick_time","exit_tick_display_value","dateTimes","_getEndTime","entry","exit","getEndTime","entryValue","addComma","exitValue","CardWrapper","EntryExitDetailRow","_ref$history","current_page","setCurrentPage","total_pages","handlePageChange","pagination","currentPage","_item","array","order_date","Pagination","initialPage","contentLength","contentPerPage","hideChevron","onClickPagination","contract_replay","getContractById","contract_store","urlContractId","useContractDetails","is_reset_contract","isResetContract","ReplayChart","is_accumulator_contract","is_vertical_scroll_disabled","getCommonFields","CARD_LABELS","_data$transaction_ids","_data$transaction_ids2","_getDurationTime","_getDurationUnitText","_data$display_number_","tick_passed","ticks_label","TICK","ticks_duration_text","REFERENCE_ID","transaction_ids","buy","BUY","sell","SELL","STAKE","DURATION","getDurationTime","getDurationUnitText","getDurationPeriod","display_number_of_contracts","POTENTIAL_PAYOUT","transformMultiplierData","_data$limit_order","_data$limit_order$tak","_data$limit_order2","_data$limit_order2$st","_data$limit_order3","_data$limit_order3$st","commonFields","dealCancelFee","_data$cancellation","isUserCancelled","EXECUTED","isCancellationExpired","EXPIRED","ACTIVE","getDealCancelFee","COMMISSION","DEAL_CANCEL_FEE","NOT_SET","transformCallPutData","show_barrier_placeholder","transformTurbosData","_data$barrier","_data$limit_order4","_data$limit_order4$ta","transformDigitsData","_getDurationTime2","duration_time","name_singular","TARGET","getBarrierValue","transformVanillaData","_getDurationTime3","_getDurationUnitText2","transformEndsBetween","_getDurationTime4","_getDurationUnitText3","HIGH_BARRIER","high_barrier","LOW_BARRIER","low_barrier","transformAsian","_data$barrier2","transformLooksback","_data$transaction_ids3","_data$multiplier","_data$barrier3","spot_key","is_call_contract","LB_CALL","LOW_SPOT","HIGH_SPOT","INDICATIVE_LOW_SPOT","INDICATIVE_HIGH_SPOT","transformReset","_data$barrier4","_formatTimestampToDat","caption","reset_time","formatResetDuration","reset_barrier","RESET_BARRIER","RESET_TIME","toLocaleString","getUTCFullYear","getUTCHours","getUTCMinutes","getUTCSeconds","transformRunHigh","transformHighLow","_data$selected_tick","_data$barrier5","SELECTED_TICK","selected_tick","transformFunctionMap","_transformFunctionMap","MATCH_DIFF","MATCH","DIFF","EVEN","ODD","OVER","UNDER","PUTE","CALLE","TOUCH","ONE_TOUCH","NO_TOUCH","_data$limit_order5","_data$limit_order6","_data$limit_order6$ta","is_expired","END","IN","OUT","STAY","ASIAN","LB_HIGH_LOW","_data$multiplier2","_data$transaction_ids4","_data$high_barrier","_data$transaction_ids5","_data$low_barrier","LB_PUT","RESET","TICK_HIGH_LOW","HIGH","LOW","FALL","RUN_HIGH_LOW","transformFunction","orderDetails","useOrderDetails","_val$caption","defaultConfig","isTakeProfitVisible","isDealCancellationVisible","isStopLossVisible","isTpHistoryVisible","getContractDetailsConfig","header_content","body_content","info_message","setIsVisible","LabelPairedCircleInfoSmRegularIcon","_ref$format","RiskManagementItem","_validation_errors$er","_validation_errors$er2","_validation_params$ty2","_validation_params$ty3","_validation_params$ty4","modal_body_content","_ref$is_deal_cancella","is_deal_cancellation","isToggleOn","setIsToggleOn","isSheetOpen","setIsSheetOpen","isEnabled","stepperValue","setStepperValue","setShowError","_useContractDetails","updateLimitOrder","clearContractUpdateConfigValues","is_valid_to_cancel","total_profit","isDealCancellation","finalValue","errorKey","validation_error_message","messageForMultiplier","getErrorMessage","field_label","error_message","RiskManagementInfoModal","_contract$onChange2","DealCancellationRemainingTime","onFocus","_contract$onChange","current_error_message","_contract$onChange3","_contract$onChange4","_contract_info$contra","_limit_order$take_pro","_limit_order$stop_los","ContractDetailsFooter","bid_price","_contract_info$cancel","card_labels","formatted_bid_price","FormatUtils","is_close_button_disabled","bid_details","button_props","RESALE_NOT_OFFERED","class_name","routeBackInApp","fallback","LabelPairedArrowLeftSmBoldIcon","goBack","ContractDetails","_contract_info$shortc","update_history","setUpdateHistory","_getContractDetailsCo","canSell","requestUpdatedHistory","contractUpdateHistory","contract_update_history","is_contract_details","canCancel","shouldShowSell","_getContractDetailsCo2","showCancelButton","showRiskManagement","ContractDetailsHeader","ForwardStartingBanner","ContractDetailsChart","StopLoss","OrderDetails","EntryExitDetails","TakeProfitHistory","exact","Positions","is_authenticated","lazy","Suspense","UILoader","Switch","traderRoutes","route","RouteWithSubroutes","Component404","Page404","should_redirect_login","ServicesErrorSnackbar","has_services_error","contract_error_message","contract_error","should_show_error_snackbar","should_contain_action","bottom_position","action_props","actionText","onActionClick","getStaticUrl","onSnackbarRemove","passthrough","initStore","setPromptHandler","_links","_links$href","head","links","querySelectorAll","is_last_dtrader","href","dtrader_links","link","_href","dtrader_links_clone","cloneNode","appendChild","removeChild","sendDtraderV2OpenToAnalytics","TraderProviders","ModulesProvider","NotificationsProvider","SnackbarProvider","Router","max_longcode_length","is_collapsed","setIsCollapsed","handleToggle","isTabletOs","has_close_icon","should_close_on_click_outside","small","primary","large","_ref$message","onClickClose","viewBox","fillRule","cx","cy","removeError","is_ready","SlideIn","is_visible","keyname","InfoBoxLongcode","ContractError","DigitsWidget","Digits","InfoBoxWidget","removeErrorMessage","InfoBox","ChartTopWidgets","TopWidgets","is_title_enabled","ChartBottomWidgets","BottomWidgets","Widget","ResetContractChartElements","entry_spot","is_reset_call","y_axis_coordinates","ChartMarker","is_positioned_behind","marker_config","ContentComponent","marker_content_props","chart_margin","is_dark_theme_prop","chart_state","margin","contract_config","barriers_array","getContractsArray","audit_details","allow_scroll_to_epoch","app_routing_history","end_epoch","start_epoch","is_sold_before_started","hasContractStarted","should_force_light_theme","getPlatformRedirect","assetInformation","scroll_to_epoch","all_ticks","isBottomWidgetVisible","prev_start_epoch","has_ended","is_dtrader_v2_enabled","isDtraderV2DesktopEnabled","is_desktop","isDtraderV2MobileEnabled","endEpoch","startEpoch","scrollToEpoch","allTicks","isStaticChart","anchorChartToLeft","shouldFetchTickHistory","shouldDrawTicksFromContractInfo","startWithDataFitMode","content_config","react_key","is_positioned_before","getClosestTime","moment_time","minute","getSelectedTime","isAfter","isBefore","moment_market_open_time","boundaries","ServerTime"],"sourceRoot":""}