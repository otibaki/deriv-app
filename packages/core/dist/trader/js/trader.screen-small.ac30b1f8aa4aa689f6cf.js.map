{"version":3,"file":"trader/js/trader.screen-small.ac30b1f8aa4aa689f6cf.js","mappings":"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","sources":["webpack://@deriv/trader/../../node_modules/react-swipeable/dist/react-swipeable.umd.js","webpack://@deriv/trader/./src/Modules/Trading/Containers/allow-equals.tsx","webpack://@deriv/trader/./src/Stores/Modules/Trading/Helpers/preview-proposal.ts","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/amount-mobile.tsx","webpack://@deriv/trader/./src/Modules/Trading/Containers/Multiplier/multiplier-amount-modal.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/RadioGroupWithInfoMobile/radio-group-with-info-mobile.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/RadioGroupWithInfoMobile/index.ts","webpack://@deriv/trader/./src/Modules/Trading/Containers/Multiplier/multiplier-options.tsx","webpack://@deriv/trader/./src/Modules/Trading/Containers/radio-group-options-modal.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/Multiplier/expiration-modal.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/Multiplier/widgets.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/Accumulator/accumulators-amount-mobile.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/Duration/duration-utils.ts","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/Duration/duration-ticks-widget-mobile.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/Duration/duration-numbers-widget-mobile.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/Duration/duration-mobile.tsx","webpack://@deriv/trader/./src/Modules/Trading/Containers/trade-params-mobile.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Elements/mobile-widget.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Elements/Multiplier/cancel-deal-mobile.tsx","webpack://@deriv/trader/./src/Modules/Trading/Containers/Multiplier/risk-management-dialog.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Elements/Multiplier/risk-management-info.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Elements/payout-per-point-mobile.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/WheelPicker/wheel-picker-mobile.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Elements/PayoutPerPoint/payout-per-point-mobile-input.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/screen-small.tsx"],"sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('react')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'react'], factory) :\n  (global = global || self, factory(global.swipeable = {}, global.react));\n}(this, (function (exports, React) {\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = Object.create(null);\n    if (e) {\n      Object.keys(e).forEach(function (k) {\n        if (k !== 'default') {\n          var d = Object.getOwnPropertyDescriptor(e, k);\n          Object.defineProperty(n, k, d.get ? d : {\n            enumerable: true,\n            get: function () {\n              return e[k];\n            }\n          });\n        }\n      });\n    }\n    n['default'] = e;\n    return n;\n  }\n\n  var React__namespace = /*#__PURE__*/_interopNamespace(React);\n\n  function _extends() {\n    _extends = Object.assign || function (target) {\n      for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i];\n\n        for (var key in source) {\n          if (Object.prototype.hasOwnProperty.call(source, key)) {\n            target[key] = source[key];\n          }\n        }\n      }\n\n      return target;\n    };\n\n    return _extends.apply(this, arguments);\n  }\n\n  var LEFT = \"Left\";\n  var RIGHT = \"Right\";\n  var UP = \"Up\";\n  var DOWN = \"Down\";\n\n  var defaultProps = {\n    delta: 10,\n    preventDefaultTouchmoveEvent: false,\n    rotationAngle: 0,\n    trackMouse: false,\n    trackTouch: true\n  };\n  var initialState = {\n    first: true,\n    initial: [0, 0],\n    start: 0,\n    swiping: false,\n    xy: [0, 0]\n  };\n  var mouseMove = \"mousemove\";\n  var mouseUp = \"mouseup\";\n  var touchEnd = \"touchend\";\n  var touchMove = \"touchmove\";\n  var touchStart = \"touchstart\";\n\n  function getDirection(absX, absY, deltaX, deltaY) {\n    if (absX > absY) {\n      if (deltaX > 0) {\n        return RIGHT;\n      }\n\n      return LEFT;\n    } else if (deltaY > 0) {\n      return DOWN;\n    }\n\n    return UP;\n  }\n\n  function rotateXYByAngle(pos, angle) {\n    if (angle === 0) return pos;\n    var angleInRadians = Math.PI / 180 * angle;\n    var x = pos[0] * Math.cos(angleInRadians) + pos[1] * Math.sin(angleInRadians);\n    var y = pos[1] * Math.cos(angleInRadians) - pos[0] * Math.sin(angleInRadians);\n    return [x, y];\n  }\n\n  function getHandlers(set, handlerProps) {\n    var onStart = function onStart(event) {\n      if (event && \"touches\" in event && event.touches.length > 1) return;\n      set(function (state, props) {\n        if (props.trackMouse) {\n          document.addEventListener(mouseMove, onMove);\n          document.addEventListener(mouseUp, onUp);\n        }\n\n        var _ref = \"touches\" in event ? event.touches[0] : event,\n            clientX = _ref.clientX,\n            clientY = _ref.clientY;\n\n        var xy = rotateXYByAngle([clientX, clientY], props.rotationAngle);\n        return _extends({}, state, initialState, {\n          initial: [].concat(xy),\n          xy: xy,\n          start: event.timeStamp || 0\n        });\n      });\n    };\n\n    var onMove = function onMove(event) {\n      set(function (state, props) {\n        if (\"touches\" in event && event.touches.length > 1) {\n          return state;\n        }\n\n        var _ref2 = \"touches\" in event ? event.touches[0] : event,\n            clientX = _ref2.clientX,\n            clientY = _ref2.clientY;\n\n        var _rotateXYByAngle = rotateXYByAngle([clientX, clientY], props.rotationAngle),\n            x = _rotateXYByAngle[0],\n            y = _rotateXYByAngle[1];\n\n        var deltaX = x - state.xy[0];\n        var deltaY = y - state.xy[1];\n        var absX = Math.abs(deltaX);\n        var absY = Math.abs(deltaY);\n        var time = (event.timeStamp || 0) - state.start;\n        var velocity = Math.sqrt(absX * absX + absY * absY) / (time || 1);\n        var vxvy = [deltaX / (time || 1), deltaY / (time || 1)];\n        var dir = getDirection(absX, absY, deltaX, deltaY);\n        var delta = typeof props.delta === \"number\" ? props.delta : props.delta[dir.toLowerCase()] || defaultProps.delta;\n        if (absX < delta && absY < delta && !state.swiping) return state;\n        var eventData = {\n          absX: absX,\n          absY: absY,\n          deltaX: deltaX,\n          deltaY: deltaY,\n          dir: dir,\n          event: event,\n          first: state.first,\n          initial: state.initial,\n          velocity: velocity,\n          vxvy: vxvy\n        };\n        eventData.first && props.onSwipeStart && props.onSwipeStart(eventData);\n        props.onSwiping && props.onSwiping(eventData);\n        var cancelablePageSwipe = false;\n\n        if (props.onSwiping || props.onSwiped || \"onSwiped\" + dir in props) {\n          cancelablePageSwipe = true;\n        }\n\n        if (cancelablePageSwipe && props.preventDefaultTouchmoveEvent && props.trackTouch && event.cancelable) event.preventDefault();\n        return _extends({}, state, {\n          first: false,\n          eventData: eventData,\n          swiping: true\n        });\n      });\n    };\n\n    var onEnd = function onEnd(event) {\n      set(function (state, props) {\n        var eventData;\n\n        if (state.swiping && state.eventData) {\n          eventData = _extends({}, state.eventData, {\n            event: event\n          });\n          props.onSwiped && props.onSwiped(eventData);\n          var onSwipedDir = props[\"onSwiped\" + eventData.dir];\n          onSwipedDir && onSwipedDir(eventData);\n        } else {\n          props.onTap && props.onTap({\n            event: event\n          });\n        }\n\n        return _extends({}, state, initialState, {\n          eventData: eventData\n        });\n      });\n    };\n\n    var cleanUpMouse = function cleanUpMouse() {\n      document.removeEventListener(mouseMove, onMove);\n      document.removeEventListener(mouseUp, onUp);\n    };\n\n    var onUp = function onUp(e) {\n      cleanUpMouse();\n      onEnd(e);\n    };\n\n    var attachTouch = function attachTouch(el, passive) {\n      var cleanup = function cleanup() {};\n\n      if (el && el.addEventListener) {\n        var tls = [[touchStart, onStart], [touchMove, onMove], [touchEnd, onEnd]];\n        tls.forEach(function (_ref3) {\n          var e = _ref3[0],\n              h = _ref3[1];\n          return el.addEventListener(e, h, {\n            passive: passive\n          });\n        });\n\n        cleanup = function cleanup() {\n          return tls.forEach(function (_ref4) {\n            var e = _ref4[0],\n                h = _ref4[1];\n            return el.removeEventListener(e, h);\n          });\n        };\n      }\n\n      return cleanup;\n    };\n\n    var onRef = function onRef(el) {\n      if (el === null) return;\n      set(function (state, props) {\n        if (state.el === el) return state;\n        var addState = {};\n\n        if (state.el && state.el !== el && state.cleanUpTouch) {\n          state.cleanUpTouch();\n          addState.cleanUpTouch = void 0;\n        }\n\n        if (props.trackTouch && el) {\n          addState.cleanUpTouch = attachTouch(el, !props.preventDefaultTouchmoveEvent);\n        }\n\n        return _extends({}, state, {\n          el: el\n        }, addState);\n      });\n    };\n\n    var output = {\n      ref: onRef\n    };\n\n    if (handlerProps.trackMouse) {\n      output.onMouseDown = onStart;\n    }\n\n    return [output, attachTouch];\n  }\n\n  function updateTransientState(state, props, attachTouch) {\n    var addState = {};\n\n    if (!props.trackTouch && state.cleanUpTouch) {\n      state.cleanUpTouch();\n      addState.cleanUpTouch = void 0;\n    } else if (props.trackTouch && !state.cleanUpTouch) {\n      if (state.el) {\n        addState.cleanUpTouch = attachTouch(state.el, !props.preventDefaultTouchmoveEvent);\n      }\n    }\n\n    return _extends({}, state, addState);\n  }\n\n  function useSwipeable(options) {\n    var trackMouse = options.trackMouse;\n    var transientState = React__namespace.useRef(_extends({}, initialState));\n    var transientProps = React__namespace.useRef(_extends({}, defaultProps));\n    transientProps.current = _extends({}, defaultProps, options, {\n      delta: options.delta === void 0 ? defaultProps.delta : options.delta,\n      rotationAngle: options.rotationAngle === void 0 ? defaultProps.rotationAngle : options.rotationAngle,\n      trackTouch: options.trackTouch === void 0 ? defaultProps.trackTouch : options.trackTouch\n    });\n\n    var _React$useMemo = React__namespace.useMemo(function () {\n      return getHandlers(function (stateSetter) {\n        return transientState.current = stateSetter(transientState.current, transientProps.current);\n      }, {\n        trackMouse: trackMouse\n      });\n    }, [trackMouse]),\n        handlers = _React$useMemo[0],\n        attachTouch = _React$useMemo[1];\n\n    transientState.current = updateTransientState(transientState.current, transientProps.current, attachTouch);\n    return handlers;\n  }\n\n  exports.DOWN = DOWN;\n  exports.LEFT = LEFT;\n  exports.RIGHT = RIGHT;\n  exports.UP = UP;\n  exports.useSwipeable = useSwipeable;\n\n})));\n//# sourceMappingURL=react-swipeable.umd.js.map\n","import classNames from 'classnames';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { observer } from '@deriv/stores';\nimport React from 'react';\nimport { Checkbox, Text } from '@deriv/components';\nimport { Localize, localize } from '@deriv/translations';\n\ntype TAllowEquals = {\n    onChange: (e: { target: { name: string; value: number } }) => Promise<void>;\n    is_allow_equal: boolean;\n    has_equals_only: boolean;\n    className?: string;\n};\n\nconst AllowEquals = ({ onChange, is_allow_equal, has_equals_only, className }: TAllowEquals) => {\n    const handleOnChange: React.ComponentProps<typeof Checkbox>['onChange'] = e => {\n        e.persist();\n        if ('checked' in e.target) {\n            const { name, checked } = e.target;\n            onChange({ target: { name, value: Number(checked) } });\n        }\n    };\n\n    return (\n        <div className={classNames('allow-equals', 'mobile-widget', className)}>\n            <Checkbox\n                label={localize('Equals')}\n                value={is_allow_equal}\n                name='is_equal'\n                onChange={handleOnChange}\n                disabled={has_equals_only}\n            />\n            <Text as='p' size='xxxs'>\n                <Localize i18n_default_text='Win payout if exit spot is also equal to entry spot.' />\n            </Text>\n        </div>\n    );\n};\n\nexport default observer(() => {\n    const { is_equal, has_equals_only, onChange } = useTraderStore();\n    const allow_equals_props = {\n        is_allow_equal: !!is_equal,\n        has_equals_only,\n        onChange,\n    };\n    return <AllowEquals {...allow_equals_props} />;\n});\n","import debounce from 'lodash.debounce';\nimport { isEmptyObject, WS } from '@deriv/shared';\nimport { createProposalRequests } from './proposal';\nimport { PriceProposalRequest, PriceProposalResponse } from '@deriv/api-types';\nimport { TTradeStore } from 'Types';\nimport { ProposalResponse } from '../trade-store';\n\ntype TResponse<Req, Res extends { [key: string]: unknown }, K extends string> = Res & {\n    echo_req: Req;\n    error?: {\n        code: string;\n        message: string;\n        details?: Res[K] & { field: string };\n    };\n};\n\nexport const previewProposal = (\n    store: TTradeStore,\n    onProposalResponse: TTradeStore['onProposalResponse'],\n    override = {},\n    should_show_error = false\n) => {\n    const new_store = { ...store, ...override };\n    const requests = createProposalRequests(new_store as Parameters<typeof createProposalRequests>[0]);\n    const subscription_map: { [key: string]: boolean } = {};\n\n    const onResponse = (response: TResponse<PriceProposalRequest, ProposalResponse, 'proposal'>) => {\n        if (!should_show_error && (response.error || !response.subscription)) return;\n\n        if (response.subscription) {\n            subscription_map[response.subscription.id] = true;\n        }\n        onProposalResponse(response);\n    };\n\n    if (!isEmptyObject(requests)) {\n        const proposal_requests = requests;\n\n        Object.keys(proposal_requests).forEach(type => {\n            WS.subscribeProposal(proposal_requests[type], onResponse);\n        });\n    }\n\n    return () => {\n        Object.keys(subscription_map).forEach(id => {\n            WS.forget(id);\n            delete subscription_map[id];\n        });\n    };\n};\n\nexport const requestPreviewProposal = debounce(previewProposal, 700);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { observer, useStore } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { Localize, localize } from '@deriv/translations';\nimport { Money, Numpad, Tabs } from '@deriv/components';\nimport { getDecimalPlaces, isEmptyObject } from '@deriv/shared';\nimport MinMaxStakeInfo from './min-max-stake-info';\n\ntype TAmountMobile = Pick<\n    React.ComponentProps<typeof Basis>,\n    'toggleModal' | 'duration_value' | 'duration_unit' | 'has_duration_error' | 'setAmountError' | 'setSelectedAmount'\n> & {\n    amount_tab_idx?: number;\n    setAmountTabIdx?: React.ComponentProps<typeof Tabs>['onTabItemClick'];\n    stake_value: string | number;\n    payout_value?: string | number;\n};\n\ntype TBasis = {\n    basis: string;\n    duration_unit?: string;\n    duration_value?: number;\n    toggleModal: () => void;\n    has_duration_error?: boolean;\n    selected_basis?: string | number;\n    setSelectedAmount: (basis: string, num: string | number) => void;\n    setAmountError?: (has_error: boolean) => void;\n};\n\nconst Basis = observer(\n    ({\n        basis,\n        duration_unit,\n        duration_value,\n        toggleModal,\n        has_duration_error,\n        selected_basis,\n        setSelectedAmount,\n        setAmountError,\n    }: TBasis) => {\n        const { ui, client } = useStore();\n        const { addToast } = ui;\n        const { currency } = client;\n        const {\n            contract_type,\n            is_turbos,\n            is_vanilla,\n            onChangeMultiple,\n            amount: trade_amount,\n            basis: trade_basis,\n            duration_unit: trade_duration_unit,\n            duration: trade_duration,\n            stake_boundary,\n        } = useTraderStore();\n        const { min_stake, max_stake } = stake_boundary[contract_type.toUpperCase()] || {};\n        const user_currency_decimal_places = getDecimalPlaces(currency);\n        const onNumberChange = (num: number | string) => {\n            setSelectedAmount(basis, num);\n            validateAmount(num);\n        };\n        const formatAmount = (value: number | string) =>\n            !isNaN(+value) && value !== '' ? Number(value).toFixed(user_currency_decimal_places) : value;\n        const setBasisAndAmount = (amount: number | string) => {\n            const on_change_obj: Partial<ReturnType<typeof useTraderStore>> = {};\n\n            // Check for any duration changes in Duration trade params Tab before sending onChange object\n            if (duration_unit !== trade_duration_unit && !has_duration_error)\n                on_change_obj.duration_unit = duration_unit;\n            if (duration_value !== trade_duration && !has_duration_error) on_change_obj.duration = duration_value;\n\n            if (amount !== trade_amount || basis !== trade_basis) {\n                on_change_obj.basis = basis;\n                on_change_obj.amount = +amount;\n            }\n\n            if (!isEmptyObject(on_change_obj)) onChangeMultiple(on_change_obj);\n            toggleModal();\n        };\n        const zero_decimals = Number('0').toFixed(getDecimalPlaces(currency));\n        const min_amount = parseFloat(zero_decimals.toString().replace(/.$/, '1'));\n\n        const validateAmount = (value: number | string) => {\n            const localized_message = <Localize i18n_default_text='Should not be 0 or empty' />;\n            const min_max_stake_message = (\n                <Localize\n                    i18n_default_text='Stake must be between {{min_stake}} {{currency}} and {{max_stake}} {{currency}}'\n                    values={{ min_stake, currency, max_stake }}\n                />\n            );\n            const selected_value = parseFloat(value.toString());\n\n            if (value.toString() === '0.' || selected_value === 0) {\n                addToast({ key: 'amount_error', content: localized_message, type: 'error', timeout: 2000 });\n                setAmountError?.(true);\n                return 'error';\n            } else if (isNaN(selected_value) || selected_value < min_amount || value.toString().length < 1) {\n                addToast({ key: 'amount_error', content: localized_message, type: 'error', timeout: 2000 });\n                setAmountError?.(true);\n                return false;\n            } else if (selected_value < Number(min_stake)) {\n                addToast({ key: 'amount_error', content: min_max_stake_message, type: 'error', timeout: 2000 });\n                setAmountError?.(true);\n                return 'error';\n            }\n            setAmountError?.(false);\n            return true;\n        };\n\n        return (\n            <React.Fragment>\n                <div className='trade-params__stake-container'>\n                    {(is_turbos || is_vanilla) && (\n                        <MinMaxStakeInfo currency={currency} max_stake={max_stake} min_stake={min_stake} />\n                    )}\n                    <div\n                        className={classNames('trade-params__amount-keypad', {\n                            strike__pos: is_vanilla,\n                        })}\n                    >\n                        <Numpad\n                            value={selected_basis || ''}\n                            format={formatAmount}\n                            onSubmit={setBasisAndAmount}\n                            currency={currency}\n                            min={min_amount}\n                            max={max_stake}\n                            is_currency\n                            render={({ value, className }) => {\n                                return (\n                                    <div className={className}>\n                                        {parseFloat(value) > 0 ? (\n                                            <Money currency={currency} amount={value} should_format={false} />\n                                        ) : (\n                                            value\n                                        )}\n                                    </div>\n                                );\n                            }}\n                            reset_press_interval={450}\n                            reset_value=''\n                            pip_size={user_currency_decimal_places}\n                            onValidate={validateAmount}\n                            submit_label={localize('OK')}\n                            onValueChange={onNumberChange}\n                        />\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n);\n\nconst Amount = observer(\n    ({\n        toggleModal,\n        duration_value,\n        duration_unit,\n        has_duration_error,\n        amount_tab_idx,\n        setAmountError,\n        setAmountTabIdx,\n        setSelectedAmount,\n        stake_value,\n        payout_value,\n    }: TAmountMobile) => {\n        const { basis, basis_list } = useTraderStore();\n        const has_selected_tab_idx = typeof amount_tab_idx !== 'undefined';\n        const active_index = has_selected_tab_idx ? amount_tab_idx : basis_list.findIndex(b => b.value === basis);\n\n        if (basis_list.length === 1) {\n            return (\n                <Basis\n                    toggleModal={toggleModal}\n                    duration_value={duration_value}\n                    duration_unit={duration_unit}\n                    has_duration_error={has_duration_error}\n                    basis={basis_list[0].value}\n                    setAmountError={setAmountError}\n                    selected_basis={basis_list[0].value === 'stake' ? stake_value : payout_value}\n                    setSelectedAmount={setSelectedAmount}\n                />\n            );\n        }\n\n        return (\n            <div>\n                <Tabs active_index={active_index} onTabItemClick={setAmountTabIdx} top>\n                    {basis_list.map(basis_option => {\n                        switch (basis_option.value) {\n                            case 'stake':\n                                return (\n                                    <div label={basis_option.text} key={basis_option.value}>\n                                        <Basis\n                                            toggleModal={toggleModal}\n                                            duration_value={duration_value}\n                                            duration_unit={duration_unit}\n                                            has_duration_error={has_duration_error}\n                                            basis={basis_option.value}\n                                            setAmountError={setAmountError}\n                                            selected_basis={stake_value}\n                                            setSelectedAmount={setSelectedAmount}\n                                        />\n                                    </div>\n                                );\n                            case 'payout':\n                                return (\n                                    <div label={basis_option.text} key={basis_option.value}>\n                                        <Basis\n                                            toggleModal={toggleModal}\n                                            duration_value={duration_value}\n                                            duration_unit={duration_unit}\n                                            has_duration_error={has_duration_error}\n                                            basis={basis_option.value}\n                                            setAmountError={setAmountError}\n                                            selected_basis={payout_value}\n                                            setSelectedAmount={setSelectedAmount}\n                                        />\n                                    </div>\n                                );\n                            default:\n                                return null;\n                        }\n                    })}\n                </Tabs>\n            </div>\n        );\n    }\n);\n\nexport default Amount;\n","import React from 'react';\nimport { Div100vhContainer, Modal, usePreventIOSZoom } from '@deriv/components';\nimport { useIsMounted, WS, CONTRACT_TYPES } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport { requestPreviewProposal } from 'Stores/Modules/Trading/Helpers/preview-proposal';\nimport AmountMobile from 'Modules/Trading/Components/Form/TradeParams/amount-mobile';\nimport MultipliersInfo from 'Modules/Trading/Components/Form/TradeParams/Multiplier/info';\nimport { observer } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { TTradeStore } from 'Types';\n\ntype TToggleModal = () => void;\ntype TMultiplierAmountModal = {\n    is_open: boolean;\n    toggleModal: TToggleModal;\n};\n\nconst MultiplierAmountModal = ({ is_open, toggleModal }: TMultiplierAmountModal) => {\n    // Fix to prevent iOS from zooming in erratically on quick taps\n    usePreventIOSZoom();\n\n    return (\n        <React.Fragment>\n            <Modal\n                id='dt_trade_parameters_mobile'\n                className='trade-params dc-modal-header--title-bar'\n                is_open={is_open}\n                is_title_centered\n                should_header_stick_body={false}\n                toggleModal={toggleModal}\n                height='auto'\n                width='calc(100vw - 32px)'\n                title={localize('Stake')}\n            >\n                <Div100vhContainer className='mobile-widget-dialog__wrapper' max_autoheight_offset='48px'>\n                    <TradeParamsMobile toggleModal={toggleModal} />\n                </Div100vhContainer>\n            </Modal>\n        </React.Fragment>\n    );\n};\n\nexport default MultiplierAmountModal;\n\nconst TradeParamsMobile = observer(({ toggleModal }: { toggleModal: TToggleModal }) => {\n    const trade_store = useTraderStore();\n    const { amount } = trade_store;\n\n    const [stake_value, setStakeValue] = React.useState<string | number>(amount);\n    const [commission, setCommission] = React.useState<number | null>();\n    const [stop_out, setStopOut] = React.useState<number | null>();\n    const stake_ref = React.useRef<string | number>(amount);\n    const isMounted = useIsMounted();\n\n    React.useEffect(() => {\n        if (stake_value === amount) return undefined;\n\n        const onProposalResponse: TTradeStore['onProposalResponse'] = response => {\n            const { proposal, echo_req, subscription } = response;\n            if (\n                isMounted() &&\n                proposal &&\n                echo_req.contract_type === CONTRACT_TYPES.MULTIPLIER.UP &&\n                Number(echo_req.amount) === Number(stake_ref.current)\n            ) {\n                setCommission(proposal.commission);\n                proposal.limit_order?.stop_out && setStopOut(proposal.limit_order.stop_out?.order_amount);\n            } else if (subscription?.id) {\n                WS.forget(subscription.id);\n            }\n        };\n        const dispose = requestPreviewProposal(trade_store, onProposalResponse, { amount: stake_value });\n\n        return () => {\n            dispose?.();\n        };\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [stake_value]);\n\n    const setSelectedAmount = (basis: string | undefined, stake: number | string) => {\n        setStakeValue(stake);\n        stake_ref.current = stake;\n    };\n\n    return (\n        <React.Fragment>\n            <AmountMobile\n                toggleModal={toggleModal}\n                amount_tab_idx={0}\n                setSelectedAmount={setSelectedAmount}\n                stake_value={stake_value}\n            />\n            <MultipliersInfo\n                className='trade-params__multiplier-trade-info'\n                should_show_tooltip\n                commission={commission}\n                stop_out={stop_out}\n                amount={stake_value}\n            />\n        </React.Fragment>\n    );\n});\n","import React, { ChangeEvent } from 'react';\nimport { RadioGroup, Popover } from '@deriv/components';\n\ntype TItemsList = {\n    text: string;\n    value: number;\n};\n\ntype TRadioGroupWithInfoMobile = {\n    items_list?: TItemsList[];\n    contract_name: string;\n    current_value_object: {\n        name: string;\n        value: number;\n    };\n    onChange: (event: {\n        target: {\n            name: string;\n            value: number;\n        };\n    }) => void;\n    info?: React.ComponentProps<typeof Popover>['message'];\n    is_tooltip_disabled?: boolean;\n    popover_alignment?: React.ComponentProps<typeof Popover>['alignment'];\n    toggleModal: () => void;\n    should_show_tooltip?: boolean;\n};\n\nconst RadioGroupWithInfoMobile = ({\n    items_list,\n    contract_name,\n    current_value_object,\n    onChange,\n    info,\n    is_tooltip_disabled = false,\n    popover_alignment = 'right',\n    toggleModal,\n    should_show_tooltip = true,\n}: TRadioGroupWithInfoMobile) => {\n    const onValueChange = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange({\n            target: {\n                name: current_value_object.name,\n                value: Number(e.target.value),\n            },\n        });\n        toggleModal();\n    };\n\n    return (\n        <>\n            {should_show_tooltip && (\n                <div className={`trade-params__${contract_name}-ic-info-wrapper`}>\n                    <Popover\n                        alignment={popover_alignment}\n                        classNameBubble='dc-popover__trade-params'\n                        disable_target_icon={is_tooltip_disabled}\n                        icon='info'\n                        id={`dt_${contract_name}-stake__tooltip`}\n                        is_bubble_hover_enabled\n                        zIndex='9999'\n                        message={info}\n                    />\n                </div>\n            )}\n            <RadioGroup\n                className={`trade-params__${contract_name}-radio-group`}\n                name={`trade-params__${contract_name}-radio`}\n                selected={!Number.isNaN(current_value_object.value) ? current_value_object.value?.toString() : ''}\n                onToggle={onValueChange}\n            >\n                {items_list?.map(({ text, value }) => (\n                    <RadioGroup.Item key={value} id={text} label={text} value={value?.toString()} disabled={false} />\n                ))}\n            </RadioGroup>\n        </>\n    );\n};\n\nexport default RadioGroupWithInfoMobile;\n","import RadioGroupWithInfoMobile from './radio-group-with-info-mobile';\n\nexport default RadioGroupWithInfoMobile;\n","import React from 'react';\nimport MultipliersInfo from 'Modules/Trading/Components/Form/TradeParams/Multiplier/info';\nimport RadioGroupWithInfoMobile from 'Modules/Trading/Components/Form/RadioGroupWithInfoMobile';\nimport { requestPreviewProposal } from 'Stores/Modules/Trading/Helpers/preview-proposal';\nimport { observer } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { useIsMounted, WS, TRADE_TYPES, CONTRACT_TYPES } from '@deriv/shared';\nimport { TTradeStore } from 'Types';\n\ntype TMultiplierOptions = {\n    toggleModal: () => void;\n};\n\nconst MultiplierOptions = observer(({ toggleModal }: TMultiplierOptions) => {\n    const trade_store = useTraderStore();\n    const { amount, multiplier, multiplier_range_list, onChange } = trade_store;\n    const [commission, setCommission] = React.useState<number | null>();\n    const [stop_out, setStopOut] = React.useState<number>();\n    const isMounted = useIsMounted();\n\n    React.useEffect(() => {\n        if (!amount) return undefined;\n\n        const onProposalResponse: TTradeStore['onProposalResponse'] = ({ echo_req, proposal, subscription }) => {\n            if (\n                isMounted() &&\n                proposal &&\n                echo_req.contract_type === CONTRACT_TYPES.MULTIPLIER.UP &&\n                Number(echo_req.amount) === amount\n            ) {\n                setCommission(proposal.commission);\n                proposal.limit_order?.stop_out && setStopOut(proposal.limit_order.stop_out?.order_amount);\n            } else if (subscription?.id) {\n                WS.forget(subscription.id);\n            }\n        };\n        const dispose = requestPreviewProposal(trade_store, onProposalResponse, { amount });\n\n        return () => {\n            dispose?.();\n        };\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [amount]);\n\n    return (\n        <React.Fragment>\n            <RadioGroupWithInfoMobile\n                contract_name={TRADE_TYPES.MULTIPLIER}\n                current_value_object={{ name: TRADE_TYPES.MULTIPLIER, value: multiplier }}\n                items_list={multiplier_range_list}\n                onChange={onChange}\n                toggleModal={toggleModal}\n                should_show_tooltip={false}\n            />\n            <MultipliersInfo\n                className='trade-params__multiplier-trade-info'\n                should_show_tooltip\n                commission={commission}\n                stop_out={stop_out}\n                amount={amount}\n            />\n        </React.Fragment>\n    );\n});\n\nexport default MultiplierOptions;\n","import React from 'react';\nimport { Div100vhContainer, Modal, usePreventIOSZoom } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { getGrowthRatePercentage, isEmptyObject, TRADE_TYPES } from '@deriv/shared';\nimport MultiplierOptions from 'Modules/Trading/Containers/Multiplier/multiplier-options';\nimport RadioGroupWithInfoMobile from 'Modules/Trading/Components/Form/RadioGroupWithInfoMobile';\nimport { observer } from '@deriv/stores';\n\ntype TRadioGroupOptionsModal = {\n    is_open: boolean;\n    modal_title: React.ReactNode;\n    toggleModal: () => void;\n};\n\nconst RadioGroupOptionsModal = observer(({ is_open, modal_title, toggleModal }: TRadioGroupOptionsModal) => {\n    const { accumulator_range_list, growth_rate, onChange, tick_size_barrier_percentage, proposal_info } =\n        useTraderStore();\n\n    // Fix to prevent iOS from zooming in erratically on quick taps\n    usePreventIOSZoom();\n    const has_error_or_not_loaded =\n        proposal_info?.ACCU?.has_error || !proposal_info?.ACCU?.id || isEmptyObject(proposal_info);\n\n    return (\n        <React.Fragment>\n            <Modal\n                id='dt_trade_parameters_mobile'\n                className='trade-params dc-modal-header--title-bar'\n                is_open={is_open}\n                is_title_centered\n                should_header_stick_body={false}\n                toggleModal={toggleModal}\n                height='auto'\n                width='calc(100vw - 32px)'\n                title={modal_title}\n            >\n                <Div100vhContainer className='mobile-widget-dialog__wrapper' max_autoheight_offset='48px'>\n                    {modal_title === localize('Multiplier') ? (\n                        <MultiplierOptions toggleModal={toggleModal} />\n                    ) : (\n                        <RadioGroupWithInfoMobile\n                            contract_name={TRADE_TYPES.ACCUMULATOR}\n                            current_value_object={{ name: 'growth_rate', value: growth_rate }}\n                            info={localize(\n                                'Your stake will grow at {{growth_rate}}% per tick as long as the current spot price remains within ±{{tick_size_barrier_percentage}} from the previous spot price.',\n                                {\n                                    growth_rate: getGrowthRatePercentage(growth_rate),\n                                    tick_size_barrier_percentage,\n                                }\n                            )}\n                            is_tooltip_disabled={has_error_or_not_loaded}\n                            items_list={accumulator_range_list?.map(value => ({\n                                text: `${getGrowthRatePercentage(value)}%`,\n                                value,\n                            }))}\n                            onChange={onChange}\n                            popover_alignment='bottom'\n                            toggleModal={toggleModal}\n                        />\n                    )}\n                </Div100vhContainer>\n            </Modal>\n        </React.Fragment>\n    );\n});\n\nexport default RadioGroupOptionsModal;\n","import React from 'react';\nimport { Button, Div100vhContainer, Modal, Text } from '@deriv/components';\nimport { localize, Localize } from '@deriv/translations';\nimport Expiration from './expiration';\n\ntype TMultipliersExpirationModalProps = {\n    is_open: boolean;\n    toggleModal: () => void;\n};\n\nconst MultipliersExpirationModal = ({ is_open, toggleModal }: TMultipliersExpirationModalProps) => (\n    <Modal\n        is_open={is_open}\n        toggleModal={toggleModal}\n        has_close_icon={false}\n        should_header_stick_body={false}\n        title={<Localize i18n_default_text='Expiration' />}\n    >\n        <Div100vhContainer className='mobile-widget-dialog__wrapper' max_autoheight_offset='48px'>\n            <Text size='xs' color='general' as='div' className='dc-modal-body__expiration'>\n                <Localize\n                    i18n_default_text='Your contract will be closed automatically at the next available asset price on <0></0>.'\n                    components={[<Expiration key={0} is_text_only text_size='xs' />]}\n                />\n            </Text>\n            <Modal.Footer has_separator>\n                <Button className='dc-btn__wide' large primary has_effect text={localize('OK')} onClick={toggleModal} />\n            </Modal.Footer>\n        </Div100vhContainer>\n    </Modal>\n);\n\nexport default MultipliersExpirationModal;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Money, Text, Popover } from '@deriv/components';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { observer } from '@deriv/stores';\nimport MultiplierAmountModal from 'Modules/Trading/Containers/Multiplier/multiplier-amount-modal';\nimport RadioGroupOptionsModal from 'Modules/Trading/Containers/radio-group-options-modal';\nimport MultipliersExpiration from 'Modules/Trading/Components/Form/TradeParams/Multiplier/expiration';\nimport MultipliersExpirationModal from 'Modules/Trading/Components/Form/TradeParams/Multiplier/expiration-modal';\nimport MultipliersInfo from 'Modules/Trading/Components/Form/TradeParams/Multiplier/info';\nimport { localize, Localize } from '@deriv/translations';\nimport { clickAndKeyEventHandler, getGrowthRatePercentage } from '@deriv/shared';\n\ntype TAmountWidgetProps = {\n    amount: number;\n    currency: string;\n    expiration?: number;\n    is_crypto_multiplier: boolean;\n};\n\ntype TRadioGroupOptionsWidgetProps = {\n    displayed_trade_param: string;\n    modal_title: React.ReactNode;\n    tooltip_message?: string | React.ReactNode;\n    is_disabled?: boolean;\n};\n\nconst AmountWidget = ({ amount, currency, expiration, is_crypto_multiplier }: TAmountWidgetProps) => {\n    const [is_open, setIsOpen] = React.useState(false);\n    const [is_expiration_modal_open, setIsExpirationModalOpen] = React.useState(false);\n\n    const toggleModal = () => {\n        setIsOpen(!is_open);\n    };\n\n    const toggleExpirationModal = () => {\n        setIsExpirationModalOpen(!is_expiration_modal_open);\n    };\n\n    return (\n        <React.Fragment>\n            <MultiplierAmountModal is_open={is_open} toggleModal={toggleModal} />\n            <button className='mobile-widget mobile-widget__multiplier' onClick={toggleModal}>\n                <div className='mobile-widget__multiplier-amount'>\n                    <div className='mobile-widget__item'>\n                        <Text weight='bold' size='xxs'>\n                            <Money amount={amount} currency={currency} show_currency />\n                        </Text>\n                    </div>\n                </div>\n                <MultipliersInfo\n                    className='mobile-widget__multiplier-trade-info'\n                    commission_text_size='xxxxs'\n                    stop_out_text_size='xxxxs'\n                />\n            </button>\n            {is_crypto_multiplier && (\n                <button className='mobile-widget' onClick={expiration ? toggleExpirationModal : undefined}>\n                    <div className='mobile-widget__multiplier-expiration'>\n                        <Text size='xxs'>\n                            <Localize i18n_default_text='Expires on' />\n                        </Text>\n                        <MultipliersExpiration is_text_only text_size='xxs' />\n                    </div>\n                    <MultipliersExpirationModal\n                        is_open={is_expiration_modal_open}\n                        toggleModal={toggleExpirationModal}\n                    />\n                </button>\n            )}\n        </React.Fragment>\n    );\n};\n\nexport const MultiplierAmountWidget = observer(() => {\n    const { amount, expiration, currency, is_crypto_multiplier } = useTraderStore();\n    const amount_widget_props = {\n        amount,\n        expiration,\n        currency,\n        is_crypto_multiplier,\n    };\n    return <AmountWidget {...amount_widget_props} />;\n});\n\nconst RadioGroupOptionsWidget = ({\n    displayed_trade_param,\n    tooltip_message,\n    is_disabled,\n    modal_title,\n}: TRadioGroupOptionsWidgetProps) => {\n    const [is_open, setIsOpen] = React.useState(false);\n\n    const toggleModal = () => {\n        if (is_disabled) return;\n        clickAndKeyEventHandler(() => setIsOpen(!is_open));\n    };\n\n    return (\n        <React.Fragment>\n            <RadioGroupOptionsModal is_open={is_open} toggleModal={toggleModal} modal_title={modal_title} />\n            <div\n                className='mobile-widget mobile-widget__multiplier-options'\n                onClick={toggleModal}\n                onKeyDown={toggleModal}\n            >\n                <div\n                    className={classNames('mobile-widget__item', {\n                        'mobile-widget__item-disabled': is_disabled,\n                    })}\n                >\n                    <span className='mobile-widget__item-value'>{displayed_trade_param}</span>\n                </div>\n                {!!tooltip_message && (\n                    <Popover\n                        alignment='left'\n                        className='mobile-widget__item-tooltip'\n                        classNameBubble='mobile-widget__item-popover'\n                        icon='info'\n                        is_bubble_hover_enabled\n                        message={tooltip_message}\n                        onClick={(e: React.MouseEvent<HTMLDivElement>) => {\n                            e.stopPropagation();\n                        }}\n                        zIndex='9999'\n                    />\n                )}\n            </div>\n        </React.Fragment>\n    );\n};\n\nexport const MultiplierOptionsWidget = observer(() => {\n    const { multiplier } = useTraderStore();\n    const displayed_trade_param = `x${multiplier}`;\n    const modal_title = localize('Multiplier');\n    return <RadioGroupOptionsWidget displayed_trade_param={displayed_trade_param} modal_title={modal_title} />;\n});\n\nexport const AccumulatorOptionsWidget = observer(() => {\n    const { growth_rate, has_open_accu_contract, tick_size_barrier_percentage } = useTraderStore();\n    const displayed_trade_param = `${getGrowthRatePercentage(growth_rate)}%`;\n    const modal_title = localize('Growth rate');\n    const tooltip_message = (\n        <Localize\n            i18n_default_text='Your stake will grow at {{growth_rate}}% per tick as long as the current spot price remains within ±{{tick_size_barrier_percentage}} from the previous spot price.'\n            values={{\n                growth_rate: getGrowthRatePercentage(growth_rate),\n                tick_size_barrier_percentage,\n            }}\n        />\n    );\n    return (\n        <RadioGroupOptionsWidget\n            displayed_trade_param={displayed_trade_param}\n            is_disabled={has_open_accu_contract}\n            modal_title={modal_title}\n            tooltip_message={tooltip_message}\n        />\n    );\n});\n","import React from 'react';\nimport classNames from 'classnames';\nimport { AMOUNT_MAX_LENGTH, getDecimalPlaces } from '@deriv/shared';\nimport { MobileWrapper } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport LabeledQuantityInputMobile from '../../LabeledQuantityInputMobile';\nimport { observer, useStore } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\nconst AccumulatorsAmountMobile = observer(() => {\n    const { ui, client } = useStore();\n    const { current_focus, setCurrentFocus } = ui;\n    const { is_single_currency } = client;\n    const { amount, currency, onChange, has_open_accu_contract } = useTraderStore();\n    return (\n        <>\n            <MobileWrapper>\n                <LabeledQuantityInputMobile\n                    input_label={localize('Stake')}\n                    className={classNames('trade-container__amount', 'trade-container__amount--accumulator')}\n                    classNameInlinePrefix='trade-container__currency'\n                    classNameInput={classNames('trade-container__input', 'trade-container__input--accumulator')}\n                    currency={currency}\n                    current_focus={current_focus}\n                    fractional_digits={getDecimalPlaces(currency)}\n                    id='dt_amount_input'\n                    inline_prefix={is_single_currency ? currency : undefined}\n                    is_autocomplete_disabled\n                    is_disabled={has_open_accu_contract}\n                    is_float\n                    is_hj_whitelisted\n                    is_incrementable\n                    is_negative_disabled\n                    max_length={AMOUNT_MAX_LENGTH}\n                    name='amount'\n                    onChange={onChange}\n                    type='tel'\n                    value={amount}\n                    ariaLabel={localize('Amount')}\n                    setCurrentFocus={setCurrentFocus}\n                />\n            </MobileWrapper>\n        </>\n    );\n});\n\nexport default AccumulatorsAmountMobile;\n","import { useTraderStore } from 'Stores/useTraderStores';\n\nexport const updateAmountChanges = (\n    obj: Partial<ReturnType<typeof useTraderStore>>,\n    stake_value: number,\n    payout_value: number,\n    basis: string,\n    trade_basis: string,\n    trade_amount: number\n) => {\n    // TODO: Move onChangeMultiple outside of duration and amount\n    //  and unify all trade parameter components to use same onMultipleChange func onSubmit\n    // Checks if Amount tab was changed to stake and stake value was updated\n    if (basis === 'stake' && stake_value !== trade_amount) {\n        obj.basis = 'stake';\n        obj.amount = stake_value;\n        // Checks if Amount tab was changed to payout and payout value was updated\n    } else if (basis === 'payout' && payout_value !== trade_amount) {\n        obj.basis = 'payout';\n        obj.amount = payout_value;\n        // Checks if Amount tab was changed but payout or stake value was not updated\n    } else if (trade_basis !== basis) {\n        obj.basis = basis;\n        obj.amount = trade_amount;\n    }\n};\n","import React from 'react';\nimport { observer } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { updateAmountChanges } from './duration-utils';\nimport { getDurationMinMaxValues, isEmptyObject } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport { TickPicker } from '@deriv/components';\nimport { TDurationMobile } from './duration-mobile';\n\ntype TNumber = Pick<\n    TDurationMobile,\n    | 'expiry_epoch'\n    | 'has_amount_error'\n    | 'payout_value'\n    | 'setDurationError'\n    | 'setSelectedDuration'\n    | 'stake_value'\n    | 'toggleModal'\n> & {\n    basis_option: string;\n    contract_expiry?: string;\n    duration_unit_option: ReturnType<typeof useTraderStore>['duration_units_list'][0];\n    duration_values?: Record<string, number>;\n    selected_duration: number;\n    show_expiry?: boolean;\n};\n\ntype TDurationTicksWidgetMobile = Omit<\n    TNumber,\n    'expiry_epoch' | 'contract_expiry' | 'duration_unit_option' | 'show_expiry'\n>;\nconst DurationTicksWidgetMobile = observer(\n    ({\n        setDurationError,\n        basis_option,\n        toggleModal,\n        has_amount_error,\n        payout_value,\n        stake_value,\n        selected_duration,\n        setSelectedDuration,\n    }: TDurationTicksWidgetMobile) => {\n        const {\n            duration_min_max,\n            duration: trade_duration,\n            duration_unit: trade_duration_unit,\n            basis: trade_basis,\n            amount: trade_amount,\n            onChangeMultiple,\n        } = useTraderStore();\n\n        React.useEffect(() => {\n            setDurationError(false);\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n        }, []);\n\n        const [min_tick, max_tick] = getDurationMinMaxValues(duration_min_max, 'tick', 't');\n\n        const setTickDuration = (value: { target: { value: number; name: string } }) => {\n            const { value: duration } = value.target;\n            const on_change_obj: Partial<ReturnType<typeof useTraderStore>> = {};\n\n            // check for any amount changes from Amount trade params tab before submitting onChange object\n            if (!has_amount_error)\n                updateAmountChanges(on_change_obj, stake_value, payout_value, basis_option, trade_basis, trade_amount);\n\n            if (trade_duration !== duration || trade_duration_unit !== 't') {\n                on_change_obj.duration_unit = 't';\n                on_change_obj.duration = duration;\n            }\n\n            if (!isEmptyObject(on_change_obj)) onChangeMultiple(on_change_obj);\n            toggleModal();\n        };\n\n        const onTickChange = (tick: number) => setSelectedDuration('t', tick);\n        const tick_duration =\n            trade_duration < Number(min_tick) && selected_duration < Number(min_tick)\n                ? Number(min_tick)\n                : selected_duration;\n        return (\n            <div className='trade-params__duration-tickpicker'>\n                <TickPicker\n                    default_value={tick_duration}\n                    submit_label={localize('OK')}\n                    max_value={Number(max_tick)}\n                    min_value={Number(min_tick)}\n                    onSubmit={setTickDuration}\n                    onValueChange={onTickChange}\n                    singular_label={localize('Tick')}\n                    plural_label={localize('Ticks')}\n                />\n            </div>\n        );\n    }\n);\n\nexport default DurationTicksWidgetMobile;\n","import React from 'react';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { TDurationMobile } from './duration-mobile';\nimport { Localize, localize } from '@deriv/translations';\nimport { Numpad } from '@deriv/components';\nimport DurationRangeText from './duration-range-text';\nimport ExpiryText from './expiry-text';\nimport { addComma, getDurationMinMaxValues, getUnitMap, isEmptyObject } from '@deriv/shared';\nimport moment from 'moment';\nimport { updateAmountChanges } from './duration-utils';\nimport { observer, useStore } from '@deriv/stores';\n\ntype TNumber = Pick<\n    TDurationMobile,\n    | 'expiry_epoch'\n    | 'has_amount_error'\n    | 'payout_value'\n    | 'setDurationError'\n    | 'setSelectedDuration'\n    | 'stake_value'\n    | 'toggleModal'\n> & {\n    basis_option: string;\n    contract_expiry?: string;\n    duration_unit_option: ReturnType<typeof useTraderStore>['duration_units_list'][0];\n    duration_values?: Record<string, number>;\n    selected_duration: number;\n    show_expiry?: boolean;\n};\n\nconst DurationNumbersWidgetMobile = observer(\n    ({\n        basis_option,\n        contract_expiry = 'intraday',\n        duration_unit_option,\n        duration_values,\n        expiry_epoch,\n        has_amount_error,\n        payout_value,\n        selected_duration,\n        setDurationError,\n        setSelectedDuration,\n        stake_value,\n        show_expiry = false,\n        toggleModal,\n    }: TNumber) => {\n        const { ui } = useStore();\n        const { addToast } = ui;\n        const {\n            duration_min_max,\n            duration: trade_duration,\n            duration_unit: trade_duration_unit,\n            basis: trade_basis,\n            amount: trade_amount,\n            onChangeMultiple,\n        } = useTraderStore();\n        const { value: duration_unit } = duration_unit_option;\n        const [min, max] = getDurationMinMaxValues(duration_min_max, contract_expiry, duration_unit);\n        const [has_error, setHasError] = React.useState(false);\n        const localized_message = (\n            <Localize\n                i18n_default_text='Should be between {{min}} and {{max}}'\n                values={{\n                    min,\n                    max: addComma(max, 0, false),\n                }}\n            />\n        );\n        const validateDuration = (value: number | string) => {\n            if (\n                Number(value) < Number(min) ||\n                Math.trunc(selected_duration) > Number(max) ||\n                value.toString().length < 1\n            ) {\n                addToast({ key: 'duration_error', content: localized_message, type: 'error', timeout: 2000 });\n                setDurationError(true);\n                setHasError(true);\n                return 'error';\n            } else if (Number(value) > Number(max)) {\n                addToast({ key: 'duration_error', content: localized_message, type: 'error', timeout: 2000 });\n                setHasError(true);\n                return 'error';\n            }\n\n            setDurationError(false);\n            setHasError(false);\n            return true;\n        };\n\n        const setDuration = (duration: string | number) => {\n            const on_change_obj: Partial<ReturnType<typeof useTraderStore>> = {};\n            // check for any amount changes from Amount trade params tab before submitting onChange object\n            if (!has_amount_error)\n                updateAmountChanges(on_change_obj, stake_value, payout_value, basis_option, trade_basis, trade_amount);\n\n            if (trade_duration !== Number(duration) || trade_duration_unit !== duration_unit) {\n                on_change_obj.duration_unit = duration_unit;\n                on_change_obj.duration = Number(duration);\n                on_change_obj.expiry_type = 'duration';\n            }\n\n            if (!isEmptyObject(on_change_obj)) onChangeMultiple(on_change_obj);\n            toggleModal();\n        };\n\n        const setExpiryDate = (epoch: number, duration: string | number) => {\n            if (trade_duration_unit !== 'd') {\n                return moment.utc().add(Number(duration), 'days').format('D MMM YYYY, [23]:[59]:[59] [GMT +0]');\n            }\n            let expiry_date = new Date((epoch - trade_duration * 24 * 60 * 60) * 1000);\n            if (duration) {\n                expiry_date = new Date(expiry_date.getTime() + Number(duration) * 24 * 60 * 60 * 1000);\n            }\n\n            return expiry_date\n                .toUTCString()\n                .replace('GMT', 'GMT +0')\n                .substring(5)\n                .replace(/(\\d{2}) (\\w{3} \\d{4})/, '$1 $2,');\n        };\n\n        const onNumberChange = (num: number | string) => {\n            setSelectedDuration(duration_unit, Number(num));\n            validateDuration(num);\n        };\n\n        const fixed_date = !has_error ? setExpiryDate(Number(expiry_epoch), Number(duration_values?.d_duration)) : '';\n\n        const { name_plural, name } = getUnitMap()[duration_unit];\n        const duration_unit_text = name_plural ?? name;\n\n        return (\n            <div className='trade-params__amount-keypad'>\n                <div className='text-container'>\n                    <DurationRangeText min={min} max={max} duration_unit_text={duration_unit_text} />\n                    {show_expiry && <ExpiryText fixed_date={fixed_date} />}\n                </div>\n                <Numpad\n                    value={selected_duration}\n                    onSubmit={setDuration}\n                    render={({ value: v, className }) => {\n                        return <div className={className}>{v}</div>;\n                    }}\n                    pip_size={0}\n                    submit_label={localize('OK')}\n                    min={Number(min)}\n                    max={Number(max)}\n                    reset_press_interval={350}\n                    reset_value=''\n                    onValidate={validateDuration}\n                    onValueChange={onNumberChange}\n                />\n            </div>\n        );\n    }\n);\n\nexport default DurationNumbersWidgetMobile;\n","import React from 'react';\nimport { Tabs, RelativeDatepicker } from '@deriv/components';\nimport { getDurationMinMaxValues } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport { observer } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport type { TTradeParamsMobile } from 'Modules/Trading/Containers/trade-params-mobile';\nimport DurationTicksWidgetMobile from './duration-ticks-widget-mobile';\nimport DurationNumbersWidgetMobile from './duration-numbers-widget-mobile';\n\nexport type TDurationMobile = Pick<\n    TTradeParamsMobile,\n    | 'amount_tab_idx'\n    | 'd_duration'\n    | 'duration_tab_idx'\n    | 'h_duration'\n    | 'm_duration'\n    | 's_duration'\n    | 't_duration'\n    | 'has_amount_error'\n    | 'payout_value'\n    | 'setDurationError'\n    | 'setDurationTabIdx'\n    | 'setSelectedDuration'\n    | 'stake_value'\n    | 'toggleModal'\n> & {\n    expiry_epoch?: string | number;\n};\n\ntype TDurationUnit = 't' | 's' | 'm' | 'h' | 'd';\n\nconst DurationMobile = observer(\n    ({\n        amount_tab_idx,\n        d_duration,\n        duration_tab_idx,\n        expiry_epoch,\n        h_duration,\n        has_amount_error,\n        m_duration,\n        payout_value,\n        s_duration,\n        setDurationError,\n        setDurationTabIdx,\n        setSelectedDuration,\n        stake_value,\n        t_duration,\n        toggleModal,\n    }: TDurationMobile) => {\n        const { duration_units_list, duration_min_max, basis: trade_basis } = useTraderStore();\n        const duration_values = {\n            t_duration,\n            s_duration,\n            m_duration,\n            h_duration,\n            d_duration,\n        };\n        const [min, max] = getDurationMinMaxValues(duration_min_max, 'daily', 'd');\n        const handleRelativeChange = (date: number) => {\n            setSelectedDuration('d', date);\n        };\n        const selected_basis_option = () => {\n            if (amount_tab_idx === 0) {\n                return 'stake';\n            } else if (amount_tab_idx === 1) {\n                return 'payout';\n            }\n            return trade_basis;\n        };\n\n        const onTabChange = (index: number) => {\n            setDurationTabIdx(index);\n            const { value: unit } = duration_units_list[index];\n            setSelectedDuration(unit, duration_values[`${unit as TDurationUnit}_duration`]);\n        };\n\n        return (\n            <div>\n                <Tabs active_index={duration_tab_idx} onTabItemClick={onTabChange} single_tab_has_no_label top>\n                    {duration_units_list.map(duration_unit_option => {\n                        switch (duration_unit_option.value) {\n                            case 't':\n                                return (\n                                    <div label={duration_unit_option.text} key={duration_unit_option.value}>\n                                        <DurationTicksWidgetMobile\n                                            basis_option={selected_basis_option()}\n                                            has_amount_error={has_amount_error}\n                                            toggleModal={toggleModal}\n                                            selected_duration={t_duration}\n                                            setDurationError={setDurationError}\n                                            setSelectedDuration={setSelectedDuration}\n                                            stake_value={stake_value}\n                                            payout_value={payout_value}\n                                        />\n                                    </div>\n                                );\n                            case 's':\n                                return (\n                                    <div label={duration_unit_option.text} key={duration_unit_option.value}>\n                                        <DurationNumbersWidgetMobile\n                                            basis_option={selected_basis_option()}\n                                            has_amount_error={has_amount_error}\n                                            toggleModal={toggleModal}\n                                            duration_unit_option={duration_unit_option}\n                                            selected_duration={s_duration}\n                                            setDurationError={setDurationError}\n                                            setSelectedDuration={setSelectedDuration}\n                                            stake_value={stake_value}\n                                            payout_value={payout_value}\n                                        />\n                                    </div>\n                                );\n                            case 'm':\n                                return (\n                                    <div label={duration_unit_option.text} key={duration_unit_option.value}>\n                                        <DurationNumbersWidgetMobile\n                                            basis_option={selected_basis_option()}\n                                            has_amount_error={has_amount_error}\n                                            toggleModal={toggleModal}\n                                            duration_unit_option={duration_unit_option}\n                                            selected_duration={m_duration}\n                                            setDurationError={setDurationError}\n                                            setSelectedDuration={setSelectedDuration}\n                                            stake_value={stake_value}\n                                            payout_value={payout_value}\n                                        />\n                                    </div>\n                                );\n                            case 'h':\n                                return (\n                                    <div label={duration_unit_option.text} key={duration_unit_option.value}>\n                                        <DurationNumbersWidgetMobile\n                                            basis_option={selected_basis_option()}\n                                            has_amount_error={has_amount_error}\n                                            toggleModal={toggleModal}\n                                            duration_unit_option={duration_unit_option}\n                                            selected_duration={h_duration}\n                                            setDurationError={setDurationError}\n                                            setSelectedDuration={setSelectedDuration}\n                                            stake_value={stake_value}\n                                            payout_value={payout_value}\n                                        />\n                                    </div>\n                                );\n                            case 'd':\n                                return (\n                                    <div label={duration_unit_option.text} key={duration_unit_option.value}>\n                                        <DurationNumbersWidgetMobile\n                                            basis_option={selected_basis_option()}\n                                            has_amount_error={has_amount_error}\n                                            toggleModal={toggleModal}\n                                            duration_unit_option={duration_unit_option}\n                                            contract_expiry='daily'\n                                            selected_duration={d_duration}\n                                            setDurationError={setDurationError}\n                                            setSelectedDuration={setSelectedDuration}\n                                            stake_value={stake_value}\n                                            show_expiry\n                                            payout_value={payout_value}\n                                            expiry_epoch={expiry_epoch}\n                                            duration_values={duration_values}\n                                        />\n                                        <RelativeDatepicker\n                                            onChange={handleRelativeChange}\n                                            min_date={min}\n                                            max_date={max}\n                                            title={localize('Pick an end date')}\n                                        />\n                                    </div>\n                                );\n                            default:\n                                return null;\n                        }\n                    })}\n                </Tabs>\n            </div>\n        );\n    }\n);\n\nexport default DurationMobile;\n","import 'Sass/app/modules/trading-mobile.scss';\nimport { Div100vhContainer, Modal, Money, Tabs, ThemedScrollbars, usePreventIOSZoom } from '@deriv/components';\nimport AmountMobile from 'Modules/Trading/Components/Form/TradeParams/amount-mobile';\nimport Barrier from 'Modules/Trading/Components/Form/TradeParams/barrier';\nimport DurationMobile from 'Modules/Trading/Components/Form/TradeParams/Duration/duration-mobile';\nimport LastDigit from 'Modules/Trading/Components/Form/TradeParams/last-digit';\nimport { TTextValueStrings } from 'Types';\nimport { observer, useStore } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport React from 'react';\nimport classNames from 'classnames';\nimport { localize } from '@deriv/translations';\n\ntype TTradeParamsModal = {\n    is_open: boolean;\n    tab_index: number;\n    toggleModal: () => void;\n};\n\nexport type TTradeParamsMobile = {\n    currency: string;\n    toggleModal: () => void;\n    isVisible: (component_key: string) => boolean;\n    setAmountTabIdx: (amount_tab_idx?: number) => void;\n    amount_tab_idx?: number;\n    setTradeParamTabIdx: (trade_param_tab_idx: number) => void;\n    trade_param_tab_idx: number;\n    setDurationTabIdx: (duration_tab_idx?: number) => void;\n    duration_unit: string;\n    duration_units_list: TTextValueStrings[];\n    duration_value: number;\n    duration_tab_idx?: number;\n    has_amount_error: boolean;\n    has_duration_error: boolean;\n    // amount\n    setAmountError: (has_error: boolean) => void;\n    setSelectedAmount: (basis: string, selected_basis_value: string | number) => void;\n    stake_value: number;\n    payout_value: number;\n    // duration\n    setDurationError: (has_error: boolean) => void;\n    setSelectedDuration: (selected_duration_unit: string, selected_duration: number) => void;\n    t_duration: number;\n    s_duration: number;\n    m_duration: number;\n    h_duration: number;\n    d_duration: number;\n};\n\ntype TReducer = Pick<\n    TTradeParamsMobile,\n    | 'trade_param_tab_idx'\n    | 'duration_tab_idx'\n    | 'amount_tab_idx'\n    | 'has_amount_error'\n    | 'has_duration_error'\n    | 't_duration'\n    | 's_duration'\n    | 'm_duration'\n    | 'h_duration'\n    | 'd_duration'\n    | 'stake_value'\n    | 'payout_value'\n> & { curr_duration_unit: string; curr_duration_value: number };\n\nconst DEFAULT_DURATION = Object.freeze({\n    t: 5,\n    s: 15,\n    m: 3,\n    h: 1,\n    d: 1,\n});\n\nconst reducer = (state: TReducer, payload: Partial<TReducer>) => {\n    return {\n        ...state,\n        ...payload,\n    };\n};\n\nconst getDefaultDuration = (duration_unit: string) => DEFAULT_DURATION[duration_unit as keyof typeof DEFAULT_DURATION];\n\nconst TradeParamsModal = observer(({ is_open, toggleModal, tab_index }: TTradeParamsModal) => {\n    const { client } = useStore();\n    const { currency } = client;\n    const { amount, form_components, duration, duration_unit, duration_units_list } = useTraderStore();\n\n    const initial_duration_tab_idx = duration_units_list.findIndex(d => d.value === duration_unit);\n    const [state, dispatch] = React.useReducer(reducer, {\n        trade_param_tab_idx: tab_index,\n        duration_tab_idx: initial_duration_tab_idx,\n        amount_tab_idx: undefined,\n        has_amount_error: false,\n        has_duration_error: false,\n        // duration unit values\n        curr_duration_unit: duration_unit,\n        curr_duration_value: duration,\n        t_duration: getDefaultDuration('t'),\n        s_duration: getDefaultDuration('s'),\n        m_duration: getDefaultDuration('m'),\n        h_duration: getDefaultDuration('h'),\n        d_duration: getDefaultDuration('d'),\n        // amount values\n        stake_value: amount,\n        payout_value: amount,\n    });\n\n    usePreventIOSZoom();\n\n    React.useEffect(() => {\n        setSelectedDuration(duration_unit, duration);\n    }, [duration, duration_unit]);\n\n    const setTradeParamTabIdx = (trade_param_tab_idx: number) => dispatch({ trade_param_tab_idx });\n\n    const setDurationTabIdx = (duration_tab_idx?: number) => dispatch({ duration_tab_idx });\n\n    const setAmountTabIdx = (amount_tab_idx?: number) => dispatch({ amount_tab_idx });\n\n    const setSelectedAmount = (basis: string, selected_basis_value: string | number) =>\n        dispatch({ [`${basis}_value`]: selected_basis_value });\n\n    const setSelectedDuration = (selected_duration_unit: string, selected_duration: number) => {\n        dispatch({\n            [`${selected_duration_unit}_duration`]: selected_duration,\n            curr_duration_unit: selected_duration_unit,\n            curr_duration_value: selected_duration,\n        });\n    };\n\n    const setAmountError = (has_error: boolean) => {\n        dispatch({ has_amount_error: has_error });\n    };\n    const setDurationError = (has_error: boolean) => {\n        dispatch({ has_duration_error: has_error });\n    };\n\n    const isVisible = (component_key: string): boolean => form_components.includes(component_key);\n    return (\n        <React.Fragment>\n            <Modal\n                id='dt_trade_parameters_mobile'\n                className='trade-params'\n                is_open={is_open}\n                header={<div />}\n                toggleModal={toggleModal}\n                height='53.8rem'\n                width='calc(100vw - 32px)'\n            >\n                <ThemedScrollbars>\n                    <Div100vhContainer className='mobile-widget-dialog__wrapper' max_autoheight_offset='120px'>\n                        <TradeParamsMobile\n                            currency={currency}\n                            toggleModal={toggleModal}\n                            isVisible={isVisible}\n                            setTradeParamTabIdx={setTradeParamTabIdx}\n                            trade_param_tab_idx={tab_index}\n                            setDurationTabIdx={setDurationTabIdx}\n                            duration_tab_idx={state.duration_tab_idx}\n                            setAmountTabIdx={setAmountTabIdx}\n                            amount_tab_idx={state.amount_tab_idx}\n                            // amount\n                            setSelectedAmount={setSelectedAmount}\n                            stake_value={state.stake_value}\n                            payout_value={state.payout_value}\n                            duration_unit={state.curr_duration_unit}\n                            duration_value={state.curr_duration_value}\n                            duration_units_list={duration_units_list}\n                            has_amount_error={state.has_amount_error}\n                            setAmountError={setAmountError}\n                            // duration\n                            setSelectedDuration={setSelectedDuration}\n                            has_duration_error={state.has_duration_error}\n                            setDurationError={setDurationError}\n                            t_duration={state.t_duration}\n                            s_duration={state.s_duration}\n                            m_duration={state.m_duration}\n                            h_duration={state.h_duration}\n                            d_duration={state.d_duration}\n                        />\n                    </Div100vhContainer>\n                </ThemedScrollbars>\n            </Modal>\n        </React.Fragment>\n    );\n});\n\nexport default TradeParamsModal;\n\nconst TradeParamsMobile = observer(\n    ({\n        currency,\n        toggleModal,\n        isVisible,\n        setAmountTabIdx,\n        amount_tab_idx,\n        setTradeParamTabIdx,\n        trade_param_tab_idx,\n        setDurationTabIdx,\n        duration_unit,\n        duration_units_list,\n        duration_value,\n        duration_tab_idx,\n        has_amount_error,\n        has_duration_error,\n        // amount\n        setAmountError,\n        setSelectedAmount,\n        stake_value,\n        payout_value,\n        // duration\n        setDurationError,\n        setSelectedDuration,\n        t_duration,\n        s_duration,\n        m_duration,\n        h_duration,\n        d_duration,\n    }: TTradeParamsMobile) => {\n        const {\n            basis_list,\n            basis,\n            expiry_epoch,\n            is_turbos,\n            is_vanilla,\n            duration_unit: store_duration_unit,\n        } = useTraderStore();\n\n        const resetToDefaultDuration = () => {\n            const default_store_duration = getDefaultDuration(store_duration_unit);\n            setSelectedDuration(store_duration_unit, default_store_duration);\n        };\n\n        React.useEffect(() => {\n            const toggled_duration_tab_idx = duration_units_list.findIndex(d => d.value === duration_unit);\n            const default_duration_tab_idx = duration_units_list.findIndex(d => d.value === store_duration_unit);\n            const default_duration = getDefaultDuration(duration_unit);\n\n            // reset to default value and timeframe when previously chosen timeframe doesnt exist in new trade type\n            if (toggled_duration_tab_idx === -1) resetToDefaultDuration();\n\n            setSelectedDuration(duration_unit, has_duration_error ? default_duration : duration_value);\n            setDurationTabIdx(toggled_duration_tab_idx === -1 ? default_duration_tab_idx : toggled_duration_tab_idx);\n\n            return () => {\n                setSelectedDuration(duration_unit, has_duration_error ? default_duration : duration_value);\n            };\n        }, [duration_unit]);\n\n        React.useEffect(() => {\n            const default_duration = getDefaultDuration(duration_unit);\n            const toggled_duration_tab_idx = duration_units_list.findIndex(d => d.value === duration_unit);\n\n            if (toggled_duration_tab_idx === -1) resetToDefaultDuration();\n\n            return () => {\n                setSelectedDuration(duration_unit, has_duration_error ? default_duration : duration_value);\n            };\n        }, [duration_value]);\n\n        const getDurationText = () => {\n            const default_duration_obj = duration_units_list.find(d => d.value === store_duration_unit);\n            const toggled_duration_obj = duration_units_list.find(d => d.value === duration_unit);\n            const toggled_duration_tab_idx = duration_units_list.findIndex(d => d.value === duration_unit);\n            const default_store_duration = getDefaultDuration(store_duration_unit);\n            const default_timeframe =\n                default_duration_obj &&\n                (default_store_duration > 1\n                    ? localize(default_duration_obj.text)\n                    : localize(default_duration_obj.text.slice(0, -1)));\n            const toggled_duration_text =\n                toggled_duration_obj &&\n                (duration_value > 1\n                    ? localize(toggled_duration_obj.text)\n                    : localize(toggled_duration_obj.text.slice(0, -1)));\n\n            return toggled_duration_tab_idx === -1\n                ? `${default_store_duration} ${default_timeframe}`\n                : `${duration_value} ${toggled_duration_text}`;\n        };\n\n        const getAmountText = () => {\n            const has_selected_tab_idx = typeof amount_tab_idx !== 'undefined';\n            const active_index = has_selected_tab_idx ? amount_tab_idx : basis_list.findIndex(b => b.value === basis);\n\n            return <Money currency={currency} show_currency amount={active_index === 1 ? payout_value : stake_value} />;\n        };\n\n        const getHeaderContent = (tab_key: string) => {\n            switch (tab_key) {\n                case 'duration':\n                    return (\n                        <div className='trade-params__header'>\n                            <div className='trade-params__header-label'>{localize('Duration')}</div>\n                            <div\n                                className={classNames('trade-params__header-value', {\n                                    'trade-params__header-value--has-error': has_duration_error,\n                                })}\n                            >\n                                {has_duration_error ? localize('Error') : getDurationText()}\n                            </div>\n                        </div>\n                    );\n                case 'amount':\n                    return (\n                        <div className='trade-params__header'>\n                            <div className='trade-params__header-label'>\n                                {is_turbos || is_vanilla ? localize('Stake') : localize('Amount')}\n                            </div>\n                            <div\n                                className={classNames('trade-params__header-value', {\n                                    'trade-params__header-value--has-error': has_amount_error,\n                                })}\n                            >\n                                {has_amount_error ? localize('Error') : getAmountText()}\n                            </div>\n                        </div>\n                    );\n                default:\n                    return null;\n            }\n        };\n        return (\n            <Tabs\n                active_index={trade_param_tab_idx}\n                className='trade-params-duration-amount'\n                onTabItemClick={setTradeParamTabIdx}\n                top\n            >\n                {isVisible('duration') ? (\n                    <div data-header-content={getHeaderContent('duration')}>\n                        <DurationMobile\n                            toggleModal={toggleModal}\n                            amount_tab_idx={amount_tab_idx}\n                            duration_tab_idx={duration_tab_idx}\n                            setDurationTabIdx={setDurationTabIdx}\n                            setSelectedDuration={setSelectedDuration}\n                            setDurationError={setDurationError}\n                            has_amount_error={has_amount_error}\n                            t_duration={t_duration}\n                            s_duration={s_duration}\n                            m_duration={m_duration}\n                            h_duration={h_duration}\n                            d_duration={d_duration}\n                            stake_value={stake_value}\n                            payout_value={payout_value}\n                            expiry_epoch={expiry_epoch}\n                        />\n                    </div>\n                ) : null}\n                {isVisible('amount') ? (\n                    <div data-header-content={getHeaderContent('amount')}>\n                        <AmountMobile\n                            duration_unit={duration_unit}\n                            duration_value={duration_value}\n                            toggleModal={toggleModal}\n                            amount_tab_idx={amount_tab_idx}\n                            setAmountTabIdx={setAmountTabIdx}\n                            has_duration_error={has_duration_error}\n                            setSelectedAmount={setSelectedAmount}\n                            setAmountError={setAmountError}\n                            stake_value={stake_value}\n                            payout_value={payout_value}\n                        />\n                    </div>\n                ) : null}\n            </Tabs>\n        );\n    }\n);\n\nexport const LastDigitMobile = observer(() => {\n    const { form_components } = useTraderStore();\n    return form_components.includes('last_digit') ? <LastDigit /> : null;\n});\n\nexport const BarrierMobile = observer(() => {\n    const { form_components } = useTraderStore();\n    return form_components.includes('barrier') ? <Barrier /> : null;\n});\n","import React from 'react';\nimport { Money } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport { getExpiryType, getDurationMinMaxValues, getLocalizedBasis } from '@deriv/shared';\nimport { MultiplierAmountWidget } from 'Modules/Trading/Components/Form/TradeParams/Multiplier/widgets';\nimport TradeParamsModal from '../../Containers/trade-params-mobile';\nimport { observer, useStore } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\nconst MobileWidget = observer(() => {\n    const { ui } = useStore();\n    const { onChangeUiStore } = ui;\n    const trade_store = useTraderStore();\n    const { amount, basis, currency, duration, duration_min_max, duration_unit, is_multiplier, onChange } = trade_store;\n\n    const [is_open, setIsOpen] = React.useState(false);\n    const [tab_index, setTabIndex] = React.useState(0);\n\n    React.useEffect(() => {\n        assertDurationIsWithinBoundary();\n    });\n\n    const assertDurationIsWithinBoundary = () => {\n        const contract_expiry_type = getExpiryType(trade_store);\n        const [min_value, max_value] = getDurationMinMaxValues(duration_min_max, contract_expiry_type, duration_unit);\n\n        if (contract_expiry_type === 'tick' && duration < Number(min_value)) {\n            onChangeUiStore({ name: `duration_${duration_unit}`, value: min_value });\n            onChange({ target: { name: 'duration', value: min_value } });\n        }\n        if (duration >= Number(min_value) && duration > Number(max_value)) {\n            onChangeUiStore({ name: `duration_${duration_unit}`, value: max_value });\n            onChange({ target: { name: 'duration', value: max_value } });\n        }\n    };\n\n    // tab_index 0 is duration and 1 is amount\n    const toggleWidget = (tab_index: number) => {\n        setTabIndex(tab_index);\n        setIsOpen(!is_open);\n    };\n\n    const getHumanReadableDuration = () => {\n        if (!duration_unit) return '';\n        const lookup = {\n            t: [<Localize i18n_default_text='tick' key='t' />, <Localize i18n_default_text='ticks' key='ts' />],\n            s: [<Localize i18n_default_text='second' key='s' />, <Localize i18n_default_text='seconds' key='ss' />],\n            m: [<Localize i18n_default_text='min' key='m' />, <Localize i18n_default_text='mins' key='ms' />],\n            h: [<Localize i18n_default_text='hour' key='h' />, <Localize i18n_default_text='hours' key='hs' />],\n            d: [<Localize i18n_default_text='day' key='d' />, <Localize i18n_default_text='days' key='ds' />],\n        };\n\n        try {\n            const formatted_duration_unit =\n                +duration === 1\n                    ? lookup[duration_unit as keyof typeof lookup][0]\n                    : lookup[duration_unit as keyof typeof lookup][1];\n            return [duration, ' ', formatted_duration_unit];\n        } catch (e) {\n            return '';\n        }\n    };\n\n    const localized_basis = getLocalizedBasis();\n\n    const stakeOrPayout = () => {\n        switch (basis) {\n            case 'stake':\n                return localized_basis.stake;\n            case 'payout':\n                return localized_basis.payout;\n            default:\n                return basis;\n        }\n    };\n\n    return (\n        <div className='mobile-widget__wrapper'>\n            {is_multiplier ? (\n                <MultiplierAmountWidget />\n            ) : (\n                <div id='duration_amount_selector' className='mobile-widget duration_amount_selector'>\n                    <button className='mobile-widget__duration mobile-widget__button' onClick={() => toggleWidget(0)}>\n                        {getHumanReadableDuration()}\n                    </button>\n                    <button className='mobile-widget__amount mobile-widget__button' onClick={() => toggleWidget(1)}>\n                        <Money amount={amount} currency={currency} show_currency />\n                    </button>\n                    <button className='mobile-widget__type mobile-widget__button' onClick={() => toggleWidget(1)}>\n                        {stakeOrPayout()}\n                    </button>\n                </div>\n            )}\n            <TradeParamsModal is_open={is_open} toggleModal={() => toggleWidget(tab_index)} tab_index={tab_index} />\n        </div>\n    );\n});\n\nexport default MobileWidget;\n","import React from 'react';\nimport { Checkbox, RadioGroup, Dialog, Popover, Text } from '@deriv/components';\nimport { localize, Localize } from '@deriv/translations';\nimport { onToggleCancellation, onChangeCancellationDuration } from 'Stores/Modules/Trading/Helpers/multiplier';\nimport Fieldset from 'App/Components/Form/fieldset';\nimport { observer, useStore } from '@deriv/stores';\nimport { TTradeStore } from 'Types';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\ntype TDealCancellationWarningDialog = {\n    is_visible: boolean;\n    onConfirm: () => void;\n    onCancel: () => void;\n};\n\ntype TCancelDeal = {\n    has_cancellation: boolean;\n    has_take_profit: boolean;\n    has_stop_loss: boolean;\n    onChangeMultiple: (\n        props: Partial<\n            Pick<\n                TTradeStore,\n                | 'cancellation_duration'\n                | 'has_cancellation'\n                | 'has_stop_loss'\n                | 'has_take_profit'\n                | 'stop_loss'\n                | 'take_profit'\n            >\n        >\n    ) => void;\n    cancellation_duration: string;\n};\n\nconst DealCancellationWarningDialog = observer(\n    ({ is_visible, onConfirm, onCancel }: TDealCancellationWarningDialog) => {\n        const { ui } = useStore();\n        const { disableApp, enableApp, should_show_cancellation_warning, toggleCancellationWarning } = ui;\n        return (\n            <Dialog\n                className='trade-params__multiplier-deal-cancellation-dialog'\n                title={localize('About deal cancellation')}\n                confirm_button_text={localize('Got it')}\n                cancel_button_text={localize('Cancel')}\n                onConfirm={onConfirm}\n                onCancel={onCancel}\n                is_mobile_full_width={false}\n                is_visible={is_visible}\n                disableApp={disableApp}\n                enableApp={enableApp}\n                portal_element_id='modal_root'\n            >\n                <Text size='xxxs' color='general'>\n                    <Localize i18n_default_text='Take profit and/or stop loss are not available while deal cancellation is active.' />\n                </Text>\n                <Checkbox\n                    defaultChecked={!should_show_cancellation_warning}\n                    onChange={() => toggleCancellationWarning()}\n                    name='should_show_cancellation_warning'\n                    label={localize(\"Don't show this again\")}\n                />\n            </Dialog>\n        );\n    }\n);\n\nconst CancelDeal = observer(\n    ({ has_cancellation, has_take_profit, has_stop_loss, onChangeMultiple, cancellation_duration }: TCancelDeal) => {\n        const { ui } = useStore();\n        const { should_show_cancellation_warning } = ui;\n        const { cancellation_range_list } = useTraderStore();\n        const [is_deal_cancel_warning_visible, setDealCancelWarningVisibility] = React.useState(false);\n\n        const canToggleDealCancel = () => {\n            const should_show_popover = (has_take_profit || has_stop_loss) && should_show_cancellation_warning;\n            if (should_show_popover) setDealCancelWarningVisibility(should_show_popover);\n            return !should_show_popover;\n        };\n\n        return (\n            <React.Fragment>\n                <DealCancellationWarningDialog\n                    is_visible={is_deal_cancel_warning_visible}\n                    onCancel={() => setDealCancelWarningVisibility(false)}\n                    onConfirm={() => {\n                        setDealCancelWarningVisibility(false);\n                        onToggleCancellation({ has_cancellation, onChangeMultiple });\n                    }}\n                />\n                <Fieldset className='trade-container__fieldset'>\n                    <div className='dc-input-wrapper--inline'>\n                        <Checkbox\n                            id='dt_cancellation-checkbox_input'\n                            onChange={() => {\n                                if (canToggleDealCancel()) {\n                                    onToggleCancellation({ has_cancellation, onChangeMultiple });\n                                }\n                            }}\n                            name='has_cancellation'\n                            label={localize('Deal cancellation')}\n                            defaultChecked={has_cancellation}\n                        />\n                        <Popover\n                            alignment='left'\n                            icon='info'\n                            id='dt_multiplier-stake__tooltip'\n                            is_bubble_hover_enabled\n                            classNameBubble='trade-container__deal-cancellation-popover'\n                            zIndex='9999'\n                            message={localize(\n                                'When this is active, you can cancel your trade within the chosen time frame. Your stake will be returned without loss.'\n                            )}\n                        />\n                    </div>\n                    {has_cancellation && (\n                        <React.Fragment>\n                            <RadioGroup\n                                className='trade-params__multiplier-radio-group'\n                                name='trade-params__multiplier-radio'\n                                selected={cancellation_duration}\n                                onToggle={event => onChangeCancellationDuration({ event, onChangeMultiple })}\n                            >\n                                {cancellation_range_list.map(({ text, value }) => (\n                                    <RadioGroup.Item key={value} id={text} label={text} value={value.toString()} />\n                                ))}\n                            </RadioGroup>\n                        </React.Fragment>\n                    )}\n                </Fieldset>\n            </React.Fragment>\n        );\n    }\n);\n\nexport default CancelDeal;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { MobileDialog, Button, Div100vhContainer } from '@deriv/components';\nimport { isDeepEqual, pick } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport { observer } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport StopLoss from 'Modules/Trading/Components/Form/TradeParams/Multiplier/stop-loss';\nimport TakeProfit from 'Modules/Trading/Components/Form/TradeParams/Multiplier/take-profit';\nimport CancelDeal from 'Modules/Trading/Components/Elements/Multiplier/cancel-deal-mobile';\n\ntype TRiskManagementDialog = {\n    is_open: boolean;\n    onClose: () => void;\n    toggleDialog: () => void;\n};\ntype TValidation_errors = {\n    take_profit: string[] | [];\n    stop_loss: string[] | [];\n};\n\nconst RiskManagementDialog = observer(({ is_open, onClose, toggleDialog }: TRiskManagementDialog) => {\n    const {\n        is_turbos,\n        take_profit,\n        has_take_profit,\n        has_stop_loss,\n        stop_loss,\n        has_cancellation,\n        cancellation_range_list,\n        cancellation_duration,\n        onChangeMultiple,\n    } = useTraderStore();\n    const applied_risk_management_state = {\n        take_profit,\n        stop_loss,\n        has_take_profit,\n        has_stop_loss,\n        has_cancellation,\n        cancellation_duration,\n    };\n    const [state, setState] = React.useState(applied_risk_management_state);\n\n    const [validation_errors, setValidationErrors] = React.useState<TValidation_errors | Record<string, never>>({});\n\n    const should_show_deal_cancellation = cancellation_range_list?.length > 0;\n\n    const getStateToCompare = (_state: typeof applied_risk_management_state) => {\n        const props_to_pick = [\n            'has_take_profit',\n            'has_stop_loss',\n            'has_cancellation',\n            _state.has_take_profit && 'take_profit',\n            _state.has_stop_loss && 'stop_loss',\n            _state.has_cancellation && 'cancellation_duration',\n        ];\n\n        return pick(_state, props_to_pick);\n    };\n\n    const isStateUnchanged = () => {\n        return isDeepEqual(getStateToCompare(state), getStateToCompare(applied_risk_management_state));\n    };\n\n    const validate = (new_state: typeof applied_risk_management_state) => {\n        setValidationErrors({\n            take_profit:\n                new_state.has_take_profit && !new_state.take_profit\n                    ? [localize('Please enter a take profit amount.')]\n                    : [],\n            stop_loss:\n                new_state.has_stop_loss && !new_state.stop_loss ? [localize('Please enter a stop loss amount.')] : [],\n        });\n    };\n\n    const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const { name, value } = e.target;\n        const new_state = { ...state };\n        new_state[name as 'take_profit' | 'stop_loss' | 'cancellation_duration'] = value;\n        setState(new_state);\n        validate(new_state);\n    };\n\n    const onChangeMultipleLocal = (props: keyof typeof applied_risk_management_state) => {\n        const new_state = { ...state };\n        Object.assign(new_state, props);\n        setState(new_state);\n        validate(new_state);\n    };\n\n    const apply = () => {\n        onChangeMultiple(state);\n        toggleDialog();\n    };\n\n    const resetAndClose = () => {\n        setState(applied_risk_management_state);\n        onClose();\n    };\n\n    return (\n        <React.Fragment>\n            <MobileDialog portal_element_id='modal_root' visible={is_open} has_content_scroll onClose={resetAndClose}>\n                <Div100vhContainer\n                    className={classNames('trade-params__multiplier-risk-management-dialog', {\n                        'trade-params__multiplier-risk-management-dialog--no-cancel': !should_show_deal_cancellation,\n                    })}\n                    height_offset='54px'\n                >\n                    <TakeProfit\n                        take_profit={state.take_profit}\n                        has_take_profit={state.has_take_profit}\n                        onChange={onChange as React.ComponentProps<typeof TakeProfit>['onChange']}\n                        onChangeMultiple={\n                            onChangeMultipleLocal as unknown as React.ComponentProps<\n                                typeof TakeProfit\n                            >['onChangeMultiple']\n                        }\n                        validation_errors={validation_errors}\n                    />\n                    {!is_turbos && (\n                        <StopLoss\n                            stop_loss={state.stop_loss}\n                            has_stop_loss={state.has_stop_loss}\n                            onChange={onChange as React.ComponentProps<typeof StopLoss>['onChange']}\n                            onChangeMultiple={\n                                onChangeMultipleLocal as unknown as React.ComponentProps<\n                                    typeof StopLoss\n                                >['onChangeMultiple']\n                            }\n                            validation_errors={validation_errors}\n                        />\n                    )}\n                    {should_show_deal_cancellation && (\n                        <CancelDeal\n                            has_take_profit={state.has_take_profit}\n                            has_stop_loss={state.has_stop_loss}\n                            has_cancellation={state.has_cancellation}\n                            cancellation_duration={state.cancellation_duration}\n                            onChangeMultiple={\n                                onChangeMultipleLocal as unknown as React.ComponentProps<\n                                    typeof CancelDeal\n                                >['onChangeMultiple']\n                            }\n                        />\n                    )}\n                    <div className='trade-params__multiplier-risk-management-dialog-bottom-separator' />\n                    <div className='trade-params__multiplier-risk-management-dialog-apply-button'>\n                        <Button\n                            text={localize('Apply')}\n                            onClick={apply}\n                            primary\n                            is_disabled={\n                                validation_errors.take_profit?.length > 0 ||\n                                validation_errors.stop_loss?.length > 0 ||\n                                isStateUnchanged()\n                            }\n                        />\n                    </div>\n                </Div100vhContainer>\n            </MobileDialog>\n        </React.Fragment>\n    );\n});\n\nexport default RiskManagementDialog;\n","import React from 'react';\nimport { Money } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport RiskManagementDialog from 'Modules/Trading/Containers/Multiplier/risk-management-dialog';\nimport { observer } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\nconst RiskManagementInfo = observer(() => {\n    const {\n        currency,\n        stop_loss,\n        take_profit,\n        has_take_profit,\n        has_stop_loss,\n        cancellation_duration,\n        cancellation_range_list,\n        has_cancellation,\n    } = useTraderStore();\n    const [is_dialog_open, setDialogOpen] = React.useState(false);\n    const has_risk_management = has_take_profit || has_stop_loss || has_cancellation;\n    const toggleDialog = () => {\n        setDialogOpen(!is_dialog_open);\n    };\n    const cancellation_label = cancellation_range_list.find(r => r.value === cancellation_duration)?.text;\n\n    return (\n        <React.Fragment>\n            <RiskManagementDialog\n                is_open={is_dialog_open}\n                toggleDialog={toggleDialog}\n                onClose={() => setDialogOpen(false)}\n            />\n            <div\n                className='mobile-widget mobile-widget__multiplier-risk-management'\n                onClick={() => setDialogOpen(!is_dialog_open)}\n            >\n                {!has_risk_management && (\n                    <div className='mobile-widget__item'>\n                        <div className='mobile-widget__item-label'>{localize('Risk management')}</div>\n                        <div className='mobile-widget__item-value'>{localize('Not set')}</div>\n                    </div>\n                )}\n                {has_take_profit && (\n                    <div className='mobile-widget__item'>\n                        <div className='mobile-widget__item-label'>{localize('Take profit')}</div>\n                        <div className='mobile-widget__item-value'>\n                            <Money amount={take_profit} currency={currency} show_currency />\n                        </div>\n                    </div>\n                )}\n                {has_stop_loss && (\n                    <div className='mobile-widget__item'>\n                        <div className='mobile-widget__item-label'>{localize('Stop loss')}</div>\n                        <div className='mobile-widget__item-value'>\n                            <Money amount={stop_loss} currency={currency} show_currency />\n                        </div>\n                    </div>\n                )}\n                {has_cancellation && (\n                    <div className='mobile-widget__item'>\n                        <div className='mobile-widget__item-label'>{localize('Deal Cancellation')}</div>\n                        <div className='mobile-widget__item-value'>{cancellation_label}</div>\n                    </div>\n                )}\n            </div>\n        </React.Fragment>\n    );\n});\n\nexport default RiskManagementInfo;\n","import React from 'react';\nimport { ArrowIndicator, Money, Text, Popover } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport Fieldset from 'App/Components/Form/fieldset';\nimport { observer } from '@deriv/stores';\nimport { getLocalizedBasis } from '@deriv/shared';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { TProposalTypeInfo } from 'Types';\n\ntype TProposalInfo = {\n    [key: string]: TProposalTypeInfo;\n};\n\nconst PayoutPerPointMobile = observer(() => {\n    const { currency, proposal_info, contract_type, is_vanilla, is_vanilla_fx } = useTraderStore();\n    const contract_key = contract_type?.toUpperCase();\n    // remove assertion and local TProposalInfo type after TS migration for trade package is complete\n    const { message, obj_contract_basis } = (proposal_info as TProposalInfo)?.[contract_key] || {};\n    const { text: label, value: payout_per_point } = obj_contract_basis || {};\n    const turbos_payout_message = (\n        <Localize i18n_default_text='This is the amount you’ll receive at expiry for every point of change in the underlying price, if the spot price never touches or breaches the barrier throughout the contract duration.' />\n    );\n    const vanilla_payout_message = is_vanilla_fx ? (\n        <Localize\n            i18n_default_text='The payout at expiry is equal to the payout per pip multiplied by the difference, <0>in pips</0>, between the final price and the strike price.'\n            components={[<strong key={0} />]}\n        />\n    ) : (\n        <Localize i18n_default_text='The payout at expiry is equal to the payout per point multiplied by the difference between the final price and the strike price.' />\n    );\n    const tooltip_text = is_vanilla ? vanilla_payout_message : turbos_payout_message;\n    if (!payout_per_point) return <Fieldset className='payout-per-point' />;\n    return (\n        <Fieldset className='payout-per-point'>\n            <div className='payout-per-point__label-wrapper'>\n                <Text size='xs' color='less-prominent' className='payout-per-point__label'>\n                    {is_vanilla_fx ? getLocalizedBasis().payout_per_pip : label}\n                </Text>\n                <Popover\n                    alignment='top'\n                    icon='info'\n                    is_bubble_hover_enabled\n                    margin={0}\n                    zIndex='9999'\n                    message={message ? tooltip_text : ''}\n                />\n            </div>\n            <Text size='xs' weight='bold' className='payout-per-point__value'>\n                <Money amount={payout_per_point} currency={currency} show_currency should_format={false} />\n                <ArrowIndicator className='trade-container__price-info-movement' value={payout_per_point} />\n            </Text>\n        </Fieldset>\n    );\n});\n\nexport default PayoutPerPointMobile;\n","import React, { useEffect, useRef, useState } from 'react';\nimport { useSwipeable } from 'react-swipeable';\nimport { Text } from '@deriv/components';\nimport { motion } from 'framer-motion';\n\ntype WheelPickerMobileProps = {\n    defaultValue?: string;\n    onChange?: (val: string) => void;\n    options: string[];\n    currency: string;\n    optionHeight?: number;\n};\n\ntype SwipeState = {\n    startY: number;\n    deltaY: number;\n    translateY: number;\n};\n\nconst calculateCharacterWidth = (str: string) => {\n    const charWidths = {\n        uppercase: 1.5,\n        lowercase: 0.8,\n        number: 1.5,\n        punctuation: 0.7,\n        default: 1.0,\n    };\n\n    return [...str].reduce((totalWidth, char) => {\n        if (/[A-Z]/.test(char)) {\n            return totalWidth + charWidths.uppercase;\n        } else if (/[a-z]/.test(char)) {\n            return totalWidth + charWidths.lowercase;\n        } else if (/[0-9]/.test(char)) {\n            return totalWidth + charWidths.number;\n        } else if (/[\\.,:;!?]/.test(char)) {\n            return totalWidth + charWidths.punctuation;\n        }\n        return totalWidth + charWidths.default;\n    }, 0);\n};\n\nexport function getTargetIndex({\n    deltaY,\n    snapTolerance,\n    optionHeight,\n    options,\n    selectedIndex,\n}: {\n    deltaY: number;\n    snapTolerance: number;\n    optionHeight: number;\n    options: string[];\n    selectedIndex: number;\n}) {\n    const absDeltaY = Math.abs(deltaY);\n    const yLeftover = absDeltaY % optionHeight;\n    const snapThreshold = Math.round(optionHeight * snapTolerance);\n    const snapY = Number(yLeftover >= snapThreshold);\n\n    const absDeltaIndex = Math.floor(absDeltaY / optionHeight) + snapY;\n    const deltaIndex = absDeltaIndex * Math.sign(deltaY) * -1;\n\n    const MIN_INDEX = 0;\n    const MAX_INDEX = options.length - 1;\n    const targetIndex = Math.min(MAX_INDEX, Math.max(MIN_INDEX, selectedIndex + deltaIndex));\n    return targetIndex;\n}\n\nconst calculateLimits = (swipeStartY: number, deltaY: number, optionHeight: number, optionsLength: number) => {\n    const MIN = 0;\n    const MAX = optionHeight * (optionsLength - 1);\n    const translateY = Math.min(MAX, Math.max(MIN, swipeStartY + deltaY));\n    const newIndex = Math.min(optionsLength - 1, Math.max(0, Math.round(translateY / optionHeight)));\n\n    return { translateY, newIndex };\n};\n\nconst WheelPickerMobile: React.FC<WheelPickerMobileProps> = ({\n    defaultValue,\n    onChange,\n    currency,\n    options,\n    optionHeight = 28,\n}) => {\n    const [selectedIndex, setSelectedIndex] = useState<number>(options.length - 1);\n\n    const [swipe, setSwipe] = useState<SwipeState>({ startY: 0, deltaY: 0, translateY: 0 });\n    const optionRef = useRef<HTMLDivElement>(null);\n    const pickerRef = useRef<HTMLDivElement>(null);\n\n    const swipeableHandlers = useSwipeable({\n        onSwipeStart: eventData => {\n            eventData.event.stopPropagation();\n            if (pickerRef.current && pickerRef.current.contains(eventData.event.target as Node)) {\n                setSwipe(swipe => ({ ...swipe, startY: swipe.translateY }));\n            }\n        },\n        onSwiping: ({ deltaY, first, event }) => {\n            event.stopPropagation();\n            if (first || (pickerRef.current && !pickerRef.current.contains(event.target as Node))) return;\n            const { translateY, newIndex } = calculateLimits(swipe.startY, deltaY, optionHeight, options.length);\n            setSwipe(swipe => ({\n                ...swipe,\n                deltaY,\n                translateY: (translateY + optionHeight * newIndex) / 2,\n            }));\n            setSelectedIndex(newIndex);\n        },\n        onSwiped: ({ deltaY, event }) => {\n            event.stopPropagation();\n            if (pickerRef.current && !pickerRef.current.contains(event.target as Node)) return;\n            const { newIndex } = calculateLimits(swipe.startY, deltaY, optionHeight, options.length);\n            setSwipe(swipe => ({ ...swipe, deltaY: 0, translateY: optionHeight * newIndex }));\n            setSelectedIndex(newIndex);\n        },\n        trackMouse: true,\n        delta: optionHeight,\n    });\n\n    useEffect(() => {\n        const defaultValueIndex = options.findIndex(o => o === defaultValue);\n        setSelectedIndex(defaultValueIndex !== -1 ? defaultValueIndex : options.length - 1);\n    }, []);\n\n    useEffect(() => {\n        const translateY = optionHeight * selectedIndex;\n        setSwipe(swipe => ({ ...swipe, translateY }));\n    }, [selectedIndex, options, optionHeight]);\n\n    useEffect(() => {\n        onChange?.(options[selectedIndex]);\n    }, [selectedIndex, onChange, options]);\n\n    const translateValue = `translateY(${-swipe.translateY}px)`;\n    const wheelStyle = {\n        transform: translateValue,\n        width: '100%',\n        top: `calc(50% - ${optionHeight / 2}px)`,\n    };\n\n    const getFontSize = (index: number) => {\n        if (index === selectedIndex) return 'xsm';\n        if (index === selectedIndex - 1 || index === selectedIndex + 1) return 'xs';\n        return 'xxs';\n    };\n    const dynamicPadding = (currency: string, options: string[]) => {\n        const basePadding = 40;\n        const paddingMultiplier = 8;\n\n        const currencyWidth = calculateCharacterWidth(currency);\n        const maxOptionWidth = Math.max(...options.map(option => calculateCharacterWidth(option)));\n        let maxContentWidth = Math.max(currencyWidth, maxOptionWidth);\n        if (currencyWidth === maxOptionWidth) {\n            maxContentWidth += 2;\n        }\n\n        return basePadding + maxContentWidth * paddingMultiplier;\n    };\n\n    return (\n        <div className='wheel-picker-mobile'>\n            <div className='picker-selected-wrapper'>\n                <div className='picker-selected'>\n                    <Text\n                        size='l'\n                        weight='bolder'\n                        color='prominent'\n                        align='center'\n                        as='h1'\n                        className='currency-label'\n                        style={{\n                            paddingLeft: `${dynamicPadding(currency, options)}px`,\n                        }}\n                    >\n                        {currency}\n                    </Text>\n                </div>\n            </div>\n            <div className='picker-viewport' ref={pickerRef}>\n                <div className='picker-wheel' data-testid='picker-wheel' style={wheelStyle} {...swipeableHandlers}>\n                    {options.map((option, index) => (\n                        <motion.div\n                            key={`option-${index}`}\n                            style={{ height: optionHeight }}\n                            className='picker-wheel__options'\n                            onMouseUp={() => setSelectedIndex(index)}\n                            transition={{ type: 'spring', stiffness: 300 }}\n                            ref={index === selectedIndex ? optionRef : null}\n                        >\n                            <Text\n                                size={getFontSize(index)}\n                                weight={index === selectedIndex ? 'bolder' : 'bold'}\n                                color={index === selectedIndex ? 'prominent' : 'disabled-1'}\n                                align='center'\n                                as='p'\n                            >\n                                {option}\n                            </Text>\n                        </motion.div>\n                    ))}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default WheelPickerMobile;\n","import React, { useEffect, useState } from 'react';\nimport { Button, Icon, PageOverlay, Popover, Text } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport WheelPickerMobile from '../../Form/WheelPicker/wheel-picker-mobile';\nimport './payout-per-point.scss';\nimport Fieldset from 'App/Components/Form/fieldset';\nimport { LabelPairedChevronsDownCaptionRegularIcon, LabelPairedChevronsUpCaptionRegularIcon } from '@deriv/quill-icons';\n\nconst PayoutPerPointMobileInput = ({\n    togglePayoutWheelPicker,\n    payoutChoices,\n    onPayoutClick,\n    selectedBarrier,\n    payout_per_point,\n    contract_type,\n    currency,\n}: {\n    togglePayoutWheelPicker: () => void;\n    payoutChoices: string[];\n    selectedBarrier: string;\n    onPayoutClick: (val: string) => void;\n    currency: string;\n    contract_type: string;\n    payout_per_point?: string;\n}) => {\n    const [initialPayout, setInitialPayout] = useState<string | null>(null);\n\n    const [payoutValue, setPayoutValue] = useState(payoutChoices[2] || payoutChoices[0]);\n\n    useEffect(() => {\n        if (initialPayout == null && payout_per_point) {\n            setInitialPayout(payout_per_point);\n        }\n    }, []);\n\n    const onSave = () => {\n        togglePayoutWheelPicker();\n        onPayoutClick(payoutValue);\n    };\n\n    const onClose = () => {\n        togglePayoutWheelPicker();\n        if (initialPayout) {\n            onPayoutClick(initialPayout);\n        }\n    };\n\n    const distance_tooltip_text = (\n        <div className='trade-container__barriers-tooltip'>\n            <Localize i18n_default_text='You will receive a payout at expiry if the spot price never breaches the barrier throughout the contract duration. Otherwise, your contract will be terminated early.' />\n        </div>\n    );\n    const header_tooltip_text = (\n        <div className='trade-container__barriers-tooltip'>\n            {contract_type === 'turboslong' ? (\n                <Localize i18n_default_text='The amount you’ll receive at expiry for every point of change above the barrier' />\n            ) : (\n                <Localize i18n_default_text='The amount you’ll receive at expiry for every point of change below the barrier.' />\n            )}\n        </div>\n    );\n\n    return (\n        <PageOverlay onClickClose={onClose}>\n            <div className='payout-per-point-mobile'>\n                <Fieldset className='payout-per-point-mobile__header'>\n                    <div className='payout-per-point-mobile__header__title'>\n                        <Text size='xs' weight='bold' color='prominent' as='h1'>\n                            <Localize i18n_default_text='Payout per Point' />\n                        </Text>\n                        <Popover\n                            alignment='bottom'\n                            icon='info'\n                            className='popover-icon'\n                            is_bubble_hover_enabled\n                            margin={0}\n                            zIndex='9999'\n                            message={header_tooltip_text}\n                        />\n                    </div>\n                    <button className='cross-icon' onClick={onClose}>\n                        <Icon icon='IcCross' data_testid='dt_modal_close_icon' />\n                    </button>\n                </Fieldset>\n                <WheelPickerMobile\n                    options={payoutChoices}\n                    defaultValue={payout_per_point || payoutChoices[2]}\n                    currency={currency}\n                    onChange={val => {\n                        setPayoutValue(val);\n                        onPayoutClick(payoutValue);\n                    }}\n                />\n                <Fieldset className='actions-wrapper'>\n                    <Text\n                        size='xxs'\n                        line_height='l'\n                        color='prominent'\n                        align='center'\n                        as='p'\n                        className='distance-to-current-spot'\n                    >\n                        <Localize i18n_default_text='Distance to current spot:' />\n                    </Text>\n                    <Popover\n                        alignment='top'\n                        className='popover-icon'\n                        is_bubble_hover_enabled\n                        disable_target_icon\n                        icon='info'\n                        zIndex='9999'\n                        message={distance_tooltip_text}\n                    >\n                        <div className='distance-to-current-spot__value'>\n                            <Text size='xxs' line_height='xs' color='prominent' align='center' as='p'>\n                                {selectedBarrier}\n                            </Text>\n                            {Number(selectedBarrier) < 0 ? (\n                                <LabelPairedChevronsDownCaptionRegularIcon\n                                    width={12}\n                                    height={12}\n                                    stroke='var(--text-prominent)'\n                                    className='indicator-icon'\n                                />\n                            ) : (\n                                <LabelPairedChevronsUpCaptionRegularIcon\n                                    width={12}\n                                    stroke='var(--text-prominent)'\n                                    height={12}\n                                    className='indicator-icon'\n                                />\n                            )}\n                        </div>\n                    </Popover>\n                </Fieldset>\n                <Button className='save-button' onClick={onSave}>\n                    <Localize i18n_default_text='Save' />\n                </Button>\n            </div>\n        </PageOverlay>\n    );\n};\n\nexport default PayoutPerPointMobileInput;\n","import React from 'react';\nimport { Collapsible, FadeWrapper, PageOverlay, Text } from '@deriv/components';\nimport { TradeParamsLoader } from 'App/Components/Elements/ContentLoader';\nimport AllowEqualsMobile from 'Modules/Trading/Containers/allow-equals';\nimport {\n    hasCallPutEqual,\n    hasDurationForCallPutEqual,\n    isRiseFallEqual,\n} from 'Stores/Modules/Trading/Helpers/allow-equals';\nimport {\n    AccumulatorOptionsWidget,\n    MultiplierOptionsWidget,\n} from 'Modules/Trading/Components/Form/TradeParams/Multiplier/widgets';\nimport AccumulatorsAmountMobile from 'Modules/Trading/Components/Form/TradeParams/Accumulator/accumulators-amount-mobile';\nimport AccumulatorsInfoDisplay from 'Modules/Trading/Components/Form/TradeParams/Accumulator/accumulators-info-display';\nimport { BarrierMobile, LastDigitMobile } from 'Modules/Trading/Containers/trade-params-mobile';\nimport ContractType from 'Modules/Trading/Containers/contract-type';\nimport MobileWidget from 'Modules/Trading/Components/Elements/mobile-widget';\nimport Purchase from 'Modules/Trading/Containers/purchase';\nimport RiskManagementInfo from 'Modules/Trading/Components/Elements/Multiplier/risk-management-info';\nimport TakeProfit from 'Modules/Trading/Components/Form/TradeParams/Multiplier/take-profit';\nimport 'Sass/app/_common/mobile-widget.scss';\nimport classNames from 'classnames';\nimport AccumulatorsStats from 'Modules/Contract/Components/AccumulatorsStats';\nimport Strike from 'Modules/Trading/Components/Form/TradeParams/strike';\nimport PayoutSelector from 'Modules/Trading/Components/Form/TradeParams/Turbos/payout-selector';\nimport PayoutPerPointMobile from 'Modules/Trading/Components/Elements/payout-per-point-mobile';\nimport TradeTypeTabs from 'Modules/Trading/Components/Form/TradeParams/trade-type-tabs';\nimport { observer } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { Localize } from '@deriv/translations';\nimport { TRADE_TYPES } from '@deriv/shared';\nimport PayoutPerPointMobileInput from '../Elements/PayoutPerPoint/payout-per-point-mobile-input';\n\ntype TCollapsibleTradeParams = Pick<\n    ReturnType<typeof useTraderStore>,\n    | 'form_components'\n    | 'has_take_profit'\n    | 'previous_symbol'\n    | 'is_accumulator'\n    | 'is_trade_params_expanded'\n    | 'is_multiplier'\n    | 'is_vanilla'\n    | 'is_turbos'\n    | 'onChange'\n    | 'take_profit'\n    | 'setIsTradeParamsExpanded'\n    | 'last_digit'\n    | 'contract_type'\n> & {\n    has_allow_equals: boolean;\n    is_allow_equal: boolean;\n};\n\nconst CollapsibleTradeParams = ({\n    form_components,\n    has_allow_equals,\n    has_take_profit,\n    previous_symbol,\n    is_allow_equal,\n    is_accumulator,\n    is_multiplier,\n    is_trade_params_expanded,\n    is_turbos,\n    is_vanilla,\n    onChange,\n    take_profit,\n    setIsTradeParamsExpanded,\n    last_digit,\n    contract_type,\n}: TCollapsibleTradeParams) => {\n    React.useEffect(() => {\n        if (previous_symbol && is_allow_equal && has_allow_equals) setIsTradeParamsExpanded(true);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [previous_symbol]);\n\n    const is_collapsed = !is_trade_params_expanded;\n    const is_non_interactive =\n        TRADE_TYPES.EVEN_ODD === contract_type || (TRADE_TYPES.RISE_FALL === contract_type && !has_allow_equals);\n\n    const onClick = (e: boolean) => {\n        setIsTradeParamsExpanded(e);\n    };\n\n    const toggleDigitsWidget = () => {\n        setIsTradeParamsExpanded(true);\n    };\n\n    const isVisible = (component: string) => form_components.includes(component);\n\n    return (\n        <Collapsible\n            position='top'\n            is_collapsed={is_collapsed}\n            onClick={onClick}\n            handle_button\n            is_non_interactive={is_non_interactive}\n        >\n            {is_accumulator && is_collapsed && <AccumulatorsStats />}\n            <div className='trade-params__contract-type-container'>\n                <ContractType />\n                {is_multiplier && <MultiplierOptionsWidget />}\n                {isVisible('trade_type_tabs') && <TradeTypeTabs />}\n                {is_accumulator && <AccumulatorOptionsWidget />}\n                {isVisible('last_digit') && is_collapsed && (\n                    <Text\n                        as='p'\n                        size='xxs'\n                        color='prominent'\n                        line_height='s'\n                        weight='bold'\n                        className='mobile-widget__digit'\n                        onClick={toggleDigitsWidget}\n                    >\n                        <Localize i18n_default_text='Digit: {{last_digit}} ' values={{ last_digit }} />\n                    </Text>\n                )}\n            </div>\n            {isVisible('last_digit') && (\n                <div data-collapsible='true'>\n                    <LastDigitMobile />\n                </div>\n            )}\n            {isVisible('barrier') && (\n                <div data-collapsible='true'>\n                    <BarrierMobile />\n                </div>\n            )}\n            {isVisible('strike') && (\n                <div data-collapsible='true'>\n                    <Strike />\n                </div>\n            )}\n            {!is_accumulator && <MobileWidget />}\n            {is_turbos && <PayoutSelector />}\n            {has_allow_equals && (\n                <div data-collapsible='true'>\n                    <AllowEqualsMobile />\n                </div>\n            )}\n            {is_multiplier && (\n                <div data-collapsible='true'>\n                    <RiskManagementInfo />\n                </div>\n            )}\n            {is_accumulator && [\n                <AccumulatorsAmountMobile key='accu_amount' />,\n                <div\n                    data-collapsible='true'\n                    key='accu_take_profit'\n                    className={classNames('take-profit', 'mobile-widget')}\n                >\n                    <TakeProfit\n                        take_profit={take_profit}\n                        has_take_profit={has_take_profit}\n                        onChange={onChange}\n                        has_info={false}\n                    />\n                </div>,\n                <div data-collapsible='true' key='accu_info'>\n                    <AccumulatorsInfoDisplay />\n                </div>,\n            ]}\n\n            {is_turbos && (\n                <div data-collapsible='true' className={classNames('take-profit', 'mobile-widget')}>\n                    <TakeProfit\n                        take_profit={take_profit}\n                        has_take_profit={has_take_profit}\n                        onChange={onChange}\n                        has_info={false}\n                    />\n                </div>\n            )}\n            {is_vanilla && <PayoutPerPointMobile />}\n\n            <div\n                className={classNames({\n                    'purchase-container': !is_vanilla,\n                    [`purchase-container__${is_accumulator ? 'accumulator' : 'turbos'}`]: is_accumulator || is_turbos,\n                })}\n            >\n                <Purchase />\n            </div>\n        </Collapsible>\n    );\n};\n\nconst ScreenSmall = observer(({ is_trade_enabled }: { is_trade_enabled: boolean }) => {\n    const trade_store = useTraderStore();\n    const {\n        is_accumulator,\n        is_multiplier,\n        is_turbos,\n        is_vanilla,\n        duration_unit,\n        contract_types_list,\n        contract_type,\n        expiry_type,\n        contract_start_type,\n        form_components,\n        has_take_profit,\n        onChange,\n        previous_symbol,\n        is_trade_params_expanded,\n        setIsTradeParamsExpanded,\n        take_profit,\n        last_digit,\n        open_payout_wheelpicker,\n        togglePayoutWheelPicker,\n        currency,\n        payout_per_point,\n        payout_choices,\n        setPayoutPerPoint,\n        barrier_1,\n    } = trade_store;\n    const is_allow_equal = !!trade_store.is_equal;\n\n    const collapsible_trade_params_props = {\n        is_accumulator,\n        is_multiplier,\n        is_turbos,\n        is_vanilla,\n        form_components,\n        has_take_profit,\n        onChange,\n        previous_symbol,\n        is_trade_params_expanded,\n        setIsTradeParamsExpanded,\n        take_profit,\n        is_allow_equal,\n        last_digit,\n        contract_type,\n    };\n\n    const has_callputequal_duration = hasDurationForCallPutEqual(\n        contract_types_list,\n        duration_unit,\n        contract_start_type\n    );\n\n    const has_callputequal = hasCallPutEqual(contract_types_list);\n    const has_allow_equals =\n        isRiseFallEqual(contract_type) && (has_callputequal_duration || expiry_type === 'endtime') && has_callputequal;\n\n    return !is_trade_enabled ? (\n        <div className='mobile-wrapper__content-loader'>\n            <TradeParamsLoader speed={2} />\n        </div>\n    ) : (\n        <>\n            {open_payout_wheelpicker ? (\n                <PayoutPerPointMobileInput\n                    togglePayoutWheelPicker={togglePayoutWheelPicker}\n                    currency={currency}\n                    selectedBarrier={barrier_1}\n                    onPayoutClick={setPayoutPerPoint}\n                    payoutChoices={payout_choices}\n                    payout_per_point={payout_per_point}\n                    contract_type={contract_type}\n                />\n            ) : (\n                <CollapsibleTradeParams has_allow_equals={has_allow_equals} {...collapsible_trade_params_props} />\n            )}\n        </>\n    );\n});\n\nexport default ScreenSmall;\n"],"names":["exports","React","_interopNamespace","e","__esModule","n","Object","create","keys","forEach","k","d","getOwnPropertyDescriptor","defineProperty","get","enumerable","React__namespace","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","LEFT","RIGHT","UP","DOWN","defaultProps","delta","preventDefaultTouchmoveEvent","rotationAngle","trackMouse","trackTouch","initialState","first","initial","start","swiping","xy","mouseMove","mouseUp","touchEnd","touchMove","touchStart","getDirection","absX","absY","deltaX","deltaY","rotateXYByAngle","pos","angle","angleInRadians","Math","PI","cos","sin","getHandlers","set","handlerProps","onStart","event","touches","state","props","document","addEventListener","onMove","onUp","_ref","clientX","clientY","concat","timeStamp","_ref2","_rotateXYByAngle","x","y","abs","time","velocity","sqrt","vxvy","dir","toLowerCase","eventData","onSwipeStart","onSwiping","cancelablePageSwipe","onSwiped","cancelable","preventDefault","onEnd","onSwipedDir","onTap","cleanUpMouse","removeEventListener","attachTouch","el","passive","cleanup","tls","_ref3","h","_ref4","output","ref","addState","cleanUpTouch","onMouseDown","updateTransientState","useSwipeable","options","transientState","useRef","transientProps","current","_React$useMemo","useMemo","stateSetter","handlers","factory","AllowEquals","onChange","is_allow_equal","has_equals_only","className","classNames","Checkbox","label","localize","value","name","persist","_e$target","checked","Number","disabled","Text","as","size","Localize","i18n_default_text","observer","_useTraderStore","useTraderStore","allow_equals_props","is_equal","requestPreviewProposal","debounce","store","onProposalResponse","override","undefined","should_show_error","new_store","_objectSpread","requests","createProposalRequests","subscription_map","onResponse","response","error","subscription","id","isEmptyObject","proposal_requests","type","WS","subscribeProposal","forget","Basis","basis","duration_unit","duration_value","toggleModal","has_duration_error","selected_basis","setSelectedAmount","setAmountError","_useStore","useStore","ui","client","addToast","currency","contract_type","is_turbos","is_vanilla","onChangeMultiple","trade_amount","amount","trade_basis","trade_duration_unit","trade_duration","duration","stake_boundary","toUpperCase","min_stake","max_stake","user_currency_decimal_places","getDecimalPlaces","zero_decimals","toFixed","min_amount","parseFloat","toString","replace","validateAmount","localized_message","min_max_stake_message","values","selected_value","content","timeout","isNaN","MinMaxStakeInfo","strike__pos","Numpad","format","onSubmit","on_change_obj","min","max","is_currency","render","Money","should_format","reset_press_interval","reset_value","pip_size","onValidate","submit_label","onValueChange","num","amount_tab_idx","setAmountTabIdx","stake_value","payout_value","_useTraderStore2","basis_list","active_index","findIndex","b","Tabs","onTabItemClick","top","map","basis_option","text","is_open","usePreventIOSZoom","Modal","is_title_centered","should_header_stick_body","height","width","title","Div100vhContainer","max_autoheight_offset","TradeParamsMobile","trade_store","_React$useState2","_slicedToArray","setStakeValue","_React$useState4","commission","setCommission","_React$useState6","stop_out","setStopOut","stake_ref","isMounted","useIsMounted","dispose","_proposal$limit_order","_proposal$limit_order2","proposal","echo_req","CONTRACT_TYPES","MULTIPLIER","limit_order","order_amount","AmountMobile","stake","MultipliersInfo","should_show_tooltip","_current_value_object","items_list","contract_name","current_value_object","info","_ref$is_tooltip_disab","is_tooltip_disabled","_ref$popover_alignmen","popover_alignment","_ref$should_show_tool","Popover","alignment","classNameBubble","disable_target_icon","icon","is_bubble_hover_enabled","zIndex","message","RadioGroup","selected","onToggle","Item","MultiplierOptions","multiplier","multiplier_range_list","RadioGroupWithInfoMobile","TRADE_TYPES","_proposal_info$ACCU","_proposal_info$ACCU2","modal_title","accumulator_range_list","growth_rate","tick_size_barrier_percentage","proposal_info","has_error_or_not_loaded","ACCU","has_error","ACCUMULATOR","getGrowthRatePercentage","has_close_icon","color","components","Expiration","is_text_only","text_size","Footer","has_separator","Button","large","primary","has_effect","onClick","AmountWidget","expiration","is_crypto_multiplier","setIsOpen","is_expiration_modal_open","setIsExpirationModalOpen","toggleExpirationModal","MultiplierAmountModal","weight","show_currency","commission_text_size","stop_out_text_size","MultipliersExpiration","MultipliersExpirationModal","MultiplierAmountWidget","amount_widget_props","RadioGroupOptionsWidget","displayed_trade_param","tooltip_message","is_disabled","clickAndKeyEventHandler","RadioGroupOptionsModal","onKeyDown","stopPropagation","MultiplierOptionsWidget","AccumulatorOptionsWidget","_useTraderStore3","has_open_accu_contract","current_focus","setCurrentFocus","is_single_currency","MobileWrapper","LabeledQuantityInputMobile","input_label","classNameInlinePrefix","classNameInput","fractional_digits","inline_prefix","is_autocomplete_disabled","is_float","is_hj_whitelisted","is_incrementable","is_negative_disabled","max_length","AMOUNT_MAX_LENGTH","ariaLabel","updateAmountChanges","obj","setDurationError","has_amount_error","selected_duration","setSelectedDuration","duration_min_max","_getDurationMinMaxVal2","getDurationMinMaxValues","min_tick","max_tick","tick_duration","TickPicker","default_value","max_value","min_value","tick","singular_label","plural_label","_ref$contract_expiry","contract_expiry","duration_unit_option","duration_values","expiry_epoch","_ref$show_expiry","show_expiry","setHasError","addComma","validateDuration","trunc","fixed_date","epoch","moment","add","expiry_date","Date","getTime","toUTCString","substring","setExpiryDate","d_duration","_getUnitMap$duration_","getUnitMap","name_plural","duration_unit_text","DurationRangeText","ExpiryText","expiry_type","v","duration_tab_idx","h_duration","m_duration","s_duration","setDurationTabIdx","t_duration","duration_units_list","handleRelativeChange","date","selected_basis_option","index","unit","single_tab_has_no_label","DurationTicksWidgetMobile","DurationNumbersWidgetMobile","RelativeDatepicker","min_date","max_date","DEFAULT_DURATION","freeze","t","s","m","reducer","payload","getDefaultDuration","tab_index","form_components","initial_duration_tab_idx","_React$useReducer2","trade_param_tab_idx","curr_duration_unit","curr_duration_value","dispatch","selected_duration_unit","_defineProperty","header","ThemedScrollbars","isVisible","component_key","includes","setTradeParamTabIdx","selected_basis_value","store_duration_unit","resetToDefaultDuration","default_store_duration","toggled_duration_tab_idx","default_duration_tab_idx","default_duration","getHeaderContent","tab_key","default_duration_obj","find","toggled_duration_obj","default_timeframe","slice","toggled_duration_text","DurationMobile","LastDigitMobile","LastDigit","BarrierMobile","Barrier","onChangeUiStore","is_multiplier","setTabIndex","assertDurationIsWithinBoundary","contract_expiry_type","getExpiryType","toggleWidget","localized_basis","getLocalizedBasis","lookup","formatted_duration_unit","getHumanReadableDuration","payout","stakeOrPayout","TradeParamsModal","DealCancellationWarningDialog","is_visible","onConfirm","onCancel","disableApp","enableApp","should_show_cancellation_warning","toggleCancellationWarning","Dialog","confirm_button_text","cancel_button_text","is_mobile_full_width","portal_element_id","defaultChecked","has_cancellation","has_take_profit","has_stop_loss","cancellation_duration","cancellation_range_list","is_deal_cancel_warning_visible","setDealCancelWarningVisibility","onToggleCancellation","Fieldset","should_show_popover","onChangeCancellationDuration","_validation_errors$ta","_validation_errors$st","onClose","toggleDialog","take_profit","stop_loss","applied_risk_management_state","setState","validation_errors","setValidationErrors","should_show_deal_cancellation","getStateToCompare","_state","props_to_pick","pick","validate","new_state","onChangeMultipleLocal","MobileDialog","visible","has_content_scroll","height_offset","TakeProfit","StopLoss","CancelDeal","isDeepEqual","_cancellation_range_l","is_dialog_open","setDialogOpen","has_risk_management","cancellation_label","r","RiskManagementDialog","is_vanilla_fx","contract_key","obj_contract_basis","payout_per_point","turbos_payout_message","vanilla_payout_message","tooltip_text","payout_per_pip","margin","ArrowIndicator","calculateCharacterWidth","str","charWidths","_toConsumableArray","reduce","totalWidth","char","test","calculateLimits","swipeStartY","optionHeight","optionsLength","MAX","translateY","newIndex","round","defaultValue","_ref2$optionHeight","_useState2","useState","selectedIndex","setSelectedIndex","_useState4","startY","swipe","setSwipe","optionRef","pickerRef","swipeableHandlers","contains","_calculateLimits","useEffect","defaultValueIndex","o","wheelStyle","transform","getFontSize","align","style","paddingLeft","currencyWidth","maxOptionWidth","option","maxContentWidth","dynamicPadding","motion","div","onMouseUp","transition","stiffness","togglePayoutWheelPicker","payoutChoices","onPayoutClick","selectedBarrier","initialPayout","setInitialPayout","payoutValue","setPayoutValue","distance_tooltip_text","header_tooltip_text","PageOverlay","onClickClose","Icon","data_testid","WheelPickerMobile","val","line_height","LabelPairedChevronsDownCaptionRegularIcon","stroke","LabelPairedChevronsUpCaptionRegularIcon","CollapsibleTradeParams","has_allow_equals","previous_symbol","is_accumulator","is_trade_params_expanded","setIsTradeParamsExpanded","last_digit","is_collapsed","is_non_interactive","EVEN_ODD","RISE_FALL","component","Collapsible","position","handle_button","AccumulatorsStats","ContractType","TradeTypeTabs","Strike","MobileWidget","PayoutSelector","AllowEqualsMobile","RiskManagementInfo","AccumulatorsAmountMobile","has_info","AccumulatorsInfoDisplay","PayoutPerPointMobile","Purchase","ScreenSmall","is_trade_enabled","contract_types_list","contract_start_type","open_payout_wheelpicker","payout_choices","setPayoutPerPoint","barrier_1","collapsible_trade_params_props","has_callputequal_duration","hasDurationForCallPutEqual","has_callputequal","hasCallPutEqual","isRiseFallEqual","PayoutPerPointMobileInput","TradeParamsLoader","speed"],"sourceRoot":""}