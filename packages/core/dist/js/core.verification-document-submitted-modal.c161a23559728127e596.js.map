{"version":3,"file":"js/core.verification-document-submitted-modal.c161a23559728127e596.js","mappings":"oKAcA,MAgEA,EAhE2BA,IAQyB,IARxB,SACxBC,EAAQ,UACRC,EAAS,WACTC,EAAU,KACVC,EAAI,uBACJC,GAAyB,EAAK,QAC9BC,EAAO,KACPC,GAC2CP,EAC3C,MAAM,UAAEQ,IAAcC,EAAAA,EAAAA,KAEtB,OACIC,EAAAA,EAAAA,KAACC,EAAAA,kBAAiB,CACdT,WAAWU,EAAAA,EAAAA,GAAK,sCAAuC,CACnD,iDAAkDT,IAEtDU,YAAaL,GAAaH,EAC1BS,cAAc,QAAOb,UAErBc,EAAAA,EAAAA,MAAA,OACIb,WAAWU,EAAAA,EAAAA,GAAK,sCAAuC,CACnD,CAAC,GAAGV,sBAA+BA,IACpCD,SAAA,CAEFG,IACGM,EAAAA,EAAAA,KAAA,OACIR,WAAWU,EAAAA,EAAAA,GAAK,mCAAoC,CAChD,CAAC,GAAGV,mBAA4BA,IACjCD,SAEFG,KAGTM,EAAAA,EAAAA,KAACM,EAAAA,KAAI,CACDC,GAAG,MACHC,MAAM,UACNC,OAAO,OACPC,MAAM,SACNlB,WAAWU,EAAAA,EAAAA,GAAK,8BAA+B,CAC3C,CAAC,GAAGV,cAAuBA,IAC5BD,SAEFK,IAEJC,IACGG,EAAAA,EAAAA,KAAA,OAAKR,UAAU,qCAAoCD,UAC/CS,EAAAA,EAAAA,KAACM,EAAAA,KAAI,CACDd,WAAWU,EAAAA,EAAAA,GAAK,CACZ,CAAC,GAAGV,WAAoBA,IAE5Be,GAAG,IACHI,KAAK,KACLD,MAAM,SAAQnB,SAEbM,MAIZN,MAEW,C,oCCxE5B,Q,UAAiC,C,uICKjC,MCLA,GDKsCqB,EAAAA,EAAAA,WAAS,KAC3C,MAAM,GAAEC,EAAE,OAAEC,IAAWC,EAAAA,EAAAA,MACjB,0BACFC,EAAyB,8BACzBC,EAA6B,2BAC7BC,EAA0B,0BAC1BC,EAAyB,6BACzBC,GACAP,GACE,gBAAEQ,GAAoBP,EACtBlB,GAAUI,EAAAA,EAAAA,KAACsB,EAAAA,SAAQ,CAACC,kBAAkB,kCACtCC,GACFxB,EAAAA,EAAAA,KAACsB,EAAAA,SAAQ,CAACC,kBAAkB,iIAE1B7B,GAAOM,EAAAA,EAAAA,KAACyB,EAAAA,KAAI,CAAC/B,KAAK,gBAAgBgC,MAAO,GAAIC,OAAQ,KAE3DC,EAAAA,WAAgB,KACZP,GAAiB,GAClB,CAACA,IAUJ,OACIrB,EAAAA,EAAAA,KAAC6B,EAAAA,MAAK,CACFrC,UAAU,wCACVsC,QAASd,EACTe,gBAAgB,EAAMxC,UAEtBS,EAAAA,EAAAA,KAACgC,EAAAA,EAAkB,CAACpC,QAASA,EAASF,KAAMA,EAAMG,KAAM2B,EAAYjC,UAChES,EAAAA,EAAAA,KAACiC,EAAAA,OAAM,CAACzC,UAAU,oBAAoB0C,YAAU,EAACC,QAf7CA,KACRlB,IACAE,GAA0B,GAC1BC,GAA6B,IAEjCF,GAA2B,EAAM,EAU0CkB,SAAO,EAACC,OAAK,EAAA9C,UAC5ES,EAAAA,EAAAA,KAACsB,EAAAA,SAAQ,CAACC,kBAAkB,kBAGhC,G","sources":["webpack:///../../account/src/Components/icon-message-content/icon-message-content.tsx","webpack:///../../account/src/Components/icon-message-content/index.ts","webpack:///./App/Containers/Modals/VerificationDocumentSubmitted/verification-document-submitted.tsx","webpack:///./App/Containers/Modals/VerificationDocumentSubmitted/index.ts"],"sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport { Div100vhContainer, Text } from '@deriv/components';\nimport { useDevice } from '@deriv-com/ui';\n\ntype TIconMessageContent = {\n    className?: string;\n    full_width?: boolean;\n    icon: React.ReactElement;\n    is_disabled_for_mobile?: boolean;\n    message: React.ReactNode;\n    text?: React.ReactNode;\n};\n\nconst IconMessageContent = ({\n    children,\n    className,\n    full_width,\n    icon,\n    is_disabled_for_mobile = false,\n    message,\n    text,\n}: React.PropsWithChildren<TIconMessageContent>) => {\n    const { isDesktop } = useDevice();\n\n    return (\n        <Div100vhContainer\n            className={clsx('account-management__message-wrapper', {\n                'account-management__message-wrapper-full-width': full_width,\n            })}\n            is_disabled={isDesktop || is_disabled_for_mobile}\n            height_offset='110px'\n        >\n            <div\n                className={clsx('account-management__message-content', {\n                    [`${className}__message-content`]: className,\n                })}\n            >\n                {icon && (\n                    <div\n                        className={clsx('account-management__message-icon', {\n                            [`${className}__message-icon`]: className,\n                        })}\n                    >\n                        {icon}\n                    </div>\n                )}\n                <Text\n                    as='div'\n                    color='general'\n                    weight='bold'\n                    align='center'\n                    className={clsx('account-management__message', {\n                        [`${className}__message`]: className,\n                    })}\n                >\n                    {message}\n                </Text>\n                {text && (\n                    <div className='account-management__text-container'>\n                        <Text\n                            className={clsx({\n                                [`${className}__text`]: className,\n                            })}\n                            as='p'\n                            size='xs'\n                            align='center'\n                        >\n                            {text}\n                        </Text>\n                    </div>\n                )}\n                {children}\n            </div>\n        </Div100vhContainer>\n    );\n};\n\nexport default IconMessageContent;\n","import IconMessageContent from './icon-message-content';\n\nexport default IconMessageContent;\n","import React from 'react';\nimport { Button, Modal, Icon } from '@deriv/components';\nimport { observer, useStore } from '@deriv/stores';\nimport { Localize } from '@deriv/translations';\nimport './verification-document-submitted.scss';\nimport IconMessageContent from '@deriv/account/src/Components/icon-message-content';\n\nconst VerificationDocumentSubmitted = observer(() => {\n    const { ui, client } = useStore();\n    const {\n        is_verification_submitted,\n        is_from_success_deposit_modal,\n        setIsVerificationSubmitted,\n        setShouldTriggerTourGuide,\n        setIsFromSuccessDepositModal,\n    } = ui;\n    const { updateMT5Status } = client;\n    const message = <Localize i18n_default_text='We’ve received your documents' />;\n    const description = (\n        <Localize i18n_default_text='We’ll need 1 - 3 days to review your documents and notify you by email. You can practice with demo accounts in the meantime.' />\n    );\n    const icon = <Icon icon='IcAccountTick' width={72} height={72} />;\n\n    React.useEffect(() => {\n        updateMT5Status();\n    }, [updateMT5Status]);\n\n    const onClick = () => {\n        if (is_from_success_deposit_modal) {\n            setShouldTriggerTourGuide(true);\n            setIsFromSuccessDepositModal(false);\n        }\n        setIsVerificationSubmitted(false);\n    };\n\n    return (\n        <Modal\n            className='verification-document-submitted-modal'\n            is_open={is_verification_submitted}\n            has_close_icon={false}\n        >\n            <IconMessageContent message={message} icon={icon} text={description}>\n                <Button className='dc-dialog__button' has_effect onClick={onClick} primary large>\n                    <Localize i18n_default_text='Continue' />\n                </Button>\n            </IconMessageContent>\n        </Modal>\n    );\n});\n\nexport default VerificationDocumentSubmitted;\n","import VerificationDocumentSubmitted from './verification-document-submitted';\n\nexport default VerificationDocumentSubmitted;\n"],"names":["_ref","children","className","full_width","icon","is_disabled_for_mobile","message","text","isDesktop","useDevice","_jsx","Div100vhContainer","clsx","is_disabled","height_offset","_jsxs","Text","as","color","weight","align","size","observer","ui","client","useStore","is_verification_submitted","is_from_success_deposit_modal","setIsVerificationSubmitted","setShouldTriggerTourGuide","setIsFromSuccessDepositModal","updateMT5Status","Localize","i18n_default_text","description","Icon","width","height","React","Modal","is_open","has_close_icon","IconMessageContent","Button","has_effect","onClick","primary","large"],"sourceRoot":""}