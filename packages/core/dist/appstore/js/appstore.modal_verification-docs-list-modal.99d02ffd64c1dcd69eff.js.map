{"version":3,"file":"appstore/js/appstore.modal_verification-docs-list-modal.99d02ffd64c1dcd69eff.js","mappings":"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","sources":["webpack://@deriv/appstore/../hooks/src/useGetStatus.ts","webpack://@deriv/appstore/../../node_modules/@deriv/quill-icons/dist/esm/react/LabelPaired/LabelPairedChevronRightMdRegularIcon.js","webpack://@deriv/appstore/./src/components/modals/verification-docs-list-modal/ListItem.tsx","webpack://@deriv/appstore/./src/components/modals/verification-docs-list-modal/verification-docs-list-modal.tsx","webpack://@deriv/appstore/./src/components/modals/verification-docs-list-modal/index.ts","webpack://@deriv/appstore/../hooks/src/useIsSelectedMT5AccountCreated.ts"],"sourcesContent":["import { useStore } from '@deriv/stores';\nimport useGetMFAccountStatus from './useGetMFAccountStatus';\nimport useIsSelectedMT5AccountCreated from './useIsSelectedMT5AccountCreated';\nimport { CFD_PLATFORMS } from '@deriv/shared';\n\n/** A custom hook to fetch the status badge value and client_kyc_status for MF account and MT5 account \nMF account status is fetched from useGetMFAccountStatus\nMT5 account status is fetched from useIsSelectedMT5AccountCreated\n*/\nconst useGetStatus = () => {\n    const { common } = useStore();\n    const { mf_account_status, kyc_status } = useGetMFAccountStatus();\n    const { is_selected_MT5_account_created, existing_account_status, existing_account, available_account_to_create } =\n        useIsSelectedMT5AccountCreated();\n    const { platform } = common;\n\n    if (platform === CFD_PLATFORMS.MT5) {\n        return {\n            status_badge: existing_account_status,\n            client_kyc_status: is_selected_MT5_account_created\n                ? existing_account?.client_kyc_status\n                : available_account_to_create?.client_kyc_status,\n        };\n    }\n    return {\n        status_badge: mf_account_status,\n        client_kyc_status: kyc_status,\n    };\n};\n\nexport default useGetStatus;\n","import * as React from 'react';\nimport { forwardRef } from 'react';\nconst LabelPairedChevronRightMdRegularIcon = ({ title, titleId, ...props }, ref) => (React.createElement(\"svg\", { xmlns: 'http://www.w3.org/2000/svg', width: 10, height: 24, viewBox: '0 0 10 24', role: 'img', ref: ref, \"aria-labelledby\": titleId, ...props },\n    title ? React.createElement(\"title\", { id: titleId }, title) : null,\n    React.createElement(\"g\", null,\n        React.createElement(\"path\", { d: 'M9.344 11.656a.53.53 0 0 1 0 .719l-6 6a.53.53 0 0 1-.719 0 .53.53 0 0 1 0-.719L8.281 12 2.625 6.375a.53.53 0 0 1 0-.719.53.53 0 0 1 .719 0z' })),\n    React.createElement(\"defs\", null,\n        React.createElement(\"clipPath\", { id: '5a3d60b48110bc5b0d2ce3227b980b18__a' },\n            React.createElement(\"path\", { d: 'M0 0h10v24H0z' })))));\nconst ForwardRef = forwardRef(LabelPairedChevronRightMdRegularIcon);\nexport default ForwardRef;\n","import React from 'react';\nimport { observer, useStore } from '@deriv/stores';\nimport { LabelPairedChevronRightMdRegularIcon } from '@deriv/quill-icons';\nimport { useHistory } from 'react-router-dom';\nimport { Localize } from '@deriv/translations';\nimport { Text, StatusBadge } from '@deriv/components';\nimport { AUTH_STATUS_CODES } from '@deriv/shared';\nimport './verification-docs-list-modal.scss';\nimport { useDevice } from '@deriv-com/ui';\nimport classNames from 'classnames';\n\ntype TListItemProps = {\n    id: string;\n    text: string;\n    status?: string | number;\n    route: string;\n};\n\ntype TAuthStatusCodes = typeof AUTH_STATUS_CODES[keyof typeof AUTH_STATUS_CODES];\n\nconst getBadgeStatus = (status: TAuthStatusCodes) => {\n    switch (status) {\n        case AUTH_STATUS_CODES.VERIFIED:\n            return {\n                text: <Localize i18n_default_text='Verified' />,\n                icon: 'IcMt5Success',\n                icon_size: '18',\n            };\n        case AUTH_STATUS_CODES.PENDING:\n            return {\n                text: <Localize i18n_default_text='In review' />,\n                icon: 'IcMt5Pending',\n                icon_size: '12',\n            };\n        case AUTH_STATUS_CODES.REJECTED:\n        case AUTH_STATUS_CODES.SUSPECTED:\n            return {\n                text: <Localize i18n_default_text='Failed' />,\n                icon: 'IcMt5Failed',\n                icon_size: '18',\n            };\n        default:\n            return {\n                text: '',\n                icon: '',\n            };\n    }\n};\n\nconst ListItem = observer(({ id, text, status, route }: TListItemProps) => {\n    const { text: badge_text, icon: badge_icon, icon_size: badge_size } = getBadgeStatus(status);\n    const { traders_hub, ui } = useStore();\n    const { isMobile } = useDevice();\n    const { setVerificationModalOpen } = traders_hub;\n    const history = useHistory();\n    const is_document_verified = status === AUTH_STATUS_CODES.VERIFIED;\n\n    const onClickItem = () => {\n        if (is_document_verified) {\n            return;\n        }\n        if (id === 'tax') {\n            ui.setFieldRefToFocus('employment-tax-section');\n        }\n        if (id === 'address' && status) {\n            localStorage.setItem('mt5_poa_status', String(status));\n        }\n        history.push(route);\n        setVerificationModalOpen(false);\n    };\n\n    return (\n        <div\n            className={classNames('verification-docs-list-modal__content-list-item', {\n                'verification-docs-list-modal__content-list-item--disabled': is_document_verified,\n            })}\n            onClick={onClickItem}\n        >\n            <Text size={isMobile ? 'xxs' : 'xs'} line_height='xl' weight='bold'>\n                <Localize i18n_default_text={text} />\n            </Text>\n            {status === AUTH_STATUS_CODES.NONE || (id === 'tax' && status === 0) ? (\n                <LabelPairedChevronRightMdRegularIcon fill='var(--text-prominent)' />\n            ) : (\n                <div className='verification-docs-list-modal__card'>\n                    <StatusBadge\n                        account_status={status}\n                        icon={badge_icon}\n                        text={badge_text}\n                        icon_size={badge_size}\n                        className='verification-docs-list-modal__status-badge'\n                    />\n                    <LabelPairedChevronRightMdRegularIcon\n                        className='verification-docs-list-modal__card--icon'\n                        fill={is_document_verified ? 'var(--text-disabled-1)' : 'var(--text-prominent)'}\n                    />\n                </div>\n            )}\n        </div>\n    );\n});\n\nexport default ListItem;\n","import React, { Suspense } from 'react';\nimport { useDevice } from '@deriv-com/ui';\nimport { observer, useStore } from '@deriv/stores';\nimport { Localize } from '@deriv/translations';\nimport { Text, Modal, UILoader, MobileDialog, Icon } from '@deriv/components';\nimport { routes, CFD_PLATFORMS } from '@deriv/shared';\nimport { useGetStatus, useIsSelectedMT5AccountCreated } from '@deriv/hooks';\nimport ListItem from './ListItem';\nimport './verification-docs-list-modal.scss';\n\ntype TItems = {\n    id: string;\n    text: string;\n    status: string | number;\n    route: string;\n};\n\nconst VerificationDocsListModalContent = observer(() => {\n    const {\n        common: { platform },\n    } = useStore();\n    const { isMobile } = useDevice();\n    const { client_kyc_status } = useGetStatus();\n    const { is_selected_MT5_account_created } = useIsSelectedMT5AccountCreated();\n    if (!client_kyc_status) return null;\n    const { poi_status, poa_status, valid_tin, required_tin } = client_kyc_status;\n    const is_tin_required = required_tin === 1 && valid_tin === 0;\n\n    const items: TItems[] = [\n        poi_status && {\n            id: 'identity',\n            text: 'Proof of identity',\n            status: poi_status,\n            route: routes.proof_of_identity,\n        },\n        poa_status && {\n            id: 'address',\n            text: 'Proof of address',\n            status: poa_status,\n            route: routes.proof_of_address,\n        },\n        is_tin_required && {\n            id: 'tax',\n            text: 'Additional information',\n            status: valid_tin,\n            route: routes.personal_details,\n        },\n    ].filter(Boolean) as TItems[];\n\n    return (\n        <div className='verification-docs-list-modal__content'>\n            <Icon icon='IcDerivLightUserVerification' size={128} />\n            <Text size={isMobile ? 'xxs' : 'xs'} line_height='xl' align='center'>\n                {platform === CFD_PLATFORMS.MT5 && !is_selected_MT5_account_created ? (\n                    <Localize i18n_default_text='Confirm your details to open the account. After verification, you can begin trading.' />\n                ) : (\n                    <Localize i18n_default_text='Your account needs verification.' />\n                )}\n            </Text>\n            <div className='verification-docs-list-modal__content-list'>\n                {items.map(item => (\n                    <ListItem key={item.id} id={item.id} text={item.text} status={item.status} route={item.route} />\n                ))}\n            </div>\n        </div>\n    );\n});\n\nconst VerificationDocsListModal = observer(() => {\n    const { traders_hub, common } = useStore();\n    const { is_verification_docs_list_modal_visible, setVerificationModalOpen } = traders_hub;\n    const { platform } = common;\n    const { is_selected_MT5_account_created } = useIsSelectedMT5AccountCreated();\n    const { isMobile } = useDevice();\n    const getTitle = () =>\n        platform === CFD_PLATFORMS.MT5 && !is_selected_MT5_account_created ? (\n            <Localize i18n_default_text='Complete your profile' />\n        ) : (\n            <Localize i18n_default_text='Verification required' />\n        );\n    return (\n        <Suspense fallback={<UILoader />}>\n            {!isMobile ? (\n                <Modal\n                    is_open={is_verification_docs_list_modal_visible}\n                    toggleModal={() => setVerificationModalOpen(false)}\n                    title={getTitle()}\n                    width='44rem'\n                    should_header_stick_body={false}\n                    has_close_icon\n                >\n                    <VerificationDocsListModalContent />\n                </Modal>\n            ) : (\n                <MobileDialog\n                    portal_element_id='deriv_app'\n                    title={getTitle()}\n                    visible={is_verification_docs_list_modal_visible}\n                    onClose={() => setVerificationModalOpen(false)}\n                >\n                    <VerificationDocsListModalContent />\n                </MobileDialog>\n            )}\n        </Suspense>\n    );\n});\n\nexport default VerificationDocsListModal;\n","import VerificationDocsListModal from './verification-docs-list-modal';\n\nexport default VerificationDocsListModal;\n","import React from 'react';\nimport { useStore } from '@deriv/stores';\nimport { MT5_ACCOUNT_STATUS } from '@deriv/shared';\n\nconst getStatusBadge = (status: string) => {\n    if (status === 'proof_failed') {\n        return MT5_ACCOUNT_STATUS.FAILED;\n    } else if (status === 'verification_pending') {\n        return MT5_ACCOUNT_STATUS.PENDING;\n    } else if (status === 'needs_verification') {\n        return MT5_ACCOUNT_STATUS.NEEDS_VERIFICATION;\n    }\n};\n\n/**\n * Custom React hook to check if the selected MT5 account has been created.\n *\n * @returns {Object} An object containing the following properties:\n *\n * - `is_selected_MT5_account_created` (boolean): Indicates whether the selected MT5 account has been created.\n * - `existing_account` (Object | null): If the selected account is created, contains the MT5 account details; otherwise `null`.\n * - `existing_account_status` (string | null): Status of the created account (e.g., 'failed', 'pending', 'needs_verification'), or `null` if no account is created.\n * - `available_account_to_create` (Object | null): The account available to create for the selected product. Will be `null` if an account is already created.\n */\n\nconst useIsSelectedMT5AccountCreated = () => {\n    const {\n        client,\n        modules: { cfd },\n        traders_hub: { selected_account_type },\n    } = useStore();\n    const { mt5_login_list, trading_platform_available_accounts, updateMT5AccountDetails } = client;\n\n    React.useEffect(() => {\n        async function fetchData() {\n            await updateMT5AccountDetails();\n        }\n        fetchData();\n    }, [updateMT5AccountDetails]);\n\n    const { jurisdiction_selected_shortcode, product } = cfd;\n    const created_account = mt5_login_list.filter(\n        account =>\n            account.landing_company_short === jurisdiction_selected_shortcode &&\n            account.product === product &&\n            account.account_type === selected_account_type\n    );\n    const selected_account = trading_platform_available_accounts.filter(\n        account =>\n            account.shortcode === jurisdiction_selected_shortcode &&\n            account.product === product &&\n            account.is_default_jurisdiction === 'true'\n    );\n\n    const is_selected_MT5_account_created = created_account && Object.keys(created_account).length > 0;\n\n    const existing_account = is_selected_MT5_account_created ? created_account[0] : null;\n    const existing_account_status = existing_account?.status ? getStatusBadge(existing_account?.status) : null;\n    const available_account_to_create = !is_selected_MT5_account_created ? selected_account[0] : null;\n    return {\n        is_selected_MT5_account_created,\n        existing_account,\n        existing_account_status,\n        available_account_to_create,\n    };\n};\n\nexport default useIsSelectedMT5AccountCreated;\n"],"names":["common","useStore","_useGetMFAccountStatu","useGetMFAccountStatus","mf_account_status","kyc_status","_useIsSelectedMT5Acco","useIsSelectedMT5AccountCreated","is_selected_MT5_account_created","existing_account_status","existing_account","available_account_to_create","platform","CFD_PLATFORMS","MT5","status_badge","client_kyc_status","forwardRef","title","titleId","props","ref","xmlns","width","height","viewBox","role","id","d","observer","_ref","text","status","route","_getBadgeStatus","AUTH_STATUS_CODES","VERIFIED","React","Localize","i18n_default_text","icon","icon_size","PENDING","REJECTED","SUSPECTED","getBadgeStatus","badge_text","badge_icon","badge_size","_useStore","traders_hub","ui","isMobile","useDevice","setVerificationModalOpen","history","useHistory","is_document_verified","className","classNames","onClick","setFieldRefToFocus","localStorage","setItem","String","push","Text","size","line_height","weight","NONE","LabelPairedChevronRightMdRegularIcon","fill","StatusBadge","account_status","VerificationDocsListModalContent","useGetStatus","poi_status","poa_status","valid_tin","is_tin_required","required_tin","items","routes","proof_of_identity","proof_of_address","personal_details","filter","Boolean","Icon","align","map","item","ListItem","key","_useStore2","is_verification_docs_list_modal_visible","getTitle","Suspense","fallback","UILoader","MobileDialog","portal_element_id","visible","onClose","Modal","is_open","toggleModal","should_header_stick_body","has_close_icon","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","client","cfd","modules","selected_account_type","mt5_login_list","trading_platform_available_accounts","updateMT5AccountDetails","_fetchData","_callee","_context","arguments","apply","_next","_throw","fetchData","jurisdiction_selected_shortcode","product","created_account","account","landing_company_short","account_type","selected_account","shortcode","is_default_jurisdiction","MT5_ACCOUNT_STATUS","FAILED","NEEDS_VERIFICATION"],"sourceRoot":""}