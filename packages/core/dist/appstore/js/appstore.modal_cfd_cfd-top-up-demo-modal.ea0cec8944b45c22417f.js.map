{"version":3,"file":"appstore/js/appstore.modal_cfd_cfd-top-up-demo-modal.ea0cec8944b45c22417f.js","mappings":"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","sources":["webpack://@deriv/appstore/../cfd/src/Components/success-dialog/success-dialog.tsx","webpack://@deriv/appstore/../cfd/src/Components/success-dialog/index.tsx","webpack://@deriv/appstore/../cfd/src/Containers/cfd-top-up-demo-modal.tsx"],"sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Button, Icon, Modal, Text } from '@deriv/components';\nimport { localize, Localize } from '@deriv/translations';\n\ntype TSuccessDialogProps = {\n    is_open: boolean;\n    toggleModal: () => void;\n    onCancel?: () => void;\n    onSubmit?: () => void;\n    classNameMessage?: string;\n    message: string | React.ReactElement;\n    icon: React.ReactElement;\n    icon_size?: string;\n    text_submit?: string;\n    text_cancel?: string;\n    heading?: string | React.ReactElement;\n    title?: string;\n    icon_type?: string;\n    is_medium_button?: boolean;\n    has_close_icon: boolean;\n    width?: string;\n    has_cancel?: boolean;\n    has_submit?: boolean;\n};\n\nconst SuccessDialog = ({\n    classNameMessage = '',\n    has_cancel = false,\n    has_submit = true,\n    icon,\n    message,\n    onCancel,\n    onSubmit,\n    heading,\n    icon_size = 'large',\n    text_submit,\n    text_cancel,\n    is_open,\n    toggleModal,\n    title,\n    has_close_icon,\n    width = '',\n    is_medium_button,\n}: TSuccessDialogProps) => {\n    return (\n        <Modal\n            className='cfd-success-dialog'\n            is_open={is_open}\n            toggleModal={toggleModal}\n            has_close_icon={has_close_icon}\n            small={!title}\n            title={title}\n            width={width}\n        >\n            <Modal.Body>\n                <div\n                    className={classNames('success-change__icon-area', {\n                        'success-change__icon-area--large': icon_size === 'large',\n                        'success-change__icon-area--xlarge': icon_size === 'xlarge',\n                    })}\n                    data-testid='dt_cfd_success_modal_icon_wrapper'\n                >\n                    {icon}\n                    <Icon\n                        className='bottom-right-overlay'\n                        icon='IcCheckmarkCircle'\n                        custom_color='var(--status-success)'\n                        size={24}\n                    />\n                </div>\n                {!heading ? (\n                    <Text as='h2' weight='bold' size='s' className='dc-modal-header__title'>\n                        <Localize i18n_default_text='Success!' />\n                    </Text>\n                ) : (\n                    <React.Fragment>{heading}</React.Fragment>\n                )}\n\n                {React.isValidElement(message) && message}\n                {!React.isValidElement(message) && <p className={classNameMessage}>{message}</p>}\n            </Modal.Body>\n            <Modal.Footer>\n                {has_cancel && onCancel && (\n                    <Button\n                        onClick={onCancel}\n                        has_effect\n                        text={text_cancel || localize('Maybe later')}\n                        secondary\n                        {...(is_medium_button ? { medium: true } : { large: true })}\n                    />\n                )}\n                {has_submit && onSubmit && (\n                    <Button\n                        has_effect\n                        onClick={onSubmit}\n                        text={text_submit}\n                        primary\n                        {...(is_medium_button ? { medium: true } : { large: true })}\n                    />\n                )}\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default SuccessDialog;\n","import SuccessDialog from './success-dialog';\n\nexport default SuccessDialog;\n","import React from 'react';\nimport SuccessDialog from '../Components/success-dialog';\nimport { getTopUpConfig } from '../Helpers/constants';\nimport { Icon, Modal, Button, Money, Text } from '@deriv/components';\nimport { getCFDPlatformLabel } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { localize, Localize } from '@deriv/translations';\nimport {\n    getCTraderCompanies,\n    TCTraderCompanies,\n    TDxCompanies,\n    TMtCompanies,\n} from '../Stores/Modules/CFD/Helpers/cfd-config';\nimport { useCfdStore } from '../Stores/Modules/CFD/Helpers/useCfdStores';\nimport { CFD_PLATFORMS } from '../Helpers/cfd-config';\n\ntype TCFDTopUpDemoModalProps = {\n    platform: string;\n};\n\nconst CFDTopUpDemoModal = observer(({ platform }: TCFDTopUpDemoModalProps) => {\n    const { ui } = useStore();\n\n    const {\n        is_top_up_virtual_open,\n        is_top_up_virtual_in_progress,\n        is_top_up_virtual_success,\n        closeTopUpModal,\n        closeSuccessTopUpModal,\n    } = ui;\n\n    const { current_account, dxtrade_companies, mt5_companies, topUpVirtual } = useCfdStore();\n\n    const ctrader_companies = getCTraderCompanies();\n\n    const getAccountTitle = React.useCallback(() => {\n        let title = '';\n        if ((!mt5_companies && !dxtrade_companies) || !current_account) return '';\n\n        switch (platform) {\n            case CFD_PLATFORMS.MT5:\n                title =\n                    mt5_companies[current_account.category as keyof TMtCompanies][\n                        current_account.type as keyof TMtCompanies['demo' | 'real']\n                    ].title;\n                break;\n            case CFD_PLATFORMS.CTRADER:\n                title =\n                    ctrader_companies[current_account.category as keyof TCTraderCompanies][\n                        current_account.type as keyof TCTraderCompanies['demo' | 'real']\n                    ].title;\n                break;\n            case CFD_PLATFORMS.DXTRADE:\n                title =\n                    dxtrade_companies[current_account.category as keyof TDxCompanies][\n                        current_account.type as keyof TDxCompanies['demo' | 'real']\n                    ].title;\n                break;\n            default:\n                break;\n        }\n\n        return title;\n    }, [mt5_companies, dxtrade_companies, current_account, ctrader_companies, platform]);\n\n    const onCloseSuccess = () => {\n        closeSuccessTopUpModal();\n    };\n\n    const has_sub_title = platform === CFD_PLATFORMS.CTRADER;\n\n    const platform_title = getCFDPlatformLabel(platform, has_sub_title);\n\n    if ((!mt5_companies && !dxtrade_companies && !getCTraderCompanies()) || !current_account) return null;\n    const { minimum_amount, additional_amount } = getTopUpConfig();\n\n    return (\n        <React.Fragment>\n            <Modal\n                toggleModal={closeTopUpModal}\n                is_open={is_top_up_virtual_open}\n                className='top-up-virtual'\n                title={localize('Fund top up')}\n                width='384px'\n            >\n                <div className='dc-modal__container_top-up-virtual__body'>\n                    <Text\n                        as='p'\n                        align='center'\n                        size='xxs'\n                        line_height='xs'\n                        className='dc-modal__container_top-up-virtual__description'\n                        data-testid='dt_top_up_virtual_description'\n                    >\n                        <Localize\n                            i18n_default_text='You can top up your demo account with an additional <0></0> if your balance is <1></1> or less.'\n                            components={[\n                                <Money\n                                    key={0}\n                                    amount={additional_amount}\n                                    currency={current_account.currency}\n                                    show_currency\n                                />,\n                                <Money\n                                    key={1}\n                                    amount={minimum_amount}\n                                    currency={current_account.currency}\n                                    show_currency\n                                />,\n                            ]}\n                        />\n                    </Text>\n                    <h4 className='dc-modal__container_top-up-virtual--h4'>\n                        <Localize\n                            i18n_default_text='{{ platform }} {{ account_title }} account'\n                            values={{\n                                platform: platform_title,\n                                account_title: getAccountTitle(),\n                            }}\n                        />\n                    </h4>\n                    <div>\n                        <Text as='p' align='center' size='xxs'>\n                            <Localize i18n_default_text='Current balance' />\n                        </Text>\n                        <div className='dc-modal__container_top-up-virtual--balance'>\n                            <Money\n                                amount={current_account.display_balance}\n                                currency={current_account.currency}\n                                has_sign={(current_account.balance as number) < 0}\n                            />\n                        </div>\n                    </div>\n                    <div className='dc-modal__container_top-up-virtual--button'>\n                        <Button\n                            is_disabled={(current_account.balance as number) > 1000 || is_top_up_virtual_in_progress}\n                            type='button'\n                            is_loading={is_top_up_virtual_in_progress}\n                            onClick={() => topUpVirtual(platform)}\n                            primary\n                            large\n                        >\n                            {!is_top_up_virtual_in_progress && (\n                                <Localize\n                                    i18n_default_text='Top up &nbsp;<0></0>'\n                                    components={[\n                                        <Money\n                                            key={0}\n                                            amount={additional_amount}\n                                            currency={current_account.currency}\n                                            show_currency\n                                        />,\n                                    ]}\n                                />\n                            )}\n                        </Button>\n                    </div>\n                </div>\n            </Modal>\n            <SuccessDialog\n                is_open={is_top_up_virtual_success}\n                toggleModal={onCloseSuccess}\n                has_close_icon\n                title={localize('Fund top up')}\n                icon={<Icon icon='IcCashierWallet' size={128} />}\n                heading={\n                    <h3 className='cfd-success-topup__heading'>\n                        <Localize\n                            i18n_default_text='<0></0> has been credited into your {{platform}} {{title}} account.'\n                            values={{ platform: platform_title, title: getAccountTitle() }}\n                            components={[\n                                <Money\n                                    key={0}\n                                    amount={additional_amount}\n                                    currency={current_account.currency}\n                                    show_currency\n                                />,\n                            ]}\n                        />\n                    </h3>\n                }\n                message={\n                    <div className='cfd-success-topup__description'>\n                        <p>\n                            <Localize i18n_default_text='New current balance' />\n                        </p>\n                        <div className='dc-modal__container_top-up-virtual--balance'>\n                            <Money amount={current_account.balance} currency={current_account.currency} />\n                        </div>\n                    </div>\n                }\n                icon_size='large'\n                has_cancel={false}\n                has_submit={false}\n                width='384px'\n            />\n        </React.Fragment>\n    );\n});\n\nexport default CFDTopUpDemoModal;\n"],"names":["_ref","_ref$classNameMessage","classNameMessage","_ref$has_cancel","has_cancel","_ref$has_submit","has_submit","icon","message","onCancel","onSubmit","heading","_ref$icon_size","icon_size","text_submit","text_cancel","is_open","toggleModal","title","has_close_icon","_ref$width","width","is_medium_button","React","Modal","className","small","Body","classNames","Icon","custom_color","size","Text","as","weight","Localize","i18n_default_text","Footer","Button","_extends","onClick","has_effect","text","localize","secondary","medium","large","primary","observer","platform","ui","useStore","is_top_up_virtual_open","is_top_up_virtual_in_progress","is_top_up_virtual_success","closeTopUpModal","closeSuccessTopUpModal","_useCfdStore","useCfdStore","current_account","dxtrade_companies","mt5_companies","topUpVirtual","ctrader_companies","getCTraderCompanies","getAccountTitle","CFD_PLATFORMS","MT5","category","type","CTRADER","DXTRADE","has_sub_title","platform_title","getCFDPlatformLabel","_getTopUpConfig","getTopUpConfig","minimum_amount","additional_amount","align","line_height","components","Money","key","amount","currency","show_currency","values","account_title","display_balance","has_sign","balance","is_disabled","is_loading","SuccessDialog"],"sourceRoot":""}