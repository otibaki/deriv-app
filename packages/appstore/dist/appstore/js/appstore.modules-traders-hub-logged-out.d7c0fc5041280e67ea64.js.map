{"version":3,"file":"appstore/js/appstore.modules-traders-hub-logged-out.d7c0fc5041280e67ea64.js","mappings":"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","sources":["webpack://@deriv/appstore/../../node_modules/react-content-loader/src/shared/uid.ts","webpack://@deriv/appstore/../../node_modules/react-content-loader/src/web/Svg.tsx","webpack://@deriv/appstore/../../node_modules/react-content-loader/src/web/ContentLoader.tsx","webpack://@deriv/appstore/../../node_modules/react-content-loader/src/web/presets/FacebookStyle.tsx","webpack://@deriv/appstore/./src/components/elements/options-title/options-title.tsx","webpack://@deriv/appstore/./src/components/elements/options-title/index.tsx","webpack://@deriv/appstore/./src/components/options-multipliers-listing-logged-out/options-multipliers-listing-logged-out.tsx","webpack://@deriv/appstore/./src/components/options-multipliers-listing-logged-out/index.tsx","webpack://@deriv/appstore/./src/components/elements/cfds-title/cfds-title.tsx","webpack://@deriv/appstore/./src/components/elements/cfds-title/index.tsx","webpack://@deriv/appstore/./src/components/cfds-listing-logged-out/cfds-listing-logged-out.tsx","webpack://@deriv/appstore/./src/components/cfds-listing-logged-out/index.tsx","webpack://@deriv/appstore/./src/components/ordered-platform-sections/ordered-platform-sections.tsx","webpack://@deriv/appstore/./src/components/ordered-platform-sections/index.ts","webpack://@deriv/appstore/./src/components/trustpilot-star-rating/trustpilot-star-rating.tsx","webpack://@deriv/appstore/./src/components/trustpilot-star-rating/index.ts","webpack://@deriv/appstore/./src/components/trustpilot-widget/trustpilot-widget.tsx","webpack://@deriv/appstore/./src/components/trustpilot-widget/index.ts","webpack://@deriv/appstore/./src/components/banners/get-started-trading-banner/get-started-trading-banner.tsx","webpack://@deriv/appstore/./src/components/banners/get-started-trading-banner/index.ts","webpack://@deriv/appstore/./src/components/tabs-or-title/tabs-or-title.tsx","webpack://@deriv/appstore/./src/components/tabs-or-title/index.ts","webpack://@deriv/appstore/./src/modules/traders-hub-logged-out/traders-hub-logged-out.tsx","webpack://@deriv/appstore/./src/modules/traders-hub-logged-out/index.tsx","webpack://@deriv/appstore/../../node_modules/@deriv-com/ui/dist/_commonjsHelpers-BkfeUUK-.js","webpack://@deriv/appstore/../../node_modules/@deriv-com/ui/dist/index-EY1gwl5O.js","webpack://@deriv/appstore/../../node_modules/@deriv-com/ui/dist/hooks/useDevice.js"],"sourcesContent":["export default (): string =>\n  Math.random()\n    .toString(36)\n    .substring(6)\n","import * as React from 'react'\n\nimport uid from '../shared/uid'\nimport { IContentLoaderProps } from './'\n\nconst SVG: React.FC<IContentLoaderProps> = ({\n  animate = true,\n  animateBegin,\n  backgroundColor = '#f5f6f7',\n  backgroundOpacity = 1,\n  baseUrl = '',\n  children,\n  foregroundColor = '#eee',\n  foregroundOpacity = 1,\n  gradientRatio = 2,\n  gradientDirection = 'left-right',\n  uniqueKey,\n  interval = 0.25,\n  rtl = false,\n  speed = 1.2,\n  style = {},\n  title = 'Loading...',\n  beforeMask = null,\n  ...props\n}) => {\n  const fixedId = uniqueKey || uid()\n  const idClip = `${fixedId}-diff`\n  const idGradient = `${fixedId}-animated-diff`\n  const idAria = `${fixedId}-aria`\n\n  const rtlStyle = rtl ? { transform: 'scaleX(-1)' } : null\n  const keyTimes = `0; ${interval}; 1`\n  const dur = `${speed}s`\n  const gradientTransform =\n    gradientDirection === 'top-bottom' ? 'rotate(90)' : undefined\n\n  return (\n    <svg\n      aria-labelledby={idAria}\n      role=\"img\"\n      style={{ ...style, ...rtlStyle }}\n      {...props}\n    >\n      {title ? <title id={idAria}>{title}</title> : null}\n      {beforeMask && React.isValidElement(beforeMask) ? beforeMask : null}\n      <rect\n        role=\"presentation\"\n        x=\"0\"\n        y=\"0\"\n        width=\"100%\"\n        height=\"100%\"\n        clipPath={`url(${baseUrl}#${idClip})`}\n        style={{ fill: `url(${baseUrl}#${idGradient})` }}\n      />\n\n      <defs>\n        <clipPath id={idClip}>{children}</clipPath>\n\n        <linearGradient id={idGradient} gradientTransform={gradientTransform}>\n          <stop\n            offset=\"0%\"\n            stopColor={backgroundColor}\n            stopOpacity={backgroundOpacity}\n          >\n            {animate && (\n              <animate\n                attributeName=\"offset\"\n                values={`${-gradientRatio}; ${-gradientRatio}; 1`}\n                keyTimes={keyTimes}\n                dur={dur}\n                repeatCount=\"indefinite\"\n                begin={animateBegin}\n              />\n            )}\n          </stop>\n\n          <stop\n            offset=\"50%\"\n            stopColor={foregroundColor}\n            stopOpacity={foregroundOpacity}\n          >\n            {animate && (\n              <animate\n                attributeName=\"offset\"\n                values={`${-gradientRatio / 2}; ${-gradientRatio / 2}; ${1 +\n                  gradientRatio / 2}`}\n                keyTimes={keyTimes}\n                dur={dur}\n                repeatCount=\"indefinite\"\n                begin={animateBegin}\n              />\n            )}\n          </stop>\n\n          <stop\n            offset=\"100%\"\n            stopColor={backgroundColor}\n            stopOpacity={backgroundOpacity}\n          >\n            {animate && (\n              <animate\n                attributeName=\"offset\"\n                values={`0; 0; ${1 + gradientRatio}`}\n                keyTimes={keyTimes}\n                dur={dur}\n                repeatCount=\"indefinite\"\n                begin={animateBegin}\n              />\n            )}\n          </stop>\n        </linearGradient>\n      </defs>\n    </svg>\n  )\n}\n\nexport default SVG\n","import * as React from 'react'\n\nimport { Facebook, IContentLoaderProps } from '.'\nimport Svg from './Svg'\n\nconst ContentLoader: React.FC<IContentLoaderProps> = props =>\n  props.children ? <Svg {...props} /> : <Facebook {...props} />\n\nexport default ContentLoader\n","import * as React from 'react'\n\nimport { IContentLoaderProps } from '..'\nimport ContentLoader from '../ContentLoader'\n\nconst ReactContentLoaderFacebook: React.FC<IContentLoaderProps> = props => (\n  <ContentLoader viewBox=\"0 0 476 124\" {...props}>\n    <rect x=\"48\" y=\"8\" width=\"88\" height=\"6\" rx=\"3\" />\n    <rect x=\"48\" y=\"26\" width=\"52\" height=\"6\" rx=\"3\" />\n    <rect x=\"0\" y=\"56\" width=\"410\" height=\"6\" rx=\"3\" />\n    <rect x=\"0\" y=\"72\" width=\"380\" height=\"6\" rx=\"3\" />\n    <rect x=\"0\" y=\"88\" width=\"178\" height=\"6\" rx=\"3\" />\n    <circle cx=\"20\" cy=\"20\" r=\"20\" />\n  </ContentLoader>\n)\n\nexport default ReactContentLoaderFacebook\n","import React from 'react';\nimport { useDevice } from '@deriv-com/ui';\nimport { Text } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\n\ntype TOptionsTitle = {\n    is_eu_user: boolean;\n};\n\nconst OptionsTitle = ({ is_eu_user }: TOptionsTitle) => {\n    const { isDesktop } = useDevice();\n\n    if (!isDesktop) return null;\n    return is_eu_user ? (\n        <Text size='sm' weight='bold' color='prominent'>\n            <Localize i18n_default_text='Multipliers' />\n        </Text>\n    ) : (\n        <Text size='sm' weight='bold' color='prominent'>\n            <Localize i18n_default_text='Options' />\n        </Text>\n    );\n};\n\nexport default OptionsTitle;\n","import OptionsTitle from './options-title';\n\nexport default OptionsTitle;\n","import React, { useMemo } from 'react';\nimport { useStore, observer } from '@deriv/stores';\nimport ListingContainer from 'Components/containers/listing-container';\nimport TradingAppCard from 'Components/containers/trading-app-card';\nimport OptionsDescription from 'Components/elements/options-description';\nimport OptionsTitle from 'Components/elements/options-title';\nimport { BrandConfig } from 'Constants/platform-config';\nimport { getHasDivider } from 'Constants/utils';\nimport { isEuCountry, getAppstorePlatforms } from '@deriv/shared';\nimport './options-multipliers-listing-logged-out.scss';\n\nconst OptionsAndMultipliersListingLoggedOut = observer(() => {\n    const { traders_hub, client } = useStore();\n    const { clients_country } = client;\n    const { is_eu_user } = traders_hub;\n\n    const logged_out_available_platforms = useMemo(() => {\n        const available_platforms = getAppstorePlatforms();\n        return isEuCountry(clients_country)\n            ? available_platforms.filter((platform: BrandConfig) =>\n                  ['EU', 'All'].some(region => region === platform.availability)\n              )\n            : available_platforms.filter((platform: BrandConfig) =>\n                  ['Non-EU', 'All'].some(region => region === platform.availability)\n              );\n    }, [clients_country]);\n\n    return (\n        <ListingContainer\n            title={<OptionsTitle is_eu_user={is_eu_user} />}\n            description={<OptionsDescription is_eu_user={is_eu_user} />}\n        >\n            {logged_out_available_platforms.map(\n                (available_platform: BrandConfig, index: number, self: BrandConfig[]) => (\n                    <TradingAppCard\n                        key={`trading_app_card_${available_platform.name}`}\n                        {...available_platform}\n                        action_type='trade'\n                        clickable_icon\n                        is_deriv_platform\n                        market_type='all'\n                        has_divider={!is_eu_user && getHasDivider(index, self.length, 3)}\n                    />\n                )\n            )}\n        </ListingContainer>\n    );\n});\n\nexport default OptionsAndMultipliersListingLoggedOut;\n","import OptionsAndMultipliersListingLoggedOut from './options-multipliers-listing-logged-out';\n\nexport default OptionsAndMultipliersListingLoggedOut;\n","import React from 'react';\nimport { useDevice } from '@deriv-com/ui';\nimport { Text } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport './cfds-title.scss';\n\nconst CFDsTitle = () => {\n    const { isDesktop } = useDevice();\n\n    if (!isDesktop) return null;\n    return (\n        <div className='cfds-title'>\n            <Text size='sm' weight='bold' color='prominent'>\n                <Localize i18n_default_text='CFDs' />\n            </Text>\n        </div>\n    );\n};\n\nexport default CFDsTitle;\n","import CFDsTitle from './cfds-title';\n\nexport default CFDsTitle;\n","import React from 'react';\nimport { observer, useStore } from '@deriv/stores';\nimport { Text } from '@deriv/components';\nimport { redirectToLogin } from '@deriv/shared';\nimport { getLanguage, localize } from '@deriv/translations';\nimport { getHasDivider } from 'Constants/utils';\nimport ListingContainer from 'Components/containers/listing-container';\nimport TradingAppCard from 'Components/containers/trading-app-card';\nimport CFDsDescription from 'Components/elements/cfds-description';\nimport CFDsTitle from 'Components/elements/cfds-title';\nimport './cfds-listing-logged-out.scss';\n\nconst CFDsListingLoggedOut = observer(() => {\n    const { traders_hub } = useStore();\n    const {\n        available_dxtrade_accounts,\n        available_ctrader_accounts,\n        combined_cfd_mt5_accounts,\n        selected_region,\n        is_eu_user,\n    } = traders_hub;\n\n    return (\n        <ListingContainer title={<CFDsTitle />} description={<CFDsDescription />}>\n            <div className='cfds-listing-logged-out__cfd-full-row'>\n                <Text line_height='m' weight='bold' color='prominent'>\n                    {localize('Deriv MT5')}\n                </Text>\n            </div>\n            {combined_cfd_mt5_accounts.map((existing_account, index: number) => {\n                const list_size = combined_cfd_mt5_accounts.length;\n                return (\n                    <TradingAppCard\n                        action_type={existing_account.action_type}\n                        availability={selected_region}\n                        clickable_icon\n                        icon={existing_account.icon}\n                        sub_title={existing_account?.sub_title}\n                        name={existing_account?.name ?? ''}\n                        short_code_and_region={existing_account?.short_code_and_region}\n                        platform={existing_account.platform}\n                        description={existing_account.description}\n                        key={existing_account.key}\n                        has_divider={!is_eu_user && getHasDivider(index, list_size, 3)}\n                        onAction={() => redirectToLogin(false, getLanguage())}\n                        market_type='all'\n                        is_new\n                    />\n                );\n            })}\n            {!is_eu_user && (\n                <div className='cfds-listing-logged-out__cfd-full-row'>\n                    <hr className='cfds-listing-logged-out__divider' />\n                </div>\n            )}\n            {!is_eu_user && (\n                <div className='cfds-listing-logged-out__cfd-full-row'>\n                    <Text weight='bold'>{localize('Deriv cTrader')}</Text>\n                </div>\n            )}\n            {available_ctrader_accounts.map(account => (\n                <TradingAppCard\n                    action_type='get'\n                    availability={selected_region}\n                    clickable_icon\n                    icon={account.icon}\n                    name={account.name}\n                    platform={account.platform}\n                    description={account.description}\n                    onAction={() => redirectToLogin(false, getLanguage())}\n                    key={`trading_app_card_${account.name}`}\n                    market_type='all'\n                />\n            ))}\n            {!is_eu_user && (\n                <React.Fragment>\n                    <div className='cfds-listing-logged-out__cfd-full-row'>\n                        <hr className='cfds-listing-logged-out__divider' />\n                    </div>\n\n                    <div className='cfds-listing-logged-out__cfd-full-row'>\n                        <Text line_height='m' weight='bold' color='prominent'>\n                            {localize('Deriv X')}\n                        </Text>\n                    </div>\n                </React.Fragment>\n            )}\n            {available_dxtrade_accounts?.map(account => (\n                <TradingAppCard\n                    action_type='get'\n                    availability={selected_region}\n                    clickable_icon\n                    icon={account.icon}\n                    name={account.name}\n                    platform={account.platform}\n                    description={account.description}\n                    onAction={() => redirectToLogin(false, getLanguage())}\n                    key={`trading_app_card_${account.name}`}\n                    market_type='all'\n                />\n            ))}\n        </ListingContainer>\n    );\n});\n\nexport default CFDsListingLoggedOut;\n","import CFDsListingLoggedOut from './cfds-listing-logged-out';\n\nexport default CFDsListingLoggedOut;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { observer, useStore } from '@deriv/stores';\nimport OptionsAndMultipliersListingLoggedOut from 'Components/options-multipliers-listing-logged-out';\nimport CFDsListingLoggedOut from 'Components/cfds-listing-logged-out';\nimport './ordered-platform-sections.scss';\n\ntype TGetOrderedPlatformSections = {\n    is_cfd_visible?: boolean;\n    is_options_and_multipliers_visible?: boolean;\n};\n\ntype TOrderedPlatformSections = {\n    isDesktop?: boolean;\n};\n\nconst GetOrderedPlatformSections = observer(\n    ({ is_cfd_visible = true, is_options_and_multipliers_visible = true }: TGetOrderedPlatformSections) => {\n        const { traders_hub } = useStore();\n        const { is_eu_user } = traders_hub;\n\n        return (\n            <div\n                className={classNames('ordered-platform-sections', {\n                    'ordered-platform-sections__reversed': is_eu_user,\n                })}\n            >\n                {is_options_and_multipliers_visible && <OptionsAndMultipliersListingLoggedOut />}\n                {is_cfd_visible && <CFDsListingLoggedOut />}\n            </div>\n        );\n    }\n);\n\nconst OrderedPlatformSections = observer(({ isDesktop = false }: TOrderedPlatformSections) => {\n    const { traders_hub, client } = useStore();\n    const { is_mt5_allowed, is_logged_in } = client;\n    const { selected_platform_type } = traders_hub;\n\n    if ((is_logged_in && is_mt5_allowed) || !is_logged_in) {\n        return isDesktop ? (\n            <GetOrderedPlatformSections />\n        ) : (\n            <GetOrderedPlatformSections\n                is_cfd_visible={selected_platform_type === 'cfd'}\n                is_options_and_multipliers_visible={selected_platform_type === 'options'}\n            />\n        );\n    }\n    return <GetOrderedPlatformSections is_cfd_visible={false} is_options_and_multipliers_visible />;\n});\n\nexport default OrderedPlatformSections;\n","import OrderedPlatformSections from './ordered-platform-sections';\n\nexport default OrderedPlatformSections;\n","import React from 'react';\nimport { Icon } from '@deriv/components';\nimport { observer, useStore } from '@deriv/stores';\nimport './trustpilot-star-rating.scss';\n\nconst TrustpilotStarRating = observer(({ score }: { score: number }) => {\n    const { common } = useStore();\n    const { current_language } = common;\n    const html = document.getElementsByTagName('html');\n    const [is_rtl, setIsRtl] = React.useState(html?.[0]?.getAttribute('dir') === 'rtl');\n\n    React.useEffect(() => {\n        setIsRtl(html?.[0]?.getAttribute('dir') === 'rtl');\n    }, [current_language]);\n\n    return (\n        <div className='trustpilot-star-rating'>\n            {[...Array(5)].map((_, idx) => (\n                <div\n                    className='trustpilot-star-rating__item'\n                    key={`star-${idx}`}\n                    style={{\n                        background: `linear-gradient(${is_rtl ? '270deg' : '90deg'}, #00b67a ${\n                            (score - idx) * 100\n                        }%, #dcdce5 ${(score - idx) * 100}%)`,\n                    }}\n                >\n                    <Icon icon='IcAppstoreTrustpilotStar' size={24} />\n                </div>\n            ))}\n        </div>\n    );\n});\n\nexport default TrustpilotStarRating;\n","import TrustpilotStarRating from './trustpilot-star-rating';\n\nexport default TrustpilotStarRating;\n","import React, { useEffect, useState } from 'react';\nimport { useDevice } from '@deriv-com/ui';\nimport { Icon, Text } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport { TTrustpilotWidgetData } from 'Types';\nimport { fetchTrustpilotData } from 'Helpers';\nimport TrustpilotStarRating from 'Components/trustpilot-star-rating';\nimport './trustpilot-widget.scss';\n\nconst TrustpilotWidget = () => {\n    const { isDesktop } = useDevice();\n    const [trustpilotData, setTrustpilotData] = useState<TTrustpilotWidgetData>();\n\n    useEffect(() => {\n        const getTrustpilotData = async () => {\n            const res = await fetchTrustpilotData();\n            setTrustpilotData(res);\n        };\n\n        getTrustpilotData();\n    }, []);\n\n    if (!trustpilotData) return null;\n\n    return (\n        <div className='trustpilot-widget'>\n            <a href='https://www.trustpilot.com/review/deriv.com' target='_blank' rel='noopener noreferrer'>\n                <div className='trustpilot-widget__content'>\n                    {isDesktop && (\n                        <React.Fragment>\n                            <Text size='s' color='prominent'>\n                                <Localize i18n_default_text='Our customers say' />\n                            </Text>\n                            <Text size='s' weight='bold' color='prominent'>\n                                <Localize i18n_default_text='Excellent' />\n                            </Text>\n                        </React.Fragment>\n                    )}\n                    <TrustpilotStarRating score={trustpilotData.trustScore} />\n                    {isDesktop && (\n                        <Text size='s' color='prominent'>\n                            <Localize\n                                i18n_default_text='{{trustScore}} out of 5 based on {{numberOfReviews}} reviews'\n                                values={{\n                                    trustScore: trustpilotData.trustScore,\n                                    numberOfReviews: trustpilotData.numberOfReviews,\n                                }}\n                            />\n                        </Text>\n                    )}\n                    <Icon icon='IcAppstoreTrustpilotLogo' width={98} height={24} custom_color='var(--text-prominent)' />\n                </div>\n            </a>\n        </div>\n    );\n};\n\nexport default TrustpilotWidget;\n","import TrustpilotWidget from './trustpilot-widget';\n\nexport default TrustpilotWidget;\n","import React from 'react';\nimport { useDevice } from '@deriv-com/ui';\nimport { getLanguage, Localize, localize } from '@deriv/translations';\nimport { Button, Text, Icon } from '@deriv/components';\nimport { useStore, observer } from '@deriv/stores';\nimport { redirectToLogin } from '@deriv/shared';\nimport TrustpilotWidget from 'Components/trustpilot-widget';\nimport './get-started-trading-banner.scss';\n\nconst GetStartedTradingBanner = observer(() => {\n    const { isDesktop } = useDevice();\n    const { traders_hub } = useStore();\n    const { is_eu_user } = traders_hub;\n\n    const desktopWidth = is_eu_user ? 326 : 445;\n    const desktopHeight = is_eu_user ? 174 : 176;\n    const responsiveWidth = 180;\n    const responsiveHeight = 116;\n\n    return (\n        <div className='get-started-trading-banner'>\n            <div className='get-started-trading-banner__content'>\n                <div className='get-started-trading-banner__description'>\n                    <Text size={!isDesktop ? 'xs' : 'xm'} color='prominent'>\n                        <Localize i18n_default_text='Join over 2.5 million traders' />\n                    </Text>\n                    <Button\n                        className='get-started-trading-banner__button'\n                        text={localize('Get Started')}\n                        black\n                        large\n                        onClick={() => redirectToLogin(false, getLanguage())}\n                    />\n                </div>\n                <Icon\n                    icon={`IcAppstoreLoggedOut${is_eu_user ? 'Eu' : 'NonEu'}Coins${\n                        !isDesktop ? 'Responsive' : 'Desktop'\n                    }`}\n                    width={!isDesktop ? responsiveWidth : desktopWidth}\n                    height={!isDesktop ? responsiveHeight : desktopHeight}\n                    className='get-started-trading-banner__image'\n                    data_testid={`dt_logged_out_${is_eu_user ? 'eu' : 'non_eu'}_coins_${\n                        !isDesktop ? 'responsive' : 'desktop'\n                    }`}\n                />\n            </div>\n            <TrustpilotWidget />\n        </div>\n    );\n});\n\nexport default GetStartedTradingBanner;\n","import GetStartedTradingBanner from './get-started-trading-banner';\n\nexport default GetStartedTradingBanner;\n","import React from 'react';\nimport { observer, useStore } from '@deriv/stores';\nimport { ButtonToggle, Text } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport { getPlatformToggleOptions } from 'Helpers';\nimport './tabs-or-title.scss';\n\nconst TabsOrTitle = observer(() => {\n    const { traders_hub, client } = useStore();\n    const { is_mt5_allowed, is_logged_in } = client;\n    const { selected_platform_type, setTogglePlatformType, is_eu_user } = traders_hub;\n\n    const platform_toggle_options = getPlatformToggleOptions(is_eu_user);\n    const platform_toggle_options_eu = getPlatformToggleOptions(is_eu_user).reverse();\n\n    const platformTypeChange = (event: {\n        target: {\n            value: string;\n            name: string;\n        };\n    }) => {\n        setTogglePlatformType(event.target.value);\n    };\n\n    return (is_logged_in && is_mt5_allowed) || !is_logged_in ? (\n        <ButtonToggle\n            buttons_arr={is_eu_user ? platform_toggle_options_eu : platform_toggle_options}\n            className='tabs-or-title__button-toggle'\n            has_rounded_button\n            is_traders_hub\n            name='platform_type'\n            onChange={platformTypeChange}\n            value={selected_platform_type}\n        />\n    ) : (\n        <div className='tabs-or-title__mt5-not-allowed'>\n            <Text size='s' weight='bold' color='prominent'>\n                <Localize i18n_default_text='Multipliers' />\n            </Text>\n        </div>\n    );\n});\n\nexport default TabsOrTitle;\n","import TabsOrTitle from './tabs-or-title';\n\nexport default TabsOrTitle;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { useDevice } from '@deriv-com/ui';\nimport { observer, useStore } from '@deriv/stores';\nimport { Div100vhContainer, Loading, Text } from '@deriv/components';\nimport { isEuCountry } from '@deriv/shared';\nimport { Localize } from '@deriv/translations';\nimport Disclaimer from 'Components/disclaimer';\nimport OrderedPlatformSections from 'Components/ordered-platform-sections';\nimport GetStartedTradingBanner from 'Components/banners/get-started-trading-banner';\nimport TabsOrTitle from 'Components/tabs-or-title';\nimport './traders-hub-logged-out.scss';\n\nconst TradersHubLoggedOut = observer(() => {\n    const { isDesktop } = useDevice();\n    const { traders_hub, client } = useStore();\n    const { clients_country } = client;\n    const { setTogglePlatformType, selectRegion, is_eu_user } = traders_hub;\n\n    React.useEffect(() => {\n        if (clients_country) {\n            if (isEuCountry(clients_country)) {\n                setTogglePlatformType('cfd');\n                selectRegion('EU');\n            } else {\n                selectRegion('Non-EU');\n            }\n        }\n    }, [clients_country, setTogglePlatformType]);\n\n    if (!clients_country) return <Loading is_fullscreen />;\n\n    return (\n        <React.Fragment>\n            <Div100vhContainer className='traders-hub-logged-out__mobile' height_offset='50px' is_disabled={isDesktop}>\n                <div\n                    className={classNames('traders-hub-logged-out', {\n                        'traders-hub-logged-out__eu-user': is_eu_user,\n                    })}\n                >\n                    <GetStartedTradingBanner />\n                    <Text size={isDesktop ? 'm' : 'xsm'} weight='bold' color='prominent'>\n                        <Localize i18n_default_text=\"Trader's Hub\" />\n                    </Text>\n                    {isDesktop ? (\n                        <OrderedPlatformSections isDesktop />\n                    ) : (\n                        <React.Fragment>\n                            <TabsOrTitle />\n                            <OrderedPlatformSections />\n                        </React.Fragment>\n                    )}\n                </div>\n            </Div100vhContainer>\n\n            {is_eu_user && <Disclaimer />}\n        </React.Fragment>\n    );\n});\n\nexport default TradersHubLoggedOut;\n","import TradersHubLoggedOut from './traders-hub-logged-out';\n\nexport default TradersHubLoggedOut;\n","var u = typeof globalThis < \"u\" ? globalThis : typeof window < \"u\" ? window : typeof global < \"u\" ? global : typeof self < \"u\" ? self : {};\nfunction f(e) {\n  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, \"default\") ? e.default : e;\n}\nfunction l(e) {\n  if (e.__esModule) return e;\n  var r = e.default;\n  if (typeof r == \"function\") {\n    var t = function o() {\n      return this instanceof o ? Reflect.construct(r, arguments, this.constructor) : r.apply(this, arguments);\n    };\n    t.prototype = r.prototype;\n  } else t = {};\n  return Object.defineProperty(t, \"__esModule\", { value: !0 }), Object.keys(e).forEach(function(o) {\n    var n = Object.getOwnPropertyDescriptor(e, o);\n    Object.defineProperty(t, o, n.get ? n : {\n      enumerable: !0,\n      get: function() {\n        return e[o];\n      }\n    });\n  }), t;\n}\nexport {\n  l as a,\n  u as c,\n  f as g\n};\n","import { useState as d, useLayoutEffect as m, useEffect as u, useRef as l } from \"react\";\nimport { c as a } from \"./_commonjsHelpers-BkfeUUK-.js\";\nvar v = typeof a == \"object\" && a && a.Object === Object && a, E = typeof self == \"object\" && self && self.Object === Object && self;\nv || E || Function(\"return this\")();\nvar f = typeof window < \"u\" ? m : u;\nfunction L(t, s, o, i) {\n  const c = l(s);\n  f(() => {\n    c.current = s;\n  }, [s]), u(() => {\n    const n = window;\n    if (!(n && n.addEventListener))\n      return;\n    const r = (e) => {\n      c.current(e);\n    };\n    return n.addEventListener(t, r, i), () => {\n      n.removeEventListener(t, r, i);\n    };\n  }, [t, o, i]);\n}\nvar h = typeof window > \"u\";\nfunction O(t, {\n  defaultValue: s = !1,\n  initializeWithValue: o = !0\n} = {}) {\n  const i = (e) => h ? s : window.matchMedia(e).matches, [c, n] = d(() => o ? i(t) : s);\n  function r() {\n    n(i(t));\n  }\n  return f(() => {\n    const e = window.matchMedia(t);\n    return r(), e.addListener ? e.addListener(r) : e.addEventListener(\"change\", r), () => {\n      e.removeListener ? e.removeListener(r) : e.removeEventListener(\"change\", r);\n    };\n  }, [t]), c;\n}\nfunction g(t, s, o = \"mousedown\", i = {}) {\n  L(\n    o,\n    (c) => {\n      const n = c.target;\n      if (!n || !n.isConnected)\n        return;\n      (Array.isArray(t) ? t.filter((e) => !!e.current).every((e) => e.current && !e.current.contains(n)) : t.current && !t.current.contains(n)) && s(c);\n    },\n    void 0,\n    i\n  );\n}\nexport {\n  g as a,\n  O as u\n};\n","import { u as t } from \"../index-EY1gwl5O.js\";\nconst d = () => {\n  const i = t(\"(min-width: 1280px)\"), a = t(\"(max-width: 600px)\"), n = t(\n    \"(min-width: 601px) and (max-width: 1279px)\"\n  ), e = t(\n    \"(min-width: 601px) and (max-width: 1279px) and (orientation: portrait)\"\n  ), o = t(\n    \"(max-width: 1279px) and (orientation: landscape)\"\n  );\n  return {\n    /** returns Larger screen tablets [min-width: 1280px] */\n    isDesktop: i,\n    /**  returns Smaller screen tablets [max-width: 600px] */\n    isMobile: a,\n    /** returns Larger screen phones and smaller screen desktop [min-width: 601px and max-width: 1279px] */\n    isTablet: n,\n    /** returns tablet screen with portrait orientation [min-width: 601px and max-width: 1279px and orientation: portrait] */\n    isTabletPortrait: e,\n    /** returns mobile or medium screens in landscape orientation [max-width: 1279px and orientation: landscape] */\n    isMobileOrTabletLandscape: o\n  };\n};\nexport {\n  d as useDevice\n};\n"],"names":["SVG","animate","animateBegin","backgroundColor","backgroundOpacity","baseUrl","children","foregroundColor","foregroundOpacity","gradientRatio","gradientDirection","uniqueKey","interval","rtl","speed","style","title","beforeMask","fixedId","Math","random","toString","substring","idClip","idGradient","idAria","rtlStyle","transform","keyTimes","dur","gradientTransform","undefined","React.createElement","role","props","id","React.isValidElement","x","y","width","height","clipPath","fill","offset","stopColor","stopOpacity","attributeName","values","repeatCount","begin","ContentLoader","Svg","Facebook","ReactContentLoaderFacebook","viewBox","rx","cx","cy","r","_ref","is_eu_user","useDevice","isDesktop","React","Text","size","weight","color","Localize","i18n_default_text","observer","_useStore","useStore","traders_hub","clients_country","client","logged_out_available_platforms","useMemo","available_platforms","getAppstorePlatforms","isEuCountry","filter","platform","some","region","availability","ListingContainer","OptionsTitle","description","OptionsDescription","map","available_platform","index","self","TradingAppCard","_extends","key","concat","name","action_type","clickable_icon","is_deriv_platform","market_type","has_divider","getHasDivider","length","className","available_dxtrade_accounts","available_ctrader_accounts","combined_cfd_mt5_accounts","selected_region","CFDsTitle","CFDsDescription","line_height","localize","existing_account","_existing_account$nam","list_size","icon","sub_title","short_code_and_region","onAction","redirectToLogin","getLanguage","is_new","account","GetOrderedPlatformSections","_ref$is_cfd_visible","is_cfd_visible","_ref$is_options_and_m","is_options_and_multipliers_visible","classNames","OptionsAndMultipliersListingLoggedOut","CFDsListingLoggedOut","_ref2","_ref2$isDesktop","_useStore2","is_mt5_allowed","is_logged_in","selected_platform_type","_html$","score","current_language","common","html","document","getElementsByTagName","_React$useState2","_slicedToArray","getAttribute","is_rtl","setIsRtl","_html$2","_toConsumableArray","Array","_","idx","background","Icon","_regeneratorRuntime","e","t","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","isArray","_arrayWithHoles","_iterableToArrayLimit","_arrayLikeToArray","from","test","_unsupportedIterableToArray","_nonIterableRest","_useState2","useState","trustpilotData","setTrustpilotData","useEffect","getTrustpilotData","_callee","res","_context","fetchTrustpilotData","arguments","apply","_next","_throw","href","target","rel","TrustpilotStarRating","trustScore","numberOfReviews","custom_color","desktopWidth","desktopHeight","Button","text","black","large","onClick","data_testid","TrustpilotWidget","setTogglePlatformType","platform_toggle_options","getPlatformToggleOptions","platform_toggle_options_eu","ButtonToggle","buttons_arr","has_rounded_button","is_traders_hub","onChange","event","selectRegion","Div100vhContainer","height_offset","is_disabled","GetStartedTradingBanner","OrderedPlatformSections","TabsOrTitle","Disclaimer","Loading","is_fullscreen","globalThis","window","global","E","Function","O","defaultValue","initializeWithValue","matchMedia","matches","addListener","addEventListener","removeListener","removeEventListener","isMobile","isTablet","isTabletPortrait","isMobileOrTabletLandscape"],"sourceRoot":""}