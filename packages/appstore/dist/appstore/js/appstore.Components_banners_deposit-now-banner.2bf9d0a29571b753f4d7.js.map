{"version":3,"file":"appstore/js/appstore.Components_banners_deposit-now-banner.2bf9d0a29571b753f4d7.js","mappings":"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","sources":["webpack://@deriv/appstore/../../node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.production.js","webpack://@deriv/appstore/../../node_modules/use-sync-external-store/shim/index.js","webpack://@deriv/appstore/../../node_modules/@tanstack/query-core/build/lib/queryObserver.mjs","webpack://@deriv/appstore/../../node_modules/@tanstack/react-query/build/lib/useSyncExternalStore.mjs","webpack://@deriv/appstore/../../node_modules/@tanstack/react-query/build/lib/QueryErrorResetBoundary.mjs","webpack://@deriv/appstore/../../node_modules/@tanstack/react-query/build/lib/isRestoring.mjs","webpack://@deriv/appstore/../../node_modules/@tanstack/react-query/build/lib/useBaseQuery.mjs","webpack://@deriv/appstore/../../node_modules/@tanstack/react-query/build/lib/suspense.mjs","webpack://@deriv/appstore/../../node_modules/@tanstack/react-query/build/lib/errorBoundaryUtils.mjs","webpack://@deriv/appstore/../../node_modules/@tanstack/react-query/build/lib/utils.mjs","webpack://@deriv/appstore/../api/src/useAPI.ts","webpack://@deriv/appstore/../api/src/useQuery.ts","webpack://@deriv/appstore/../../node_modules/@tanstack/react-query/build/lib/useQuery.mjs","webpack://@deriv/appstore/../api/src/utils/query-utils.ts","webpack://@deriv/appstore/../hooks/src/useCurrencyConfig.ts","webpack://@deriv/appstore/../hooks/src/useCurrentCurrencyConfig.ts","webpack://@deriv/appstore/./src/components/banners/deposit-now-banner/deposit-now-banner.tsx","webpack://@deriv/appstore/./src/components/banners/deposit-now-banner/index.ts"],"sourcesContent":["/**\n * @license React\n * use-sync-external-store-shim.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar React = require(\"react\");\nfunction is(x, y) {\n  return (x === y && (0 !== x || 1 / x === 1 / y)) || (x !== x && y !== y);\n}\nvar objectIs = \"function\" === typeof Object.is ? Object.is : is,\n  useState = React.useState,\n  useEffect = React.useEffect,\n  useLayoutEffect = React.useLayoutEffect,\n  useDebugValue = React.useDebugValue;\nfunction useSyncExternalStore$2(subscribe, getSnapshot) {\n  var value = getSnapshot(),\n    _useState = useState({ inst: { value: value, getSnapshot: getSnapshot } }),\n    inst = _useState[0].inst,\n    forceUpdate = _useState[1];\n  useLayoutEffect(\n    function () {\n      inst.value = value;\n      inst.getSnapshot = getSnapshot;\n      checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n    },\n    [subscribe, value, getSnapshot]\n  );\n  useEffect(\n    function () {\n      checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n      return subscribe(function () {\n        checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n      });\n    },\n    [subscribe]\n  );\n  useDebugValue(value);\n  return value;\n}\nfunction checkIfSnapshotChanged(inst) {\n  var latestGetSnapshot = inst.getSnapshot;\n  inst = inst.value;\n  try {\n    var nextValue = latestGetSnapshot();\n    return !objectIs(inst, nextValue);\n  } catch (error) {\n    return !0;\n  }\n}\nfunction useSyncExternalStore$1(subscribe, getSnapshot) {\n  return getSnapshot();\n}\nvar shim =\n  \"undefined\" === typeof window ||\n  \"undefined\" === typeof window.document ||\n  \"undefined\" === typeof window.document.createElement\n    ? useSyncExternalStore$1\n    : useSyncExternalStore$2;\nexports.useSyncExternalStore =\n  void 0 !== React.useSyncExternalStore ? React.useSyncExternalStore : shim;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim.production.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim.development.js');\n}\n","import { shallowEqualObjects, noop, isServer, isValidTimeout, timeUntilStale, replaceData } from './utils.mjs';\nimport { notifyManager } from './notifyManager.mjs';\nimport { focusManager } from './focusManager.mjs';\nimport { Subscribable } from './subscribable.mjs';\nimport { canFetch, isCancelledError } from './retryer.mjs';\n\nclass QueryObserver extends Subscribable {\n  constructor(client, options) {\n    super();\n    this.client = client;\n    this.options = options;\n    this.trackedProps = new Set();\n    this.selectError = null;\n    this.bindMethods();\n    this.setOptions(options);\n  }\n\n  bindMethods() {\n    this.remove = this.remove.bind(this);\n    this.refetch = this.refetch.bind(this);\n  }\n\n  onSubscribe() {\n    if (this.listeners.size === 1) {\n      this.currentQuery.addObserver(this);\n\n      if (shouldFetchOnMount(this.currentQuery, this.options)) {\n        this.executeFetch();\n      }\n\n      this.updateTimers();\n    }\n  }\n\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.destroy();\n    }\n  }\n\n  shouldFetchOnReconnect() {\n    return shouldFetchOn(this.currentQuery, this.options, this.options.refetchOnReconnect);\n  }\n\n  shouldFetchOnWindowFocus() {\n    return shouldFetchOn(this.currentQuery, this.options, this.options.refetchOnWindowFocus);\n  }\n\n  destroy() {\n    this.listeners = new Set();\n    this.clearStaleTimeout();\n    this.clearRefetchInterval();\n    this.currentQuery.removeObserver(this);\n  }\n\n  setOptions(options, notifyOptions) {\n    const prevOptions = this.options;\n    const prevQuery = this.currentQuery;\n    this.options = this.client.defaultQueryOptions(options);\n\n    if (process.env.NODE_ENV !== 'production' && typeof (options == null ? void 0 : options.isDataEqual) !== 'undefined') {\n      this.client.getLogger().error(\"The isDataEqual option has been deprecated and will be removed in the next major version. You can achieve the same functionality by passing a function as the structuralSharing option\");\n    }\n\n    if (!shallowEqualObjects(prevOptions, this.options)) {\n      this.client.getQueryCache().notify({\n        type: 'observerOptionsUpdated',\n        query: this.currentQuery,\n        observer: this\n      });\n    }\n\n    if (typeof this.options.enabled !== 'undefined' && typeof this.options.enabled !== 'boolean') {\n      throw new Error('Expected enabled to be a boolean');\n    } // Keep previous query key if the user does not supply one\n\n\n    if (!this.options.queryKey) {\n      this.options.queryKey = prevOptions.queryKey;\n    }\n\n    this.updateQuery();\n    const mounted = this.hasListeners(); // Fetch if there are subscribers\n\n    if (mounted && shouldFetchOptionally(this.currentQuery, prevQuery, this.options, prevOptions)) {\n      this.executeFetch();\n    } // Update result\n\n\n    this.updateResult(notifyOptions); // Update stale interval if needed\n\n    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || this.options.staleTime !== prevOptions.staleTime)) {\n      this.updateStaleTimeout();\n    }\n\n    const nextRefetchInterval = this.computeRefetchInterval(); // Update refetch interval if needed\n\n    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || nextRefetchInterval !== this.currentRefetchInterval)) {\n      this.updateRefetchInterval(nextRefetchInterval);\n    }\n  }\n\n  getOptimisticResult(options) {\n    const query = this.client.getQueryCache().build(this.client, options);\n    const result = this.createResult(query, options);\n\n    if (shouldAssignObserverCurrentProperties(this, result, options)) {\n      // this assigns the optimistic result to the current Observer\n      // because if the query function changes, useQuery will be performing\n      // an effect where it would fetch again.\n      // When the fetch finishes, we perform a deep data cloning in order\n      // to reuse objects references. This deep data clone is performed against\n      // the `observer.currentResult.data` property\n      // When QueryKey changes, we refresh the query and get new `optimistic`\n      // result, while we leave the `observer.currentResult`, so when new data\n      // arrives, it finds the old `observer.currentResult` which is related\n      // to the old QueryKey. Which means that currentResult and selectData are\n      // out of sync already.\n      // To solve this, we move the cursor of the currentResult everytime\n      // an observer reads an optimistic value.\n      // When keeping the previous data, the result doesn't change until new\n      // data arrives.\n      this.currentResult = result;\n      this.currentResultOptions = this.options;\n      this.currentResultState = this.currentQuery.state;\n    }\n\n    return result;\n  }\n\n  getCurrentResult() {\n    return this.currentResult;\n  }\n\n  trackResult(result) {\n    const trackedResult = {};\n    Object.keys(result).forEach(key => {\n      Object.defineProperty(trackedResult, key, {\n        configurable: false,\n        enumerable: true,\n        get: () => {\n          this.trackedProps.add(key);\n          return result[key];\n        }\n      });\n    });\n    return trackedResult;\n  }\n\n  getCurrentQuery() {\n    return this.currentQuery;\n  }\n\n  remove() {\n    this.client.getQueryCache().remove(this.currentQuery);\n  }\n\n  refetch({\n    refetchPage,\n    ...options\n  } = {}) {\n    return this.fetch({ ...options,\n      meta: {\n        refetchPage\n      }\n    });\n  }\n\n  fetchOptimistic(options) {\n    const defaultedOptions = this.client.defaultQueryOptions(options);\n    const query = this.client.getQueryCache().build(this.client, defaultedOptions);\n    query.isFetchingOptimistic = true;\n    return query.fetch().then(() => this.createResult(query, defaultedOptions));\n  }\n\n  fetch(fetchOptions) {\n    var _fetchOptions$cancelR;\n\n    return this.executeFetch({ ...fetchOptions,\n      cancelRefetch: (_fetchOptions$cancelR = fetchOptions.cancelRefetch) != null ? _fetchOptions$cancelR : true\n    }).then(() => {\n      this.updateResult();\n      return this.currentResult;\n    });\n  }\n\n  executeFetch(fetchOptions) {\n    // Make sure we reference the latest query as the current one might have been removed\n    this.updateQuery(); // Fetch\n\n    let promise = this.currentQuery.fetch(this.options, fetchOptions);\n\n    if (!(fetchOptions != null && fetchOptions.throwOnError)) {\n      promise = promise.catch(noop);\n    }\n\n    return promise;\n  }\n\n  updateStaleTimeout() {\n    this.clearStaleTimeout();\n\n    if (isServer || this.currentResult.isStale || !isValidTimeout(this.options.staleTime)) {\n      return;\n    }\n\n    const time = timeUntilStale(this.currentResult.dataUpdatedAt, this.options.staleTime); // The timeout is sometimes triggered 1 ms before the stale time expiration.\n    // To mitigate this issue we always add 1 ms to the timeout.\n\n    const timeout = time + 1;\n    this.staleTimeoutId = setTimeout(() => {\n      if (!this.currentResult.isStale) {\n        this.updateResult();\n      }\n    }, timeout);\n  }\n\n  computeRefetchInterval() {\n    var _this$options$refetch;\n\n    return typeof this.options.refetchInterval === 'function' ? this.options.refetchInterval(this.currentResult.data, this.currentQuery) : (_this$options$refetch = this.options.refetchInterval) != null ? _this$options$refetch : false;\n  }\n\n  updateRefetchInterval(nextInterval) {\n    this.clearRefetchInterval();\n    this.currentRefetchInterval = nextInterval;\n\n    if (isServer || this.options.enabled === false || !isValidTimeout(this.currentRefetchInterval) || this.currentRefetchInterval === 0) {\n      return;\n    }\n\n    this.refetchIntervalId = setInterval(() => {\n      if (this.options.refetchIntervalInBackground || focusManager.isFocused()) {\n        this.executeFetch();\n      }\n    }, this.currentRefetchInterval);\n  }\n\n  updateTimers() {\n    this.updateStaleTimeout();\n    this.updateRefetchInterval(this.computeRefetchInterval());\n  }\n\n  clearStaleTimeout() {\n    if (this.staleTimeoutId) {\n      clearTimeout(this.staleTimeoutId);\n      this.staleTimeoutId = undefined;\n    }\n  }\n\n  clearRefetchInterval() {\n    if (this.refetchIntervalId) {\n      clearInterval(this.refetchIntervalId);\n      this.refetchIntervalId = undefined;\n    }\n  }\n\n  createResult(query, options) {\n    const prevQuery = this.currentQuery;\n    const prevOptions = this.options;\n    const prevResult = this.currentResult;\n    const prevResultState = this.currentResultState;\n    const prevResultOptions = this.currentResultOptions;\n    const queryChange = query !== prevQuery;\n    const queryInitialState = queryChange ? query.state : this.currentQueryInitialState;\n    const prevQueryResult = queryChange ? this.currentResult : this.previousQueryResult;\n    const {\n      state\n    } = query;\n    let {\n      dataUpdatedAt,\n      error,\n      errorUpdatedAt,\n      fetchStatus,\n      status\n    } = state;\n    let isPreviousData = false;\n    let isPlaceholderData = false;\n    let data; // Optimistically set result in fetching state if needed\n\n    if (options._optimisticResults) {\n      const mounted = this.hasListeners();\n      const fetchOnMount = !mounted && shouldFetchOnMount(query, options);\n      const fetchOptionally = mounted && shouldFetchOptionally(query, prevQuery, options, prevOptions);\n\n      if (fetchOnMount || fetchOptionally) {\n        fetchStatus = canFetch(query.options.networkMode) ? 'fetching' : 'paused';\n\n        if (!dataUpdatedAt) {\n          status = 'loading';\n        }\n      }\n\n      if (options._optimisticResults === 'isRestoring') {\n        fetchStatus = 'idle';\n      }\n    } // Keep previous data if needed\n\n\n    if (options.keepPreviousData && !state.dataUpdatedAt && prevQueryResult != null && prevQueryResult.isSuccess && status !== 'error') {\n      data = prevQueryResult.data;\n      dataUpdatedAt = prevQueryResult.dataUpdatedAt;\n      status = prevQueryResult.status;\n      isPreviousData = true;\n    } // Select data if needed\n    else if (options.select && typeof state.data !== 'undefined') {\n      // Memoize select result\n      if (prevResult && state.data === (prevResultState == null ? void 0 : prevResultState.data) && options.select === this.selectFn) {\n        data = this.selectResult;\n      } else {\n        try {\n          this.selectFn = options.select;\n          data = options.select(state.data);\n          data = replaceData(prevResult == null ? void 0 : prevResult.data, data, options);\n          this.selectResult = data;\n          this.selectError = null;\n        } catch (selectError) {\n          if (process.env.NODE_ENV !== 'production') {\n            this.client.getLogger().error(selectError);\n          }\n\n          this.selectError = selectError;\n        }\n      }\n    } // Use query data\n    else {\n      data = state.data;\n    } // Show placeholder data if needed\n\n\n    if (typeof options.placeholderData !== 'undefined' && typeof data === 'undefined' && status === 'loading') {\n      let placeholderData; // Memoize placeholder data\n\n      if (prevResult != null && prevResult.isPlaceholderData && options.placeholderData === (prevResultOptions == null ? void 0 : prevResultOptions.placeholderData)) {\n        placeholderData = prevResult.data;\n      } else {\n        placeholderData = typeof options.placeholderData === 'function' ? options.placeholderData() : options.placeholderData;\n\n        if (options.select && typeof placeholderData !== 'undefined') {\n          try {\n            placeholderData = options.select(placeholderData);\n            this.selectError = null;\n          } catch (selectError) {\n            if (process.env.NODE_ENV !== 'production') {\n              this.client.getLogger().error(selectError);\n            }\n\n            this.selectError = selectError;\n          }\n        }\n      }\n\n      if (typeof placeholderData !== 'undefined') {\n        status = 'success';\n        data = replaceData(prevResult == null ? void 0 : prevResult.data, placeholderData, options);\n        isPlaceholderData = true;\n      }\n    }\n\n    if (this.selectError) {\n      error = this.selectError;\n      data = this.selectResult;\n      errorUpdatedAt = Date.now();\n      status = 'error';\n    }\n\n    const isFetching = fetchStatus === 'fetching';\n    const isLoading = status === 'loading';\n    const isError = status === 'error';\n    const result = {\n      status,\n      fetchStatus,\n      isLoading,\n      isSuccess: status === 'success',\n      isError,\n      isInitialLoading: isLoading && isFetching,\n      data,\n      dataUpdatedAt,\n      error,\n      errorUpdatedAt,\n      failureCount: state.fetchFailureCount,\n      failureReason: state.fetchFailureReason,\n      errorUpdateCount: state.errorUpdateCount,\n      isFetched: state.dataUpdateCount > 0 || state.errorUpdateCount > 0,\n      isFetchedAfterMount: state.dataUpdateCount > queryInitialState.dataUpdateCount || state.errorUpdateCount > queryInitialState.errorUpdateCount,\n      isFetching,\n      isRefetching: isFetching && !isLoading,\n      isLoadingError: isError && state.dataUpdatedAt === 0,\n      isPaused: fetchStatus === 'paused',\n      isPlaceholderData,\n      isPreviousData,\n      isRefetchError: isError && state.dataUpdatedAt !== 0,\n      isStale: isStale(query, options),\n      refetch: this.refetch,\n      remove: this.remove\n    };\n    return result;\n  }\n\n  updateResult(notifyOptions) {\n    const prevResult = this.currentResult;\n    const nextResult = this.createResult(this.currentQuery, this.options);\n    this.currentResultState = this.currentQuery.state;\n    this.currentResultOptions = this.options; // Only notify and update result if something has changed\n\n    if (shallowEqualObjects(nextResult, prevResult)) {\n      return;\n    }\n\n    this.currentResult = nextResult; // Determine which callbacks to trigger\n\n    const defaultNotifyOptions = {\n      cache: true\n    };\n\n    const shouldNotifyListeners = () => {\n      if (!prevResult) {\n        return true;\n      }\n\n      const {\n        notifyOnChangeProps\n      } = this.options;\n      const notifyOnChangePropsValue = typeof notifyOnChangeProps === 'function' ? notifyOnChangeProps() : notifyOnChangeProps;\n\n      if (notifyOnChangePropsValue === 'all' || !notifyOnChangePropsValue && !this.trackedProps.size) {\n        return true;\n      }\n\n      const includedProps = new Set(notifyOnChangePropsValue != null ? notifyOnChangePropsValue : this.trackedProps);\n\n      if (this.options.useErrorBoundary) {\n        includedProps.add('error');\n      }\n\n      return Object.keys(this.currentResult).some(key => {\n        const typedKey = key;\n        const changed = this.currentResult[typedKey] !== prevResult[typedKey];\n        return changed && includedProps.has(typedKey);\n      });\n    };\n\n    if ((notifyOptions == null ? void 0 : notifyOptions.listeners) !== false && shouldNotifyListeners()) {\n      defaultNotifyOptions.listeners = true;\n    }\n\n    this.notify({ ...defaultNotifyOptions,\n      ...notifyOptions\n    });\n  }\n\n  updateQuery() {\n    const query = this.client.getQueryCache().build(this.client, this.options);\n\n    if (query === this.currentQuery) {\n      return;\n    }\n\n    const prevQuery = this.currentQuery;\n    this.currentQuery = query;\n    this.currentQueryInitialState = query.state;\n    this.previousQueryResult = this.currentResult;\n\n    if (this.hasListeners()) {\n      prevQuery == null ? void 0 : prevQuery.removeObserver(this);\n      query.addObserver(this);\n    }\n  }\n\n  onQueryUpdate(action) {\n    const notifyOptions = {};\n\n    if (action.type === 'success') {\n      notifyOptions.onSuccess = !action.manual;\n    } else if (action.type === 'error' && !isCancelledError(action.error)) {\n      notifyOptions.onError = true;\n    }\n\n    this.updateResult(notifyOptions);\n\n    if (this.hasListeners()) {\n      this.updateTimers();\n    }\n  }\n\n  notify(notifyOptions) {\n    notifyManager.batch(() => {\n      // First trigger the configuration callbacks\n      if (notifyOptions.onSuccess) {\n        var _this$options$onSucce, _this$options, _this$options$onSettl, _this$options2;\n\n        (_this$options$onSucce = (_this$options = this.options).onSuccess) == null ? void 0 : _this$options$onSucce.call(_this$options, this.currentResult.data);\n        (_this$options$onSettl = (_this$options2 = this.options).onSettled) == null ? void 0 : _this$options$onSettl.call(_this$options2, this.currentResult.data, null);\n      } else if (notifyOptions.onError) {\n        var _this$options$onError, _this$options3, _this$options$onSettl2, _this$options4;\n\n        (_this$options$onError = (_this$options3 = this.options).onError) == null ? void 0 : _this$options$onError.call(_this$options3, this.currentResult.error);\n        (_this$options$onSettl2 = (_this$options4 = this.options).onSettled) == null ? void 0 : _this$options$onSettl2.call(_this$options4, undefined, this.currentResult.error);\n      } // Then trigger the listeners\n\n\n      if (notifyOptions.listeners) {\n        this.listeners.forEach(({\n          listener\n        }) => {\n          listener(this.currentResult);\n        });\n      } // Then the cache listeners\n\n\n      if (notifyOptions.cache) {\n        this.client.getQueryCache().notify({\n          query: this.currentQuery,\n          type: 'observerResultsUpdated'\n        });\n      }\n    });\n  }\n\n}\n\nfunction shouldLoadOnMount(query, options) {\n  return options.enabled !== false && !query.state.dataUpdatedAt && !(query.state.status === 'error' && options.retryOnMount === false);\n}\n\nfunction shouldFetchOnMount(query, options) {\n  return shouldLoadOnMount(query, options) || query.state.dataUpdatedAt > 0 && shouldFetchOn(query, options, options.refetchOnMount);\n}\n\nfunction shouldFetchOn(query, options, field) {\n  if (options.enabled !== false) {\n    const value = typeof field === 'function' ? field(query) : field;\n    return value === 'always' || value !== false && isStale(query, options);\n  }\n\n  return false;\n}\n\nfunction shouldFetchOptionally(query, prevQuery, options, prevOptions) {\n  return options.enabled !== false && (query !== prevQuery || prevOptions.enabled === false) && (!options.suspense || query.state.status !== 'error') && isStale(query, options);\n}\n\nfunction isStale(query, options) {\n  return query.isStaleByTime(options.staleTime);\n} // this function would decide if we will update the observer's 'current'\n// properties after an optimistic reading via getOptimisticResult\n\n\nfunction shouldAssignObserverCurrentProperties(observer, optimisticResult, options) {\n  // it is important to keep this condition like this for three reasons:\n  // 1. It will get removed in the v5\n  // 2. it reads: don't update the properties if we want to keep the previous\n  // data.\n  // 3. The opposite condition (!options.keepPreviousData) would fallthrough\n  // and will result in a bad decision\n  if (options.keepPreviousData) {\n    return false;\n  } // this means we want to put some placeholder data when pending and queryKey\n  // changed.\n\n\n  if (options.placeholderData !== undefined) {\n    // re-assign properties only if current data is placeholder data\n    // which means that data did not arrive yet, so, if there is some cached data\n    // we need to \"prepare\" to receive it\n    return optimisticResult.isPlaceholderData;\n  } // if the newly created result isn't what the observer is holding as current,\n  // then we'll need to update the properties as well\n\n\n  if (!shallowEqualObjects(observer.getCurrentResult(), optimisticResult)) {\n    return true;\n  } // basically, just keep previous properties if nothing changed\n\n\n  return false;\n}\n\nexport { QueryObserver };\n//# sourceMappingURL=queryObserver.mjs.map\n","'use client';\nimport { useSyncExternalStore as useSyncExternalStore$1 } from 'use-sync-external-store/shim/index.js';\n\nconst useSyncExternalStore = useSyncExternalStore$1;\n\nexport { useSyncExternalStore };\n//# sourceMappingURL=useSyncExternalStore.mjs.map\n","'use client';\nimport * as React from 'react';\n\nfunction createValue() {\n  let isReset = false;\n  return {\n    clearReset: () => {\n      isReset = false;\n    },\n    reset: () => {\n      isReset = true;\n    },\n    isReset: () => {\n      return isReset;\n    }\n  };\n}\n\nconst QueryErrorResetBoundaryContext = /*#__PURE__*/React.createContext(createValue()); // HOOK\n\nconst useQueryErrorResetBoundary = () => React.useContext(QueryErrorResetBoundaryContext); // COMPONENT\n\nconst QueryErrorResetBoundary = ({\n  children\n}) => {\n  const [value] = React.useState(() => createValue());\n  return /*#__PURE__*/React.createElement(QueryErrorResetBoundaryContext.Provider, {\n    value: value\n  }, typeof children === 'function' ? children(value) : children);\n};\n\nexport { QueryErrorResetBoundary, useQueryErrorResetBoundary };\n//# sourceMappingURL=QueryErrorResetBoundary.mjs.map\n","'use client';\nimport * as React from 'react';\n\nconst IsRestoringContext = /*#__PURE__*/React.createContext(false);\nconst useIsRestoring = () => React.useContext(IsRestoringContext);\nconst IsRestoringProvider = IsRestoringContext.Provider;\n\nexport { IsRestoringProvider, useIsRestoring };\n//# sourceMappingURL=isRestoring.mjs.map\n","'use client';\nimport * as React from 'react';\nimport { notifyManager } from '@tanstack/query-core';\nimport { useSyncExternalStore } from './useSyncExternalStore.mjs';\nimport { useQueryErrorResetBoundary } from './QueryErrorResetBoundary.mjs';\nimport { useQueryClient } from './QueryClientProvider.mjs';\nimport { useIsRestoring } from './isRestoring.mjs';\nimport { ensurePreventErrorBoundaryRetry, useClearResetErrorBoundary, getHasError } from './errorBoundaryUtils.mjs';\nimport { ensureStaleTime, shouldSuspend, fetchOptimistic } from './suspense.mjs';\n\nfunction useBaseQuery(options, Observer) {\n  const queryClient = useQueryClient({\n    context: options.context\n  });\n  const isRestoring = useIsRestoring();\n  const errorResetBoundary = useQueryErrorResetBoundary();\n  const defaultedOptions = queryClient.defaultQueryOptions(options); // Make sure results are optimistically set in fetching state before subscribing or updating options\n\n  defaultedOptions._optimisticResults = isRestoring ? 'isRestoring' : 'optimistic'; // Include callbacks in batch renders\n\n  if (defaultedOptions.onError) {\n    defaultedOptions.onError = notifyManager.batchCalls(defaultedOptions.onError);\n  }\n\n  if (defaultedOptions.onSuccess) {\n    defaultedOptions.onSuccess = notifyManager.batchCalls(defaultedOptions.onSuccess);\n  }\n\n  if (defaultedOptions.onSettled) {\n    defaultedOptions.onSettled = notifyManager.batchCalls(defaultedOptions.onSettled);\n  }\n\n  ensureStaleTime(defaultedOptions);\n  ensurePreventErrorBoundaryRetry(defaultedOptions, errorResetBoundary);\n  useClearResetErrorBoundary(errorResetBoundary);\n  const [observer] = React.useState(() => new Observer(queryClient, defaultedOptions));\n  const result = observer.getOptimisticResult(defaultedOptions);\n  useSyncExternalStore(React.useCallback(onStoreChange => {\n    const unsubscribe = isRestoring ? () => undefined : observer.subscribe(notifyManager.batchCalls(onStoreChange)); // Update result to make sure we did not miss any query updates\n    // between creating the observer and subscribing to it.\n\n    observer.updateResult();\n    return unsubscribe;\n  }, [observer, isRestoring]), () => observer.getCurrentResult(), () => observer.getCurrentResult());\n  React.useEffect(() => {\n    // Do not notify on updates because of changes in the options because\n    // these changes should already be reflected in the optimistic result.\n    observer.setOptions(defaultedOptions, {\n      listeners: false\n    });\n  }, [defaultedOptions, observer]); // Handle suspense\n\n  if (shouldSuspend(defaultedOptions, result, isRestoring)) {\n    throw fetchOptimistic(defaultedOptions, observer, errorResetBoundary);\n  } // Handle error boundary\n\n\n  if (getHasError({\n    result,\n    errorResetBoundary,\n    useErrorBoundary: defaultedOptions.useErrorBoundary,\n    query: observer.getCurrentQuery()\n  })) {\n    throw result.error;\n  } // Handle result property usage tracking\n\n\n  return !defaultedOptions.notifyOnChangeProps ? observer.trackResult(result) : result;\n}\n\nexport { useBaseQuery };\n//# sourceMappingURL=useBaseQuery.mjs.map\n","const ensureStaleTime = defaultedOptions => {\n  if (defaultedOptions.suspense) {\n    // Always set stale time when using suspense to prevent\n    // fetching again when directly mounting after suspending\n    if (typeof defaultedOptions.staleTime !== 'number') {\n      defaultedOptions.staleTime = 1000;\n    }\n  }\n};\nconst willFetch = (result, isRestoring) => result.isLoading && result.isFetching && !isRestoring;\nconst shouldSuspend = (defaultedOptions, result, isRestoring) => (defaultedOptions == null ? void 0 : defaultedOptions.suspense) && willFetch(result, isRestoring);\nconst fetchOptimistic = (defaultedOptions, observer, errorResetBoundary) => observer.fetchOptimistic(defaultedOptions).then(({\n  data\n}) => {\n  defaultedOptions.onSuccess == null ? void 0 : defaultedOptions.onSuccess(data);\n  defaultedOptions.onSettled == null ? void 0 : defaultedOptions.onSettled(data, null);\n}).catch(error => {\n  errorResetBoundary.clearReset();\n  defaultedOptions.onError == null ? void 0 : defaultedOptions.onError(error);\n  defaultedOptions.onSettled == null ? void 0 : defaultedOptions.onSettled(undefined, error);\n});\n\nexport { ensureStaleTime, fetchOptimistic, shouldSuspend, willFetch };\n//# sourceMappingURL=suspense.mjs.map\n","'use client';\nimport * as React from 'react';\nimport { shouldThrowError } from './utils.mjs';\n\nconst ensurePreventErrorBoundaryRetry = (options, errorResetBoundary) => {\n  if (options.suspense || options.useErrorBoundary) {\n    // Prevent retrying failed query if the error boundary has not been reset yet\n    if (!errorResetBoundary.isReset()) {\n      options.retryOnMount = false;\n    }\n  }\n};\nconst useClearResetErrorBoundary = errorResetBoundary => {\n  React.useEffect(() => {\n    errorResetBoundary.clearReset();\n  }, [errorResetBoundary]);\n};\nconst getHasError = ({\n  result,\n  errorResetBoundary,\n  useErrorBoundary,\n  query\n}) => {\n  return result.isError && !errorResetBoundary.isReset() && !result.isFetching && shouldThrowError(useErrorBoundary, [result.error, query]);\n};\n\nexport { ensurePreventErrorBoundaryRetry, getHasError, useClearResetErrorBoundary };\n//# sourceMappingURL=errorBoundaryUtils.mjs.map\n","function shouldThrowError(_useErrorBoundary, params) {\n  // Allow useErrorBoundary function to override throwing behavior on a per-error basis\n  if (typeof _useErrorBoundary === 'function') {\n    return _useErrorBoundary(...params);\n  }\n\n  return !!_useErrorBoundary;\n}\n\nexport { shouldThrowError };\n//# sourceMappingURL=utils.mjs.map\n","import { useCallback } from 'react';\n\nimport type {\n    TSocketEndpointNames,\n    TSocketPaginateableEndpointNames,\n    TSocketRequestPayload,\n    TSocketResponseData,\n    TSocketSubscribableEndpointNames,\n} from '../types';\nimport { useAPIContext } from './APIProvider';\n\nconst useAPI = () => {\n    const { derivAPI } = useAPIContext();\n\n    const send = useCallback(\n        async <T extends TSocketEndpointNames | TSocketPaginateableEndpointNames = TSocketEndpointNames>(\n            name: T,\n            payload?: TSocketRequestPayload<T>\n        ): Promise<TSocketResponseData<T>> => {\n            const response = await derivAPI?.send({ [name]: 1, ...(payload || {}) });\n\n            if (response.error) {\n                throw response.error;\n            }\n\n            return response;\n        },\n        [derivAPI]\n    );\n\n    const subscribe = useCallback(\n        <T extends TSocketSubscribableEndpointNames>(\n            name: T,\n            payload?: TSocketRequestPayload<T>\n        ): {\n            subscribe: (\n                // The type will be handled by the `useSubscription` hook.\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                onData: (response: any) => void,\n                // The type will be handled by the `useSubscription` hook.\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                onError: (response: any) => void\n            ) => { unsubscribe?: VoidFunction };\n        } => derivAPI?.subscribe({ [name]: 1, subscribe: 1, ...(payload || {}) }),\n        [derivAPI]\n    );\n\n    return {\n        send,\n        subscribe,\n    };\n};\n\nexport default useAPI;\n","import { useQuery as _useQuery } from '@tanstack/react-query';\nimport type {\n    TSocketAcceptableProps,\n    TSocketEndpointNames,\n    TSocketError,\n    TSocketRequestPayload,\n    TSocketRequestQueryOptions,\n    TSocketResponseData,\n} from '../types';\nimport useAPI from './useAPI';\nimport { getQueryKeys } from './utils';\n\nconst useQuery = <T extends TSocketEndpointNames>(name: T, ...props: TSocketAcceptableProps<T, true>) => {\n    const prop = props?.[0];\n    const payload = prop && 'payload' in prop ? (prop.payload as TSocketRequestPayload<T>) : undefined;\n    const options = prop && 'options' in prop ? (prop.options as TSocketRequestQueryOptions<T>) : undefined;\n    const { send } = useAPI();\n\n    return _useQuery<TSocketResponseData<T>, TSocketError<T>>(\n        getQueryKeys(name, payload),\n        () => send(name, payload),\n        options\n    );\n};\n\nexport default useQuery;\n","'use client';\nimport { parseQueryArgs, QueryObserver } from '@tanstack/query-core';\nimport { useBaseQuery } from './useBaseQuery.mjs';\n\nfunction useQuery(arg1, arg2, arg3) {\n  const parsedOptions = parseQueryArgs(arg1, arg2, arg3);\n  return useBaseQuery(parsedOptions, QueryObserver);\n}\n\nexport { useQuery };\n//# sourceMappingURL=useQuery.mjs.map\n","export const getQueryKeys = (name: string, props?: Record<string, unknown>) => {\n    if (!props) return [name];\n\n    delete props.req_id;\n    if (name && props[name] === 1) delete props[name];\n\n    if (Object.keys(props).length === 0) return [name];\n\n    const ordered_props = Object.keys(props)\n        .sort((a, b) => a.localeCompare(b))\n        .reduce((obj, key) => {\n            obj[key] = props[key];\n\n            return obj;\n        }, {} as { [k: string]: unknown });\n\n    const query_props = JSON.stringify(ordered_props);\n\n    return [name, query_props];\n};\n","import { useCallback, useMemo } from 'react';\nimport { useFetch } from '@deriv/api';\n\ntype TPlatform = {\n    cashier: ('doughflow' | 'crypto')[];\n    ramp: string[] | [];\n};\n\n/** @deprecated Use `useCurrencyConfig` from `@deriv/api` package instead. */\nconst useCurrencyConfig = () => {\n    const { data: website_status_data, ...rest } = useFetch('website_status');\n\n    const currencies_config = useMemo(() => {\n        if (!website_status_data?.website_status?.currencies_config) return undefined;\n\n        const website_status_currencies_config = website_status_data.website_status.currencies_config;\n\n        const modified_currencies_config = Object.keys(website_status_currencies_config).map(currency => {\n            const currency_config = website_status_currencies_config[currency];\n\n            return {\n                ...currency_config,\n                /** determine if the currency is a `crypto` currency */\n                is_crypto: currency_config?.type === 'crypto',\n                /** determine if the currency is a `fiat` currency */\n                is_fiat: currency_config?.type === 'fiat',\n                /** determine if the currency is `Australian Dollar` */\n                is_AUD: currency === 'AUD',\n                /** determine if the currency is `US Dollar` */\n                is_USD: currency === 'USD',\n                /** determine if the currency is `Euro` */\n                is_EUR: currency === 'EUR',\n                /** determine if the currency is `Pound Sterling` */\n                is_GBP: currency === 'GBP',\n                /** determine if the currency is `Bitcoin` */\n                is_BTC: currency === 'BTC',\n                /** determine if the currency is `Ethereum` */\n                is_ETH: currency === 'ETH',\n                /** determine if the currency is `Litecoin` */\n                is_LTC: currency === 'LTC',\n                /** determine if the currency is `Multi-Collateral DAI` */\n                is_DAI: currency === 'DAI',\n                /** determine if the currency is `IDK` */\n                is_IDK: currency === 'IDK',\n                /** determine if the currency is `Paxos Standard` */\n                is_PAX: currency === 'PAX',\n                /** determine if the currency is `Binary Coin` */\n                is_USB: currency === 'USB',\n                /** determine if the currency is `Tether Omni` */\n                is_USDT: currency === 'UST',\n                /** determine if the currency is `True USD` */\n                is_TUSD: currency === 'TUSD',\n                /** determine if the currency is `Binance USD` */\n                is_BUSD: currency === 'BUSD',\n                /** determine if the currency is `STATIS Euro` */\n                is_EURS: currency === 'EURS',\n                /** determine if the currency is `Tether ERC20` */\n                is_eUSDT: currency === 'eUSDT',\n                /** determine if the currency is `Tether TRC20` */\n                is_tUSDT: currency === 'tUSDT',\n                /** determine if the currency is `USD Coin` */\n                is_USDC: currency === 'USDC',\n                /** determine if the currency is `USDK` */\n                is_USDK: currency === 'USDK',\n                /** Currency code */\n                code: currency,\n                /** Currency display code */\n                display_code: currency === 'UST' ? 'USDT' : currency,\n                /** Local asset name for the currency icon. ex: `IcCurrencyUsd` for `USD` */\n                icon: `IcCurrency${currency[0].toUpperCase() + currency.slice(1).toLowerCase()}`,\n                /** Platforms with providers */\n                //TODO: Remove `as TPlatform` after updating `@deriv/api-types` library\n                //@ts-expect-error need to update `@deriv/api-types` library to the latest version\n                platform: currency_config?.platform as TPlatform,\n            };\n        });\n\n        return modified_currencies_config.reduce<Record<string, typeof modified_currencies_config[number]>>(\n            (previous, current) => ({ ...previous, [current.code]: current }),\n            {}\n        );\n    }, [website_status_data?.website_status?.currencies_config]);\n\n    const getConfig = useCallback((currency: string) => currencies_config?.[currency], [currencies_config]);\n\n    return {\n        /** Returns the currency config object for the given currency */\n        getConfig,\n        /** Available currencies and their information */\n        currencies_config,\n        ...rest,\n    };\n};\n\nexport default useCurrencyConfig;\n","import { useStore } from '@deriv/stores';\nimport useCurrencyConfig from './useCurrencyConfig';\n\n/** A custom hook to get the currency config information for the user's current currency. */\nconst useCurrentCurrencyConfig = () => {\n    const { client } = useStore();\n    const { currency } = client;\n    const { getConfig } = useCurrencyConfig();\n    const currency_config = getConfig(currency);\n\n    // Safe to do null assertion here because the user's currency is always\n    // available in the currency config object so it can't be null.\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return currency_config!;\n};\n\nexport default useCurrentCurrencyConfig;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Analytics } from '@deriv-com/analytics';\nimport { useDevice } from '@deriv-com/ui';\nimport { Localize } from '@deriv/translations';\nimport { Button, Text, Icon } from '@deriv/components';\nimport { observer, useStore } from '@deriv/stores';\nimport { useCurrentCurrencyConfig } from '@deriv/hooks';\nimport { routes, cacheTrackEvents } from '@deriv/shared';\nimport './deposit-now-banner.scss';\n\nconst desktopWidth = 368;\nconst desktopHeight = 154;\nconst responsiveWidth = 115;\nconst responsiveHeight = 112;\n\nconst DepositNowBanner = observer(() => {\n    const { isDesktop } = useDevice();\n    const history = useHistory();\n    const { traders_hub } = useStore();\n    const currency_config = useCurrentCurrencyConfig();\n    const is_crypto_account = currency_config?.is_crypto;\n    const { is_eu_user } = traders_hub;\n\n    const handleButtonClick = () => {\n        cacheTrackEvents.loadEvent([\n            {\n                event: {\n                    name: 'ce_tradershub_banner',\n                    properties: {\n                        action: 'click_cta',\n                        banner_name: 'first_deposit',\n                        banner_type: 'with_cta',\n                    },\n                },\n            },\n        ]);\n        history.push(`${routes.cashier_deposit}${is_crypto_account ? '#deposit' : ''}`);\n    };\n\n    React.useEffect(() => {\n        cacheTrackEvents.loadEvent([\n            {\n                event: {\n                    name: 'ce_tradershub_banner',\n                    properties: {\n                        action: 'open',\n                        banner_name: 'first_deposit',\n                        banner_type: 'with_cta',\n                    },\n                },\n            },\n        ]);\n    }, []);\n\n    return (\n        <div className='deposit-now-banner'>\n            <div className='deposit-now-banner__content'>\n                <div className='deposit-now-banner__description'>\n                    <Text size={!isDesktop ? 'xs' : 'm'} color='prominent'>\n                        <Localize i18n_default_text='Make your first deposit to start trading' />\n                    </Text>\n                    <Button className='deposit-now-banner__button' large primary onClick={handleButtonClick}>\n                        <Localize i18n_default_text='Deposit now' />\n                    </Button>\n                </div>\n                <Icon\n                    icon={`IcAppstoreDepositNow${is_eu_user ? 'Eu' : 'NonEu'}Coins${\n                        isDesktop ? 'Desktop' : 'Responsive'\n                    }`}\n                    width={isDesktop ? desktopWidth : responsiveWidth}\n                    height={isDesktop ? desktopHeight : responsiveHeight}\n                    className='deposit-now-banner__image'\n                    data_testid={`dt_deposit_now_${is_eu_user ? 'eu' : 'non_eu'}_coins_${\n                        isDesktop ? 'desktop' : 'responsive'\n                    }`}\n                />\n            </div>\n        </div>\n    );\n});\n\nexport default DepositNowBanner;\n","import DepositNowBanner from './deposit-now-banner';\n\nexport default DepositNowBanner;\n"],"names":["React","objectIs","Object","is","x","y","useState","useEffect","useLayoutEffect","useDebugValue","checkIfSnapshotChanged","inst","latestGetSnapshot","getSnapshot","value","nextValue","error","shim","window","document","createElement","subscribe","_useState","forceUpdate","exports","useSyncExternalStore","module","QueryObserver","constructor","client","options","super","this","trackedProps","Set","selectError","bindMethods","setOptions","remove","bind","refetch","onSubscribe","listeners","size","currentQuery","addObserver","shouldFetchOnMount","executeFetch","updateTimers","onUnsubscribe","hasListeners","destroy","shouldFetchOnReconnect","shouldFetchOn","refetchOnReconnect","shouldFetchOnWindowFocus","refetchOnWindowFocus","clearStaleTimeout","clearRefetchInterval","removeObserver","notifyOptions","prevOptions","prevQuery","defaultQueryOptions","getQueryCache","notify","type","query","observer","enabled","Error","queryKey","updateQuery","mounted","shouldFetchOptionally","updateResult","staleTime","updateStaleTimeout","nextRefetchInterval","computeRefetchInterval","currentRefetchInterval","updateRefetchInterval","getOptimisticResult","build","result","createResult","optimisticResult","keepPreviousData","undefined","placeholderData","isPlaceholderData","getCurrentResult","shouldAssignObserverCurrentProperties","currentResult","currentResultOptions","currentResultState","state","trackResult","trackedResult","keys","forEach","key","defineProperty","configurable","enumerable","get","add","getCurrentQuery","refetchPage","fetch","meta","fetchOptimistic","defaultedOptions","isFetchingOptimistic","then","fetchOptions","_fetchOptions$cancelR","cancelRefetch","promise","throwOnError","catch","isStale","timeout","dataUpdatedAt","staleTimeoutId","setTimeout","_this$options$refetch","refetchInterval","data","nextInterval","refetchIntervalId","setInterval","refetchIntervalInBackground","focusManager","isFocused","clearTimeout","clearInterval","prevResult","prevResultState","prevResultOptions","queryChange","queryInitialState","currentQueryInitialState","prevQueryResult","previousQueryResult","errorUpdatedAt","fetchStatus","status","isPreviousData","_optimisticResults","fetchOnMount","fetchOptionally","networkMode","isSuccess","select","selectFn","selectResult","Date","now","isFetching","isLoading","isError","isInitialLoading","failureCount","fetchFailureCount","failureReason","fetchFailureReason","errorUpdateCount","isFetched","dataUpdateCount","isFetchedAfterMount","isRefetching","isLoadingError","isPaused","isRefetchError","nextResult","defaultNotifyOptions","cache","notifyOnChangeProps","notifyOnChangePropsValue","includedProps","useErrorBoundary","some","typedKey","has","shouldNotifyListeners","onQueryUpdate","action","onSuccess","manual","onError","notifyManager","batch","_this$options$onSucce","_this$options","_this$options$onSettl","_this$options2","call","onSettled","_this$options$onError","_this$options3","_this$options$onSettl2","_this$options4","listener","retryOnMount","shouldLoadOnMount","refetchOnMount","field","suspense","isStaleByTime","createValue","isReset","clearReset","reset","QueryErrorResetBoundaryContext","IsRestoringContext","Provider","useBaseQuery","Observer","queryClient","context","isRestoring","errorResetBoundary","batchCalls","ensureStaleTime","ensurePreventErrorBoundaryRetry","useClearResetErrorBoundary","onStoreChange","unsubscribe","willFetch","shouldSuspend","_useErrorBoundary","params","getHasError","_regeneratorRuntime","e","t","r","prototype","n","hasOwnProperty","o","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","h","l","f","s","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","callInvokeWithMethodAndArg","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","isNaN","length","displayName","isGeneratorFunction","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","ownKeys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","apply","_objectSpread","arguments","_defineProperty","getOwnPropertyDescriptors","defineProperties","toPrimitive","String","Number","_toPrimitive","_toPropertyKey","asyncGeneratorStep","derivAPI","useAPIContext","send","useCallback","_ref","_callee","payload","response","_context","_next","_throw","_x","_x2","_len","props","Array","_key","arg1","arg2","arg3","prop","useAPI","req_id","ordered_props","sort","b","localeCompare","reduce","obj","JSON","stringify","getQueryKeys","_website_status_data$2","_useFetch","useFetch","website_status_data","rest","_objectWithoutProperties","_excluded","currencies_config","useMemo","_website_status_data$","website_status","website_status_currencies_config","map","currency","currency_config","is_crypto","is_fiat","is_AUD","is_USD","is_EUR","is_GBP","is_BTC","is_ETH","is_LTC","is_DAI","is_IDK","is_PAX","is_USB","is_USDT","is_TUSD","is_BUSD","is_EURS","is_eUSDT","is_tUSDT","is_USDC","is_USDK","code","display_code","icon","concat","toUpperCase","toLowerCase","platform","previous","current","getConfig","useStore","useCurrencyConfig","isDesktop","useDevice","history","useHistory","traders_hub","useCurrentCurrencyConfig","is_crypto_account","is_eu_user","cacheTrackEvents","loadEvent","event","properties","banner_name","banner_type","className","Text","color","Localize","i18n_default_text","Button","large","primary","onClick","routes","cashier_deposit","Icon","width","height","data_testid"],"sourceRoot":""}