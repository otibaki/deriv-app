{"version":3,"file":"cfd/js/cfd.cfd-compare-accounts.76f81ed9290e49b750bb.js","mappings":"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","sources":["webpack://@deriv/cfd/../../node_modules/@deriv-com/ui/dist/_commonjsHelpers-BkfeUUK-.js","webpack://@deriv/cfd/../../node_modules/@deriv-com/ui/dist/index-EY1gwl5O.js","webpack://@deriv/cfd/../../node_modules/@deriv-com/ui/dist/hooks/useDevice.js","webpack://@deriv/cfd/./src/Containers/cfd-compare-accounts/cfd-compare-accounts-title-icon.tsx","webpack://@deriv/cfd/./src/Containers/cfd-compare-accounts/cfd-compare-accounts-description.tsx","webpack://@deriv/cfd/./src/Containers/cfd-compare-accounts/instruments-icon-with-label.tsx","webpack://@deriv/cfd/./src/Containers/cfd-compare-accounts/cfd-instruments-label-highlighted.tsx","webpack://@deriv/cfd/./src/Containers/cfd-compare-accounts/cfd-compare-accounts-platform-label.tsx","webpack://@deriv/cfd/./src/Containers/cfd-compare-accounts/cfd-compare-accounts-card.tsx","webpack://@deriv/cfd/./src/Containers/cfd-compare-accounts/cfd-compare-accounts.tsx","webpack://@deriv/cfd/./src/Containers/cfd-compare-accounts/index.tsx"],"sourcesContent":["var u = typeof globalThis < \"u\" ? globalThis : typeof window < \"u\" ? window : typeof global < \"u\" ? global : typeof self < \"u\" ? self : {};\nfunction f(e) {\n  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, \"default\") ? e.default : e;\n}\nfunction l(e) {\n  if (e.__esModule) return e;\n  var r = e.default;\n  if (typeof r == \"function\") {\n    var t = function o() {\n      return this instanceof o ? Reflect.construct(r, arguments, this.constructor) : r.apply(this, arguments);\n    };\n    t.prototype = r.prototype;\n  } else t = {};\n  return Object.defineProperty(t, \"__esModule\", { value: !0 }), Object.keys(e).forEach(function(o) {\n    var n = Object.getOwnPropertyDescriptor(e, o);\n    Object.defineProperty(t, o, n.get ? n : {\n      enumerable: !0,\n      get: function() {\n        return e[o];\n      }\n    });\n  }), t;\n}\nexport {\n  l as a,\n  u as c,\n  f as g\n};\n","import { useState as d, useLayoutEffect as m, useEffect as u, useRef as l } from \"react\";\nimport { c as a } from \"./_commonjsHelpers-BkfeUUK-.js\";\nvar v = typeof a == \"object\" && a && a.Object === Object && a, E = typeof self == \"object\" && self && self.Object === Object && self;\nv || E || Function(\"return this\")();\nvar f = typeof window < \"u\" ? m : u;\nfunction L(t, s, o, i) {\n  const c = l(s);\n  f(() => {\n    c.current = s;\n  }, [s]), u(() => {\n    const n = window;\n    if (!(n && n.addEventListener))\n      return;\n    const r = (e) => {\n      c.current(e);\n    };\n    return n.addEventListener(t, r, i), () => {\n      n.removeEventListener(t, r, i);\n    };\n  }, [t, o, i]);\n}\nvar h = typeof window > \"u\";\nfunction O(t, {\n  defaultValue: s = !1,\n  initializeWithValue: o = !0\n} = {}) {\n  const i = (e) => h ? s : window.matchMedia(e).matches, [c, n] = d(() => o ? i(t) : s);\n  function r() {\n    n(i(t));\n  }\n  return f(() => {\n    const e = window.matchMedia(t);\n    return r(), e.addListener ? e.addListener(r) : e.addEventListener(\"change\", r), () => {\n      e.removeListener ? e.removeListener(r) : e.removeEventListener(\"change\", r);\n    };\n  }, [t]), c;\n}\nfunction g(t, s, o = \"mousedown\", i = {}) {\n  L(\n    o,\n    (c) => {\n      const n = c.target;\n      if (!n || !n.isConnected)\n        return;\n      (Array.isArray(t) ? t.filter((e) => !!e.current).every((e) => e.current && !e.current.contains(n)) : t.current && !t.current.contains(n)) && s(c);\n    },\n    void 0,\n    i\n  );\n}\nexport {\n  g as a,\n  O as u\n};\n","import { u as t } from \"../index-EY1gwl5O.js\";\nconst d = () => {\n  const i = t(\"(min-width: 1280px)\"), a = t(\"(max-width: 600px)\"), n = t(\n    \"(min-width: 601px) and (max-width: 1279px)\"\n  ), e = t(\n    \"(min-width: 601px) and (max-width: 1279px) and (orientation: portrait)\"\n  ), o = t(\n    \"(max-width: 1279px) and (orientation: landscape)\"\n  );\n  return {\n    /** returns Larger screen tablets [min-width: 1280px] */\n    isDesktop: i,\n    /**  returns Smaller screen tablets [max-width: 600px] */\n    isMobile: a,\n    /** returns Larger screen phones and smaller screen desktop [min-width: 601px and max-width: 1279px] */\n    isTablet: n,\n    /** returns tablet screen with portrait orientation [min-width: 601px and max-width: 1279px and orientation: portrait] */\n    isTabletPortrait: e,\n    /** returns mobile or medium screens in landscape orientation [max-width: 1279px and orientation: landscape] */\n    isMobileOrTabletLandscape: o\n  };\n};\nexport {\n  d as useDevice\n};\n","import React from 'react';\n\nimport { Popover, Text } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { useDevice } from '@deriv-com/ui';\n\nimport { TCompareAccountsCard } from 'Components/props.types';\n\nimport TradigPlatformIconProps from '../../Assets/svgs/trading-platform';\nimport { CFD_PLATFORMS, MARKET_TYPE_SHORTCODE } from '../../Helpers/cfd-config';\nimport {\n    generateMarketTypeShortcode,\n    getAccountCardTitle,\n    getAccountIcon,\n    getMarketType,\n} from '../../Helpers/compare-accounts-config';\n\nconst CFDCompareAccountsTitleIcon = ({ trading_platforms, is_eu_user, is_demo }: TCompareAccountsCard) => {\n    const { isDesktop } = useDevice();\n    const market_type = !is_eu_user ? getMarketType(trading_platforms) : 'CFDs';\n\n    const market_type_shortcode = generateMarketTypeShortcode(trading_platforms, market_type);\n\n    const jurisdiction_card_icon =\n        trading_platforms.platform === CFD_PLATFORMS.DXTRADE || trading_platforms.platform === CFD_PLATFORMS.CTRADER\n            ? getAccountIcon(trading_platforms.platform)\n            : getAccountIcon(market_type, trading_platforms.product);\n    const jurisdiction_card_title =\n        trading_platforms.platform === CFD_PLATFORMS.DXTRADE || trading_platforms.platform === CFD_PLATFORMS.CTRADER\n            ? getAccountCardTitle(trading_platforms.platform, is_demo)\n            : getAccountCardTitle(market_type_shortcode, is_demo);\n    const labuan_jurisdiction_message = (\n        <Text as='p' size={isDesktop ? 'xxs' : 'xxxs'} align='left'>\n            {localize('This account gives you direct market price access and tighter spreads.')}\n        </Text>\n    );\n\n    return (\n        <React.Fragment>\n            <div className={'compare-cfd-account-icon-title'}>\n                <TradigPlatformIconProps icon={jurisdiction_card_icon} size={48} />\n                <div className='compare-cfd-account-icon-title__separator'>\n                    <Text as='h1' weight='bold' size='xs' align='center'>\n                        {jurisdiction_card_title}\n                    </Text>\n                    {market_type_shortcode === MARKET_TYPE_SHORTCODE.FINANCIAL_LABUAN && (\n                        <Popover\n                            alignment='bottom'\n                            className='compare-cfd-account-labuan-tooltip'\n                            classNameBubble='compare-cfd-account-labuan-tooltip--msg'\n                            icon='info'\n                            disable_message_icon\n                            is_bubble_hover_enabled\n                            message={labuan_jurisdiction_message}\n                            zIndex={9999}\n                        />\n                    )}\n                </div>\n            </div>\n            <div className='compare-cfd-account-underline' />\n        </React.Fragment>\n    );\n};\n\nexport default CFDCompareAccountsTitleIcon;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Text, Popover } from '@deriv/components';\nimport { TCompareAccountsCard } from 'Components/props.types';\nimport { useStore } from '@deriv/stores';\nimport { localize } from '@deriv/translations';\nimport { getJuridisctionDescription, getMarketType } from '../../Helpers/compare-accounts-config';\nimport { REGION, CFD_PLATFORMS, MARKET_TYPE_SHORTCODE } from '../../Helpers/cfd-config';\n\nconst CFDCompareAccountsDescription = ({ trading_platforms, is_demo }: TCompareAccountsCard) => {\n    const { traders_hub } = useStore();\n    const { selected_region } = traders_hub;\n\n    const getMarketTypeShortcode = () => {\n        if (\n            trading_platforms.platform === CFD_PLATFORMS.DXTRADE ||\n            trading_platforms.platform === CFD_PLATFORMS.CTRADER\n        ) {\n            return market_type.concat('_', trading_platforms.shortcode ?? '');\n        } else if (trading_platforms.platform === CFD_PLATFORMS.MT5 && market_type === 'all') {\n            return `${market_type}_${trading_platforms.product}_${trading_platforms.shortcode}`;\n        }\n        return market_type;\n    };\n\n    const market_type = getMarketType(trading_platforms);\n    const market_type_shortcode = getMarketTypeShortcode();\n\n    const juridisction_data = getJuridisctionDescription(market_type_shortcode, trading_platforms);\n\n    const zero_spread_spread_message = localize('Commissions apply');\n\n    return (\n        <div\n            className={classNames('compare-cfd-account-text-container', {\n                'compare-cfd-account-text-container--demo': is_demo,\n            })}\n        >\n            <div className='compare-cfd-account-text-container__separator'>\n                <Text as='h1' weight='bold' size='m' align='center'>\n                    {localize('Up to')} {juridisction_data.leverage ?? ''}\n                </Text>\n                <Text as='p' size='xxxs' align='center'>\n                    {selected_region === REGION.NON_EU ? juridisction_data.leverage_description : localize('Leverage')}\n                </Text>\n            </div>\n            {selected_region === REGION.NON_EU && (\n                <div className='compare-cfd-account-text-container__separator'>\n                    <Text as='h1' weight='bold' size='m' align='center'>\n                        <div className='compare-cfd-account-spread'>\n                            {juridisction_data.spread}\n                            {market_type_shortcode === MARKET_TYPE_SHORTCODE.ALL_ZERO_SPREAD_BVI && (\n                                <Popover\n                                    alignment='top'\n                                    className='compare-cfd-account-zerospread-tooltip'\n                                    classNameBubble='compare-cfd-account-zerospread-tooltip--msg'\n                                    icon='info'\n                                    disable_message_icon\n                                    is_bubble_hover_enabled\n                                    message={zero_spread_spread_message}\n                                    zIndex={9999}\n                                />\n                            )}\n                        </div>\n                    </Text>\n                    <Text as='p' size='xxxs' align='center'>\n                        {juridisction_data.spread_description}\n                    </Text>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default CFDCompareAccountsDescription;\n","import React from 'react';\nimport { useDevice } from '@deriv-com/ui';\nimport { Text } from '@deriv/components';\nimport { TInstrumentsIcon } from 'Components/props.types';\nimport TradingInstrumentsIcon from '../../Assets/svgs/trading-instruments';\n\nconst InstrumentsIconWithLabel = ({ icon, text, highlighted, className, is_asterisk }: TInstrumentsIcon) => {\n    const { isMobile } = useDevice();\n\n    return (\n        <div\n            style={{\n                opacity: highlighted ? '' : '0.2',\n            }}\n            data-testid='dt_instruments_icon_container'\n            className={className}\n        >\n            <TradingInstrumentsIcon icon={icon} size={24} className='trading-instruments__icon' />\n            <Text\n                as='p'\n                weight={isMobile ? 'normal' : 'bolder'}\n                line_height='xs'\n                size='xxs'\n                align='left'\n                className='trading-instruments__text'\n            >\n                {text}\n                {is_asterisk && (\n                    <Text color='loss-danger' size='xxs'>\n                        *\n                    </Text>\n                )}\n            </Text>\n        </div>\n    );\n};\n\nexport default InstrumentsIconWithLabel;\n","import React from 'react';\nimport InstrumentsIconWithLabel from './instruments-icon-with-label';\nimport { TInstrumentsIcon, TCompareAccountsCard } from 'Components/props.types';\nimport { getHighlightedIconLabel } from '../../Helpers/compare-accounts-config';\nimport { useStore } from '@deriv/stores';\n\nconst CFDInstrumentsLabelHighlighted = ({ trading_platforms }: TCompareAccountsCard) => {\n    const { traders_hub } = useStore();\n    const { selected_region, is_eu_user } = traders_hub;\n\n    const iconData: TInstrumentsIcon[] = [...getHighlightedIconLabel(trading_platforms, selected_region)];\n\n    return (\n        <div className={'compare-cfd-account-outline'} data-testid='dt_compare_cfd_account_outline__container'>\n            {is_eu_user ? (\n                <React.Fragment>\n                    {iconData\n                        .filter(instrument => instrument.is_available !== false)\n                        .map(item => (\n                            <InstrumentsIconWithLabel\n                                key={item.text}\n                                {...item}\n                                className='compare-cfd-account-instrument-icon'\n                            />\n                        ))}\n                </React.Fragment>\n            ) : (\n                iconData.map(item => (\n                    <InstrumentsIconWithLabel\n                        key={item.text}\n                        {...item}\n                        className='compare-cfd-account-instrument-icon'\n                    />\n                ))\n            )}\n        </div>\n    );\n};\n\nexport default CFDInstrumentsLabelHighlighted;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Text } from '@deriv/components';\nimport { TCompareAccountsCard } from 'Components/props.types';\nimport { getPlatformLabel, getHeaderColor, platformsHeaderLabel } from '../../Helpers/compare-accounts-config';\n\nconst CFDCompareAccountsPlatformLabel = ({ trading_platforms }: TCompareAccountsCard) => {\n    const platform_label = getPlatformLabel(trading_platforms.platform);\n    const header_color = getHeaderColor(platform_label);\n\n    return (\n        <div\n            className={classNames('compare-cfd-account-platform-label', {\n                'compare-cfd-account-platform-label--other-cfds':\n                    platform_label === platformsHeaderLabel.other_cfds ||\n                    platform_label === platformsHeaderLabel.ctrader,\n                'compare-cfd-account-platform-label--derivx': platform_label === platformsHeaderLabel.derivx,\n                'compare-cfd-account-platform-label--ctrader': platform_label === platformsHeaderLabel.ctrader,\n            })}\n        >\n            <Text as='p' weight='bold' size='xxxs' align='center' color={header_color}>\n                {platform_label}\n            </Text>\n        </div>\n    );\n};\n\nexport default CFDCompareAccountsPlatformLabel;\n","import React from 'react';\nimport { Text } from '@deriv/components';\nimport { PRODUCT } from '../../Helpers/cfd-config';\nimport { Localize } from '@deriv/translations';\nimport { TCompareAccountsCard } from 'Components/props.types';\nimport CFDCompareAccountsTitleIcon from './cfd-compare-accounts-title-icon';\nimport CFDCompareAccountsDescription from './cfd-compare-accounts-description';\nimport CFDInstrumentsLabelHighlighted from './cfd-instruments-label-highlighted';\nimport CFDCompareAccountsPlatformLabel from './cfd-compare-accounts-platform-label';\n\nconst CFDCompareAccountsCard = ({ trading_platforms, is_eu_user, is_demo }: TCompareAccountsCard) => {\n    return (\n        <div className='compare-cfd-account-main-container'>\n            <div className='compare-cfd-account-card-container'>\n                <CFDCompareAccountsPlatformLabel trading_platforms={trading_platforms} />\n                {trading_platforms.product === PRODUCT.GOLD && (\n                    <Text\n                        className='compare-cfd-account-card-container__banner'\n                        weight='bold'\n                        size='xs'\n                        color='colored-background'\n                    >\n                        <Localize i18n_default_text='NEW' />\n                    </Text>\n                )}\n                <CFDCompareAccountsTitleIcon\n                    trading_platforms={trading_platforms}\n                    is_eu_user={is_eu_user}\n                    is_demo={is_demo}\n                />\n                <CFDCompareAccountsDescription trading_platforms={trading_platforms} is_demo={is_demo} />\n                <CFDInstrumentsLabelHighlighted trading_platforms={trading_platforms} is_demo={is_demo} />\n            </div>\n        </div>\n    );\n};\n\nexport default CFDCompareAccountsCard;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Text, Icon, PageOverlay, CFDCompareAccountsCarousel } from '@deriv/components';\nimport { routes } from '@deriv/shared';\nimport { Localize, localize } from '@deriv/translations';\nimport { observer, useStore } from '@deriv/stores';\nimport { useDevice } from '@deriv-com/ui';\nimport { useIsRtl } from '@deriv/hooks';\nimport CFDCompareAccountsCard from './cfd-compare-accounts-card';\nimport {\n    getSortedCFDAvailableAccounts,\n    getEUAvailableAccounts,\n    getMT5DemoData,\n    getDxtradeDemoData,\n    getCtraderDemoData,\n    dxtrade_data,\n    ctrader_data,\n} from '../../Helpers/compare-accounts-config';\n\nconst CompareCFDs = observer(() => {\n    const { isDesktop } = useDevice();\n    const is_rtl = useIsRtl();\n    const history = useHistory();\n    const store = useStore();\n    const { client, traders_hub } = store;\n    const { trading_platform_available_accounts } = client;\n    const { is_demo, is_eu_user, available_dxtrade_accounts, available_ctrader_accounts } = traders_hub;\n\n    const sorted_available_accounts = !is_eu_user\n        ? getSortedCFDAvailableAccounts(trading_platform_available_accounts)\n        : getEUAvailableAccounts(trading_platform_available_accounts);\n\n    // Check if dxtrade data is available\n    const has_dxtrade_account_available = available_dxtrade_accounts.length > 0;\n\n    const has_ctrader_account_available = available_ctrader_accounts.length > 0;\n\n    const sorted_cfd_available_eu_accounts =\n        is_eu_user && sorted_available_accounts.length ? [...sorted_available_accounts] : [];\n\n    // Getting real accounts data\n    const all_real_sorted_cfd_available_accounts = !is_eu_user\n        ? [...sorted_available_accounts]\n        : [...sorted_cfd_available_eu_accounts];\n\n    // Getting demo accounts data\n    const demo_cfd_available_accounts = [\n        ...getMT5DemoData(all_real_sorted_cfd_available_accounts),\n        ...getDxtradeDemoData(all_real_sorted_cfd_available_accounts),\n        ...getCtraderDemoData(all_real_sorted_cfd_available_accounts),\n    ];\n\n    const all_cfd_available_accounts =\n        is_demo && demo_cfd_available_accounts.length > 0\n            ? demo_cfd_available_accounts\n            : all_real_sorted_cfd_available_accounts;\n\n    // Calculate the card count for alignment of card in center\n    const card_count =\n        has_dxtrade_account_available || has_ctrader_account_available\n            ? all_cfd_available_accounts.length + 1\n            : all_cfd_available_accounts.length;\n\n    const getCompareAccountsHeader = () => (\n        <Localize\n            i18n_default_text='Compare CFDs {{title}} accounts'\n            values={{ title: is_demo ? localize('demo') : '' }}\n        />\n    );\n\n    const DesktopHeader = (\n        <div className='compare-cfd-header'>\n            <div\n                className='compare-cfd-header-navigation'\n                onClick={() => {\n                    history.push(routes.traders_hub);\n                }}\n            >\n                <Icon icon='IcArrowLeftBold' />\n                <Text size='xs' weight='bold' color='prominent'>\n                    <Localize i18n_default_text=\"Trader's hub\" />\n                </Text>\n            </div>\n            <h1 className='compare-cfd-header-title'>\n                <Text size='m' weight='bold' color='prominent' align='center'>\n                    {getCompareAccountsHeader()}\n                </Text>\n            </h1>\n        </div>\n    );\n\n    if (isDesktop)\n        return (\n            <div className='compare-cfd-account'>\n                <PageOverlay header={DesktopHeader} is_from_app={routes.traders_hub} />\n                <div\n                    className={classNames('compare-cfd-account-container', {\n                        'compare-cfd-account-container__card-count': card_count < 4,\n                    })}\n                >\n                    <div className='card-list'>\n                        <CFDCompareAccountsCarousel isRtl={is_rtl}>\n                            {all_cfd_available_accounts.map(item => (\n                                <CFDCompareAccountsCard\n                                    trading_platforms={item}\n                                    key={item.market_type + item.shortcode + (item?.product || '')}\n                                    is_eu_user={is_eu_user}\n                                    is_demo={is_demo}\n                                />\n                            ))}\n                            {/* Renders cTrader data */}\n                            {all_cfd_available_accounts.length > 0 && has_ctrader_account_available && (\n                                <CFDCompareAccountsCard\n                                    trading_platforms={ctrader_data}\n                                    is_eu_user={is_eu_user}\n                                    is_demo={is_demo}\n                                />\n                            )}\n                            {/* Renders Deriv X data */}\n                            {all_cfd_available_accounts.length > 0 && has_dxtrade_account_available && (\n                                <CFDCompareAccountsCard\n                                    trading_platforms={dxtrade_data}\n                                    is_eu_user={is_eu_user}\n                                    is_demo={is_demo}\n                                />\n                            )}\n                        </CFDCompareAccountsCarousel>\n                    </div>\n                </div>\n            </div>\n        );\n\n    return (\n        <PageOverlay\n            header={getCompareAccountsHeader()}\n            header_classname='compare-cfd-header-title'\n            is_from_app={!routes.traders_hub}\n            onClickClose={() => history.push(routes.traders_hub)}\n        >\n            <div\n                className={classNames('compare-cfd-account-container', {\n                    'compare-cfd-account-container__card-count--mobile': card_count < 2,\n                })}\n            >\n                <CFDCompareAccountsCarousel isRtl={is_rtl}>\n                    {all_cfd_available_accounts.map(item => (\n                        <CFDCompareAccountsCard\n                            trading_platforms={item}\n                            key={item.market_type + item.shortcode}\n                            is_eu_user={is_eu_user}\n                            is_demo={is_demo}\n                        />\n                    ))}\n                    {/* Renders cTrader data */}\n                    {all_cfd_available_accounts.length > 0 && has_ctrader_account_available && (\n                        <CFDCompareAccountsCard\n                            trading_platforms={ctrader_data}\n                            is_eu_user={is_eu_user}\n                            is_demo={is_demo}\n                        />\n                    )}\n                    {/* Renders Deriv X data */}\n                    {all_cfd_available_accounts.length > 0 && has_dxtrade_account_available && (\n                        <CFDCompareAccountsCard\n                            trading_platforms={dxtrade_data}\n                            is_eu_user={is_eu_user}\n                            is_demo={is_demo}\n                        />\n                    )}\n                </CFDCompareAccountsCarousel>\n            </div>\n        </PageOverlay>\n    );\n});\n\nexport default CompareCFDs;\n","import CFDCompareAccounts from './cfd-compare-accounts';\nimport './cfd-compare-accounts.scss';\n\nexport default CFDCompareAccounts;\n"],"names":["globalThis","window","global","self","v","Object","E","Function","h","O","t","defaultValue","s","initializeWithValue","o","i","e","matchMedia","matches","c","n","r","addListener","addEventListener","removeListener","removeEventListener","d","isDesktop","isMobile","isTablet","isTabletPortrait","isMobileOrTabletLandscape","_ref","trading_platforms","is_eu_user","is_demo","useDevice","market_type","getMarketType","market_type_shortcode","generateMarketTypeShortcode","jurisdiction_card_icon","platform","CFD_PLATFORMS","DXTRADE","CTRADER","getAccountIcon","product","jurisdiction_card_title","getAccountCardTitle","labuan_jurisdiction_message","React","Text","as","size","align","localize","className","TradigPlatformIconProps","icon","weight","MARKET_TYPE_SHORTCODE","FINANCIAL_LABUAN","Popover","alignment","classNameBubble","disable_message_icon","is_bubble_hover_enabled","message","zIndex","_juridisction_data$le","_trading_platforms$sh","selected_region","useStore","traders_hub","concat","shortcode","MT5","juridisction_data","getJuridisctionDescription","zero_spread_spread_message","classNames","leverage","REGION","NON_EU","leverage_description","spread","ALL_ZERO_SPREAD_BVI","spread_description","text","highlighted","is_asterisk","style","opacity","TradingInstrumentsIcon","line_height","color","iconData","_toConsumableArray","getHighlightedIconLabel","filter","instrument","is_available","map","item","InstrumentsIconWithLabel","_extends","key","platform_label","getPlatformLabel","header_color","getHeaderColor","platformsHeaderLabel","other_cfds","ctrader","derivx","CFDCompareAccountsPlatformLabel","PRODUCT","GOLD","Localize","i18n_default_text","CFDCompareAccountsTitleIcon","CFDCompareAccountsDescription","CFDInstrumentsLabelHighlighted","observer","is_rtl","useIsRtl","history","useHistory","store","client","trading_platform_available_accounts","available_dxtrade_accounts","available_ctrader_accounts","sorted_available_accounts","getEUAvailableAccounts","getSortedCFDAvailableAccounts","has_dxtrade_account_available","length","has_ctrader_account_available","sorted_cfd_available_eu_accounts","all_real_sorted_cfd_available_accounts","demo_cfd_available_accounts","getMT5DemoData","getDxtradeDemoData","getCtraderDemoData","all_cfd_available_accounts","card_count","getCompareAccountsHeader","values","title","DesktopHeader","onClick","push","routes","Icon","PageOverlay","header","is_from_app","CFDCompareAccountsCarousel","isRtl","CFDCompareAccountsCard","ctrader_data","dxtrade_data","header_classname","onClickClose"],"sourceRoot":""}