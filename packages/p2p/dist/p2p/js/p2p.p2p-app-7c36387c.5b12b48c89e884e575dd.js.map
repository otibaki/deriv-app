{"version":3,"file":"p2p/js/p2p.p2p-app-7c36387c.5b12b48c89e884e575dd.js","mappings":"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","sources":["webpack://@deriv/p2p/./src/pages/advertiser-page/advertiser-page-adverts.scss","webpack://@deriv/p2p/./src/pages/advertiser-page/advertiser-page-dropdown-menu.scss","webpack://@deriv/p2p/./src/pages/advertiser-page/advertiser-page-row.scss","webpack://@deriv/p2p/./src/pages/advertiser-page/advertiser-page-stats.scss","webpack://@deriv/p2p/./src/pages/advertiser-page/advertiser-page.scss","webpack://@deriv/p2p/./src/pages/advertiser-page/block-user/block-user-count.scss","webpack://@deriv/p2p/./src/pages/advertiser-page/block-user/block-user-overlay/block-user-overlay.scss","webpack://@deriv/p2p/./src/pages/app.scss","webpack://@deriv/p2p/./src/pages/buy-sell/buy-sell-header.scss","webpack://@deriv/p2p/./src/pages/buy-sell/buy-sell-row.scss","webpack://@deriv/p2p/./src/pages/buy-sell/buy-sell-table.scss","webpack://@deriv/p2p/./src/pages/buy-sell/buy-sell.scss","webpack://@deriv/p2p/./src/pages/buy-sell/currency-dropdown.scss","webpack://@deriv/p2p/./src/pages/buy-sell/currency-selector/currency-selector.scss","webpack://@deriv/p2p/./src/pages/buy-sell/no-ads/no-ads.scss","webpack://@deriv/p2p/./src/pages/buy-sell/sort-dropdown.scss","webpack://@deriv/p2p/./src/pages/my-ads/ad-conditions-section/ad-conditions-section.scss","webpack://@deriv/p2p/./src/pages/my-ads/ad-form-controller/ad-form-controller.scss","webpack://@deriv/p2p/./src/pages/my-ads/ad-payment-details-section/ad-payment-details-section.scss","webpack://@deriv/p2p/./src/pages/my-ads/ad-status.scss","webpack://@deriv/p2p/./src/pages/my-ads/ad-type-section/ad-type-section.scss","webpack://@deriv/p2p/./src/pages/my-ads/ad-type.scss","webpack://@deriv/p2p/./src/pages/my-ads/ad-wizard/ad-wizard.scss","webpack://@deriv/p2p/./src/pages/my-ads/buy-ad-payment-methods-list.scss","webpack://@deriv/p2p/./src/pages/my-ads/copy-advert-form/copy-advert-form.scss","webpack://@deriv/p2p/./src/pages/my-ads/create-ad-form.scss","webpack://@deriv/p2p/./src/pages/my-ads/create-ad-summary.scss","webpack://@deriv/p2p/./src/pages/my-ads/edit-ad-form.scss","webpack://@deriv/p2p/./src/pages/my-ads/my-ads-table.scss","webpack://@deriv/p2p/./src/pages/my-ads/my-ads.scss","webpack://@deriv/p2p/./src/pages/my-ads/order-time-selection/order-time-selection.scss","webpack://@deriv/p2p/./src/pages/my-ads/preferred-countries-selector/preferred-countries-selector.scss","webpack://@deriv/p2p/./src/pages/my-ads/sell-ad-payment-methods-list.scss","webpack://@deriv/p2p/./src/pages/my-ads/toggle-ads.scss","webpack://@deriv/p2p/./src/pages/my-profile/block-user/block-user-dropdown/block-user-dropdown.scss","webpack://@deriv/p2p/./src/pages/my-profile/block-user/block-user-empty/block-user-empty.scss","webpack://@deriv/p2p/./src/pages/my-profile/block-user/block-user-list/block-user-list.scss","webpack://@deriv/p2p/./src/pages/my-profile/block-user/block-user-table/block-user-row/block-user-row.scss","webpack://@deriv/p2p/./src/pages/my-profile/block-user/block-user-table/block-user-table-error/block-user-table-error.scss","webpack://@deriv/p2p/./src/pages/my-profile/block-user/block-user-table/block-user-table.scss","webpack://@deriv/p2p/./src/pages/my-profile/block-user/block-user.scss","webpack://@deriv/p2p/./src/pages/my-profile/my-profile-form/my-profile-form.scss","webpack://@deriv/p2p/./src/pages/my-profile/my-profile-header/my-profile-header.scss","webpack://@deriv/p2p/./src/pages/my-profile/my-profile-stats/my-profile-balance/my-profile-balance.scss","webpack://@deriv/p2p/./src/pages/my-profile/my-profile-stats/my-profile-details-container/my-profile-details-container.scss","webpack://@deriv/p2p/./src/pages/my-profile/my-profile-stats/my-profile-details-table/my-profile-details-table.scss","webpack://@deriv/p2p/./src/pages/my-profile/my-profile-stats/my-profile-name/my-profile-name.scss","webpack://@deriv/p2p/./src/pages/my-profile/my-profile-stats/my-profile-privacy/my-profile-privacy.scss","webpack://@deriv/p2p/./src/pages/my-profile/my-profile-stats/my-profile-stats-table/my-profile-stats-table.scss","webpack://@deriv/p2p/./src/pages/my-profile/my-profile-stats/my-profile-stats.scss","webpack://@deriv/p2p/./src/pages/my-profile/my-profile.scss","webpack://@deriv/p2p/./src/pages/my-profile/payment-methods/edit-payment-method-form/edit-payment-method-form.scss","webpack://@deriv/p2p/./src/pages/my-profile/payment-methods/payment-methods-empty/payment-methods-empty.scss","webpack://@deriv/p2p/./src/pages/my-profile/payment-methods/payment-methods-list/payment-methods-list.scss","webpack://@deriv/p2p/./src/pages/orders/chat/chat-footer.scss","webpack://@deriv/p2p/./src/pages/orders/chat/chat-header.scss","webpack://@deriv/p2p/./src/pages/orders/chat/chat-message-receipt.scss","webpack://@deriv/p2p/./src/pages/orders/chat/chat-message-text.scss","webpack://@deriv/p2p/./src/pages/orders/chat/chat-messages.scss","webpack://@deriv/p2p/./src/pages/orders/chat/chat.scss","webpack://@deriv/p2p/./src/pages/orders/order-table/order-table-header.scss","webpack://@deriv/p2p/./src/pages/orders/order-table/order-table-row.scss","webpack://@deriv/p2p/./src/pages/orders/order-table/order-table.scss","webpack://@deriv/p2p/./src/pages/orders/orders.scss","webpack://@deriv/p2p/./src/pages/advertiser-page/advertiser-page-adverts.scss?cf09","webpack://@deriv/p2p/./src/pages/advertiser-page/advertiser-page-dropdown-menu.scss?54f4","webpack://@deriv/p2p/./src/pages/advertiser-page/advertiser-page-row.scss?b6db","webpack://@deriv/p2p/./src/pages/advertiser-page/advertiser-page-stats.scss?86c0","webpack://@deriv/p2p/./src/pages/advertiser-page/advertiser-page.scss?08a8","webpack://@deriv/p2p/./src/pages/advertiser-page/block-user/block-user-count.scss?b26e","webpack://@deriv/p2p/./src/pages/advertiser-page/block-user/block-user-overlay/block-user-overlay.scss?bcd1","webpack://@deriv/p2p/./src/pages/app.scss?7e81","webpack://@deriv/p2p/./src/pages/buy-sell/buy-sell-header.scss?3af8","webpack://@deriv/p2p/./src/pages/buy-sell/buy-sell-row.scss?262e","webpack://@deriv/p2p/./src/pages/buy-sell/buy-sell-table.scss?f625","webpack://@deriv/p2p/./src/pages/buy-sell/buy-sell.scss?0349","webpack://@deriv/p2p/./src/pages/buy-sell/currency-dropdown.scss?3386","webpack://@deriv/p2p/./src/pages/buy-sell/currency-selector/currency-selector.scss?a927","webpack://@deriv/p2p/./src/pages/buy-sell/no-ads/no-ads.scss?fa6e","webpack://@deriv/p2p/./src/pages/buy-sell/sort-dropdown.scss?0f10","webpack://@deriv/p2p/./src/pages/my-ads/ad-conditions-section/ad-conditions-section.scss?0fcd","webpack://@deriv/p2p/./src/pages/my-ads/ad-form-controller/ad-form-controller.scss?28ff","webpack://@deriv/p2p/./src/pages/my-ads/ad-payment-details-section/ad-payment-details-section.scss?ec33","webpack://@deriv/p2p/./src/pages/my-ads/ad-status.scss?fdd1","webpack://@deriv/p2p/./src/pages/my-ads/ad-type-section/ad-type-section.scss?38c9","webpack://@deriv/p2p/./src/pages/my-ads/ad-type.scss?4979","webpack://@deriv/p2p/./src/pages/my-ads/ad-wizard/ad-wizard.scss?dd10","webpack://@deriv/p2p/./src/pages/my-ads/buy-ad-payment-methods-list.scss?289e","webpack://@deriv/p2p/./src/pages/my-ads/copy-advert-form/copy-advert-form.scss?c246","webpack://@deriv/p2p/./src/pages/my-ads/create-ad-form.scss?da72","webpack://@deriv/p2p/./src/pages/my-ads/create-ad-summary.scss?789e","webpack://@deriv/p2p/./src/pages/my-ads/edit-ad-form.scss?ba79","webpack://@deriv/p2p/./src/pages/my-ads/my-ads-table.scss?3ea4","webpack://@deriv/p2p/./src/pages/my-ads/my-ads.scss?3506","webpack://@deriv/p2p/./src/pages/my-ads/order-time-selection/order-time-selection.scss?e6ab","webpack://@deriv/p2p/./src/pages/my-ads/preferred-countries-selector/preferred-countries-selector.scss?caf8","webpack://@deriv/p2p/./src/pages/my-ads/sell-ad-payment-methods-list.scss?4197","webpack://@deriv/p2p/./src/pages/my-ads/toggle-ads.scss?12d7","webpack://@deriv/p2p/./src/pages/my-profile/block-user/block-user-dropdown/block-user-dropdown.scss?668e","webpack://@deriv/p2p/./src/pages/my-profile/block-user/block-user-empty/block-user-empty.scss?ba44","webpack://@deriv/p2p/./src/pages/my-profile/block-user/block-user-list/block-user-list.scss?0ca7","webpack://@deriv/p2p/./src/pages/my-profile/block-user/block-user-table/block-user-row/block-user-row.scss?8b11","webpack://@deriv/p2p/./src/pages/my-profile/block-user/block-user-table/block-user-table-error/block-user-table-error.scss?1e40","webpack://@deriv/p2p/./src/pages/my-profile/block-user/block-user-table/block-user-table.scss?df62","webpack://@deriv/p2p/./src/pages/my-profile/block-user/block-user.scss?185c","webpack://@deriv/p2p/./src/pages/my-profile/my-profile-form/my-profile-form.scss?d116","webpack://@deriv/p2p/./src/pages/my-profile/my-profile-header/my-profile-header.scss?8b78","webpack://@deriv/p2p/./src/pages/my-profile/my-profile-stats/my-profile-balance/my-profile-balance.scss?539c","webpack://@deriv/p2p/./src/pages/my-profile/my-profile-stats/my-profile-details-container/my-profile-details-container.scss?79d5","webpack://@deriv/p2p/./src/pages/my-profile/my-profile-stats/my-profile-details-table/my-profile-details-table.scss?dc7b","webpack://@deriv/p2p/./src/pages/my-profile/my-profile-stats/my-profile-name/my-profile-name.scss?ca40","webpack://@deriv/p2p/./src/pages/my-profile/my-profile-stats/my-profile-privacy/my-profile-privacy.scss?4bb6","webpack://@deriv/p2p/./src/pages/my-profile/my-profile-stats/my-profile-stats-table/my-profile-stats-table.scss?4588","webpack://@deriv/p2p/./src/pages/my-profile/my-profile-stats/my-profile-stats.scss?968b","webpack://@deriv/p2p/./src/pages/my-profile/my-profile.scss?59a6","webpack://@deriv/p2p/./src/pages/my-profile/payment-methods/edit-payment-method-form/edit-payment-method-form.scss?0f18","webpack://@deriv/p2p/./src/pages/my-profile/payment-methods/payment-methods-empty/payment-methods-empty.scss?e6cc","webpack://@deriv/p2p/./src/pages/my-profile/payment-methods/payment-methods-list/payment-methods-list.scss?e1fd","webpack://@deriv/p2p/./src/pages/orders/chat/chat-footer.scss?c155","webpack://@deriv/p2p/./src/pages/orders/chat/chat-header.scss?972b","webpack://@deriv/p2p/./src/pages/orders/chat/chat-message-receipt.scss?ee7c","webpack://@deriv/p2p/./src/pages/orders/chat/chat-message-text.scss?a4aa","webpack://@deriv/p2p/./src/pages/orders/chat/chat-messages.scss?be69","webpack://@deriv/p2p/./src/pages/orders/chat/chat.scss?bc85","webpack://@deriv/p2p/./src/pages/orders/order-table/order-table-header.scss?7630","webpack://@deriv/p2p/./src/pages/orders/order-table/order-table-row.scss?07a2","webpack://@deriv/p2p/./src/pages/orders/order-table/order-table.scss?d56b","webpack://@deriv/p2p/./src/pages/orders/orders.scss?3a93","webpack://@deriv/p2p/./src/hooks/use-p2p-advertiser-adverts.ts","webpack://@deriv/p2p/./src/hooks/use-p2p-rendered-adverts.ts","webpack://@deriv/p2p/./src/pages/advertiser-page/advertiser-page-row.jsx","webpack://@deriv/p2p/./src/pages/advertiser-page/advertiser-page-adverts.jsx","webpack://@deriv/p2p/./src/pages/advertiser-page/advertiser-page-dropdown-menu.jsx","webpack://@deriv/p2p/./src/pages/advertiser-page/advertiser-page-stats.jsx","webpack://@deriv/p2p/./src/pages/advertiser-page/block-user/block-user-overlay/block-user-overlay.jsx","webpack://@deriv/p2p/./src/pages/advertiser-page/block-user/block-user-overlay/index.js","webpack://@deriv/p2p/./src/pages/advertiser-page/advertiser-page.jsx","webpack://@deriv/p2p/./src/pages/advertiser-page/index.js","webpack://@deriv/p2p/./src/pages/app.jsx","webpack://@deriv/p2p/./src/pages/buy-sell/buy-sell-row-action.tsx","webpack://@deriv/p2p/./src/pages/buy-sell/currency-selector/currency-selector.jsx","webpack://@deriv/p2p/./src/pages/buy-sell/sort-dropdown.jsx","webpack://@deriv/p2p/./src/pages/buy-sell/currency-dropdown.jsx","webpack://@deriv/p2p/./src/pages/buy-sell/buy-sell-header.jsx","webpack://@deriv/p2p/./src/pages/buy-sell/buy-sell-row.jsx","webpack://@deriv/p2p/./src/pages/buy-sell/buy-sell-table.jsx","webpack://@deriv/p2p/./src/pages/buy-sell/buy-sell.jsx","webpack://@deriv/p2p/./src/pages/buy-sell/index.js","webpack://@deriv/p2p/./src/pages/buy-sell/no-ads/no-ads.jsx","webpack://@deriv/p2p/./src/pages/buy-sell/no-ads/index.js","webpack://@deriv/p2p/./src/pages/my-ads/buy-ad-payment-methods-list.jsx","webpack://@deriv/p2p/./src/pages/my-ads/copy-advert-form/copy-advert-from-trailing-icon.tsx","webpack://@deriv/p2p/./src/pages/my-ads/copy-advert-form/copy-advert-form.tsx","webpack://@deriv/p2p/./src/pages/my-ads/copy-advert-form/index.ts","webpack://@deriv/p2p/./src/pages/my-ads/ad-form-controller/ad-form-controller.tsx","webpack://@deriv/p2p/./src/pages/my-ads/ad-form-controller/index.ts","webpack://@deriv/p2p/./src/pages/my-ads/preferred-countries-selector/preferred-countries-selector.tsx","webpack://@deriv/p2p/./src/pages/my-ads/preferred-countries-selector/index.ts","webpack://@deriv/p2p/./src/pages/my-ads/create-ad-summary.jsx","webpack://@deriv/p2p/./src/pages/my-ads/ad-conditions-section/ad-conditions-section.tsx","webpack://@deriv/p2p/./src/pages/my-ads/ad-conditions-section/index.ts","webpack://@deriv/p2p/./src/pages/my-ads/create-ad-form-payment-methods.jsx","webpack://@deriv/p2p/./src/pages/my-ads/ad-payment-details-section/ad-payment-details-section.tsx","webpack://@deriv/p2p/./src/pages/my-ads/ad-payment-details-section/index.ts","webpack://@deriv/p2p/./src/pages/my-ads/ad-progress-bar/ad-progress-bar.tsx","webpack://@deriv/p2p/./src/pages/my-ads/ad-progress-bar/index.ts","webpack://@deriv/p2p/./src/pages/my-ads/ad-type-section/ad-type-section-trailing-icon.tsx","webpack://@deriv/p2p/./src/pages/my-ads/ad-type-section/ad-type-section.tsx","webpack://@deriv/p2p/./src/pages/my-ads/ad-type-section/index.ts","webpack://@deriv/p2p/./src/pages/my-ads/ad-wizard/ad-wizard.tsx","webpack://@deriv/p2p/./src/pages/my-ads/ad-wizard/index.ts","webpack://@deriv/p2p/./src/pages/my-ads/create-ad-form.jsx","webpack://@deriv/p2p/./src/pages/my-ads/create-ad.jsx","webpack://@deriv/p2p/./src/pages/my-ads/edit-ad-form.jsx","webpack://@deriv/p2p/./src/pages/my-ads/edit-ad.jsx","webpack://@deriv/p2p/./src/pages/my-ads/toggle-ads.jsx","webpack://@deriv/p2p/./src/pages/my-ads/ad-status.jsx","webpack://@deriv/p2p/./src/pages/my-ads/ad-type.jsx","webpack://@deriv/p2p/./src/pages/my-ads/my-ads-row-renderer.jsx","webpack://@deriv/p2p/./src/pages/my-ads/my-ads-table.jsx","webpack://@deriv/p2p/./src/pages/my-ads/my-ads.jsx","webpack://@deriv/p2p/./src/pages/my-ads/index.js","webpack://@deriv/p2p/./src/pages/my-ads/order-time-selection/order-time-selection.tsx","webpack://@deriv/p2p/./src/pages/my-ads/order-time-selection/index.ts","webpack://@deriv/p2p/./src/pages/my-ads/sell-ad-payment-methods-list.jsx","webpack://@deriv/p2p/./src/pages/my-profile/block-user/block-user-dropdown/block-user-dropdown.tsx","webpack://@deriv/p2p/./src/pages/my-profile/block-user/block-user-dropdown/index.ts","webpack://@deriv/p2p/./src/pages/my-profile/block-user/block-user-empty/block-user-empty.tsx","webpack://@deriv/p2p/./src/pages/my-profile/block-user/block-user-empty/index.ts","webpack://@deriv/p2p/./src/pages/my-profile/block-user/block-user-table/block-user-row/block-user-row.tsx","webpack://@deriv/p2p/./src/pages/my-profile/block-user/block-user-table/block-user-row/index.ts","webpack://@deriv/p2p/./src/pages/my-profile/block-user/block-user-table/block-user-table.tsx","webpack://@deriv/p2p/./src/pages/my-profile/block-user/block-user-table/index.ts","webpack://@deriv/p2p/./src/pages/my-profile/block-user/block-user-table/block-user-table-error/block-user-table-error.tsx","webpack://@deriv/p2p/./src/pages/my-profile/block-user/block-user-table/block-user-table-error/index.ts","webpack://@deriv/p2p/./src/pages/my-profile/block-user/block-user-list/block-user-list.tsx","webpack://@deriv/p2p/./src/pages/my-profile/block-user/block-user-list/index.ts","webpack://@deriv/p2p/./src/pages/my-profile/block-user/block-user.tsx","webpack://@deriv/p2p/./src/pages/my-profile/block-user/index.ts","webpack://@deriv/p2p/./src/pages/my-profile/my-profile-form/my-profile-form.tsx","webpack://@deriv/p2p/./src/pages/my-profile/my-profile-form/index.ts","webpack://@deriv/p2p/./src/pages/my-profile/my-profile-stats/my-profile-stats-table/my-profile-stats-table.tsx","webpack://@deriv/p2p/./src/pages/my-profile/my-profile-stats/my-profile-stats-table/index.ts","webpack://@deriv/p2p/./src/pages/my-profile/my-profile-stats/my-profile-privacy/my-profile-privacy.tsx","webpack://@deriv/p2p/./src/pages/my-profile/my-profile-stats/my-profile-privacy/index.ts","webpack://@deriv/p2p/./src/pages/my-profile/my-profile-stats/my-profile-stats.tsx","webpack://@deriv/p2p/./src/pages/my-profile/my-profile-stats/index.ts","webpack://@deriv/p2p/./src/pages/my-profile/payment-methods/edit-payment-method-form/edit-payment-method-form.tsx","webpack://@deriv/p2p/./src/pages/my-profile/payment-methods/edit-payment-method-form/index.ts","webpack://@deriv/p2p/./src/pages/my-profile/payment-methods/payment-methods-empty/payment-methods-empty.tsx","webpack://@deriv/p2p/./src/pages/my-profile/payment-methods/payment-methods-empty/index.ts","webpack://@deriv/p2p/./src/pages/my-profile/payment-methods/payment-methods-list/payment-methods-list.tsx","webpack://@deriv/p2p/./src/pages/my-profile/payment-methods/payment-methods-list/index.ts","webpack://@deriv/p2p/./src/pages/my-profile/payment-methods/payment-methods.tsx","webpack://@deriv/p2p/./src/pages/my-profile/payment-methods/index.ts","webpack://@deriv/p2p/./src/pages/my-profile/my-profile-content/my-profile-content.tsx","webpack://@deriv/p2p/./src/pages/my-profile/my-profile-content/index.ts","webpack://@deriv/p2p/./src/pages/my-profile/my-profile-stats/my-profile-balance/my-profile-balance.tsx","webpack://@deriv/p2p/./src/pages/my-profile/my-profile-stats/my-profile-balance/index.ts","webpack://@deriv/p2p/./src/pages/my-profile/my-profile-stats/my-profile-details-table/my-profile-details-table.tsx","webpack://@deriv/p2p/./src/pages/my-profile/my-profile-stats/my-profile-details-table/index.ts","webpack://@deriv/p2p/./src/pages/advertiser-page/block-user/block-user-count.jsx","webpack://@deriv/p2p/./src/pages/my-profile/my-profile-stats/my-profile-name/my-profile-name.tsx","webpack://@deriv/p2p/./src/pages/my-profile/my-profile-stats/my-profile-name/index.ts","webpack://@deriv/p2p/./src/pages/my-profile/my-profile-stats/my-profile-details-container/my-profile-details-container.tsx","webpack://@deriv/p2p/./src/pages/my-profile/my-profile-stats/my-profile-details-container/index.ts","webpack://@deriv/p2p/./src/pages/my-profile/my-profile-header/my-profile-header.tsx","webpack://@deriv/p2p/./src/pages/my-profile/my-profile-header/index.ts","webpack://@deriv/p2p/./src/pages/my-profile/my-profile.tsx","webpack://@deriv/p2p/./src/pages/my-profile/index.ts","webpack://@deriv/p2p/./src/pages/orders/chat/chat-header.jsx","webpack://@deriv/p2p/./src/pages/orders/chat/chat-message-receipt.jsx","webpack://@deriv/p2p/./src/pages/orders/chat/chat-message-text.jsx","webpack://@deriv/p2p/./src/pages/orders/chat/chat-messages.jsx","webpack://@deriv/p2p/./src/pages/orders/chat/chat-footer-icon.jsx","webpack://@deriv/p2p/./src/pages/orders/chat/chat-footer.jsx","webpack://@deriv/p2p/./src/pages/orders/chat/chat-wrapper.jsx","webpack://@deriv/p2p/./src/pages/orders/chat/chat.jsx","webpack://@deriv/p2p/./src/pages/orders/order-table/order-table-row.jsx","webpack://@deriv/p2p/./src/pages/orders/order-table/order-table-header.jsx","webpack://@deriv/p2p/./src/pages/orders/order-table/order-table-content.jsx","webpack://@deriv/p2p/./src/pages/orders/order-table/order-table.jsx","webpack://@deriv/p2p/./src/pages/orders/orders.jsx","webpack://@deriv/p2p/./src/pages/orders/index.js"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".advertiser-page{flex:1;display:flex;flex-direction:column}@media(min-width: 601px)and (max-width: 1279px){.advertiser-page{max-width:60rem}}@media(max-width: 1279px){.advertiser-page{overflow-y:auto}}.advertiser-page__page-return-header{position:relative}.advertiser-page--no-scroll{overflow:hidden}.advertiser-page__header{display:flex;flex-direction:column;height:-moz-fit-content;height:fit-content;justify-content:space-between}@media(max-width: 1279px){.advertiser-page__header{padding-top:1.6rem;width:100vw}}.advertiser-page__header-details{display:flex}@media(max-width: 1279px){.advertiser-page__header-details{display:inline-grid;grid-template-columns:auto auto;margin:0 0 3rem}.advertiser-page__header-details .dp2p-avatar{align-self:center}}@media(max-width: 1279px)and (max-width: 1279px){.advertiser-page__header-details .dp2p-avatar{align-self:flex-start;margin-top:.6rem;margin-right:.7rem}}.advertiser-page__header-name{display:flex;flex-direction:row;flex-wrap:wrap;height:-moz-fit-content;height:fit-content;width:-moz-fit-content;width:fit-content}.advertiser-page__header-name>span{padding-right:.8rem}.advertiser-page__header-name--column{display:flex;flex-direction:column;padding-left:.8rem}.advertiser-page__header-real-name{margin:.4rem 0;max-width:500px}.advertiser-page__header-verification{align-items:center;display:flex}@media(max-width: 1279px){.advertiser-page__header-verification{display:grid;position:absolute;right:1.6rem}}.advertiser-page__header-verification-icon{margin-left:.4rem;vertical-align:sub}@media(max-width: 1279px){.advertiser-page__header-verification-icon{vertical-align:text-top}}.advertiser-page__header-verification-id{justify-self:flex-end}.advertiser-page__header-verification-status{margin-left:1.6rem}.advertiser-page__horizontal-scroll{overflow-x:auto}.advertiser-page__italic{font-style:italic}@media(max-width: 1279px){.advertiser-page__modal{max-width:100vw}}.advertiser-page__rating{display:flex;flex-direction:row;padding-bottom:.7rem}@media(max-width: 1279px){.advertiser-page__rating{padding-top:.7rem}}.advertiser-page__rating--row{align-items:center;border-left:1px solid var(--general-section-1);display:flex;gap:.7rem;padding:0 .8rem}.advertiser-page__rating--row:first-child{padding-left:0;padding-left:initial;border-left:0;border-left:initial}.advertiser-page__rating--star{pointer-events:none}.advertiser-page__rating--star>svg{margin-right:.1rem}.advertiser-page__rating--text{display:flex;gap:.8rem;margin-left:.4rem}.advertiser-page__row{display:flex;flex-direction:row}.advertiser-page__joined-since{margin-bottom:.35rem;margin-top:.35rem}@media(max-width: 1279px){.advertiser-page__cell{display:block}}.advertiser-page__cell-limit{padding-top:.8rem}.advertiser-page__popover-icon{margin:1.6rem .8rem 1.6rem 2.4rem}@media(max-width: 1279px){.advertiser-page__popover-icon{margin:1.6rem 1rem}}.advertiser-page__payment-methods-list{display:flex;flex-direction:row;flex-wrap:wrap}.advertiser-page__payment-method{display:flex;flex-wrap:wrap;align-items:center;border:1px solid var(--border-normal);border-radius:.4rem;flex-direction:row;padding:0 .8rem;margin:.25rem;width:-moz-fit-content;width:fit-content}@media(max-width: 1279px){.advertiser-page__payment-method{padding:.4rem}}@media(max-width: 1279px){.advertiser-page .dc-tabs__content{position:fixed;top:140px}.advertiser-page .dc-tabs__content .page-return{margin:1.2rem !important}}.advertiser-page__data-list{flex:1}@media(max-height: 580px){.advertiser-page__data-list{height:11rem !important}}.advertiser-page__data-list__data-list-body{flex:1}.advertiser-page__data-list .data-list__body-wrapper{flex:1}.advertiser-page-details-container{padding:2.4rem;border:1px solid var(--general-hover);border-radius:.8rem}@media(max-width: 1279px){.advertiser-page-details-container{border-radius:0;border-radius:initial}}.advertiser-page-empty{height:100%;margin-top:4rem}@media(max-height: 525px){.advertiser-page-empty{height:16rem}}@media(min-height: 526px)and (max-height: 580px){.advertiser-page-empty{height:15rem}}.advertiser-page-adverts{flex:1;display:flex;flex-direction:column}.advertiser-page-adverts__button{align-items:center;display:flex;justify-content:center}@media(max-width: 1279px){.advertiser-page-adverts__button{display:flex;flex-direction:column;justify-content:flex-start;margin-top:1rem}}.advertiser-page-adverts__table{display:flex;flex:1;flex-direction:column}@media(max-width: 1279px){.advertiser-page-adverts__table{display:flex;flex-flow:column;width:100vw}}@media(max-width: 1279px)and (min-width: 601px)and (max-width: 1279px){.advertiser-page-adverts__table{width:100%}}.advertiser-page-adverts__table-body{flex:1;display:flex;flex-direction:column}.advertiser-page-adverts__table-row{padding:1.6rem;grid-template-columns:3fr 2fr 2.5fr 1fr}@media(max-width: 1279px){.advertiser-page-adverts__table-row{grid-template-columns:2fr 1fr;min-height:105px;padding:1.6rem;width:100vw}}@media(max-width: 1279px)and (min-width: 601px)and (max-width: 1279px){.advertiser-page-adverts__table-row{width:100%}}.advertiser-page-adverts__tabs{width:228px}@media(min-width: 601px)and (max-width: 1279px){.advertiser-page-adverts .dc-tabs__list--full-width{width:100%}}@media(max-width: 1279px){.advertiser-page-adverts .dc-tabs__item{width:50%}}.advertiser-page-adverts__list{height:calc(100% - 200px)}@media(max-width: 1279px){.advertiser-page-adverts__list{height:calc(100% - 236px)}}.advertiser-page-adverts__scrollbar{position:absolute}@media(min-width: 1280px){.advertiser-page-adverts__scrollbar{height:calc(100vh - 527px)}}@media(max-width: 1279px){.advertiser-page-adverts__scrollbar{max-height:calc(100vh - 440px) !important}.advertiser-page-adverts__scrollbar{bottom:0;position:fixed}}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/pages/advertiser-page/advertiser-page.scss\",\"webpack://./src/pages/advertiser-page/advertiser-page-adverts.scss\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\".advertiser-page {\\n    flex: 1;\\n    display: flex;\\n    flex-direction: column;\\n\\n    @include tablet-screen {\\n        max-width: 60rem;\\n    }\\n\\n    @include mobile-or-tablet-screen {\\n        overflow-y: auto;\\n    }\\n\\n    &__page-return-header {\\n        position: relative;\\n    }\\n\\n    &--no-scroll {\\n        overflow: hidden;\\n    }\\n\\n    &__header {\\n        display: flex;\\n        flex-direction: column;\\n        height: fit-content;\\n        justify-content: space-between;\\n\\n        @include mobile-or-tablet-screen {\\n            padding-top: 1.6rem;\\n            width: 100vw;\\n        }\\n\\n        &-details {\\n            display: flex;\\n\\n            @include mobile-or-tablet-screen {\\n                display: inline-grid;\\n                grid-template-columns: auto auto;\\n                margin: 0 0 3rem;\\n\\n                .dp2p-avatar {\\n                    align-self: center;\\n\\n                    @include mobile-or-tablet-screen {\\n                        align-self: flex-start;\\n                        margin-top: 0.6rem;\\n                        margin-right: 0.7rem;\\n                    }\\n                }\\n            }\\n        }\\n\\n        &-name {\\n            display: flex;\\n            flex-direction: row;\\n            flex-wrap: wrap;\\n            height: fit-content;\\n            width: fit-content;\\n\\n            > span {\\n                padding-right: 0.8rem;\\n            }\\n\\n            &--column {\\n                display: flex;\\n                flex-direction: column;\\n                padding-left: 0.8rem;\\n            }\\n        }\\n\\n        &-real-name {\\n            margin: 0.4rem 0;\\n            max-width: 500px;\\n        }\\n        &-verification {\\n            align-items: center;\\n            display: flex;\\n\\n            @include mobile-or-tablet-screen {\\n                display: grid;\\n                position: absolute;\\n                right: 1.6rem;\\n            }\\n\\n            &-icon {\\n                margin-left: 0.4rem;\\n                vertical-align: sub;\\n\\n                @include mobile-or-tablet-screen {\\n                    vertical-align: text-top;\\n                }\\n            }\\n\\n            &-id {\\n                justify-self: flex-end;\\n            }\\n\\n            &-status {\\n                margin-left: 1.6rem;\\n            }\\n        }\\n    }\\n\\n    &__horizontal-scroll {\\n        overflow-x: auto;\\n    }\\n\\n    &__italic {\\n        font-style: italic;\\n    }\\n\\n    &__modal {\\n        @include mobile-or-tablet-screen {\\n            max-width: 100vw;\\n        }\\n    }\\n\\n    &__rating {\\n        display: flex;\\n        flex-direction: row;\\n        padding-bottom: 0.7rem;\\n\\n        @include mobile-or-tablet-screen {\\n            padding-top: 0.7rem;\\n        }\\n\\n        &--row {\\n            align-items: center;\\n            border-left: 1px solid var(--general-section-1);\\n            display: flex;\\n            gap: 0.7rem;\\n            padding: 0 0.8rem;\\n\\n            &:first-child {\\n                padding-left: unset;\\n                border-left: unset;\\n            }\\n        }\\n\\n        &--star {\\n            pointer-events: none;\\n\\n            > svg {\\n                margin-right: 0.1rem;\\n            }\\n        }\\n\\n        &--text {\\n            display: flex;\\n            gap: 0.8rem;\\n            margin-left: 0.4rem;\\n        }\\n    }\\n\\n    &__row {\\n        display: flex;\\n        flex-direction: row;\\n    }\\n\\n    &__joined-since {\\n        margin-bottom: 0.35rem;\\n        margin-top: 0.35rem;\\n    }\\n\\n    &__cell {\\n        @include mobile-or-tablet-screen {\\n            display: block;\\n        }\\n        &-limit {\\n            padding-top: 0.8rem;\\n        }\\n    }\\n\\n    &__popover {\\n        &-icon {\\n            margin: 1.6rem 0.8rem 1.6rem 2.4rem;\\n\\n            @include mobile-or-tablet-screen {\\n                margin: 1.6rem 1rem;\\n            }\\n        }\\n    }\\n\\n    &__payment-methods-list {\\n        display: flex;\\n        flex-direction: row;\\n        flex-wrap: wrap;\\n    }\\n\\n    &__payment-method {\\n        display: flex;\\n        flex-wrap: wrap;\\n        align-items: center;\\n        border: 1px solid var(--border-normal);\\n        border-radius: 0.4rem;\\n        flex-direction: row;\\n        padding: 0 0.8rem;\\n        margin: 0.25rem;\\n        width: fit-content;\\n\\n        @include mobile-or-tablet-screen {\\n            padding: 0.4rem;\\n        }\\n    }\\n\\n    .dc-tabs__content {\\n        @include mobile-or-tablet-screen {\\n            position: fixed;\\n            top: 140px;\\n\\n            .page-return {\\n                margin: 1.2rem !important;\\n            }\\n        }\\n    }\\n\\n    &__data-list {\\n        flex: 1;\\n\\n        @media (max-height: 580px) {\\n            height: 11rem !important;\\n        }\\n\\n        &__data-list-body {\\n            flex: 1;\\n        }\\n\\n        .data-list__body-wrapper {\\n            flex: 1;\\n        }\\n    }\\n\\n    &-details {\\n        &-container {\\n            padding: 2.4rem;\\n            border: 1px solid var(--general-hover);\\n            border-radius: 0.8rem;\\n\\n            @include mobile-or-tablet-screen {\\n                border-radius: unset;\\n            }\\n        }\\n    }\\n\\n    &-empty {\\n        height: 100%;\\n        margin-top: 4rem;\\n\\n        @media (max-height: 525px) {\\n            height: 16rem;\\n        }\\n\\n        @media (min-height: 526px) and (max-height: 580px) {\\n            height: 15rem;\\n        }\\n    }\\n}\\n\",\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@import 'advertiser-page.scss';\\n\\n.advertiser-page-adverts {\\n    flex: 1;\\n    display: flex;\\n    flex-direction: column;\\n\\n    &__button {\\n        align-items: center;\\n        display: flex;\\n        justify-content: center;\\n\\n        @include mobile-or-tablet-screen {\\n            display: flex;\\n            flex-direction: column;\\n            justify-content: flex-start;\\n            margin-top: 1rem;\\n        }\\n    }\\n\\n    &__table {\\n        display: flex;\\n        flex: 1;\\n        flex-direction: column;\\n\\n        @include mobile-or-tablet-screen {\\n            display: flex;\\n            flex-flow: column;\\n            width: 100vw;\\n\\n            @include tablet-screen {\\n                width: 100%;\\n            }\\n        }\\n\\n        &-body {\\n            flex: 1;\\n            display: flex;\\n            flex-direction: column;\\n        }\\n    }\\n\\n    &__table-row {\\n        padding: 1.6rem;\\n        grid-template-columns: 3fr 2fr 2.5fr 1fr;\\n\\n        @include mobile-or-tablet-screen {\\n            grid-template-columns: 2fr 1fr;\\n            min-height: 105px;\\n            padding: 1.6rem;\\n            width: 100vw;\\n\\n            @include tablet-screen {\\n                width: 100%;\\n            }\\n        }\\n    }\\n\\n    &__tabs {\\n        width: 228px;\\n    }\\n\\n    .dc-tabs__list--full-width {\\n        @include tablet-screen {\\n            width: 100%;\\n        }\\n    }\\n\\n    .dc-tabs__item {\\n        @include mobile-or-tablet-screen {\\n            width: 50%;\\n        }\\n    }\\n\\n    &__list {\\n        height: calc(100% - 200px);\\n\\n        @include mobile-or-tablet-screen {\\n            height: calc(100% - 236px);\\n        }\\n    }\\n\\n    &__scrollbar {\\n        @include desktop-screen {\\n            height: calc(100vh - 527px);\\n        }\\n\\n        position: absolute;\\n\\n        @include mobile-or-tablet-screen {\\n            bottom: 0;\\n            max-height: calc(100vh - 440px) !important;\\n            position: fixed;\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".advertiser-page-dropdown-menu{box-shadow:0 1rem 2rem var(--shadow-menu);border-radius:4px;cursor:pointer;position:absolute;right:0;z-index:2}.advertiser-page-dropdown-menu .dc-dropdown__display{background-color:var(--general-main-2);border:1px solid var(--general-active)}.advertiser-page-dropdown-menu .dc-dropdown__display span{background-color:var(--general-main-2)}.advertiser-page-dropdown-menu .dc-dropdown__display-placeholder{top:auto}.advertiser-page-dropdown-menu__container{margin-top:0}.advertiser-page-dropdown-menu__dots-icon{cursor:pointer;margin-bottom:.8rem}.advertiser-page-dropdown-menu__dots-toggle{position:absolute;right:2.4rem}@media(max-width: 1279px){.advertiser-page-dropdown-menu__dots-toggle{bottom:.8rem;right:1.2rem}}.advertiser-page-dropdown-menu:hover .dc-dropdown__display{background-color:var(--border-normal);border:1px solid var(--border-normal)}.advertiser-page-dropdown-menu:hover .dc-dropdown__display span{background-color:var(--border-normal)}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/pages/advertiser-page/advertiser-page-dropdown-menu.scss\"],\"names\":[],\"mappings\":\"AAysBA,+BACI,yCAAA,CACA,iBA3fY,CA4fZ,cAAA,CACA,iBAAA,CACA,OAAA,CACA,SAAA,CAEA,qDACI,sCAAA,CACA,sCAAA,CAEA,0DACI,sCAAA,CAGJ,iEACI,QAAA,CAIR,0CACI,YAAA,CAGJ,0CACI,cAAA,CACA,mBAAA,CAGJ,4CACI,iBAAA,CACA,YAAA,CAvDJ,0BAqDA,4CAKQ,YAAA,CACA,YAAA,CAAA,CAKJ,2DACI,qCAAA,CACA,qCAAA,CAEA,gEACI,qCAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n.advertiser-page-dropdown-menu {\\n    box-shadow: 0 1rem 2rem var(--shadow-menu);\\n    border-radius: $BORDER_RADIUS;\\n    cursor: pointer;\\n    position: absolute;\\n    right: 0;\\n    z-index: 2;\\n\\n    .dc-dropdown__display {\\n        background-color: var(--general-main-2);\\n        border: 1px solid var(--general-active);\\n\\n        span {\\n            background-color: var(--general-main-2);\\n        }\\n\\n        &-placeholder {\\n            top: auto;\\n        }\\n    }\\n\\n    &__container {\\n        margin-top: 0;\\n    }\\n\\n    &__dots-icon {\\n        cursor: pointer;\\n        margin-bottom: 0.8rem;\\n    }\\n\\n    &__dots-toggle {\\n        position: absolute;\\n        right: 2.4rem;\\n\\n        @include mobile-or-tablet-screen {\\n            bottom: 0.8rem;\\n            right: 1.2rem;\\n        }\\n    }\\n\\n    &:hover {\\n        .dc-dropdown__display {\\n            background-color: var(--border-normal);\\n            border: 1px solid var(--border-normal);\\n\\n            span {\\n                background-color: var(--border-normal);\\n            }\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".advertiser-page{flex:1;display:flex;flex-direction:column}@media(min-width: 601px)and (max-width: 1279px){.advertiser-page{max-width:60rem}}@media(max-width: 1279px){.advertiser-page{overflow-y:auto}}.advertiser-page__page-return-header{position:relative}.advertiser-page--no-scroll{overflow:hidden}.advertiser-page__header{display:flex;flex-direction:column;height:-moz-fit-content;height:fit-content;justify-content:space-between}@media(max-width: 1279px){.advertiser-page__header{padding-top:1.6rem;width:100vw}}.advertiser-page__header-details{display:flex}@media(max-width: 1279px){.advertiser-page__header-details{display:inline-grid;grid-template-columns:auto auto;margin:0 0 3rem}.advertiser-page__header-details .dp2p-avatar{align-self:center}}@media(max-width: 1279px)and (max-width: 1279px){.advertiser-page__header-details .dp2p-avatar{align-self:flex-start;margin-top:.6rem;margin-right:.7rem}}.advertiser-page__header-name{display:flex;flex-direction:row;flex-wrap:wrap;height:-moz-fit-content;height:fit-content;width:-moz-fit-content;width:fit-content}.advertiser-page__header-name>span{padding-right:.8rem}.advertiser-page__header-name--column{display:flex;flex-direction:column;padding-left:.8rem}.advertiser-page__header-real-name{margin:.4rem 0;max-width:500px}.advertiser-page__header-verification{align-items:center;display:flex}@media(max-width: 1279px){.advertiser-page__header-verification{display:grid;position:absolute;right:1.6rem}}.advertiser-page__header-verification-icon{margin-left:.4rem;vertical-align:sub}@media(max-width: 1279px){.advertiser-page__header-verification-icon{vertical-align:text-top}}.advertiser-page__header-verification-id{justify-self:flex-end}.advertiser-page__header-verification-status{margin-left:1.6rem}.advertiser-page__horizontal-scroll{overflow-x:auto}.advertiser-page__italic{font-style:italic}@media(max-width: 1279px){.advertiser-page__modal{max-width:100vw}}.advertiser-page__rating{display:flex;flex-direction:row;padding-bottom:.7rem}@media(max-width: 1279px){.advertiser-page__rating{padding-top:.7rem}}.advertiser-page__rating--row{align-items:center;border-left:1px solid var(--general-section-1);display:flex;gap:.7rem;padding:0 .8rem}.advertiser-page__rating--row:first-child{padding-left:0;padding-left:initial;border-left:0;border-left:initial}.advertiser-page__rating--star{pointer-events:none}.advertiser-page__rating--star>svg{margin-right:.1rem}.advertiser-page__rating--text{display:flex;gap:.8rem;margin-left:.4rem}.advertiser-page__row{display:flex;flex-direction:row}.advertiser-page__joined-since{margin-bottom:.35rem;margin-top:.35rem}@media(max-width: 1279px){.advertiser-page__cell{display:block}}.advertiser-page__cell-limit{padding-top:.8rem}.advertiser-page__popover-icon{margin:1.6rem .8rem 1.6rem 2.4rem}@media(max-width: 1279px){.advertiser-page__popover-icon{margin:1.6rem 1rem}}.advertiser-page__payment-methods-list{display:flex;flex-direction:row;flex-wrap:wrap}.advertiser-page__payment-method{display:flex;flex-wrap:wrap;align-items:center;border:1px solid var(--border-normal);border-radius:.4rem;flex-direction:row;padding:0 .8rem;margin:.25rem;width:-moz-fit-content;width:fit-content}@media(max-width: 1279px){.advertiser-page__payment-method{padding:.4rem}}@media(max-width: 1279px){.advertiser-page .dc-tabs__content{position:fixed;top:140px}.advertiser-page .dc-tabs__content .page-return{margin:1.2rem !important}}.advertiser-page__data-list{flex:1}@media(max-height: 580px){.advertiser-page__data-list{height:11rem !important}}.advertiser-page__data-list__data-list-body{flex:1}.advertiser-page__data-list .data-list__body-wrapper{flex:1}.advertiser-page-details-container{padding:2.4rem;border:1px solid var(--general-hover);border-radius:.8rem}@media(max-width: 1279px){.advertiser-page-details-container{border-radius:0;border-radius:initial}}.advertiser-page-empty{height:100%;margin-top:4rem}@media(max-height: 525px){.advertiser-page-empty{height:16rem}}@media(min-height: 526px)and (max-height: 580px){.advertiser-page-empty{height:15rem}}.advertiser-page{flex:1;display:flex;flex-direction:column}@media(min-width: 601px)and (max-width: 1279px){.advertiser-page{max-width:60rem}}@media(max-width: 1279px){.advertiser-page{overflow-y:auto}}.advertiser-page__page-return-header{position:relative}.advertiser-page--no-scroll{overflow:hidden}.advertiser-page__header{display:flex;flex-direction:column;height:-moz-fit-content;height:fit-content;justify-content:space-between}@media(max-width: 1279px){.advertiser-page__header{padding-top:1.6rem;width:100vw}}.advertiser-page__header-details{display:flex}@media(max-width: 1279px){.advertiser-page__header-details{display:inline-grid;grid-template-columns:auto auto;margin:0 0 3rem}.advertiser-page__header-details .dp2p-avatar{align-self:center}}@media(max-width: 1279px)and (max-width: 1279px){.advertiser-page__header-details .dp2p-avatar{align-self:flex-start;margin-top:.6rem;margin-right:.7rem}}.advertiser-page__header-name{display:flex;flex-direction:row;flex-wrap:wrap;height:-moz-fit-content;height:fit-content;width:-moz-fit-content;width:fit-content}.advertiser-page__header-name>span{padding-right:.8rem}.advertiser-page__header-name--column{display:flex;flex-direction:column;padding-left:.8rem}.advertiser-page__header-real-name{margin:.4rem 0;max-width:500px}.advertiser-page__header-verification{align-items:center;display:flex}@media(max-width: 1279px){.advertiser-page__header-verification{display:grid;position:absolute;right:1.6rem}}.advertiser-page__header-verification-icon{margin-left:.4rem;vertical-align:sub}@media(max-width: 1279px){.advertiser-page__header-verification-icon{vertical-align:text-top}}.advertiser-page__header-verification-id{justify-self:flex-end}.advertiser-page__header-verification-status{margin-left:1.6rem}.advertiser-page__horizontal-scroll{overflow-x:auto}.advertiser-page__italic{font-style:italic}@media(max-width: 1279px){.advertiser-page__modal{max-width:100vw}}.advertiser-page__rating{display:flex;flex-direction:row;padding-bottom:.7rem}@media(max-width: 1279px){.advertiser-page__rating{padding-top:.7rem}}.advertiser-page__rating--row{align-items:center;border-left:1px solid var(--general-section-1);display:flex;gap:.7rem;padding:0 .8rem}.advertiser-page__rating--row:first-child{padding-left:0;padding-left:initial;border-left:0;border-left:initial}.advertiser-page__rating--star{pointer-events:none}.advertiser-page__rating--star>svg{margin-right:.1rem}.advertiser-page__rating--text{display:flex;gap:.8rem;margin-left:.4rem}.advertiser-page__row{display:flex;flex-direction:row}.advertiser-page__joined-since{margin-bottom:.35rem;margin-top:.35rem}@media(max-width: 1279px){.advertiser-page__cell{display:block}}.advertiser-page__cell-limit{padding-top:.8rem}.advertiser-page__popover-icon{margin:1.6rem .8rem 1.6rem 2.4rem}@media(max-width: 1279px){.advertiser-page__popover-icon{margin:1.6rem 1rem}}.advertiser-page__payment-methods-list{display:flex;flex-direction:row;flex-wrap:wrap}.advertiser-page__payment-method{display:flex;flex-wrap:wrap;align-items:center;border:1px solid var(--border-normal);border-radius:.4rem;flex-direction:row;padding:0 .8rem;margin:.25rem;width:-moz-fit-content;width:fit-content}@media(max-width: 1279px){.advertiser-page__payment-method{padding:.4rem}}@media(max-width: 1279px){.advertiser-page .dc-tabs__content{position:fixed;top:140px}.advertiser-page .dc-tabs__content .page-return{margin:1.2rem !important}}.advertiser-page__data-list{flex:1}@media(max-height: 580px){.advertiser-page__data-list{height:11rem !important}}.advertiser-page__data-list__data-list-body{flex:1}.advertiser-page__data-list .data-list__body-wrapper{flex:1}.advertiser-page-details-container{padding:2.4rem;border:1px solid var(--general-hover);border-radius:.8rem}@media(max-width: 1279px){.advertiser-page-details-container{border-radius:0;border-radius:initial}}.advertiser-page-empty{height:100%;margin-top:4rem}@media(max-height: 525px){.advertiser-page-empty{height:16rem}}@media(min-height: 526px)and (max-height: 580px){.advertiser-page-empty{height:15rem}}.advertiser-page-adverts{flex:1;display:flex;flex-direction:column}.advertiser-page-adverts__button{align-items:center;display:flex;justify-content:center}@media(max-width: 1279px){.advertiser-page-adverts__button{display:flex;flex-direction:column;justify-content:flex-start;margin-top:1rem}}.advertiser-page-adverts__table{display:flex;flex:1;flex-direction:column}@media(max-width: 1279px){.advertiser-page-adverts__table{display:flex;flex-flow:column;width:100vw}}@media(max-width: 1279px)and (min-width: 601px)and (max-width: 1279px){.advertiser-page-adverts__table{width:100%}}.advertiser-page-adverts__table-body{flex:1;display:flex;flex-direction:column}.advertiser-page-adverts__table-row{padding:1.6rem;grid-template-columns:3fr 2fr 2.5fr 1fr}@media(max-width: 1279px){.advertiser-page-adverts__table-row{grid-template-columns:2fr 1fr;min-height:105px;padding:1.6rem;width:100vw}}@media(max-width: 1279px)and (min-width: 601px)and (max-width: 1279px){.advertiser-page-adverts__table-row{width:100%}}.advertiser-page-adverts__tabs{width:228px}@media(min-width: 601px)and (max-width: 1279px){.advertiser-page-adverts .dc-tabs__list--full-width{width:100%}}@media(max-width: 1279px){.advertiser-page-adverts .dc-tabs__item{width:50%}}.advertiser-page-adverts__list{height:calc(100% - 200px)}@media(max-width: 1279px){.advertiser-page-adverts__list{height:calc(100% - 236px)}}.advertiser-page-adverts__scrollbar{position:absolute}@media(min-width: 1280px){.advertiser-page-adverts__scrollbar{height:calc(100vh - 527px)}}@media(max-width: 1279px){.advertiser-page-adverts__scrollbar{max-height:calc(100vh - 440px) !important}.advertiser-page-adverts__scrollbar{bottom:0;position:fixed}}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/pages/advertiser-page/advertiser-page.scss\",\"webpack://./src/pages/advertiser-page/advertiser-page-row.scss\",\"webpack://./src/pages/advertiser-page/advertiser-page-adverts.scss\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\".advertiser-page {\\n    flex: 1;\\n    display: flex;\\n    flex-direction: column;\\n\\n    @include tablet-screen {\\n        max-width: 60rem;\\n    }\\n\\n    @include mobile-or-tablet-screen {\\n        overflow-y: auto;\\n    }\\n\\n    &__page-return-header {\\n        position: relative;\\n    }\\n\\n    &--no-scroll {\\n        overflow: hidden;\\n    }\\n\\n    &__header {\\n        display: flex;\\n        flex-direction: column;\\n        height: fit-content;\\n        justify-content: space-between;\\n\\n        @include mobile-or-tablet-screen {\\n            padding-top: 1.6rem;\\n            width: 100vw;\\n        }\\n\\n        &-details {\\n            display: flex;\\n\\n            @include mobile-or-tablet-screen {\\n                display: inline-grid;\\n                grid-template-columns: auto auto;\\n                margin: 0 0 3rem;\\n\\n                .dp2p-avatar {\\n                    align-self: center;\\n\\n                    @include mobile-or-tablet-screen {\\n                        align-self: flex-start;\\n                        margin-top: 0.6rem;\\n                        margin-right: 0.7rem;\\n                    }\\n                }\\n            }\\n        }\\n\\n        &-name {\\n            display: flex;\\n            flex-direction: row;\\n            flex-wrap: wrap;\\n            height: fit-content;\\n            width: fit-content;\\n\\n            > span {\\n                padding-right: 0.8rem;\\n            }\\n\\n            &--column {\\n                display: flex;\\n                flex-direction: column;\\n                padding-left: 0.8rem;\\n            }\\n        }\\n\\n        &-real-name {\\n            margin: 0.4rem 0;\\n            max-width: 500px;\\n        }\\n        &-verification {\\n            align-items: center;\\n            display: flex;\\n\\n            @include mobile-or-tablet-screen {\\n                display: grid;\\n                position: absolute;\\n                right: 1.6rem;\\n            }\\n\\n            &-icon {\\n                margin-left: 0.4rem;\\n                vertical-align: sub;\\n\\n                @include mobile-or-tablet-screen {\\n                    vertical-align: text-top;\\n                }\\n            }\\n\\n            &-id {\\n                justify-self: flex-end;\\n            }\\n\\n            &-status {\\n                margin-left: 1.6rem;\\n            }\\n        }\\n    }\\n\\n    &__horizontal-scroll {\\n        overflow-x: auto;\\n    }\\n\\n    &__italic {\\n        font-style: italic;\\n    }\\n\\n    &__modal {\\n        @include mobile-or-tablet-screen {\\n            max-width: 100vw;\\n        }\\n    }\\n\\n    &__rating {\\n        display: flex;\\n        flex-direction: row;\\n        padding-bottom: 0.7rem;\\n\\n        @include mobile-or-tablet-screen {\\n            padding-top: 0.7rem;\\n        }\\n\\n        &--row {\\n            align-items: center;\\n            border-left: 1px solid var(--general-section-1);\\n            display: flex;\\n            gap: 0.7rem;\\n            padding: 0 0.8rem;\\n\\n            &:first-child {\\n                padding-left: unset;\\n                border-left: unset;\\n            }\\n        }\\n\\n        &--star {\\n            pointer-events: none;\\n\\n            > svg {\\n                margin-right: 0.1rem;\\n            }\\n        }\\n\\n        &--text {\\n            display: flex;\\n            gap: 0.8rem;\\n            margin-left: 0.4rem;\\n        }\\n    }\\n\\n    &__row {\\n        display: flex;\\n        flex-direction: row;\\n    }\\n\\n    &__joined-since {\\n        margin-bottom: 0.35rem;\\n        margin-top: 0.35rem;\\n    }\\n\\n    &__cell {\\n        @include mobile-or-tablet-screen {\\n            display: block;\\n        }\\n        &-limit {\\n            padding-top: 0.8rem;\\n        }\\n    }\\n\\n    &__popover {\\n        &-icon {\\n            margin: 1.6rem 0.8rem 1.6rem 2.4rem;\\n\\n            @include mobile-or-tablet-screen {\\n                margin: 1.6rem 1rem;\\n            }\\n        }\\n    }\\n\\n    &__payment-methods-list {\\n        display: flex;\\n        flex-direction: row;\\n        flex-wrap: wrap;\\n    }\\n\\n    &__payment-method {\\n        display: flex;\\n        flex-wrap: wrap;\\n        align-items: center;\\n        border: 1px solid var(--border-normal);\\n        border-radius: 0.4rem;\\n        flex-direction: row;\\n        padding: 0 0.8rem;\\n        margin: 0.25rem;\\n        width: fit-content;\\n\\n        @include mobile-or-tablet-screen {\\n            padding: 0.4rem;\\n        }\\n    }\\n\\n    .dc-tabs__content {\\n        @include mobile-or-tablet-screen {\\n            position: fixed;\\n            top: 140px;\\n\\n            .page-return {\\n                margin: 1.2rem !important;\\n            }\\n        }\\n    }\\n\\n    &__data-list {\\n        flex: 1;\\n\\n        @media (max-height: 580px) {\\n            height: 11rem !important;\\n        }\\n\\n        &__data-list-body {\\n            flex: 1;\\n        }\\n\\n        .data-list__body-wrapper {\\n            flex: 1;\\n        }\\n    }\\n\\n    &-details {\\n        &-container {\\n            padding: 2.4rem;\\n            border: 1px solid var(--general-hover);\\n            border-radius: 0.8rem;\\n\\n            @include mobile-or-tablet-screen {\\n                border-radius: unset;\\n            }\\n        }\\n    }\\n\\n    &-empty {\\n        height: 100%;\\n        margin-top: 4rem;\\n\\n        @media (max-height: 525px) {\\n            height: 16rem;\\n        }\\n\\n        @media (min-height: 526px) and (max-height: 580px) {\\n            height: 15rem;\\n        }\\n    }\\n}\\n\",\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@import 'advertiser-page.scss';\\n@import 'advertiser-page-adverts.scss';\\n\",\"@import 'advertiser-page.scss';\\n\\n.advertiser-page-adverts {\\n    flex: 1;\\n    display: flex;\\n    flex-direction: column;\\n\\n    &__button {\\n        align-items: center;\\n        display: flex;\\n        justify-content: center;\\n\\n        @include mobile-or-tablet-screen {\\n            display: flex;\\n            flex-direction: column;\\n            justify-content: flex-start;\\n            margin-top: 1rem;\\n        }\\n    }\\n\\n    &__table {\\n        display: flex;\\n        flex: 1;\\n        flex-direction: column;\\n\\n        @include mobile-or-tablet-screen {\\n            display: flex;\\n            flex-flow: column;\\n            width: 100vw;\\n\\n            @include tablet-screen {\\n                width: 100%;\\n            }\\n        }\\n\\n        &-body {\\n            flex: 1;\\n            display: flex;\\n            flex-direction: column;\\n        }\\n    }\\n\\n    &__table-row {\\n        padding: 1.6rem;\\n        grid-template-columns: 3fr 2fr 2.5fr 1fr;\\n\\n        @include mobile-or-tablet-screen {\\n            grid-template-columns: 2fr 1fr;\\n            min-height: 105px;\\n            padding: 1.6rem;\\n            width: 100vw;\\n\\n            @include tablet-screen {\\n                width: 100%;\\n            }\\n        }\\n    }\\n\\n    &__tabs {\\n        width: 228px;\\n    }\\n\\n    .dc-tabs__list--full-width {\\n        @include tablet-screen {\\n            width: 100%;\\n        }\\n    }\\n\\n    .dc-tabs__item {\\n        @include mobile-or-tablet-screen {\\n            width: 50%;\\n        }\\n    }\\n\\n    &__list {\\n        height: calc(100% - 200px);\\n\\n        @include mobile-or-tablet-screen {\\n            height: calc(100% - 236px);\\n        }\\n    }\\n\\n    &__scrollbar {\\n        @include desktop-screen {\\n            height: calc(100vh - 527px);\\n        }\\n\\n        position: absolute;\\n\\n        @include mobile-or-tablet-screen {\\n            bottom: 0;\\n            max-height: calc(100vh - 440px) !important;\\n            position: fixed;\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".advertiser-page-stats__row{border-bottom:none;display:flex;grid-template-columns:repeat(3, 1fr);height:5rem;justify-content:space-between;margin:2rem 0;width:100%}@media(max-width: 1279px){.advertiser-page-stats__row{grid-template-columns:repeat(2, 1fr);margin:.6rem;width:90vw}}.advertiser-page-stats__cell{display:grid;min-width:20rem;text-align:center;margin-right:10rem}@media(max-width: 1279px){.advertiser-page-stats__cell{min-width:12rem}.advertiser-page-stats__cell:nth-child(5){min-width:16rem}}.advertiser-page-stats__cell-buy{margin-left:.5rem;margin-top:.14rem}.advertiser-page-stats__cell-completion{display:flex}@media(max-width: 1279px){.advertiser-page-stats__cell-completion{flex-direction:row;justify-content:center;padding-left:.5rem}}.advertiser-page-stats__cell-separator{border-right:1px solid #ededed;margin-right:2rem}@media(max-width: 1279px){.advertiser-page-stats__cell-separator{margin:0px 3rem 0 -4rem}}.advertiser-page-stats__wrapper{align-items:center;display:flex}@media(max-height: 580px){.advertiser-page-stats__wrapper{height:5rem}}@media(max-width: 1279px){.advertiser-page-stats__wrapper{display:flex;justify-content:center;flex:none;background-color:var(--general-main-1);z-index:1;transition:transform .25s linear,opacity .25s ease;transform-origin:top}}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/pages/advertiser-page/advertiser-page-stats.scss\"],\"names\":[],\"mappings\":\"AA0sBI,4BACI,kBAAA,CACA,YAAA,CACA,oCAAA,CACA,WAAA,CACA,6BAAA,CACA,aAAA,CACA,UAAA,CA/BJ,0BAwBA,4BAUQ,oCAAA,CACA,YAAA,CACA,UAAA,CAAA,CAIR,6BACI,YAAA,CACA,eAAA,CACA,iBAAA,CACA,kBAAA,CA5CJ,0BAwCA,6BAOQ,eAAA,CAEA,0CACI,eAAA,CAAA,CAIR,iCACI,iBAAA,CACA,iBAAA,CAGJ,wCACI,YAAA,CA5DR,0BA2DI,wCAIQ,kBAAA,CACA,sBAAA,CACA,kBAAA,CAAA,CAIR,uCACI,8BAAA,CACA,iBAAA,CAvER,0BAqEI,uCAKQ,uBAAA,CAAA,CAKZ,gCACI,kBAAA,CACA,YAAA,CAEA,0BAJJ,gCAKQ,WAAA,CAAA,CApFR,0BA+EA,gCAQQ,YAAA,CACA,sBAAA,CACA,SAAA,CAEA,sCAAA,CACA,SAAA,CACA,kDAAA,CACA,oBAAA,CAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n.advertiser-page-stats {\\n    &__row {\\n        border-bottom: none;\\n        display: flex;\\n        grid-template-columns: repeat(3, 1fr);\\n        height: 5rem;\\n        justify-content: space-between;\\n        margin: 2rem 0;\\n        width: 100%;\\n\\n        @include mobile-or-tablet-screen {\\n            grid-template-columns: repeat(2, 1fr);\\n            margin: 0.6rem;\\n            width: 90vw;\\n        }\\n    }\\n\\n    &__cell {\\n        display: grid;\\n        min-width: 20rem;\\n        text-align: center;\\n        margin-right: 10rem;\\n\\n        @include mobile-or-tablet-screen {\\n            min-width: 12rem;\\n\\n            &:nth-child(5) {\\n                min-width: 16rem;\\n            }\\n        }\\n\\n        &-buy {\\n            margin-left: 0.5rem;\\n            margin-top: 0.14rem;\\n        }\\n\\n        &-completion {\\n            display: flex;\\n\\n            @include mobile-or-tablet-screen {\\n                flex-direction: row;\\n                justify-content: center;\\n                padding-left: 0.5rem;\\n            }\\n        }\\n\\n        &-separator {\\n            border-right: 1px solid #ededed;\\n            margin-right: 2rem;\\n\\n            @include mobile-or-tablet-screen {\\n                margin: 0px 3rem 0 -4rem;\\n            }\\n        }\\n    }\\n\\n    &__wrapper {\\n        align-items: center;\\n        display: flex;\\n\\n        @media (max-height: 580px) {\\n            height: 5rem;\\n        }\\n        @include mobile-or-tablet-screen {\\n            display: flex;\\n            justify-content: center;\\n            flex: none;\\n\\n            background-color: var(--general-main-1);\\n            z-index: 1;\\n            transition: transform 0.25s linear, opacity 0.25s ease;\\n            transform-origin: top;\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".advertiser-page{flex:1;display:flex;flex-direction:column}@media(min-width: 601px)and (max-width: 1279px){.advertiser-page{max-width:60rem}}@media(max-width: 1279px){.advertiser-page{overflow-y:auto}}.advertiser-page__page-return-header{position:relative}.advertiser-page--no-scroll{overflow:hidden}.advertiser-page__header{display:flex;flex-direction:column;height:-moz-fit-content;height:fit-content;justify-content:space-between}@media(max-width: 1279px){.advertiser-page__header{padding-top:1.6rem;width:100vw}}.advertiser-page__header-details{display:flex}@media(max-width: 1279px){.advertiser-page__header-details{display:inline-grid;grid-template-columns:auto auto;margin:0 0 3rem}.advertiser-page__header-details .dp2p-avatar{align-self:center}}@media(max-width: 1279px)and (max-width: 1279px){.advertiser-page__header-details .dp2p-avatar{align-self:flex-start;margin-top:.6rem;margin-right:.7rem}}.advertiser-page__header-name{display:flex;flex-direction:row;flex-wrap:wrap;height:-moz-fit-content;height:fit-content;width:-moz-fit-content;width:fit-content}.advertiser-page__header-name>span{padding-right:.8rem}.advertiser-page__header-name--column{display:flex;flex-direction:column;padding-left:.8rem}.advertiser-page__header-real-name{margin:.4rem 0;max-width:500px}.advertiser-page__header-verification{align-items:center;display:flex}@media(max-width: 1279px){.advertiser-page__header-verification{display:grid;position:absolute;right:1.6rem}}.advertiser-page__header-verification-icon{margin-left:.4rem;vertical-align:sub}@media(max-width: 1279px){.advertiser-page__header-verification-icon{vertical-align:text-top}}.advertiser-page__header-verification-id{justify-self:flex-end}.advertiser-page__header-verification-status{margin-left:1.6rem}.advertiser-page__horizontal-scroll{overflow-x:auto}.advertiser-page__italic{font-style:italic}@media(max-width: 1279px){.advertiser-page__modal{max-width:100vw}}.advertiser-page__rating{display:flex;flex-direction:row;padding-bottom:.7rem}@media(max-width: 1279px){.advertiser-page__rating{padding-top:.7rem}}.advertiser-page__rating--row{align-items:center;border-left:1px solid var(--general-section-1);display:flex;gap:.7rem;padding:0 .8rem}.advertiser-page__rating--row:first-child{padding-left:0;padding-left:initial;border-left:0;border-left:initial}.advertiser-page__rating--star{pointer-events:none}.advertiser-page__rating--star>svg{margin-right:.1rem}.advertiser-page__rating--text{display:flex;gap:.8rem;margin-left:.4rem}.advertiser-page__row{display:flex;flex-direction:row}.advertiser-page__joined-since{margin-bottom:.35rem;margin-top:.35rem}@media(max-width: 1279px){.advertiser-page__cell{display:block}}.advertiser-page__cell-limit{padding-top:.8rem}.advertiser-page__popover-icon{margin:1.6rem .8rem 1.6rem 2.4rem}@media(max-width: 1279px){.advertiser-page__popover-icon{margin:1.6rem 1rem}}.advertiser-page__payment-methods-list{display:flex;flex-direction:row;flex-wrap:wrap}.advertiser-page__payment-method{display:flex;flex-wrap:wrap;align-items:center;border:1px solid var(--border-normal);border-radius:.4rem;flex-direction:row;padding:0 .8rem;margin:.25rem;width:-moz-fit-content;width:fit-content}@media(max-width: 1279px){.advertiser-page__payment-method{padding:.4rem}}@media(max-width: 1279px){.advertiser-page .dc-tabs__content{position:fixed;top:140px}.advertiser-page .dc-tabs__content .page-return{margin:1.2rem !important}}.advertiser-page__data-list{flex:1}@media(max-height: 580px){.advertiser-page__data-list{height:11rem !important}}.advertiser-page__data-list__data-list-body{flex:1}.advertiser-page__data-list .data-list__body-wrapper{flex:1}.advertiser-page-details-container{padding:2.4rem;border:1px solid var(--general-hover);border-radius:.8rem}@media(max-width: 1279px){.advertiser-page-details-container{border-radius:0;border-radius:initial}}.advertiser-page-empty{height:100%;margin-top:4rem}@media(max-height: 525px){.advertiser-page-empty{height:16rem}}@media(min-height: 526px)and (max-height: 580px){.advertiser-page-empty{height:15rem}}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/pages/advertiser-page/advertiser-page.scss\"],\"names\":[],\"mappings\":\"AAysBA,iBACI,MAAA,CACA,YAAA,CACA,qBAAA,CAtCA,gDAmCJ,iBAMQ,eAAA,CAAA,CA7BJ,0BAuBJ,iBAUQ,eAAA,CAAA,CAGJ,qCACI,iBAAA,CAGJ,4BACI,eAAA,CAGJ,yBACI,YAAA,CACA,qBAAA,CACA,uBAAA,CAAA,kBAAA,CACA,6BAAA,CAhDJ,0BA4CA,yBAOQ,kBAAA,CACA,WAAA,CAAA,CAGJ,iCACI,YAAA,CAxDR,0BAuDI,iCAIQ,mBAAA,CACA,+BAAA,CACA,eAAA,CAEA,8CACI,iBAAA,CAAA,CAhEhB,iDA+DY,8CAIQ,qBAAA,CACA,gBAAA,CACA,kBAAA,CAAA,CAMhB,8BACI,YAAA,CACA,kBAAA,CACA,cAAA,CACA,uBAAA,CAAA,kBAAA,CACA,sBAAA,CAAA,iBAAA,CAEA,mCACI,mBAAA,CAGJ,sCACI,YAAA,CACA,qBAAA,CACA,kBAAA,CAIR,mCACI,cAAA,CACA,eAAA,CAEJ,sCACI,kBAAA,CACA,YAAA,CAnGR,0BAiGI,sCAKQ,YAAA,CACA,iBAAA,CACA,YAAA,CAAA,CAGJ,2CACI,iBAAA,CACA,kBAAA,CA7GZ,0BA2GQ,2CAKQ,uBAAA,CAAA,CAIR,yCACI,qBAAA,CAGJ,6CACI,kBAAA,CAKZ,oCACI,eAAA,CAGJ,yBACI,iBAAA,CAnIJ,0BAsIA,wBAEQ,eAAA,CAAA,CAIR,yBACI,YAAA,CACA,kBAAA,CACA,oBAAA,CA/IJ,0BA4IA,yBAMQ,iBAAA,CAAA,CAGJ,8BACI,kBAAA,CACA,8CAAA,CACA,YAAA,CACA,SAAA,CACA,eAAA,CAEA,0CACI,cAAA,CAAA,oBAAA,CACA,aAAA,CAAA,mBAAA,CAIR,+BACI,mBAAA,CAEA,mCACI,kBAAA,CAIR,+BACI,YAAA,CACA,SAAA,CACA,iBAAA,CAIR,sBACI,YAAA,CACA,kBAAA,CAGJ,+BACI,oBAAA,CACA,iBAAA,CAxLJ,0BA2LA,uBAEQ,aAAA,CAAA,CAEJ,6BACI,iBAAA,CAKJ,+BACI,iCAAA,CAtMR,0BAqMI,+BAIQ,kBAAA,CAAA,CAKZ,uCACI,YAAA,CACA,kBAAA,CACA,cAAA,CAGJ,iCACI,YAAA,CACA,cAAA,CACA,kBAAA,CACA,qCAAA,CACA,mBAAA,CACA,kBAAA,CACA,eAAA,CACA,aAAA,CACA,sBAAA,CAAA,iBAAA,CA7NJ,0BAoNA,iCAYQ,aAAA,CAAA,CAhOR,0BAoOA,mCAEQ,cAAA,CACA,SAAA,CAEA,gDACI,wBAAA,CAAA,CAKZ,4BACI,MAAA,CAEA,0BAHJ,4BAIQ,uBAAA,CAAA,CAGJ,4CACI,MAAA,CAGJ,qDACI,MAAA,CAKJ,mCACI,cAAA,CACA,qCAAA,CACA,mBAAA,CAnQR,0BAgQI,mCAMQ,eAAA,CAAA,qBAAA,CAAA,CAKZ,uBACI,WAAA,CACA,eAAA,CAEA,0BAJJ,uBAKQ,YAAA,CAAA,CAGJ,iDARJ,uBASQ,YAAA,CAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n.advertiser-page {\\n    flex: 1;\\n    display: flex;\\n    flex-direction: column;\\n\\n    @include tablet-screen {\\n        max-width: 60rem;\\n    }\\n\\n    @include mobile-or-tablet-screen {\\n        overflow-y: auto;\\n    }\\n\\n    &__page-return-header {\\n        position: relative;\\n    }\\n\\n    &--no-scroll {\\n        overflow: hidden;\\n    }\\n\\n    &__header {\\n        display: flex;\\n        flex-direction: column;\\n        height: fit-content;\\n        justify-content: space-between;\\n\\n        @include mobile-or-tablet-screen {\\n            padding-top: 1.6rem;\\n            width: 100vw;\\n        }\\n\\n        &-details {\\n            display: flex;\\n\\n            @include mobile-or-tablet-screen {\\n                display: inline-grid;\\n                grid-template-columns: auto auto;\\n                margin: 0 0 3rem;\\n\\n                .dp2p-avatar {\\n                    align-self: center;\\n\\n                    @include mobile-or-tablet-screen {\\n                        align-self: flex-start;\\n                        margin-top: 0.6rem;\\n                        margin-right: 0.7rem;\\n                    }\\n                }\\n            }\\n        }\\n\\n        &-name {\\n            display: flex;\\n            flex-direction: row;\\n            flex-wrap: wrap;\\n            height: fit-content;\\n            width: fit-content;\\n\\n            > span {\\n                padding-right: 0.8rem;\\n            }\\n\\n            &--column {\\n                display: flex;\\n                flex-direction: column;\\n                padding-left: 0.8rem;\\n            }\\n        }\\n\\n        &-real-name {\\n            margin: 0.4rem 0;\\n            max-width: 500px;\\n        }\\n        &-verification {\\n            align-items: center;\\n            display: flex;\\n\\n            @include mobile-or-tablet-screen {\\n                display: grid;\\n                position: absolute;\\n                right: 1.6rem;\\n            }\\n\\n            &-icon {\\n                margin-left: 0.4rem;\\n                vertical-align: sub;\\n\\n                @include mobile-or-tablet-screen {\\n                    vertical-align: text-top;\\n                }\\n            }\\n\\n            &-id {\\n                justify-self: flex-end;\\n            }\\n\\n            &-status {\\n                margin-left: 1.6rem;\\n            }\\n        }\\n    }\\n\\n    &__horizontal-scroll {\\n        overflow-x: auto;\\n    }\\n\\n    &__italic {\\n        font-style: italic;\\n    }\\n\\n    &__modal {\\n        @include mobile-or-tablet-screen {\\n            max-width: 100vw;\\n        }\\n    }\\n\\n    &__rating {\\n        display: flex;\\n        flex-direction: row;\\n        padding-bottom: 0.7rem;\\n\\n        @include mobile-or-tablet-screen {\\n            padding-top: 0.7rem;\\n        }\\n\\n        &--row {\\n            align-items: center;\\n            border-left: 1px solid var(--general-section-1);\\n            display: flex;\\n            gap: 0.7rem;\\n            padding: 0 0.8rem;\\n\\n            &:first-child {\\n                padding-left: unset;\\n                border-left: unset;\\n            }\\n        }\\n\\n        &--star {\\n            pointer-events: none;\\n\\n            > svg {\\n                margin-right: 0.1rem;\\n            }\\n        }\\n\\n        &--text {\\n            display: flex;\\n            gap: 0.8rem;\\n            margin-left: 0.4rem;\\n        }\\n    }\\n\\n    &__row {\\n        display: flex;\\n        flex-direction: row;\\n    }\\n\\n    &__joined-since {\\n        margin-bottom: 0.35rem;\\n        margin-top: 0.35rem;\\n    }\\n\\n    &__cell {\\n        @include mobile-or-tablet-screen {\\n            display: block;\\n        }\\n        &-limit {\\n            padding-top: 0.8rem;\\n        }\\n    }\\n\\n    &__popover {\\n        &-icon {\\n            margin: 1.6rem 0.8rem 1.6rem 2.4rem;\\n\\n            @include mobile-or-tablet-screen {\\n                margin: 1.6rem 1rem;\\n            }\\n        }\\n    }\\n\\n    &__payment-methods-list {\\n        display: flex;\\n        flex-direction: row;\\n        flex-wrap: wrap;\\n    }\\n\\n    &__payment-method {\\n        display: flex;\\n        flex-wrap: wrap;\\n        align-items: center;\\n        border: 1px solid var(--border-normal);\\n        border-radius: 0.4rem;\\n        flex-direction: row;\\n        padding: 0 0.8rem;\\n        margin: 0.25rem;\\n        width: fit-content;\\n\\n        @include mobile-or-tablet-screen {\\n            padding: 0.4rem;\\n        }\\n    }\\n\\n    .dc-tabs__content {\\n        @include mobile-or-tablet-screen {\\n            position: fixed;\\n            top: 140px;\\n\\n            .page-return {\\n                margin: 1.2rem !important;\\n            }\\n        }\\n    }\\n\\n    &__data-list {\\n        flex: 1;\\n\\n        @media (max-height: 580px) {\\n            height: 11rem !important;\\n        }\\n\\n        &__data-list-body {\\n            flex: 1;\\n        }\\n\\n        .data-list__body-wrapper {\\n            flex: 1;\\n        }\\n    }\\n\\n    &-details {\\n        &-container {\\n            padding: 2.4rem;\\n            border: 1px solid var(--general-hover);\\n            border-radius: 0.8rem;\\n\\n            @include mobile-or-tablet-screen {\\n                border-radius: unset;\\n            }\\n        }\\n    }\\n\\n    &-empty {\\n        height: 100%;\\n        margin-top: 4rem;\\n\\n        @media (max-height: 525px) {\\n            height: 16rem;\\n        }\\n\\n        @media (min-height: 526px) and (max-height: 580px) {\\n            height: 15rem;\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".block-user-count{width:-moz-fit-content;width:fit-content;margin:auto .5rem}.block-user-count__container{display:flex;align-items:center}[dir=\\\"ltr\\\"] .block-user-count__container--icon{margin-right:.4rem}[dir=\\\"rtl\\\"] .block-user-count__container--icon{margin-left:.4rem}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/pages/advertiser-page/block-user/block-user-count.scss\"],\"names\":[],\"mappings\":\"AAysBA,kBACI,sBAAA,CAAA,iBAAA,CACA,iBAAA,CAEA,6BACI,YAAA,CACA,kBAAA,CAEA,+CACI,kBAAA,CADJ,+CACI,iBAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n.block-user-count {\\n    width: fit-content;\\n    margin: auto 0.5rem;\\n\\n    &__container {\\n        display: flex;\\n        align-items: center;\\n\\n        &--icon {\\n            margin-inline-end: 0.4rem;\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".block-user-overlay{position:relative;margin-bottom:3rem}.block-user-overlay__wrapper{align-items:center;background:var(--general-main-1);border:2px solid var(--general-section-1);border-radius:6px;display:flex;flex-direction:column;height:100%;justify-content:center;position:absolute;opacity:.9;top:0;left:0;width:100%;z-index:9999}@media(max-width: 1279px){.block-user-overlay__wrapper{border:none;border-radius:0;border-radius:initial;flex-flow:column}}.block-user-overlay__wrapper-text{margin:2.5rem 0 .8rem}.block-user-overlay__wrapper-button{margin-top:2rem}.block-user-overlay .advertiser-page-adverts__table-body{min-height:20vh}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/pages/advertiser-page/block-user/block-user-overlay/block-user-overlay.scss\"],\"names\":[],\"mappings\":\"AAysBA,oBACI,iBAAA,CACA,kBAAA,CAEA,6BACI,kBAAA,CACA,gCAAA,CACA,yCAAA,CACA,iBAAA,CACA,YAAA,CACA,qBAAA,CACA,WAAA,CACA,sBAAA,CACA,iBAAA,CACA,UAAA,CACA,KAAA,CACA,MAAA,CACA,UAAA,CACA,YAAA,CAzCJ,0BA2BA,6BAiBQ,WAAA,CACA,eAAA,CAAA,qBAAA,CACA,gBAAA,CAAA,CAGJ,kCACI,qBAAA,CAGJ,oCACI,eAAA,CAIR,yDACI,eAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n.block-user-overlay {\\n    position: relative;\\n    margin-bottom: 3rem;\\n\\n    &__wrapper {\\n        align-items: center;\\n        background: var(--general-main-1);\\n        border: 2px solid var(--general-section-1);\\n        border-radius: 6px;\\n        display: flex;\\n        flex-direction: column;\\n        height: 100%;\\n        justify-content: center;\\n        position: absolute;\\n        opacity: 0.9;\\n        top: 0;\\n        left: 0;\\n        width: 100%;\\n        z-index: 9999;\\n\\n        @include mobile-or-tablet-screen {\\n            border: none;\\n            border-radius: unset;\\n            flex-flow: column;\\n        }\\n\\n        &-text {\\n            margin: 2.5rem 0 0.8rem;\\n        }\\n\\n        &-button {\\n            margin-top: 2rem;\\n        }\\n    }\\n\\n    .advertiser-page-adverts__table-body {\\n        min-height: 20vh;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,address,big,cite,code,del,dfn,em,img,ins,kbd,q,s,samp,small,strike,strong,sub,sup,tt,var,b,u,i,center,dl,dt,dd,ol,ul,li,fieldset,form,label,legend,table,caption,tbody,tfoot,thead,tr,th,td,article,aside,canvas,details,embed,figure,figcaption,footer,header,hgroup,input,menu,nav,output,ruby,section,summary,time,mark,audio,video{margin:0;padding:0;border:0;font:inherit;vertical-align:baseline}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}html{height:100%;font-size:10px}body{line-height:1;height:100%}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:before,blockquote:after,q:before,q:after{content:\\\"\\\";content:none}table{border-collapse:collapse;border-spacing:0}strong{font-weight:bold}:host,:root{--text-size-xxxxs: 0.8rem;--text-size-xxxs: 1rem;--text-size-xxs: 1.2rem;--text-size-xs: 1.4rem;--text-size-s: 1.6rem;--text-size-xsm: 1.8rem;--text-size-sm: 2rem;--text-size-m: 2.4rem;--text-size-xm: 2.8rem;--text-size-l: 3.2rem;--text-size-xl: 4.8rem;--text-size-xxl: 6.4rem;--text-lh-xxs: 1;--text-lh-xs: 1.25;--text-lh-s: 1.4;--text-lh-m: 1.5;--text-lh-l: 1.75;--text-lh-xl: 2;--text-lh-xxl: 2.4;--text-weight-lighter: lighter;--text-weight-normal: normal;--text-weight-bold: bold;--text-weight-bolder: bolder;--text-align-left: start;--text-align-right: right;--text-align-center: center;--text-align-end: end;--brand-white: #ffffff;--brand-dark-grey: #0e0e0e;--brand-red-coral: #ff444f;--brand-orange: #ff6444;--brand-secondary: #85acb0;--wallet-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);--wallet-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);--wallet-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);--wallet-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);--wallet-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);--wallet-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);--wallet-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);--wallet-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);--wallet-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);--wallet-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);--wallet-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);--wallet-perfectmoney: gradient-perfectmoney;--wallet-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);--wallet-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);--wallet-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);--wallet-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);--wallet-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);--app-card-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);--app-card-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%)}:host .theme--light,:root .theme--light{--general-main-1: #ffffff;--general-main-2: #ffffff;--general-main-3: #999999;--general-main-4: rgba(255, 255, 255, 0.7);--general-main-5: #ffffff;--general-section-1: #f2f3f4;--general-section-2: #f2f3f4;--general-section-3: #fafafa;--general-section-4: #f5f7fa;--general-section-5: #f2f3f4;--general-section-6: #f2f3f4;--general-disabled: #eaeced;--general-hover: #e6e9e9;--general-active: #d6dadb;--text-general: #333333;--text-primary: #999999;--text-less-prominent: #999999;--text-prominent: #333333;--text-disabled: #999999;--text-disabled-1: #d6d6d6;--text-loss-danger: #ec3f3f;--text-profit-success: #4bb4b3;--text-warning: #ffad3a;--text-red: #ff444f;--text-green: #17eabd;--text-blue: #0796e0;--text-info-blue: #377cfc;--text-info-blue-background: #dfeaff;--text-colored-background: #ffffff;--icon-light-background: #5c5c5c;--icon-dark-background: #ffffff;--icon-grey-background: #f2f3f4;--icon-black-plus: #000000;--text-status-info-blue: #377cfc;--text-hint: #333333;--text-orange: #ff9c13;--purchase-main-1: #4bb4b3;--purchase-section-1: #3d9494;--purchase-main-2: #ec3f3f;--purchase-section-2: #d33636;--purchase-disabled-main: #eaeced;--purchase-disabled-section: #e6e9e9;--button-primary-default: var(--brand-red-coral);--button-secondary-default: #999999;--button-tertiary-default: transparent;--button-primary-light-default: rgba(255, 68, 79, 0.16);--button-primary-hover: #eb3e48;--button-secondary-hover: rgba(0, 0, 0, 0.08);--button-tertiary-hover: rgba(255, 68, 79, 0.08);--button-primary-light-hover: rgba(255, 68, 79, 0.24);--button-toggle-primary: #0796e0;--button-toggle-secondary: #d6dadb;--button-toggle-alternate: #ffffff;--button-get-started-bg: #000000;--overlay-outside-dialog: rgba(0, 0, 0, 0.72);--overlay-inside-dialog: rgba(255, 255, 255, 0.96);--shadow-menu: rgba(0, 0, 0, 0.16);--shadow-menu-2: rgba(0, 0, 0, 0.16);--shadow-drop: rgba(0, 0, 0, 0.08);--shadow-box: rgba(0, 0, 0, 0.4);--state-normal: #ffffff;--state-hover: #e6e9e9;--state-active: #d6dadb;--state-disabled: #eaeced;--checkbox-disabled-grey: #d6d6d6;--sidebar-tab: #d6d6d6;--border-normal: #d6dadb;--border-normal-1: #d6dadb;--border-normal-2: #d6dadb;--border-normal-3: #d6d6d6;--border-hover: #999999;--border-hover-1: #5c5c5c;--border-active: var(--brand-secondary);--border-disabled: #eaeced;--border-divider: #f2f3f4;--fill-normal: #ffffff;--fill-normal-1: #c2c2c2;--fill-hover: #999999;--fill-active: var(--brand-secondary);--fill-disabled: #eaeced;--status-default: #eaeced;--status-adjustment: #999999;--status-danger: #ec3f3f;--status-danger-transparent: rgba(255, 68, 79, 0.16);--status-success: #4bb4b3;--status-success-transparent: rgba(0, 167, 158, 0.16);--status-warning: #ffad3a;--status-warning-dark: #b3760d;--status-info-transparent: rgba(55, 124, 252, 0.16);--status-warning-transparent: rgba(255, 173, 58, 0.16);--status-transfer: #ff6444;--status-info: #377cfc;--status-colored-background: #ffffff;--status-alert-background: rgba(255, 173, 58, 0.16);--dashboard-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);--dashboard-app: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);--payment-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);--payment-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);--payment-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);--payment-credit-and-debit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);--payment-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);--payment-usd-coin: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);--payment-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);--payment-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);--payment-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);--payment-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);--payment-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);--payment-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);--payment-deriv: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);--transparent-success: rgba(75, 180, 179, 0.92);--transparent-info: rgba(55, 124, 252, 0.16);--transparent-hint: rgba(55, 124, 252, 0.08);--transparent-danger: rgba(255, 68, 79, 0.16);--transparent-correct-message: rgba(75, 180, 179, 0.1607843137);--transparent-fake-message: rgba(236, 63, 63, 0.1607843137);--gradient-success: linear-gradient(to top, #ffffff, rgba(75, 180, 179, 0.16));--gradient-danger: linear-gradient(to top, #ffffff, rgba(255, 68, 79, 0.16));--contract-gradient-danger: linear-gradient(to top, #ffffff 85%, rgba(255, 68, 79, 0.16));--gradient-right-edge: linear-gradient(to right, rgba(255, 255, 255, 0) -5%, #ffffff 71%);--gradient-blue: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);--gradient-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);--gradient-green: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);--badge-white: #ffffff;--badge-blue: #0677af;--badge-violet: #2a3052;--badge-green: #00a79e;--traders-hub-banner-border-color: #e6e9e9;--traders-hub-logged-out-banner-bg-color: #f3f4f5;--wallets-banner-ready-bg-color: #e2f3f3;--wallets-banner-ready-tick-bg-color: #4ab4b3;--wallets-banner-border-color: #e6e9e9;--wallets-banner-dot-color: #d6d6d6;--wallets-banner-active-dot-color: #ff444f;--wallets-card-active-gradient-background: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);--wallet-demo-bg-color: #fff8f9;--wallet-demo-divider-color: #fff0f1;--wallet-eu-disclaimer: #e6e9e9;--wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);--demo-text-color-1: #c2c2c2;--demo-text-color-2: #ffffff;--header-background-mt5: #e6f5ff;--header-background-others: #e8fdf8}:host .theme--dark,:root .theme--dark{--general-main-1: #0e0e0e;--general-main-2: #151717;--general-main-3: #1d1f20;--general-main-4: rgba(14, 14, 14, 0.5);--general-main-5: #181c25;--general-section-1: #151717;--general-section-2: #0e0e0e;--general-section-3: #242828;--general-section-4: #242828;--general-section-5: #242828;--general-section-6: #6e6e6e;--general-disabled: #1d1f20;--general-hover: #242828;--general-active: #323738;--text-prominent: #ffffff;--text-general: #c2c2c2;--text-less-prominent: #6e6e6e;--text-primary: #999999;--text-disabled: #3e3e3e;--text-disabled-1: #3e3e3e;--text-profit-success: #00a79e;--text-loss-danger: #cc2e3d;--text-red: #ff444f;--text-colored-background: #ffffff;--text-info-blue: #92b8ff;--text-info-blue-background: #182130;--text-status-info-blue: #377cfc;--text-hint: #c2c2c2;--icon-light-background: #5c5c5c;--icon-dark-background: #ffffff;--icon-grey-background: #333333;--icon-black-plus: #ffffff;--purchase-main-1: #00a79e;--purchase-section-1: #008079;--purchase-main-2: #cc2e3d;--purchase-section-2: #a32430;--purchase-disabled-main: #1d1f20;--purchase-disabled-section: #0e0e0e;--button-primary-default: var(--brand-red-coral);--button-secondary-default: #6e6e6e;--button-tertiary-default: transparent;--button-primary-light-default: rgba(255, 68, 79, 0.16);--button-primary-hover: #eb3e48;--button-secondary-hover: rgba(255, 255, 255, 0.08);--button-tertiary-hover: rgba(255, 68, 79, 0.08);--button-primary-light-hover: rgba(255, 68, 79, 0.24);--button-toggle-primary: #0796e0;--button-toggle-secondary: #323738;--button-toggle-alternate: #323738;--button-get-started-bg: #ffffff;--overlay-outside-dialog: rgba(0, 0, 0, 0.72);--overlay-inside-dialog: rgba(14, 14, 14, 0.96);--shadow-menu: rgba(0, 0, 0, 0.84);--shadow-menu-2: rgba(0, 0, 0, 0.72);--shadow-drop: rgba(0, 0, 0, 0.64);--shadow-box: #555975;--state-normal: #0e0e0e;--state-hover: #242828;--state-active: #323738;--state-disabled: #1d1f20;--checkbox-disabled-grey: #d6d6d6;--sidebar-tab: #6e6e6e;--border-normal: #323738;--border-normal-1: #d6dadb;--border-normal-2: #999999;--border-normal-3: #6e6e6e;--border-hover: #6e6e6e;--border-hover-1: #5c5c5c;--border-active: var(--brand-secondary);--border-disabled: #1d1f20;--border-divider: #2e2e2e;--fill-normal: #0e0e0e;--fill-normal-1: #333333;--fill-hover: #6e6e6e;--fill-active: var(--brand-secondary);--fill-disabled: #1d1f20;--status-default: #eaeced;--status-adjustment: #999999;--status-danger: #cc2e3d;--status-warning: #ffad3a;--status-warning-transparent: rgba(255, 173, 58, 0.16);--status-success: #00a79e;--status-transfer: #ff6444;--status-info: #377cfc;--status-warning-dark: #b3760d;--status-danger-transparent: rgba(255, 68, 79, 0.08);--status-success-transparent: rgba(0, 167, 158, 0.16);--status-colored-background: #ffffff;--status-alert-background: rgba(255, 173, 58, 0.16);--status-warning-dark: #b3760d;--status-info-transparent: rgba(55, 124, 252, 0.16);--transparent-success: rgba(0, 167, 158, 0.92);--transparent-info: rgba(55, 124, 252, 0.16);--transparent-hint: rgba(55, 124, 252, 0.16);--transparent-danger: rgba(255, 68, 79, 0.16);--transparent-correct-message: rgba(75, 180, 179, 0.1607843137);--transparent-fake-message: rgba(236, 63, 63, 0.1607843137);--gradient-success: linear-gradient(to top, #0e0e0e, rgba(0, 167, 158, 0.16));--gradient-danger: linear-gradient(to top, #0e0e0e, rgba(255, 68, 79, 0.16));--contract-gradient-danger: linear-gradient(to top, #0e0e0e 85%, rgba(255, 68, 79, 0.16));--gradient-right-edge: linear-gradient(to right, rgba(14, 14, 14, 0) -5%, #0e0e0e 71%);--gradient-blue: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);--gradient-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);--gradient-green: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);--badge-white: #ffffff;--badge-blue: #0677af;--badge-violet: #2a3052;--badge-green: #00a79e;--traders-hub-banner-border-color: #242828;--traders-hub-logged-out-banner-bg-color: #242828;--wallets-banner-ready-bg-color: #e2f3f3;--wallets-banner-ready-tick-bg-color: #4ab4b3;--wallets-banner-border-color: #242828;--wallets-banner-dot-color: #d6d6d6;--wallets-banner-active-dot-color: #ff444f;--wallets-card-active-gradient-background: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);--wallet-demo-bg-color: #140506;--wallet-demo-divider-color: #323738;--wallet-eu-disclaimer: #e6e9e9;--wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);--demo-text-color-1: #333333;--demo-text-color-2: #333333;--header-background-mt5: #e6f5ff;--header-background-others: #e8fdf8}.p2p{background:rgba(0,0,0,0);height:100%;width:100%;flex:1;display:flex;flex-direction:column;overflow:hidden}@media(min-width: 601px)and (max-width: 1279px){.p2p .dc-mobile-full-page-modal{z-index:5;width:60rem}.p2p .dc-mobile-full-page-modal .dc-page-overlay .dc-page-overlay__header-wrapper{width:60rem}.p2p .dc-mobile-full-page-modal .dc-page-overlay .dc-page-overlay__content>.dc-mobile-full-page-modal{width:60rem;left:50%;transform:translateX(-50%)}[dir=rtl] .p2p .dc-mobile-full-page-modal .dc-page-overlay .dc-page-overlay__content>.dc-mobile-full-page-modal{left:auto;right:50%;transform:translateX(50%)}}.p2p .dc-tabs{width:100%}@media(min-width: 601px)and (max-width: 1279px){.p2p .dc-tabs{width:60rem}}.p2p .dc-tabs>div{overflow-x:auto}.p2p .dc-tabs::-webkit-scrollbar{display:none}@media(max-width: 1279px){.p2p .dc-tabs .dc-themed-scrollbars-wrapper li{flex:1}}.p2p .dc-tabs>.dc-tabs__content{display:flex;flex-direction:column;flex:1}@media(max-width: 1279px){.p2p .dc-tabs>.dc-tabs__content{overflow-y:scroll;overflow-x:hidden}}.p2p .dc-button-menu__wrapper{background-color:var(--state-disabled)}.p2p .dc-button-menu__wrapper .dc-button-menu__button,.p2p .dc-button-menu__wrapper .dc-button-menu__button--active{height:100%}.p2p .dc-button-menu__wrapper .dc-button-menu__button span{color:var(--text-less-prominent)}.p2p .dc-button-menu__wrapper .dc-button-menu__button--active span{color:var(--text-prominent)}.p2p .dc-button-menu--highlight{background-color:var(--state-normal) !important}.p2p__loading{height:80vh;width:100%}@media(max-width: 1279px){.p2p .dc-autocomplete__field{border:none}}\", \"\",{\"version\":3,\"sources\":[\"webpack://./../shared/src/styles/reset.scss\",\"webpack://./../shared/src/styles/themes.scss\",\"webpack://./src/pages/app.scss\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Reset SCSS\\n *  - to make browsers render all elements more consistently\\n *  - Reference:  https://github.com/AdamMarsden/simple-typography/blob/master/_reset.scss\\n *------------------------------------*/\\n\\n/* stylelint-disable */\\nhtml,\\nbody,\\ndiv,\\nspan,\\napplet,\\nobject,\\niframe,\\nh1,\\nh2,\\nh3,\\nh4,\\nh5,\\nh6,\\np,\\nblockquote,\\npre,\\na,\\nabbr,\\nacronym,\\naddress,\\nbig,\\ncite,\\ncode,\\ndel,\\ndfn,\\nem,\\nimg,\\nins,\\nkbd,\\nq,\\ns,\\nsamp,\\nsmall,\\nstrike,\\nstrong,\\nsub,\\nsup,\\ntt,\\nvar,\\nb,\\nu,\\ni,\\ncenter,\\ndl,\\ndt,\\ndd,\\nol,\\nul,\\nli,\\nfieldset,\\nform,\\nlabel,\\nlegend,\\ntable,\\ncaption,\\ntbody,\\ntfoot,\\nthead,\\ntr,\\nth,\\ntd,\\narticle,\\naside,\\ncanvas,\\ndetails,\\nembed,\\nfigure,\\nfigcaption,\\nfooter,\\nheader,\\nhgroup,\\ninput,\\nmenu,\\nnav,\\noutput,\\nruby,\\nsection,\\nsummary,\\ntime,\\nmark,\\naudio,\\nvideo {\\n    margin: 0;\\n    padding: 0;\\n    border: 0;\\n    font: inherit;\\n    vertical-align: baseline;\\n}\\n/* HTML5 display-role reset for older browsers */\\narticle,\\naside,\\ndetails,\\nfigcaption,\\nfigure,\\nfooter,\\nheader,\\nhgroup,\\nmenu,\\nnav,\\nsection {\\n    display: block;\\n}\\n\\nhtml {\\n    height: 100%;\\n    font-size: 10px;\\n}\\n\\nbody {\\n    line-height: 1;\\n    height: 100%;\\n}\\n\\nol,\\nul {\\n    list-style: none;\\n}\\n\\nblockquote,\\nq {\\n    quotes: none;\\n}\\n\\nblockquote:before,\\nblockquote:after,\\nq:before,\\nq:after {\\n    content: '';\\n    content: none;\\n}\\n\\ntable {\\n    border-collapse: collapse;\\n    border-spacing: 0;\\n}\\n\\nstrong {\\n    font-weight: bold;\\n}\\n/* stylelint-enable */\\n\",\":host,\\n:root {\\n    // Text sizes\\n    --text-size-xxxxs: 0.8rem;\\n    --text-size-xxxs: 1rem;\\n    --text-size-xxs: 1.2rem;\\n    --text-size-xs: 1.4rem;\\n    --text-size-s: 1.6rem;\\n    --text-size-xsm: 1.8rem;\\n    --text-size-sm: 2rem;\\n    --text-size-m: 2.4rem;\\n    --text-size-xm: 2.8rem;\\n    --text-size-l: 3.2rem;\\n    --text-size-xl: 4.8rem;\\n    --text-size-xxl: 6.4rem;\\n\\n    //Line Height\\n    --text-lh-xxs: 1;\\n    --text-lh-xs: 1.25;\\n    --text-lh-s: 1.4;\\n    --text-lh-m: 1.5;\\n    --text-lh-l: 1.75;\\n    --text-lh-xl: 2;\\n    --text-lh-xxl: 2.4;\\n\\n    //Font Weight\\n    --text-weight-lighter: lighter;\\n    --text-weight-normal: normal;\\n    --text-weight-bold: bold;\\n    --text-weight-bolder: bolder;\\n\\n    //Text Align\\n    --text-align-left: start;\\n    --text-align-right: right;\\n    --text-align-center: center;\\n    --text-align-end: end;\\n\\n    // Brand primary colors\\n    --brand-white: #{$color-white};\\n    --brand-dark-grey: #{$color-black};\\n    --brand-red-coral: #{$color-red};\\n    --brand-orange: #{$color-orange};\\n    // Brand secondary colors\\n    --brand-secondary: #{$color-green};\\n\\n    // Wallet gradient background\\n    --wallet-airtm: #{$gradient-airtm};\\n    --wallet-banxa: #{$gradient-banxa};\\n    --wallet-bitcoin: #{$gradient-bitcoin};\\n    --wallet-credit: #{$gradient-credit};\\n    --wallet-dp2p: #{$gradient-dp2p};\\n    --wallet-fasapay: #{$gradient-fasapay};\\n    --wallet-jeton: #{$gradient-jeton};\\n    --wallet-mastercard: #{$gradient-mastercard};\\n    --wallet-neteller: #{$gradient-neteller};\\n    --wallet-paylivre: #{$gradient-paylivre};\\n    --wallet-paysafe: #{$gradient-paysafe};\\n    --wallet-perfectmoney: #{gradient-perfectmoney};\\n    --wallet-skrill: #{$gradient-skrill};\\n    --wallet-sticpay: #{$gradient-sticpay};\\n    --wallet-virtual: #{$gradient-virtual};\\n    --wallet-visa: #{$gradient-visa};\\n    --wallet-webmoney: #{$gradient-webmoney};\\n\\n    // App Cards gradient background\\n    --app-card-virtual: #{$gradient-virtual};\\n    --app-card-virtual-swap-free: #{$gradient-virtual-swap-free};\\n\\n    .theme--light {\\n        // General\\n        --general-main-1: #{$color-white};\\n        --general-main-2: #{$color-white};\\n        --general-main-3: #{$color-grey-1};\\n        --general-main-4: #{$alpha-color-white-4};\\n        --general-main-5: #{$color-white};\\n        --general-section-1: #{$color-grey-2};\\n        --general-section-2: #{$color-grey-2};\\n        --general-section-3: #{$color-grey-11};\\n        --general-section-4: #{$color-grey-12};\\n        --general-section-5: #{$color-grey-2};\\n        --general-section-6: #{$color-grey-2};\\n        --general-disabled: #{$color-grey-3};\\n        --general-hover: #{$color-grey-4};\\n        --general-active: #{$color-grey-5};\\n        // Icons and Texts\\n        --text-general: #{$color-black-1};\\n        --text-primary: #{$color-grey-1};\\n        --text-less-prominent: #{$color-grey-1};\\n        --text-prominent: #{$color-black-1};\\n        --text-disabled: #{$color-grey-1};\\n        --text-disabled-1: #{$color-grey-6};\\n        --text-loss-danger: #{$color-red-1};\\n        --text-profit-success: #{$color-green-1};\\n        --text-warning: #{$color-yellow};\\n        --text-red: #{$color-red};\\n        --text-green: #{$color-green-6};\\n        --text-blue: #{$color-blue-3};\\n        --text-info-blue: #{$color-blue};\\n        --text-info-blue-background: #{$color-blue-5};\\n        --text-colored-background: #{$color-white};\\n        --icon-light-background: #{$color-black-9};\\n        --icon-dark-background: #{$color-white};\\n        --icon-grey-background: #{$color-grey-2};\\n        --icon-black-plus: #{$color-black-7};\\n        --text-status-info-blue: #{$color-blue};\\n        --text-hint: #{$color-black-1};\\n        --text-orange: #{$color-orange-2};\\n        // Purchase\\n        --purchase-main-1: #{$color-green-1};\\n        --purchase-section-1: #{$color-green-2};\\n        --purchase-main-2: #{$color-red-1};\\n        --purchase-section-2: #{$color-red-4};\\n        --purchase-disabled-main: #{$color-grey-3};\\n        --purchase-disabled-section: #{$color-grey-4};\\n        // Buttons\\n        --button-primary-default: var(--brand-red-coral);\\n        --button-secondary-default: #{$color-grey-1};\\n        --button-tertiary-default: transparent;\\n        --button-primary-light-default: #{$alpha-color-red-2};\\n        --button-primary-hover: #{$color-red-5};\\n        --button-secondary-hover: #{$alpha-color-black-3};\\n        --button-tertiary-hover: #{$alpha-color-red-1};\\n        --button-primary-light-hover: #{$alpha-color-red-3};\\n        --button-toggle-primary: #{$color-blue-3};\\n        --button-toggle-secondary: #{$color-grey-5};\\n        --button-toggle-alternate: #{$color-white};\\n        --button-get-started-bg: #{$color-black-7};\\n        // Overlay\\n        --overlay-outside-dialog: #{$alpha-color-black-1};\\n        --overlay-inside-dialog: #{$alpha-color-white-1};\\n        // Shadow\\n        --shadow-menu: #{$alpha-color-black-4};\\n        --shadow-menu-2: #{$alpha-color-black-4};\\n        --shadow-drop: #{$alpha-color-black-3};\\n        --shadow-box: #{$COLOR_LIGHT_BLACK_2};\\n        // States\\n        --state-normal: #{$color-white};\\n        --state-hover: #{$color-grey-4};\\n        --state-active: #{$color-grey-5};\\n        --state-disabled: #{$color-grey-3};\\n        --checkbox-disabled-grey: #{$color-grey-6};\\n        --sidebar-tab: #{$color-grey-6};\\n        // Border\\n        --border-normal: #{$color-grey-5};\\n        --border-normal-1: #{$color-grey-5};\\n        --border-normal-2: #{$color-grey-5};\\n        --border-normal-3: #{$color-grey-6};\\n        --border-hover: #{$color-grey-1};\\n        --border-hover-1: #{$color-black-9};\\n        --border-active: var(--brand-secondary);\\n        --border-disabled: #{$color-grey-3};\\n        --border-divider: #{$color-grey-2};\\n        // Fill\\n        --fill-normal: #{$color-white};\\n        --fill-normal-1: #{$color-grey};\\n        --fill-hover: #{$color-grey-1};\\n        --fill-active: var(--brand-secondary);\\n        --fill-disabled: #{$color-grey-3};\\n        // Status\\n        --status-default: #{$color-grey-3};\\n        --status-adjustment: #{$color-grey-1};\\n        --status-danger: #{$color-red-1};\\n        --status-danger-transparent: #{$alpha-color-red-2};\\n        --status-success: #{$color-green-1};\\n        --status-success-transparent: #{$alpha-color-green-3};\\n        --status-warning: #{$color-yellow};\\n        --status-warning-dark: #{$color-yellow-1};\\n        --status-info-transparent: #{$alpha-color-blue-1};\\n        --status-warning-transparent: #{$alpha-color-yellow-1};\\n        --status-transfer: #{$color-orange};\\n        --status-info: #{$color-blue};\\n        --status-colored-background: #{$color-white};\\n        --status-alert-background: #{$color-yellow-3};\\n        // Dashboard\\n        --dashboard-swap-free: #{$gradient-color-black-3};\\n        --dashboard-app: #{$gradient-color-black-4};\\n        // Payment methods\\n        --payment-skrill: #{$gradient-color-purple};\\n        --payment-visa: #{$gradient-color-blue};\\n        --payment-mastercard: #{$gradient-color-orange};\\n        --payment-credit-and-debit: #{$gradient-color-black-2};\\n        --payment-bitcoin: #{$gradient-color-orange-2};\\n        --payment-usd-coin: #{$gradient-color-blue-2};\\n        --payment-neteller: #{$gradient-color-green-3};\\n        --payment-webmoney: #{$gradient-color-blue-3};\\n        --payment-jeton: #{$gradient-color-orange-3};\\n        --payment-sticpay: #{$gradient-color-orange-4};\\n        --payment-airtm: #{$gradient-color-blue-4};\\n        --payment-dp2p: #{$gradient-color-red-3};\\n        --payment-deriv: #{$gradient-color-red-4};\\n        // Transparentize\\n        --transparent-success: #{$alpha-color-green-1};\\n        --transparent-info: #{$alpha-color-blue-1};\\n        --transparent-hint: #{$alpha-color-blue-3};\\n        --transparent-danger: #{$alpha-color-red-2};\\n        --transparent-correct-message: #{$color-green-5};\\n        --transparent-fake-message: #{$color-red-6};\\n        /* TODO: change to styleguide later */\\n        // Gradient\\n        --gradient-success: #{$gradient-color-green-1};\\n        --gradient-danger: #{$gradient-color-red-1};\\n        --contract-gradient-danger: #{$contract-gradient-color-red-1};\\n        --gradient-right-edge: #{$gradient-color-white};\\n        --gradient-blue: #{$gradient-color-blue-5};\\n        --gradient-gold: #{$gradient-color-gold};\\n        --gradient-green: #{$gradient-color-green-4};\\n        // Badge\\n        --badge-white: #{$color-white};\\n        --badge-blue: #{$color-blue-4};\\n        --badge-violet: #{$color-blue-2};\\n        --badge-green: #{$color-green-3};\\n        //TradersHub Banner\\n        --traders-hub-banner-border-color: #{$color-grey-4};\\n        --traders-hub-logged-out-banner-bg-color: #{$color-grey-15};\\n        // wallets\\n        --wallets-banner-ready-bg-color: #{$ready-banner-bg-color};\\n        --wallets-banner-ready-tick-bg-color: #{$ready-banner-tick-bg-color};\\n        --wallets-banner-border-color: #{$color-grey-4};\\n        --wallets-banner-dot-color: #{$color-grey-6};\\n        --wallets-banner-active-dot-color: #{$color-red};\\n        --wallets-card-active-gradient-background: #{$gradient-color-black-5};\\n        --wallet-demo-bg-color: #{$wallet-demo-bg-color};\\n        --wallet-demo-divider-color: #{$wallet-demo-divider-color};\\n        --wallet-eu-disclaimer: #{$color-grey-4};\\n        --wallet-box-shadow: #{$wallet-box-shadow};\\n        // Demo view\\n        --demo-text-color-1: #{$color-grey};\\n        --demo-text-color-2: #{$color-white};\\n        // Header\\n        --header-background-mt5: #{$color-blue-8};\\n        --header-background-others: #{$color-green-7};\\n    }\\n    .theme--dark {\\n        // General\\n        --general-main-1: #{$color-black};\\n        --general-main-2: #{$color-black-3};\\n        --general-main-3: #{$color-black-4};\\n        --general-main-4: #{$alpha-color-black-7};\\n        --general-main-5: #{$color-black-10};\\n        --general-section-1: #{$color-black-3};\\n        --general-section-2: #{$color-black};\\n        --general-section-3: #{$color-black-5};\\n        // @TODO: get color from design\\n        --general-section-4: #{$color-black-5};\\n        --general-section-5: #{$color-black-5};\\n        --general-section-6: #{$color-grey-7};\\n        --general-disabled: #{$color-black-4};\\n        --general-hover: #{$color-black-5};\\n        --general-active: #{$color-black-8};\\n        // Icons and Texts\\n        --text-prominent: #{$color-white};\\n        --text-general: #{$color-grey};\\n        --text-less-prominent: #{$color-grey-7};\\n        --text-primary: #{$color-grey-1};\\n        --text-disabled: #{$color-black-6};\\n        --text-disabled-1: #{$color-black-6};\\n        --text-profit-success: #{$color-green-3};\\n        --text-loss-danger: #{$color-red-2};\\n        --text-red: #{$color-red};\\n        --text-colored-background: #{$color-white};\\n        --text-info-blue: #{$color-blue-6};\\n        --text-info-blue-background: #{$color-blue-7};\\n        --text-status-info-blue: #{$color-blue};\\n        --text-hint: #{$color-grey};\\n        --icon-light-background: #{$color-black-9};\\n        --icon-dark-background: #{$color-white};\\n        --icon-grey-background: #{$color-black-1};\\n        --icon-black-plus: #{$color-white};\\n        // Purchase\\n        --purchase-main-1: #{$color-green-3};\\n        --purchase-section-1: #{$color-green-4};\\n        --purchase-main-2: #{$color-red-2};\\n        --purchase-section-2: #{$color-red-3};\\n        --purchase-disabled-main: #{$color-black-4};\\n        --purchase-disabled-section: #{$color-black};\\n        // Buttons\\n        --button-primary-default: var(--brand-red-coral);\\n        --button-secondary-default: #{$color-grey-7};\\n        --button-tertiary-default: transparent;\\n        --button-primary-light-default: #{$alpha-color-red-2};\\n        --button-primary-hover: #{$color-red-5};\\n        --button-secondary-hover: #{$alpha-color-white-3};\\n        --button-tertiary-hover: #{$alpha-color-red-1};\\n        --button-primary-light-hover: #{$alpha-color-red-3};\\n        --button-toggle-primary: #{$color-blue-3};\\n        --button-toggle-secondary: #{$color-black-8};\\n        --button-toggle-alternate: #{$color-black-8};\\n        --button-get-started-bg: #{$color-white};\\n        // Overlay\\n        --overlay-outside-dialog: #{$alpha-color-black-1};\\n        --overlay-inside-dialog: #{$alpha-color-black-2};\\n        // Shadow\\n        --shadow-menu: #{$alpha-color-black-5};\\n        --shadow-menu-2: #{$alpha-color-black-1};\\n        --shadow-drop: #{$alpha-color-black-6};\\n        --shadow-box: #{$COLOR_DARK_GRAY_3};\\n        // States\\n        --state-normal: #{$color-black};\\n        --state-hover: #{$color-black-5};\\n        --state-active: #{$color-black-8};\\n        --state-disabled: #{$color-black-4};\\n        --checkbox-disabled-grey: #{$color-grey-6};\\n        --sidebar-tab: #{$color-grey-7};\\n        // Border\\n        --border-normal: #{$color-black-8};\\n        --border-normal-1: #{$color-grey-5};\\n        --border-normal-2: #{$color-grey-1};\\n        --border-normal-3: #{$color-grey-7};\\n        --border-hover: #{$color-grey-7};\\n        --border-hover-1: #{$color-black-9};\\n        --border-active: var(--brand-secondary);\\n        --border-disabled: #{$color-black-4};\\n        --border-divider: #{$color-grey-13};\\n        // Fill\\n        --fill-normal: #{$color-black};\\n        --fill-normal-1: #{$color-black-1};\\n        --fill-hover: #{$color-grey-7};\\n        --fill-active: var(--brand-secondary);\\n        --fill-disabled: #{$color-black-4};\\n        // Status\\n        --status-default: #{$color-grey-3};\\n        --status-adjustment: #{$color-grey-1};\\n        --status-danger: #{$color-red-2};\\n        --status-warning: #{$color-yellow};\\n        --status-warning-transparent: #{$alpha-color-yellow-1};\\n        --status-success: #{$color-green-3};\\n        --status-transfer: #{$color-orange};\\n        --status-info: #{$color-blue};\\n        --status-warning-dark: #{$color-yellow-1};\\n        --status-danger-transparent: #{$alpha-color-red-1};\\n        --status-success-transparent: #{$alpha-color-green-3};\\n        --status-colored-background: #{$color-white};\\n        --status-alert-background: #{$color-yellow-3};\\n        --status-warning-dark: #{$color-yellow-1};\\n        --status-info-transparent: #{$alpha-color-blue-1};\\n        // Transparentize\\n        --transparent-success: #{$alpha-color-green-2};\\n        --transparent-info: #{$alpha-color-blue-1};\\n        --transparent-hint: #{$alpha-color-blue-1};\\n        --transparent-danger: #{$alpha-color-red-2};\\n        --transparent-correct-message: #{$color-green-5};\\n        --transparent-fake-message: #{$color-red-6};\\n        /* TODO: change to styleguide later */\\n        // Gradient\\n        --gradient-success: #{$gradient-color-green-2};\\n        --gradient-danger: #{$gradient-color-red-2};\\n        --contract-gradient-danger: #{$contract-gradient-color-red-2};\\n        --gradient-right-edge: #{$gradient-color-black};\\n        --gradient-blue: #{$gradient-color-blue-5};\\n        --gradient-gold: #{$gradient-color-gold};\\n        --gradient-green: #{$gradient-color-green-4};\\n        // Badge\\n        --badge-white: #{$color-white};\\n        --badge-blue: #{$color-blue-4};\\n        --badge-violet: #{$color-blue-2};\\n        --badge-green: #{$color-green-3};\\n        //TradersHub Banner\\n        --traders-hub-banner-border-color: #{$color-black-5};\\n        --traders-hub-logged-out-banner-bg-color: #{$color-black-5};\\n        // wallets\\n        --wallets-banner-ready-bg-color: #{$ready-banner-bg-color};\\n        --wallets-banner-ready-tick-bg-color: #{$ready-banner-tick-bg-color};\\n        --wallets-banner-border-color: #{$color-black-5};\\n        --wallets-banner-dot-color: #{$color-grey-6};\\n        --wallets-banner-active-dot-color: #{$color-red};\\n        --wallets-card-active-gradient-background: #{$gradient-color-white-2};\\n        --wallet-demo-bg-color: #{$wallet-dark-demo-bg-color};\\n        --wallet-demo-divider-color: #{$color-black-8};\\n        --wallet-eu-disclaimer: #{$color-grey-4};\\n        --wallet-box-shadow: #{$wallet-box-shadow};\\n        // Demo view\\n        --demo-text-color-1: #{$color-black-1};\\n        --demo-text-color-2: #{$color-black-1};\\n        // Header\\n        --header-background-mt5: #{$color-blue-8};\\n        --header-background-others: #{$color-green-7};\\n    }\\n}\\n\",\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@import '../../../shared/src/styles/reset.scss';\\n@import '../../../shared/src/styles/themes.scss';\\n\\n.p2p {\\n    background: transparent;\\n    height: 100%;\\n    width: 100%;\\n    flex: 1;\\n    display: flex;\\n    flex-direction: column;\\n    overflow: hidden;\\n\\n    @include tablet-screen {\\n        & .dc-mobile-full-page-modal {\\n            z-index: 5;\\n            width: 60rem;\\n            & .dc-page-overlay {\\n                & .dc-page-overlay__header {\\n                    &-wrapper {\\n                        width: 60rem;\\n                    }\\n                }\\n                & .dc-page-overlay__content {\\n                    & > .dc-mobile-full-page-modal {\\n                        width: 60rem;\\n                        left: 50%;\\n                        transform: translateX(-50%);\\n                        @include rtl {\\n                            left: auto;\\n                            right: 50%; /* For RTL layout */\\n                            transform: translateX(50%);\\n                        }\\n                    }\\n                }\\n            }\\n        }\\n    }\\n\\n    & .dc-tabs {\\n        width: 100%;\\n\\n        @include tablet-screen {\\n            width: 60rem;\\n        }\\n\\n        & > div {\\n            overflow-x: auto;\\n        }\\n\\n        &::-webkit-scrollbar {\\n            display: none;\\n        }\\n\\n        .dc-themed-scrollbars-wrapper li {\\n            @include mobile-or-tablet-screen {\\n                flex: 1;\\n            }\\n        }\\n\\n        > .dc-tabs__content {\\n            display: flex;\\n            flex-direction: column;\\n            flex: 1;\\n\\n            @include mobile-or-tablet-screen {\\n                overflow-y: scroll;\\n                overflow-x: hidden;\\n            }\\n        }\\n    }\\n\\n    & .dc-button-menu {\\n        &__wrapper {\\n            background-color: var(--state-disabled);\\n\\n            .dc-button-menu {\\n                &__button,\\n                &__button--active {\\n                    height: 100%;\\n                }\\n                &__button {\\n                    span {\\n                        color: var(--text-less-prominent);\\n                    }\\n                    &--active {\\n                        span {\\n                            color: var(--text-prominent);\\n                        }\\n                    }\\n                }\\n            }\\n        }\\n        &--highlight {\\n            background-color: var(--state-normal) !important;\\n        }\\n    }\\n\\n    &__loading {\\n        height: 80vh;\\n        width: 100%;\\n    }\\n\\n    @include mobile-or-tablet-screen {\\n        .dc-autocomplete__field {\\n            border: none;\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".buy-sell-header{display:flex;flex-direction:column}@media(min-width: 1280px){.buy-sell-header .p2p-toggle-container{margin:2.4rem 0}}@media(max-width: 1279px){.buy-sell-header{position:absolute;background-color:var(--general-main-1);border-bottom:1px solid var(--general-section-1);display:flex;flex:none;justify-content:center;transition:transform .3s linear,opacity .3s ease;transform-origin:top;width:100%;z-index:1}.buy-sell-header .toggle-container{align-self:start}}.buy-sell-header__container{display:flex;flex-direction:row;justify-content:space-between}@media(max-width: 1279px){.buy-sell-header__container{flex-direction:column}}.buy-sell-header__filters{height:3.6rem;width:16.8rem}@media(max-width: 1279px){.buy-sell-header__filters{transition:transform .3s linear,opacity .3s ease;transform-origin:top}}.buy-sell-header__match-ads{display:flex;flex-direction:row}@media(min-width: 1280px){[dir=\\\"ltr\\\"] .buy-sell-header__match-ads .dc-checkbox__box{margin-left:0;margin-left:initial}[dir=\\\"rtl\\\"] .buy-sell-header__match-ads .dc-checkbox__box{margin-right:0;margin-right:initial}}@media(max-width: 1279px){.buy-sell-header__match-ads{margin:.9rem .8rem}}[dir=\\\"ltr\\\"] .buy-sell-header__match-ads__popover{margin-left:.4rem}[dir=\\\"rtl\\\"] .buy-sell-header__match-ads__popover{margin-right:.4rem}.buy-sell-header__match-ads__popover{align-self:flex-end}.buy-sell-header__row{display:flex;flex-direction:row;align-items:center}@media(max-width: 1279px){.buy-sell-header__row{display:grid;grid-template-columns:auto 40px 40px;grid-column-gap:1rem;-moz-column-gap:1rem;column-gap:1rem;border-top:1px solid var(--general-section-1);padding:1.6rem}}@media(max-width: 1279px)and (min-width: 601px)and (max-width: 1279px){.buy-sell-header__row{padding:0rem 1.6rem}}[dir=\\\"ltr\\\"] .buy-sell-header__row--filter{margin-left:.8rem}[dir=\\\"rtl\\\"] .buy-sell-header__row--filter{margin-right:.8rem}.buy-sell-header__row--filter{align-self:center;border:1px solid var(--border-normal);border-radius:4px;display:flex;position:relative}.buy-sell-header__row--filter-icon{align-self:center;display:flex;padding:1.3rem}[dir=\\\"ltr\\\"] .buy-sell-header__row--filter-status{right:4px}[dir=\\\"rtl\\\"] .buy-sell-header__row--filter-status{left:4px}.buy-sell-header__row--filter-status{position:absolute;border-radius:50px;background:var(--status-danger);width:7px;height:7px;top:4px}.buy-sell-header__row--filter-status--disabled{display:none}@media(max-width: 1279px){[dir=\\\"ltr\\\"] .buy-sell-header__row--filter{margin-left:0}[dir=\\\"rtl\\\"] .buy-sell-header__row--filter{margin-right:0}.buy-sell-header__row--filter{justify-self:center;margin-top:0}}@media(max-width: 600px){.buy-sell-header__row--selector{grid-template-columns:auto 1fr 40px 40px}}@media(min-width: 601px)and (max-width: 1279px){.buy-sell-header__row--selector{grid-template-columns:auto .45fr 40px 40px}.buy-sell-header__row--selector .search-box{width:100%}.buy-sell-header__row--selector .currency-dropdown{display:flex;justify-content:flex-end}}.buy-sell-header__position-static{position:static}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/pages/buy-sell/buy-sell-header.scss\"],\"names\":[],\"mappings\":\"AAysBA,iBACI,YAAA,CACA,qBAAA,CA/BA,0BAkCI,uCACI,eAAA,CAAA,CA7BR,0BAuBJ,iBAWQ,iBAAA,CACA,sCAAA,CACA,gDAAA,CACA,YAAA,CACA,SAAA,CACA,sBAAA,CACA,gDAAA,CACA,oBAAA,CACA,UAAA,CACA,SAAA,CAEA,mCACI,gBAAA,CAAA,CAIR,4BACI,YAAA,CACA,kBAAA,CACA,6BAAA,CArDJ,0BAkDA,4BAMQ,qBAAA,CAAA,CAIR,0BACI,aAAA,CACA,aAAA,CA9DJ,0BA4DA,0BAKQ,gDAAA,CACA,oBAAA,CAAA,CAIR,4BACI,YAAA,CACA,kBAAA,CA9EJ,0BAiFQ,0DACI,aAAA,CAAA,mBAAA,CADJ,0DACI,cAAA,CAAA,oBAAA,CAAA,CA5EZ,0BAsEA,4BAWQ,kBAAA,CAAA,CAGJ,iDAEI,iBAAA,CAFJ,iDAEI,kBAAA,CAFJ,qCACI,mBACA,CAIR,sBACI,YAAA,CACA,kBAAA,CACA,kBAAA,CA7FJ,0BA0FA,sBAMQ,YAAA,CACA,oCAAA,CACA,oBAAA,CAAA,oBAAA,CAAA,eAAA,CACA,6CAAA,CACA,cAAA,CAAA,CAhHR,uEAsGA,sBAaY,mBAAA,CAAA,CAIR,0CAKI,iBACA,CANJ,0CAKI,kBACA,CANJ,8BACI,iBAAA,CACA,qCAAA,CACA,iBAAA,CACA,YAAA,CAEA,iBAAA,CAEA,mCACI,iBAAA,CACA,YAAA,CACA,cAAA,CAGJ,iDAOI,SAAA,CAPJ,iDAOI,QAAA,CAPJ,qCACI,iBAAA,CACA,kBAAA,CACA,+BAAA,CACA,SAAA,CACA,UAAA,CACA,OACA,CAEA,+CACI,YAAA,CAnIhB,0BA2GI,0CA8BQ,aACA,CA/BR,0CA8BQ,cACA,CA/BR,8BA6BQ,mBAAA,CAEA,YAAA,CAAA,CA5JZ,yBAgKI,gCAEQ,wCAAA,CAAA,CA5JZ,gDA0JI,gCAKQ,0CAAA,CAEA,4CACI,UAAA,CAGJ,mDACI,YAAA,CACA,wBAAA,CAAA,CAMhB,kCACI,eAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n.buy-sell-header {\\n    display: flex;\\n    flex-direction: column;\\n\\n    @include desktop-screen {\\n        .p2p-toggle-container {\\n            margin: 2.4rem 0;\\n        }\\n    }\\n\\n    @include mobile-or-tablet-screen {\\n        position: absolute;\\n        background-color: var(--general-main-1);\\n        border-bottom: 1px solid var(--general-section-1);\\n        display: flex;\\n        flex: none;\\n        justify-content: center;\\n        transition: transform 0.3s linear, opacity 0.3s ease;\\n        transform-origin: top;\\n        width: 100%;\\n        z-index: 1;\\n\\n        & .toggle-container {\\n            align-self: start;\\n        }\\n    }\\n\\n    &__container {\\n        display: flex;\\n        flex-direction: row;\\n        justify-content: space-between;\\n\\n        @include mobile-or-tablet-screen {\\n            flex-direction: column;\\n        }\\n    }\\n\\n    &__filters {\\n        height: 3.6rem;\\n        width: 16.8rem;\\n\\n        @include mobile-or-tablet-screen {\\n            transition: transform 0.3s linear, opacity 0.3s ease;\\n            transform-origin: top;\\n        }\\n    }\\n\\n    &__match-ads {\\n        display: flex;\\n        flex-direction: row;\\n\\n        @include desktop-screen {\\n            .dc-checkbox__box {\\n                margin-inline-start: unset;\\n            }\\n        }\\n\\n        @include mobile-or-tablet-screen {\\n            margin: 0.9rem 0.8rem;\\n        }\\n\\n        &__popover {\\n            align-self: flex-end;\\n            margin-inline-start: 0.4rem;\\n        }\\n    }\\n\\n    &__row {\\n        display: flex;\\n        flex-direction: row;\\n        align-items: center;\\n\\n        @include mobile-or-tablet-screen {\\n            display: grid;\\n            grid-template-columns: auto 40px 40px;\\n            column-gap: 1rem;\\n            border-top: 1px solid var(--general-section-1);\\n            padding: 1.6rem;\\n\\n            @include tablet-screen {\\n                padding: 0rem 1.6rem;\\n            }\\n        }\\n\\n        &--filter {\\n            align-self: center;\\n            border: 1px solid var(--border-normal);\\n            border-radius: 4px;\\n            display: flex;\\n            margin-inline-start: 0.8rem;\\n            position: relative;\\n\\n            &-icon {\\n                align-self: center;\\n                display: flex;\\n                padding: 1.3rem;\\n            }\\n\\n            &-status {\\n                position: absolute;\\n                border-radius: 50px;\\n                background: var(--status-danger);\\n                width: 7px;\\n                height: 7px;\\n                top: 4px;\\n                inset-inline-end: 4px;\\n\\n                &--disabled {\\n                    display: none;\\n                }\\n            }\\n\\n            @include mobile-or-tablet-screen {\\n                justify-self: center;\\n                margin-inline-start: 0;\\n                margin-top: 0;\\n            }\\n        }\\n\\n        &--selector {\\n            @include mobile-screen {\\n                grid-template-columns: auto 1fr 40px 40px;\\n            }\\n            @include tablet-screen {\\n                grid-template-columns: auto 0.45fr 40px 40px;\\n\\n                & .search-box {\\n                    width: 100%;\\n                }\\n\\n                & .currency-dropdown {\\n                    display: flex;\\n                    justify-content: flex-end;\\n                }\\n            }\\n        }\\n    }\\n\\n    &__position-static {\\n        position: static;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"@media(max-width: 1279px){.buy-sell-row{border-bottom:1px solid var(--general-section-1);padding:1.6rem;min-height:18.6rem;display:flex;flex-direction:column}}.buy-sell-row__advertiser{display:flex;flex-direction:row;align-items:center;margin-bottom:1.6rem}.buy-sell-row__advertiser-name{display:flex;flex-direction:column;margin-left:.8rem}.buy-sell-row__advertiser-name--text{padding-right:.4rem}.buy-sell-row__advertiser-arrow{margin-left:auto}.buy-sell-row__information{align-items:center;display:flex;flex-direction:row;justify-content:space-between}@media(max-width: 1279px){.buy-sell-row__information{display:grid;grid-template-columns:3fr 1.7fr;grid-template-rows:2fr 1fr}}@media(max-width: 1279px){.buy-sell-row__payment-methods-list{grid-column:1/3;grid-row:2;display:flex;margin-left:4rem}}.buy-sell-row__no-match{align-items:center;border-bottom:1px solid var(--general-section-1);display:flex;height:5.6rem;justify-content:center}.buy-sell-row__payment-method{display:flex;flex-wrap:wrap}.buy-sell-row__payment-method--label{align-items:center;border:1px solid var(--border-normal);border-radius:.4rem;flex-direction:row;padding:0 .8rem;margin:.25rem;width:-moz-fit-content;width:fit-content}@media(max-width: 1279px){.buy-sell-row__payment-method{align-items:center;border:1px solid var(--border-normal);border-radius:.4rem;flex-direction:row;margin:.25rem;width:-moz-fit-content;width:fit-content;padding:.8rem}}@media(max-width: 1279px)and (min-width: 601px)and (max-width: 1279px){.buy-sell-row__payment-method{padding:.3rem .8rem}}@media(max-width: 320px){.buy-sell-row__payment-method{padding:.4rem}}.buy-sell-row__button{align-self:flex-start;display:flex;flex-flow:row wrap;white-space:inherit;height:-moz-fit-content;height:fit-content;max-height:7rem;margin-left:auto;padding:1rem 1.6rem;text-wrap:nowrap}@media(min-width: 601px)and (max-width: 1279px){.buy-sell-row__button{justify-self:flex-end;width:-moz-fit-content;width:fit-content}}.buy-sell-row__rate{grid-column:1;grid-row:1;display:flex;flex-direction:column}.buy-sell-row__rate>:last-child{margin-top:.8rem}@media(max-width: 1279px){.buy-sell-row__rate{margin-left:4rem}}.buy-sell-row__rating{margin-top:.1rem}.buy-sell-row__rating--star{pointer-events:none}.buy-sell-row__rating--star>svg{margin-right:.1rem}.buy-sell-row__rating--row{display:flex;align-items:center;gap:.7rem}.buy-sell-row__table-cell--left{align-items:flex-start;display:flex;flex-direction:column}.buy-sell-row__table-cell--right{align-items:flex-end}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/pages/buy-sell/buy-sell-row.scss\"],\"names\":[],\"mappings\":\"AAkrBI,0BAuBJ,cAEQ,gDAAA,CACA,cAAA,CACA,kBAAA,CACA,YAAA,CACA,qBAAA,CAAA,CAGJ,0BACI,YAAA,CACA,kBAAA,CACA,kBAAA,CACA,oBAAA,CAEA,+BACI,YAAA,CACA,qBAAA,CACA,iBAAA,CAEA,qCACI,mBAAA,CAIR,gCACI,gBAAA,CAIR,2BACI,kBAAA,CACA,YAAA,CACA,kBAAA,CACA,6BAAA,CAzDJ,0BAqDA,2BAOQ,YAAA,CACA,+BAAA,CACA,0BAAA,CAAA,CA9DR,0BAkEA,oCAEQ,eAAA,CACA,UAAA,CACA,YAAA,CACA,gBAAA,CAAA,CAIR,wBACI,kBAAA,CACA,gDAAA,CACA,YAAA,CACA,aAAA,CACA,sBAAA,CAGJ,8BACI,YAAA,CACA,cAAA,CAEA,qCACI,kBAAA,CACA,qCAAA,CACA,mBAAA,CACA,kBAAA,CACA,eAAA,CACA,aAAA,CACA,sBAAA,CAAA,iBAAA,CA9FR,0BAmFA,8BAeQ,kBAAA,CACA,qCAAA,CACA,mBAAA,CACA,kBAAA,CACA,aAAA,CACA,sBAAA,CAAA,iBAAA,CACA,aAAA,CAAA,CApHR,uEA+FA,8BAwBY,mBAAA,CAAA,CAIR,yBA5BJ,8BA6BQ,aAAA,CAAA,CAIR,sBACI,qBAAA,CACA,YAAA,CACA,kBAAA,CACA,mBAAA,CACA,uBAAA,CAAA,kBAAA,CACA,eAAA,CACA,gBAAA,CACA,mBAAA,CACA,gBAAA,CAzIJ,gDAgIA,sBAYQ,qBAAA,CACA,sBAAA,CAAA,iBAAA,CAAA,CAIR,oBACI,aAAA,CACA,UAAA,CACA,YAAA,CACA,qBAAA,CAEA,gCACI,gBAAA,CA5IR,0BAqIA,oBAWQ,gBAAA,CAAA,CAIR,sBACI,gBAAA,CAEA,4BACI,mBAAA,CAEA,gCACI,kBAAA,CAIR,2BACI,YAAA,CACA,kBAAA,CACA,SAAA,CAKJ,gCACI,sBAAA,CACA,YAAA,CACA,qBAAA,CAEJ,iCACI,oBAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n.buy-sell-row {\\n    @include mobile-or-tablet-screen {\\n        border-bottom: 1px solid var(--general-section-1);\\n        padding: 1.6rem;\\n        min-height: 18.6rem;\\n        display: flex;\\n        flex-direction: column;\\n    }\\n\\n    &__advertiser {\\n        display: flex;\\n        flex-direction: row;\\n        align-items: center;\\n        margin-bottom: 1.6rem;\\n\\n        &-name {\\n            display: flex;\\n            flex-direction: column;\\n            margin-left: 0.8rem;\\n\\n            &--text {\\n                padding-right: 0.4rem;\\n            }\\n        }\\n\\n        &-arrow {\\n            margin-left: auto;\\n        }\\n    }\\n\\n    &__information {\\n        align-items: center;\\n        display: flex;\\n        flex-direction: row;\\n        justify-content: space-between;\\n\\n        @include mobile-or-tablet-screen {\\n            display: grid;\\n            grid-template-columns: 3fr 1.7fr;\\n            grid-template-rows: 2fr 1fr;\\n        }\\n    }\\n\\n    &__payment-methods-list {\\n        @include mobile-or-tablet-screen {\\n            grid-column: 1 / 3;\\n            grid-row: 2;\\n            display: flex;\\n            margin-left: 4rem;\\n        }\\n    }\\n\\n    &__no-match {\\n        align-items: center;\\n        border-bottom: 1px solid var(--general-section-1);\\n        display: flex;\\n        height: 5.6rem;\\n        justify-content: center;\\n    }\\n\\n    &__payment-method {\\n        display: flex;\\n        flex-wrap: wrap;\\n\\n        &--label {\\n            align-items: center;\\n            border: 1px solid var(--border-normal);\\n            border-radius: 0.4rem;\\n            flex-direction: row;\\n            padding: 0 0.8rem;\\n            margin: 0.25rem;\\n            width: fit-content;\\n        }\\n\\n        @include mobile-or-tablet-screen {\\n            align-items: center;\\n            border: 1px solid var(--border-normal);\\n            border-radius: 0.4rem;\\n            flex-direction: row;\\n            margin: 0.25rem;\\n            width: fit-content;\\n            padding: 0.8rem;\\n\\n            @include tablet-screen {\\n                padding: 0.3rem 0.8rem;\\n            }\\n        }\\n\\n        @media (max-width: 320px) {\\n            padding: 0.4rem;\\n        }\\n    }\\n\\n    &__button {\\n        align-self: flex-start;\\n        display: flex;\\n        flex-flow: row wrap;\\n        white-space: inherit;\\n        height: fit-content;\\n        max-height: 7rem;\\n        margin-left: auto;\\n        padding: 1rem 1.6rem;\\n        text-wrap: nowrap;\\n\\n        @include tablet-screen {\\n            justify-self: flex-end;\\n            width: fit-content;\\n        }\\n    }\\n\\n    &__rate {\\n        grid-column: 1;\\n        grid-row: 1;\\n        display: flex;\\n        flex-direction: column;\\n\\n        > :last-child {\\n            margin-top: 0.8rem;\\n        }\\n\\n        @include mobile-or-tablet-screen {\\n            margin-left: 4rem;\\n        }\\n    }\\n\\n    &__rating {\\n        margin-top: 0.1rem;\\n\\n        &--star {\\n            pointer-events: none;\\n\\n            > svg {\\n                margin-right: 0.1rem;\\n            }\\n        }\\n\\n        &--row {\\n            display: flex;\\n            align-items: center;\\n            gap: 0.7rem;\\n        }\\n    }\\n\\n    &__table-cell {\\n        &--left {\\n            align-items: flex-start;\\n            display: flex;\\n            flex-direction: column;\\n        }\\n        &--right {\\n            align-items: flex-end;\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".buy-sell-table{display:flex;flex:1;flex-direction:column}.buy-sell-table__body{height:100%;flex:1;display:flex;flex-direction:column}.buy-sell-table__header{display:grid;grid-template-columns:2fr 1.4fr 1fr 1.8fr .8fr}.buy-sell-table__header>.dc-table__head:first-child{margin-left:1.6rem}.buy-sell-table__row{padding:1.6rem;grid-template-columns:2fr 1.5fr 1fr 1.5fr 1fr}.buy-sell-table__row:hover{background-color:var(--general-hover)}.buy-sell-table--sort{display:flex;flex-direction:column;margin:1.2rem 2.4rem}.buy-sell-table--sort--divider{border-top:1px solid var(--border-normal)}.buy-sell-table--sort-radiogroup{height:10rem;display:flex;flex-direction:column}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/pages/buy-sell/buy-sell-table.scss\"],\"names\":[],\"mappings\":\"AAysBA,gBACI,YAAA,CACA,MAAA,CACA,qBAAA,CAEA,sBACI,WAAA,CACA,MAAA,CACA,YAAA,CACA,qBAAA,CAGJ,wBACI,YAAA,CACA,8CAAA,CAEA,oDACI,kBAAA,CAIR,qBACI,cAAA,CACA,6CAAA,CAEA,2BACI,qCAAA,CAIR,sBACI,YAAA,CACA,qBAAA,CACA,oBAAA,CAEA,+BACI,yCAAA,CAGJ,iCACI,YAAA,CACA,YAAA,CACA,qBAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n.buy-sell-table {\\n    display: flex;\\n    flex: 1;\\n    flex-direction: column;\\n\\n    &__body {\\n        height: 100%;\\n        flex: 1;\\n        display: flex;\\n        flex-direction: column;\\n    }\\n\\n    &__header {\\n        display: grid;\\n        grid-template-columns: 2fr 1.4fr 1fr 1.8fr 0.8fr;\\n\\n        > .dc-table__head:first-child {\\n            margin-left: 1.6rem;\\n        }\\n    }\\n\\n    &__row {\\n        padding: 1.6rem;\\n        grid-template-columns: 2fr 1.5fr 1fr 1.5fr 1fr;\\n\\n        &:hover {\\n            background-color: var(--general-hover);\\n        }\\n    }\\n\\n    &--sort {\\n        display: flex;\\n        flex-direction: column;\\n        margin: 1.2rem 2.4rem;\\n\\n        &--divider {\\n            border-top: 1px solid var(--border-normal);\\n        }\\n\\n        &-radiogroup {\\n            height: 10rem;\\n            display: flex;\\n            flex-direction: column;\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".buy-sell{flex:1;display:flex;flex-direction:column;position:relative}.buy-sell__advertiser-page-return{margin-top:0;margin-top:initial}.buy-sell__advertiser-page-return .dc-text{align-self:flex-start}@media(max-width: 1279px){.buy-sell__advertiser-page-return{border-bottom:1px solid var(--general-section-1);margin:0;margin:initial;padding:1.2rem 0}.buy-sell__advertiser-page-return .page-return__button{padding:0 1.6rem}.buy-sell__advertiser-page-return .dc-text{align-self:self-end}}@media(max-width: 1279px){.buy-sell__empty{margin-top:calc(17.2rem + 2.6rem)}}.buy-sell__data-list{flex:1}.buy-sell__data-list__data-list-body{flex:1}@media(min-width: 601px)and (max-width: 1279px){.buy-sell__data-list__data-list-body{top:1rem}}.buy-sell__data-list .data-list__body-wrapper{flex:1}.buy-sell__page-return{margin:2rem}.buy-sell__table-row{padding:1.6rem;height:-moz-max-content;height:max-content;grid-template-columns:2fr 1.4fr 1fr 1.8fr .8fr}.buy-sell__table-row:hover{background-color:var(--general-hover)}.buy-sell__cell{align-items:center;display:flex}.buy-sell__cell-hover{cursor:pointer}.buy-sell__cell--container{display:flex;flex-direction:column;margin-left:.8rem}.buy-sell__cell--container__row{display:flex;flex-direction:row}.buy-sell__name{padding-right:.4rem}.buy-sell__button{display:flex;justify-content:flex-end;align-items:center}.dc-modal__container_sort{height:100%;display:flex;flex-direction:column}.dc-radio-group.sort-radiogroup{height:100%;display:flex;flex-direction:column;justify-content:center;align-items:flex-start;margin:0;margin:initial}.dc-radio-group .dc-radio-group__item.sort-radiogroup{display:flex;flex-direction:row-reverse;justify-content:space-between;margin:0;margin:initial;padding:1.2rem 2.4rem;width:100%}.dc-radio-group .dc-radio-group__item.sort-radiogroup:first-child{border-bottom:1px solid var(--border-normal)}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/pages/buy-sell/buy-sell.scss\"],\"names\":[],\"mappings\":\"AAysBA,UAEI,MAAA,CACA,YAAA,CACA,qBAAA,CACA,iBAAA,CAEA,kCACI,YAAA,CAAA,kBAAA,CAEA,2CACI,qBAAA,CAlCR,0BA8BA,kCAQQ,gDAAA,CACA,QAAA,CAAA,cAAA,CACA,gBAAA,CAEA,uDACI,gBAAA,CAGJ,2CACI,mBAAA,CAAA,CA/CZ,0BAoDA,iBAEQ,iCAAA,CAAA,CAIR,qBACI,MAAA,CAEA,qCACI,MAAA,CA1ER,gDAyEI,qCAIQ,QAAA,CAAA,CAIR,8CACI,MAAA,CAIR,uBACI,WAAA,CAGJ,qBACI,cAAA,CACA,uBAAA,CAAA,kBAAA,CACA,8CAAA,CAEA,2BACI,qCAAA,CAIR,gBACI,kBAAA,CACA,YAAA,CAEA,sBACI,cAAA,CAEJ,2BACI,YAAA,CACA,qBAAA,CACA,iBAAA,CAEA,gCACI,YAAA,CACA,kBAAA,CAKZ,gBACI,mBAAA,CAGJ,kBACI,YAAA,CACA,wBAAA,CACA,kBAAA,CAKJ,0BACI,WAAA,CACA,YAAA,CACA,qBAAA,CAKJ,gCACI,WAAA,CACA,YAAA,CACA,qBAAA,CACA,sBAAA,CACA,sBAAA,CACA,QAAA,CAAA,cAAA,CAGA,sDACI,YAAA,CACA,0BAAA,CACA,6BAAA,CACA,QAAA,CAAA,cAAA,CACA,qBAAA,CACA,UAAA,CAEA,kEACI,4CAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n.buy-sell {\\n    $mobile_tabs_height: 17.2rem;\\n    flex: 1;\\n    display: flex;\\n    flex-direction: column;\\n    position: relative;\\n\\n    &__advertiser-page-return {\\n        margin-top: unset;\\n\\n        .dc-text {\\n            align-self: flex-start;\\n        }\\n\\n        @include mobile-or-tablet-screen {\\n            border-bottom: 1px solid var(--general-section-1);\\n            margin: unset;\\n            padding: 1.2rem 0;\\n\\n            .page-return__button {\\n                padding: 0 1.6rem;\\n            }\\n\\n            .dc-text {\\n                align-self: self-end;\\n            }\\n        }\\n    }\\n\\n    &__empty {\\n        @include mobile-or-tablet-screen {\\n            margin-top: calc(#{$mobile_tabs_height} + 2.6rem); // Header + Margin\\n        }\\n    }\\n\\n    &__data-list {\\n        flex: 1;\\n\\n        &__data-list-body {\\n            flex: 1;\\n\\n            @include tablet-screen {\\n                top: 1rem;\\n            }\\n        }\\n\\n        .data-list__body-wrapper {\\n            flex: 1;\\n        }\\n    }\\n\\n    &__page-return {\\n        margin: 2rem;\\n    }\\n\\n    &__table-row {\\n        padding: 1.6rem;\\n        height: max-content;\\n        grid-template-columns: 2fr 1.4fr 1fr 1.8fr 0.8fr;\\n\\n        &:hover {\\n            background-color: var(--general-hover);\\n        }\\n    }\\n\\n    &__cell {\\n        align-items: center;\\n        display: flex;\\n\\n        &-hover {\\n            cursor: pointer;\\n        }\\n        &--container {\\n            display: flex;\\n            flex-direction: column;\\n            margin-left: 0.8rem;\\n\\n            &__row {\\n                display: flex;\\n                flex-direction: row;\\n            }\\n        }\\n    }\\n\\n    &__name {\\n        padding-right: 0.4rem;\\n    }\\n\\n    &__button {\\n        display: flex;\\n        justify-content: flex-end;\\n        align-items: center;\\n    }\\n}\\n\\n.dc-modal__container {\\n    &_sort {\\n        height: 100%;\\n        display: flex;\\n        flex-direction: column;\\n    }\\n}\\n\\n.dc-radio-group {\\n    &.sort-radiogroup {\\n        height: 100%;\\n        display: flex;\\n        flex-direction: column;\\n        justify-content: center;\\n        align-items: flex-start;\\n        margin: unset;\\n    }\\n    .dc-radio-group__item {\\n        &.sort-radiogroup {\\n            display: flex;\\n            flex-direction: row-reverse;\\n            justify-content: space-between;\\n            margin: unset;\\n            padding: 1.2rem 2.4rem;\\n            width: 100%;\\n\\n            &:first-child {\\n                border-bottom: 1px solid var(--border-normal);\\n            }\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".currency-dropdown{position:relative}@media(max-width: 1279px){.currency-dropdown{grid-column:2;grid-row:1;margin:0}}.currency-dropdown__list{min-width:0;min-width:initial;width:10rem}.currency-dropdown__list-item{display:flex;justify-content:space-between;width:100%}@media(min-width: 1280px){.currency-dropdown__list-item-symbol{padding-right:1rem}}.currency-dropdown__list-item-name{font-weight:400;text-align:right}.currency-dropdown__list--visible .dc-dropdown__select-arrow{transform:rotate(-180deg)}.currency-dropdown .dc-dropdown__display{height:4.2rem;justify-content:start}@media(max-width: 1279px){.currency-dropdown .dc-dropdown__display{height:4rem}.currency-dropdown .dc-dropdown__display:focus{border-color:var(--border-normal)}}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/pages/buy-sell/currency-dropdown.scss\"],\"names\":[],\"mappings\":\"AAysBA,mBACI,iBAAA,CAxBA,0BAuBJ,mBAIQ,aAAA,CACA,UAAA,CACA,QAAA,CAAA,CAGJ,yBACI,WAAA,CAAA,iBAAA,CACA,WAAA,CAEA,8BACI,YAAA,CACA,6BAAA,CACA,UAAA,CA7CR,0BA+CQ,qCAEQ,kBAAA,CAAA,CAIR,mCACI,eAAA,CACA,gBAAA,CAKJ,6DACI,yBAAA,CAKZ,yCACI,aAAA,CACA,qBAAA,CA9DJ,0BA4DA,yCAKQ,WAAA,CAEA,+CACI,iCAAA,CAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n.currency-dropdown {\\n    position: relative;\\n\\n    @include mobile-or-tablet-screen {\\n        grid-column: 2;\\n        grid-row: 1;\\n        margin: 0;\\n    }\\n\\n    &__list {\\n        min-width: unset;\\n        width: 10rem;\\n\\n        &-item {\\n            display: flex;\\n            justify-content: space-between;\\n            width: 100%;\\n\\n            &-symbol {\\n                @include desktop-screen {\\n                    padding-right: 1rem;\\n                }\\n            }\\n\\n            &-name {\\n                font-weight: 400;\\n                text-align: right;\\n            }\\n        }\\n\\n        &--visible {\\n            .dc-dropdown__select-arrow {\\n                transform: rotate(-180deg);\\n            }\\n        }\\n    }\\n\\n    .dc-dropdown__display {\\n        height: 4.2rem;\\n        justify-content: start;\\n\\n        @include mobile-or-tablet-screen {\\n            height: 4rem;\\n\\n            &:focus {\\n                border-color: var(--border-normal);\\n            }\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"@media(min-width: 1280px){.buy-sell-currency-selector{position:absolute;margin-top:.4rem;width:24rem}}[dir=\\\"ltr\\\"] .buy-sell-currency-selector__search-icon{margin-right:1rem}[dir=\\\"rtl\\\"] .buy-sell-currency-selector__search-icon{margin-left:1rem}.buy-sell-currency-selector .dc-dropdown-list{border-top-left-radius:0;border-top-right-radius:0;margin-top:0;padding:.8rem}@media(max-width: 1279px){.buy-sell-currency-selector .dc-dropdown-list{box-shadow:none;height:100%;max-height:calc(100% - 11.8rem);overflow:auto;padding:0;transition:none 0s ease 0s;transition:initial}}.buy-sell-currency-selector .dc-dropdown-list__item{border-radius:4px;padding:.8rem 1.6rem;min-height:36px}@media(max-width: 1279px){.buy-sell-currency-selector .dc-dropdown-list__item{margin:.8rem 1.6rem}}.buy-sell-currency-selector .dc-dropdown-list__item--active{font-weight:bold}.buy-sell-currency-selector .dc-dropdown-list__item--not-found{background:none;word-break:break-word}@media(max-width: 1279px){.buy-sell-currency-selector .dc-dropdown-list__item--not-found{display:block;font-weight:bold;margin-top:14rem;text-align:center;width:100%}}.buy-sell-currency-selector .dc-input{border:0;border-bottom:1px solid var(--border-normal);border-bottom-right-radius:0;border-bottom-left-radius:0;box-shadow:0 8px 16px 0 var(--shadow-menu);background:var(--general-main-2)}[dir=\\\"ltr\\\"] .buy-sell-currency-selector .dc-input__field{padding-left:3.4rem}[dir=\\\"rtl\\\"] .buy-sell-currency-selector .dc-input__field{padding-right:3.4rem}@media(max-width: 1279px){[dir=\\\"ltr\\\"] .buy-sell-currency-selector .dc-input__field{padding-left:2.2rem}[dir=\\\"rtl\\\"] .buy-sell-currency-selector .dc-input__field{padding-right:2.2rem}}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/pages/buy-sell/currency-selector/currency-selector.scss\"],\"names\":[],\"mappings\":\"AA4qBI,0BA6BJ,4BAEQ,iBAAA,CACA,gBAAA,CACA,WAAA,CAAA,CAGJ,qDACI,iBAAA,CADJ,qDACI,gBAAA,CAGJ,8CACI,wBAAA,CACA,yBAAA,CACA,YAAA,CACA,aAAA,CAtCJ,0BAkCA,8CAOQ,eAAA,CACA,WAAA,CACA,+BAAA,CACA,aAAA,CACA,SAAA,CACA,0BAAA,CAAA,kBAAA,CAAA,CAGJ,oDACI,iBAAA,CACA,oBAAA,CACA,eAAA,CApDR,0BAiDI,oDAMQ,mBAAA,CAAA,CAGJ,4DACI,gBAAA,CAGJ,+DACI,eAAA,CACA,qBAAA,CAhEZ,0BA8DQ,+DAKQ,aAAA,CACA,gBAAA,CACA,gBAAA,CACA,iBAAA,CACA,UAAA,CAAA,CAMhB,sCACI,QAAA,CACA,4CAAA,CACA,4BAAA,CACA,2BAAA,CACA,0CAAA,CACA,gCAAA,CAEA,yDACI,mBAAA,CADJ,yDACI,oBAAA,CAtFR,0BAqFI,yDAIQ,mBAAA,CAJR,yDAIQ,oBAAA,CAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n.buy-sell-currency-selector {\\n    @include desktop-screen {\\n        position: absolute;\\n        margin-top: 0.4rem;\\n        width: 24rem;\\n    }\\n\\n    &__search-icon {\\n        margin-inline-end: 1rem;\\n    }\\n\\n    .dc-dropdown-list {\\n        border-top-left-radius: 0;\\n        border-top-right-radius: 0;\\n        margin-top: 0;\\n        padding: 0.8rem;\\n\\n        @include mobile-or-tablet-screen {\\n            box-shadow: none;\\n            height: 100%;\\n            max-height: calc(100% - 11.8rem);\\n            overflow: auto;\\n            padding: 0;\\n            transition: unset;\\n        }\\n\\n        &__item {\\n            border-radius: 4px;\\n            padding: 0.8rem 1.6rem;\\n            min-height: 36px;\\n\\n            @include mobile-or-tablet-screen {\\n                margin: 0.8rem 1.6rem;\\n            }\\n\\n            &--active {\\n                font-weight: bold;\\n            }\\n\\n            &--not-found {\\n                background: none;\\n                word-break: break-word;\\n\\n                @include mobile-or-tablet-screen {\\n                    display: block;\\n                    font-weight: bold;\\n                    margin-top: 14rem;\\n                    text-align: center;\\n                    width: 100%;\\n                }\\n            }\\n        }\\n    }\\n\\n    .dc-input {\\n        border: 0;\\n        border-bottom: 1px solid var(--border-normal);\\n        border-bottom-right-radius: 0;\\n        border-bottom-left-radius: 0;\\n        box-shadow: 0 8px 16px 0 var(--shadow-menu);\\n        background: var(--general-main-2);\\n\\n        &__field {\\n            padding-inline-start: 3.4rem;\\n\\n            @include mobile-or-tablet-screen {\\n                padding-inline-start: 2.2rem;\\n            }\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".no-ads{display:flex;flex-direction:column;align-items:center;margin-top:2.4rem}@media(max-width: 1279px){.no-ads{margin-top:19.8rem}}.no-ads__button{margin-top:2.4rem}@media(max-width: 1279px){.no-ads__message{width:32rem}}.no-ads__title{margin:2.4rem 0 .5rem}.ads-page{margin:4.5rem 1.6rem}@media(min-width: 1280px){[dir=\\\"ltr\\\"] .ads-page{left:5rem}[dir=\\\"rtl\\\"] .ads-page{right:5rem}.ads-page{position:absolute}}@media(max-width: 1279px){.ads-page{margin-top:11.8rem}.ads-page .no-ads__message{width:100%}}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/pages/buy-sell/no-ads/no-ads.scss\"],\"names\":[],\"mappings\":\"AAysBA,QACI,YAAA,CACA,qBAAA,CACA,kBAAA,CACA,iBAAA,CA3BA,0BAuBJ,QAOQ,kBAAA,CAAA,CAGJ,gBACI,iBAAA,CAlCJ,0BAqCA,iBAEQ,WAAA,CAAA,CAIR,eACI,qBAAA,CAIR,UACI,oBAAA,CAvDA,0BAsDJ,sBAKQ,SAAA,CALR,sBAKQ,UAAA,CALR,UAIQ,iBACA,CAAA,CArDJ,0BAgDJ,UASQ,kBAAA,CACA,2BACI,UAAA,CAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n.no-ads {\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    margin-top: 2.4rem;\\n\\n    @include mobile-or-tablet-screen {\\n        margin-top: calc(17.2rem + 2.6rem);\\n    }\\n\\n    &__button {\\n        margin-top: 2.4rem;\\n    }\\n\\n    &__message {\\n        @include mobile-or-tablet-screen {\\n            width: 32rem;\\n        }\\n    }\\n\\n    &__title {\\n        margin: 2.4rem 0 0.5rem;\\n    }\\n}\\n\\n.ads-page {\\n    margin: 4.5rem 1.6rem;\\n\\n    @include desktop-screen {\\n        position: absolute;\\n        inset-inline-start: 5rem;\\n    }\\n\\n    @include mobile-or-tablet-screen {\\n        margin-top: 11.8rem;\\n        .no-ads__message {\\n            width: 100%;\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".sort-dropdown{height:4.4rem;width:24rem}.sort-dropdown .dc-dropdown__display{height:4.2rem}@media(max-width: 1279px){.sort-dropdown{height:4rem;width:4rem;margin:.5rem}.sort-dropdown .dc-dropdown__display{height:4rem}.sort-dropdown .dc-dropdown__display-text{display:block;overflow:hidden;padding-left:.8rem;padding-right:0;padding-right:initial;text-overflow:ellipsis;width:80%}.sort-dropdown .dc-dropdown__list{left:auto;left:initial;right:0;width:calc(100vw - 3.2rem)}.sort-dropdown .dc-list__item-text{padding:1rem 1.6rem}}@media(max-width: 1279px)and (max-width: 350px){.sort-dropdown{min-width:0;min-width:initial;width:14rem}}.sort-dropdown--sort{align-items:center;align-self:center;display:flex;border:1px solid var(--border-normal);border-radius:4px;padding:.8rem}@media(max-width: 1279px){.sort-dropdown--sort{display:flex;justify-content:center;justify-self:center;height:4rem;width:4rem}}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/pages/buy-sell/sort-dropdown.scss\"],\"names\":[],\"mappings\":\"AAysBA,eACI,aAAA,CACA,WAAA,CAEA,qCACI,aAAA,CA5BJ,0BAuBJ,eASQ,WAAA,CACA,UAAA,CACA,YAAA,CAEA,qCACI,WAAA,CAEA,0CACI,aAAA,CACA,eAAA,CACA,kBAAA,CACA,eAAA,CAAA,qBAAA,CACA,sBAAA,CACA,SAAA,CAIR,kCACI,SAAA,CAAA,YAAA,CACA,OAAA,CACA,0BAAA,CAGJ,mCACI,mBAAA,CAAA,CAGJ,gDApCR,eAqCY,WAAA,CAAA,iBAAA,CACA,WAAA,CAAA,CAIR,qBACI,kBAAA,CACA,iBAAA,CACA,YAAA,CACA,qCAAA,CACA,iBAAA,CACA,aAAA,CAvEJ,0BAiEA,qBASQ,YAAA,CACA,sBAAA,CACA,mBAAA,CACA,WAAA,CACA,UAAA,CAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n.sort-dropdown {\\n    height: 4.4rem;\\n    width: 24rem;\\n\\n    .dc-dropdown__display {\\n        height: 4.2rem;\\n    }\\n\\n    @include mobile-or-tablet-screen {\\n        height: 4rem;\\n        width: 4rem;\\n        margin: 0.5rem;\\n\\n        .dc-dropdown__display {\\n            height: 4rem;\\n\\n            &-text {\\n                display: block;\\n                overflow: hidden;\\n                padding-left: 0.8rem;\\n                padding-right: unset;\\n                text-overflow: ellipsis;\\n                width: 80%;\\n            }\\n        }\\n\\n        .dc-dropdown__list {\\n            left: unset;\\n            right: 0;\\n            width: calc(100vw - 3.2rem);\\n        }\\n\\n        .dc-list__item-text {\\n            padding: 1rem 1.6rem;\\n        }\\n\\n        @media (max-width: 350px) {\\n            min-width: unset;\\n            width: 14rem;\\n        }\\n    }\\n\\n    &--sort {\\n        align-items: center;\\n        align-self: center;\\n        display: flex;\\n        border: 1px solid var(--border-normal);\\n        border-radius: 4px;\\n        padding: 0.8rem;\\n\\n        @include mobile-or-tablet-screen {\\n            display: flex;\\n            justify-content: center;\\n            justify-self: center;\\n            height: 4rem;\\n            width: 4rem;\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".ad-conditions-section__countries-label{display:flex;align-items:center;-moz-column-gap:1rem;column-gap:1rem}.ad-conditions-section__label{margin-top:2rem}.ad-conditions-section__rate{margin-top:1.5rem}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/pages/my-ads/ad-conditions-section/ad-conditions-section.scss\"],\"names\":[],\"mappings\":\"AA0sBI,wCACI,YAAA,CACA,kBAAA,CACA,oBAAA,CAAA,eAAA,CAGJ,8BACI,eAAA,CAGJ,6BACI,iBAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n.ad-conditions-section {\\n    &__countries-label {\\n        display: flex;\\n        align-items: center;\\n        column-gap: 1rem;\\n    }\\n\\n    &__label {\\n        margin-top: 2rem;\\n    }\\n\\n    &__rate {\\n        margin-top: 1.5rem;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".ad-form-controller{display:flex;justify-content:flex-end;-moz-column-gap:.8rem;column-gap:.8rem;border-top:1px solid var(--general-section-1);padding:2rem 0}@media(min-width: 1280px){.ad-form-controller{margin-top:5rem}}@media(max-width: 1279px){.ad-form-controller{margin:3rem -1.6rem 0;padding-right:1.6rem}}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/pages/my-ads/ad-form-controller/ad-form-controller.scss\"],\"names\":[],\"mappings\":\"AAysBA,oBACI,YAAA,CACA,wBAAA,CACA,qBAAA,CAAA,gBAAA,CACA,6CAAA,CACA,cAAA,CAlCA,0BA6BJ,oBAQQ,eAAA,CAAA,CA/BJ,0BAuBJ,oBAYQ,qBAAA,CACA,oBAAA,CAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n.ad-form-controller {\\n    display: flex;\\n    justify-content: flex-end;\\n    column-gap: 0.8rem;\\n    border-top: 1px solid var(--general-section-1);\\n    padding: 2rem 0;\\n\\n    @include desktop-screen {\\n        margin-top: 5rem;\\n    }\\n\\n    @include mobile-or-tablet-screen {\\n        margin: 3rem -1.6rem 0;\\n        padding-right: 1.6rem;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".ad-payment-details-section__label{display:flex;flex-direction:column;margin-top:3.2rem;padding-bottom:1rem}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/pages/my-ads/ad-payment-details-section/ad-payment-details-section.scss\"],\"names\":[],\"mappings\":\"AA0sBI,mCACI,YAAA,CACA,qBAAA,CACA,iBAAA,CACA,mBAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n.ad-payment-details-section {\\n    &__label {\\n        display: flex;\\n        flex-direction: column;\\n        margin-top: 3.2rem;\\n        padding-bottom: 1rem;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".ad-status--active{align-items:center;display:flex;justify-content:center;padding:.1rem 1.2rem;position:relative;text-align:center;width:-moz-fit-content;width:fit-content}.ad-status--active:before{content:\\\"\\\";height:100%;width:100%;opacity:.16;display:block;position:absolute;left:0;top:0;border-radius:1.6rem;background-color:var(--status-success)}@media(max-width: 1279px){.ad-status--active{padding:.2rem 1rem}}.ad-status--inactive{align-items:center;display:flex;justify-content:center;padding:.1rem 1.2rem;position:relative;text-align:center;width:-moz-fit-content;width:fit-content}.ad-status--inactive:before{content:\\\"\\\";height:100%;width:100%;opacity:.16;display:block;position:absolute;left:0;top:0;border-radius:1.6rem;background-color:var(--status-danger)}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/pages/my-ads/ad-status.scss\"],\"names\":[],\"mappings\":\"AA+tBI,mBATA,kBAAA,CACA,YAAA,CACA,sBAAA,CACA,oBAAA,CACA,iBAAA,CACA,iBAAA,CAOI,sBAAA,CAAA,iBAAA,CAxBJ,0BACI,UAAA,CACA,WAAA,CACA,UAAA,CACA,WAAA,CACA,aAAA,CACA,iBAAA,CACA,MAAA,CACA,KAAA,CACA,oBAAA,CACA,sCAYwB,CA9C5B,0BA6CA,mBAMQ,kBAAA,CAAA,CAIR,qBAnBA,kBAAA,CACA,YAAA,CACA,sBAAA,CACA,oBAAA,CACA,iBAAA,CACA,iBAAA,CAiBI,sBAAA,CAAA,iBAAA,CAlCJ,4BACI,UAAA,CACA,WAAA,CACA,UAAA,CACA,WAAA,CACA,aAAA,CACA,iBAAA,CACA,MAAA,CACA,KAAA,CACA,oBAAA,CACA,qCAsBwB\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin ad-status-base($background-color) {\\n    &:before {\\n        content: '';\\n        height: 100%;\\n        width: 100%;\\n        opacity: 0.16;\\n        display: block;\\n        position: absolute;\\n        left: 0;\\n        top: 0;\\n        border-radius: 1.6rem;\\n        background-color: $background-color;\\n    }\\n    align-items: center;\\n    display: flex;\\n    justify-content: center;\\n    padding: 0.1rem 1.2rem;\\n    position: relative;\\n    text-align: center;\\n}\\n\\n.ad-status {\\n    &--active {\\n        @include ad-status-base(var(--status-success));\\n\\n        width: fit-content;\\n\\n        @include mobile-or-tablet-screen {\\n            padding: 0.2rem 1rem;\\n        }\\n    }\\n\\n    &--inactive {\\n        @include ad-status-base(var(--status-danger));\\n\\n        width: fit-content;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".ad-type-section__container{display:flex;height:8rem;justify-content:space-between;width:67.2rem}.ad-type-section__container .dc-input{margin-bottom:2.1rem;margin-top:2.1rem}.ad-type-section__container .dc-input__container{padding:0 1rem}.ad-type-section__container .dc-input--hint{margin-bottom:0}.ad-type-section__container .dc-input__wrapper{margin-top:0}@media(max-width: 1279px){.ad-type-section__container{flex-direction:column;height:auto;height:initial;width:auto;width:initial}.ad-type-section__container .dc-input__wrapper{margin-bottom:5rem}}.ad-type-section__field{height:4rem;margin-bottom:0;margin-left:0;width:32.4rem}@media(max-width: 1279px){.ad-type-section__field{width:inherit}}.ad-type-section__field--contact-details{margin-bottom:5.9rem}@media(max-width: 1279px){.ad-type-section__field--contact-details{margin-bottom:3.7rem}}.ad-type-section__field--single{width:18.9rem}.ad-type-section__field--textarea{height:9.6rem;margin:2rem 0 0;width:67.2rem}@media(max-width: 1279px){.ad-type-section__field--textarea{height:9.8rem;width:auto}}.ad-type-section__field--textarea .dc-input__hint{top:9.7rem}.ad-type-section__field--textarea .dc-input___counter{top:9.7rem;right:0rem}@media(max-width: 1279px){.ad-type-section__field--textarea .dc-input___counter{display:flex;right:0}}.ad-type-section__field--textarea .dc-input__textarea{padding-top:1rem;padding-left:0}.ad-type-section__field--textarea .dc-input__container{height:9.6rem}.ad-type-section__radio-group .dc-radio-group__circle{border:2px solid var(--border-hover)}.ad-type-section__radio-group .dc-radio-group__circle--selected{border:4px solid var(--brand-red-coral)}@media(max-width: 1279px){.ad-type-section__radio-group{margin-top:0;padding:.5rem 0}}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/pages/my-ads/ad-type-section/ad-type-section.scss\"],\"names\":[],\"mappings\":\"AA0sBI,4BACI,YAAA,CACA,WAAA,CACA,6BAAA,CACA,aAAA,CAEA,sCACI,oBAAA,CACA,iBAAA,CAEA,iDACI,cAAA,CAEJ,4CACI,eAAA,CAEJ,+CACI,YAAA,CAzCZ,0BAwBA,4BAsBQ,qBAAA,CACA,WAAA,CAAA,cAAA,CACA,UAAA,CAAA,aAAA,CAGI,+CACI,kBAAA,CAAA,CAMhB,wBACI,WAAA,CACA,eAAA,CACA,aAAA,CACA,aAAA,CA9DJ,0BA0DA,wBAOQ,aAAA,CAAA,CAGJ,yCACI,oBAAA,CArER,0BAoEI,yCAIQ,oBAAA,CAAA,CAGR,gCACI,aAAA,CAEJ,kCACI,aAAA,CACA,eAAA,CACA,aAAA,CAjFR,0BA8EI,kCAMQ,aAAA,CACA,UAAA,CAAA,CAIA,kDACI,UAAA,CAGJ,sDACI,UAAA,CACA,UAAA,CA/FhB,0BA6FY,sDAKQ,YAAA,CACA,OAAA,CAAA,CAIR,sDACI,gBAAA,CACA,cAAA,CAGJ,uDACI,aAAA,CAOZ,sDACI,oCAAA,CAEA,gEACI,uCAAA,CAxHZ,0BAmHA,8BAUQ,YAAA,CACA,eAAA,CAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n.ad-type-section {\\n    &__container {\\n        display: flex;\\n        height: 8rem;\\n        justify-content: space-between;\\n        width: 67.2rem;\\n\\n        .dc-input {\\n            margin-bottom: 2.1rem;\\n            margin-top: 2.1rem;\\n\\n            &__container {\\n                padding: 0 1rem;\\n            }\\n            &--hint {\\n                margin-bottom: 0;\\n            }\\n            &__wrapper {\\n                margin-top: 0;\\n            }\\n        }\\n\\n        @include mobile-or-tablet-screen {\\n            flex-direction: column;\\n            height: unset;\\n            width: unset;\\n\\n            .dc-input {\\n                &__wrapper {\\n                    margin-bottom: 5rem;\\n                }\\n            }\\n        }\\n    }\\n\\n    &__field {\\n        height: 4rem;\\n        margin-bottom: 0;\\n        margin-left: 0;\\n        width: 32.4rem;\\n\\n        @include mobile-or-tablet-screen {\\n            width: inherit;\\n        }\\n\\n        &--contact-details {\\n            margin-bottom: 5.9rem;\\n\\n            @include mobile-or-tablet-screen {\\n                margin-bottom: 3.7rem;\\n            }\\n        }\\n        &--single {\\n            width: 18.9rem;\\n        }\\n        &--textarea {\\n            height: 9.6rem;\\n            margin: 2rem 0 0;\\n            width: 67.2rem;\\n\\n            @include mobile-or-tablet-screen {\\n                height: 9.8rem;\\n                width: auto;\\n            }\\n\\n            .dc-input {\\n                &__hint {\\n                    top: 9.7rem;\\n                }\\n\\n                &___counter {\\n                    top: 9.7rem;\\n                    right: 0rem;\\n\\n                    @include mobile-or-tablet-screen {\\n                        display: flex;\\n                        right: 0;\\n                    }\\n                }\\n\\n                &__textarea {\\n                    padding-top: 1rem;\\n                    padding-left: 0;\\n                }\\n\\n                &__container {\\n                    height: 9.6rem;\\n                }\\n            }\\n        }\\n    }\\n\\n    &__radio-group {\\n        .dc-radio-group__circle {\\n            border: 2px solid var(--border-hover);\\n\\n            &--selected {\\n                border: 4px solid var(--brand-red-coral);\\n            }\\n        }\\n\\n        @include mobile-or-tablet-screen {\\n            margin-top: 0;\\n            padding: 0.5rem 0;\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".ad-type{display:flex;flex-direction:row;align-items:center}@media(max-width: 1279px){.ad-type{justify-content:flex-end}}.ad-type__badge{align-items:center;border-radius:.4rem;border:1px solid var(--border-normal);display:flex;flex-direction:row;margin:.3rem .5rem .3rem 0;padding:.1rem .8rem;width:-moz-fit-content;width:fit-content}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/pages/my-ads/ad-type.scss\"],\"names\":[],\"mappings\":\"AAysBA,SACI,YAAA,CACA,kBAAA,CACA,kBAAA,CA1BA,0BAuBJ,SAMQ,wBAAA,CAAA,CAGJ,gBACI,kBAAA,CACA,mBAAA,CACA,qCAAA,CACA,YAAA,CACA,kBAAA,CACA,0BAAA,CACA,mBAAA,CACA,sBAAA,CAAA,iBAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n.ad-type {\\n    display: flex;\\n    flex-direction: row;\\n    align-items: center;\\n\\n    @include mobile-or-tablet-screen {\\n        justify-content: flex-end;\\n    }\\n\\n    &__badge {\\n        align-items: center;\\n        border-radius: 0.4rem;\\n        border: 1px solid var(--border-normal);\\n        display: flex;\\n        flex-direction: row;\\n        margin: 0.3rem 0.5rem 0.3rem 0;\\n        padding: 0.1rem 0.8rem;\\n        width: fit-content;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"@media(min-width: 1280px){.ad-wizard{width:67.2rem}}@media(max-width: 1279px){.ad-wizard>div:first-child{display:flex;align-items:center;-moz-column-gap:1rem;column-gap:1rem;padding:.8rem 2rem;background-color:var(--general-section-1)}.ad-wizard>div:first-child>div{flex:1}.ad-wizard>div:first-child svg:last-child{align-self:flex-start;margin-top:1.5rem;width:4rem}}@media(max-width: 1279px){.ad-wizard .wizard__main-step{padding:1.6rem}}.ad-wizard .dc-form-progress{background-color:var(--general-section-1);margin-top:2rem;border-radius:.4rem}.ad-wizard .dc-form-progress__step{width:24rem}.ad-wizard .dc-form-progress__steps{margin-top:0;margin-bottom:1.6rem}.ad-wizard .dc-form-progress__header{margin-bottom:2rem}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/pages/my-ads/ad-wizard/ad-wizard.scss\"],\"names\":[],\"mappings\":\"AA4qBI,0BA6BJ,WAEQ,aAAA,CAAA,CAzBJ,0BA4BA,2BAEQ,YAAA,CACA,kBAAA,CACA,oBAAA,CAAA,eAAA,CACA,kBAAA,CACA,yCAAA,CAEA,+BACI,MAAA,CAGJ,0CACI,qBAAA,CACA,iBAAA,CACA,UAAA,CAAA,CA3CZ,0BAgDA,8BAEQ,cAAA,CAAA,CAIR,6BACI,yCAAA,CACA,eAAA,CACA,mBAAA,CAEA,mCACI,WAAA,CAGJ,oCACI,YAAA,CACA,oBAAA,CAGJ,qCACI,kBAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n.ad-wizard {\\n    @include desktop-screen {\\n        width: 67.2rem;\\n    }\\n\\n    > div:first-child {\\n        @include mobile-or-tablet-screen {\\n            display: flex;\\n            align-items: center;\\n            column-gap: 1rem;\\n            padding: 0.8rem 2rem;\\n            background-color: var(--general-section-1);\\n\\n            > div {\\n                flex: 1;\\n            }\\n\\n            svg:last-child {\\n                align-self: flex-start;\\n                margin-top: 1.5rem;\\n                width: 4rem;\\n            }\\n        }\\n    }\\n\\n    .wizard__main-step {\\n        @include mobile-or-tablet-screen {\\n            padding: 1.6rem;\\n        }\\n    }\\n\\n    .dc-form-progress {\\n        background-color: var(--general-section-1);\\n        margin-top: 2rem;\\n        border-radius: 0.4rem;\\n\\n        &__step {\\n            width: 24rem;\\n        }\\n\\n        &__steps {\\n            margin-top: 0;\\n            margin-bottom: 1.6rem;\\n        }\\n\\n        &__header {\\n            margin-bottom: 2rem;\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".buy-ad-payment-methods-list__container{max-width:67.2rem}.buy-ad-payment-methods-list__input{padding-bottom:2rem}[dir=\\\"ltr\\\"] .buy-ad-payment-methods-list__input .dc-input__field{padding-left:1.8rem}[dir=\\\"rtl\\\"] .buy-ad-payment-methods-list__input .dc-input__field{padding-right:1.8rem}[dir=\\\"ltr\\\"] .buy-ad-payment-methods-list__input .dc-input__leading-icon{margin-left:1.1rem}[dir=\\\"rtl\\\"] .buy-ad-payment-methods-list__input .dc-input__leading-icon{margin-right:1.1rem}.buy-ad-payment-methods-list__input .dc-input__leading-icon{top:auto}[dir=\\\"ltr\\\"] .buy-ad-payment-methods-list__input::-moz-placeholder{padding-left:3rem}[dir=\\\"ltr\\\"] .buy-ad-payment-methods-list__input::placeholder{padding-left:3rem}[dir=\\\"rtl\\\"] .buy-ad-payment-methods-list__input::-moz-placeholder{padding-right:3rem}[dir=\\\"rtl\\\"] .buy-ad-payment-methods-list__input::placeholder{padding-right:3rem}.buy-ad-payment-methods-list__icon{cursor:pointer}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/pages/my-ads/buy-ad-payment-methods-list.scss\"],\"names\":[],\"mappings\":\"AA0sBI,wCACI,iBAAA,CAGJ,oCACI,mBAAA,CACA,iEACI,mBAAA,CADJ,iEACI,oBAAA,CAGJ,wEAEI,kBAAA,CAFJ,wEAEI,mBAAA,CAFJ,4DACI,QACA,CAGJ,kEACI,iBAAA,CADJ,6DACI,iBAAA,CADJ,kEACI,kBAAA,CADJ,6DACI,kBAAA,CAIR,mCACI,cAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n.buy-ad-payment-methods-list {\\n    &__container {\\n        max-width: 67.2rem;\\n    }\\n\\n    &__input {\\n        padding-bottom: 2rem;\\n        & .dc-input__field {\\n            padding-inline-start: 1.8rem;\\n        }\\n\\n        & .dc-input__leading-icon {\\n            top: auto;\\n            margin-inline-start: 1.1rem;\\n        }\\n\\n        &::placeholder {\\n            padding-inline-start: 3rem;\\n        }\\n    }\\n\\n    &__icon {\\n        cursor: pointer;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"@media(max-width: 1279px){.copy-advert-form{margin:1.6rem}}.copy-advert-form__container{display:flex;-moz-column-gap:.8rem;column-gap:.8rem;justify-content:end}@media(min-width: 1280px){.copy-advert-form__container{position:absolute;bottom:0;width:100%;background-color:var(--general-main-2);padding:2.4rem}}@media(max-width: 1279px){.copy-advert-form__container{border-top:2px solid var(--general-section-1);padding:1.6rem 1.6rem 0;margin:0 -1.6rem}}.copy-advert-form__field{margin-bottom:1.5rem;word-wrap:break-word}.copy-advert-form__field>div{border:0;padding:0;height:auto}.copy-advert-form__list{list-style:disc;margin-left:1.5rem}@media(max-width: 1279px){.copy-advert-form__list{margin-bottom:1.5rem}}.copy-advert-form__dropdown-display{border:0;height:auto;pointer-events:none}@media(min-width: 1280px){.copy-advert-form__dropdown-display{background-color:var(--general-main-2)}}.copy-advert-form__dropdown-icon{display:none}.copy-advert-form__floating-rate{margin:.4rem 0 1.5rem}@media(max-width: 1279px){.copy-advert-form__floating-rate{height:6.8rem}}.copy-advert-form__floating-rate .floating-rate__field{display:block}.copy-advert-form__floating-rate .floating-rate__field--prefix{display:flex;justify-content:center;margin-bottom:2rem}@media(max-width: 1279px){.copy-advert-form__floating-rate .floating-rate__field--prefix{margin-top:2rem}}.copy-advert-form__floating-rate .floating-rate__hint{padding-left:1rem}.copy-advert-form__floating-rate .floating-rate__mkt-rate{flex-direction:row;align-items:center}.copy-advert-form__floating-rate .floating-rate__mkt-rate--msg{height:auto}.copy-advert-form__floating-rate .floating-rate__percent{right:0}@media(max-width: 1279px){.copy-advert-form__floating-rate .dc-input-field{margin-top:0}}.copy-advert-form__floating-rate .dc-input-suffix{flex:1}.copy-advert-form__floating-rate .dc-input-suffix .input{width:50%;text-align:right}.copy-advert-form .inline-message{margin-bottom:2rem}.copy-advert-form .order-time-selection{margin-top:0;margin-bottom:1.5rem}.copy-advert-form .order-time-selection .dc-dropdown__display-text{padding-left:0}@media(min-width: 1280px){.copy-advert-form .dc-input__label{background-color:var(--general-main-2)}}@media(min-width: 1280px){.copy-advert-form__scrollbar{padding:0 2.4rem 8.8rem}}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/pages/my-ads/copy-advert-form/copy-advert-form.scss\"],\"names\":[],\"mappings\":\"AAkrBI,0BAuBJ,kBAEQ,aAAA,CAAA,CAGJ,6BACI,YAAA,CACA,qBAAA,CAAA,gBAAA,CACA,mBAAA,CArCJ,0BAkCA,6BAMQ,iBAAA,CACA,QAAA,CACA,UAAA,CACA,sCAAA,CACA,cAAA,CAAA,CAtCR,0BA4BA,6BAcQ,6CAAA,CACA,uBAAA,CACA,gBAAA,CAAA,CAIR,yBACI,oBAAA,CACA,oBAAA,CAEA,6BACI,QAAA,CACA,SAAA,CACA,WAAA,CAIR,wBACI,eAAA,CACA,kBAAA,CA7DJ,0BA2DA,wBAKQ,oBAAA,CAAA,CAKJ,oCACI,QAAA,CACA,WAAA,CACA,mBAAA,CA9ER,0BA2EI,oCAMQ,sCAAA,CAAA,CAIR,iCACI,YAAA,CAIR,iCACI,qBAAA,CArFJ,0BAoFA,iCAIQ,aAAA,CAAA,CAIA,uDACI,aAAA,CAEA,+DACI,YAAA,CACA,sBAAA,CACA,kBAAA,CAlGhB,0BA+FY,+DAMQ,eAAA,CAAA,CAKZ,sDACI,iBAAA,CAGJ,0DACI,kBAAA,CACA,kBAAA,CAEA,+DACI,WAAA,CAIR,yDACI,OAAA,CAxHZ,0BA8HY,iDACI,YAAA,CAAA,CAIR,kDACI,MAAA,CAEA,yDACI,SAAA,CACA,gBAAA,CAMhB,kCACI,kBAAA,CAGJ,wCACI,YAAA,CACA,oBAAA,CAEA,mEACI,cAAA,CA7JR,0BAiKA,mCAEQ,sCAAA,CAAA,CAnKR,0BAuKA,6BAEQ,uBAAA,CAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n.copy-advert-form {\\n    @include mobile-or-tablet-screen {\\n        margin: 1.6rem;\\n    }\\n\\n    &__container {\\n        display: flex;\\n        column-gap: 0.8rem;\\n        justify-content: end;\\n\\n        @include desktop-screen {\\n            position: absolute;\\n            bottom: 0;\\n            width: 100%;\\n            background-color: var(--general-main-2);\\n            padding: 2.4rem;\\n        }\\n\\n        @include mobile-or-tablet-screen {\\n            border-top: 2px solid var(--general-section-1);\\n            padding: 1.6rem 1.6rem 0;\\n            margin: 0 -1.6rem;\\n        }\\n    }\\n\\n    &__field {\\n        margin-bottom: 1.5rem;\\n        word-wrap: break-word;\\n\\n        > div {\\n            border: 0;\\n            padding: 0;\\n            height: auto;\\n        }\\n    }\\n\\n    &__list {\\n        list-style: disc;\\n        margin-left: 1.5rem;\\n\\n        @include mobile-or-tablet-screen {\\n            margin-bottom: 1.5rem;\\n        }\\n    }\\n\\n    &__dropdown {\\n        &-display {\\n            border: 0;\\n            height: auto;\\n            pointer-events: none;\\n\\n            @include desktop-screen {\\n                background-color: var(--general-main-2);\\n            }\\n        }\\n\\n        &-icon {\\n            display: none;\\n        }\\n    }\\n\\n    &__floating-rate {\\n        margin: 0.4rem 0 1.5rem;\\n\\n        @include mobile-or-tablet-screen {\\n            height: 6.8rem;\\n        }\\n\\n        .floating-rate {\\n            &__field {\\n                display: block;\\n\\n                &--prefix {\\n                    display: flex;\\n                    justify-content: center;\\n                    margin-bottom: 2rem;\\n\\n                    @include mobile-or-tablet-screen {\\n                        margin-top: 2rem;\\n                    }\\n                }\\n            }\\n\\n            &__hint {\\n                padding-left: 1rem;\\n            }\\n\\n            &__mkt-rate {\\n                flex-direction: row;\\n                align-items: center;\\n\\n                &--msg {\\n                    height: auto;\\n                }\\n            }\\n\\n            &__percent {\\n                right: 0;\\n            }\\n        }\\n\\n        .dc-input {\\n            @include mobile-or-tablet-screen {\\n                &-field {\\n                    margin-top: 0;\\n                }\\n            }\\n\\n            &-suffix {\\n                flex: 1;\\n\\n                .input {\\n                    width: 50%;\\n                    text-align: right;\\n                }\\n            }\\n        }\\n    }\\n\\n    .inline-message {\\n        margin-bottom: 2rem;\\n    }\\n\\n    .order-time-selection {\\n        margin-top: 0;\\n        margin-bottom: 1.5rem;\\n\\n        .dc-dropdown__display-text {\\n            padding-left: 0;\\n        }\\n    }\\n\\n    .dc-input__label {\\n        @include desktop-screen {\\n            background-color: var(--general-main-2);\\n        }\\n    }\\n\\n    &__scrollbar {\\n        @include desktop-screen {\\n            padding: 0 2.4rem 8.8rem;\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"@media(max-width: 1279px){.create-ad-form .dc-input__footer{justify-content:space-between;width:86vw}.create-ad-form .dc-input__hint--relative{margin-left:0;margin-left:initial}}.create-ad-form__label--focused{color:var(--text-prominent);background-color:var(--general-main-1)}.create-ad-form__payment-methods--empty{max-width:67.2rem;padding:1.2rem 0}.create-ad-form__scrollbar{height:calc(100% - 2.4rem - 9.2rem);position:absolute;width:calc(100% - 4.8rem)}.create-ad-form__scrollbar .dc-input{max-width:67.2rem}@media(max-width: 1279px){.create-ad-form__scrollbar-container{width:90vw;margin:0 1.6rem}.create-ad-form__scrollbar-container .dc-input__wrapper{margin-top:2.1rem}.create-ad-form__scrollbar-container .dc-input__hint{margin-top:0}}@media(max-width: 1279px){.create-ad-form__scrollbar{height:-moz-fit-content;height:fit-content;position:static;position:initial;width:100%}}.create-ad-form__button{margin-left:.8rem}.create-ad-form__footer{align-items:center;background-color:var(--general-main-1);display:flex;justify-content:flex-end;-moz-column-gap:.8rem;column-gap:.8rem}@media(max-width: 1279px){.create-ad-form__footer{border-top:2px solid var(--general-section-1);flex-direction:row;padding:1.6rem;width:100vw}}.create-ad-form__progress-bar{width:5.6rem;height:5.6rem;border-radius:50%;border:2px solid;display:flex;align-items:center;justify-content:center}.create-ad-form__dropdown-display{height:4rem}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/pages/my-ads/create-ad-form.scss\"],\"names\":[],\"mappings\":\"AAkrBI,0BAyBI,kCACI,6BAAA,CACA,UAAA,CAGJ,0CACI,aAAA,CAAA,mBAAA,CAAA,CAKJ,gCACI,2BAAA,CACA,sCAAA,CAKJ,wCACI,iBAAA,CACA,gBAAA,CAIR,2BACI,mCAAA,CACA,iBAAA,CACA,yBAAA,CAEA,qCACI,iBAAA,CAvDR,0BA0DI,qCAEQ,UAAA,CACA,eAAA,CAGI,wDACI,iBAAA,CAEJ,qDACI,YAAA,CAAA,CApEpB,0BAiDA,2BA0BQ,uBAAA,CAAA,kBAAA,CACA,eAAA,CAAA,gBAAA,CACA,UAAA,CAAA,CAIR,wBACI,iBAAA,CAGJ,wBACI,kBAAA,CACA,sCAAA,CACA,YAAA,CACA,wBAAA,CACA,qBAAA,CAAA,gBAAA,CA1FJ,0BAqFA,wBAQQ,6CAAA,CACA,kBAAA,CACA,cAAA,CACA,WAAA,CAAA,CAIR,8BACI,YAAA,CACA,aAAA,CACA,iBAAA,CACA,gBAAA,CACA,YAAA,CACA,kBAAA,CACA,sBAAA,CAIA,kCACI,WAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n.create-ad-form {\\n    @include mobile-or-tablet-screen {\\n        .dc-input__footer {\\n            justify-content: space-between;\\n            width: 86vw;\\n        }\\n\\n        .dc-input__hint--relative {\\n            margin-left: unset;\\n        }\\n    }\\n\\n    &__label {\\n        &--focused {\\n            color: var(--text-prominent);\\n            background-color: var(--general-main-1);\\n        }\\n    }\\n\\n    &__payment-methods {\\n        &--empty {\\n            max-width: 67.2rem;\\n            padding: 1.2rem 0;\\n        }\\n    }\\n\\n    &__scrollbar {\\n        height: calc(100% - 2.4rem - 9.2rem);\\n        position: absolute;\\n        width: calc(100% - 4.8rem);\\n\\n        .dc-input {\\n            max-width: 67.2rem;\\n        }\\n\\n        &-container {\\n            @include mobile-or-tablet-screen {\\n                width: 90vw;\\n                margin: 0 1.6rem;\\n\\n                .dc-input {\\n                    &__wrapper {\\n                        margin-top: 2.1rem;\\n                    }\\n                    &__hint {\\n                        margin-top: 0;\\n                    }\\n                }\\n            }\\n        }\\n\\n        @include mobile-or-tablet-screen {\\n            height: fit-content;\\n            position: unset;\\n            width: 100%;\\n        }\\n    }\\n\\n    &__button {\\n        margin-left: 0.8rem;\\n    }\\n\\n    &__footer {\\n        align-items: center;\\n        background-color: var(--general-main-1);\\n        display: flex;\\n        justify-content: flex-end;\\n        column-gap: 0.8rem;\\n\\n        @include mobile-or-tablet-screen {\\n            border-top: 2px solid var(--general-section-1);\\n            flex-direction: row;\\n            padding: 1.6rem;\\n            width: 100vw;\\n        }\\n    }\\n\\n    &__progress-bar {\\n        width: 5.6rem;\\n        height: 5.6rem;\\n        border-radius: 50%;\\n        border: 2px solid;\\n        display: flex;\\n        align-items: center;\\n        justify-content: center;\\n    }\\n\\n    &__dropdown {\\n        &-display {\\n            height: 4rem;\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".create-ad-summary{margin-bottom:.6rem}@media(max-width: 1279px){.create-ad-summary{margin:.6rem 0}}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/pages/my-ads/create-ad-summary.scss\"],\"names\":[],\"mappings\":\"AAysBA,mBACI,mBAAA,CAxBA,0BAuBJ,mBAIQ,cAAA,CAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n.create-ad-summary {\\n    margin-bottom: 0.6rem;\\n\\n    @include mobile-or-tablet-screen {\\n        margin: 0.6rem 0;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"@media(max-width: 1279px){.edit-ad-form .dc-input__footer{justify-content:space-between;width:86vw}.edit-ad-form .dc-input__hint--relative{margin-left:0;margin-left:initial}}@media(max-width: 1279px){.edit-ad-form .dc-input__wrapper{max-width:90vw}.edit-ad-form .dc-input__wrapper .edit-ad-form__field{margin-bottom:0}}.edit-ad-form__label--focused{color:var(--text-prominent);background-color:var(--general-main-1)}.edit-ad-form__payment-methods--empty{max-width:67.2rem;padding:1.2rem 0}.edit-ad-form__payment-methods--text{display:flex;flex-direction:column;margin-top:3.2rem;padding-bottom:1rem}.edit-ad-form__radio-group{display:flex;margin-top:0;margin-top:initial;padding-bottom:1.2rem}.edit-ad-form__radio-group .dc-radio-group__circle{border:2px solid var(--border-hover)}.edit-ad-form__radio-group .dc-radio-group__circle--selected{border:4px solid var(--brand-red-coral)}@media(max-width: 1279px){.edit-ad-form__radio-group{padding:.5rem 0}}.edit-ad-form__scrollbar{height:calc(100% - 2.4rem - 9.2rem);position:absolute;width:calc(100% - 4.8rem)}.edit-ad-form__scrollbar .dc-input{max-width:67.2rem}@media(max-width: 1279px){.edit-ad-form__scrollbar-container{width:90vw;margin:0 1.6rem}.edit-ad-form__scrollbar-container .dc-input__wrapper{margin-top:2.1rem;margin-bottom:3rem}.edit-ad-form__scrollbar-container .dc-input__hint{margin-top:0}}@media(max-width: 1279px){.edit-ad-form__scrollbar{height:-moz-fit-content;height:fit-content;position:static;position:initial;width:100%}}.edit-ad-form__container{display:flex;height:8rem;justify-content:space-between;width:67.2rem}.edit-ad-form__container .dc-input{margin-bottom:2.1rem;margin-top:2.1rem}.edit-ad-form__container .dc-input__container{padding:0 1rem}.edit-ad-form__container .dc-input--hint{margin-bottom:0}.edit-ad-form__container .dc-input__wrapper{margin-top:0}@media(max-width: 1279px){.edit-ad-form__container{flex-direction:column;height:auto;height:initial;width:auto;width:initial}.edit-ad-form__container .dc-input__wrapper{margin-bottom:5rem}}.edit-ad-form__field{height:4rem;margin-bottom:0;margin-left:0;width:32.4rem}@media(max-width: 1279px){.edit-ad-form__field{width:inherit}}.edit-ad-form__field--contact-details{margin-bottom:5.9rem}@media(max-width: 1279px){.edit-ad-form__field--contact-details{margin-bottom:3.7rem}}.edit-ad-form__field--single{width:18.9rem}.edit-ad-form__field--textarea{height:9.6rem;margin-bottom:0;width:67.2rem}@media(max-width: 1279px){.edit-ad-form__field--textarea{height:9.8rem;width:90vw}}.edit-ad-form__field--textarea .dc-input__hint{top:9.7rem}.edit-ad-form__field--textarea .dc-input___counter{top:9.7rem;right:0rem}@media(max-width: 1279px){.edit-ad-form__field--textarea .dc-input___counter{display:flex;right:0}}.edit-ad-form__field--textarea .dc-input__textarea{padding-top:1rem;padding-left:0}.edit-ad-form__field--textarea .dc-input__container{height:9.6rem}.edit-ad-form__button{margin-left:.8rem}.edit-ad-form__footer{align-items:center;background-color:var(--general-main-1);display:flex;justify-content:flex-end}@media(max-width: 1279px){.edit-ad-form__footer{border-top:2px solid var(--general-section-1);flex-direction:row;padding:1.6rem;width:100vw}}.edit-ad-form__offer-amt__sell-ad{margin-top:0 !important}.edit-ad-form__offer-amt .dc-input__label{color:var(--text-general);-webkit-text-fill-color:var(--text-general)}.edit-ad-form__offer-amt .dc-input__field:disabled{color:var(--text-less-prominent);-webkit-text-fill-color:var(--text-less-prominent)}.edit-ad-form__modal--form{height:-moz-fit-content !important;height:fit-content !important}.edit-ad-form__modal .dc-modal-header__title--edit-ad-form__modal{padding:2.4rem 2.4rem 0 !important}.edit-ad-form__modal .dc-modal__container_edit-ad-form__modal .dc-modal-footer{padding-top:0 !important}.edit-ad-form__modal .dc-modal__container_edit-ad-form__modal .dc-modal-header{padding-bottom:1rem}.edit-ad-form__dropdown-display{height:4rem}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/pages/my-ads/edit-ad-form.scss\"],\"names\":[],\"mappings\":\"AAkrBI,0BAyBI,gCACI,6BAAA,CACA,UAAA,CAGJ,wCACI,aAAA,CAAA,mBAAA,CAAA,CA/BR,0BAmCA,iCAEQ,cAAA,CAEA,sDACI,eAAA,CAAA,CAMR,8BACI,2BAAA,CACA,sCAAA,CAKJ,sCACI,iBAAA,CACA,gBAAA,CAGJ,qCACI,YAAA,CACA,qBAAA,CACA,iBAAA,CACA,mBAAA,CAIR,2BACI,YAAA,CACA,YAAA,CAAA,kBAAA,CACA,qBAAA,CAEA,mDACI,oCAAA,CAEA,6DACI,uCAAA,CA3EZ,0BAkEA,2BAcQ,eAAA,CAAA,CAIR,yBACI,mCAAA,CACA,iBAAA,CACA,yBAAA,CAEA,mCACI,iBAAA,CA1FR,0BA6FI,mCAEQ,UAAA,CACA,eAAA,CAGI,sDACI,iBAAA,CACA,kBAAA,CAEJ,mDACI,YAAA,CAAA,CAxGpB,0BAoFA,yBA2BQ,uBAAA,CAAA,kBAAA,CACA,eAAA,CAAA,gBAAA,CACA,UAAA,CAAA,CAIR,yBACI,YAAA,CACA,WAAA,CACA,6BAAA,CACA,aAAA,CAEA,mCACI,oBAAA,CACA,iBAAA,CAEA,8CACI,cAAA,CAEJ,yCACI,eAAA,CAEJ,4CACI,YAAA,CAtIZ,0BAqHA,yBAsBQ,qBAAA,CACA,WAAA,CAAA,cAAA,CACA,UAAA,CAAA,aAAA,CAGI,4CACI,kBAAA,CAAA,CAMhB,qBACI,WAAA,CACA,eAAA,CACA,aAAA,CACA,aAAA,CA3JJ,0BAuJA,qBAOQ,aAAA,CAAA,CAGJ,sCACI,oBAAA,CAlKR,0BAiKI,sCAIQ,oBAAA,CAAA,CAGR,6BACI,aAAA,CAEJ,+BACI,aAAA,CACA,eAAA,CACA,aAAA,CA9KR,0BA2KI,+BAMQ,aAAA,CACA,UAAA,CAAA,CAIA,+CACI,UAAA,CAGJ,mDACI,UAAA,CACA,UAAA,CA5LhB,0BA0LY,mDAKQ,YAAA,CACA,OAAA,CAAA,CAIR,mDACI,gBAAA,CACA,cAAA,CAGJ,oDACI,aAAA,CAMhB,sBACI,iBAAA,CAGJ,sBACI,kBAAA,CACA,sCAAA,CACA,YAAA,CACA,wBAAA,CAxNJ,0BAoNA,sBAOQ,6CAAA,CACA,kBAAA,CACA,cAAA,CACA,WAAA,CAAA,CAKJ,kCACI,uBAAA,CAGJ,0CACI,yBAAA,CACA,2CAAA,CAGJ,mDACI,gCAAA,CACA,kDAAA,CAKJ,2BACI,kCAAA,CAAA,6BAAA,CAEJ,kEACI,kCAAA,CAGA,+EACI,wBAAA,CAGJ,+EACI,mBAAA,CAMR,gCACI,WAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n.edit-ad-form {\\n    @include mobile-or-tablet-screen {\\n        .dc-input__footer {\\n            justify-content: space-between;\\n            width: 86vw;\\n        }\\n\\n        .dc-input__hint--relative {\\n            margin-left: unset;\\n        }\\n    }\\n\\n    .dc-input__wrapper {\\n        @include mobile-or-tablet-screen {\\n            max-width: 90vw;\\n\\n            .edit-ad-form__field {\\n                margin-bottom: 0;\\n            }\\n        }\\n    }\\n\\n    &__label {\\n        &--focused {\\n            color: var(--text-prominent);\\n            background-color: var(--general-main-1);\\n        }\\n    }\\n\\n    &__payment-methods {\\n        &--empty {\\n            max-width: 67.2rem;\\n            padding: 1.2rem 0;\\n        }\\n\\n        &--text {\\n            display: flex;\\n            flex-direction: column;\\n            margin-top: 3.2rem;\\n            padding-bottom: 1rem;\\n        }\\n    }\\n\\n    &__radio-group {\\n        display: flex;\\n        margin-top: unset;\\n        padding-bottom: 1.2rem;\\n\\n        .dc-radio-group__circle {\\n            border: 2px solid var(--border-hover);\\n\\n            &--selected {\\n                border: 4px solid var(--brand-red-coral);\\n            }\\n        }\\n\\n        @include mobile-or-tablet-screen {\\n            padding: 0.5rem 0;\\n        }\\n    }\\n\\n    &__scrollbar {\\n        height: calc(100% - 2.4rem - 9.2rem);\\n        position: absolute;\\n        width: calc(100% - 4.8rem);\\n\\n        .dc-input {\\n            max-width: 67.2rem;\\n        }\\n\\n        &-container {\\n            @include mobile-or-tablet-screen {\\n                width: 90vw;\\n                margin: 0 1.6rem;\\n\\n                .dc-input {\\n                    &__wrapper {\\n                        margin-top: 2.1rem;\\n                        margin-bottom: 3rem;\\n                    }\\n                    &__hint {\\n                        margin-top: 0;\\n                    }\\n                }\\n            }\\n        }\\n\\n        @include mobile-or-tablet-screen {\\n            height: fit-content;\\n            position: unset;\\n            width: 100%;\\n        }\\n    }\\n\\n    &__container {\\n        display: flex;\\n        height: 8rem;\\n        justify-content: space-between;\\n        width: 67.2rem;\\n\\n        .dc-input {\\n            margin-bottom: 2.1rem;\\n            margin-top: 2.1rem;\\n\\n            &__container {\\n                padding: 0 1rem;\\n            }\\n            &--hint {\\n                margin-bottom: 0;\\n            }\\n            &__wrapper {\\n                margin-top: 0;\\n            }\\n        }\\n\\n        @include mobile-or-tablet-screen {\\n            flex-direction: column;\\n            height: unset;\\n            width: unset;\\n\\n            .dc-input {\\n                &__wrapper {\\n                    margin-bottom: 5rem;\\n                }\\n            }\\n        }\\n    }\\n\\n    &__field {\\n        height: 4rem;\\n        margin-bottom: 0;\\n        margin-left: 0;\\n        width: 32.4rem;\\n\\n        @include mobile-or-tablet-screen {\\n            width: inherit;\\n        }\\n\\n        &--contact-details {\\n            margin-bottom: 5.9rem;\\n\\n            @include mobile-or-tablet-screen {\\n                margin-bottom: 3.7rem;\\n            }\\n        }\\n        &--single {\\n            width: 18.9rem;\\n        }\\n        &--textarea {\\n            height: 9.6rem;\\n            margin-bottom: 0;\\n            width: 67.2rem;\\n\\n            @include mobile-or-tablet-screen {\\n                height: 9.8rem;\\n                width: 90vw;\\n            }\\n\\n            .dc-input {\\n                &__hint {\\n                    top: 9.7rem;\\n                }\\n\\n                &___counter {\\n                    top: 9.7rem;\\n                    right: 0rem;\\n\\n                    @include mobile-or-tablet-screen {\\n                        display: flex;\\n                        right: 0;\\n                    }\\n                }\\n\\n                &__textarea {\\n                    padding-top: 1rem;\\n                    padding-left: 0;\\n                }\\n\\n                &__container {\\n                    height: 9.6rem;\\n                }\\n            }\\n        }\\n    }\\n\\n    &__button {\\n        margin-left: 0.8rem;\\n    }\\n\\n    &__footer {\\n        align-items: center;\\n        background-color: var(--general-main-1);\\n        display: flex;\\n        justify-content: flex-end;\\n\\n        @include mobile-or-tablet-screen {\\n            border-top: 2px solid var(--general-section-1);\\n            flex-direction: row;\\n            padding: 1.6rem;\\n            width: 100vw;\\n        }\\n    }\\n\\n    &__offer-amt {\\n        &__sell-ad {\\n            margin-top: 0 !important;\\n        }\\n\\n        .dc-input__label {\\n            color: var(--text-general);\\n            -webkit-text-fill-color: var(--text-general);\\n        }\\n\\n        .dc-input__field:disabled {\\n            color: var(--text-less-prominent);\\n            -webkit-text-fill-color: var(--text-less-prominent);\\n        }\\n    }\\n\\n    &__modal {\\n        &--form {\\n            height: fit-content !important;\\n        }\\n        .dc-modal-header__title--edit-ad-form__modal {\\n            padding: 2.4rem 2.4rem 0 !important;\\n        }\\n        .dc-modal__container_edit-ad-form__modal {\\n            .dc-modal-footer {\\n                padding-top: 0 !important;\\n            }\\n\\n            .dc-modal-header {\\n                padding-bottom: 1rem;\\n            }\\n        }\\n    }\\n\\n    &__dropdown {\\n        &-display {\\n            height: 4rem;\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".my-ads-table{display:flex;flex:1;flex-direction:column}.my-ads-table__add{align-items:center;border:1px solid var(--border-normal);border-radius:4px;cursor:pointer;display:flex;justify-content:space-between;padding:.3rem .5rem}.my-ads-table__add--disabled{cursor:not-allowed}.my-ads-table__body{flex:1;display:flex;flex-direction:column}@media(min-width: 1280px){.my-ads-table__body .ReactVirtualized__Grid__innerScrollContainer .my-ads-table__dropdown-custom .dc-list{margin-top:-18rem}}.my-ads-table__create{margin:1.6rem;width:90vw}.my-ads-table__create-container{border-top:2px solid var(--general-section-1)}.my-ads-table__payment-method{display:flex;flex-wrap:wrap}.my-ads-table__payment-method--label{align-items:center;border-radius:.4rem;border:1px solid var(--border-normal);display:flex;flex-direction:row;margin:.25rem;padding:0 .8rem;width:-moz-fit-content;width:fit-content}@media(max-width: 1279px){.my-ads-table__payment-method--label{height:2.4rem;margin:.25rem .5rem .25rem 0}}.my-ads-table__price{color:var(--text-profit-success);font-weight:bold}.my-ads-table__price .display-layout{display:flex;flex-direction:column}.my-ads-table__popovers{background-color:var(--general-main-1);display:flex;height:99%;justify-content:center;min-width:14rem;padding:1.6rem;position:absolute;right:5.5rem;top:0}.my-ads-table__popovers--disable{cursor:not-allowed !important}@media(max-width: 1279px){.my-ads-table__popovers--disable{background-color:var(--checkbox-disabled-grey) !important}}@media(max-width: 1279px){.my-ads-table__popovers{display:flex;justify-content:initial}}.my-ads-table__popovers div{margin:auto}.my-ads-table__popovers--activate{align-items:center;background-color:none;cursor:pointer;display:flex;height:3.2rem;justify-content:center;width:3.2rem}@media(min-width: 1280px){.my-ads-table__popovers--activate:hover{background-color:var(--general-hover);border-radius:.5rem}}@media(max-width: 1279px){.my-ads-table__popovers--activate{align-items:center;background-color:var(--status-warning);cursor:pointer;display:flex;height:100%;justify-content:center;width:6rem}}@media(max-width: 1279px)and (min-width: 1280px){.my-ads-table__popovers--activate:hover{background-color:var(--general-hover);border-radius:.5rem}}.my-ads-table__popovers--deactivate{align-items:center;background-color:none;cursor:pointer;display:flex;height:3.2rem;justify-content:center;width:3.2rem}@media(min-width: 1280px){.my-ads-table__popovers--deactivate:hover{background-color:var(--general-hover);border-radius:.5rem}}@media(max-width: 1279px){.my-ads-table__popovers--deactivate{align-items:center;background-color:#85acb0;cursor:pointer;display:flex;height:100%;justify-content:center;width:6rem}}@media(max-width: 1279px)and (min-width: 1280px){.my-ads-table__popovers--deactivate:hover{background-color:var(--general-hover);border-radius:.5rem}}.my-ads-table__popovers-delete{align-items:center;background-color:none;cursor:pointer;display:flex;height:3.2rem;justify-content:center;width:3.2rem}@media(min-width: 1280px){.my-ads-table__popovers-delete:hover{background-color:var(--general-hover);border-radius:.5rem}}@media(max-width: 1279px){.my-ads-table__popovers-delete{align-items:center;background-color:var(--brand-red-coral);cursor:pointer;display:flex;height:100%;justify-content:center;width:6rem}}@media(max-width: 1279px)and (min-width: 1280px){.my-ads-table__popovers-delete:hover{background-color:var(--general-hover);border-radius:.5rem}}.my-ads-table__popovers-edit{align-items:center;background-color:none;cursor:pointer;display:flex;height:3.2rem;justify-content:center;width:3.2rem}@media(min-width: 1280px){.my-ads-table__popovers-edit:hover{background-color:var(--general-hover);border-radius:.5rem}}@media(max-width: 1279px){.my-ads-table__popovers-edit{align-items:center;background-color:var(--status-info);cursor:pointer;display:flex;height:100%;justify-content:center;width:6rem}}@media(max-width: 1279px)and (min-width: 1280px){.my-ads-table__popovers-edit:hover{background-color:var(--general-hover);border-radius:.5rem}}.my-ads-table__popovers-share{align-items:center;background-color:none;cursor:pointer;display:flex;height:3.2rem;justify-content:center;width:3.2rem}@media(min-width: 1280px){.my-ads-table__popovers-share:hover{background-color:var(--general-hover);border-radius:.5rem}}@media(max-width: 1279px){.my-ads-table__popovers-share{align-items:center;background-color:#4bb4b3;cursor:pointer;display:flex;height:100%;justify-content:center;width:6rem}}@media(max-width: 1279px)and (min-width: 1280px){.my-ads-table__popovers-share:hover{background-color:var(--general-hover);border-radius:.5rem}}.my-ads-table__available{align-items:flex-start;flex-flow:column;justify-content:center;width:85%}.my-ads-table__available-progress{margin-bottom:.4rem}@media(max-width: 1279px){.my-ads-table__available-progress{margin:.4rem 0}}.my-ads-table__row{padding:1.6rem;grid-template-columns:repeat(3, 1.6fr) 1.9fr 3fr 1.9fr}[dir=rtl] .my-ads-table__row{direction:rtl}[dir=\\\"ltr\\\"] .my-ads-table__row .dc-table__head:nth-last-child(2){margin-left:2rem}[dir=\\\"rtl\\\"] .my-ads-table__row .dc-table__head:nth-last-child(2){margin-right:2rem}.my-ads-table__row .dc-table__cell:last-child{word-break:inherit}@media(max-width: 1279px){.my-ads-table__row{grid-template-columns:initial;padding:1.6rem;width:100%}}.my-ads-table__row__type-and-status{display:flex;margin-bottom:.8rem;align-items:center}.my-ads-table__row__type-and-status span:first-child{flex:1}.my-ads-table__row-details{display:flex;justify-content:space-between}.my-ads-table__row-disabled .dc-table__cell{color:var(--text-disabled)}.my-ads-table__row-disabled .dc-progress-indicator__container{background-color:var(--general-section-1)}.my-ads-table__row-disabled .dc-progress-indicator__bar{background-color:var(--general-disabled)}.my-ads-table__row-disabled .dc-text:not(.ad-status--inactive):not(.dc-list__item-text){color:var(--text-disabled)}.my-ads-table__row-methods{display:flex;flex-wrap:wrap}[dir=\\\"ltr\\\"] .my-ads-table__status{margin-left:1.9rem}[dir=\\\"rtl\\\"] .my-ads-table__status{margin-right:1.9rem}.my-ads-table__status{width:100%}.my-ads-table__status-warning{align-items:center;display:flex;flex-direction:row;justify-content:space-around;width:100%;cursor:pointer}@media(max-width: 1279px){.my-ads-table__status-warning{align-items:center;display:flex;justify-content:initial;width:auto;width:initial;gap:1rem}}.my-ads-table__status-warning .dc-popover__target{display:flex}.my-ads-table__status-more{margin-left:0 !important}.my-ads-table__status-more{min-width:0;height:3.2rem}[dir=rtl] .my-ads-table__status-more{margin-right:0}@media(max-width: 1279px){.my-ads-table__status-more{min-width:3.2rem;width:3.2rem}.my-ads-table__status-more.dc-dropdown--disabled .suffix-icon{--fill-color1: var(--text-disabled)}}@media(min-width: 1280px){.my-ads-table__status-more--display{display:none}}@media(max-width: 1279px){.my-ads-table__status-more--display{background-color:rgba(0,0,0,0) !important;border:0 !important}}.my-ads-table__status-more .dc-list{right:0}[dir=rtl] .my-ads-table__status-more .dc-list{left:0;right:auto;right:initial}@media(min-width: 1280px){.my-ads-table__status-more .dc-list{margin-top:4.5rem}}.my-ads-table__status-more .suffix-icon{top:.8rem;left:.8rem}.my-ads-table__status-bubble{top:.5rem}.my-ads-table__status-target{border-radius:.4rem;width:3.2rem;height:3.2rem;display:flex;align-items:center;justify-content:center;cursor:pointer}.my-ads-table__status-target:hover{background-color:var(--general-active)}.my-ads-table--disabled .dc-table__cell{color:var(--text-disabled)}.my-ads-table--disabled .dc-progress-indicator__container{background-color:var(--general-section-1)}.my-ads-table--disabled .dc-progress-indicator__bar{background-color:var(--general-disabled)}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/pages/my-ads/my-ads-table.scss\"],\"names\":[],\"mappings\":\"AA0tBA,cACI,YAAA,CACA,MAAA,CACA,qBAAA,CAEA,mBACI,kBAAA,CACA,qCAAA,CACA,iBAAA,CACA,cAAA,CACA,YAAA,CACA,6BAAA,CACA,mBAAA,CAEA,6BACI,kBAAA,CAIR,oBACI,MAAA,CACA,YAAA,CACA,qBAAA,CApEJ,0BAuEQ,0GAEQ,iBAAA,CAAA,CAMhB,sBACI,aAAA,CACA,UAAA,CAEA,gCACI,6CAAA,CAIR,8BACI,YAAA,CACA,cAAA,CAEA,qCACI,kBAAA,CACA,mBAAA,CACA,qCAAA,CACA,YAAA,CACA,kBAAA,CACA,aAAA,CACA,eAAA,CACA,sBAAA,CAAA,iBAAA,CA9FR,0BAsFI,qCAWQ,aAAA,CACA,4BAAA,CAAA,CAKZ,qBACI,gCAAA,CACA,gBAAA,CAEA,qCACI,YAAA,CACA,qBAAA,CAIR,wBACI,sCAAA,CACA,YAAA,CACA,UAAA,CACA,sBAAA,CACA,eAAA,CACA,cAAA,CACA,iBAAA,CACA,YAAA,CACA,KAAA,CAEA,iCACI,6BAAA,CA7HR,0BA4HI,iCAIQ,yDAAA,CAAA,CAhIZ,0BAiHA,wBAoBQ,YAAA,CACA,uBAAA,CAAA,CAGJ,4BACI,WAAA,CAGJ,kCArHJ,kBAAA,CACA,qBAqH8B,CApH9B,cAAA,CACA,YAAA,CACA,aAkHoC,CAjHpC,sBAAA,CACA,YAgH4C,CApJ5C,0BAuCI,wCACI,qCAAA,CACA,mBAAA,CAAA,CAnCR,0BA6II,kCArHJ,kBAAA,CACA,sCAwHkC,CAvHlC,cAAA,CACA,YAAA,CACA,WAqHyD,CApHzD,sBAAA,CACA,UAmH+D,CAAA,CAvJ/D,iDAuCI,wCACI,qCAAA,CACA,mBAAA,CAAA,CAkHJ,oCA7HJ,kBAAA,CACA,qBA6H8B,CA5H9B,cAAA,CACA,YAAA,CACA,aA0HoC,CAzHpC,sBAAA,CACA,YAwH4C,CA5J5C,0BAuCI,0CACI,qCAAA,CACA,mBAAA,CAAA,CAnCR,0BAqJI,oCA7HJ,kBAAA,CACA,wBAgIkC,CA/HlC,cAAA,CACA,YAAA,CACA,WA6H2C,CA5H3C,sBAAA,CACA,UA2HiD,CAAA,CA/JjD,iDAuCI,0CACI,qCAAA,CACA,mBAAA,CAAA,CA0HJ,+BArIJ,kBAAA,CACA,qBAqI8B,CApI9B,cAAA,CACA,YAAA,CACA,aAkIoC,CAjIpC,sBAAA,CACA,YAgI4C,CApK5C,0BAuCI,qCACI,qCAAA,CACA,mBAAA,CAAA,CAnCR,0BA6JI,+BArIJ,kBAAA,CACA,uCAwIkC,CAvIlC,cAAA,CACA,YAAA,CACA,WAqI0D,CApI1D,sBAAA,CACA,UAmIgE,CAAA,CAvKhE,iDAuCI,qCACI,qCAAA,CACA,mBAAA,CAAA,CAkIJ,6BA7IJ,kBAAA,CACA,qBA6I8B,CA5I9B,cAAA,CACA,YAAA,CACA,aA0IoC,CAzIpC,sBAAA,CACA,YAwI4C,CA5K5C,0BAuCI,mCACI,qCAAA,CACA,mBAAA,CAAA,CAnCR,0BAqKI,6BA7IJ,kBAAA,CACA,mCAgJkC,CA/IlC,cAAA,CACA,YAAA,CACA,WA6IsD,CA5ItD,sBAAA,CACA,UA2I4D,CAAA,CA/K5D,iDAuCI,mCACI,qCAAA,CACA,mBAAA,CAAA,CA0IJ,8BArJJ,kBAAA,CACA,qBAqJ8B,CApJ9B,cAAA,CACA,YAAA,CACA,aAkJoC,CAjJpC,sBAAA,CACA,YAgJ4C,CApL5C,0BAuCI,oCACI,qCAAA,CACA,mBAAA,CAAA,CAnCR,0BA6KI,8BArJJ,kBAAA,CACA,wBApqBY,CAqqBZ,cAAA,CACA,YAAA,CACA,WAqJkD,CApJlD,sBAAA,CACA,UAmJwD,CAAA,CAvLxD,iDAuCI,oCACI,qCAAA,CACA,mBAAA,CAAA,CAmJR,yBACI,sBAAA,CACA,gBAAA,CACA,sBAAA,CACA,SAAA,CAEA,kCACI,mBAAA,CA7LR,0BA4LI,kCAIQ,cAAA,CAAA,CAKZ,mBACI,cAAA,CACA,sDAAA,CAl3BJ,6BAq3BQ,aAAA,CAGJ,iEACI,gBAAA,CADJ,iEACI,iBAAA,CAGJ,8CACI,kBAAA,CAlNR,0BAqMA,mBAiBQ,6BAAA,CACA,cAAA,CACA,UAAA,CAAA,CAGJ,oCACI,YAAA,CACA,mBAAA,CACA,kBAAA,CAEA,qDACI,MAAA,CAIR,2BACI,YAAA,CACA,6BAAA,CAIA,4CACI,0BAAA,CAIA,8DACI,yCAAA,CAEJ,wDACI,wCAAA,CAKJ,wFACI,0BAAA,CAKZ,2BACI,YAAA,CACA,cAAA,CAIR,kCAEI,kBAAA,CAFJ,kCAEI,mBAAA,CAFJ,sBACI,UACA,CAEA,8BACI,kBAAA,CACA,YAAA,CACA,kBAAA,CACA,4BAAA,CACA,UAAA,CACA,cAAA,CA/QR,0BAyQI,8BASQ,kBAAA,CACA,YAAA,CACA,uBAAA,CACA,UAAA,CAAA,aAAA,CACA,QAAA,CAAA,CAEJ,kDACI,YAAA,CAIR,2BAGI,wBAAA,CAHJ,2BACI,WAAA,CACA,aACA,CA38BR,qCA88BY,cAAA,CAnSZ,0BA6RI,2BAUQ,gBAAA,CACA,YAAA,CAGI,8DACI,mCAAA,CAAA,CAlTpB,0BAuTQ,oCAEQ,YAAA,CAAA,CAnThB,0BAiTQ,oCAMQ,yCAAA,CACA,mBAAA,CAAA,CAIR,oCACI,OAAA,CAx+BZ,8CA2+BgB,MAAA,CACA,UAAA,CAAA,aAAA,CAvUhB,0BAkUQ,oCASQ,iBAAA,CAAA,CAIR,wCACI,SAAA,CACA,UAAA,CAIR,6BACI,SAAA,CAGJ,6BACI,mBAAA,CACA,YAAA,CACA,aAAA,CACA,YAAA,CACA,kBAAA,CACA,sBAAA,CACA,cAAA,CAEA,mCACI,sCAAA,CAMR,wCACI,0BAAA,CAIA,0DACI,yCAAA,CAEJ,oDACI,wCAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin popoverIcons($background-color, $height, $width) {\\n    align-items: center;\\n    background-color: $background-color;\\n    cursor: pointer;\\n    display: flex;\\n    height: $height;\\n    justify-content: center;\\n    width: $width;\\n\\n    @include desktop-screen {\\n        &:hover {\\n            background-color: var(--general-hover);\\n            border-radius: 0.5rem;\\n        }\\n    }\\n}\\n\\n.my-ads-table {\\n    display: flex;\\n    flex: 1;\\n    flex-direction: column;\\n\\n    &__add {\\n        align-items: center;\\n        border: 1px solid var(--border-normal);\\n        border-radius: 4px;\\n        cursor: pointer;\\n        display: flex;\\n        justify-content: space-between;\\n        padding: 0.3rem 0.5rem;\\n\\n        &--disabled {\\n            cursor: not-allowed;\\n        }\\n    }\\n\\n    &__body {\\n        flex: 1;\\n        display: flex;\\n        flex-direction: column;\\n\\n        .ReactVirtualized__Grid__innerScrollContainer {\\n            .my-ads-table__dropdown-custom .dc-list {\\n                @include desktop-screen {\\n                    margin-top: -18rem;\\n                }\\n            }\\n        }\\n    }\\n\\n    &__create {\\n        margin: 1.6rem;\\n        width: 90vw;\\n\\n        &-container {\\n            border-top: 2px solid var(--general-section-1);\\n        }\\n    }\\n\\n    &__payment-method {\\n        display: flex;\\n        flex-wrap: wrap;\\n\\n        &--label {\\n            align-items: center;\\n            border-radius: 0.4rem;\\n            border: 1px solid var(--border-normal);\\n            display: flex;\\n            flex-direction: row;\\n            margin: 0.25rem;\\n            padding: 0 0.8rem;\\n            width: fit-content;\\n\\n            @include mobile-or-tablet-screen {\\n                height: 2.4rem;\\n                margin: 0.25rem 0.5rem 0.25rem 0;\\n            }\\n        }\\n    }\\n\\n    &__price {\\n        color: var(--text-profit-success);\\n        font-weight: bold;\\n\\n        .display-layout {\\n            display: flex;\\n            flex-direction: column;\\n        }\\n    }\\n\\n    &__popovers {\\n        background-color: var(--general-main-1);\\n        display: flex;\\n        height: 99%;\\n        justify-content: center;\\n        min-width: 14rem;\\n        padding: 1.6rem;\\n        position: absolute;\\n        right: 5.5rem;\\n        top: 0;\\n\\n        &--disable {\\n            cursor: not-allowed !important;\\n\\n            @include mobile-or-tablet-screen {\\n                background-color: var(--checkbox-disabled-grey) !important;\\n            }\\n        }\\n\\n        @include mobile-or-tablet-screen {\\n            display: flex;\\n            justify-content: unset;\\n        }\\n\\n        div {\\n            margin: auto;\\n        }\\n\\n        &--activate {\\n            @include popoverIcons(none, 3.2rem, 3.2rem);\\n\\n            @include mobile-or-tablet-screen {\\n                @include popoverIcons(var(--status-warning), 100%, 6rem);\\n            }\\n        }\\n\\n        &--deactivate {\\n            @include popoverIcons(none, 3.2rem, 3.2rem);\\n\\n            @include mobile-or-tablet-screen {\\n                @include popoverIcons(#85acb0, 100%, 6rem);\\n            }\\n        }\\n\\n        &-delete {\\n            @include popoverIcons(none, 3.2rem, 3.2rem);\\n\\n            @include mobile-or-tablet-screen {\\n                @include popoverIcons(var(--brand-red-coral), 100%, 6rem);\\n            }\\n        }\\n\\n        &-edit {\\n            @include popoverIcons(none, 3.2rem, 3.2rem);\\n\\n            @include mobile-or-tablet-screen {\\n                @include popoverIcons(var(--status-info), 100%, 6rem);\\n            }\\n        }\\n\\n        &-share {\\n            @include popoverIcons(none, 3.2rem, 3.2rem);\\n\\n            @include mobile-or-tablet-screen {\\n                @include popoverIcons($color-green-1, 100%, 6rem);\\n            }\\n        }\\n    }\\n\\n    &__available {\\n        align-items: flex-start;\\n        flex-flow: column;\\n        justify-content: center;\\n        width: 85%;\\n\\n        &-progress {\\n            margin-bottom: 0.4rem;\\n\\n            @include mobile-or-tablet-screen {\\n                margin: 0.4rem 0;\\n            }\\n        }\\n    }\\n\\n    &__row {\\n        padding: 1.6rem;\\n        grid-template-columns: repeat(3, 1.6fr) 1.9fr 3fr 1.9fr;\\n\\n        @include rtl {\\n            direction: rtl;\\n        }\\n\\n        .dc-table__head:nth-last-child(2) {\\n            margin-inline-start: 2rem;\\n        }\\n\\n        .dc-table__cell:last-child {\\n            word-break: unset;\\n        }\\n\\n        @include mobile-or-tablet-screen {\\n            grid-template-columns: unset;\\n            padding: 1.6rem;\\n            width: 100%;\\n        }\\n\\n        &__type-and-status {\\n            display: flex;\\n            margin-bottom: 0.8rem;\\n            align-items: center;\\n\\n            span:first-child {\\n                flex: 1;\\n            }\\n        }\\n\\n        &-details {\\n            display: flex;\\n            justify-content: space-between;\\n        }\\n\\n        &-disabled {\\n            .dc-table__cell {\\n                color: var(--text-disabled);\\n            }\\n\\n            .dc-progress-indicator {\\n                &__container {\\n                    background-color: var(--general-section-1);\\n                }\\n                &__bar {\\n                    background-color: var(--general-disabled);\\n                }\\n            }\\n\\n            .dc-text {\\n                &:not(.ad-status--inactive, .dc-list__item-text) {\\n                    color: var(--text-disabled);\\n                }\\n            }\\n        }\\n\\n        &-methods {\\n            display: flex;\\n            flex-wrap: wrap;\\n        }\\n    }\\n\\n    &__status {\\n        width: 100%;\\n        margin-inline-start: 1.9rem;\\n\\n        &-warning {\\n            align-items: center;\\n            display: flex;\\n            flex-direction: row;\\n            justify-content: space-around;\\n            width: 100%;\\n            cursor: pointer;\\n\\n            @include mobile-or-tablet-screen {\\n                align-items: center;\\n                display: flex;\\n                justify-content: unset;\\n                width: unset;\\n                gap: 1rem;\\n            }\\n            .dc-popover__target {\\n                display: flex;\\n            }\\n        }\\n\\n        &-more {\\n            min-width: 0;\\n            height: 3.2rem;\\n            margin-left: 0 !important;\\n\\n            @include rtl {\\n                margin-right: 0;\\n            }\\n\\n            @include mobile-or-tablet-screen {\\n                min-width: 3.2rem;\\n                width: 3.2rem;\\n\\n                &.dc-dropdown--disabled {\\n                    .suffix-icon {\\n                        --fill-color1: var(--text-disabled);\\n                    }\\n                }\\n            }\\n\\n            &--display {\\n                @include desktop-screen {\\n                    display: none;\\n                }\\n\\n                @include mobile-or-tablet-screen {\\n                    background-color: transparent !important;\\n                    border: 0 !important;\\n                }\\n            }\\n\\n            .dc-list {\\n                right: 0;\\n\\n                @include rtl {\\n                    left: 0;\\n                    right: unset;\\n                }\\n\\n                @include desktop-screen {\\n                    margin-top: 4.5rem;\\n                }\\n            }\\n\\n            .suffix-icon {\\n                top: 0.8rem;\\n                left: 0.8rem;\\n            }\\n        }\\n\\n        &-bubble {\\n            top: 0.5rem;\\n        }\\n\\n        &-target {\\n            border-radius: 0.4rem;\\n            width: 3.2rem;\\n            height: 3.2rem;\\n            display: flex;\\n            align-items: center;\\n            justify-content: center;\\n            cursor: pointer;\\n\\n            &:hover {\\n                background-color: var(--general-active);\\n            }\\n        }\\n    }\\n\\n    &--disabled {\\n        .dc-table__cell {\\n            color: var(--text-disabled);\\n        }\\n\\n        .dc-progress-indicator {\\n            &__container {\\n                background-color: var(--general-section-1);\\n            }\\n            &__bar {\\n                background-color: var(--general-disabled);\\n            }\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".my-ads{flex:1;display:flex;flex-direction:column;overflow-y:auto;overflow-x:hidden}@media(max-width: 1279px){.my-ads .page-return{border-bottom:2px solid var(--general-section-1);margin:0;padding:1.6rem}.my-ads .dc-mobile-full-page-modal{opacity:1 !important}}@media(min-width: 601px)and (max-width: 1279px){.my-ads{max-width:60rem}}.my-ads__header{display:flex;align-items:center;margin:1.6rem 0;justify-content:space-between;min-height:50px}@media(max-width: 1279px){.my-ads__header{border-bottom:1px solid var(--general-section-1);justify-content:flex-end;margin:0;margin:initial}}.my-ads--border .dc-input__container{border:1px dashed var(--border-normal)}.my-ads__state{text-align:center;margin:0 auto}.my-ads__state-button{margin-top:12px}.my-ads__create{margin:1.6rem;width:90vw}@media(min-width: 601px)and (max-width: 1279px){.my-ads__create{margin:1.6rem 0;width:100%}}.my-ads__create-container{border-top:2px solid var(--general-section-1)}.my-ads__data-list{height:100% !important}.my-ads__data-list{flex:1}.my-ads__data-list__data-list-body{flex:1}.my-ads__data-list .data-list__body-wrapper{flex:1}.my-ads__data-list .dc-themed-scrollbars{height:100% !important}.my-ads__data-list .ReactVirtualized__Grid__innerScrollContainer{overflow:visible !important}.my-ads__page-return{border-bottom:2px solid var(--general-section-1);margin:0;margin:initial;padding:0 2rem 1.6rem}.my-ads__warning{margin-top:1.6rem;width:-moz-fit-content;width:fit-content}@media(max-width: 1279px){.my-ads__warning{margin:1rem 2rem}.my-ads__warning .dc-hint-box{align-items:normal}.my-ads__warning .dc-hint-box__icon{width:3.5rem;align-items:flex-start}}.my-ads__expand-button{vertical-align:baseline;vertical-align:initial;border-radius:0;border-radius:initial;height:auto;height:initial}@media(max-width: 1279px){.dc-modal__container_switch-ads{min-width:328px !important}}.dc-modal__container_p2p-my-ads__modal-error .ad-create-edit-error-modal__message{white-space:pre-wrap}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/pages/my-ads/my-ads.scss\"],\"names\":[],\"mappings\":\"AAmtBA,QACI,MAAA,CACA,YAAA,CACA,qBAAA,CACA,eAAA,CACA,iBAAA,CAtCA,0BAyCI,qBACI,gDAAA,CACA,QAAA,CACA,cAAA,CAGJ,mCACI,oBAAA,CAAA,CA5DR,gDA6CJ,QAoBQ,eAAA,CAAA,CAGJ,gBACI,YAAA,CACA,kBAAA,CACA,eAAA,CACA,6BAAA,CACA,eAAA,CA7DJ,0BAwDA,gBAQQ,gDAAA,CACA,wBAAA,CACA,QAAA,CAAA,cAAA,CAAA,CAKJ,qCACI,sCAAA,CAIR,eACI,iBAAA,CACA,aAAA,CAEA,sBACI,eAAA,CAIR,gBACI,aAAA,CACA,UAAA,CAnGJ,gDAiGA,gBAKQ,eAAA,CACA,UAAA,CAAA,CAGJ,0BACI,6CAAA,CAIR,mBACI,sBACA,CAFJ,mBAEI,MAAA,CAEA,mCACI,MAAA,CAGJ,4CACI,MAAA,CAGJ,yCACI,sBAAA,CAGJ,iEACI,2BAAA,CAIR,qBACI,gDAAA,CACA,QAAA,CAAA,cAAA,CACA,qBAAA,CAGJ,iBACI,iBAAA,CACA,sBAAA,CAAA,iBAAA,CAhIJ,0BA8HA,iBAKQ,gBAAA,CAEA,8BACI,kBAAA,CAEA,oCACI,YAAA,CACA,sBAAA,CAAA,CAMhB,uBACI,uBAAA,CAAA,sBAAA,CACA,eAAA,CAAA,qBAAA,CACA,WAAA,CAAA,cAAA,CAnJJ,0BAuJJ,gCAEQ,0BAAA,CAAA,CAKJ,kFACI,oBAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin popoverIcons($background-color, $height, $width) {\\n    align-items: center;\\n    background-color: $background-color;\\n    cursor: pointer;\\n    display: flex;\\n    height: $height;\\n    justify-content: center;\\n    width: $width;\\n}\\n\\n.my-ads {\\n    flex: 1;\\n    display: flex;\\n    flex-direction: column;\\n    overflow-y: auto;\\n    overflow-x: hidden;\\n\\n    @include mobile-or-tablet-screen {\\n        .page-return {\\n            border-bottom: 2px solid var(--general-section-1);\\n            margin: 0;\\n            padding: 1.6rem;\\n        }\\n\\n        .dc-mobile-full-page-modal {\\n            opacity: 1 !important;\\n        }\\n    }\\n\\n    @include tablet-screen {\\n        max-width: 60rem;\\n    }\\n\\n    &__header {\\n        display: flex;\\n        align-items: center;\\n        margin: 1.6rem 0;\\n        justify-content: space-between;\\n        min-height: 50px;\\n\\n        @include mobile-or-tablet-screen {\\n            border-bottom: 1px solid var(--general-section-1);\\n            justify-content: flex-end;\\n            margin: unset;\\n        }\\n    }\\n\\n    &--border {\\n        .dc-input__container {\\n            border: 1px dashed var(--border-normal);\\n        }\\n    }\\n\\n    &__state {\\n        text-align: center;\\n        margin: 0 auto;\\n\\n        &-button {\\n            margin-top: 12px;\\n        }\\n    }\\n\\n    &__create {\\n        margin: 1.6rem;\\n        width: 90vw;\\n\\n        @include tablet-screen {\\n            margin: 1.6rem 0;\\n            width: 100%;\\n        }\\n\\n        &-container {\\n            border-top: 2px solid var(--general-section-1);\\n        }\\n    }\\n\\n    &__data-list {\\n        height: 100% !important;\\n        flex: 1;\\n\\n        &__data-list-body {\\n            flex: 1;\\n        }\\n\\n        .data-list__body-wrapper {\\n            flex: 1;\\n        }\\n\\n        .dc-themed-scrollbars {\\n            height: 100% !important;\\n        }\\n\\n        .ReactVirtualized__Grid__innerScrollContainer {\\n            overflow: visible !important;\\n        }\\n    }\\n\\n    &__page-return {\\n        border-bottom: 2px solid var(--general-section-1);\\n        margin: unset;\\n        padding: 0 2rem 1.6rem;\\n    }\\n\\n    &__warning {\\n        margin-top: 1.6rem;\\n        width: fit-content;\\n\\n        @include mobile-or-tablet-screen {\\n            margin: 1rem 2rem;\\n\\n            .dc-hint-box {\\n                align-items: normal;\\n\\n                &__icon {\\n                    width: 3.5rem;\\n                    align-items: flex-start;\\n                }\\n            }\\n        }\\n    }\\n\\n    &__expand-button {\\n        vertical-align: unset;\\n        border-radius: unset;\\n        height: unset;\\n    }\\n}\\n\\n.dc-modal__container_switch-ads {\\n    @include mobile-or-tablet-screen {\\n        min-width: 328px !important;\\n    }\\n}\\n\\n.dc-modal__container_p2p-my-ads__modal-error {\\n    .ad-create-edit-error-modal__message {\\n        white-space: pre-wrap;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".order-time-selection{max-width:67.2rem;margin-top:2.4rem}.order-time-selection__title{display:flex;align-items:center;gap:.8rem}.order-time-selection__popover{max-width:none;max-width:initial}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/pages/my-ads/order-time-selection/order-time-selection.scss\"],\"names\":[],\"mappings\":\"AAysBA,sBACI,iBAAA,CACA,iBAAA,CACA,6BACI,YAAA,CACA,kBAAA,CACA,SAAA,CAGJ,+BACI,cAAA,CAAA,iBAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n.order-time-selection {\\n    max-width: 67.2rem;\\n    margin-top: 2.4rem;\\n    &__title {\\n        display: flex;\\n        align-items: center;\\n        gap: 0.8rem;\\n    }\\n\\n    &__popover {\\n        max-width: unset;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"@media(min-width: 1280px){.preferred-countries-selector{max-width:32.8rem !important}.preferred-countries-selector__input,.preferred-countries-selector__icon{cursor:pointer}}.preferred-countries-selector__input{text-overflow:ellipsis}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/pages/my-ads/preferred-countries-selector/preferred-countries-selector.scss\"],\"names\":[],\"mappings\":\"AA4qBI,0BA6BJ,8BAEQ,4BAAA,CAEA,yEAEI,cAAA,CAAA,CAIR,qCACI,sBAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n.preferred-countries-selector {\\n    @include desktop-screen {\\n        max-width: 32.8rem !important;\\n\\n        &__input,\\n        &__icon {\\n            cursor: pointer;\\n        }\\n    }\\n\\n    &__input {\\n        text-overflow: ellipsis;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".sell-ad-payment-methods-list__container{display:grid;grid-template-columns:repeat(4, 0.19fr);grid-column-gap:2rem;-moz-column-gap:2rem;column-gap:2rem}.sell-ad-payment-methods-list__container--horizontal{grid-auto-flow:column}.sell-ad-payment-methods-list__container--horizontal .payment-method-card{margin:1rem 1.5rem 1rem auto}.sell-ad-payment-methods-list__container--horizontal .payment-method-card--add{margin:1rem 1.5rem 1rem 0}@media(max-width: 1279px){.sell-ad-payment-methods-list__container{margin-bottom:2rem}}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/pages/my-ads/sell-ad-payment-methods-list.scss\"],\"names\":[],\"mappings\":\"AA0sBI,yCACI,YAAA,CACA,uCAAA,CACA,oBAAA,CAAA,oBAAA,CAAA,eAAA,CAEA,qDACI,qBAAA,CACA,0EACI,4BAAA,CAGJ,+EACI,yBAAA,CApCZ,0BAwBA,yCAiBQ,kBAAA,CAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n.sell-ad-payment-methods-list {\\n    &__container {\\n        display: grid;\\n        grid-template-columns: repeat(4, 0.19fr);\\n        column-gap: 2rem;\\n\\n        &--horizontal {\\n            grid-auto-flow: column;\\n            & .payment-method-card {\\n                margin: 1rem 1.5rem 1rem auto;\\n            }\\n\\n            & .payment-method-card--add {\\n                margin: 1rem 1.5rem 1rem 0;\\n            }\\n        }\\n\\n        @include mobile-or-tablet-screen {\\n            margin-bottom: 2rem;\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".toggle-ads{display:flex;align-items:center;justify-items:flex-start}[dir=\\\"ltr\\\"] .toggle-ads__message{margin-right:1.6rem}[dir=\\\"rtl\\\"] .toggle-ads__message{margin-left:1.6rem}@media(max-width: 1279px){.toggle-ads .dc-toggle-switch__label{cursor:inherit}}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/pages/my-ads/toggle-ads.scss\"],\"names\":[],\"mappings\":\"AAysBA,YACI,YAAA,CACA,kBAAA,CACA,wBAAA,CAEA,iCACI,mBAAA,CADJ,iCACI,kBAAA,CA7BJ,0BAiCI,qCACI,cAAA,CAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n.toggle-ads {\\n    display: flex;\\n    align-items: center;\\n    justify-items: flex-start;\\n\\n    &__message {\\n        margin-inline-end: 1.6rem;\\n    }\\n\\n    @include mobile-or-tablet-screen {\\n        & .dc-toggle-switch__label {\\n            cursor: unset;\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".block-user-dropdown{margin-left:1rem;width:20rem}@media(max-width: 1279px){.block-user-dropdown{display:flex;align-items:center;justify-content:center;border:1px solid var(--border-normal);border-radius:4px;padding:.8rem;height:4rem;width:4rem}}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/pages/my-profile/block-user/block-user-dropdown/block-user-dropdown.scss\"],\"names\":[],\"mappings\":\"AAysBA,qBACI,gBAAA,CACA,WAAA,CAzBA,0BAuBJ,qBAKQ,YAAA,CACA,kBAAA,CACA,sBAAA,CACA,qCAAA,CACA,iBAAA,CACA,aAAA,CACA,WAAA,CACA,UAAA,CAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n.block-user-dropdown {\\n    margin-left: 1rem;\\n    width: 20rem;\\n\\n    @include mobile-or-tablet-screen {\\n        display: flex;\\n        align-items: center;\\n        justify-content: center;\\n        border: 1px solid var(--border-normal);\\n        border-radius: 4px;\\n        padding: 0.8rem;\\n        height: 4rem;\\n        width: 4rem;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".block-user-empty{align-items:center;display:flex;flex-direction:column}@media(max-width: 1279px){.block-user-empty{margin-top:16rem}}.block-user-empty__icon{margin-top:2.2rem}.block-user-empty__text{margin:3rem 0 .8rem}.block-user-empty__mobile-content{width:100vw;display:flex;flex-direction:column;align-items:center;margin-top:2.6rem}@media(min-width: 601px)and (max-width: 1279px){.block-user-empty__mobile-content{width:100%}}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/pages/my-profile/block-user/block-user-empty/block-user-empty.scss\"],\"names\":[],\"mappings\":\"AAysBA,kBACI,kBAAA,CACA,YAAA,CACA,qBAAA,CA1BA,0BAuBJ,kBAMQ,gBAAA,CAAA,CAGJ,wBACI,iBAAA,CAGJ,wBACI,mBAAA,CAIA,kCACI,WAAA,CACA,YAAA,CACA,qBAAA,CACA,kBAAA,CACA,iBAAA,CA1DR,gDAqDI,kCAQQ,UAAA,CAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n.block-user-empty {\\n    align-items: center;\\n    display: flex;\\n    flex-direction: column;\\n\\n    @include mobile-or-tablet-screen {\\n        margin-top: 16rem;\\n    }\\n\\n    &__icon {\\n        margin-top: 2.2rem;\\n    }\\n\\n    &__text {\\n        margin: 3rem 0 0.8rem;\\n    }\\n\\n    &__mobile {\\n        &-content {\\n            width: 100vw;\\n            display: flex;\\n            flex-direction: column;\\n            align-items: center;\\n            margin-top: 2.6rem;\\n\\n            @include tablet-screen {\\n                width: 100%;\\n            }\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".block-user-list{display:flex;flex:1;flex-direction:column;height:100%}.block-user-list .search-box{margin:0rem .8rem 2.4rem;width:20rem}@media(max-width: 1279px){.block-user-list .search-box{width:15rem}}.block-user-list__header{display:flex;flex-direction:row}@media(max-width: 1279px){.block-user-list__header{align-items:center;margin:0 1.6rem;z-index:7}}.block-user-list__text{margin:0 .8rem 2rem}@media(max-width: 1279px){.block-user-list__text{margin:1.6rem;z-index:7}}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/pages/my-profile/block-user/block-user-list/block-user-list.scss\"],\"names\":[],\"mappings\":\"AAysBA,iBACI,YAAA,CACA,MAAA,CACA,qBAAA,CACA,WAAA,CAEA,6BACI,wBAAA,CACA,WAAA,CA/BJ,0BA6BA,6BAKQ,WAAA,CAAA,CAIR,yBACI,YAAA,CACA,kBAAA,CAxCJ,0BAsCA,yBAKQ,kBAAA,CACA,eAAA,CACA,SAAA,CAAA,CAIR,uBACI,mBAAA,CAlDJ,0BAiDA,uBAIQ,aAAA,CACA,SAAA,CAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n.block-user-list {\\n    display: flex;\\n    flex: 1;\\n    flex-direction: column;\\n    height: 100%;\\n\\n    & .search-box {\\n        margin: 0rem 0.8rem 2.4rem;\\n        width: 20rem;\\n\\n        @include mobile-or-tablet-screen {\\n            width: 15rem;\\n        }\\n    }\\n\\n    &__header {\\n        display: flex;\\n        flex-direction: row;\\n\\n        @include mobile-or-tablet-screen {\\n            align-items: center;\\n            margin: 0 1.6rem;\\n            z-index: 7;\\n        }\\n    }\\n\\n    &__text {\\n        margin: 0 0.8rem 2rem;\\n\\n        @include mobile-or-tablet-screen {\\n            margin: 1.6rem;\\n            z-index: 7;\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".block-user-row{display:grid;padding:1.6rem;grid-template-columns:1fr 1fr}.block-user-row:hover{background-color:var(--general-hover)}@media(max-width: 1279px){.block-user-row:hover{background-color:inherit}}.block-user-row__button-group{display:flex;justify-content:flex-end;align-items:center}.block-user-row__button-group button{min-width:9rem}@media(max-width: 1279px){.block-user-row__button-group__unblock-button:hover{background:rgba(0,0,0,0) !important}}@media(max-width: 1279px){.block-user-row__button-group__block-button:hover{background:rgba(0,0,0,0) !important}.block-user-row__button-group__block-button>span{color:var(--brand-red-coral) !important}}.block-user-row__cell{align-items:center;display:flex;cursor:pointer}.block-user-row__cell--barred{cursor:not-allowed}.block-user-row__cell-container{display:flex;flex-direction:column;margin-left:.8rem}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/pages/my-profile/block-user/block-user-table/block-user-row/block-user-row.scss\"],\"names\":[],\"mappings\":\"AAysBA,gBACI,YAAA,CACA,cAAA,CACA,6BAAA,CAEA,sBACI,qCAAA,CA7BJ,0BA4BA,sBAIQ,wBAAA,CAAA,CAIR,8BACI,YAAA,CACA,wBAAA,CACA,kBAAA,CAEA,qCACI,cAAA,CA1CR,0BAgDY,oDACI,mCAAA,CAAA,CAjDhB,0BAyDY,kDACI,mCAAA,CAGJ,iDACI,uCAAA,CAAA,CAMhB,sBACI,kBAAA,CACA,YAAA,CACA,cAAA,CAEA,8BACI,kBAAA,CAGJ,gCACI,YAAA,CACA,qBAAA,CACA,iBAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n.block-user-row {\\n    display: grid;\\n    padding: 1.6rem;\\n    grid-template-columns: 1fr 1fr;\\n\\n    &:hover {\\n        background-color: var(--general-hover);\\n\\n        @include mobile-or-tablet-screen {\\n            background-color: inherit;\\n        }\\n    }\\n\\n    &__button-group {\\n        display: flex;\\n        justify-content: flex-end;\\n        align-items: center;\\n\\n        & button {\\n            min-width: 9rem;\\n        }\\n\\n        &__unblock-button {\\n            // Needed to override sticky hover in mobile\\n            @include mobile-or-tablet-screen {\\n                &:hover {\\n                    background: transparent !important;\\n                }\\n            }\\n        }\\n\\n        &__block-button {\\n            // Needed to override sticky hover in mobile\\n            @include mobile-or-tablet-screen {\\n                &:hover {\\n                    background: transparent !important;\\n                }\\n\\n                & > span {\\n                    color: var(--brand-red-coral) !important;\\n                }\\n            }\\n        }\\n    }\\n\\n    &__cell {\\n        align-items: center;\\n        display: flex;\\n        cursor: pointer;\\n\\n        &--barred {\\n            cursor: not-allowed;\\n        }\\n\\n        &-container {\\n            display: flex;\\n            flex-direction: column;\\n            margin-left: 0.8rem;\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".block-user-table-error{align-items:center;display:flex;flex-direction:column}.block-user-table-error__icon{margin-top:2.2rem}.block-user-table-error__text{margin:3rem 11rem}@media(max-width: 1279px){.block-user-table-error__text{margin:3rem 2rem}}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/pages/my-profile/block-user/block-user-table/block-user-table-error/block-user-table-error.scss\"],\"names\":[],\"mappings\":\"AAysBA,wBACI,kBAAA,CACA,YAAA,CACA,qBAAA,CAEA,8BACI,iBAAA,CAGJ,8BACI,iBAAA,CAjCJ,0BAgCA,8BAIQ,gBAAA,CAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n.block-user-table-error {\\n    align-items: center;\\n    display: flex;\\n    flex-direction: column;\\n\\n    &__icon {\\n        margin-top: 2.2rem;\\n    }\\n\\n    &__text {\\n        margin: 3rem 11rem;\\n\\n        @include mobile-or-tablet-screen {\\n            margin: 3rem 2rem;\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".block-user-table{display:flex;flex:1;flex-direction:column}@media(max-width: 1279px){.block-user-table{height:100%}}.block-user-table__body{flex:1;display:flex;flex-direction:column}@media(min-width: 1280px){.block-user-table__body .data-list{height:28rem}}.block-user-table__text{display:inline-block;padding-top:3rem;width:100%}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/pages/my-profile/block-user/block-user-table/block-user-table.scss\"],\"names\":[],\"mappings\":\"AAysBA,kBACI,YAAA,CACA,MAAA,CACA,qBAAA,CA1BA,0BAuBJ,kBAMQ,WAAA,CAAA,CAGJ,wBACI,MAAA,CACA,YAAA,CACA,qBAAA,CAzCJ,0BA2CI,mCAEQ,YAAA,CAAA,CAKZ,wBACI,oBAAA,CACA,gBAAA,CACA,UAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n.block-user-table {\\n    display: flex;\\n    flex: 1;\\n    flex-direction: column;\\n\\n    @include mobile-or-tablet-screen {\\n        height: 100%;\\n    }\\n\\n    &__body {\\n        flex: 1;\\n        display: flex;\\n        flex-direction: column;\\n\\n        & .data-list {\\n            @include desktop-screen {\\n                height: 28rem;\\n            }\\n        }\\n    }\\n\\n    &__text {\\n        display: inline-block;\\n        padding-top: 3rem;\\n        width: 100%;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"@media(max-width: 1279px){.block-user__modal{display:flex;flex-direction:column;grid-template-rows:1fr 8rem;height:100%;overflow-x:hidden}.block-user__modal .search-box{margin:1rem auto;width:91%}}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/pages/my-profile/block-user/block-user.scss\"],\"names\":[],\"mappings\":\"AAkrBI,0BAwBA,mBAEQ,YAAA,CACA,qBAAA,CACA,2BAAA,CACA,WAAA,CACA,iBAAA,CAEA,+BACI,gBAAA,CACA,SAAA,CAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n.block-user {\\n    &__modal {\\n        @include mobile-or-tablet-screen {\\n            display: flex;\\n            flex-direction: column;\\n            grid-template-rows: 1fr 8rem;\\n            height: 100%;\\n            overflow-x: hidden;\\n\\n            .search-box {\\n                margin: 1rem auto;\\n                width: 91%;\\n            }\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"@media(max-width: 1279px){.my-profile-form{overflow:hidden}}.my-profile-form .dc-input{margin-bottom:0;margin-bottom:initial}.my-profile-form .dc-input__wrapper{margin-bottom:0;margin-bottom:initial}.my-profile-form>*:first-child{margin-bottom:1.6rem}.my-profile-form__textarea{height:9.8rem;margin-bottom:1rem}.my-profile-form__textarea .dc-input__container{height:9.6rem}.my-profile-form__textarea .dc-input__field{height:100% !important}@media(max-width: 600px){.my-profile-form__textarea{margin:0 1vw;width:96vw}.my-profile-form__textarea .dc-input__label{padding:0 .8rem !important}}@media(max-width: 1279px){.my-profile-form__form{width:96vw}}@media(max-width: 1279px){.my-profile-form__form>:nth-child(2){padding-bottom:7.4rem}}.my-profile-form__form .dc-input__wrapper{margin-top:2.5rem}.my-profile-form__form .dc-input__footer{margin-bottom:2rem}.my-profile-form__footer{border-top:2px solid var(--general-section-1);background-color:var(--general-main-1);text-align:right}@media(max-width: 1279px){.my-profile-form__footer{width:100vw;padding:1.6rem;position:fixed;bottom:0;left:0}}@media(min-width: 601px)and (max-width: 1279px){.my-profile-form__footer{width:100%;bottom:8.2rem;padding:1.6rem 2.4rem}}@media(max-width: 600px){.my-profile-form__footer-button{width:93vw}}@media(min-width: 601px)and (max-width: 1279px){.my-profile-form__footer-button{width:100%}}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/pages/my-profile/my-profile-form/my-profile-form.scss\"],\"names\":[],\"mappings\":\"AAkrBI,0BAuBJ,iBAEQ,eAAA,CAAA,CAGJ,2BACI,eAAA,CAAA,qBAAA,CAEA,oCACI,eAAA,CAAA,qBAAA,CAIR,+BACI,oBAAA,CAGJ,2BACI,aAAA,CACA,kBAAA,CAGI,gDACI,aAAA,CAGJ,4CACI,sBAAA,CApEZ,yBA0DA,2BAeQ,YAAA,CACA,UAAA,CAEA,4CACI,0BAAA,CAAA,CA3DZ,0BAgEA,uBAEQ,UAAA,CAAA,CAlER,0BAqEI,qCAEQ,qBAAA,CAAA,CAKJ,0CACI,iBAAA,CAEJ,yCACI,kBAAA,CAKZ,yBACI,6CAAA,CACA,sCAAA,CACA,gBAAA,CAxFJ,0BAqFA,yBAMQ,WAAA,CACA,cAAA,CACA,cAAA,CACA,QAAA,CACA,MAAA,CAAA,CA3GR,gDAiGA,yBAcQ,UAAA,CACA,aAAA,CACA,qBAAA,CAAA,CAvHR,yBA0HI,gCAEQ,UAAA,CAAA,CAtHZ,gDAoHI,gCAMQ,UAAA,CAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n.my-profile-form {\\n    @include mobile-or-tablet-screen {\\n        overflow: hidden;\\n    }\\n\\n    .dc-input {\\n        margin-bottom: unset;\\n\\n        &__wrapper {\\n            margin-bottom: unset;\\n        }\\n    }\\n\\n    > *:first-child {\\n        margin-bottom: 1.6rem;\\n    }\\n\\n    &__textarea {\\n        height: 9.8rem;\\n        margin-bottom: 1rem;\\n\\n        .dc-input {\\n            &__container {\\n                height: 9.6rem;\\n            }\\n\\n            &__field {\\n                height: 100% !important;\\n            }\\n        }\\n\\n        @include mobile-screen {\\n            margin: 0 1vw;\\n            width: 96vw;\\n\\n            .dc-input__label {\\n                padding: 0 0.8rem !important;\\n            }\\n        }\\n    }\\n\\n    &__form {\\n        @include mobile-or-tablet-screen {\\n            width: 96vw;\\n        }\\n\\n        > :nth-child(2) {\\n            @include mobile-or-tablet-screen {\\n                padding-bottom: 7.4rem;\\n            }\\n        }\\n\\n        .dc-input {\\n            &__wrapper {\\n                margin-top: 2.5rem;\\n            }\\n            &__footer {\\n                margin-bottom: 2rem;\\n            }\\n        }\\n    }\\n\\n    &__footer {\\n        border-top: 2px solid var(--general-section-1);\\n        background-color: var(--general-main-1);\\n        text-align: right;\\n\\n        @include mobile-or-tablet-screen {\\n            width: 100vw;\\n            padding: 1.6rem;\\n            position: fixed;\\n            bottom: 0;\\n            left: 0;\\n        }\\n\\n        @include tablet-screen {\\n            width: 100%;\\n            bottom: 8.2rem;\\n            padding: 1.6rem 2.4rem;\\n        }\\n\\n        &-button {\\n            @include mobile-screen {\\n                width: 93vw;\\n            }\\n\\n            @include tablet-screen {\\n                width: 100%;\\n            }\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".my-profile-header{align-items:center;display:flex;height:3.5rem;width:70rem}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/pages/my-profile/my-profile-header/my-profile-header.scss\"],\"names\":[],\"mappings\":\"AAysBA,mBACI,kBAAA,CACA,YAAA,CACA,aAAA,CACA,WAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n.my-profile-header {\\n    align-items: center;\\n    display: flex;\\n    height: 3.5rem;\\n    width: 70rem;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"[dir=\\\"ltr\\\"] .my-profile-balance__amount{margin-right:.8rem}[dir=\\\"rtl\\\"] .my-profile-balance__amount{margin-left:.8rem}.my-profile-balance__column{flex-direction:column}[dir=\\\"ltr\\\"] .my-profile-balance__icon{margin-left:.5rem}[dir=\\\"rtl\\\"] .my-profile-balance__icon{margin-right:.5rem}.my-profile-balance__icon{cursor:pointer}.my-profile-balance__row{display:flex;flex-direction:row;align-items:center}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/pages/my-profile/my-profile-stats/my-profile-balance/my-profile-balance.scss\"],\"names\":[],\"mappings\":\"AA0sBI,wCACI,kBAAA,CADJ,wCACI,iBAAA,CAGJ,4BACI,qBAAA,CAGJ,sCAEI,iBAAA,CAFJ,sCAEI,kBAAA,CAFJ,0BACI,cACA,CAGJ,yBACI,YAAA,CACA,kBAAA,CACA,kBAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n.my-profile-balance {\\n    &__amount {\\n        margin-inline-end: 0.8rem;\\n    }\\n\\n    &__column {\\n        flex-direction: column;\\n    }\\n\\n    &__icon {\\n        cursor: pointer;\\n        margin-inline-start: 0.5rem;\\n    }\\n\\n    &__row {\\n        display: flex;\\n        flex-direction: row;\\n        align-items: center;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".my-profile-details-container{border:1px solid var(--general-hover);border-radius:.8rem;margin-top:2.4rem;padding:2.4rem}@media(max-width: 1279px){.my-profile-details-container{border:medium none currentColor;border:initial;padding:0;padding:initial}}.my-profile-details-container__table{display:flex;justify-content:space-between}@media(max-width: 1279px){.my-profile-details-container__table{flex-direction:column;gap:1rem}}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/pages/my-profile/my-profile-stats/my-profile-details-container/my-profile-details-container.scss\"],\"names\":[],\"mappings\":\"AAysBA,8BACI,qCAAA,CACA,mBAAA,CACA,iBAAA,CACA,cAAA,CA3BA,0BAuBJ,8BAOQ,+BAAA,CAAA,cAAA,CACA,SAAA,CAAA,eAAA,CAAA,CAGJ,qCACI,YAAA,CACA,6BAAA,CApCJ,0BAkCA,qCAKQ,qBAAA,CACA,QAAA,CAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n.my-profile-details-container {\\n    border: 1px solid var(--general-hover);\\n    border-radius: 0.8rem;\\n    margin-top: 2.4rem;\\n    padding: 2.4rem;\\n\\n    @include mobile-or-tablet-screen {\\n        border: unset;\\n        padding: unset;\\n    }\\n\\n    &__table {\\n        display: flex;\\n        justify-content: space-between;\\n\\n        @include mobile-or-tablet-screen {\\n            flex-direction: column;\\n            gap: 1rem;\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".my-profile-details-table{display:flex;flex-direction:row;padding-bottom:1.6rem;margin-bottom:1.1rem}@media(max-width: 1279px){.my-profile-details-table{gap:20vw;width:100vw;border-bottom:none}}.my-profile-details-table__cell{align-items:flex-start;border-right:1px solid var(--general-section-2);display:flex;flex-direction:column;padding-right:2.4rem;white-space:nowrap;height:4rem;margin-top:1rem}@media(max-width: 1279px){.my-profile-details-table__cell{border-right:0;border-right:initial}}.my-profile-details-table__cell:nth-child(2){border-right:0;border-right:initial;padding-left:2.4rem}@media(max-width: 1279px){.my-profile-details-table__cell:nth-child(2){padding-left:0;padding-left:initial}}.my-profile-details-table__row{display:flex;flex-direction:row;width:29.2rem;border:none}@media(max-width: 1279px){.my-profile-details-table__row{flex-direction:column;width:auto;width:initial}}.my-profile-details-table__limit{display:flex;align-items:center}.my-profile-details-table__limit span{flex:1}.my-profile-details-table__upgradable{border-bottom:1px solid var(--general-section-2)}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/pages/my-profile/my-profile-stats/my-profile-details-table/my-profile-details-table.scss\"],\"names\":[],\"mappings\":\"AAysBA,0BACI,YAAA,CACA,kBAAA,CACA,qBAAA,CACA,oBAAA,CA3BA,0BAuBJ,0BAOQ,QAAA,CACA,WAAA,CACA,kBAAA,CAAA,CAGJ,gCACI,sBAAA,CACA,+CAAA,CACA,YAAA,CACA,qBAAA,CACA,oBAAA,CACA,kBAAA,CACA,WAAA,CACA,eAAA,CA3CJ,0BAmCA,gCAWQ,cAAA,CAAA,oBAAA,CAAA,CAGJ,6CACI,cAAA,CAAA,oBAAA,CACA,mBAAA,CAnDR,0BAiDI,6CAKQ,cAAA,CAAA,oBAAA,CAAA,CAKZ,+BACI,YAAA,CACA,kBAAA,CACA,aAAA,CACA,WAAA,CA/DJ,0BA2DA,+BAOQ,qBAAA,CACA,UAAA,CAAA,aAAA,CAAA,CAIR,iCACI,YAAA,CACA,kBAAA,CAEA,sCACI,MAAA,CAIR,sCACI,gDAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n.my-profile-details-table {\\n    display: flex;\\n    flex-direction: row;\\n    padding-bottom: 1.6rem;\\n    margin-bottom: 1.1rem;\\n\\n    @include mobile-or-tablet-screen {\\n        gap: 20vw;\\n        width: 100vw;\\n        border-bottom: none;\\n    }\\n\\n    &__cell {\\n        align-items: flex-start;\\n        border-right: 1px solid var(--general-section-2);\\n        display: flex;\\n        flex-direction: column;\\n        padding-right: 2.4rem;\\n        white-space: nowrap;\\n        height: 4rem;\\n        margin-top: 1rem;\\n\\n        @include mobile-or-tablet-screen {\\n            border-right: unset;\\n        }\\n\\n        &:nth-child(2) {\\n            border-right: unset;\\n            padding-left: 2.4rem;\\n\\n            @include mobile-or-tablet-screen {\\n                padding-left: unset;\\n            }\\n        }\\n    }\\n\\n    &__row {\\n        display: flex;\\n        flex-direction: row;\\n        width: 29.2rem;\\n        border: none;\\n\\n        @include mobile-or-tablet-screen {\\n            flex-direction: column;\\n            width: unset;\\n        }\\n    }\\n\\n    &__limit {\\n        display: flex;\\n        align-items: center;\\n\\n        & span {\\n            flex: 1;\\n        }\\n    }\\n\\n    &__upgradable {\\n        border-bottom: 1px solid var(--general-section-2);\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".my-profile-name{align-items:center;display:flex;margin-bottom:2.4rem;width:100%}@media(max-width: 1279px){.my-profile-name{margin:0 0 2.4rem}}@media(max-width: 1279px){.my-profile-name__avatar{align-self:flex-start;margin:0 0 1}}.my-profile-name__column{display:flex;flex-direction:column}[dir=\\\"ltr\\\"] .my-profile-name__name{padding-left:.8rem}[dir=\\\"rtl\\\"] .my-profile-name__name{padding-right:.8rem}.my-profile-name__name{width:100%}@media(max-width: 1279px){.my-profile-name__name{width:auto;width:initial}}.my-profile-name__privacy{display:flex;flex-direction:row;justify-content:space-between;width:100%}.my-profile-name__rating{display:flex;flex-direction:row;padding:.8rem 0}@media(max-width: 1279px){.my-profile-name__rating{padding:1rem 0;flex-flow:row wrap}}[dir=\\\"ltr\\\"] .my-profile-name__rating__row{border-right:1px solid var(--general-section-1)}[dir=\\\"rtl\\\"] .my-profile-name__rating__row{border-left:1px solid var(--general-section-1)}.my-profile-name__rating__row{align-items:center;display:flex;gap:.8rem;padding:0 .8rem}[dir=\\\"ltr\\\"] .my-profile-name__rating__row:first-child{padding-left:0;padding-left:initial}[dir=\\\"rtl\\\"] .my-profile-name__rating__row:first-child{padding-right:0;padding-right:initial}@media(max-width: 1279px){[dir=\\\"ltr\\\"] .my-profile-name__rating__row:first-child .block-user-count{margin-left:0;margin-left:initial}[dir=\\\"rtl\\\"] .my-profile-name__rating__row:first-child .block-user-count{margin-right:0;margin-right:initial}}[dir=\\\"ltr\\\"] .my-profile-name__rating__row:last-child{border-right:0;border-right:initial}[dir=\\\"rtl\\\"] .my-profile-name__rating__row:last-child{border-left:0;border-left:initial}.my-profile-name__rating__row .filled-icons{pointer-events:none}.my-profile-name__row{display:flex;flex-direction:row}@media(max-width: 1279px){.my-profile-name__row{padding:.5rem 0}}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/pages/my-profile/my-profile-stats/my-profile-name/my-profile-name.scss\"],\"names\":[],\"mappings\":\"AAysBA,iBACI,kBAAA,CACA,YAAA,CACA,oBAAA,CACA,UAAA,CA3BA,0BAuBJ,iBAOQ,iBAAA,CAAA,CA9BJ,0BAiCA,yBAEQ,qBAAA,CACA,YAAA,CAAA,CAIR,yBACI,YAAA,CACA,qBAAA,CAGJ,mCACI,kBACA,CAFJ,mCACI,mBACA,CAFJ,uBAEI,UAAA,CA/CJ,0BA6CA,uBAKQ,UAAA,CAAA,aAAA,CAAA,CAIR,0BACI,YAAA,CACA,kBAAA,CACA,6BAAA,CACA,UAAA,CAGJ,yBACI,YAAA,CACA,kBAAA,CACA,eAAA,CAhEJ,0BA6DA,yBAMQ,cAAA,CACA,kBAAA,CAAA,CAGJ,0CAEI,+CAGA,CALJ,0CAEI,8CAGA,CALJ,8BACI,kBAAA,CAEA,YAAA,CACA,SAAA,CACA,eAAA,CAEA,sDACI,cAAA,CAAA,oBAAA,CADJ,sDACI,eAAA,CAAA,qBAAA,CA/EZ,0BAkFgB,wEACI,aAAA,CAAA,mBAAA,CADJ,wEACI,cAAA,CAAA,oBAAA,CAAA,CAKZ,qDACI,cAAA,CAAA,oBAAA,CADJ,qDACI,aAAA,CAAA,mBAAA,CAGJ,4CACI,mBAAA,CAKZ,sBACI,YAAA,CACA,kBAAA,CApGJ,0BAkGA,sBAKQ,eAAA,CAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n.my-profile-name {\\n    align-items: center;\\n    display: flex;\\n    margin-bottom: 2.4rem;\\n    width: 100%;\\n\\n    @include mobile-or-tablet-screen {\\n        margin: 0 0 2.4rem;\\n    }\\n\\n    &__avatar {\\n        @include mobile-or-tablet-screen {\\n            align-self: flex-start;\\n            margin: 0 0 1;\\n        }\\n    }\\n\\n    &__column {\\n        display: flex;\\n        flex-direction: column;\\n    }\\n\\n    &__name {\\n        padding-inline-start: 0.8rem;\\n        width: 100%;\\n\\n        @include mobile-or-tablet-screen {\\n            width: unset;\\n        }\\n    }\\n\\n    &__privacy {\\n        display: flex;\\n        flex-direction: row;\\n        justify-content: space-between;\\n        width: 100%;\\n    }\\n\\n    &__rating {\\n        display: flex;\\n        flex-direction: row;\\n        padding: 0.8rem 0;\\n\\n        @include mobile-or-tablet-screen {\\n            padding: 1rem 0;\\n            flex-flow: row wrap;\\n        }\\n\\n        &__row {\\n            align-items: center;\\n            border-inline-end: 1px solid var(--general-section-1);\\n            display: flex;\\n            gap: 0.8rem;\\n            padding: 0 0.8rem;\\n\\n            &:first-child {\\n                padding-inline-start: unset;\\n\\n                @include mobile-or-tablet-screen {\\n                    .block-user-count {\\n                        margin-inline-start: unset;\\n                    }\\n                }\\n            }\\n\\n            &:last-child {\\n                border-inline-end: unset;\\n            }\\n\\n            .filled-icons {\\n                pointer-events: none;\\n            }\\n        }\\n    }\\n\\n    &__row {\\n        display: flex;\\n        flex-direction: row;\\n\\n        @include mobile-or-tablet-screen {\\n            padding: 0.5rem 0;\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".my-profile-privacy{align-items:center;display:flex;flex-direction:row;margin-bottom:2.4rem}@media(max-width: 1279px){.my-profile-privacy{justify-content:space-between}}[dir=\\\"ltr\\\"] .my-profile-privacy__toggle{margin-left:.8rem}[dir=\\\"rtl\\\"] .my-profile-privacy__toggle{margin-right:.8rem}[dir=\\\"ltr\\\"] .my-profile-privacy__toggle{padding-left:.3rem}[dir=\\\"rtl\\\"] .my-profile-privacy__toggle{padding-right:.3rem}.my-profile-privacy__toggle-container{align-items:center;display:flex;flex-direction:column;margin-top:1.6rem}@media(max-width: 1279px){.my-profile-privacy__toggle-container{align-items:initial;margin-top:0}}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/pages/my-profile/my-profile-stats/my-profile-privacy/my-profile-privacy.scss\"],\"names\":[],\"mappings\":\"AAysBA,oBACI,kBAAA,CACA,YAAA,CACA,kBAAA,CACA,oBAAA,CA3BA,0BAuBJ,oBAOQ,6BAAA,CAAA,CAGJ,wCACI,iBACA,CAFJ,wCACI,kBACA,CAFJ,wCAEI,kBAAA,CAFJ,wCAEI,mBAAA,CAEA,sCACI,kBAAA,CACA,YAAA,CACA,qBAAA,CACA,iBAAA,CAzCR,0BAqCI,sCAOQ,mBAAA,CACA,YAAA,CAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n.my-profile-privacy {\\n    align-items: center;\\n    display: flex;\\n    flex-direction: row;\\n    margin-bottom: 2.4rem;\\n\\n    @include mobile-or-tablet-screen {\\n        justify-content: space-between;\\n    }\\n\\n    &__toggle {\\n        margin-inline-start: 0.8rem;\\n        padding-inline-start: 0.3rem;\\n\\n        &-container {\\n            align-items: center;\\n            display: flex;\\n            flex-direction: column;\\n            margin-top: 1.6rem;\\n\\n            @include mobile-or-tablet-screen {\\n                align-items: unset;\\n                margin-top: 0;\\n            }\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".my-profile-stats-table{display:grid;border-bottom:none;grid-template-columns:repeat(4, 1fr);margin:1.4rem 0}@media(max-width: 1279px){.my-profile-stats-table{border-bottom:none;grid-template-columns:repeat(2, 1fr);height:6.8rem;margin:.5rem 0;padding:1.6rem;width:100vw}}.my-profile-stats-table.dc-table__row{height:auto;height:initial}.my-profile-stats-table__cell{align-items:flex-start;border-right:1px solid var(--general-section-2);display:flex;flex-direction:column;white-space:nowrap;padding-left:2.4rem;margin-bottom:2.4rem}@media(min-width: 1280px){.my-profile-stats-table__cell:first-child,.my-profile-stats-table__cell:nth-child(5){padding-left:0}.my-profile-stats-table__cell:nth-child(4),.my-profile-stats-table__cell:last-child{border-right:none}}@media(max-width: 1279px){.my-profile-stats-table__cell{padding-left:1.6rem}.my-profile-stats-table__cell:nth-child(odd){padding-left:0}.my-profile-stats-table__cell:nth-child(even){border-right:none}}.my-profile-stats-table--italic{font-style:italic}.my-profile-stats-table--pointer{cursor:pointer;font-style:italic}.my-profile-stats-table--second{grid-template-columns:repeat(3, 1fr)}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/pages/my-profile/my-profile-stats/my-profile-stats-table/my-profile-stats-table.scss\"],\"names\":[],\"mappings\":\"AAysBA,wBACI,YAAA,CACA,kBAAA,CACA,oCAAA,CACA,eAAA,CA3BA,0BAuBJ,wBAOQ,kBAAA,CACA,oCAAA,CACA,aAAA,CACA,cAAA,CACA,cAAA,CACA,WAAA,CAAA,CAGJ,sCACI,WAAA,CAAA,cAAA,CAGJ,8BACI,sBAAA,CACA,+CAAA,CACA,YAAA,CACA,qBAAA,CACA,kBAAA,CACA,mBAAA,CACA,oBAAA,CAvDJ,0BA0DQ,qFAEI,cAAA,CAGJ,oFAEI,iBAAA,CAAA,CA3DZ,0BA0CA,8BAsBQ,mBAAA,CAEA,6CACI,cAAA,CAGJ,8CACI,iBAAA,CAAA,CAKZ,gCACI,iBAAA,CAGJ,iCACI,cAAA,CACA,iBAAA,CAGJ,gCACI,oCAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n.my-profile-stats-table {\\n    display: grid;\\n    border-bottom: none;\\n    grid-template-columns: repeat(4, 1fr);\\n    margin: 1.4rem 0;\\n\\n    @include mobile-or-tablet-screen {\\n        border-bottom: none;\\n        grid-template-columns: repeat(2, 1fr);\\n        height: 6.8rem;\\n        margin: 0.5rem 0;\\n        padding: 1.6rem;\\n        width: 100vw;\\n    }\\n\\n    &.dc-table__row {\\n        height: unset;\\n    }\\n\\n    &__cell {\\n        align-items: flex-start;\\n        border-right: 1px solid var(--general-section-2);\\n        display: flex;\\n        flex-direction: column;\\n        white-space: nowrap;\\n        padding-left: 2.4rem;\\n        margin-bottom: 2.4rem;\\n\\n        @include desktop-screen {\\n            &:first-child,\\n            &:nth-child(5) {\\n                padding-left: 0;\\n            }\\n\\n            &:nth-child(4),\\n            &:last-child {\\n                border-right: none;\\n            }\\n        }\\n\\n        @include mobile-or-tablet-screen {\\n            padding-left: 1.6rem;\\n\\n            &:nth-child(odd) {\\n                padding-left: 0;\\n            }\\n\\n            &:nth-child(even) {\\n                border-right: none;\\n            }\\n        }\\n    }\\n\\n    &--italic {\\n        font-style: italic;\\n    }\\n\\n    &--pointer {\\n        cursor: pointer;\\n        font-style: italic;\\n    }\\n\\n    &--second {\\n        grid-template-columns: repeat(3, 1fr);\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".my-profile-stats__separator{margin:1.6rem 0}@media(max-width: 1279px){.my-profile-stats__separator{margin:1.6rem -1.6rem;width:100vw}}.my-profile-stats__navigation{display:flex;justify-content:space-between}.my-profile-stats__navigation:last-child{margin-bottom:1.6rem}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/pages/my-profile/my-profile-stats/my-profile-stats.scss\"],\"names\":[],\"mappings\":\"AA0sBI,6BACI,eAAA,CAzBJ,0BAwBA,6BAIQ,qBAAA,CACA,WAAA,CAAA,CAIR,8BACI,YAAA,CACA,6BAAA,CAEA,yCACI,oBAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n.my-profile-stats {\\n    &__separator {\\n        margin: 1.6rem 0;\\n\\n        @include mobile-or-tablet-screen {\\n            margin: 1.6rem -1.6rem;\\n            width: 100vw;\\n        }\\n    }\\n\\n    &__navigation {\\n        display: flex;\\n        justify-content: space-between;\\n\\n        &:last-child {\\n            margin-bottom: 1.6rem;\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".my-profile{display:flex}@media(max-width: 1279px){.my-profile{display:block;height:100%}}.my-profile__content{display:flex;flex-direction:column;flex:1;overflow-x:hidden}.my-profile__content::-webkit-scrollbar{display:none}.my-profile__content .p2p-toggle-container{margin-bottom:3.4rem}@media(max-width: 1279px){.my-profile__content{display:block;padding:0 1.6rem;height:calc(100% - 5rem);width:100vw}.my-profile__content .dc-mobile-full-page-modal{opacity:1 !important}}@media(max-width: 1279px)and (min-width: 601px)and (max-width: 1279px){.my-profile__content{width:60rem}}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/pages/my-profile/my-profile.scss\"],\"names\":[],\"mappings\":\"AAysBA,YACI,YAAA,CAxBA,0BAuBJ,YAIQ,aAAA,CACA,WAAA,CAAA,CAGJ,qBACI,YAAA,CACA,qBAAA,CACA,MAAA,CACA,iBAAA,CAEA,wCACI,YAAA,CAGJ,2CACI,oBAAA,CA1CR,0BA+BA,qBAeQ,aAAA,CACA,gBAAA,CACA,wBAAA,CACA,WAAA,CAEA,gDACI,oBAAA,CAAA,CAhEZ,uEA2CA,qBAyBY,WAAA,CAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n.my-profile {\\n    display: flex;\\n\\n    @include mobile-or-tablet-screen {\\n        display: block;\\n        height: 100%;\\n    }\\n\\n    &__content {\\n        display: flex;\\n        flex-direction: column;\\n        flex: 1;\\n        overflow-x: hidden;\\n\\n        &::-webkit-scrollbar {\\n            display: none;\\n        }\\n\\n        & .p2p-toggle-container {\\n            margin-bottom: 3.4rem;\\n        }\\n\\n        @include mobile-or-tablet-screen {\\n            display: block;\\n            padding: 0 1.6rem;\\n            height: calc(100% - 5rem);\\n            width: 100vw;\\n\\n            .dc-mobile-full-page-modal {\\n                opacity: 1 !important;\\n            }\\n\\n            @include tablet-screen {\\n                width: 60rem;\\n            }\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".edit-payment-method-form__buttons{display:flex;flex-direction:row;justify-content:end}.edit-payment-method-form__buttons--add{margin-left:.8rem}.edit-payment-method-form__buttons--separated-footer{border-top:2px solid var(--general-section-1);display:flex;flex-direction:row;justify-content:flex-end;margin-top:auto;padding:1.6rem 2.4rem}.edit-payment-method-form__buttons--separated-footer-profile{padding:0 2.4rem 2rem;margin-bottom:4rem}.edit-payment-method-form__form-wrapper{padding:1.4rem 2.4rem}.edit-payment-method-form__form-wrapper .dc-input--error{margin-bottom:6rem}.edit-payment-method-form__field{-webkit-text-fill-color:var(--text-prominent) !important}.edit-payment-method-form__form{display:flex;flex-direction:column;width:100%}.edit-payment-method-form__payment-method-field{margin:3.8rem 0}.edit-payment-method-form__payment-method-field--text-area{height:auto}.edit-payment-method-form__payment-method-field--text-area .dc-input__container{height:9.6rem}.edit-payment-method-form__payment-method-field--text-area .dc-input__field{height:100% !important}.edit-payment-method-form__payment-method-field--text-area .dc-input__field{padding-left:0;padding-right:0}.edit-payment-method-form__payment-method-field--text-area .dc-field--error{top:auto;top:initial}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/pages/my-profile/payment-methods/edit-payment-method-form/edit-payment-method-form.scss\"],\"names\":[],\"mappings\":\"AA0sBI,mCACI,YAAA,CACA,kBAAA,CACA,mBAAA,CAEA,wCACI,iBAAA,CAGJ,qDACI,6CAAA,CACA,YAAA,CACA,kBAAA,CACA,wBAAA,CACA,eAAA,CACA,qBAAA,CAEA,6DACI,qBAAA,CACA,kBAAA,CAKZ,wCACI,qBAAA,CAEA,yDACI,kBAAA,CAIR,iCACI,wDAAA,CAGJ,gCACI,YAAA,CACA,qBAAA,CACA,UAAA,CAGJ,gDACI,eAAA,CAEA,2DACI,WAAA,CAGI,gFACI,aAAA,CAGJ,4EACI,sBAEA,CAHJ,4EAEI,cAAA,CACA,eAAA,CAIR,4EACI,QAAA,CAAA,WAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n.edit-payment-method-form {\\n    &__buttons {\\n        display: flex;\\n        flex-direction: row;\\n        justify-content: end;\\n\\n        &--add {\\n            margin-left: 0.8rem;\\n        }\\n\\n        &--separated-footer {\\n            border-top: 2px solid var(--general-section-1);\\n            display: flex;\\n            flex-direction: row;\\n            justify-content: flex-end;\\n            margin-top: auto;\\n            padding: 1.6rem 2.4rem;\\n\\n            &-profile {\\n                padding: 0 2.4rem 2rem;\\n                margin-bottom: 4rem;\\n            }\\n        }\\n    }\\n\\n    &__form-wrapper {\\n        padding: 1.4rem 2.4rem;\\n\\n        .dc-input--error {\\n            margin-bottom: 6rem;\\n        }\\n    }\\n\\n    &__field {\\n        -webkit-text-fill-color: var(--text-prominent) !important;\\n    }\\n\\n    &__form {\\n        display: flex;\\n        flex-direction: column;\\n        width: 100%;\\n    }\\n\\n    &__payment-method-field {\\n        margin: 3.8rem 0;\\n\\n        &--text-area {\\n            height: auto;\\n\\n            & .dc-input {\\n                &__container {\\n                    height: 9.6rem;\\n                }\\n\\n                &__field {\\n                    height: 100% !important;\\n                    padding-left: 0;\\n                    padding-right: 0;\\n                }\\n            }\\n\\n            & .dc-field--error {\\n                top: unset;\\n            }\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".payment-methods-empty{align-items:center;display:flex;flex-direction:column}.payment-methods-empty__button{margin-top:2.4rem}.payment-methods-empty__icon{margin:2rem auto 0}@media(max-width: 1279px){.payment-methods-empty__icon{margin:11.2rem auto 0}}.payment-methods-empty__text{margin:3.9rem 0 .8rem}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/pages/my-profile/payment-methods/payment-methods-empty/payment-methods-empty.scss\"],\"names\":[],\"mappings\":\"AAysBA,uBACI,kBAAA,CACA,YAAA,CACA,qBAAA,CAEA,+BACI,iBAAA,CAGJ,6BACI,kBAAA,CAjCJ,0BAgCA,6BAIQ,qBAAA,CAAA,CAIR,6BACI,qBAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n.payment-methods-empty {\\n    align-items: center;\\n    display: flex;\\n    flex-direction: column;\\n\\n    &__button {\\n        margin-top: 2.4rem;\\n    }\\n\\n    &__icon {\\n        margin: 2rem auto 0;\\n\\n        @include mobile-or-tablet-screen {\\n            margin: 11.2rem auto 0;\\n        }\\n    }\\n\\n    &__text {\\n        margin: 3.9rem 0 0.8rem;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"@media(max-width: 1279px){.payment-methods-list__modal{display:flex;flex-direction:column;grid-template-rows:1fr 8rem;height:100%;overflow-x:hidden;padding:1rem 2rem;width:100vw}}@media(max-width: 1279px)and (min-width: 601px)and (max-width: 1279px){.payment-methods-list__modal{width:100%}}@media(max-width: 1279px)and (min-width: 601px)and (max-width: 1279px)and (min-width: 601px)and (max-width: 1279px){.payment-methods-list__modal .dc-mobile-full-page-modal .dc-page-overlay .dc-page-overlay__content{height:auto;height:initial}}@media(max-width: 1279px)and (min-width: 601px)and (max-width: 1279px){.payment-methods-list__modal .dc-mobile-full-page-modal .dc-page-overlay .dc-page-overlay__content .dc-mobile-full-page-modal{top:0}}@media(max-width: 1279px){.payment-methods-list__modal-add{padding:1rem 0 0}}.payment-methods-list__modal--footer{bottom:0;width:100%;background-color:var(--general-main-1)}.payment-methods-list__button{margin:0 0 2.4rem}@media(max-width: 1279px){.payment-methods-list__button{align-self:end;grid-row:2;height:5rem;margin:0;width:90vw}.payment-methods-list__button .dc-btn__text{font-size:16px}}.payment-methods-list__list-container{max-width:67.2rem}.payment-methods-list__list-container .dc-dropdown-container{margin-left:0}.payment-methods-list__list-header{margin:0}.payment-methods-list__list-body{display:flex;flex-wrap:wrap;margin-bottom:5rem}.payment-methods-list__list-body .payment-method-card--large{margin-right:1.6rem;margin-bottom:0;margin-bottom:initial}.payment-methods-list__list-horizontal{max-width:96vw !important}.payment-methods-list__list-horizontal{display:flex;padding-bottom:3rem}.payment-methods-list__list-horizontal>.payment-method-card{margin-left:0;margin-left:initial}.payment-methods-list__list-horizontal>.payment-method-card~.payment-method-card{margin-left:1rem}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/pages/my-profile/payment-methods/payment-methods-list/payment-methods-list.scss\"],\"names\":[],\"mappings\":\"AAkrBI,0BAwBA,6BAEQ,YAAA,CACA,qBAAA,CACA,2BAAA,CACA,WAAA,CACA,iBAAA,CACA,iBAAA,CACA,WAAA,CAAA,CA5CR,uEAoCA,6BAWY,UAAA,CAAA,CA/CZ,oHAmDoB,mGAEQ,WAAA,CAAA,cAAA,CAAA,CArD5B,uEAwDwB,8HACI,KAAA,CAAA,CA7C5B,0BAoDQ,iCACI,gBAAA,CAAA,CAIR,qCACI,QAAA,CACA,UAAA,CACA,sCAAA,CAIR,8BACI,iBAAA,CAjEJ,0BAgEA,8BAIQ,cAAA,CACA,UAAA,CACA,WAAA,CACA,QAAA,CACA,UAAA,CAEA,4CACI,cAAA,CAAA,CAMR,sCACI,iBAAA,CAEA,6DACI,aAAA,CAOR,mCACI,QAAA,CAGJ,iCACI,YAAA,CACA,cAAA,CACA,kBAAA,CAGI,6DACI,mBAAA,CACA,eAAA,CAAA,qBAAA,CAKZ,uCAEI,yBACA,CAHJ,uCACI,YAAA,CAEA,mBAAA,CAGA,4DACI,aAAA,CAAA,mBAAA,CAEJ,iFACI,gBAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n.payment-methods-list {\\n    &__modal {\\n        @include mobile-or-tablet-screen {\\n            display: flex;\\n            flex-direction: column;\\n            grid-template-rows: 1fr 8rem;\\n            height: 100%;\\n            overflow-x: hidden;\\n            padding: 1rem 2rem;\\n            width: 100vw;\\n\\n            @include tablet-screen {\\n                width: 100%;\\n\\n                & .dc-mobile-full-page-modal {\\n                    & .dc-page-overlay {\\n                        & .dc-page-overlay__content {\\n                            @include tablet-screen {\\n                                height: unset;\\n                            }\\n\\n                            & .dc-mobile-full-page-modal {\\n                                top: 0;\\n                            }\\n                        }\\n                    }\\n                }\\n            }\\n\\n            &-add {\\n                padding: 1rem 0 0;\\n            }\\n        }\\n\\n        &--footer {\\n            bottom: 0;\\n            width: 100%;\\n            background-color: var(--general-main-1);\\n        }\\n    }\\n\\n    &__button {\\n        margin: 0 0 2.4rem;\\n\\n        @include mobile-or-tablet-screen {\\n            align-self: end;\\n            grid-row: 2;\\n            height: 5rem;\\n            margin: 0;\\n            width: 90vw;\\n\\n            .dc-btn__text {\\n                font-size: 16px;\\n            }\\n        }\\n    }\\n\\n    &__list {\\n        &-container {\\n            max-width: 67.2rem;\\n\\n            .dc-dropdown-container {\\n                margin-left: 0;\\n            }\\n            @include mobile-or-tablet-screen {\\n                // grid-row: 1;\\n            }\\n        }\\n\\n        &-header {\\n            margin: 0;\\n        }\\n\\n        &-body {\\n            display: flex;\\n            flex-wrap: wrap;\\n            margin-bottom: 5rem;\\n\\n            .payment-method-card {\\n                &--large {\\n                    margin-right: 1.6rem;\\n                    margin-bottom: unset;\\n                }\\n            }\\n        }\\n\\n        &-horizontal {\\n            display: flex;\\n            max-width: 96vw !important;\\n            padding-bottom: 3rem;\\n\\n            // select the first .payment-method-card only and unset its margin-left\\n            & > .payment-method-card {\\n                margin-left: unset;\\n            }\\n            & > .payment-method-card ~ .payment-method-card {\\n                margin-left: 1rem;\\n            }\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".chat-footer{background-color:var(--general-main-1);border-top:2px solid var(--general-section-1);max-height:33.333%}.chat-footer--empty{margin-top:auto;padding-bottom:.7rem}.chat-footer--frozen{border-top:2px solid var(--general-section-1);padding:1.6rem 2.4rem}.chat-footer-icon-container{align-items:center;border-radius:4px;cursor:pointer;display:flex;height:36px;justify-content:center;margin-right:.4rem;position:absolute;right:0;width:36px}@media(hover: hover){.chat-footer-icon-container:hover{background-color:var(--general-hover)}}.chat-footer-input{position:relative;height:calc(100% - 1.6rem - 2.6rem);margin:1.6rem 2.4rem 2.8rem}.chat-footer .dc-input{min-height:4rem;margin-bottom:0}.chat-footer .dc-input__container{margin-bottom:.2rem}.chat-footer .dc-input__wrapper{margin-bottom:0;margin-bottom:initial;height:100%}.chat-footer .dc-input__counter{bottom:-2rem;right:0;top:auto;top:initial}.chat-footer .dc-input__field[type=textarea]{overflow-y:auto;height:25px;max-height:100%;width:calc(100% - 32px - .8rem)}.chat-footer .dc-input__field[type=textarea]::-webkit-scrollbar{width:5px;height:5px;background-color:rgba(0,0,0,0);border-radius:10px}.chat-footer .dc-input__field[type=textarea]::-webkit-scrollbar-track{background-color:rgba(0,0,0,0)}.chat-footer .dc-input__field[type=textarea]::-webkit-scrollbar-thumb{border-radius:10px;background-color:var(--state-active)}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/pages/orders/chat/chat-footer.scss\"],\"names\":[],\"mappings\":\"AAysBA,aACI,sCAAA,CACA,6CAAA,CACA,kBAAA,CAEA,oBACI,eAAA,CACA,oBAAA,CAGJ,qBACI,6CAAA,CACA,qBAAA,CAGJ,4BACI,kBAAA,CACA,iBA1gBQ,CA2gBR,cAAA,CACA,YAAA,CACA,WAAA,CACA,sBAAA,CACA,kBAAA,CACA,iBAAA,CACA,OAAA,CACA,UAAA,CAEA,qBACI,kCACI,qCAAA,CAAA,CAKZ,mBACI,iBAAA,CACA,mCAAA,CACA,2BAAA,CAGJ,uBACI,eAAA,CACA,eAAA,CAEA,kCACI,mBAAA,CAGJ,gCACI,eAAA,CAAA,qBAAA,CACA,WAAA,CAGJ,gCACI,YAAA,CACA,OAAA,CACA,QAAA,CAAA,WAAA,CAGJ,6CACI,eAAA,CACA,WAAA,CACA,eAAA,CACA,+BAAA,CAEA,gEACI,SAAA,CACA,UAAA,CACA,8BAAA,CACA,kBAAA,CAEJ,sEACI,8BAAA,CAEJ,sEACI,kBAAA,CACA,oCAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n.chat-footer {\\n    background-color: var(--general-main-1);\\n    border-top: 2px solid var(--general-section-1);\\n    max-height: 33.333%;\\n\\n    &--empty {\\n        margin-top: auto;\\n        padding-bottom: 0.7rem;\\n    }\\n\\n    &--frozen {\\n        border-top: 2px solid var(--general-section-1);\\n        padding: 1.6rem 2.4rem;\\n    }\\n\\n    &-icon-container {\\n        align-items: center;\\n        border-radius: $BORDER_RADIUS;\\n        cursor: pointer;\\n        display: flex;\\n        height: 36px;\\n        justify-content: center;\\n        margin-right: 0.4rem;\\n        position: absolute;\\n        right: 0;\\n        width: 36px;\\n\\n        @media (hover: hover) {\\n            &:hover {\\n                background-color: var(--general-hover);\\n            }\\n        }\\n    }\\n\\n    &-input {\\n        position: relative;\\n        height: calc(100% - 1.6rem - 2.6rem);\\n        margin: 1.6rem 2.4rem 2.8rem;\\n    }\\n\\n    .dc-input {\\n        min-height: 4rem;\\n        margin-bottom: 0;\\n\\n        &__container {\\n            margin-bottom: 0.2rem;\\n        }\\n\\n        &__wrapper {\\n            margin-bottom: unset;\\n            height: 100%;\\n        }\\n\\n        &__counter {\\n            bottom: -2rem;\\n            right: 0;\\n            top: unset;\\n        }\\n\\n        &__field[type='textarea'] {\\n            overflow-y: auto;\\n            height: 25px;\\n            max-height: 100%;\\n            width: calc(100% - 32px - 0.8rem);\\n\\n            &::-webkit-scrollbar {\\n                width: 5px;\\n                height: 5px;\\n                background-color: transparent;\\n                border-radius: 10px;\\n            }\\n            &::-webkit-scrollbar-track {\\n                background-color: transparent;\\n            }\\n            &::-webkit-scrollbar-thumb {\\n                border-radius: 10px;\\n                background-color: var(--state-active);\\n            }\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".chat-header{background-color:var(--general-main-1);border-bottom:1px solid var(--general-section-1);display:flex;height:76px}@media(min-width: 1280px){.chat-header{border-top-left-radius:4px;border-top-right-radius:4px}}@media(max-width: 1279px){.chat-header{padding:1.6rem}}.chat-header-icon{align-items:center;align-self:center;border-radius:50%;display:flex;height:40px;justify-content:center;width:40px}@media(min-width: 1280px){.chat-header-icon{margin:1.6rem 1.6rem 1.6rem 2.4rem}}@media(max-width: 1279px){.chat-header-icon{margin:1.6rem;margin-left:0}}.chat-header-user{display:flex;flex-direction:column;justify-content:center}.chat-header-user-name{display:block}.chat-header-user-timestamp{display:block}.chat-header-user-timestamp:first-letter{text-transform:capitalize}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/pages/orders/chat/chat-header.scss\"],\"names\":[],\"mappings\":\"AAysBA,aACI,sCAAA,CACA,gDAAA,CACA,YAAA,CACA,WAAA,CAjCA,0BA6BJ,aAOQ,0BAhgBQ,CAigBR,2BAjgBQ,CAAA,CAkeZ,0BAuBJ,aAYQ,cAAA,CAAA,CAGJ,kBACI,kBAAA,CACA,iBAAA,CACA,iBAAA,CACA,YAAA,CACA,WAAA,CACA,sBAAA,CACA,UAAA,CAnDJ,0BA4CA,kBAUQ,kCAAA,CAAA,CAhDR,0BAsCA,kBAcQ,aAAA,CACA,aAAA,CAAA,CAIR,kBACI,YAAA,CACA,qBAAA,CACA,sBAAA,CAEA,uBACI,aAAA,CAGJ,4BACI,aAAA,CAEA,yCACI,yBAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n.chat-header {\\n    background-color: var(--general-main-1);\\n    border-bottom: 1px solid var(--general-section-1);\\n    display: flex;\\n    height: 76px;\\n\\n    @include desktop-screen {\\n        border-top-left-radius: $BORDER_RADIUS;\\n        border-top-right-radius: $BORDER_RADIUS;\\n    }\\n\\n    @include mobile-or-tablet-screen {\\n        padding: 1.6rem;\\n    }\\n\\n    &-icon {\\n        align-items: center;\\n        align-self: center;\\n        border-radius: 50%;\\n        display: flex;\\n        height: 40px;\\n        justify-content: center;\\n        width: 40px;\\n\\n        @include desktop-screen {\\n            margin: 1.6rem 1.6rem 1.6rem 2.4rem;\\n        }\\n\\n        @include mobile-or-tablet-screen {\\n            margin: 1.6rem;\\n            margin-left: 0;\\n        }\\n    }\\n\\n    &-user {\\n        display: flex;\\n        flex-direction: column;\\n        justify-content: center;\\n\\n        &-name {\\n            display: block;\\n        }\\n\\n        &-timestamp {\\n            display: block;\\n\\n            &:first-letter {\\n                text-transform: capitalize;\\n            }\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".chat-message-receipt{margin-left:.4rem}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/pages/orders/chat/chat-message-receipt.scss\"],\"names\":[],\"mappings\":\"AAysBA,sBACI,iBAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n.chat-message-receipt {\\n    margin-left: 0.4rem;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".chat-message-text{border-radius:1.6rem;max-width:100%;padding:.8rem 1.6rem;width:-moz-fit-content;width:fit-content;word-break:break-word}.chat-message-text>p{white-space:pre-wrap}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/pages/orders/chat/chat-message-text.scss\"],\"names\":[],\"mappings\":\"AAysBA,mBACI,oBAAA,CACA,cAAA,CACA,oBAAA,CACA,sBAAA,CAAA,iBAAA,CACA,qBAAA,CAEA,qBACI,oBAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n.chat-message-text {\\n    border-radius: 1.6rem;\\n    max-width: 100%;\\n    padding: 0.8rem 1.6rem;\\n    width: fit-content;\\n    word-break: break-word;\\n\\n    > p {\\n        white-space: pre-wrap;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".chat-messages{background-color:var(--general-main-1);margin-top:auto;margin-right:.8rem;flex:1 1 0}.chat-messages-date{margin-top:1.6rem;text-align:center}.chat-messages-item{display:flex;flex-direction:column;margin:1.6rem 1.2rem 1.6rem 2.4rem}.chat-messages-item-file{color:inherit}.chat-messages-item-image{width:50%}.chat-messages-item-image>img{border:1px solid var(--border-normal);border-radius:4px;width:100%;height:auto}.chat-messages-item-image>img:hover{border:1px solid var(--border-hover)}.chat-messages-item-pdf{background-color:var(--general-main-1);border-radius:.8rem;padding:1rem .8rem 1rem 1rem;display:flex;align-items:center;gap:1rem;margin-bottom:.4rem}.chat-messages-item-pdf a{color:var(--text-less-prominent);text-decoration:none}.chat-messages-item-timestamp{align-items:center;display:flex;margin-top:.4rem}.chat-messages-item--incoming{align-items:flex-start}.chat-messages-item--incoming .chat-message-text{background-color:var(--general-active);border-bottom-left-radius:0}.chat-messages-item--outgoing{align-items:flex-end}.chat-messages-item--outgoing .chat-message-text{background-color:var(--brand-secondary);border-bottom-right-radius:0}.chat-messages-item--admin{align-items:center;background:var(--status-warning-transparent);border:1px solid var(--status-warning);padding:.8rem 0;border-radius:.8rem}.chat-messages-item--admin-text{margin-bottom:1rem}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/pages/orders/chat/chat-messages.scss\"],\"names\":[],\"mappings\":\"AAysBA,eACI,sCAAA,CACA,eAAA,CACA,kBAAA,CACA,UAAA,CAEA,oBACI,iBAAA,CACA,iBAAA,CAEJ,oBACI,YAAA,CACA,qBAAA,CACA,kCAAA,CAEA,yBACI,aAAA,CAEJ,0BACI,SAAA,CAEA,8BACI,qCAAA,CACA,iBAhhBA,CAihBA,UAAA,CACA,WAAA,CAEA,oCACI,oCAAA,CAIZ,wBACI,sCAAA,CACA,mBAAA,CACA,4BAAA,CACA,YAAA,CACA,kBAAA,CACA,QAAA,CACA,mBAAA,CACA,0BACI,gCAAA,CACA,oBAAA,CAGR,8BACI,kBAAA,CACA,YAAA,CACA,gBAAA,CAGJ,8BACI,sBAAA,CAEA,iDACI,sCAAA,CACA,2BAAA,CAGR,8BACI,oBAAA,CAEA,iDACI,uCAAA,CACA,4BAAA,CAIR,2BACI,kBAAA,CACA,4CAAA,CACA,sCAAA,CACA,eAAA,CACA,mBAAA,CAEA,gCACI,kBAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n.chat-messages {\\n    background-color: var(--general-main-1);\\n    margin-top: auto;\\n    margin-right: 0.8rem;\\n    flex: 1 1 0;\\n\\n    &-date {\\n        margin-top: 1.6rem;\\n        text-align: center;\\n    }\\n    &-item {\\n        display: flex;\\n        flex-direction: column;\\n        margin: 1.6rem 1.2rem 1.6rem 2.4rem;\\n\\n        &-file {\\n            color: inherit;\\n        }\\n        &-image {\\n            width: 50%;\\n\\n            > img {\\n                border: 1px solid var(--border-normal);\\n                border-radius: $BORDER_RADIUS;\\n                width: 100%;\\n                height: auto;\\n\\n                &:hover {\\n                    border: 1px solid var(--border-hover);\\n                }\\n            }\\n        }\\n        &-pdf {\\n            background-color: var(--general-main-1);\\n            border-radius: 0.8rem;\\n            padding: 1rem 0.8rem 1rem 1rem;\\n            display: flex;\\n            align-items: center;\\n            gap: 1rem;\\n            margin-bottom: 0.4rem;\\n            a {\\n                color: var(--text-less-prominent);\\n                text-decoration: none;\\n            }\\n        }\\n        &-timestamp {\\n            align-items: center;\\n            display: flex;\\n            margin-top: 0.4rem;\\n        }\\n\\n        &--incoming {\\n            align-items: flex-start;\\n\\n            .chat-message-text {\\n                background-color: var(--general-active);\\n                border-bottom-left-radius: 0;\\n            }\\n        }\\n        &--outgoing {\\n            align-items: flex-end;\\n\\n            .chat-message-text {\\n                background-color: var(--brand-secondary);\\n                border-bottom-right-radius: 0;\\n            }\\n        }\\n\\n        &--admin {\\n            align-items: center;\\n            background: var(--status-warning-transparent);\\n            border: 1px solid var(--status-warning);\\n            padding: 0.8rem 0;\\n            border-radius: 0.8rem;\\n\\n            &-text {\\n                margin-bottom: 1rem;\\n            }\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".chat{background-color:var(--general-main-1);display:flex;flex-direction:column;flex:1}@media(min-width: 1280px){.chat{border-radius:4px;border:8px solid var(--general-section-1);margin-left:3.2rem;width:440px}}@media(max-width: 1279px){.chat{height:100%;max-height:100%;width:100vw;overflow:hidden}}.chat__error{height:100%;display:flex;flex-direction:column;align-items:center;justify-content:center}.chat__error-retry{margin-top:1.6rem}.chat__header{padding:0 1.6rem}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/pages/orders/chat/chat.scss\"],\"names\":[],\"mappings\":\"AAysBA,MACI,sCAAA,CACA,YAAA,CACA,qBAAA,CACA,MAAA,CAjCA,0BA6BJ,MAOQ,iBAAA,CACA,yCAAA,CACA,kBAAA,CACA,WAAA,CAAA,CAjCJ,0BAuBJ,MAcQ,WAAA,CACA,eAAA,CACA,WAAA,CACA,eAAA,CAAA,CAGJ,aACI,WAAA,CACA,YAAA,CACA,qBAAA,CACA,kBAAA,CACA,sBAAA,CAEA,mBACI,iBAAA,CAIR,cACI,gBAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n.chat {\\n    background-color: var(--general-main-1);\\n    display: flex;\\n    flex-direction: column;\\n    flex: 1;\\n\\n    @include desktop-screen {\\n        border-radius: 4px;\\n        border: 8px solid var(--general-section-1);\\n        margin-left: 3.2rem;\\n        width: 440px;\\n    }\\n\\n    @include mobile-or-tablet-screen {\\n        height: 100%;\\n        max-height: 100%;\\n        width: 100vw;\\n        overflow: hidden;\\n    }\\n\\n    &__error {\\n        height: 100%;\\n        display: flex;\\n        flex-direction: column;\\n        align-items: center;\\n        justify-content: center;\\n\\n        &-retry {\\n            margin-top: 1.6rem;\\n        }\\n    }\\n\\n    &__header {\\n        padding: 0 1.6rem;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".order-table-header{display:flex;flex:1;flex-direction:column}.order-table-header__labels{padding:0 2.4rem}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/pages/orders/order-table/order-table-header.scss\"],\"names\":[],\"mappings\":\"AAysBA,oBACI,YAAA,CACA,MAAA,CACA,qBAAA,CACA,4BACI,gBAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n.order-table-header {\\n    display: flex;\\n    flex: 1;\\n    flex-direction: column;\\n    &__labels {\\n        padding: 0 2.4rem;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".order-table-row{padding:2.4rem;cursor:pointer}.order-table-row-time{display:flex;justify-content:center;border:solid 1px var(--border-normal);border-radius:16px;width:78px;height:24px;padding:2px;letter-spacing:1px}.order-table-row--attention{background:var(--button-tertiary-hover)}.order-table-row:not(.order-table-row--header){cursor:pointer}.order-table-row:not(.order-table-row--header):hover{background:var(--general-hover)}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/pages/orders/order-table/order-table-row.scss\"],\"names\":[],\"mappings\":\"AAysBA,iBACI,cAAA,CACA,cAAA,CAEA,sBACI,YAAA,CACA,sBAAA,CACA,qCAAA,CACA,kBAAA,CACA,UAAA,CACA,WAAA,CACA,WAAA,CACA,kBAAA,CAGJ,4BACI,uCAAA,CAEJ,+CACI,cAAA,CAEA,qDACI,+BAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n.order-table-row {\\n    padding: 2.4rem;\\n    cursor: pointer;\\n\\n    &-time {\\n        display: flex;\\n        justify-content: center;\\n        border: solid 1px var(--border-normal);\\n        border-radius: 16px;\\n        width: 78px;\\n        height: 24px;\\n        padding: 2px;\\n        letter-spacing: 1px;\\n    }\\n\\n    &--attention {\\n        background: var(--button-tertiary-hover);\\n    }\\n    &:not(.order-table-row--header) {\\n        cursor: pointer;\\n\\n        &:hover {\\n            background: var(--general-hover);\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"@media(max-width: 1279px){.order-table{border-bottom:1px solid var(--general-section-1)}}.order-table__toggle-wrapper{border-radius:4px;display:flex;justify-content:space-between}@media(min-width: 1280px){.order-table__toggle-wrapper .toggle-container{margin:2.4rem 0 4.8rem}}.order-table__toggle-wrapper-filter .dc-button-menu__wrapper button.dc-btn{min-width:12rem !important}.order-table__toggle-wrapper-filter .dc-button-menu__wrapper button.dc-btn{height:3.6rem;white-space:nowrap;padding:.8rem 1.8rem}@media(max-width: 1279px){.order-table__toggle-wrapper{align-self:center;flex-direction:column;width:100%}}.order-table__toggle-wrapper--search{display:flex;margin:2.4rem 0 4.8rem;gap:.8rem;align-items:center}@media(max-width: 1279px){.order-table__toggle-wrapper--search{margin:0 1.6rem 3.2rem}}.order-table__toggle-wrapper--search-icon{border:1px solid var(--general-active);align-self:center;border-radius:.4rem;padding:.6rem .8rem;width:3.2rem;height:3.2rem}.order-table__toggle-wrapper--search-icon:hover{cursor:pointer}@media(max-width: 1279px){.order-table__toggle-wrapper--search-icon{width:4rem;height:4rem}}.order-table-body{flex:1;display:flex;flex-direction:column}.order-table-grid{grid-template-columns:2fr 1fr 1.5fr 2fr 3fr 1.5fr 1.5fr 2fr}[dir=rtl] .order-table-grid{direction:rtl}[dir=\\\"ltr\\\"] .order-table-grid--active{margin-left:.5rem}[dir=\\\"rtl\\\"] .order-table-grid--active{margin-right:.5rem}.order-table-grid--active{grid-template-columns:1fr 1.5fr 2fr 3fr 1.5fr 1.5fr 1.5fr}.order-table-status{border-radius:16px;padding:.2rem 1.6rem;white-space:nowrap}.order-table-status--danger{color:var(--brand-red-coral);background-color:rgba(236,63,63,.16)}.order-table-status--alert{color:var(--status-warning);background-color:var(--status-alert-background)}.order-table-status--success{color:var(--text-profit-success);background-color:rgba(75,180,179,.16)}.order-table-status--disabled{color:var(--text-less-prominent);background-color:hsla(0,0%,60%,.16)}.order-table-status--info{color:var(--status-info);background-color:rgba(28,90,227,.16)}.order-table .dc-table-header>.order-table-grid{padding:0 2.4rem}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/pages/orders/order-table/order-table.scss\"],\"names\":[],\"mappings\":\"AAkrBI,0BAuBJ,aAEQ,gDAAA,CAAA,CAGJ,6BAMI,iBAAA,CACA,YAAA,CACA,6BAAA,CA1CJ,0BAmCI,+CAEQ,sBAAA,CAAA,CASA,2EAEI,0BAEA,CAJJ,2EACI,aAAA,CAEA,kBAAA,CACA,oBAAA,CA5ChB,0BA4BA,6BAqBQ,iBAAA,CACA,qBAAA,CACA,UAAA,CAAA,CAEJ,qCACI,YAAA,CACA,sBAAA,CACA,SAAA,CACA,kBAAA,CAzDR,0BAqDI,qCAOQ,sBAAA,CAAA,CAGJ,0CACI,sCAAA,CACA,iBAAA,CACA,mBAAA,CACA,mBAAA,CACA,YAAA,CACA,aAAA,CACA,gDACI,cAAA,CAvEhB,0BA+DQ,0CAWQ,UAAA,CACA,WAAA,CAAA,CAMhB,kBACI,MAAA,CACA,YAAA,CACA,qBAAA,CAGJ,kBAEI,2DAAA,CApwBJ,4BAswBQ,aAAA,CAGJ,sCAEI,iBAAA,CAFJ,sCAEI,kBAAA,CAFJ,0BACI,yDACA,CAGR,oBACI,kBAAA,CACA,oBAAA,CACA,kBAAA,CAEA,4BACI,4BAAA,CACA,oCA/rBS,CAisBb,2BACI,2BAAA,CACA,+CAAA,CAEJ,6BACI,gCAAA,CACA,qCAxsBgB,CA0sBpB,8BACI,gCAAA,CACA,mCAAA,CAEJ,0BACI,wBAAA,CACA,oCAAA,CAKJ,gDACI,gBAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n.order-table {\\n    @include mobile-or-tablet-screen {\\n        border-bottom: 1px solid var(--general-section-1);\\n    }\\n\\n    &__toggle-wrapper {\\n        .toggle-container {\\n            @include desktop-screen {\\n                margin: 2.4rem 0 4.8rem;\\n            }\\n        }\\n        border-radius: 4px;\\n        display: flex;\\n        justify-content: space-between;\\n\\n        &-filter {\\n            .dc-button-menu__wrapper {\\n                button.dc-btn {\\n                    height: 3.6rem;\\n                    min-width: 12rem !important;\\n                    white-space: nowrap;\\n                    padding: 0.8rem 1.8rem;\\n                }\\n            }\\n        }\\n        @include mobile-or-tablet-screen {\\n            align-self: center;\\n            flex-direction: column;\\n            width: 100%;\\n        }\\n        &--search {\\n            display: flex;\\n            margin: 2.4rem 0 4.8rem;\\n            gap: 0.8rem;\\n            align-items: center;\\n\\n            @include mobile-or-tablet-screen {\\n                margin: 0 1.6rem 3.2rem;\\n            }\\n\\n            &-icon {\\n                border: 1px solid var(--general-active);\\n                align-self: center;\\n                border-radius: 0.4rem;\\n                padding: 0.6rem 0.8rem;\\n                width: 3.2rem;\\n                height: 3.2rem;\\n                &:hover {\\n                    cursor: pointer;\\n                }\\n                @include mobile-or-tablet-screen {\\n                    width: 4rem;\\n                    height: 4rem;\\n                }\\n            }\\n        }\\n    }\\n\\n    &-body {\\n        flex: 1;\\n        display: flex;\\n        flex-direction: column;\\n    }\\n\\n    &-grid {\\n        // Sizes are different for inactive due to timeout being full time string.\\n        grid-template-columns: 2fr 1fr 1.5fr 2fr 3fr 1.5fr 1.5fr 2fr;\\n        @include rtl {\\n            direction: rtl;\\n        }\\n\\n        &--active {\\n            grid-template-columns: 1fr 1.5fr 2fr 3fr 1.5fr 1.5fr 1.5fr;\\n            margin-inline-start: 0.5rem;\\n        }\\n    }\\n    &-status {\\n        border-radius: 16px;\\n        padding: 0.2rem 1.6rem;\\n        white-space: nowrap;\\n\\n        &--danger {\\n            color: var(--brand-red-coral);\\n            background-color: $color-status-error;\\n        }\\n        &--alert {\\n            color: var(--status-warning);\\n            background-color: var(--status-alert-background);\\n        }\\n        &--success {\\n            color: var(--text-profit-success);\\n            background-color: $color-status-announcement;\\n        }\\n        &--disabled {\\n            color: var(--text-less-prominent);\\n            background-color: rgba(153, 153, 153, 0.16);\\n        }\\n        &--info {\\n            color: var(--status-info);\\n            background-color: rgba(28, 90, 227, 0.16);\\n        }\\n    }\\n\\n    .dc-table-header {\\n        > .order-table-grid {\\n            padding: 0 2.4rem;\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".orders{flex:1;display:flex;flex-direction:column}@media(max-width: 1279px){.orders{overflow:hidden}}@media(max-width: 1279px){.orders .initial-loader{height:80%}}@media(max-width: 1279px){.orders .p2p-empty{padding:4rem 1.6rem;margin:0rem}}.orders__data-list{flex:1}.orders__data-list__data-list-body{flex:1}.orders__data-list .data-list__body-wrapper{flex:1}.orders__mobile{display:grid;grid-template-areas:\\\"header header-right\\\" \\\"title title\\\";padding:1.6rem;border-bottom:1px solid var(--general-section-1)}.orders__mobile--attention{background:var(--button-tertiary-hover);border-bottom:2px solid var(--general-section-1)}.orders__mobile-highlight-danger{background-color:#fff8f8}.orders__mobile .dc-table__row{border-bottom:0;border-bottom:initial}.orders__mobile-separator{width:100vw;height:1px;border-top:1px solid var(--general-section-1);position:absolute;left:0rem;margin:1.6rem 0rem}.orders__mobile-header{grid-area:header;display:flex;justify-content:space-between;align-items:center;height:2.4rem}.orders__mobile-header-right{grid-area:header-right;display:flex;justify-self:end}.orders__mobile-title{align-items:start;display:flex;flex-direction:column;grid-area:title;height:4.9rem;justify-content:space-around;justify-self:start}.orders__mobile-chat{margin-left:.9rem;display:flex;align-self:center}.orders__mobile-time{border:solid 1px var(--border-normal);border-radius:1.6rem;width:7.8rem;height:2.4rem;letter-spacing:1px}.orders__mobile-status{width:auto;padding:.2rem 1.6rem;border-radius:1.6rem}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/pages/orders/orders.scss\"],\"names\":[],\"mappings\":\"AAysBA,QACI,MAAA,CACA,YAAA,CACA,qBAAA,CA1BA,0BAuBJ,QAMQ,eAAA,CAAA,CA7BJ,0BAgCA,wBAEQ,UAAA,CAAA,CAlCR,0BAqCA,mBAEQ,mBAAA,CACA,WAAA,CAAA,CAIR,mBACI,MAAA,CAEA,mCACI,MAAA,CAGJ,4CACI,MAAA,CAIR,gBACI,YAAA,CACA,uDAAA,CACA,cAAA,CACA,gDAAA,CAEA,2BACI,uCAAA,CACA,gDAAA,CAGJ,iCACI,wBAAA,CAEJ,+BACI,eAAA,CAAA,qBAAA,CAGJ,0BACI,WAAA,CACA,UAAA,CACA,6CAAA,CACA,iBAAA,CACA,SAAA,CACA,kBAAA,CAEJ,uBACI,gBAAA,CACA,YAAA,CACA,6BAAA,CACA,kBAAA,CACA,aAAA,CAEA,6BACI,sBAAA,CACA,YAAA,CACA,gBAAA,CAGR,sBACI,iBAAA,CACA,YAAA,CACA,qBAAA,CACA,eAAA,CACA,aAAA,CACA,4BAAA,CACA,kBAAA,CAGJ,qBACI,iBAAA,CACA,YAAA,CACA,iBAAA,CAEJ,qBACI,qCAAA,CACA,oBAAA,CACA,YAAA,CACA,aAAA,CACA,kBAAA,CAEJ,uBACI,UAAA,CACA,oBAAA,CACA,oBAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n.orders {\\n    flex: 1;\\n    display: flex;\\n    flex-direction: column;\\n\\n    @include mobile-or-tablet-screen {\\n        overflow: hidden;\\n    }\\n\\n    & .initial-loader {\\n        @include mobile-or-tablet-screen {\\n            height: 80%;\\n        }\\n    }\\n    & .p2p-empty {\\n        @include mobile-or-tablet-screen {\\n            padding: 4rem 1.6rem;\\n            margin: 0rem;\\n        }\\n    }\\n\\n    &__data-list {\\n        flex: 1;\\n\\n        &__data-list-body {\\n            flex: 1;\\n        }\\n\\n        .data-list__body-wrapper {\\n            flex: 1;\\n        }\\n    }\\n\\n    &__mobile {\\n        display: grid;\\n        grid-template-areas: ('header header-right' 'title title');\\n        padding: 1.6rem;\\n        border-bottom: 1px solid var(--general-section-1);\\n\\n        &--attention {\\n            background: var(--button-tertiary-hover);\\n            border-bottom: 2px solid var(--general-section-1);\\n        }\\n\\n        &-highlight-danger {\\n            background-color: #fff8f8;\\n        }\\n        & .dc-table__row {\\n            border-bottom: unset;\\n        }\\n\\n        &-separator {\\n            width: 100vw;\\n            height: 1px;\\n            border-top: 1px solid var(--general-section-1);\\n            position: absolute;\\n            left: 0rem;\\n            margin: 1.6rem 0rem;\\n        }\\n        &-header {\\n            grid-area: header;\\n            display: flex;\\n            justify-content: space-between;\\n            align-items: center;\\n            height: 2.4rem;\\n\\n            &-right {\\n                grid-area: header-right;\\n                display: flex;\\n                justify-self: end;\\n            }\\n        }\\n        &-title {\\n            align-items: start;\\n            display: flex;\\n            flex-direction: column;\\n            grid-area: title;\\n            height: 4.9rem;\\n            justify-content: space-around;\\n            justify-self: start;\\n        }\\n\\n        &-chat {\\n            margin-left: 0.9rem;\\n            display: flex;\\n            align-self: center;\\n        }\\n        &-time {\\n            border: solid 1px var(--border-normal);\\n            border-radius: 1.6rem;\\n            width: 7.8rem;\\n            height: 2.4rem;\\n            letter-spacing: 1px;\\n        }\\n        &-status {\\n            width: auto;\\n            padding: 0.2rem 1.6rem;\\n            border-radius: 1.6rem;\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./advertiser-page-adverts.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./advertiser-page-dropdown-menu.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./advertiser-page-row.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./advertiser-page-stats.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./advertiser-page.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./block-user-count.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./block-user-overlay.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/sass-loader/dist/cjs.js!../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./app.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./buy-sell-header.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./buy-sell-row.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./buy-sell-table.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./buy-sell.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./currency-dropdown.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./currency-selector.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./no-ads.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./sort-dropdown.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./ad-conditions-section.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./ad-form-controller.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./ad-payment-details-section.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./ad-status.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./ad-type-section.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./ad-type.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./ad-wizard.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./buy-ad-payment-methods-list.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./copy-advert-form.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./create-ad-form.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./create-ad-summary.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./edit-ad-form.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./my-ads-table.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./my-ads.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./order-time-selection.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./preferred-countries-selector.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./sell-ad-payment-methods-list.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./toggle-ads.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./block-user-dropdown.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./block-user-empty.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./block-user-list.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./block-user-row.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./block-user-table-error.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./block-user-table.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./block-user.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./my-profile-form.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./my-profile-header.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./my-profile-balance.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./my-profile-details-container.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./my-profile-details-table.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./my-profile-name.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./my-profile-privacy.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./my-profile-stats-table.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./my-profile-stats.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./my-profile.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./edit-payment-method-form.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./payment-methods-empty.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./payment-methods-list.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./chat-footer.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./chat-header.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./chat-message-receipt.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./chat-message-text.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./chat-messages.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./chat.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./order-table-header.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./order-table-row.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./order-table.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[2].use[4]!./orders.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","import { useDevice } from '@deriv-com/ui';\nimport { useP2PAdvertList } from '@deriv/hooks';\nimport { useStores } from 'Stores/index';\n\n/**\n * @name useP2PAdvertiserAdverts\n *\n * @description This custom hook returns paginated available adverts for a given advertiser based on their advertiser_id by calling 'p2p_advert_list' endpoint\n * @returns {object} The returned object contains many fields, some of which are explained below:\n * object.loadMoreAdvertiserAdverts - A function to load more adverts.  (used by the InfiniteLoader @see https://github.com/bvaughn/react-virtualized/blob/master/docs/InfiniteLoader.md).\n * object.has_more_adverts_to_load - Whether there are more adverts to load (used by the InfiniteLoader @see https://github.com/bvaughn/react-virtualized/blob/master/docs/InfiniteLoader.md).\n * @example const { adverts, has_more_adverts_to_load, ...rest } = useP2PAdvertiserAdverts();\n * */\n\nconst useP2PAdvertiserAdverts = () => {\n    const { isDesktop } = useDevice();\n    const { advertiser_page_store, buy_sell_store, general_store } = useStores();\n    const { advertiser_details_id, counterparty_type, is_counterparty_advertiser_blocked } = advertiser_page_store;\n    const { advertiser_id, counterparty_advertiser_id, is_advertiser_info_subscribed } = general_store;\n    const { selected_local_currency } = buy_sell_store;\n    const is_my_advert = advertiser_details_id === advertiser_id;\n    const is_advertiser_blocked = !!is_counterparty_advertiser_blocked && !is_my_advert;\n    const list_item_limit = isDesktop ? 50 : 10;\n\n    const {\n        data: adverts = [],\n        loadMoreAdverts: loadMoreAdvertiserAdverts,\n        ...rest\n    } = useP2PAdvertList(\n        {\n            counterparty_type,\n            limit: list_item_limit,\n            advertiser_id:\n                counterparty_advertiser_id && is_advertiser_info_subscribed\n                    ? counterparty_advertiser_id\n                    : advertiser_details_id,\n            ...(selected_local_currency ? { local_currency: selected_local_currency } : {}),\n        },\n        {\n            enabled: !is_advertiser_blocked, // Only fetch adverts if the advertiser is not blocked. This stops the page shift on window refocus when the overlay is shown and the buy/sell table gets a loader due to isFetching.\n        }\n    );\n    const has_more_adverts_to_load = adverts.length >= list_item_limit;\n\n    return {\n        adverts,\n        has_more_adverts_to_load,\n        loadMoreAdvertiserAdverts,\n        ...rest,\n    };\n};\n\nexport default useP2PAdvertiserAdverts;\n","import React from 'react';\nimport { useP2PAdvertList } from '@deriv/hooks';\nimport { useDevice } from '@deriv-com/ui';\nimport { buy_sell } from 'Constants/buy-sell';\nimport { useStores } from 'Stores/index';\n\ntype TAdvertList = ReturnType<typeof useP2PAdvertList>['data'];\n\n/**\n * @name getSearchResults\n * Filter out adverts based on the search term. Btw, this causes a bug that's in production as well.\n * If a user doesn't scroll to the bottom before searching, the items that fall outside of the limit won't be part of the search results.\n *  */\nconst getSearchResults = (items: TAdvertList, search_term: string) => {\n    if (search_term) {\n        return items?.filter(item =>\n            item.advertiser_details?.name.toLowerCase().includes(search_term.toLowerCase().trim())\n        );\n    }\n};\n\n/**\n *  @name getRenderedAdverts\n * @returns { Array } - adverts that are ready to be rendered. Adverts that consist of a combination of items filtered based on the\n * Buy/Sell toggle and the search term. See useP2PRenderedAdverts for more information.\n */\nconst getRenderedAdverts = (\n    search_term: string,\n    search_results: TAdvertList,\n    is_mobile: boolean,\n    filtered_items: TAdvertList = []\n) => {\n    const EMPTY_ITEM_PLACE_HOLDER = { id: 'WATCH_THIS_SPACE' };\n    const NO_MATCH_ROW = { id: 'NO_MATCH_ROW' };\n    let rendered_adverts: DeepPartial<TAdvertList> = [];\n    if (is_mobile) {\n        if (search_term) {\n            rendered_adverts = [EMPTY_ITEM_PLACE_HOLDER, NO_MATCH_ROW];\n            if (search_results?.length) {\n                rendered_adverts = [EMPTY_ITEM_PLACE_HOLDER, ...search_results];\n            }\n        } else {\n            // This allows for the sliding animation on the Buy/Sell toggle as it pushes\n            // an empty item with an item that holds the same height of the toggle container.\n            // Also see: buy-sell-row.jsx\n            rendered_adverts = [EMPTY_ITEM_PLACE_HOLDER, ...filtered_items];\n        }\n    } else {\n        rendered_adverts = filtered_items;\n        if (search_term) {\n            rendered_adverts = [NO_MATCH_ROW];\n            if (search_results?.length) {\n                rendered_adverts = search_results;\n            }\n        }\n    }\n    return rendered_adverts;\n};\n\n/**\n * @name useP2PRenderedAdverts\n *\n * @description This custom hook returns paginated available adverts in a format that's ready to be rendered by calling 'p2p_advert_list' endpoint\n * @returns {object} The returned object contains many fields, some of which are explained below:\n * object.loadMore - A function to load more adverts.  (used by the InfiniteLoader @see https://github.com/bvaughn/react-virtualized/blob/master/docs/InfiniteLoader.md).\n * object.has_more_adverts_to_load - Whether there are more adverts to load (used by the InfiniteLoader @see https://github.com/bvaughn/react-virtualized/blob/master/docs/InfiniteLoader.md).\n * @example const { rendered_adverts, has_more_items_to_load, loadMore, ...rest } = useP2PRenderedAdverts();\n *\n * */\nconst useP2PRenderedAdverts = () => {\n    const { isDesktop } = useDevice();\n    const { buy_sell_store } = useStores();\n    const {\n        sort_by,\n        should_use_client_limits,\n        is_buy,\n        selected_payment_method_value,\n        selected_local_currency,\n        table_type,\n        search_term,\n    } = buy_sell_store;\n    const list_item_limit = isDesktop ? 50 : 10;\n    const counterparty_type = is_buy ? buy_sell.BUY : buy_sell.SELL;\n\n    const { data: items = [], ...rest } = useP2PAdvertList({\n        counterparty_type,\n        limit: list_item_limit,\n        sort_by,\n        use_client_limits: should_use_client_limits ? 1 : 0,\n        ...(selected_payment_method_value.length > 0 ? { payment_method: selected_payment_method_value } : {}),\n        ...(selected_local_currency ? { local_currency: selected_local_currency } : {}),\n    });\n\n    const has_more_items_to_load = items.length >= list_item_limit;\n\n    // Filter out adverts based on the Buy/Sell toggle. If the toggle is set to Buy, only show Sell adverts and vice versa.\n    const filtered_items = React.useMemo(() => {\n        return items.filter(item =>\n            table_type === buy_sell.BUY ? item.type === buy_sell.SELL : item.type === buy_sell.BUY\n        );\n    }, [items, table_type]);\n\n    const search_results = React.useMemo(() => {\n        return getSearchResults(items, search_term);\n    }, [search_term, items]);\n\n    const rendered_adverts = React.useMemo(() => {\n        return getRenderedAdverts(search_term, search_results, !isDesktop, filtered_items);\n    }, [search_term, filtered_items, !isDesktop, search_results]);\n\n    return {\n        rendered_adverts,\n        has_more_items_to_load,\n        ...rest,\n    };\n};\n\nexport default useP2PRenderedAdverts;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Table, Text } from '@deriv/components';\nimport { observer, useStore } from '@deriv/stores';\nimport { useP2PExchangeRate } from '@deriv/hooks';\nimport { useDevice } from '@deriv-com/ui';\nimport { useStores } from 'Stores';\nimport { buy_sell } from 'Constants/buy-sell';\nimport { Localize } from 'Components/i18next';\nimport BuySellRowAction from 'Pages/buy-sell/buy-sell-row-action';\nimport { generateEffectiveRate } from 'Utils/format-value';\nimport { useModalManagerContext } from 'Components/modal-manager/modal-manager-context';\nimport './advertiser-page-row.scss';\n\nconst AdvertiserPageRow = ({ row: advert }) => {\n    const { advertiser_page_store, buy_sell_store, general_store } = useStores();\n    const {\n        counterparty_advertiser_info: { id: counterparty_details_id },\n    } = advertiser_page_store;\n    const {\n        client: { currency },\n    } = useStore();\n    const { isDesktop } = useDevice();\n    const {\n        effective_rate,\n        eligibility_status,\n        is_eligible,\n        local_currency,\n        max_order_amount_limit_display,\n        min_order_amount_limit_display,\n        payment_method_names,\n        price_display,\n        rate_type,\n        rate,\n    } = advert;\n\n    const { showModal } = useModalManagerContext();\n\n    const is_buy_advert = advertiser_page_store.counterparty_type === buy_sell.BUY;\n    const is_my_advert = counterparty_details_id === general_store.advertiser_id;\n    const exchange_rate = useP2PExchangeRate(local_currency);\n\n    const { display_effective_rate } = generateEffectiveRate({\n        price: price_display,\n        rate_type,\n        rate,\n        local_currency,\n        exchange_rate,\n        market_rate: effective_rate,\n    });\n\n    const showBuySellForm = () => {\n        buy_sell_store.setSelectedAdState(advert);\n        showModal({\n            key: 'BuySellModal',\n        });\n    };\n\n    const onBuySellButtonClick = () => {\n        if (general_store.is_advertiser) {\n            showBuySellForm();\n        } else {\n            showModal({\n                key: 'NicknameModal',\n                props: {\n                    onConfirm: showBuySellForm,\n                    should_hide_close_btn: isDesktop,\n                },\n            });\n        }\n    };\n\n    React.useEffect(() => {\n        const disposeAdvertIntervalReaction = buy_sell_store.registerAdvertIntervalReaction();\n\n        return () => {\n            disposeAdvertIntervalReaction();\n        };\n    }, []);\n\n    if (isDesktop) {\n        return (\n            <Table.Row className='advertiser-page-adverts__table-row'>\n                <Table.Cell>{`${min_order_amount_limit_display}-${max_order_amount_limit_display} ${currency}`}</Table.Cell>\n                <Table.Cell>\n                    <Text color='profit-success' size='xs' weight='bold'>\n                        {display_effective_rate} {local_currency}\n                    </Text>\n                </Table.Cell>\n                <Table.Cell>\n                    <div className='advertiser-page__payment-methods-list'>\n                        {payment_method_names\n                            ? payment_method_names.map((payment_method, key) => {\n                                  return (\n                                      <div className='advertiser-page__payment-method' key={key}>\n                                          <Text size='xs' line_height='l'>\n                                              {payment_method}\n                                          </Text>\n                                      </div>\n                                  );\n                              })\n                            : null}\n                    </div>\n                </Table.Cell>\n                {is_my_advert ? (\n                    <Table.Cell />\n                ) : (\n                    <Table.Cell className='advertiser-page-adverts__button'>\n                        <BuySellRowAction\n                            account_currency={currency}\n                            eligibility_status={eligibility_status}\n                            is_buy_advert={is_buy_advert}\n                            is_eligible={is_eligible}\n                            onClick={onBuySellButtonClick}\n                        />\n                    </Table.Cell>\n                )}\n            </Table.Row>\n        );\n    }\n\n    return (\n        <Table.Row className='advertiser-page-adverts__table-row'>\n            <Table.Cell className='advertiser-page__cell'>\n                <Text size='xxs'>\n                    <Localize\n                        i18n_default_text='Rate (1 {{currency}})'\n                        values={{\n                            currency,\n                        }}\n                    />\n                </Text>\n                <Text as='div' color='profit-success' weight='bold'>\n                    {display_effective_rate} {local_currency}\n                </Text>\n                <div className='advertiser-page__cell-limit'>\n                    <Text size='xxs'>\n                        <Localize\n                            i18n_default_text='Limits {{min_order_amount_limit_display}}-{{max_order_amount_limit_display}} {{currency}}'\n                            values={{\n                                min_order_amount_limit_display,\n                                max_order_amount_limit_display,\n                                currency,\n                            }}\n                        />\n                    </Text>\n                </div>\n                <div className='advertiser-page__payment-methods-list'>\n                    {payment_method_names\n                        ? payment_method_names.map((payment_method, key) => {\n                              return (\n                                  <div className='advertiser-page__payment-method' key={key}>\n                                      <Text line_height='l' size='xxxs'>\n                                          {payment_method}\n                                      </Text>\n                                  </div>\n                              );\n                          })\n                        : null}\n                </div>\n            </Table.Cell>\n            {is_my_advert ? (\n                <Table.Cell />\n            ) : (\n                <Table.Cell className='advertiser-page-adverts__button'>\n                    <BuySellRowAction\n                        account_currency={currency}\n                        eligibility_status={eligibility_status}\n                        is_buy_advert={is_buy_advert}\n                        is_eligible={is_eligible}\n                        onClick={onBuySellButtonClick}\n                    />\n                </Table.Cell>\n            )}\n        </Table.Row>\n    );\n};\n\nAdvertiserPageRow.displayName = 'AdvertiserPageRow';\n\nAdvertiserPageRow.propTypes = {\n    advert: PropTypes.object,\n    row: PropTypes.object,\n};\n\nexport default observer(AdvertiserPageRow);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { InfiniteDataList, Loading, Table, Tabs, Text } from '@deriv/components';\nimport { useStore, observer } from '@deriv/stores';\nimport { useDevice } from '@deriv-com/ui';\nimport { localize, Localize } from 'Components/i18next';\nimport { useP2PAdvertiserAdverts } from 'Hooks';\nimport { useStores } from 'Stores';\nimport P2pEmpty from 'Components/p2p-empty';\nimport AdvertiserPageRow from './advertiser-page-row.jsx';\nimport './advertiser-page-adverts.scss';\n\nconst EmptyAdsMessage = () => (\n    <Text weight='bold'>\n        <Localize i18n_default_text='There are no ads yet' />\n    </Text>\n);\n\nconst AdvertiserPageAdverts = () => {\n    const { isDesktop } = useDevice();\n    const {\n        client: { currency },\n    } = useStore();\n\n    const { advertiser_page_store } = useStores();\n    const { adverts, has_more_adverts_to_load, isLoading, loadMoreAdvertiserAdverts } = useP2PAdvertiserAdverts();\n\n    const AdvertiserPageRowRenderer = row_props => (\n        <AdvertiserPageRow {...row_props} showAdPopup={advertiser_page_store.showAdPopup} />\n    );\n\n    return (\n        <div className='advertiser-page-adverts'>\n            <Tabs\n                active_index={advertiser_page_store.active_index}\n                className='advertiser-page-adverts__tabs'\n                is_full_width={!isDesktop}\n                onTabItemClick={advertiser_page_store.handleTabItemClick}\n                header_fit_content\n                top\n            >\n                <div label={localize('Buy')} />\n                <div label={localize('Sell')} />\n            </Tabs>\n            {isLoading ? (\n                <div className='advertiser-page-adverts__table'>\n                    <Loading is_fullscreen={false} />\n                </div>\n            ) : (\n                <React.Fragment>\n                    {adverts.length ? (\n                        <Table className='advertiser-page-adverts__table'>\n                            {isDesktop && (\n                                <Table.Header>\n                                    <Table.Row className='advertiser-page-adverts__table-row'>\n                                        <Table.Head>{localize('Limits')}</Table.Head>\n                                        <Table.Head>\n                                            {localize('Rate (1 {{currency}})', {\n                                                currency,\n                                            })}\n                                        </Table.Head>\n                                        <Table.Head>\n                                            <Localize i18n_default_text='Payment methods' />\n                                        </Table.Head>\n                                        <Table.Head>{''}</Table.Head>\n                                        <Table.Head />\n                                    </Table.Row>\n                                </Table.Header>\n                            )}\n                            <Table.Body className='advertiser-page-adverts__table-body'>\n                                <InfiniteDataList\n                                    data_list_className='advertiser-page__data-list'\n                                    items={adverts}\n                                    keyMapperFn={item => item.id}\n                                    rowRenderer={AdvertiserPageRowRenderer}\n                                    loadMoreRowsFn={loadMoreAdvertiserAdverts}\n                                    has_more_items_to_load={has_more_adverts_to_load}\n                                />\n                            </Table.Body>\n                        </Table>\n                    ) : (\n                        <P2pEmpty\n                            className={classNames('', { 'advertiser-page-empty': !isDesktop })}\n                            icon='IcNoData'\n                            title={<EmptyAdsMessage />}\n                        />\n                    )}\n                </React.Fragment>\n            )}\n        </div>\n    );\n};\n\nexport default observer(AdvertiserPageAdverts);\n","import React from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { Dropdown, Icon, Text } from '@deriv/components';\nimport { Localize } from 'Components/i18next';\nimport { useStores } from 'Stores';\nimport { useOnClickOutside } from '../../../../components/src/hooks';\nimport './advertiser-page-dropdown-menu.scss';\n\nconst AdvertiserPageDropdownMenu = () => {\n    const dropdown_menu_ref = React.useRef();\n    const { advertiser_page_store } = useStores();\n\n    const onClickOutside = () => {\n        advertiser_page_store.setIsDropdownMenuVisible(false);\n    };\n\n    useOnClickOutside(dropdown_menu_ref, onClickOutside, () => advertiser_page_store.is_dropdown_menu_visible);\n\n    return (\n        !advertiser_page_store.is_counterparty_advertiser_blocked && (\n            <div className='advertiser-page-dropdown-menu__dots-toggle'>\n                <Icon\n                    className='advertiser-page-dropdown-menu__dots-icon'\n                    icon='IcMenuDots'\n                    onClick={() =>\n                        advertiser_page_store.setIsDropdownMenuVisible(!advertiser_page_store.is_dropdown_menu_visible)\n                    }\n                    size={16}\n                />\n                {advertiser_page_store.is_dropdown_menu_visible && (\n                    <div\n                        ref={dropdown_menu_ref}\n                        className='advertiser-page-dropdown-menu'\n                        onClick={advertiser_page_store.showBlockUserModal}\n                    >\n                        <Dropdown\n                            className='advertiser-page-dropdown-menu__container'\n                            is_align_text_right\n                            list={['Block']}\n                            name='block_user_dropdown'\n                            placeholder={\n                                <Text\n                                    color={\n                                        advertiser_page_store.is_counterparty_advertiser_blocked\n                                            ? 'less-prominent'\n                                            : 'prominent'\n                                    }\n                                    size='xs'\n                                >\n                                    <Localize i18n_default_text='Block' />\n                                </Text>\n                            }\n                        />\n                    </div>\n                )}\n            </div>\n        )\n    );\n};\n\nexport default observer(AdvertiserPageDropdownMenu);\n","import React from 'react';\nimport { Money, Table, Text } from '@deriv/components';\nimport { observer, useStore } from '@deriv/stores';\nimport { useDevice } from '@deriv-com/ui';\nimport { localize, Localize } from 'Components/i18next';\nimport { useStores } from 'Stores';\nimport './advertiser-page-stats.scss';\n\nconst AdvertiserPageStats = () => {\n    const { advertiser_page_store, general_store } = useStores();\n    const {\n        client: { currency },\n    } = useStore();\n    const { isDesktop, isMobile } = useDevice();\n\n    const is_my_advert = advertiser_page_store.advertiser_details_id === general_store.advertiser_id;\n    // Use general_store.advertiser_info since resubscribing to the same id from advertiser page returns error\n    const info = is_my_advert ? general_store.advertiser_info : advertiser_page_store.counterparty_advertiser_info;\n    const {\n        buy_completion_rate,\n        buy_orders_amount,\n        buy_orders_count,\n        buy_time_avg,\n        partner_count,\n        release_time_avg,\n        sell_completion_rate,\n        sell_orders_amount,\n        sell_orders_count,\n    } = info;\n\n    const avg_buy_time_in_minutes = buy_time_avg > 60 ? Math.round(buy_time_avg / 60) : '< 1';\n    const avg_release_time_in_minutes = release_time_avg > 60 ? Math.round(release_time_avg / 60) : '< 1';\n\n    const mobileTextSize = isMobile ? 'xxxs' : 'xs';\n\n    if (!isDesktop) {\n        return (\n            <React.Fragment>\n                <Table className='advertiser-page-stats__wrapper'>\n                    <Table.Row className='advertiser-page-stats__row'>\n                        <Table.Cell className='advertiser-page-stats__cell'>\n                            <Text as='p' color='less-prominent' size={mobileTextSize}>\n                                <Localize\n                                    i18n_default_text='Buy completion  <0>30d</0>'\n                                    components={[\n                                        <Text\n                                            key={0}\n                                            className='advertiser-page__italic'\n                                            color='less-prominent'\n                                            size={mobileTextSize}\n                                        />,\n                                    ]}\n                                />\n                            </Text>\n                            <Text as='p' color='prominent' size='xs' weight='bold'>\n                                {buy_completion_rate ? `${buy_completion_rate}% (${buy_orders_count})` : '-'}\n                            </Text>\n                        </Table.Cell>\n                        <div className='advertiser-page-stats__cell-separator' />\n                        <Table.Cell className='advertiser-page-stats__cell'>\n                            <Text as='p' color='less-prominent' size={mobileTextSize}>\n                                <Localize\n                                    i18n_default_text='Avg. pay time  <0>30d</0>'\n                                    components={[\n                                        <Text\n                                            key={0}\n                                            className='advertiser-page__italic'\n                                            color='less-prominent'\n                                            size={mobileTextSize}\n                                        />,\n                                    ]}\n                                />\n                            </Text>\n                            <Text align='left' color='prominent' size='xs' weight='bold'>\n                                {buy_time_avg\n                                    ? localize('{{- avg_buy_time_in_minutes}} min', {\n                                          avg_buy_time_in_minutes,\n                                      })\n                                    : '-'}\n                            </Text>\n                        </Table.Cell>\n                    </Table.Row>\n                </Table>\n                <Table className='advertiser-page-stats__wrapper'>\n                    <Table.Row className='advertiser-page-stats__row'>\n                        <Table.Cell className='advertiser-page-stats__cell'>\n                            <Text as='p' color='less-prominent' size={mobileTextSize}>\n                                <Localize\n                                    i18n_default_text='Sell completion  <0>30d</0>'\n                                    components={[\n                                        <Text\n                                            key={0}\n                                            className='advertiser-page__italic'\n                                            color='less-prominent'\n                                            size={mobileTextSize}\n                                        />,\n                                    ]}\n                                />\n                            </Text>\n                            <Text as='p' color='prominent' size='xs' weight='bold'>\n                                {sell_completion_rate ? `${sell_completion_rate}% (${sell_orders_count})` : '-'}\n                            </Text>\n                        </Table.Cell>\n                        <div className='advertiser-page-stats__cell-separator' />\n                        <Table.Cell className='advertiser-page-stats__cell'>\n                            <Text as='p' color='less-prominent' size={mobileTextSize}>\n                                <Localize\n                                    i18n_default_text='Avg. release time  <0>30d</0>'\n                                    components={[\n                                        <Text\n                                            key={0}\n                                            className='advertiser-page__italic'\n                                            color='less-prominent'\n                                            size={mobileTextSize}\n                                        />,\n                                    ]}\n                                />\n                            </Text>\n                            <Text align='left' color='prominent' size='xs' weight='bold'>\n                                {release_time_avg\n                                    ? localize('{{- avg_release_time_in_minutes}} min', {\n                                          avg_release_time_in_minutes,\n                                      })\n                                    : '-'}\n                            </Text>\n                        </Table.Cell>\n                    </Table.Row>\n                </Table>\n                <Table className='advertiser-page-stats__wrapper'>\n                    <Table.Row className='advertiser-page-stats__row'>\n                        <Table.Cell className='advertiser-page-stats__cell'>\n                            <Text as='p' color='less-prominent' size={mobileTextSize}>\n                                <Localize\n                                    i18n_default_text='Trade volume  <0>30d</0>'\n                                    components={[\n                                        <Text\n                                            key={0}\n                                            className='advertiser-page__italic'\n                                            color='less-prominent'\n                                            size={mobileTextSize}\n                                        />,\n                                    ]}\n                                />\n                            </Text>\n                            <Text as='p' color='prominent' size='xs' weight='bold'>\n                                {buy_orders_amount && sell_orders_amount ? (\n                                    <Money\n                                        amount={Number(buy_orders_amount) + Number(sell_orders_amount)}\n                                        currency={currency}\n                                        show_currency\n                                    />\n                                ) : (\n                                    '-'\n                                )}\n                            </Text>\n                        </Table.Cell>\n                        <div className='advertiser-page-stats__cell-separator' />\n                        <Table.Cell className='advertiser-page-stats__cell'>\n                            <Text as='p' color='less-prominent' size={mobileTextSize}>\n                                <Localize i18n_default_text='Trade partners' />\n                            </Text>\n                            <Text as='p' color='prominent' size='xs' weight='bold'>\n                                {partner_count || '0'}\n                            </Text>\n                        </Table.Cell>\n                    </Table.Row>\n                </Table>\n            </React.Fragment>\n        );\n    }\n\n    return (\n        <React.Fragment>\n            <Table className='advertiser-page-stats__wrapper'>\n                <Table.Row className='advertiser-page-stats__row'>\n                    <Table.Cell className='advertiser-page-stats__cell'>\n                        <Text as='p' color='less-prominent' size='xs'>\n                            <Localize\n                                i18n_default_text='Buy completion  <0>30d</0>'\n                                components={[\n                                    <Text\n                                        key={0}\n                                        className='advertiser-page__italic'\n                                        color='less-prominent'\n                                        size='xs'\n                                    />,\n                                ]}\n                            />\n                        </Text>\n                        <Text as='p' color='prominent' size='m' weight='bold'>\n                            {buy_completion_rate ? `${buy_completion_rate}% (${buy_orders_count})` : '-'}\n                        </Text>\n                    </Table.Cell>\n                    <div className='advertiser-page-stats__cell-separator' />\n                    <Table.Cell className='advertiser-page-stats__cell'>\n                        <Text as='p' color='less-prominent' size='xs'>\n                            <Localize\n                                i18n_default_text='Sell completion  <0>30d</0>'\n                                components={[\n                                    <Text\n                                        key={0}\n                                        className='advertiser-page__italic'\n                                        color='less-prominent'\n                                        size='xs'\n                                    />,\n                                ]}\n                            />\n                        </Text>\n                        <Text as='p' color='prominent' size='m' weight='bold'>\n                            {sell_completion_rate ? `${sell_completion_rate}% (${sell_orders_count})` : '-'}\n                        </Text>\n                    </Table.Cell>\n                    <div className='advertiser-page-stats__cell-separator' />\n                    <Table.Cell className='advertiser-page-stats__cell'>\n                        <Text as='p' color='less-prominent' size='xs'>\n                            <Localize\n                                i18n_default_text='Trade volume  <0>30d</0>'\n                                components={[\n                                    <Text\n                                        key={0}\n                                        className='advertiser-page__italic'\n                                        color='less-prominent'\n                                        size='xs'\n                                    />,\n                                ]}\n                            />\n                        </Text>\n                        <Text as='p' color='prominent' size='m' weight='bold'>\n                            {buy_orders_amount && sell_orders_amount ? (\n                                <Money\n                                    amount={Number(buy_orders_amount) + Number(sell_orders_amount)}\n                                    currency={currency}\n                                    show_currency\n                                />\n                            ) : (\n                                '-'\n                            )}\n                        </Text>\n                    </Table.Cell>\n                </Table.Row>\n            </Table>\n            <Table className='advertiser-page-stats__wrapper'>\n                <Table.Row className='advertiser-page-stats__row'>\n                    <Table.Cell className='advertiser-page-stats__cell'>\n                        <Text as='p' color='less-prominent' size='xs'>\n                            <Localize\n                                i18n_default_text='Avg. pay time  <0>30d</0>'\n                                components={[\n                                    <Text\n                                        key={0}\n                                        className='advertiser-page__italic'\n                                        color='less-prominent'\n                                        size='xs'\n                                    />,\n                                ]}\n                            />\n                        </Text>\n                        <Text color='prominent' size='m' weight='bold'>\n                            {buy_time_avg\n                                ? localize('{{- avg_buy_time_in_minutes}} min', {\n                                      avg_buy_time_in_minutes,\n                                  })\n                                : '-'}\n                        </Text>\n                    </Table.Cell>\n                    <div className='advertiser-page-stats__cell-separator' />\n                    <Table.Cell className='advertiser-page-stats__cell'>\n                        <Text as='p' color='less-prominent' size='xs'>\n                            <Localize\n                                i18n_default_text='Avg. release time  <0>30d</0>'\n                                components={[\n                                    <Text\n                                        key={0}\n                                        className='advertiser-page__italic'\n                                        color='less-prominent'\n                                        size='xs'\n                                    />,\n                                ]}\n                            />\n                        </Text>\n                        <Text color='prominent' size='m' weight='bold'>\n                            {release_time_avg\n                                ? localize('{{- avg_release_time_in_minutes}} min', {\n                                      avg_release_time_in_minutes,\n                                  })\n                                : '-'}\n                        </Text>\n                    </Table.Cell>\n                    <div className='advertiser-page-stats__cell-separator' />\n                    <Table.Cell className='advertiser-page-stats__cell'>\n                        <Text as='p' color='less-prominent' size='xs'>\n                            <Localize i18n_default_text='Trade partners' />\n                        </Text>\n                        <Text as='p' color='prominent' size='m' weight='bold'>\n                            {partner_count || '0'}\n                        </Text>\n                    </Table.Cell>\n                </Table.Row>\n            </Table>\n        </React.Fragment>\n    );\n};\n\nexport default observer(AdvertiserPageStats);\n","import React from 'react';\nimport { Button, Icon, Text } from '@deriv/components';\nimport { Localize } from 'Components/i18next';\nimport { useStores } from 'Stores';\nimport { observer } from 'mobx-react-lite';\nimport PropTypes from 'prop-types';\n\nconst BlockUserOverlay = ({ children, is_visible, onClickUnblock }) => {\n    const { advertiser_page_store } = useStores();\n    const { advertiser_details_name, counterparty_advertiser_info } = advertiser_page_store;\n\n    if (is_visible) {\n        return (\n            <div className='block-user-overlay'>\n                <div className='block-user-overlay__wrapper'>\n                    <Icon icon='IcBlock' height={159} width={256} />\n                    <Text className='block-user-overlay__wrapper-text' weight='bold'>\n                        <Localize\n                            i18n_default_text='You have blocked {{advertiser_name}}.'\n                            values={{ advertiser_name: advertiser_details_name ?? counterparty_advertiser_info?.name }}\n                        />\n                    </Text>\n                    <Button className='block-user-overlay__wrapper-button' large onClick={onClickUnblock} secondary>\n                        <Localize i18n_default_text='Unblock' />\n                    </Button>\n                </div>\n                {children}\n            </div>\n        );\n    }\n    return children;\n};\n\nBlockUserOverlay.propTypes = {\n    children: PropTypes.any,\n    is_visible: PropTypes.bool.isRequired,\n    onClickUnblock: PropTypes.func,\n};\n\nexport default observer(BlockUserOverlay);\n","import BlockUserOverlay from './block-user-overlay';\nimport './block-user-overlay.scss';\n\nexport default BlockUserOverlay;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { reaction } from 'mobx';\nimport { useP2PAdvertiserAdverts } from 'Hooks';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { Loading, Text } from '@deriv/components';\nimport { useP2PAdvertInfo } from '@deriv/hooks';\nimport { daysSince, isEmptyObject, routes } from '@deriv/shared';\nimport { observer } from '@deriv/stores';\nimport { useDevice } from '@deriv-com/ui';\n\nimport { Localize, localize } from 'Components/i18next';\nimport { useModalManagerContext } from 'Components/modal-manager/modal-manager-context';\nimport { OnlineStatusIcon, OnlineStatusLabel } from 'Components/online-status';\nimport PageReturn from 'Components/page-return';\nimport RecommendedBy from 'Components/recommended-by';\nimport StarRating from 'Components/star-rating';\nimport TradeBadge from 'Components/trade-badge';\nimport UserAvatar from 'Components/user/user-avatar';\nimport { api_error_codes } from 'Constants/api-error-codes';\nimport { my_profile_tabs } from 'Constants/my-profile-tabs';\nimport { useStores } from 'Stores';\nimport { getEligibilityMessage } from 'Utils/adverts';\nimport { getErrorMessage, getErrorModalTitle } from 'Utils/block-user';\nimport AdvertiserPageAdverts from './advertiser-page-adverts.jsx';\nimport AdvertiserPageDropdownMenu from './advertiser-page-dropdown-menu.jsx';\nimport AdvertiserPageStats from './advertiser-page-stats.jsx';\nimport BlockUserOverlay from './block-user/block-user-overlay';\n\nconst AdvertiserPage = () => {\n    const { isDesktop, isMobile } = useDevice();\n    const { advertiser_page_store, buy_sell_store, general_store, my_profile_store } = useStores();\n    const {\n        advertiser_id,\n        advertiser_info,\n        counterparty_advert_id,\n        counterparty_advertiser_id,\n        is_advertiser,\n        is_barred,\n        setCounterpartyAdvertId,\n        setCounterpartyAdvertiserId,\n    } = general_store;\n    const { hideModal, showModal, useRegisterModalProps } = useModalManagerContext();\n    const { advertiser_details_name, counterparty_advertiser_info } = advertiser_page_store;\n    const { id: counterparty_details_id } = counterparty_advertiser_info;\n\n    const is_my_advert =\n        !!counterparty_details_id && !!advertiser_id ? counterparty_details_id === advertiser_id : null;\n    // Use general_store.advertiser_info since resubscribing to the same id from advertiser page returns error\n    const info = is_my_advert ? advertiser_info : counterparty_advertiser_info;\n\n    const history = useHistory();\n    const location = useLocation();\n\n    const {\n        basic_verification,\n        buy_orders_count,\n        created_time,\n        first_name,\n        full_verification,\n        is_online,\n        last_online_time,\n        last_name,\n        name,\n        rating_average,\n        rating_count,\n        recommended_average,\n        recommended_count,\n        sell_orders_count,\n    } = info;\n\n    const is_invalid_advertiser_id = general_store.error_code === api_error_codes.INVALID_ADVERTISER_ID;\n    const joined_since = daysSince(created_time);\n    const nickname = advertiser_details_name ?? name;\n    // rating_average_decimal converts rating_average to 1 d.p number\n    const rating_average_decimal = rating_average ? Number(rating_average).toFixed(1) : null;\n    const mobileTextSize = isMobile ? 'xxxs' : 'xs';\n\n    const { data: p2p_advert_info, isLoading, isSubscribed } = useP2PAdvertInfo(counterparty_advert_id);\n\n    const showErrorModal = eligibility_status => {\n        let error_message = localize(\"It's either deleted or no longer active.\");\n        let error_modal_title = localize('This ad is unavailable');\n\n        if (eligibility_status?.length > 0) {\n            error_modal_title = '';\n            error_message = getEligibilityMessage(eligibility_status);\n        }\n\n        setCounterpartyAdvertId('');\n        showModal({\n            key: 'ErrorModal',\n            props: {\n                error_message,\n                error_modal_button_text: 'OK',\n                error_modal_title,\n                onClose: () => {\n                    hideModal({ should_hide_all_modals: true });\n                },\n                width: !isDesktop ? '90vw' : '',\n            },\n        });\n    };\n\n    const setShowAdvertInfo = React.useCallback(\n        () => {\n            const { eligibility_status, is_active, is_buy, is_eligible, is_visible } = p2p_advert_info || {};\n            if (isSubscribed && p2p_advert_info) {\n                const advert_type = is_buy ? 1 : 0;\n\n                if (is_active && is_visible && is_eligible) {\n                    advertiser_page_store.setActiveIndex(advert_type);\n                    advertiser_page_store.handleTabItemClick(advert_type);\n                    buy_sell_store.setSelectedAdState(p2p_advert_info);\n                    showModal({ key: 'BuySellModal' });\n                } else {\n                    showErrorModal(eligibility_status);\n                }\n            } else {\n                showErrorModal();\n            }\n        },\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [isSubscribed, p2p_advert_info]\n    );\n\n    React.useEffect(() => {\n        if (is_advertiser && !is_barred && is_my_advert !== null && !is_my_advert) {\n            if (isLoading && isDesktop) {\n                showModal({ key: 'LoadingModal' });\n            } else if (counterparty_advert_id) {\n                setShowAdvertInfo();\n            }\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [counterparty_advert_id, isLoading, setShowAdvertInfo, is_my_advert]);\n\n    // Update the selected advert state when the advert info is updated through subscription.\n    React.useEffect(() => {\n        if (p2p_advert_info) buy_sell_store.setSelectedAdState(p2p_advert_info);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [p2p_advert_info]);\n\n    React.useEffect(() => {\n        if (location.search || counterparty_advertiser_id) {\n            const url_params = new URLSearchParams(location.search);\n            general_store.setCounterpartyAdvertiserId(url_params.get('id'));\n        }\n\n        buy_sell_store.setShowAdvertiserPage(true);\n        advertiser_page_store.onMount();\n        advertiser_page_store.setIsDropdownMenuVisible(false);\n\n        const disposeCounterpartyAdvertiserIdReaction = reaction(\n            () => [general_store.counterparty_advertiser_id, general_store.is_advertiser_info_subscribed],\n            () => {\n                if (counterparty_advertiser_id) {\n                    // DO NOT REMOVE. This fixes reloading issue when user navigates to advertiser page via URL\n                    advertiser_page_store.onAdvertiserIdUpdate();\n\n                    if (is_barred) {\n                        history.push(routes.p2p_buy_sell);\n                    }\n\n                    // Need to set active index to 0 when users navigate to advertiser page via url,\n                    // and when user clicks the back button, it will navigate back to the buy/sell tab\n                    general_store.setActiveIndex(0);\n                }\n            },\n            { fireImmediately: true }\n        );\n\n        return () => {\n            disposeCounterpartyAdvertiserIdReaction();\n            advertiser_page_store.onUnmount();\n            buy_sell_store.setShowAdvertiserPage(false);\n            advertiser_page_store.setCounterpartyAdvertiserInfo({});\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    React.useEffect(() => {\n        const disposeBlockUnblockUserErrorReaction = reaction(\n            () => [advertiser_page_store.active_index, general_store.block_unblock_user_error],\n            () => {\n                if (general_store.block_unblock_user_error) {\n                    showModal({\n                        key: 'ErrorModal',\n                        props: {\n                            error_message: getErrorMessage(\n                                general_store.block_unblock_user_error,\n                                !!advertiser_page_store.is_counterparty_advertiser_blocked && !is_my_advert,\n                                is_invalid_advertiser_id,\n                                nickname\n                            ),\n                            error_modal_button_text: localize('Got it'),\n                            error_modal_title: getErrorModalTitle(is_invalid_advertiser_id, nickname),\n                            has_close_icon: false,\n                            onClose: () => {\n                                buy_sell_store.hideAdvertiserPage();\n                                history.push(general_store.active_tab_route);\n                                if (general_store.active_index !== 0)\n                                    my_profile_store.setActiveTab(my_profile_tabs.MY_COUNTERPARTIES);\n                                advertiser_page_store.onCancel();\n                                general_store.setBlockUnblockUserError('');\n                                hideModal();\n                            },\n                        },\n                    });\n                }\n            },\n            { fireImmediately: true }\n        );\n\n        return () => {\n            disposeBlockUnblockUserErrorReaction();\n            advertiser_page_store.onUnmount();\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [advertiser_details_name, counterparty_advertiser_info]);\n\n    useRegisterModalProps({\n        key: 'BlockUserModal',\n        props: {\n            advertiser_name: name,\n            is_advertiser_blocked: !!advertiser_page_store.is_counterparty_advertiser_blocked && !is_my_advert,\n            onCancel: advertiser_page_store.onCancel,\n            onSubmit: advertiser_page_store.onSubmit,\n        },\n    });\n\n    const { error, isError } = useP2PAdvertiserAdverts();\n\n    if (advertiser_page_store.is_loading || general_store.is_block_unblock_user_loading) {\n        return <Loading is_fullscreen={false} />;\n    }\n\n    if (advertiser_page_store.error_message) {\n        return <div className='advertiser-page__error'>{advertiser_page_store.error_message}</div>;\n    }\n\n    if (isError) {\n        return <div className='advertiser-page__error'>{error.message}</div>;\n    }\n\n    return (\n        <div\n            className={classNames('advertiser-page', {\n                'advertiser-page--no-scroll':\n                    !!advertiser_page_store.is_counterparty_advertiser_blocked && !is_my_advert,\n            })}\n        >\n            <div className='advertiser-page__page-return-header'>\n                <PageReturn\n                    className='buy-sell__advertiser-page-return'\n                    onClick={() => {\n                        buy_sell_store.hideAdvertiserPage();\n                        if (general_store.active_index === general_store.path.my_profile)\n                            my_profile_store.setActiveTab(my_profile_tabs.MY_COUNTERPARTIES);\n                        history.push(general_store.active_tab_route);\n                        setCounterpartyAdvertiserId(null);\n                        setCounterpartyAdvertId('');\n                    }}\n                    page_title={localize(\"Advertiser's page\")}\n                />\n                {!is_my_advert && !isDesktop && <AdvertiserPageDropdownMenu />}\n            </div>\n            <BlockUserOverlay\n                is_visible={!!advertiser_page_store.is_counterparty_advertiser_blocked && !is_my_advert}\n                onClickUnblock={() =>\n                    showModal({\n                        key: 'BlockUserModal',\n                    })\n                }\n            >\n                <div className='advertiser-page-details-container'>\n                    <div className='advertiser-page__header-details'>\n                        <UserAvatar nickname={nickname} size={isMobile ? 32 : 64} text_size={isMobile ? 's' : 'sm'} />\n                        <div className='advertiser-page__header-name--column'>\n                            <div className='advertiser-page__header-name'>\n                                <Text color='prominent' weight='bold'>\n                                    {nickname}\n                                </Text>\n                                {first_name && last_name && (\n                                    <div className='advertiser-page__header-real-name'>\n                                        <Text color='less-prominent' line_height='xs' size='xs'>\n                                            {`(${first_name} ${last_name})`}\n                                        </Text>\n                                    </div>\n                                )}\n                            </div>\n                            {!isDesktop && (\n                                <div className='advertiser-page__row'>\n                                    <div className='advertiser-page__rating--row'>\n                                        <OnlineStatusIcon is_online={is_online} />\n                                        <OnlineStatusLabel is_online={is_online} last_online_time={last_online_time} />\n                                    </div>\n                                    <div className='advertiser-page__rating--row'>\n                                        <Text\n                                            className='advertiser-page__joined-since'\n                                            color='less-prominent'\n                                            size={mobileTextSize}\n                                        >\n                                            {joined_since ? (\n                                                <Localize\n                                                    i18n_default_text='Joined {{days_since_joined}}d'\n                                                    values={{ days_since_joined: joined_since }}\n                                                />\n                                            ) : (\n                                                <Localize i18n_default_text='Joined today' />\n                                            )}\n                                        </Text>\n                                    </div>\n                                </div>\n                            )}\n                            {!isEmptyObject(info) && (\n                                <div className='advertiser-page__rating'>\n                                    {isDesktop && (\n                                        <React.Fragment>\n                                            <div className='advertiser-page__rating--row'>\n                                                <OnlineStatusIcon is_online={is_online} />\n                                                <OnlineStatusLabel\n                                                    is_online={is_online}\n                                                    last_online_time={last_online_time}\n                                                />\n                                            </div>\n                                            <div className='advertiser-page__rating--row'>\n                                                <Text\n                                                    className='advertiser-page__joined-since'\n                                                    color='less-prominent'\n                                                    size='xs'\n                                                >\n                                                    {joined_since ? (\n                                                        <Localize\n                                                            i18n_default_text='Joined {{days_since_joined}}d'\n                                                            values={{ days_since_joined: joined_since }}\n                                                        />\n                                                    ) : (\n                                                        <Localize i18n_default_text='Joined today' />\n                                                    )}\n                                                </Text>\n                                            </div>\n                                        </React.Fragment>\n                                    )}\n                                    {rating_average ? (\n                                        <React.Fragment>\n                                            <div className='advertiser-page__rating--row'>\n                                                <Text color='prominent' size={mobileTextSize}>\n                                                    {rating_average_decimal}\n                                                </Text>\n                                                <StarRating\n                                                    empty_star_className='advertiser-page__rating--star'\n                                                    empty_star_icon='IcEmptyStar'\n                                                    full_star_className='advertiser-page__rating--star'\n                                                    full_star_icon='IcFullStar'\n                                                    initial_value={rating_average_decimal}\n                                                    is_readonly\n                                                    number_of_stars={5}\n                                                    should_allow_hover_effect={false}\n                                                    star_size={isMobile ? 17 : 20}\n                                                />\n                                                <div className='advertiser-page__rating--text'>\n                                                    <Text color='less-prominent' size={mobileTextSize}>\n                                                        {rating_count === 1 ? (\n                                                            <Localize\n                                                                i18n_default_text='({{number_of_ratings}} rating)'\n                                                                values={{ number_of_ratings: rating_count }}\n                                                            />\n                                                        ) : (\n                                                            <Localize\n                                                                i18n_default_text='({{number_of_ratings}} ratings)'\n                                                                values={{ number_of_ratings: rating_count }}\n                                                            />\n                                                        )}\n                                                    </Text>\n                                                </div>\n                                            </div>\n                                            <div className='advertiser-page__rating--row'>\n                                                <RecommendedBy\n                                                    recommended_average={recommended_average}\n                                                    recommended_count={recommended_count}\n                                                />\n                                            </div>\n                                        </React.Fragment>\n                                    ) : (\n                                        <div className='advertiser-page__rating--row'>\n                                            <Text color='less-prominent' size={mobileTextSize}>\n                                                <Localize i18n_default_text='Not rated yet' />\n                                            </Text>\n                                        </div>\n                                    )}\n                                </div>\n                            )}\n                            <div className='advertiser-page__row'>\n                                <TradeBadge\n                                    is_poa_verified={!!full_verification}\n                                    is_poi_verified={!!basic_verification}\n                                    trade_count={Number(buy_orders_count) + Number(sell_orders_count)}\n                                    large\n                                />\n                            </div>\n                        </div>\n                        {!is_my_advert && isDesktop && <AdvertiserPageDropdownMenu />}\n                    </div>\n                    <AdvertiserPageStats />\n                </div>\n                <AdvertiserPageAdverts />\n            </BlockUserOverlay>\n        </div>\n    );\n};\n\nexport default observer(AdvertiserPage);\n","import AdvertiserPage from './advertiser-page.jsx';\nimport './advertiser-page.scss';\n\nexport default AdvertiserPage;\n","import React from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { reaction } from 'mobx';\nimport { Analytics } from '@deriv-com/analytics';\nimport { Loading } from '@deriv/components';\nimport { useP2PCompletedOrdersNotification, useP2PSettings, useGrowthbookGetFeatureValue } from '@deriv/hooks';\nimport { isEmptyObject, routes, WS } from '@deriv/shared';\nimport { useStore, observer } from '@deriv/stores';\nimport { getLanguage } from '@deriv/translations';\nimport { useDevice } from '@deriv-com/ui';\nimport { URLConstants } from '@deriv-com/utils';\nimport { init } from 'Utils/server_time';\nimport { waitWS } from 'Utils/websocket';\nimport { useStores } from 'Stores';\nimport AppContent from 'Components/app-content.jsx';\nimport { setLanguage } from 'Components/i18next';\nimport { ModalManager, ModalManagerContextProvider } from 'Components/modal-manager';\nimport Routes from 'Components/routes';\nimport './app.scss';\n\nconst App = () => {\n    const is_production = window.location.origin === URLConstants.derivAppProduction;\n    const [is_p2p_standalone_enabled, isGBLoaded] = useGrowthbookGetFeatureValue({\n        featureFlag: 'p2p_standalone_enabled',\n        defaultValue: false,\n    });\n    const { notifications, client, ui, common, modules } = useStore();\n    const { balance, currency, is_logging_in, loginid } = client;\n    const { setOnRemount } = modules?.cashier?.general_store;\n\n    const { isDesktop } = useDevice();\n    const { setP2POrderProps, setP2PRedirectTo } = notifications;\n\n    const history = useHistory();\n    const location = useLocation();\n\n    const { buy_sell_store, general_store, order_store } = useStores();\n    const { p2p_settings, subscribe } = useP2PSettings();\n\n    const lang = getLanguage();\n\n    const [order_id, setOrderId] = React.useState(null);\n    const [action_param, setActionParam] = React.useState();\n    const [code_param, setCodeParam] = React.useState();\n    useP2PCompletedOrdersNotification();\n\n    // TODO: This will redirect the internal users to the standalone application temporarily. Remove this once the standalone application is ready.\n    React.useEffect(() => {\n        if (isGBLoaded) {\n            if (is_p2p_standalone_enabled) {\n                window.location.replace(is_production ? URLConstants.derivP2pProduction : URLConstants.derivP2pStaging);\n            }\n        }\n    }, [isGBLoaded, is_p2p_standalone_enabled, is_production]);\n\n    React.useEffect(() => {\n        init();\n        general_store.setListItemLimit(isDesktop ? 10 : 50);\n\n        general_store.setExternalStores({ client, common, modules, notifications, ui });\n        general_store.setWebsocketInit(WS);\n        subscribe();\n\n        setP2PRedirectTo({\n            routeToMyProfile: () => {\n                history.push(routes.p2p_my_profile);\n                general_store.setActiveIndex(3);\n            },\n        });\n\n        // Check if advertiser info has been subscribed to before the user navigates to\n        // /advertiser?=id{counterparty_advertiser_id} from the url\n        const disposeAdvertiserInfoSubscribedReaction = reaction(\n            () => general_store.is_advertiser_info_subscribed && general_store.counterparty_advertiser_id,\n            () => {\n                if (\n                    /\\/advertiser$/.test(location.pathname) &&\n                    general_store.is_advertiser_info_subscribed &&\n                    general_store.counterparty_advertiser_id\n                ) {\n                    buy_sell_store.setShowAdvertiserPage(true);\n                    history.push({\n                        pathname: routes.p2p_advertiser_page,\n                        search: `?id=${general_store.counterparty_advertiser_id}`,\n                    });\n                }\n            }\n        );\n\n        // Redirect back to /p2p, this was implemented for the mobile team. Do not remove.\n        if (/\\/verification$/.test(location.pathname)) {\n            localStorage.setItem('is_verifying_p2p', true);\n            history.push(routes.p2p_my_profile);\n        }\n\n        // force safari refresh on back/forward\n        window.onpageshow = function (event) {\n            if (event.persisted) {\n                window.location.reload();\n            }\n        };\n        waitWS('authorize').then(() => {\n            general_store.onMount();\n            setOnRemount(general_store.onMount);\n            if (localStorage.getItem('is_verifying_p2p')) {\n                localStorage.removeItem('is_verifying_p2p');\n                general_store.setActiveIndex(general_store.path.my_ads);\n            }\n        });\n\n        // Redirect to the correct tab based on the url on page load\n        if (/\\/orders$/.test(location.pathname)) {\n            history.push(routes.p2p_orders);\n            general_store.setActiveIndex(1);\n        } else if (/\\/my-ads$/.test(location.pathname)) {\n            history.push(routes.p2p_my_ads);\n            general_store.setActiveIndex(2);\n        } else if (/\\/my-profile$/.test(location.pathname)) {\n            history.push(routes.p2p_my_profile);\n            general_store.setActiveIndex(3);\n        } else if (/\\/advertiser$/.test(location.pathname)) {\n            if (location.search || general_store.counterparty_advertiser_id) {\n                const url_params = new URLSearchParams(location.search);\n                const id = url_params.get('id');\n                const advert_id = url_params.get('advert_id');\n\n                general_store.setCounterpartyAdvertiserId(id);\n\n                if (advert_id) {\n                    general_store.setCounterpartyAdvertId(advert_id);\n                    history.replace({\n                        pathname: routes.p2p_advertiser_page,\n                        search: `?id=${id}&advert_id=${advert_id}`,\n                    });\n                } else {\n                    // DO NOT REMOVE. This will prevent the page from redirecting to buy sell on reload from advertiser page\n                    // as it resets the URL search params\n                    history.replace({ pathname: routes.p2p_advertiser_page, search: `?id=${id}` });\n                }\n            } else {\n                history.push(routes.p2p_buy_sell);\n            }\n        }\n\n        return () => {\n            general_store.onUnmount();\n            disposeAdvertiserInfoSubscribedReaction();\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    React.useEffect(() => {\n        if (!isEmptyObject(p2p_settings)) {\n            p2p_settings.currency_list.forEach(currency => {\n                const { is_default, value } = currency;\n\n                if (is_default && !buy_sell_store.selected_local_currency) {\n                    buy_sell_store.setSelectedLocalCurrency(value);\n                    buy_sell_store.setLocalCurrency(value);\n                }\n            });\n        }\n    }, [p2p_settings]);\n\n    // Redirect to /p2p/buy-sell if user navigates to /p2p without a subroute\n    React.useEffect(() => {\n        if (/\\/p2p$/.test(location.pathname) || location.pathname === '/cashier/p2p/') {\n            history.replace(routes.p2p_buy_sell);\n            general_store.setActiveIndex(0);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [location.pathname]);\n\n    React.useEffect(() => {\n        const url_params = new URLSearchParams(location.search);\n\n        let passed_order_id;\n\n        setActionParam(url_params.get('action'));\n\n        if (!isDesktop) {\n            setCodeParam(localStorage.getItem('verification_code.p2p_order_confirm'));\n        } else if (!code_param) {\n            if (url_params.has('code')) {\n                setCodeParam(url_params.get('code'));\n            } else if (localStorage.getItem('verification_code.p2p_order_confirm')) {\n                setCodeParam(localStorage.getItem('verification_code.p2p_order_confirm'));\n            }\n        }\n\n        // Different emails give us different params (order / order_id),\n        // don't remove order_id since it's consistent for mobile and web for 2FA\n        if (url_params.has('order_id')) {\n            passed_order_id = url_params.get('order_id');\n        } else if (url_params.has('order')) {\n            passed_order_id = url_params.get('order');\n        }\n\n        if (passed_order_id) {\n            setQueryOrder(passed_order_id);\n        }\n\n        return () => setQueryOrder(null);\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [setQueryOrder]);\n\n    React.useEffect(() => {\n        if (loginid && currency) {\n            Analytics.trackEvent('ce_cashier_deposit_onboarding_form', {\n                action: 'open_deposit_subpage',\n                form_name: 'ce_cashier_deposit_onboarding_form',\n                deposit_category: 'p2p',\n                currency,\n                login_id: loginid,\n            });\n        }\n    }, [currency, loginid]);\n\n    const setQueryOrder = React.useCallback(\n        input_order_id => {\n            const current_query_params = new URLSearchParams(location.search);\n\n            if (!isDesktop) {\n                current_query_params.delete('action');\n                current_query_params.delete('code');\n            }\n\n            if (current_query_params.has('order_id') || current_query_params.has('order')) {\n                current_query_params.delete('order');\n                current_query_params.delete('order_id');\n            }\n\n            if (input_order_id) {\n                current_query_params.append('order', input_order_id);\n            }\n\n            if (!input_order_id) {\n                history.replace({\n                    search: '',\n                    hash: location.hash,\n                });\n\n                setOrderId(null);\n            } else if (order_id !== input_order_id) {\n                // Changing query params\n                history.push({\n                    pathname: routes.p2p_orders,\n                    search: current_query_params.toString(),\n                    hash: location.hash,\n                });\n\n                setOrderId(input_order_id);\n            }\n        },\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [history, location.hash, location.search]\n    );\n\n    React.useEffect(() => {\n        setLanguage(lang);\n    }, [lang]);\n\n    const navigateToOrderDetails = id => {\n        history.push({ pathname: routes.p2p_orders, search: `?order=${id}` });\n    };\n\n    React.useEffect(() => {\n        if (order_id) {\n            general_store.redirectTo('orders');\n            order_store.setOrderId(order_id);\n        }\n        setP2POrderProps({\n            order_id,\n            redirectToOrderDetails: general_store.redirectToOrderDetails,\n            setP2POrderTab: general_store.setP2POrderTab,\n            setIsRatingModalOpen: is_open =>\n                is_open ? general_store.showModal({ key: 'RatingModal' }) : general_store.hideModal(),\n            navigateToOrderDetails,\n        });\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [order_id]);\n\n    React.useEffect(() => {\n        general_store.setAccountBalance(balance);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [balance]);\n\n    React.useEffect(() => {\n        if (action_param && code_param) {\n            // We need an extra state since we delete the code from the query params.\n            // Do not remove.\n            order_store.setVerificationCode(code_param);\n            order_store.setActionParam(action_param);\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [action_param, code_param]);\n\n    if (!isGBLoaded || is_logging_in || general_store.is_loading || is_p2p_standalone_enabled) {\n        return <Loading className='p2p__loading' />;\n    }\n\n    return (\n        <main className='p2p'>\n            <ModalManagerContextProvider>\n                <ModalManager />\n                <AppContent order_id={order_id} />\n                <Routes />\n            </ModalManagerContextProvider>\n        </main>\n    );\n};\n\nexport default observer(App);\n","import React from 'react';\nimport { Button } from '@deriv/components';\nimport { useDevice } from '@deriv-com/ui';\nimport { Localize } from 'Components/i18next';\nimport { useModalManagerContext } from 'Components/modal-manager/modal-manager-context';\nimport { useStores } from 'Stores';\nimport { getEligibilityMessage } from 'Utils/adverts';\n\ntype TBuySellRowActionProps = {\n    account_currency?: string;\n    className?: string;\n    eligibility_status?: string[];\n    is_buy_advert?: boolean;\n    is_eligible?: boolean;\n    onClick?: () => void;\n};\n\nconst BuySellRowAction = ({\n    account_currency,\n    className,\n    eligibility_status,\n    is_buy_advert,\n    is_eligible,\n    onClick,\n}: TBuySellRowActionProps) => {\n    const { showModal } = useModalManagerContext();\n    const { isDesktop } = useDevice();\n    const { general_store } = useStores();\n\n    const onUnavailableClick = (eligibility_status: string[]) => {\n        showModal({ key: 'ErrorModal', props: { error_message: getEligibilityMessage(eligibility_status) } });\n    };\n\n    if (is_eligible) {\n        if (is_buy_advert) {\n            return (\n                <Button\n                    className={className}\n                    is_disabled={general_store.is_barred}\n                    onClick={onClick}\n                    primary\n                    small={isDesktop}\n                >\n                    <Localize\n                        i18n_default_text='Buy {{ account_currency }}'\n                        values={{\n                            account_currency,\n                        }}\n                    />\n                </Button>\n            );\n        }\n\n        return (\n            <Button\n                is_disabled={general_store.is_barred}\n                onClick={onClick}\n                primary\n                small={isDesktop}\n                className={className}\n            >\n                <Localize\n                    i18n_default_text='Sell {{ account_currency }}'\n                    values={{\n                        account_currency,\n                    }}\n                />\n            </Button>\n        );\n    }\n\n    return (\n        <Button\n            onClick={() => onUnavailableClick(eligibility_status)}\n            secondary\n            small={isDesktop}\n            className={className}\n        >\n            <Localize i18n_default_text='Unavailable' />\n        </Button>\n    );\n};\n\nexport default BuySellRowAction;\n","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { Field, Formik } from 'formik';\nimport { Autocomplete, Icon } from '@deriv/components';\nimport { useDevice } from '@deriv-com/ui';\nimport { localize } from 'Components/i18next';\n\nconst CurrencySelector = ({ className, default_value, list, onSelect }) => {\n    const { isDesktop } = useDevice();\n    const local_currencies_list = list.map(currency => ({\n        ...currency,\n        component: (\n            <div className='currency-dropdown__list-item'>\n                <div className='currency-dropdown__list-item-symbol'>{currency.value}</div>\n                <div className='currency-dropdown__list-item-name'>{currency.display_name}</div>\n            </div>\n        ),\n    }));\n\n    const getSortedList = list_items => {\n        const sorted_list = list_items.filter(list_item => list_item.is_default || list_item.has_adverts);\n        const index = sorted_list.findIndex(item => item.text === default_value);\n\n        if (index) {\n            const value = sorted_list.splice(index, 1);\n            if (value) sorted_list.splice(0, 0, value[0]);\n        }\n\n        return sorted_list;\n    };\n    const [filtered_currency_list, setFilteredCurrencyList] = React.useState(getSortedList(local_currencies_list));\n\n    return (\n        <Formik enableReinitialize initialValues={{ currency: '' }}>\n            {({ setFieldValue }) => (\n                <Field name='currency'>\n                    {({ field }) => (\n                        <Autocomplete\n                            {...field}\n                            autoComplete='off'\n                            className={classNames('buy-sell-currency-selector', className)}\n                            data-lpignore='true'\n                            historyValue={default_value}\n                            is_list_visible\n                            leading_icon={<Icon className='currency-selector__search-icon' icon='IcSearch' />}\n                            list_height={!isDesktop ? '100%' : '288px'}\n                            list_items={filtered_currency_list}\n                            not_found_text={\n                                list.filter(\n                                    item => item.text.toLowerCase() === field.value.toLowerCase() && !item.has_adverts\n                                ).length === 1\n                                    ? localize('No ads for this currency.')\n                                    : localize('No results for \"{{value}}\".', {\n                                          value: field.value,\n                                          interpolation: { escapeValue: false },\n                                      })\n                            }\n                            onItemSelection={({ value }) => {\n                                if (value) onSelect?.(value);\n                            }}\n                            onSearch={(value, list_items) => {\n                                return list_items.filter(\n                                    item =>\n                                        item.display_name.toLowerCase().includes(value) ||\n                                        item.text.toLowerCase().includes(value)\n                                );\n                            }}\n                            placeholder={localize('Search')}\n                            trailing_icon={\n                                field.value ? (\n                                    <Icon\n                                        color='secondary'\n                                        icon='IcCloseCircle'\n                                        onClick={() => {\n                                            setFieldValue('currency', '');\n                                            setFilteredCurrencyList(getSortedList(local_currencies_list));\n                                        }}\n                                    />\n                                ) : (\n                                    <></>\n                                )\n                            }\n                            type='text'\n                        />\n                    )}\n                </Field>\n            )}\n        </Formik>\n    );\n};\n\nCurrencySelector.propTypes = {\n    className: PropTypes.string,\n    default_value: PropTypes.string,\n    list: PropTypes.array,\n    onSelect: PropTypes.func,\n};\n\nexport default CurrencySelector;\n","import React from 'react';\nimport { Dropdown, Icon } from '@deriv/components';\nimport { useDevice } from '@deriv-com/ui';\nimport { observer } from 'mobx-react-lite';\nimport { localize } from 'Components/i18next';\nimport { useStores } from 'Stores';\nimport 'Pages/buy-sell/sort-dropdown.scss';\n\nconst SortDropdown = () => {\n    const { isDesktop } = useDevice();\n    const { buy_sell_store } = useStores();\n\n    const sort_list = [\n        { text: localize('Exchange rate'), value: 'rate' },\n        { text: localize('User rating'), value: 'rating' },\n    ];\n\n    if (isDesktop) {\n        return (\n            <Dropdown\n                className='sort-dropdown'\n                classNameLabel='sort-dropdown--label'\n                is_align_text_left\n                list={sort_list}\n                onChange={buy_sell_store.handleChange}\n                placeholder={localize('Sort by')}\n                value={buy_sell_store.selected_value}\n            />\n        );\n    }\n\n    return (\n        <div\n            data-testid='sort-div'\n            className='sort-dropdown--sort'\n            onClick={() => buy_sell_store.setIsSortDropdownOpen(true)}\n        >\n            <Icon icon='IcCashierSort' size={16} data_testid='mobile-view-sort-icon' />\n        </div>\n    );\n};\n\nexport default observer(SortDropdown);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Dropdown, useOnClickOutside } from '@deriv/components';\nimport { useP2PSettings } from '@deriv/hooks';\nimport { observer } from '@deriv/stores';\nimport { useDevice } from '@deriv-com/ui';\nimport { localize } from 'Components/i18next';\nimport { useStores } from 'Stores';\nimport { CurrencySelector } from 'Pages/buy-sell/currency-selector';\nimport { useModalManagerContext } from 'Components/modal-manager/modal-manager-context';\nimport './currency-dropdown.scss';\n\nconst CurrencyDropdown = () => {\n    const { isDesktop } = useDevice();\n    const [is_list_visible, setIsListVisible] = React.useState(false);\n    const currency_selector_ref = React.useRef(null);\n    const { buy_sell_store } = useStores();\n    const { onLocalCurrencySelect } = buy_sell_store;\n    const { showModal } = useModalManagerContext();\n    const {\n        p2p_settings: { currency_list },\n    } = useP2PSettings();\n\n    const local_currencies_list = currency_list.map(currency => ({\n        ...currency,\n        component: (\n            <div className='currency-dropdown__list-item'>\n                <div className='currency-dropdown__list-item-symbol'>{currency.value}</div>\n                <div className='currency-dropdown__list-item-name'>{currency.display_name}</div>\n            </div>\n        ),\n    }));\n\n    useOnClickOutside(\n        currency_selector_ref,\n        () => {\n            setIsListVisible(false);\n        },\n        () => is_list_visible\n    );\n\n    return (\n        <div className='currency-dropdown' ref={currency_selector_ref}>\n            <Dropdown\n                className={classNames('currency-dropdown__list', {\n                    'currency-dropdown__list--visible': is_list_visible,\n                })}\n                is_align_text_left\n                list={local_currencies_list}\n                onClick={() => {\n                    if (isDesktop) setIsListVisible(!is_list_visible);\n                    else showModal({ key: 'CurrencySelectorModal' });\n                }}\n                placeholder={localize('Currency')}\n                value={buy_sell_store.selected_local_currency}\n            />\n            {is_list_visible && (\n                <CurrencySelector\n                    default_value={buy_sell_store.selected_local_currency}\n                    list={local_currencies_list}\n                    onSelect={value => {\n                        setIsListVisible(false);\n                        onLocalCurrencySelect(value);\n                    }}\n                />\n            )}\n        </div>\n    );\n};\n\nexport default observer(CurrencyDropdown);\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { ButtonToggle, Icon, SearchBox } from '@deriv/components';\nimport { useP2PSettings } from '@deriv/hooks';\nimport { useDevice } from '@deriv-com/ui';\nimport { observer } from 'mobx-react-lite';\nimport classNames from 'classnames';\nimport { buy_sell } from 'Constants/buy-sell';\nimport { useP2PRenderedAdverts } from 'Hooks';\nimport { localize } from 'Components/i18next';\nimport ToggleContainer from 'Components/toggle-container';\nimport SortDropdown from 'Pages/buy-sell/sort-dropdown';\nimport { useStores } from 'Stores';\nimport CurrencyDropdown from 'Pages/buy-sell/currency-dropdown.jsx';\nimport 'Pages/buy-sell/buy-sell-header.scss';\n\nconst getBuySellFilters = () => [\n    {\n        text: localize('Buy'),\n        value: buy_sell.BUY,\n    },\n    {\n        text: localize('Sell'),\n        value: buy_sell.SELL,\n    },\n];\n\nconst BuySellHeader = ({ table_type }) => {\n    const { isDesktop } = useDevice();\n    const { buy_sell_store, general_store } = useStores();\n    const { p2p_settings } = useP2PSettings();\n    const is_currency_selector_visible = p2p_settings?.feature_level >= 2;\n\n    const onClear = () => {\n        buy_sell_store.setSearchTerm('');\n    };\n\n    const onSearch = search => {\n        buy_sell_store.setSearchTerm(search.trim());\n    };\n\n    React.useEffect(() => {\n        buy_sell_store.setSearchTerm('');\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const { isError } = useP2PRenderedAdverts();\n\n    return (\n        <div\n            className={classNames('buy-sell-header', {\n                'buy-sell-header__position-static': isError,\n            })}\n        >\n            <div className='buy-sell-header__container'>\n                <ToggleContainer>\n                    <ButtonToggle\n                        buttons_arr={getBuySellFilters()}\n                        className='buy-sell-header__filters'\n                        is_animated\n                        name='filter'\n                        onChange={buy_sell_store.onChangeTableType}\n                        value={table_type}\n                        has_rounded_button\n                    />\n                </ToggleContainer>\n                <div\n                    className={classNames('buy-sell-header__row', {\n                        'buy-sell-header__row--selector': is_currency_selector_visible,\n                    })}\n                >\n                    {is_currency_selector_visible && <CurrencyDropdown />}\n                    <SearchBox\n                        onClear={onClear}\n                        onSearch={onSearch}\n                        placeholder={isDesktop ? localize('Search by nickname') : localize('Search')}\n                    />\n                    <SortDropdown />\n                    <div className='buy-sell-header__row--filter'>\n                        <div\n                            className={classNames('buy-sell-header__row--filter-status', {\n                                'buy-sell-header__row--filter-status--disabled':\n                                    buy_sell_store.selected_payment_method_value.length === 0,\n                            })}\n                        />\n                        <Icon\n                            icon='IcFilter'\n                            className='buy-sell-header__row--filter-icon'\n                            onClick={() => general_store.showModal({ key: 'FilterModal', props: {} })}\n                            size={40}\n                        />\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nBuySellHeader.propTypes = {\n    table_type: PropTypes.string,\n};\n\nexport default observer(BuySellHeader);\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nimport { Icon, Table, Text } from '@deriv/components';\nimport { routes } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { useP2PExchangeRate } from '@deriv/hooks';\nimport { useDevice } from '@deriv-com/ui';\n\nimport { Localize } from 'Components/i18next';\nimport { useModalManagerContext } from 'Components/modal-manager/modal-manager-context';\nimport { OnlineStatusAvatar } from 'Components/online-status';\nimport StarRating from 'Components/star-rating';\nimport TradeBadge from 'Components/trade-badge';\nimport { document_status_codes, identity_status_codes } from 'Constants/account-status-codes';\nimport { buy_sell } from 'Constants/buy-sell';\nimport BuySellRowAction from 'Pages/buy-sell/buy-sell-row-action';\nimport { useStores } from 'Stores';\nimport { generateEffectiveRate } from 'Utils/format-value';\n\nimport './buy-sell-row.scss';\n\nconst BuySellRow = ({ row: advert }) => {\n    const {\n        account_currency,\n        advertiser_details,\n        counterparty_type,\n        effective_rate,\n        eligibility_status,\n        is_eligible,\n        local_currency,\n        max_order_amount_limit_display,\n        min_order_amount_limit_display,\n        payment_method_names,\n        price_display,\n        rate_type,\n        rate,\n    } = advert;\n\n    const { buy_sell_store, general_store } = useStores();\n    const { showModal } = useModalManagerContext();\n    const { isDesktop, isMobile } = useDevice();\n    const {\n        client: { currency },\n    } = useStore();\n    const history = useHistory();\n    const exchange_rate = useP2PExchangeRate(local_currency);\n\n    if (advert.id === 'WATCH_THIS_SPACE') {\n        // This allows for the sliding animation on the Buy/Sell toggle as it pushes\n        // an empty item with an item that holds the same height of the toggle container.\n        // Also see: buy-sell-table.jsx\n        return <div style={{ height: '140px' }} />;\n    }\n\n    if (advert.id === 'NO_MATCH_ROW') {\n        // Empty row when there is a search_term but no search_results\n        return (\n            <div className='buy-sell-row__no-match'>\n                <Text color='prominent' size='xs'>\n                    <Localize i18n_default_text='There are no matching ads.' />\n                </Text>\n            </div>\n        );\n    }\n\n    const is_my_advert = advert.advertiser_details.id === general_store.advertiser_id;\n    const is_buy_advert = counterparty_type === buy_sell.BUY;\n    const { name: advertiser_name, rating_average, rating_count } = advert.advertiser_details;\n    const rating_average_decimal = rating_average ? Number(rating_average).toFixed(1) : null;\n    const { display_effective_rate } = generateEffectiveRate({\n        price: price_display,\n        rate_type,\n        rate,\n        local_currency,\n        exchange_rate,\n        market_rate: effective_rate,\n    });\n    const is_poi_poa_verified =\n        general_store.poi_status === identity_status_codes.VERIFIED &&\n        (!general_store.p2p_poa_required ||\n            (general_store.poa_status === document_status_codes.VERIFIED && !general_store.poa_authenticated_with_idv));\n    const onClickRow = () => {\n        if ((general_store.is_advertiser || is_poi_poa_verified) && !general_store.is_barred) {\n            buy_sell_store.showAdvertiserPage(advert);\n            history.push({ pathname: routes.p2p_advertiser_page, search: `?id=${advert.advertiser_details.id}` });\n        } else if (!general_store.is_advertiser) {\n            buy_sell_store.setShouldShowVerification(true);\n        }\n    };\n\n    const onClickBuySell = () => {\n        if (general_store.is_advertiser) buy_sell_store.setSelectedAdvert(advert);\n        else if (is_poi_poa_verified) {\n            showModal({\n                key: 'NicknameModal',\n                props: {\n                    onConfirm: () => buy_sell_store.setSelectedAdvert(advert),\n                    should_hide_close_btn: isDesktop,\n                },\n            });\n        } else {\n            buy_sell_store.setShouldShowVerification(true);\n        }\n    };\n\n    if (isDesktop) {\n        return (\n            <Table.Row className='buy-sell__table-row'>\n                <Table.Cell>\n                    <div\n                        className={classNames('buy-sell__cell', { 'buy-sell__cell-hover': !general_store.is_barred })}\n                        onClick={() => onClickRow()}\n                    >\n                        <OnlineStatusAvatar\n                            is_online={advertiser_details.is_online}\n                            nickname={advertiser_name}\n                            size={24}\n                            text_size='xxs'\n                        />\n                        <div className='buy-sell__cell--container'>\n                            <div className='buy-sell__cell--container__row'>\n                                <div\n                                    className={classNames({\n                                        'buy-sell__name': !general_store.is_barred,\n                                    })}\n                                >\n                                    {advertiser_name}\n                                </div>\n                                <TradeBadge trade_count={advertiser_details.completed_orders_count} />\n                            </div>\n                            <div className='buy-sell-row__rating'>\n                                {!!rating_count && !!rating_average ? (\n                                    <div className='buy-sell-row__rating--row'>\n                                        <Text color='less-prominent' size='xxs'>\n                                            {rating_average_decimal}\n                                        </Text>\n                                        <StarRating\n                                            empty_star_className='buy-sell-row__rating--star'\n                                            empty_star_icon='IcEmptyStar'\n                                            full_star_className='buy-sell-row__rating--star'\n                                            full_star_icon='IcFullStar'\n                                            initial_value={rating_average_decimal}\n                                            is_readonly\n                                            number_of_stars={5}\n                                            should_allow_hover_effect={false}\n                                            star_size={14}\n                                        />\n                                        <Text color='less-prominent' size='xxs'>\n                                            ({rating_count})\n                                        </Text>\n                                    </div>\n                                ) : (\n                                    <Text color='less-prominent' size='xxs'>\n                                        <Localize i18n_default_text='Not rated yet' />\n                                    </Text>\n                                )}\n                            </div>\n                        </div>\n                    </div>\n                </Table.Cell>\n                <Table.Cell>\n                    {min_order_amount_limit_display}&ndash;{max_order_amount_limit_display} {account_currency}\n                </Table.Cell>\n                <Table.Cell>\n                    <Text color='profit-success' size='xs' weight='bold'>\n                        {display_effective_rate} {local_currency}\n                    </Text>\n                </Table.Cell>\n                <Table.Cell>\n                    <div className='buy-sell-row__payment-method'>\n                        {payment_method_names ? (\n                            payment_method_names.map((payment_method, key) => {\n                                return (\n                                    <div className='buy-sell-row__payment-method--label' key={key}>\n                                        <Text size='xs' line_height='l'>\n                                            {payment_method}\n                                        </Text>\n                                    </div>\n                                );\n                            })\n                        ) : (\n                            <div className='buy-sell-row__payment-method--label'>\n                                <Text size='xs' line_height='l'>\n                                    -\n                                </Text>\n                            </div>\n                        )}\n                    </div>\n                </Table.Cell>\n                {is_my_advert ? (\n                    <Table.Cell />\n                ) : (\n                    <Table.Cell className='buy-sell__button'>\n                        <BuySellRowAction\n                            account_currency={account_currency}\n                            eligibility_status={eligibility_status}\n                            is_buy_advert={is_buy_advert}\n                            is_eligible={is_eligible}\n                            onClick={onClickBuySell}\n                        />\n                    </Table.Cell>\n                )}\n            </Table.Row>\n        );\n    }\n\n    return (\n        <div className='buy-sell-row'>\n            <div className='buy-sell-row__advertiser' onClick={() => onClickRow()}>\n                <OnlineStatusAvatar\n                    is_online={advertiser_details.is_online}\n                    nickname={advertiser_name}\n                    size={32}\n                    text_size='s'\n                />\n                <div className='buy-sell-row__advertiser-name'>\n                    <div className='buy-sell__cell--container__row'>\n                        <Text className='buy-sell-row__advertiser-name--text' size='xs' weight='bold'>\n                            {advertiser_name}\n                        </Text>\n                        <TradeBadge trade_count={advertiser_details.completed_orders_count} />\n                    </div>\n                    <div className='buy-sell-row__rating'>\n                        {!!rating_count && !!rating_average ? (\n                            <div className='buy-sell-row__rating--row'>\n                                <Text color='less-prominent' size={isMobile ? 'xxs' : 'xxxs'}>\n                                    {rating_average_decimal}\n                                </Text>\n                                <StarRating\n                                    empty_star_className='buy-sell-row__rating--star'\n                                    empty_star_icon='IcEmptyStar'\n                                    full_star_className='buy-sell-row__rating--star'\n                                    full_star_icon='IcFullStar'\n                                    initial_value={rating_average_decimal}\n                                    is_readonly\n                                    number_of_stars={5}\n                                    should_allow_hover_effect={false}\n                                    star_size={14}\n                                />\n                                <Text color='less-prominent' size={isMobile ? 'xxs' : 'xxxs'}>\n                                    ({rating_count})\n                                </Text>\n                            </div>\n                        ) : (\n                            <Text color='less-prominent' size='xxs'>\n                                <Localize i18n_default_text='Not rated yet' />\n                            </Text>\n                        )}\n                    </div>\n                </div>\n                <Icon className='buy-sell-row__advertiser-arrow' icon='IcChevronRightBold' size={16} />\n            </div>\n            <div className='buy-sell-row__information'>\n                <div className='buy-sell-row__rate'>\n                    <Text as='div' size={isMobile ? 'xxs' : 'xxxs'}>\n                        <Localize i18n_default_text='Rate (1 {{currency}})' values={{ currency }} />\n                    </Text>\n                    <Text as='div' color='profit-success' weight='bold'>\n                        {display_effective_rate} {local_currency}\n                    </Text>\n                    <Text as='div' color='less-prominent' size='xs'>\n                        <Localize\n                            i18n_default_text='Limits {{ min_order }}–{{ max_order }} {{ currency }}'\n                            values={{\n                                min_order: min_order_amount_limit_display,\n                                max_order: max_order_amount_limit_display,\n                                currency: account_currency,\n                            }}\n                        />\n                    </Text>\n                </div>\n                <div className='buy-sell-row__payment-methods-list'>\n                    {payment_method_names ? (\n                        payment_method_names.map((payment_method, key) => {\n                            return (\n                                <div className='buy-sell-row__payment-method' key={key}>\n                                    <Text line_height='l' size={isMobile ? 'xxxs' : 'xxs'}>\n                                        {payment_method}\n                                    </Text>\n                                </div>\n                            );\n                        })\n                    ) : (\n                        <div className='buy-sell-row__payment-method'>\n                            <Text line_height='l' size={isMobile ? 'xxxs' : 'xxs'}>\n                                -\n                            </Text>\n                        </div>\n                    )}\n                </div>\n                {!is_my_advert && (\n                    <BuySellRowAction\n                        account_currency={account_currency}\n                        className='buy-sell-row__button'\n                        eligibility_status={eligibility_status}\n                        is_buy_advert={is_buy_advert}\n                        is_eligible={is_eligible}\n                        onClick={onClickBuySell}\n                    />\n                )}\n            </div>\n        </div>\n    );\n};\n\nBuySellRow.propTypes = {\n    advert: PropTypes.object,\n    is_buy: PropTypes.bool,\n    row: PropTypes.object,\n    setSelectedAdvert: PropTypes.func,\n    style: PropTypes.object,\n};\n\nexport default observer(BuySellRow);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { InfiniteDataList, Loading, Modal, RadioGroup, Table, Text } from '@deriv/components';\nimport { reaction } from 'mobx';\nimport { observer, useStore } from '@deriv/stores';\nimport { useDevice } from '@deriv-com/ui';\nimport { Localize } from 'Components/i18next';\nimport TableError from 'Components/section-error';\nimport { api_error_codes } from 'Constants/api-error-codes';\nimport { useP2PRenderedAdverts } from 'Hooks';\nimport { useStores } from 'Stores';\nimport BuySellRow from './buy-sell-row.jsx';\nimport NoAds from 'Pages/buy-sell//no-ads';\nimport './buy-sell-table.scss';\n\nconst BuySellRowRendererComponent = row_props => {\n    const { buy_sell_store } = useStores();\n\n    return (\n        <BuySellRow\n            {...row_props}\n            is_buy={buy_sell_store.is_buy}\n            setSelectedAdvert={buy_sell_store.setSelectedAdvert}\n            showAdvertiserPage={buy_sell_store.showAdvertiserPage}\n        />\n    );\n};\n\nconst BuySellRowRenderer = observer(BuySellRowRendererComponent);\n\nconst BuySellTable = ({ onScroll }) => {\n    const { isDesktop, isTablet } = useDevice();\n    const { buy_sell_store, general_store } = useStores();\n    const {\n        client: { currency },\n    } = useStore();\n\n    React.useEffect(\n        () => {\n            reaction(\n                () => buy_sell_store.is_buy,\n                () => buy_sell_store.fetchAdvertiserAdverts(),\n                { fireImmediately: true }\n            );\n        },\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        []\n    );\n\n    const { error, has_more_items_to_load, isError, isLoading, loadMoreAdverts, rendered_adverts } =\n        useP2PRenderedAdverts();\n\n    React.useEffect(() => {\n        if (error?.code === api_error_codes.PERMISSION_DENIED) {\n            general_store.setIsBlocked(true);\n        }\n    }, [error?.code]);\n\n    if (isLoading) {\n        return <Loading is_fullscreen={false} />;\n    }\n\n    if (isError) {\n        return <TableError message={error.message} className='section-error__table--center' size='xs' />;\n    }\n\n    // Need to cater for the extra element added to the list for mobile i.e. the \"WATCH_THIS_SPACE\".\n    // Otherwise, the \"No ads for this currency\" message won't be displayed for mobile, when there are no ads for the selected currency.\n    const rendered_adverts_count = isDesktop ? rendered_adverts.length : rendered_adverts.length - 1;\n\n    if (rendered_adverts_count > 0) {\n        return (\n            <>\n                <Table className='buy-sell-table'>\n                    <Modal\n                        name='sort'\n                        className='sort'\n                        is_open={buy_sell_store.is_sort_dropdown_open}\n                        height='10rem'\n                        toggleModal={() => buy_sell_store.setIsSortDropdownOpen(false)}\n                        width={isTablet ? '44rem' : '80vw'}\n                    >\n                        <RadioGroup\n                            name='reason'\n                            className='sort-radiogroup'\n                            onToggle={buy_sell_store.handleChange}\n                            selected={buy_sell_store.selected_value}\n                            required\n                        >\n                            {buy_sell_store.sort_list.map((list_item, key) => {\n                                return (\n                                    <RadioGroup.Item\n                                        key={key}\n                                        value={list_item.value}\n                                        label={<Text color='prominent'>{list_item.text}</Text>}\n                                    />\n                                );\n                            })}\n                        </RadioGroup>\n                    </Modal>\n                    {isDesktop && (\n                        <Table.Header>\n                            <Table.Row className='buy-sell-table__header'>\n                                <Table.Head>\n                                    <Localize i18n_default_text='Advertisers' />\n                                </Table.Head>\n                                <Table.Head>\n                                    <Localize i18n_default_text='Limits' />\n                                </Table.Head>\n                                <Table.Head>\n                                    <Localize i18n_default_text='Rate (1 {{currency}})' values={{ currency }} />\n                                </Table.Head>\n                                <Table.Head>\n                                    <Localize i18n_default_text='Payment methods' />\n                                </Table.Head>\n                                <Table.Head />\n                                <Table.Head />\n                            </Table.Row>\n                        </Table.Header>\n                    )}\n                    <Table.Body className='buy-sell-table__body'>\n                        <InfiniteDataList\n                            data_list_className='buy-sell__data-list'\n                            items={rendered_adverts}\n                            rowRenderer={props => <BuySellRowRenderer {...props} />}\n                            loadMoreRowsFn={loadMoreAdverts}\n                            has_filler\n                            has_more_items_to_load={has_more_items_to_load}\n                            keyMapperFn={item => item.id}\n                            onScroll={onScroll}\n                        />\n                    </Table.Body>\n                </Table>\n            </>\n        );\n    }\n\n    return <NoAds />;\n};\n\nBuySellTable.displayName = 'BuySellTable';\nBuySellTable.propTypes = {\n    onScroll: PropTypes.func,\n};\n\nexport default observer(BuySellTable);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react-lite';\nimport { localize } from 'Components/i18next';\nimport PageReturn from 'Components/page-return';\nimport Verification from 'Components/verification';\nimport { buy_sell } from 'Constants/buy-sell';\nimport { useStores } from 'Stores';\nimport BuySellHeader from './buy-sell-header.jsx';\nimport BuySellTable from './buy-sell-table.jsx';\n\nconst BuySell = () => {\n    const { buy_sell_store, general_store } = useStores();\n    const previous_scroll_top = React.useRef(0);\n\n    React.useEffect(() => {\n        if (general_store.active_index !== 0) general_store.setActiveIndex(0);\n        const disposeAdvertIntervalReaction = buy_sell_store.registerAdvertIntervalReaction();\n        buy_sell_store.setLocalCurrency(buy_sell_store.selected_local_currency);\n\n        return () => {\n            disposeAdvertIntervalReaction();\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const onScroll = event => {\n        if (!buy_sell_store.show_advertiser_page) {\n            previous_scroll_top.current = event?.target?.scrollTop;\n        }\n    };\n\n    if (buy_sell_store.should_show_verification) {\n        return (\n            <React.Fragment>\n                <PageReturn\n                    className='buy-sell__page-return'\n                    onClick={buy_sell_store.hideVerification}\n                    page_title={localize('Verification')}\n                />\n                <Verification />\n            </React.Fragment>\n        );\n    }\n\n    return (\n        <div className='buy-sell'>\n            <BuySellHeader table_type={buy_sell_store.table_type} />\n            <BuySellTable\n                key={buy_sell_store.table_type}\n                is_buy={buy_sell_store.table_type === buy_sell.BUY}\n                setSelectedAdvert={buy_sell_store.setSelectedAdvert}\n                showAdvertiserPage={buy_sell_store.showAdvertiserPage}\n                onScroll={onScroll}\n            />\n        </div>\n    );\n};\n\nBuySell.propTypes = {\n    error_message: PropTypes.string,\n    hideAdvertiserPage: PropTypes.func,\n    hideVerification: PropTypes.func,\n    is_submit_disabled: PropTypes.bool,\n    navigate: PropTypes.func,\n    onCancelClick: PropTypes.func,\n    onChangeTableType: PropTypes.func,\n    onConfirmClick: PropTypes.func,\n    params: PropTypes.object,\n    selected_ad_state: PropTypes.object,\n    setErrorMessage: PropTypes.func,\n    setIsSubmitDisabled: PropTypes.func,\n    setSelectedAdvert: PropTypes.func,\n    should_show_popup: PropTypes.bool,\n    should_show_verification: PropTypes.bool,\n    show_advertiser_page: PropTypes.bool,\n    showAdvertiserPage: PropTypes.func,\n    submitForm: PropTypes.func,\n    table_type: PropTypes.string,\n};\n\nexport default observer(BuySell);\n","import BuySell from './buy-sell.jsx';\nimport './buy-sell.scss';\n\nexport default BuySell;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { useHistory } from 'react-router-dom';\nimport { Button, Icon, Text } from '@deriv/components';\nimport { useP2PSettings } from '@deriv/hooks';\nimport { routes } from '@deriv/shared';\nimport { observer } from '@deriv/stores';\nimport { Localize } from 'Components/i18next';\nimport { useModalManagerContext } from 'Components/modal-manager/modal-manager-context';\nimport { document_status_codes, identity_status_codes } from 'Constants/account-status-codes';\nimport { useStores } from 'Stores';\nimport './no-ads.scss';\n\nconst NoAds = ({ is_ads_page = false }) => {\n    const { buy_sell_store, general_store, my_ads_store } = useStores();\n    const { showModal } = useModalManagerContext();\n    const { handleTabClick, is_barred } = general_store;\n    const { is_buy, selected_local_currency, setCreateSellAdFromNoAds } = buy_sell_store;\n    const { setShowAdForm } = my_ads_store;\n    const history = useHistory();\n    const { p2p_settings } = useP2PSettings();\n\n    const is_default_currency = p2p_settings.currency_list.filter(\n        currency => currency.text.toLowerCase() === selected_local_currency?.toLowerCase() && currency.is_default\n    ).length;\n\n    const is_poi_poa_verified =\n        general_store.poi_status === identity_status_codes.VERIFIED &&\n        (!general_store.p2p_poa_required ||\n            (general_store.poa_status === document_status_codes.VERIFIED && !general_store.poa_authenticated_with_idv));\n\n    const onClickButton = () => {\n        if (!is_ads_page) handleTabClick(2);\n        if (is_buy && !is_ads_page) setCreateSellAdFromNoAds(true);\n        setShowAdForm(true);\n        history.push(routes.p2p_my_ads);\n    };\n\n    return (\n        <div className={classNames('no-ads', { 'ads-page': is_ads_page })}>\n            <Icon icon='IcCashierNoAds' size={128} />\n            {is_default_currency || is_ads_page ? (\n                <React.Fragment>\n                    <Text align='center' className='no-ads__title' weight='bold'>\n                        {is_ads_page ? (\n                            <Localize i18n_default_text='You have no ads 😞' />\n                        ) : (\n                            <Localize i18n_default_text='No ads for this currency 😞' />\n                        )}\n                    </Text>\n                    <Text className='no-ads__message' align='center'>\n                        <Localize i18n_default_text='Looking to buy or sell USD? You can post your own ad for others to respond.' />\n                    </Text>\n                    <Button\n                        className='no-ads__button'\n                        disabled={is_barred}\n                        primary\n                        large\n                        onClick={() => {\n                            if (general_store.is_advertiser || !is_poi_poa_verified) {\n                                onClickButton();\n                            } else {\n                                showModal({\n                                    key: 'NicknameModal',\n                                    props: {\n                                        onConfirm: onClickButton,\n                                    },\n                                });\n                            }\n                        }}\n                    >\n                        {is_ads_page ? (\n                            <Localize i18n_default_text='Create new ad' />\n                        ) : (\n                            <Localize i18n_default_text='Create ad' />\n                        )}\n                    </Button>\n                </React.Fragment>\n            ) : (\n                <Text align='center' className='no-ads__title' weight='bold'>\n                    <Localize i18n_default_text='No ads for this currency at the moment 😞' />\n                </Text>\n            )}\n        </div>\n    );\n};\n\nexport default observer(NoAds);\n","import NoAds from './no-ads.jsx';\nimport './no-ads.scss';\n\nexport default NoAds;\n","import * as React from 'react';\nimport { Formik, Field } from 'formik';\nimport { reaction } from 'mobx';\nimport { observer } from 'mobx-react-lite';\nimport { Autocomplete, Icon, Text, useOnClickOutside } from '@deriv/components';\nimport { useDevice } from '@deriv-com/ui';\nimport { useStores } from 'Stores';\nimport { localize, Localize } from 'Components/i18next';\nimport PaymentMethodIcon from 'Components/payment-method-icon';\nimport PropTypes from 'prop-types';\nimport './buy-ad-payment-methods-list.scss';\n\nconst BuyAdPaymentMethodsList = ({\n    is_alignment_top,\n    list_portal_id,\n    selected_methods,\n    setSelectedMethods,\n    should_show_hint,\n    touched,\n}) => {\n    const { isDesktop } = useDevice();\n    const { my_ads_store, my_profile_store } = useStores();\n    const [selected_edit_method, setSelectedEditMethod] = React.useState();\n    const [payment_methods_list, setPaymentMethodsList] = React.useState([]);\n    const [close_icon, setCloseIcon] = React.useState(false);\n    const [show_list, setShowList] = React.useState(false);\n    const [hide_list, setHideList] = React.useState(false);\n    const deleted_autocomplete_ref = React.useRef();\n\n    const MAX_PAYMENT_METHOD_SELECTION = 3;\n\n    useOnClickOutside(deleted_autocomplete_ref, () => {\n        setShowList(false);\n        setHideList(true);\n        my_ads_store.setCurrentMethod({ key: null, is_deleted: false });\n    });\n\n    React.useEffect(() => {\n        const disposeAddPaymentMethodsList = reaction(\n            () => my_profile_store.payment_methods_list,\n            () =>\n                setPaymentMethodsList(\n                    my_profile_store.payment_methods_list.filter(({ value }) => !selected_methods.includes(value))\n                )\n        );\n\n        return disposeAddPaymentMethodsList;\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    React.useEffect(() => {\n        setPaymentMethodsList(\n            my_profile_store.payment_methods_list.filter(({ value }) => !selected_methods.includes(value))\n        );\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [hide_list, show_list, selected_methods]);\n\n    const onClickDeletePaymentMethodItem = value => {\n        if (value) {\n            my_ads_store.payment_method_names = my_ads_store.payment_method_names.filter(\n                payment_method_id => payment_method_id !== value\n            );\n            setSelectedMethods(selected_methods.filter(i => i !== value));\n            setPaymentMethodsList([\n                ...payment_methods_list,\n                {\n                    value,\n                    text: my_profile_store.getPaymentMethodDisplayName(value),\n                },\n            ]);\n            if (typeof touched === 'function') touched(true);\n        }\n    };\n\n    const onEditPaymentMethodItem = (value, index) => {\n        if (value) {\n            if (close_icon && selected_methods.length > 1) {\n                setCloseIcon(false);\n                my_ads_store.setCurrentMethod({ ...my_ads_store.current_method, is_deleted: true });\n            } else if (close_icon && selected_methods.length === 1) {\n                onClickDeletePaymentMethodItem(selected_methods[0]);\n                my_ads_store.setCurrentMethod({ ...my_ads_store.current_method, key: null, is_deleted: false });\n                setCloseIcon(false);\n            } else {\n                const edited_methods = [...selected_methods];\n                edited_methods[index] = value;\n                my_ads_store.payment_method_names[index] = value;\n                setSelectedMethods(edited_methods);\n                setPaymentMethodsList([\n                    ...payment_methods_list.filter(payment_method => payment_method.value !== value),\n                    selected_edit_method,\n                ]);\n                if (typeof touched === 'function') touched(true);\n            }\n        }\n    };\n\n    const onClickPaymentMethodItem = value => {\n        if (value && !my_ads_store.payment_method_names.includes(value)) {\n            if (my_ads_store.current_method.is_deleted) {\n                onEditPaymentMethodItem(value, my_ads_store.current_method.key);\n                my_ads_store.setCurrentMethod({ ...my_ads_store.current_method, key: null, is_deleted: false });\n                setShowList(false);\n                setHideList(true);\n            } else if (my_ads_store.payment_method_names.length < MAX_PAYMENT_METHOD_SELECTION) {\n                setSelectedMethods([...selected_methods, value]);\n                my_ads_store.payment_method_names.push(value);\n                setPaymentMethodsList(payment_methods_list.filter(payment_method => payment_method.value !== value));\n            }\n            if (typeof touched === 'function') touched(true);\n        }\n    };\n\n    const onClickIcon = (payment_method, key, setFieldValue) => {\n        if (close_icon) {\n            onEditPaymentMethodItem(payment_method, key);\n            setShowList(true);\n            setFieldValue('payment_method', '');\n        } else if (!close_icon && !my_ads_store.current_method.is_deleted) {\n            onClickDeletePaymentMethodItem(payment_method);\n        }\n    };\n\n    if (selected_methods?.length > 0) {\n        return (\n            <div className='buy-ad-payment-methods-list__container'>\n                {selected_methods.map((payment_method, key) => {\n                    const method = my_profile_store.getPaymentMethodDisplayName(payment_method);\n\n                    return (\n                        <Formik key={key} enableReinitialize initialValues={{ payment_method: method }}>\n                            {({ setFieldValue }) => (\n                                <Field name='payment_method'>\n                                    {({ field }) =>\n                                        my_ads_store.current_method.key === key &&\n                                        my_ads_store.current_method.is_deleted ? (\n                                            <div className='my-ads--border' ref={deleted_autocomplete_ref}>\n                                                <Autocomplete\n                                                    {...field}\n                                                    autoComplete='off' // prevent chrome autocomplete\n                                                    className='buy-ad-payment-methods-list__input'\n                                                    data-lpignore='true'\n                                                    hide_list={hide_list}\n                                                    is_alignment_top={is_alignment_top}\n                                                    leading_icon={<Icon icon='IcAddOutline' size={14} />}\n                                                    list_items={payment_methods_list}\n                                                    list_portal_id={list_portal_id ?? 'deriv_app'}\n                                                    onBlur={e => {\n                                                        e.preventDefault();\n                                                        setFieldValue('payment_method', '');\n                                                    }}\n                                                    onItemSelection={({ value }) => {\n                                                        setTimeout(onClickPaymentMethodItem(value), 0);\n                                                    }}\n                                                    placeholder={localize('Add')}\n                                                    required\n                                                    show_list={show_list}\n                                                    trailing_icon={\n                                                        field.value ? (\n                                                            <Icon\n                                                                className='buy-ad-payment-methods-list__icon'\n                                                                color='secondary'\n                                                                icon='IcCloseCircle'\n                                                                onClick={() => {\n                                                                    setFieldValue('payment_method', '');\n                                                                }}\n                                                            />\n                                                        ) : (\n                                                            <></>\n                                                        )\n                                                    }\n                                                    type='text'\n                                                />\n                                            </div>\n                                        ) : (\n                                            <div>\n                                                <Autocomplete\n                                                    {...field}\n                                                    autoComplete='off' // prevent chrome autocomplete\n                                                    className='buy-ad-payment-methods-list__input'\n                                                    data-lpignore='true'\n                                                    hide_list={hide_list}\n                                                    is_alignment_top={is_alignment_top}\n                                                    leading_icon={<PaymentMethodIcon display_name={method} />}\n                                                    list_items={[method]}\n                                                    list_portal_id={list_portal_id ?? 'deriv_app'}\n                                                    onBlur={e => {\n                                                        e.preventDefault();\n                                                        setFieldValue('payment_method', method);\n                                                        setCloseIcon(false);\n                                                    }}\n                                                    onHideDropdownList={() => {\n                                                        setFieldValue('payment_method', method);\n                                                        setCloseIcon(false);\n                                                    }}\n                                                    onItemSelection={({ value }) => {\n                                                        onEditPaymentMethodItem(value, key);\n                                                    }}\n                                                    onFocus={e => {\n                                                        e.preventDefault();\n                                                        setCloseIcon(true);\n                                                        setHideList(false);\n                                                        setFieldValue('payment_method', method);\n                                                        if (!my_ads_store.current_method.is_deleted) {\n                                                            setSelectedEditMethod({\n                                                                value: payment_method,\n                                                                text: method,\n                                                            });\n                                                            my_ads_store.setCurrentMethod({\n                                                                ...my_ads_store.current_method,\n                                                                key,\n                                                            });\n                                                        }\n                                                    }}\n                                                    onShowDropdownList={() => {\n                                                        setCloseIcon(true);\n                                                    }}\n                                                    required\n                                                    trailing_icon={\n                                                        <Icon\n                                                            className='buy-ad-payment-methods-list__icon'\n                                                            color={\n                                                                close_icon && my_ads_store.current_method.key === key\n                                                                    ? 'secondary'\n                                                                    : 'black'\n                                                            }\n                                                            icon={\n                                                                close_icon && my_ads_store.current_method.key === key\n                                                                    ? 'IcCloseCircle'\n                                                                    : 'IcDelete'\n                                                            }\n                                                            onTouchStart={e => {\n                                                                e.preventDefault();\n                                                                if (!isDesktop)\n                                                                    onClickIcon(payment_method, key, setFieldValue);\n                                                            }}\n                                                            onMouseDown={() => {\n                                                                if (isDesktop && my_ads_store.show_ad_form)\n                                                                    onClickIcon(payment_method, key, setFieldValue);\n                                                            }}\n                                                            onClick={() => {\n                                                                if (isDesktop && !my_ads_store.show_ad_form) {\n                                                                    onClickIcon(payment_method, key, setFieldValue);\n                                                                }\n                                                            }}\n                                                        />\n                                                    }\n                                                    type='text'\n                                                />\n                                            </div>\n                                        )\n                                    }\n                                </Field>\n                            )}\n                        </Formik>\n                    );\n                })}\n                {my_ads_store.payment_method_names.length < MAX_PAYMENT_METHOD_SELECTION &&\n                    payment_methods_list.length > 0 &&\n                    !my_ads_store.current_method.is_deleted && (\n                        <Formik enableReinitialize initialValues={{ payment_method: '' }}>\n                            {({ setFieldValue }) => (\n                                <Field name='payment_method'>\n                                    {({ field }) => (\n                                        <div className='my-ads--border'>\n                                            <Autocomplete\n                                                {...field}\n                                                autoComplete='off' // prevent chrome autocomplete\n                                                className='buy-ad-payment-methods-list__input'\n                                                data-lpignore='true'\n                                                is_alignment_top={is_alignment_top}\n                                                leading_icon={<Icon icon='IcAddOutline' size={14} />}\n                                                list_items={payment_methods_list}\n                                                list_portal_id={list_portal_id ?? 'deriv_app'}\n                                                onItemSelection={({ value }) =>\n                                                    setTimeout(() => onClickPaymentMethodItem(value), 0)\n                                                }\n                                                onBlur={e => {\n                                                    e.preventDefault();\n                                                    setFieldValue('payment_method', '');\n                                                }}\n                                                placeholder={localize('Add')}\n                                                required\n                                                trailing_icon={<></>}\n                                                type='text'\n                                            />\n                                        </div>\n                                    )}\n                                </Field>\n                            )}\n                        </Formik>\n                    )}\n                {should_show_hint &&\n                    !selected_methods.includes('other') &&\n                    selected_methods.length < MAX_PAYMENT_METHOD_SELECTION && (\n                        <Localize\n                            i18n_default_text='<0>Don’t see your payment method?</0> <1>Add new.</1>'\n                            components={[\n                                <Text key={0} color='less-prominent' size='xxs' />,\n                                <Text\n                                    key={1}\n                                    className='link'\n                                    size='xxs'\n                                    onClick={() => onClickPaymentMethodItem('other')}\n                                />,\n                            ]}\n                        />\n                    )}\n            </div>\n        );\n    }\n\n    return (\n        <div className='buy-ad-payment-methods-list__container'>\n            <Formik enableReinitialize initialValues={{ payment_method: '' }}>\n                {({ setFieldValue }) => (\n                    <Field name='payment_method'>\n                        {({ field }) => (\n                            <div className='my-ads--border'>\n                                <Autocomplete\n                                    {...field}\n                                    autoComplete='off' // prevent chrome autocomplete\n                                    className='buy-ad-payment-methods-list__input'\n                                    data-lpignore='true'\n                                    is_alignment_top={is_alignment_top}\n                                    leading_icon={<Icon icon='IcAddOutline' size={14} />}\n                                    list_items={payment_methods_list}\n                                    list_portal_id={list_portal_id ?? 'deriv_app'}\n                                    onItemSelection={({ text, value }) => {\n                                        setFieldValue('payment_method', value ? text : '');\n                                        setTimeout(() => onClickPaymentMethodItem(value), 0);\n                                    }}\n                                    placeholder={localize('Add')}\n                                    required\n                                    trailing_icon={<></>}\n                                    type='text'\n                                />\n                            </div>\n                        )}\n                    </Field>\n                )}\n            </Formik>\n            {should_show_hint && (\n                <Localize\n                    i18n_default_text='<0>Don’t see your payment method?</0> <1>Add new.</1>'\n                    components={[\n                        <Text key={0} color='less-prominent' size='xxs' />,\n                        <Text key={1} className='link' size='xxs' onClick={() => onClickPaymentMethodItem('other')} />,\n                    ]}\n                />\n            )}\n        </div>\n    );\n};\n\nBuyAdPaymentMethodsList.propTypes = {\n    selected_methods: PropTypes.array,\n    setSelectedMethods: PropTypes.func,\n    touched: PropTypes.func,\n};\n\nexport default observer(BuyAdPaymentMethodsList);\n","import React from 'react';\nimport { Text } from '@deriv/components';\nimport { useDevice } from '@deriv-com/ui';\n\ntype TCopyAdvertFormTrailingIcon = { label: string };\n\nconst CopyAdvertFormTrailingIcon = ({ label }: TCopyAdvertFormTrailingIcon) => {\n    const { isDesktop } = useDevice();\n\n    return (\n        <Text color={isDesktop ? 'less-prominent' : 'prominent'} size={isDesktop ? 'xxs' : 's'}>\n            {label}\n        </Text>\n    );\n};\n\nexport default CopyAdvertFormTrailingIcon;\n","import React from 'react';\nimport { Formik, Field, FieldProps, Form } from 'formik';\nimport { Button, InlineMessage, Input, Text, ThemedScrollbars } from '@deriv/components';\nimport { useP2PSettings } from '@deriv/hooks';\nimport { observer, useStore } from '@deriv/stores';\nimport { useDevice } from '@deriv-com/ui';\nimport FloatingRate from 'Components/floating-rate';\nimport { Localize, localize } from 'Components/i18next';\nimport { useModalManagerContext } from 'Components/modal-manager/modal-manager-context';\nimport { buy_sell } from 'Constants/buy-sell';\nimport { ad_type } from 'Constants/floating-rate';\nimport OrderTimeSelection from 'Pages/my-ads/order-time-selection';\nimport { useStores } from 'Stores';\nimport { TAdvertProps, TCountryListProps } from 'Types';\nimport { getInlineTextSize } from 'Utils/responsive';\nimport CopyAdvertFormTrailingIcon from './copy-advert-from-trailing-icon';\n\ntype TCopyAdvertFormProps = {\n    advert: TAdvertProps;\n    country_list: TCountryListProps;\n    onCancel: () => void;\n};\n\nconst CopyAdvertForm = ({ advert, country_list, onCancel }: TCopyAdvertFormProps) => {\n    const { showModal } = useModalManagerContext();\n    const {\n        client: { currency, local_currency_config },\n    } = useStore();\n\n    const { isDesktop, isMobile } = useDevice();\n    const local_currency = local_currency_config.currency;\n    const { general_store, my_ads_store, my_profile_store } = useStores();\n    const {\n        contact_info,\n        description,\n        amount_display,\n        eligible_countries,\n        min_completion_rate,\n        min_join_days,\n        order_expiry_period,\n        payment_method_details,\n        payment_method_names,\n        rate_display,\n        rate_type: ad_rate_type,\n        type,\n    } = advert;\n    const {\n        p2p_settings: { adverts_archive_period, float_rate_offset_limit_string, rate_type },\n    } = useP2PSettings();\n    const onClickCancel = values => {\n        my_ads_store.setAdFormValues(values);\n        general_store.showModal({\n            key: 'AdCancelModal',\n            props: {\n                confirm_label: localize('Go back'),\n                message: localize(\"If you choose to cancel, the details you've entered will be lost.\"),\n                onConfirm: () => {\n                    my_ads_store.setAdFormValues(null);\n                    onCancel();\n                },\n                title: localize('Cancel ad creation?'),\n            },\n        });\n    };\n    const onSubmit = (values, { setSubmitting }) => {\n        my_ads_store.setAdFormValues(values);\n        my_ads_store.handleSubmit(values, { setSubmitting }, true, adverts_archive_period);\n    };\n\n    const getInitialAdRate = () => {\n        if (rate_type !== ad_rate_type) {\n            if (rate_type === ad_type.FLOAT) return type === buy_sell.BUY ? '-0.01' : '+0.01';\n\n            return '';\n        }\n        return rate_display;\n    };\n\n    const getEligibleCountriesDisplay = () => {\n        if (eligible_countries?.length === 1) {\n            return country_list[eligible_countries[0]]?.country_name;\n        } else if (eligible_countries?.length === Object.keys(country_list)?.length) {\n            return localize('All');\n        }\n\n        return eligible_countries?.length;\n    };\n\n    const has_counterparty_conditions = min_join_days > 0 || min_completion_rate > 0 || eligible_countries?.length > 0;\n\n    React.useEffect(() => {\n        if (type === buy_sell.SELL) {\n            if (payment_method_details) {\n                Object.entries(payment_method_details).map(payment_method_detail => {\n                    my_ads_store.payment_method_ids.push(payment_method_detail[0]);\n                });\n            }\n        } else {\n            my_profile_store.payment_methods_list?.map(({ text, value }) => {\n                if (payment_method_names.includes(text)) my_ads_store.payment_method_names.push(value);\n            });\n        }\n\n        my_ads_store.setMinJoinDays(min_join_days);\n        my_ads_store.setMinCompletionRate(min_completion_rate);\n\n        return () => {\n            my_ads_store.payment_method_names = [];\n            my_ads_store.payment_method_ids = [];\n            my_ads_store.setMinJoinDays(0);\n            my_ads_store.setMinCompletionRate(0);\n            my_ads_store.setP2pAdvertInformation({});\n        };\n    }, []);\n\n    React.useEffect(() => {\n        if (my_ads_store.error_code) {\n            showModal({\n                key: 'AdCreateEditErrorModal',\n                props: {\n                    onUpdateAd: () => {\n                        my_ads_store.setApiErrorCode(null);\n                    },\n                },\n            });\n        }\n    }, [my_ads_store.error_code]);\n\n    return (\n        <div className='copy-advert-form'>\n            <Formik\n                initialValues={\n                    my_ads_store.ad_form_values ?? {\n                        contact_info,\n                        default_advert_description: description,\n                        float_rate_offset_limit: float_rate_offset_limit_string,\n                        eligible_countries,\n                        max_transaction: '',\n                        min_transaction: '',\n                        min_completion_rate,\n                        min_join_days,\n                        offer_amount: amount_display,\n                        order_completion_time: order_expiry_period > 3600 ? '3600' : order_expiry_period.toString(),\n                        payment_method_names,\n                        rate_type_string: rate_type,\n                        rate_type: getInitialAdRate(),\n                        type,\n                    }\n                }\n                onSubmit={onSubmit}\n                validate={my_ads_store.validateCreateAdForm}\n                validateOnMount\n            >\n                {({ errors, handleChange, isSubmitting, isValid, touched, values }) => {\n                    return (\n                        <Form noValidate>\n                            <ThemedScrollbars\n                                className='copy-advert-form__scrollbar'\n                                height={isDesktop ? 'calc(100vh - 15rem)' : '100%'}\n                            >\n                                <InlineMessage\n                                    message={\n                                        <Localize i18n_default_text='Review your settings and create a new ad. Every ad must have unique limits and rates.' />\n                                    }\n                                    size={getInlineTextSize('sm', 'xs', isMobile)}\n                                    type='information'\n                                />\n                                <Text color='less-prominent' size='xxs'>\n                                    <Localize i18n_default_text='Ad type' />\n                                </Text>\n                                <Text as='div' color='prominent' className='copy-advert-form__field' size='xs'>\n                                    {type === buy_sell.BUY ? localize('Buy') : localize('Sell')}\n                                </Text>\n                                <Field name='offer_amount'>\n                                    {({ field }: FieldProps) => (\n                                        <Input\n                                            {...field}\n                                            data-testid='offer_amount'\n                                            data-lpignore='true'\n                                            type='text'\n                                            error={errors.offer_amount}\n                                            label={localize('Total amount')}\n                                            trailing_icon={<CopyAdvertFormTrailingIcon label={currency} />}\n                                            is_relative_hint\n                                        />\n                                    )}\n                                </Field>\n                                <Field name='rate_type'>\n                                    {({ field }: FieldProps) =>\n                                        rate_type === ad_type.FLOAT ? (\n                                            <FloatingRate\n                                                className='copy-advert-form__floating-rate'\n                                                data_testid='float_rate_type'\n                                                error_messages={errors.rate_type}\n                                                fiat_currency={currency}\n                                                local_currency={local_currency}\n                                                onChange={handleChange}\n                                                offset={{\n                                                    upper_limit: float_rate_offset_limit_string,\n                                                    lower_limit: float_rate_offset_limit_string * -1,\n                                                }}\n                                                required\n                                                change_handler={e => {\n                                                    my_ads_store.restrictDecimalPlace(e, handleChange);\n                                                }}\n                                                {...field}\n                                            />\n                                        ) : (\n                                            <Input\n                                                {...field}\n                                                data-testid='fixed_rate_type'\n                                                data-lpignore='true'\n                                                type='text'\n                                                error={touched.rate_type && errors.rate_type}\n                                                label={localize('Fixed Rate')}\n                                                trailing_icon={<CopyAdvertFormTrailingIcon label={local_currency} />}\n                                                required\n                                            />\n                                        )\n                                    }\n                                </Field>\n                                <Field name='min_transaction'>\n                                    {({ field }: FieldProps) => (\n                                        <Input\n                                            {...field}\n                                            data-lpignore='true'\n                                            data-testid='min_transaction'\n                                            label={localize('Min order')}\n                                            type='text'\n                                            error={touched.min_transaction && errors.min_transaction}\n                                            trailing_icon={<CopyAdvertFormTrailingIcon label={currency} />}\n                                            required\n                                        />\n                                    )}\n                                </Field>\n                                <Field name='max_transaction'>\n                                    {({ field }: FieldProps) => (\n                                        <Input\n                                            {...field}\n                                            data-testid='max_transaction'\n                                            data-lpignore='true'\n                                            label={localize('Max order')}\n                                            type='text'\n                                            error={touched.max_transaction && errors.max_transaction}\n                                            trailing_icon={<CopyAdvertFormTrailingIcon label={currency} />}\n                                            required\n                                        />\n                                    )}\n                                </Field>\n                                {type === buy_sell.SELL && (\n                                    <>\n                                        <Text color='less-prominent' size='xxs'>\n                                            <Localize i18n_default_text='Contact details' />\n                                        </Text>\n                                        <Field name='contact_info'>\n                                            {({ field }: FieldProps) => (\n                                                <Text\n                                                    {...field}\n                                                    as='div'\n                                                    color='prominent'\n                                                    className='copy-advert-form__field'\n                                                    size='xs'\n                                                >\n                                                    {field.value}\n                                                </Text>\n                                            )}\n                                        </Field>\n                                    </>\n                                )}\n                                <Text color='less-prominent' size='xxs'>\n                                    <Localize i18n_default_text='Instructions' />\n                                </Text>\n                                <Field name='default_advert_description'>\n                                    {({ field }: FieldProps) => (\n                                        <Text\n                                            {...field}\n                                            as='div'\n                                            color='prominent'\n                                            className='copy-advert-form__field'\n                                            size='xs'\n                                        >\n                                            {field.value}\n                                        </Text>\n                                    )}\n                                </Field>\n                                <Text color='less-prominent' size='xxs'>\n                                    <Localize i18n_default_text='Order must be completed in' />\n                                </Text>\n                                <Field name='order_completion_time'>\n                                    {({ field }: FieldProps) => (\n                                        <OrderTimeSelection\n                                            {...field}\n                                            classNameDisplay='copy-advert-form__dropdown-display'\n                                            classNameIcon='copy-advert-form__dropdown-icon'\n                                            is_label_hidden\n                                        />\n                                    )}\n                                </Field>\n                                <Text color='less-prominent' size='xxs'>\n                                    <Localize i18n_default_text='Payment methods' />\n                                </Text>\n                                <Text as='div' color='prominent' className='copy-advert-form__field' size='xs'>\n                                    {payment_method_names.join(', ')}\n                                </Text>\n                                {has_counterparty_conditions && (\n                                    <>\n                                        <Text color='less-prominent' size='xxs'>\n                                            <Localize i18n_default_text='Counterparty conditions' />\n                                        </Text>\n                                        <Text as='ul' className='copy-advert-form__list' color='prominent' size='xs'>\n                                            {min_join_days > 0 && (\n                                                <li>\n                                                    <Localize\n                                                        i18n_default_text='Joined more than <0>{{min_join_days}} days</0>'\n                                                        components={[<strong key={0} />]}\n                                                        values={{ min_join_days }}\n                                                    />\n                                                </li>\n                                            )}\n                                            {min_completion_rate > 0 && (\n                                                <li>\n                                                    <Localize\n                                                        i18n_default_text='Completion rate of more than <0>{{min_completion_rate}}%</0>'\n                                                        components={[<strong key={0} />]}\n                                                        values={{ min_completion_rate }}\n                                                    />\n                                                </li>\n                                            )}\n                                            {eligible_countries?.length > 0 && (\n                                                <li>\n                                                    <Localize\n                                                        i18n_default_text='Preferred countries <0>({{eligible_countries_display}})</0>'\n                                                        components={[<strong key={0} />]}\n                                                        values={{\n                                                            eligible_countries_display: getEligibleCountriesDisplay(),\n                                                        }}\n                                                    />\n                                                </li>\n                                            )}\n                                        </Text>\n                                    </>\n                                )}\n                            </ThemedScrollbars>\n                            <div className='copy-advert-form__container'>\n                                <Button type='button' has_effect onClick={() => onClickCancel(values)} secondary large>\n                                    <Localize i18n_default_text='Cancel' />\n                                </Button>\n                                <Button has_effect is_disabled={isSubmitting || !isValid} primary large>\n                                    <Localize i18n_default_text='Create ad' />\n                                </Button>\n                            </div>\n                        </Form>\n                    );\n                }}\n            </Formik>\n        </div>\n    );\n};\n\nexport default observer(CopyAdvertForm);\n","import CopyAdvertForm from './copy-advert-form';\nimport './copy-advert-form.scss';\n\nexport default CopyAdvertForm;\n","import React from 'react';\nimport { Button } from '@deriv/components';\nimport { Localize } from 'Components/i18next';\n\ntype TAdFormControllerProps = {\n    action?: string;\n    getCurrentStep: () => number;\n    getTotalSteps: () => number;\n    goToNextStep: () => void;\n    goToPreviousStep: () => void;\n    is_next_btn_disabled: boolean;\n    is_save_btn_disabled: boolean;\n    onCancel?: () => void;\n};\n\nconst AdFormController = ({\n    action,\n    getCurrentStep,\n    getTotalSteps,\n    goToNextStep,\n    goToPreviousStep,\n    is_next_btn_disabled,\n    is_save_btn_disabled,\n    onCancel,\n}: TAdFormControllerProps) => {\n    const post_btn_text =\n        action === 'edit' ? <Localize i18n_default_text='Save changes' /> : <Localize i18n_default_text='Post ad' />;\n\n    return (\n        <div className='ad-form-controller'>\n            {getCurrentStep() === 1 && onCancel && (\n                <Button secondary large type='button' onClick={onCancel}>\n                    <Localize i18n_default_text='Cancel' />\n                </Button>\n            )}\n            {getCurrentStep() > 1 && (\n                <Button\n                    secondary\n                    large\n                    type='button'\n                    onClick={() => {\n                        goToPreviousStep();\n                    }}\n                >\n                    <Localize i18n_default_text='Previous' />\n                </Button>\n            )}\n\n            {getCurrentStep() < getTotalSteps() ? (\n                <Button\n                    primary\n                    large\n                    is_disabled={is_next_btn_disabled}\n                    onClick={() => {\n                        goToNextStep();\n                    }}\n                >\n                    <Localize i18n_default_text='Next' />\n                </Button>\n            ) : (\n                <Button disabled={is_save_btn_disabled} primary large>\n                    {post_btn_text}\n                </Button>\n            )}\n        </div>\n    );\n};\n\nexport default AdFormController;\n","import AdFormController from './ad-form-controller';\nimport './ad-form-controller.scss';\n\nexport default AdFormController;\n","import React from 'react';\nimport { Field, FormikHelpers, FormikValues, useFormikContext } from 'formik';\nimport { Icon, Input } from '@deriv/components';\nimport { localize } from 'Components/i18next';\nimport { useModalManagerContext } from 'Components/modal-manager/modal-manager-context';\nimport { TCountryListProps } from 'Types';\n\ntype TFormikContext = {\n    setFieldValue?: FormikHelpers<FormikValues>['setFieldValue'];\n    values: FormikValues;\n};\ntype TPreferredCountriesSelectorProps = {\n    country_list: TCountryListProps;\n};\n\nconst PreferredCountriesSelector = ({ country_list }: TPreferredCountriesSelectorProps) => {\n    const { setFieldValue, values }: TFormikContext = useFormikContext<TFormikContext>();\n    const { showModal } = useModalManagerContext();\n    const countries = Object.keys(country_list).map(key => ({\n        text: country_list[key]?.country_name,\n        value: key,\n    }));\n\n    const getSelectedCountriesText = () => {\n        const eligible_countries = values.eligible_countries;\n        if (eligible_countries?.length === countries.length) {\n            return '';\n        }\n\n        return eligible_countries?.map((value: string) => country_list[value]?.country_name).join(', ');\n    };\n\n    const onClick = () => {\n        showModal({\n            key: 'PreferredCountriesModal',\n            props: {\n                country_list: countries,\n                eligible_countries: values.eligible_countries,\n                onApply: value => {\n                    setFieldValue('eligible_countries', [...value]);\n                    getSelectedCountriesText();\n                },\n            },\n        });\n    };\n\n    React.useEffect(() => {\n        if (!values.eligible_countries) setFieldValue('eligible_countries', Object.keys(country_list));\n    }, [country_list]);\n\n    return (\n        <Field>\n            {({ field }: FormikValues) => (\n                <Input\n                    {...field}\n                    className='preferred-countries-selector'\n                    field_className='preferred-countries-selector__input'\n                    onClick={onClick}\n                    placeholder={localize('All countries')}\n                    readOnly\n                    trailing_icon={\n                        <Icon className='preferred-countries-selector__icon' icon='IcChevronRight' onClick={onClick} />\n                    }\n                    type='text'\n                    value={getSelectedCountriesText()}\n                />\n            )}\n        </Field>\n    );\n};\n\nexport default PreferredCountriesSelector;\n","import PreferredCountriesSelector from './preferred-countries-selector';\nimport './preferred-countries-selector.scss';\n\nexport default PreferredCountriesSelector;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { formatMoney } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { useP2PExchangeRate, useP2PSettings } from '@deriv/hooks';\nimport { Text } from '@deriv/components';\nimport { buy_sell } from 'Constants/buy-sell';\nimport { Localize } from 'Components/i18next';\nimport { ad_type } from 'Constants/floating-rate';\nimport { removeTrailingZeros, roundOffDecimal, percentOf } from 'Utils/format-value';\nimport './create-ad-summary.scss';\n\nconst CreateAdSummary = ({ offer_amount, price_rate, type }) => {\n    const {\n        client: { currency, local_currency_config },\n    } = useStore();\n    const local_currency = local_currency_config.currency;\n    const exchange_rate = useP2PExchangeRate(local_currency);\n    const {\n        p2p_settings: { override_exchange_rate, rate_type },\n    } = useP2PSettings();\n\n    const market_rate = override_exchange_rate ? Number(override_exchange_rate) : exchange_rate;\n\n    const market_feed = rate_type === ad_type.FLOAT ? market_rate : null;\n    const display_offer_amount = offer_amount ? formatMoney(currency, offer_amount, true) : '';\n\n    let display_price_rate = '';\n    let display_total = '';\n\n    if (price_rate) {\n        display_price_rate = market_feed ? roundOffDecimal(percentOf(market_feed, price_rate), 6) : price_rate;\n    }\n\n    if (offer_amount && price_rate) {\n        display_total = market_feed\n            ? formatMoney(local_currency, offer_amount * display_price_rate, true)\n            : formatMoney(local_currency, offer_amount * price_rate, true);\n    }\n\n    if (offer_amount) {\n        const components = [\n            <Text key={0} className='create-ad-summary' weight='bold' size='xs' color='status-info-blue' />,\n            <Text key={1} className='create-ad-summary' size='xs' color='status-info-blue' />,\n        ];\n        const values = { target_amount: display_offer_amount, target_currency: currency };\n        if (price_rate) {\n            Object.assign(values, {\n                local_amount: display_total,\n                local_currency,\n                price_rate: removeTrailingZeros(formatMoney(local_currency, display_price_rate, true, 6)),\n            });\n\n            if (type === buy_sell.BUY) {\n                return (\n                    <Text className='create-ad-summary' size='xs' color='less-prominent'>\n                        <Localize\n                            i18n_default_text=\"You're creating an ad to buy <0>{{ target_amount }} {{ target_currency }}</0> for <0>{{ local_amount }} {{ local_currency }}</0> <1>({{ price_rate }} {{local_currency}}/{{ target_currency }})</1>\"\n                            components={components}\n                            values={values}\n                        />\n                    </Text>\n                );\n            }\n\n            return (\n                <Text className='create-ad-summary' size='xs' color='less-prominent'>\n                    <Localize\n                        i18n_default_text=\"You're creating an ad to sell <0>{{ target_amount }} {{ target_currency }}</0> for <0>{{ local_amount }} {{ local_currency }}</0> <1>({{ price_rate }} {{local_currency}}/{{ target_currency }})</1>\"\n                        components={components}\n                        values={values}\n                    />\n                </Text>\n            );\n        }\n\n        if (type === buy_sell.BUY) {\n            return (\n                <Text className='create-ad-summary' size='xs' color='less-prominent'>\n                    <Localize\n                        i18n_default_text=\"You're creating an ad to buy <0>{{ target_amount }} {{ target_currency }}</0>...\"\n                        components={components}\n                        values={values}\n                    />\n                </Text>\n            );\n        }\n\n        return (\n            <Text className='create-ad-summary' size='xs' color='less-prominent'>\n                <Localize\n                    i18n_default_text=\"You're creating an ad to sell <0>{{ target_amount }} {{ target_currency }}</0>...\"\n                    components={components}\n                    values={values}\n                />\n            </Text>\n        );\n    }\n\n    return type === buy_sell.BUY ? (\n        <Text className='create-ad-summary' size='xs' color='less-prominent'>\n            <Localize i18n_default_text=\"You're creating an ad to buy...\" />\n        </Text>\n    ) : (\n        <Text className='create-ad-summary' size='xs' color='less-prominent'>\n            <Localize i18n_default_text=\"You're creating an ad to sell...\" />\n        </Text>\n    );\n};\n\nCreateAdSummary.propTypes = {\n    offer_amount: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    price_rate: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    type: PropTypes.string,\n};\n\nexport default observer(CreateAdSummary);\n","import React from 'react';\nimport { FormikValues, useFormikContext } from 'formik';\nimport { Icon, Text } from '@deriv/components';\nimport { observer } from '@deriv/stores';\nimport BlockSelector from 'Components/block-selector';\nimport { localize, Localize } from 'Components/i18next';\nimport { useModalManagerContext } from 'Components/modal-manager/modal-manager-context';\nimport AdFormController from 'Pages/my-ads/ad-form-controller';\nimport PreferredCountriesSelector from 'Pages/my-ads/preferred-countries-selector';\nimport { useStores } from 'Stores';\nimport { TCountryListProps } from 'Types';\nimport CreateAdSummary from '../create-ad-summary.jsx';\n\ntype TAdConditionsSection = {\n    action: string;\n    country_list: TCountryListProps;\n    goToFirstStep: () => void;\n    is_form_dirty: boolean;\n};\nconst AdConditionsSection = ({\n    action,\n    country_list,\n    is_form_dirty,\n    goToFirstStep,\n    ...props\n}: TAdConditionsSection) => {\n    const [has_min_join_days_changed, setHasMinJoinDaysChange] = React.useState(false);\n    const [has_min_completion_rate_changed, setHasMinCompletionRateChanged] = React.useState(false);\n    const { showModal } = useModalManagerContext();\n    const { dirty, errors, values } = useFormikContext<FormikValues>();\n    const { my_ads_store } = useStores();\n    const { min_completion_rate = 0, min_join_days = 0 } = my_ads_store.p2p_advert_information;\n    const joining_days = [\n        { name: '15 days', value: 15 },\n        { name: '30 days', value: 30 },\n        { name: '60 days', value: 60 },\n    ];\n    const completion_rates = [\n        { name: '50%', value: 50 },\n        { name: '70%', value: 70 },\n        { name: '90%', value: 90 },\n    ];\n    const setJoiningDays = (value: number) => {\n        my_ads_store.setMinJoinDays(value);\n        setHasMinJoinDaysChange(value !== min_join_days);\n    };\n    const setMinCompletionRate = (value: number) => {\n        my_ads_store.setMinCompletionRate(value);\n        setHasMinCompletionRateChanged(value !== min_completion_rate);\n    };\n\n    React.useEffect(() => {\n        if (my_ads_store.error_code) {\n            showModal({\n                key: 'AdCreateEditErrorModal',\n                props: {\n                    ad_type: action,\n                    onUpdateAd: () => {\n                        goToFirstStep();\n                        my_ads_store.setApiErrorCode(null);\n                    },\n                },\n            });\n        }\n    }, [my_ads_store.error_code]);\n\n    return (\n        <>\n            <CreateAdSummary\n                offer_amount={errors.offer_amount ? '' : values.offer_amount}\n                price_rate={values.rate_type}\n                type={values.type}\n            />\n            <Text as='div' className='ad-conditions-section__label' color='prominent' size='xs'>\n                <Localize i18n_default_text='Counterparty conditions (optional)' />\n            </Text>\n            <Text as='div' color='less-prominent' size='xs'>\n                <Localize i18n_default_text='Only users who match these criteria will see your ad.' />\n            </Text>\n            <BlockSelector\n                label={localize('Joined more than')}\n                onSelect={setJoiningDays}\n                options={joining_days}\n                tooltip_info={\n                    <Localize i18n_default_text=\"We'll only show your ad to people who've been using Deriv P2P for longer than the time you choose.\" />\n                }\n                value={min_join_days}\n            />\n            <BlockSelector\n                label={localize('Completion rate of more than')}\n                onSelect={setMinCompletionRate}\n                options={completion_rates}\n                tooltip_info={\n                    <>\n                        <Text size='xs'>\n                            <Localize i18n_default_text=\"We'll only show your ad to people with a completion rate higher than your selection.\" />\n                        </Text>\n                        <Text as='div' className='ad-conditions-section__rate' size='xs'>\n                            <Localize i18n_default_text='The completion rate is the percentage of successful orders.' />\n                        </Text>\n                    </>\n                }\n                value={min_completion_rate}\n            />\n            <div className='ad-conditions-section__countries-label'>\n                <Text color='less-prominent' size='xs' line_height='xl'>\n                    <Localize i18n_default_text='Preferred countries' />\n                </Text>\n                <Icon\n                    color='disabled'\n                    icon='IcInfoOutline'\n                    onClick={() => {\n                        showModal({\n                            key: 'ErrorModal',\n                            props: {\n                                error_message: localize(\n                                    'We’ll only show your ad to people in the countries you choose.'\n                                ),\n                                error_modal_title: localize('Preferred countries'),\n                                has_close_icon: false,\n                            },\n                        });\n                    }}\n                />\n            </div>\n            <PreferredCountriesSelector country_list={country_list} />\n            <AdFormController\n                {...props}\n                action={action}\n                is_save_btn_disabled={\n                    !dirty &&\n                    !is_form_dirty &&\n                    !has_min_join_days_changed &&\n                    !has_min_completion_rate_changed &&\n                    my_ads_store.required_ad_type === my_ads_store.selected_ad_type\n                }\n            />\n        </>\n    );\n};\n\nexport default observer(AdConditionsSection);\n","import AdConditionsSection from './ad-conditions-section';\nimport './ad-conditions-section.scss';\n\nexport default AdConditionsSection;\n","import * as React from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { useP2PAdvertiserPaymentMethods } from '@deriv/hooks';\nimport { useStores } from 'Stores';\nimport PaymentMethodCard from 'Components/payment-method-card';\nimport { localize } from 'Components/i18next';\nimport BuyAdPaymentMethodsList from 'Pages/my-ads/buy-ad-payment-methods-list.jsx';\nimport SellAdPaymentMethodsList from 'Pages/my-ads/sell-ad-payment-methods-list.jsx';\nimport { useModalManagerContext } from 'Components/modal-manager/modal-manager-context';\n\nconst CreateAdFormPaymentMethods = ({ is_sell_advert, onSelectPaymentMethods }) => {\n    const { showModal } = useModalManagerContext();\n    const { data: p2p_advertiser_payment_methods } = useP2PAdvertiserPaymentMethods();\n    const { my_ads_store } = useStores();\n    const [selected_buy_methods, setSelectedBuyMethods] = React.useState(my_ads_store.payment_method_names);\n    const [selected_sell_methods, setSelectedSellMethods] = React.useState(my_ads_store.payment_method_ids);\n\n    const onClickPaymentMethodCard = payment_method => {\n        if (!my_ads_store.payment_method_ids.includes(payment_method.id)) {\n            if (my_ads_store.payment_method_ids.length < 3) {\n                my_ads_store.payment_method_ids.push(payment_method.id);\n                setSelectedSellMethods([...selected_sell_methods, payment_method.id]);\n            }\n        } else {\n            my_ads_store.payment_method_ids = my_ads_store.payment_method_ids.filter(\n                payment_method_id => payment_method_id !== payment_method.id\n            );\n            setSelectedSellMethods(selected_sell_methods.filter(i => i !== payment_method.id));\n        }\n    };\n\n    React.useEffect(() => {\n        if (is_sell_advert) {\n            onSelectPaymentMethods(selected_sell_methods);\n        } else {\n            onSelectPaymentMethods(selected_buy_methods);\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [is_sell_advert, selected_buy_methods, selected_sell_methods]);\n\n    if (is_sell_advert) {\n        if (p2p_advertiser_payment_methods?.length) {\n            return (\n                <SellAdPaymentMethodsList\n                    selected_methods={selected_sell_methods}\n                    onClickAdd={() =>\n                        showModal({\n                            key: 'CreateAdAddPaymentMethodModal',\n                        })\n                    }\n                    onClickPaymentMethodCard={onClickPaymentMethodCard}\n                    p2p_advertiser_payment_methods={p2p_advertiser_payment_methods}\n                />\n            );\n        }\n\n        return (\n            <PaymentMethodCard\n                is_add\n                label={localize('Payment method')}\n                medium\n                onClickAdd={() =>\n                    showModal({\n                        key: 'CreateAdAddPaymentMethodModal',\n                    })\n                }\n            />\n        );\n    }\n\n    return (\n        <BuyAdPaymentMethodsList\n            is_alignment_top\n            selected_methods={selected_buy_methods}\n            setSelectedMethods={setSelectedBuyMethods}\n        />\n    );\n};\n\nexport default observer(CreateAdFormPaymentMethods);\n","import React from 'react';\nimport { Field, FormikValues, useFormikContext } from 'formik';\nimport { Text } from '@deriv/components';\nimport { observer } from '@deriv/stores';\nimport { Localize } from 'Components/i18next';\nimport { buy_sell } from 'Constants/buy-sell';\nimport AdFormController from 'Pages/my-ads/ad-form-controller';\nimport { useStores } from 'Stores';\nimport CreateAdFormPaymentMethods from '../create-ad-form-payment-methods.jsx';\nimport CreateAdSummary from '../create-ad-summary.jsx';\nimport OrderTimeSelection from '../order-time-selection';\n\ntype TAdPaymentDetailsSection = {\n    setIsFormDirty: React.Dispatch<React.SetStateAction<boolean>>;\n};\n\nconst AdPaymentDetailsSection = ({ setIsFormDirty, ...props }: TAdPaymentDetailsSection) => {\n    const { my_ads_store, my_profile_store } = useStores();\n    const { errors, isValid, values } = useFormikContext<FormikValues>();\n    const [selected_payment_methods, setSelectedPaymentMethods] = React.useState([]);\n    const [is_next_btn_disabled, setIsNextBtnDisabled] = React.useState(true);\n    const is_sell_advert = values.type === buy_sell.SELL;\n    const { payment_method_details, payment_method_names } = my_ads_store.p2p_advert_information;\n\n    React.useEffect(() => {\n        const payment_methods_changed = is_sell_advert\n            ? !(\n                  !!payment_method_details &&\n                  selected_payment_methods.every(pm => Object.keys(payment_method_details).includes(pm)) &&\n                  selected_payment_methods.length === Object.keys(payment_method_details).length\n              )\n            : !(\n                  !!payment_method_names &&\n                  selected_payment_methods?.every(pm => {\n                      const method = my_profile_store.getPaymentMethodDisplayName(pm);\n                      return payment_method_names.includes(method);\n                  }) &&\n                  selected_payment_methods.length === payment_method_names.length\n              );\n\n        setIsFormDirty(payment_methods_changed);\n        setIsNextBtnDisabled(!isValid || !selected_payment_methods?.length);\n    }, [selected_payment_methods]);\n\n    return (\n        <>\n            <CreateAdSummary\n                offer_amount={errors.offer_amount ? '' : values.offer_amount}\n                price_rate={values.rate_type}\n                type={values.type}\n            />\n            <Field name='order_completion_time'>{({ field }) => <OrderTimeSelection {...field} />}</Field>\n            <div className='ad-payment-details-section__label'>\n                <Text color='prominent' size='xs'>\n                    <Localize i18n_default_text='Payment methods' />\n                </Text>\n                <Text color='less-prominent' size='xs'>\n                    {is_sell_advert ? (\n                        <Localize i18n_default_text='You may tap and choose up to 3.' />\n                    ) : (\n                        <Localize i18n_default_text='You may choose up to 3.' />\n                    )}\n                </Text>\n            </div>\n            <CreateAdFormPaymentMethods\n                is_sell_advert={is_sell_advert}\n                onSelectPaymentMethods={setSelectedPaymentMethods}\n            />\n            <AdFormController {...props} is_next_btn_disabled={is_next_btn_disabled} />\n        </>\n    );\n};\n\nexport default observer(AdPaymentDetailsSection);\n","import AdPaymentDetailsSection from './ad-payment-details-section';\nimport './ad-payment-details-section.scss';\n\nexport default AdPaymentDetailsSection;\n","import React from 'react';\n\ntype TStep = { header: { title: string }; sub_step_count: number };\ntype TAdProgressBar = {\n    current_step: number;\n    steps: TStep[];\n};\n\nconst AdProgressBar = ({ current_step, steps }: TAdProgressBar) => {\n    const radius = 28;\n    const circumference = 2 * Math.PI * radius;\n    const percentage = ((current_step + 1) / steps.length) * 100;\n    const offset = ((100 - percentage) * circumference) / 100;\n\n    return (\n        <svg width={72} height={72}>\n            <g transform='rotate(-90 36 100)'>\n                <circle\n                    r={radius}\n                    cx={100}\n                    cy={100}\n                    fill='transparent'\n                    stroke='var(--text-disabled-1)'\n                    strokeWidth='0.5rem'\n                    strokeDasharray={circumference}\n                    strokeDashoffset='0'\n                />\n                <circle\n                    r={radius}\n                    cx={100}\n                    cy={100}\n                    fill='transparent'\n                    stroke='var(--text-red)'\n                    strokeWidth='0.5rem'\n                    strokeDasharray={circumference}\n                    strokeDashoffset={offset}\n                />\n            </g>\n            <text\n                x='50%'\n                y='50%'\n                dominantBaseline='central'\n                textAnchor='middle'\n                fontSize='var(--text-size-xs)'\n                fontWeight='var(--text-weight-bold)'\n                fill='var(--text-prominent)'\n            >\n                {current_step + 1} / {steps.length}\n            </text>\n        </svg>\n    );\n};\n\nexport default AdProgressBar;\n","import AdProgressBar from './ad-progress-bar';\n\nexport default AdProgressBar;\n","import React from 'react';\nimport { Text } from '@deriv/components';\nimport { useDevice } from '@deriv-com/ui';\n\ntype TAdTypeSectionTrailingIcon = { label: string };\n\nconst AdTypeSectionTrailingIcon = ({ label }: TAdTypeSectionTrailingIcon) => {\n    const { isDesktop } = useDevice();\n\n    return (\n        <Text color='less-prominent' size={isDesktop ? 'xxs' : 's'}>\n            {label}\n        </Text>\n    );\n};\n\nexport default AdTypeSectionTrailingIcon;\n","import React from 'react';\nimport { Field, FormikValues, useFormikContext } from 'formik';\nimport { Input, RadioGroup, Text } from '@deriv/components';\nimport { formatMoney } from '@deriv/shared';\nimport { useStore } from '@deriv/stores';\nimport FloatingRate from 'Components/floating-rate';\nimport { localize, Localize } from 'Components/i18next';\nimport { buy_sell } from 'Constants/buy-sell';\nimport { ad_type } from 'Constants/floating-rate';\nimport AdFormController from 'Pages/my-ads/ad-form-controller';\nimport { useStores } from 'Stores';\nimport AdTypeSectionTrailingIcon from './ad-type-section-trailing-icon';\n\ntype AdTypeSection = {\n    action?: string;\n    float_rate_offset_limit_string: string;\n    is_form_dirty: boolean;\n    rate_type: string;\n};\n\nconst AdTypeSection = ({\n    action = 'add',\n    float_rate_offset_limit_string,\n    is_form_dirty,\n    rate_type,\n    ...props\n}: AdTypeSection) => {\n    const {\n        client: { currency, local_currency_config },\n    } = useStore();\n    const local_currency = local_currency_config.currency;\n    const { buy_sell_store, general_store, my_ads_store } = useStores();\n    const { dirty, errors, handleChange, isValid, setFieldValue, setFieldTouched, touched, values } =\n        useFormikContext<FormikValues>();\n    const is_edit = action === 'edit';\n    const is_next_btn_disabled = is_edit ? !isValid : !dirty || !isValid;\n    const onChangeAdTypeHandler = (user_input: string) => {\n        if (rate_type === ad_type.FLOAT) {\n            if (user_input === buy_sell.SELL) {\n                setFieldValue('rate_type', '+0.01');\n            } else {\n                setFieldValue('rate_type', '-0.01');\n            }\n        }\n\n        setFieldValue('type', user_input);\n    };\n\n    const onCancel = () => {\n        if (is_edit) {\n            if (dirty || is_form_dirty) {\n                general_store.showModal({\n                    key: 'AdCancelModal',\n                    props: {\n                        confirm_label: localize(\"Don't cancel\"),\n                        message: localize('If you choose to cancel, the edited details will be lost.'),\n                        onConfirm: () => {\n                            my_ads_store.setShowEditAdForm(false);\n                        },\n                        title: 'Cancel your edits?',\n                    },\n                });\n            } else {\n                my_ads_store.setShowEditAdForm(false);\n            }\n        } else {\n            general_store.showModal({\n                key: 'AdCancelModal',\n                props: {\n                    confirm_label: localize(\"Don't cancel\"),\n                    message: localize(\"If you choose to cancel, the details you've entered will be lost.\"),\n                    onConfirm: () => {\n                        my_ads_store.setApiErrorMessage('');\n                        my_ads_store.setShowAdForm(false);\n                        buy_sell_store.setCreateSellAdFromNoAds(false);\n                    },\n                    title: 'Cancel ad creation?',\n                },\n            });\n        }\n    };\n\n    return (\n        <>\n            {!is_edit && (\n                <Field name='type'>\n                    {({ field }) => (\n                        <RadioGroup\n                            {...field}\n                            className='ad-type-section__radio-group'\n                            name='type'\n                            onToggle={event => onChangeAdTypeHandler(event.target.value)}\n                            selected={values.type}\n                            required\n                        >\n                            <RadioGroup.Item value={buy_sell.BUY} label={localize('Buy {{currency}}', { currency })} />\n                            <RadioGroup.Item\n                                value={buy_sell.SELL}\n                                label={localize('Sell {{currency}}', { currency })}\n                            />\n                        </RadioGroup>\n                    )}\n                </Field>\n            )}\n            <div className='ad-type-section__container'>\n                <Field name='offer_amount'>\n                    {({ field }) => (\n                        <Input\n                            {...field}\n                            data-testid='offer_amount'\n                            data-lpignore='true'\n                            type='text'\n                            error={touched.offer_amount && errors.offer_amount}\n                            label={localize('Total amount')}\n                            className='ad-type-section__field'\n                            trailing_icon={<AdTypeSectionTrailingIcon label={currency} />}\n                            onFocus={() => setFieldTouched('offer_amount', true)}\n                            onChange={e => {\n                                my_ads_store.restrictLength(e, handleChange);\n                            }}\n                            hint={\n                                values.type !== buy_sell.SELL || general_store.advertiser_info.balance_available == null\n                                    ? undefined\n                                    : localize('Your Deriv P2P balance is {{ dp2p_balance }}', {\n                                          dp2p_balance: `${formatMoney(\n                                              currency,\n                                              general_store.advertiser_info.balance_available,\n                                              true\n                                          )} ${currency}`,\n                                      })\n                            }\n                            is_relative_hint\n                            disabled={is_edit}\n                        />\n                    )}\n                </Field>\n                <Field name='rate_type'>\n                    {({ field }) =>\n                        rate_type === ad_type.FLOAT ? (\n                            <FloatingRate\n                                className='ad-type-section__field'\n                                data_testid='float_rate_type'\n                                error_messages={errors.rate_type}\n                                fiat_currency={currency}\n                                local_currency={local_currency}\n                                onChange={handleChange}\n                                onFocus={() => setFieldTouched('rate_type', true)}\n                                offset={{\n                                    upper_limit: parseInt(float_rate_offset_limit_string),\n                                    lower_limit: parseInt(float_rate_offset_limit_string) * -1,\n                                }}\n                                required\n                                change_handler={e => {\n                                    my_ads_store.restrictDecimalPlace(e, handleChange);\n                                }}\n                                {...field}\n                            />\n                        ) : (\n                            <Input\n                                {...field}\n                                data-testid='fixed_rate_type'\n                                data-lpignore='true'\n                                type='text'\n                                error={touched.rate_type && errors.rate_type}\n                                label={localize('Fixed rate (1 {{currency}})', {\n                                    currency,\n                                })}\n                                className='ad-type-section__field'\n                                trailing_icon={<AdTypeSectionTrailingIcon label={local_currency} />}\n                                onChange={e => {\n                                    my_ads_store.restrictLength(e, handleChange);\n                                }}\n                                onFocus={() => setFieldTouched('rate_type', true)}\n                                required\n                            />\n                        )\n                    }\n                </Field>\n            </div>\n            <div className='ad-type-section__container'>\n                <Field name='min_transaction'>\n                    {({ field }) => (\n                        <Input\n                            {...field}\n                            data-lpignore='true'\n                            data-testid='min_transaction'\n                            type='text'\n                            error={touched.min_transaction && errors.min_transaction}\n                            label={localize('Min order')}\n                            className='ad-type-section__field'\n                            trailing_icon={<AdTypeSectionTrailingIcon label={currency} />}\n                            onChange={e => {\n                                my_ads_store.restrictLength(e, handleChange);\n                            }}\n                            onFocus={() => setFieldTouched('min_transaction', true)}\n                            required\n                        />\n                    )}\n                </Field>\n                <Field name='max_transaction'>\n                    {({ field }) => (\n                        <Input\n                            {...field}\n                            data-testid='max_transaction'\n                            data-lpignore='true'\n                            type='text'\n                            error={touched.max_transaction && errors.max_transaction}\n                            label={localize('Max order')}\n                            className='ad-type-section__field'\n                            trailing_icon={<AdTypeSectionTrailingIcon label={currency} />}\n                            onChange={e => {\n                                my_ads_store.restrictLength(e, handleChange);\n                            }}\n                            onFocus={() => setFieldTouched('max_transaction', true)}\n                            required\n                        />\n                    )}\n                </Field>\n            </div>\n            {values.type === buy_sell.SELL && (\n                <div className='ad-type-section__field--contact-details'>\n                    <Field name='contact_info'>\n                        {({ field }) => (\n                            <Input\n                                {...field}\n                                data-testid='contact_info'\n                                data-lpignore='true'\n                                type='textarea'\n                                label={\n                                    <Text color='less-prominent' size='xs'>\n                                        <Localize i18n_default_text='Your contact details' />\n                                    </Text>\n                                }\n                                error={touched.contact_info && errors.contact_info}\n                                className='ad-type-section__field ad-type-section__field--textarea'\n                                initial_character_count={values.contact_info.length}\n                                required\n                                has_character_counter\n                                max_characters={300}\n                                onFocus={() => setFieldTouched('contact_info', true)}\n                            />\n                        )}\n                    </Field>\n                </div>\n            )}\n            <Field name='default_advert_description'>\n                {({ field }) => (\n                    <Input\n                        {...field}\n                        data-testid='default_advert_description'\n                        data-lpignore='true'\n                        type='textarea'\n                        error={touched.default_advert_description && errors.default_advert_description}\n                        label={\n                            <Text color='less-prominent' size='xs'>\n                                <Localize i18n_default_text='Instructions (optional)' />\n                            </Text>\n                        }\n                        hint={localize('This information will be visible to everyone.')}\n                        className='ad-type-section__field ad-type-section__field--textarea'\n                        initial_character_count={values.default_advert_description.length}\n                        has_character_counter\n                        max_characters={300}\n                        onFocus={() => setFieldTouched('default_advert_description', true)}\n                        required\n                    />\n                )}\n            </Field>\n            <AdFormController {...props} is_next_btn_disabled={is_next_btn_disabled} onCancel={onCancel} />\n        </>\n    );\n};\n\nexport default AdTypeSection;\n","import AdTypeSection from './ad-type-section';\nimport './ad-type-section.scss';\n\nexport default AdTypeSection;\n","import React from 'react';\nimport { FormProgress, Icon, Text, Wizard } from '@deriv/components';\nimport { useDevice } from '@deriv-com/ui';\nimport { Localize } from 'Components/i18next';\nimport AdConditionsSection from 'Pages/my-ads/ad-conditions-section';\nimport AdPaymentDetailsSection from 'Pages/my-ads/ad-payment-details-section';\nimport AdProgressBar from 'Pages/my-ads/ad-progress-bar';\nimport AdTypeSection from 'Pages/my-ads/ad-type-section';\nimport { TCountryListProps } from 'Types';\n\ntype TStep = { header: { title: string }; sub_step_count: number };\ntype TAdWizardNav = {\n    action: string;\n    country_list: TCountryListProps;\n    default_step?: number;\n    float_rate_offset_limit_string: string;\n    onClose: () => void;\n    rate_type: string;\n    steps: TStep[];\n};\n\nconst AdWizard = ({\n    action,\n    country_list,\n    float_rate_offset_limit_string,\n    onClose,\n    rate_type,\n    steps,\n}: TAdWizardNav) => {\n    const { isDesktop } = useDevice();\n    const [current_step, setCurrentStep] = React.useState(0);\n    const [is_form_dirty, setIsFormDirty] = React.useState(false);\n\n    const getWizardContent = () => {\n        if (isDesktop) {\n            return <FormProgress steps={steps} current_step={current_step} />;\n        }\n\n        return (\n            <div>\n                <AdProgressBar current_step={current_step} steps={steps} />\n                <div>\n                    <Text size='xs' weight='bold'>\n                        <Localize\n                            i18n_default_text='{{title}}'\n                            values={{\n                                title: steps[current_step].header.title,\n                            }}\n                        />\n                    </Text>\n                    {steps[current_step + 1] ? (\n                        <Text as='div' color='less-prominent' size='xs'>\n                            <Localize\n                                i18n_default_text='Next: {{title}}'\n                                values={{\n                                    title: steps[current_step + 1].header.title,\n                                }}\n                            />\n                        </Text>\n                    ) : (\n                        <Text as='div' color='less-prominent' size='xs'>\n                            <Localize i18n_default_text='Last step' />\n                        </Text>\n                    )}\n                </div>\n                <Icon icon='IcCross' onClick={onClose} />\n            </div>\n        );\n    };\n\n    return (\n        <Wizard\n            className='ad-wizard'\n            initial_step={0}\n            onStepChange={step => setCurrentStep(step.active_step - 1)}\n            nav={<>{getWizardContent()}</>}\n        >\n            <AdTypeSection\n                action={action}\n                float_rate_offset_limit_string={float_rate_offset_limit_string}\n                is_form_dirty={is_form_dirty}\n                rate_type={rate_type}\n            />\n            <AdPaymentDetailsSection setIsFormDirty={setIsFormDirty} />\n            <AdConditionsSection action={action} country_list={country_list} is_form_dirty={is_form_dirty} />\n        </Wizard>\n    );\n};\n\nexport default AdWizard;\n","import AdWizard from './ad-wizard';\nimport './ad-wizard.scss';\n\nexport default AdWizard;\n","import * as React from 'react';\nimport { Formik, Form } from 'formik';\nimport { Div100vhContainer, ThemedScrollbars } from '@deriv/components';\nimport { useP2PSettings } from '@deriv/hooks';\nimport { observer } from '@deriv/stores';\nimport { useDevice } from '@deriv-com/ui';\nimport { localize } from 'Components/i18next';\nimport { buy_sell } from 'Constants/buy-sell';\nimport { ad_type } from 'Constants/floating-rate';\nimport { useStores } from 'Stores';\nimport { useModalManagerContext } from 'Components/modal-manager/modal-manager-context';\nimport AdWizard from './ad-wizard';\nimport './create-ad-form.scss';\n\nconst CreateAdFormWrapper = ({ children }) => {\n    const { isDesktop } = useDevice();\n    if (!isDesktop) {\n        return <Div100vhContainer height_offset='auto'>{children}</Div100vhContainer>;\n    }\n    return children;\n};\n\nconst CreateAdForm = ({ country_list }) => {\n    const { isDesktop } = useDevice();\n    const { buy_sell_store, general_store, my_ads_store, my_profile_store } = useStores();\n    const {\n        p2p_settings: {\n            adverts_archive_period,\n            float_rate_offset_limit_string,\n            order_expiry_options,\n            order_payment_period_string,\n            rate_type,\n        },\n    } = useP2PSettings();\n    const { useRegisterModalProps } = useModalManagerContext();\n    const steps = [\n        { header: { title: localize('Set ad type and amount') } },\n        { header: { title: localize('Set payment details') } },\n        { header: { title: localize('Set ad conditions') } },\n    ];\n\n    // when adding payment methods in creating an ad, once user declines to save their payment method, flow is to close all add payment method modals\n    useRegisterModalProps({\n        key: 'CancelAddPaymentMethodModal',\n        props: {\n            should_hide_all_modals_on_cancel: true,\n        },\n    });\n\n    const onCleanup = () => {\n        my_ads_store.setApiErrorMessage('');\n        my_ads_store.setShowAdForm(false);\n        buy_sell_store.setCreateSellAdFromNoAds(false);\n        my_ads_store.payment_method_ids = [];\n        my_ads_store.payment_method_names = [];\n        my_ads_store.setMinJoinDays(0);\n        my_ads_store.setMinCompletionRate(0);\n    };\n\n    const onSubmit = (values, { setSubmitting }) => {\n        my_ads_store.handleSubmit(values, { setSubmitting }, false, adverts_archive_period);\n    };\n\n    React.useEffect(() => {\n        my_ads_store.setCurrentMethod({ key: null, is_deleted: false });\n        my_profile_store.getPaymentMethodsList();\n        my_profile_store.getAdvertiserPaymentMethods();\n\n        return () => {\n            onCleanup();\n        };\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const getOrderExpiryOption = () => {\n        if (order_expiry_options?.includes(Number(order_payment_period_string))) {\n            return order_payment_period_string;\n        }\n        return `${Math.max(...order_expiry_options)}`;\n    };\n\n    return (\n        <React.Fragment>\n            <Formik\n                enableReinitialize\n                initialValues={{\n                    contact_info: general_store.contact_info,\n                    default_advert_description: general_store.default_advert_description,\n                    eligible_countries: country_list ? Object.keys(country_list) : [],\n                    float_rate_offset_limit: float_rate_offset_limit_string,\n                    max_transaction: '',\n                    min_transaction: '',\n                    offer_amount: '',\n                    order_completion_time: getOrderExpiryOption(),\n                    payment_info: my_ads_store.payment_info,\n                    rate_type_string: rate_type,\n                    rate_type: rate_type === ad_type.FLOAT ? '-0.01' : '',\n                    type: buy_sell_store.create_sell_ad_from_no_ads ? buy_sell.SELL : buy_sell.BUY,\n                }}\n                onSubmit={onSubmit}\n                validate={my_ads_store.validateCreateAdForm}\n            >\n                {() => {\n                    return (\n                        <div className='create-ad-form' data-testid='dp2p-create-ad-form_container'>\n                            <Form noValidate>\n                                <ThemedScrollbars\n                                    className='create-ad-form__scrollbar'\n                                    is_scrollbar_hidden={!isDesktop}\n                                >\n                                    <CreateAdFormWrapper>\n                                        <AdWizard\n                                            country_list={country_list}\n                                            float_rate_offset_limit_string={float_rate_offset_limit_string}\n                                            onClose={() => {\n                                                my_ads_store.setShowAdForm(false);\n                                            }}\n                                            rate_type={rate_type}\n                                            steps={steps}\n                                        />\n                                    </CreateAdFormWrapper>\n                                </ThemedScrollbars>\n                            </Form>\n                        </div>\n                    );\n                }}\n            </Formik>\n        </React.Fragment>\n    );\n};\n\nexport default observer(CreateAdForm);\n","import * as React from 'react';\nimport { Loading } from '@deriv/components';\nimport { observer } from 'mobx-react-lite';\nimport CopyAdvertForm from 'Pages/my-ads/copy-advert-form';\nimport CreateAdForm from 'Pages/my-ads/create-ad-form';\nimport { useStores } from 'Stores';\n\nconst CreateAd = ({ country_list }) => {\n    const { my_ads_store } = useStores();\n    const {\n        is_form_loading,\n        p2p_advert_information,\n        setApiErrorMessage,\n        setShouldCopyAdvert,\n        setShowAdForm,\n        should_copy_advert,\n    } = my_ads_store;\n    const onClickBack = () => {\n        setApiErrorMessage('');\n        setShowAdForm(false);\n        setShouldCopyAdvert(false);\n    };\n\n    if (is_form_loading) {\n        return <Loading is_fullscreen={false} />;\n    }\n    return (\n        <React.Fragment>\n            {should_copy_advert ? (\n                <CopyAdvertForm advert={p2p_advert_information} country_list={country_list} onCancel={onClickBack} />\n            ) : (\n                <CreateAdForm country_list={country_list} />\n            )}\n        </React.Fragment>\n    );\n};\n\nexport default observer(CreateAd);\n","import * as React from 'react';\nimport { Formik, Form } from 'formik';\nimport { Div100vhContainer, ThemedScrollbars } from '@deriv/components';\nimport { useP2PSettings } from '@deriv/hooks';\nimport { useDevice } from '@deriv-com/ui';\nimport { observer } from 'mobx-react-lite';\nimport { buy_sell } from 'Constants/buy-sell';\nimport { useStores } from 'Stores';\nimport { ad_type } from 'Constants/floating-rate';\nimport { localize } from 'Components/i18next';\nimport { useModalManagerContext } from 'Components/modal-manager/modal-manager-context';\nimport AdWizard from './ad-wizard';\nimport './edit-ad-form.scss';\n\nconst EditAdFormWrapper = ({ children }) => {\n    const { isDesktop } = useDevice();\n    if (!isDesktop) {\n        return <Div100vhContainer height_offset='auto'>{children}</Div100vhContainer>;\n    }\n\n    return children;\n};\n\nconst EditAdForm = ({ country_list }) => {\n    const { isDesktop } = useDevice();\n    const { my_ads_store, my_profile_store } = useStores();\n    const steps = [\n        { header: { title: localize('Edit ad type and amount') } },\n        { header: { title: localize('Edit payment details') } },\n        { header: { title: localize('Edit ad conditions') } },\n    ];\n\n    const {\n        amount_display,\n        contact_info,\n        description,\n        eligible_countries,\n        max_order_amount_display,\n        min_order_amount_display,\n        order_expiry_period,\n        payment_method_names,\n        payment_method_details,\n        rate_display,\n        type,\n        is_active,\n        rate_type,\n    } = my_ads_store.p2p_advert_information;\n\n    const is_buy_advert = type === buy_sell.BUY;\n    const [selected_methods, setSelectedMethods] = React.useState([]);\n    const { useRegisterModalProps } = useModalManagerContext();\n    const { p2p_settings } = useP2PSettings();\n\n    // when editing payment methods in creating an ad, once user declines to save their payment method, flow is to close all add payment method modals\n    useRegisterModalProps({\n        key: 'CancelAddPaymentMethodModal',\n        props: {\n            should_hide_all_modals_on_cancel: true,\n        },\n    });\n\n    const setInitialAdRate = () => {\n        if (my_ads_store.required_ad_type !== my_ads_store.selected_ad_type) {\n            if (my_ads_store.required_ad_type === ad_type.FLOAT) {\n                return is_buy_advert ? '-0.01' : '+0.01';\n            }\n            return '';\n        }\n        return rate_display;\n    };\n\n    React.useEffect(() => {\n        my_profile_store.getAdvertiserPaymentMethods();\n        my_ads_store.setEditAdFormError('');\n\n        if (payment_method_names && !payment_method_details) {\n            const selected_payment_method_values = [];\n            payment_method_names?.forEach(pm => {\n                my_profile_store.getPaymentMethodValue(pm);\n                if (my_profile_store.payment_method_value) {\n                    selected_payment_method_values.push(my_profile_store.payment_method_value);\n                    my_ads_store.payment_method_names.push(my_profile_store.payment_method_value);\n                }\n            });\n            setSelectedMethods(selected_payment_method_values);\n        }\n        if (payment_method_details) {\n            Object.entries(payment_method_details)?.map(pm => {\n                selected_methods.push(pm[0]);\n                my_ads_store.payment_method_ids.push(pm[0]);\n            });\n        }\n        return () => {\n            my_ads_store.setApiErrorCode(null);\n            my_ads_store.setShowEditAdForm(false);\n            my_ads_store.payment_method_ids = [];\n            my_ads_store.payment_method_names = [];\n            my_ads_store.setMinJoinDays(0);\n            my_ads_store.setMinCompletionRate(0);\n            my_ads_store.setP2pAdvertInformation({});\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return (\n        <React.Fragment>\n            <Formik\n                initialValues={{\n                    contact_info,\n                    default_advert_description: description,\n                    eligible_countries,\n                    float_rate_offset_limit: p2p_settings.float_rate_offset_limit_string,\n                    is_active: rate_type !== p2p_settings.rate_type && p2p_settings.reached_target_date ? 1 : is_active,\n                    max_transaction: max_order_amount_display,\n                    min_transaction: min_order_amount_display,\n                    offer_amount: amount_display,\n                    // set a max of 1 hour if expiry period is more than 1 hour\n                    order_completion_time: order_expiry_period > 3600 ? '3600' : order_expiry_period.toString(),\n                    rate_type: setInitialAdRate(),\n                    reached_target_date: p2p_settings.reached_target_date,\n                    type,\n                }}\n                onSubmit={my_ads_store.onClickSaveEditAd}\n                validate={my_ads_store.validateEditAdForm}\n                validateOnMount\n            >\n                {() => {\n                    return (\n                        <div className='edit-ad-form'>\n                            <Form noValidate>\n                                <ThemedScrollbars className='edit-ad-form__scrollbar' is_scrollbar_hidden={!isDesktop}>\n                                    <EditAdFormWrapper>\n                                        <AdWizard\n                                            action='edit'\n                                            country_list={country_list}\n                                            float_rate_offset_limit_string={p2p_settings.float_rate_offset_limit_string}\n                                            onClose={() => {\n                                                my_ads_store.setShowEditAdForm(false);\n                                            }}\n                                            rate_type={p2p_settings.rate_type}\n                                            steps={steps}\n                                        />\n                                    </EditAdFormWrapper>\n                                </ThemedScrollbars>\n                            </Form>\n                        </div>\n                    );\n                }}\n            </Formik>\n        </React.Fragment>\n    );\n};\n\nexport default observer(EditAdForm);\n","import React from 'react';\nimport { Loading } from '@deriv/components';\nimport { observer } from 'mobx-react-lite';\nimport { useStores } from 'Stores';\nimport EditAdForm from './edit-ad-form.jsx';\n\nconst EditAd = ({ country_list }) => {\n    const { my_ads_store } = useStores();\n\n    return (\n        <React.Fragment>\n            {my_ads_store.is_form_loading ? (\n                <Loading is_fullscreen={false} />\n            ) : (\n                <EditAdForm country_list={country_list} />\n            )}\n        </React.Fragment>\n    );\n};\n\nexport default observer(EditAd);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Text, ToggleSwitch } from '@deriv/components';\nimport { useIsMounted } from '@deriv/shared';\nimport { observer } from '@deriv/stores';\nimport { Localize } from 'Components/i18next';\nimport { requestWS } from 'Utils/websocket';\nimport { useStores } from 'Stores';\nimport './toggle-ads.scss';\n\nconst ToggleAds = observer(() => {\n    const { general_store, my_ads_store } = useStores();\n    const isMounted = useIsMounted();\n\n    const handleToggle = () => {\n        // Ads are automatically disabled when the user is barred\n        if (!general_store.is_barred) {\n            requestWS({\n                p2p_advertiser_update: 1,\n                is_listed: general_store.is_listed ? 0 : 1,\n            }).then(response => {\n                if (isMounted()) {\n                    if (response.error) {\n                        my_ads_store.setApiError(response.error.message);\n                    } else {\n                        const { is_listed } = response.p2p_advertiser_update;\n                        general_store.setIsListed(is_listed === 1);\n                    }\n                }\n            });\n        }\n    };\n\n    return (\n        <div className='toggle-ads'>\n            <Text\n                className='toggle-ads__message'\n                color={general_store.is_listed ? 'less-prominent' : 'profit-success'}\n                line_height='xl'\n                size='xs'\n            >\n                <Localize i18n_default_text='Hide my ads' />\n            </Text>\n            <ToggleSwitch\n                id='toggle-my-ads'\n                is_enabled={general_store.is_barred || !general_store.is_listed}\n                handleToggle={handleToggle}\n            />\n        </div>\n    );\n});\n\nToggleAds.propTypes = {\n    api_error: PropTypes.string,\n    handleToggle: PropTypes.func,\n    is_listed: PropTypes.bool,\n};\n\nexport default ToggleAds;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react-lite';\nimport { Text } from '@deriv/components';\nimport { Localize } from 'Components/i18next';\nimport './ad-status.scss';\n\nconst AdStatus = ({ is_active }) => {\n    if (!is_active) {\n        return (\n            <Text\n                align='center'\n                className='ad-status--inactive'\n                color='loss-danger'\n                line_height='s'\n                size='xs'\n                weight='bold'\n            >\n                <Localize i18n_default_text='Inactive' />\n            </Text>\n        );\n    }\n\n    return (\n        <Text\n            align='center'\n            className='ad-status--active'\n            color='profit-success'\n            line_height='s'\n            size='xs'\n            weight='bold'\n        >\n            <Localize i18n_default_text='Active' />\n        </Text>\n    );\n};\n\nAdStatus.propTypes = {\n    is_active: PropTypes.bool,\n};\n\nexport default observer(AdStatus);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { localize } from 'Components/i18next';\nimport { Text } from '@deriv/components';\nimport './ad-type.scss';\n\nconst AdType = ({ ad_pause_color, float_rate }) => {\n    return (\n        <div className='ad-type'>\n            <Text as='span' className='ad-type__badge' color={ad_pause_color} line_height='xs' size='xxs'>\n                {localize('Float')}\n            </Text>\n            <Text as='span' color={ad_pause_color} line_height='xxs' size='xxs'>\n                {float_rate}%\n            </Text>\n        </div>\n    );\n};\n\nAdType.propTypes = {\n    ad_pause_color: PropTypes.string,\n    float_rate: PropTypes.string,\n};\n\nexport default AdType;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Dropdown, Icon, Popover, ProgressIndicator, Table, Text } from '@deriv/components';\nimport { formatMoney } from '@deriv/shared';\nimport { observer } from '@deriv/stores';\nimport { useP2PExchangeRate, useP2PSettings } from '@deriv/hooks';\nimport { Localize, localize } from 'Components/i18next';\nimport { buy_sell } from 'Constants/buy-sell';\nimport { ad_type } from 'Constants/floating-rate';\nimport { useModalManagerContext } from 'Components/modal-manager/modal-manager-context';\nimport AdStatus from 'Pages/my-ads/ad-status.jsx';\nimport { useStores } from 'Stores';\nimport { api_error_codes } from 'Constants/api-error-codes';\nimport { generateEffectiveRate } from 'Utils/format-value';\nimport AdType from './ad-type.jsx';\nimport { useDevice } from '@deriv-com/ui';\n\nconst MyAdsRowDropdown = ({\n    className,\n    handleBlur,\n    is_advert_active,\n    is_disabled,\n    is_nativepicker_visible,\n    onSelectMore,\n}) => {\n    return (\n        <Dropdown\n            className={classNames(className, 'my-ads-table__status-more')}\n            classNameDisplay='my-ads-table__status-more--display'\n            disabled={is_disabled}\n            handleBlur={handleBlur}\n            is_align_text_left\n            is_nativepicker_visible={is_nativepicker_visible}\n            list={[\n                {\n                    text: localize('Edit'),\n                    value: 'edit',\n                },\n                {\n                    text: localize('Copy'),\n                    value: 'copy',\n                },\n                {\n                    text: localize('Share'),\n                    value: 'share',\n                },\n                {\n                    text: is_advert_active ? localize('Deactivate') : localize('Activate'),\n                    value: is_advert_active ? 'deactivate' : 'activate',\n                },\n\n                {\n                    text: localize('Delete'),\n                    value: 'delete',\n                },\n            ]}\n            no_border\n            onChange={onSelectMore}\n            suffix_icon='IcCashierVerticalEllipsis'\n        />\n    );\n};\n\nconst MyAdsRowRenderer = observer(({ country_list, row: advert, table_ref }) => {\n    const { isDesktop } = useDevice();\n    const { general_store, my_ads_store, my_profile_store } = useStores();\n    const { hideModal, showModal } = useModalManagerContext();\n    const { p2p_settings } = useP2PSettings();\n\n    const {\n        account_currency,\n        amount,\n        amount_display,\n        effective_rate,\n        id,\n        is_active,\n        local_currency,\n        max_order_amount_display,\n        min_order_amount_display,\n        payment_method_names,\n        price_display,\n        rate_display,\n        rate_type,\n        remaining_amount,\n        remaining_amount_display,\n        type,\n        visibility_status = [],\n    } = advert;\n    const row_ref = React.useRef(null);\n    const [is_custom_dropdown, setIsCustomDropdown] = React.useState(false);\n    // Use separate is_advert_active state to ensure value is updated\n    const [is_advert_active, setIsAdvertActive] = React.useState(is_active);\n    const [show_warning_icon, setShowWarningIcon] = React.useState(false);\n    const [is_advert_menu_visible, setIsAdvertMenuVisible] = React.useState(false);\n    const amount_dealt = amount - remaining_amount;\n    const enable_action_point = p2p_settings.rate_type !== rate_type;\n    const is_buy_advert = type === buy_sell.BUY;\n    const advert_type = is_buy_advert ? <Localize i18n_default_text='Buy' /> : <Localize i18n_default_text='Sell' />;\n    const exchange_rate = useP2PExchangeRate(local_currency);\n\n    const { display_effective_rate } = generateEffectiveRate({\n        price: price_display,\n        rate_type,\n        rate: rate_display,\n        local_currency,\n        exchange_rate,\n        market_rate: effective_rate,\n    });\n\n    const { ADVERT_INACTIVE, ADVERTISER_ADS_PAUSED } = api_error_codes;\n\n    const is_advert_listed = general_store.is_listed && !general_store.is_barred;\n    const ad_pause_color = is_advert_listed ? 'general' : 'less-prominent';\n\n    const icon_disabled_color =\n        (!general_store.is_listed || general_store.is_barred || !is_advert_active) && 'disabled';\n    const is_activate_ad_disabled = p2p_settings.reached_target_date && enable_action_point;\n\n    const onClickActivateDeactivate = () => {\n        if (!is_activate_ad_disabled) {\n            my_ads_store.onClickActivateDeactivate(id, is_advert_active, setIsAdvertActive);\n        }\n    };\n\n    const onClickAdd = () => {\n        if (is_advert_listed) {\n            my_ads_store.showQuickAddModal(advert);\n        }\n    };\n    const onClickDelete = () => !general_store.is_barred && my_ads_store.onClickDelete(id);\n    const onClickEdit = () => !general_store.is_barred && my_ads_store.onClickEdit(id, rate_type);\n    const onClickShare = () => {\n        if (!general_store.is_barred) showModal({ key: 'ShareMyAdsModal', props: { advert } });\n    };\n    const onClickCopy = () => {\n        if (p2p_settings.rate_type === rate_type) {\n            my_ads_store.onClickCopy(country_list, id, isDesktop);\n        } else {\n            general_store.showModal({\n                key: 'MyAdsFloatingRateSwitchModal',\n                props: {\n                    onSwitch: () => {\n                        hideModal();\n                        my_ads_store.onClickCopy(country_list, id, isDesktop);\n                    },\n                },\n            });\n        }\n    };\n    const onClickSwitchAd = () => {\n        if (!general_store.is_barred) {\n            general_store.showModal({ key: 'MyAdsFloatingRateSwitchModal', props: {} });\n            my_ads_store.onToggleSwitchModal(id);\n        }\n    };\n\n    const handleOnEdit = () =>\n        enable_action_point && p2p_settings.rate_type !== rate_type ? onClickSwitchAd() : onClickEdit();\n\n    const should_show_tooltip_icon =\n        (visibility_status?.length === 1 &&\n            visibility_status[0] !== 'advert_inactive' &&\n            visibility_status[0] !== 'advertiser_ads_paused') ||\n        visibility_status.length > 1;\n\n    const getErrorCodes = () => {\n        let updated_visibility_status = [...visibility_status];\n        if (!is_advert_listed && !updated_visibility_status.includes(ADVERTISER_ADS_PAUSED))\n            updated_visibility_status = [...updated_visibility_status, ADVERTISER_ADS_PAUSED];\n        if (!enable_action_point && updated_visibility_status.includes(ADVERT_INACTIVE))\n            updated_visibility_status = updated_visibility_status.filter(status => status !== ADVERT_INACTIVE);\n        if (enable_action_point && !updated_visibility_status.includes(ADVERT_INACTIVE))\n            updated_visibility_status = [...updated_visibility_status, ADVERT_INACTIVE];\n        return updated_visibility_status;\n    };\n\n    React.useEffect(() => {\n        my_profile_store.getAdvertiserPaymentMethods();\n        my_ads_store.setTableHeight(my_ads_store.table_height + row_ref?.current?.clientHeight);\n        setIsCustomDropdown(table_ref?.current?.clientHeight - my_ads_store.table_height < 260);\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    React.useEffect(() => {\n        setShowWarningIcon(enable_action_point || should_show_tooltip_icon || !general_store.is_listed);\n    }, [enable_action_point, general_store.is_listed, should_show_tooltip_icon, p2p_settings.rate_type]);\n\n    const onClickTooltipIcon = () => {\n        showModal({\n            key: 'AdErrorTooltipModal',\n            props: {\n                visibility_status: getErrorCodes(),\n                account_currency,\n                advert_type: type,\n                remaining_amount,\n            },\n        });\n    };\n\n    const onSelectMore = event => {\n        switch (event.target.value) {\n            case 'edit':\n                handleOnEdit();\n                break;\n            case 'copy':\n                onClickCopy();\n                break;\n            case 'share':\n                onClickShare();\n                break;\n            case 'activate':\n            case 'deactivate':\n                onClickActivateDeactivate();\n                break;\n            case 'delete':\n                onClickDelete();\n                break;\n            default:\n        }\n\n        setIsAdvertMenuVisible(false);\n    };\n\n    if (!isDesktop) {\n        return (\n            <Table.Row\n                className={classNames('my-ads-table__row', {\n                    'my-ads-table__row-disabled': !is_advert_active,\n                })}\n            >\n                <Text color='less-prominent' size='xxs'>\n                    <Localize i18n_default_text='Ad ID {{advert_id}} ' values={{ advert_id: id }} />\n                </Text>\n                <div className='my-ads-table__row__type-and-status'>\n                    <Text color={ad_pause_color} weight='bold'>\n                        {advert_type} {account_currency}\n                    </Text>\n                    {show_warning_icon ? (\n                        <div className='my-ads-table__status-warning'>\n                            <div style={{ marginRight: '0.8rem' }}>\n                                <AdStatus is_active={!!is_advert_active && !general_store.is_barred} />\n                            </div>\n                            <Icon\n                                icon='IcAlertWarning'\n                                onClick={onClickTooltipIcon}\n                                className={!!is_advert_active && 'my-ads-table__status-warning__icon'}\n                                data_testid='dt_visibility_alert_icon'\n                            />\n                        </div>\n                    ) : (\n                        <AdStatus is_active={!!is_advert_active && !general_store.is_barred} />\n                    )}\n                    <MyAdsRowDropdown\n                        is_advert_active={is_advert_active}\n                        is_disabled={general_store.is_barred}\n                        is_nativepicker_visible={false}\n                        onSelectMore={onSelectMore}\n                    />\n                </div>\n                <div className='my-ads-table__row-details'>\n                    <Text color={is_advert_listed ? 'profit-success' : 'less-prominent'} size='xxs'>\n                        {`${formatMoney(account_currency, amount_dealt, true)}`} {account_currency}&nbsp;\n                        {is_buy_advert ? localize('Bought') : localize('Sold')}\n                    </Text>\n                    <Text color='less-prominent' size='xxs'>\n                        {amount_display} {account_currency}\n                    </Text>\n                </div>\n                <ProgressIndicator className={'my-ads-table__available-progress'} value={amount_dealt} total={amount} />\n                <div className='my-ads-table__row-details'>\n                    <Text color='less-prominent' size='xxs'>\n                        <Localize i18n_default_text='Limits' />\n                    </Text>\n                    <Text color='less-prominent' size='xxs'>\n                        <Localize i18n_default_text='Rate (1 {{account_currency}})' values={{ account_currency }} />\n                    </Text>\n                </div>\n                <div className='my-ads-table__row-details'>\n                    <Text color={ad_pause_color} size='xxs'>\n                        {min_order_amount_display} - {max_order_amount_display} {account_currency}\n                    </Text>\n                    <Text color={is_advert_listed ? 'profit-success' : 'disabled'} size='xs' weight='bold'>\n                        <div className='display-layout'>\n                            {display_effective_rate} {local_currency}\n                            {rate_type === ad_type.FLOAT && (\n                                <AdType ad_pause_color={ad_pause_color} float_rate={rate_display} />\n                            )}\n                        </div>\n                    </Text>\n                </div>\n                <div className='my-ads-table__row-methods'>\n                    {payment_method_names ? (\n                        payment_method_names.map((payment_method, key) => {\n                            return (\n                                <div className='my-ads-table__payment-method--label' key={key}>\n                                    <Text color={ad_pause_color} size='xxxs' line_height='l'>\n                                        {payment_method}\n                                    </Text>\n                                </div>\n                            );\n                        })\n                    ) : (\n                        <div\n                            className={classNames('my-ads-table__add', {\n                                'my-ads-table__add--disabled': !general_store.is_listed,\n                            })}\n                            onClick={() => onClickAdd()}\n                        >\n                            <Icon color={icon_disabled_color} icon='IcAdd' />\n                            <Text color={ad_pause_color} size='xxs' weight='bold'>\n                                <Localize i18n_default_text='Add' />\n                            </Text>\n                        </div>\n                    )}\n                </div>\n            </Table.Row>\n        );\n    }\n\n    return (\n        <div ref={row_ref}>\n            <Table.Row\n                className={classNames('my-ads-table__row', {\n                    'my-ads-table__row-disabled': !is_advert_active,\n                })}\n            >\n                <Table.Cell>\n                    {advert_type} {id}\n                </Table.Cell>\n                <Table.Cell>\n                    {min_order_amount_display}-{max_order_amount_display} {account_currency}\n                </Table.Cell>\n                <Table.Cell className='my-ads-table__price'>\n                    <div className='display-layout'>\n                        {display_effective_rate} {local_currency}\n                        {rate_type === ad_type.FLOAT && (\n                            <AdType ad_pause_color={ad_pause_color} float_rate={rate_display} />\n                        )}\n                    </div>\n                </Table.Cell>\n                <Table.Cell className='my-ads-table__available'>\n                    <ProgressIndicator\n                        className={'my-ads-table__available-progress'}\n                        value={remaining_amount}\n                        total={amount}\n                    />\n                    <div className='my-ads-table__available-value'>\n                        {remaining_amount_display}/{amount_display} {account_currency}\n                    </div>\n                </Table.Cell>\n                <Table.Cell>\n                    <div className='my-ads-table__payment-method'>\n                        {payment_method_names ? (\n                            payment_method_names.map((payment_method, key) => {\n                                return (\n                                    <div className='my-ads-table__payment-method--label' key={key}>\n                                        <Text color={ad_pause_color} size='xs' line_height='l'>\n                                            {payment_method}\n                                        </Text>\n                                    </div>\n                                );\n                            })\n                        ) : (\n                            <div\n                                className={classNames('my-ads-table__add', {\n                                    'my-ads-table__add--disabled': !general_store.is_listed,\n                                })}\n                                onClick={() => onClickAdd()}\n                            >\n                                <Icon color={icon_disabled_color} icon='IcAdd' />\n                                <Text color={ad_pause_color} size='xxs' weight='bold'>\n                                    <Localize i18n_default_text='Add' />\n                                </Text>\n                            </div>\n                        )}\n                    </div>\n                </Table.Cell>\n                <Table.Cell>\n                    {show_warning_icon ? (\n                        <div className='my-ads-table__status-warning'>\n                            <AdStatus is_active={!!is_advert_active && !general_store.is_barred} />\n                            <Popover alignment='top' message={localize('Ad not listed')}>\n                                <Icon\n                                    icon='IcAlertWarning'\n                                    onClick={onClickTooltipIcon}\n                                    data_testid='dt_visibility_alert_icon'\n                                />\n                            </Popover>\n                        </div>\n                    ) : (\n                        <div className='my-ads-table__status'>\n                            <AdStatus is_active={!!is_advert_active && !general_store.is_barred} />\n                        </div>\n                    )}\n                    {general_store.is_barred ? (\n                        <Icon color='disabled' icon='IcCashierVerticalEllipsis' />\n                    ) : (\n                        <Popover\n                            alignment='top'\n                            arrow_styles={{ bottom: '-0.5rem' }}\n                            classNameBubble='my-ads-table__status-bubble'\n                            classNameTarget='my-ads-table__status-target'\n                            message={localize('Manage ad')}\n                            onClick={() => {\n                                setIsAdvertMenuVisible(true);\n                            }}\n                        >\n                            <Icon icon='IcCashierVerticalEllipsis' />\n                        </Popover>\n                    )}\n                    {is_advert_menu_visible && (\n                        <MyAdsRowDropdown\n                            className={classNames({\n                                'my-ads-table__dropdown-custom': is_custom_dropdown,\n                            })}\n                            handleBlur={() => setIsAdvertMenuVisible(false)}\n                            is_advert_active={is_advert_active}\n                            is_disabled={general_store.is_barred}\n                            is_nativepicker_visible\n                            onSelectMore={onSelectMore}\n                        />\n                    )}\n                </Table.Cell>\n            </Table.Row>\n        </div>\n    );\n});\n\nMyAdsRowRenderer.displayName = 'MyAdsRowRenderer';\nMyAdsRowRenderer.propTypes = {\n    advert: PropTypes.object,\n};\n\nexport default MyAdsRowRenderer;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Button, InfiniteDataList, Loading, Table } from '@deriv/components';\nimport { observer, useStore } from '@deriv/stores';\nimport { localize } from 'Components/i18next';\nimport ToggleAds from 'Pages/my-ads/toggle-ads.jsx';\nimport { useStores } from 'Stores';\nimport MyAdsRowRenderer from './my-ads-row-renderer.jsx';\nimport NoAds from 'Pages/buy-sell/no-ads';\nimport './my-ads-table.scss';\nimport { useDevice } from '@deriv-com/ui';\n\nconst getHeaders = offered_currency => [\n    { text: localize('Ad ID') },\n    { text: localize('Limits') },\n    { text: localize('Rate (1 {{ offered_currency }})', { offered_currency }) },\n    { text: localize('Available amount') },\n    { text: localize('Payment methods') },\n    { text: localize('Status') },\n    { text: '' }, // empty header for delete and archive icons\n];\n\nconst MyAdsTable = ({ country_list, table_ref }) => {\n    const { isDesktop } = useDevice();\n    const { general_store, my_ads_store } = useStores();\n    const {\n        client: { currency },\n    } = useStore();\n\n    React.useEffect(() => {\n        my_ads_store.setAdverts([]);\n        my_ads_store.setSelectedAdId('');\n        my_ads_store.loadMoreAds({ startIndex: 0 }, true);\n\n        return () => {\n            my_ads_store.setApiErrorCode(null);\n            my_ads_store.setTableHeight(0);\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    if (my_ads_store.is_table_loading) {\n        return <Loading is_fullscreen={false} />;\n    }\n\n    if (my_ads_store.adverts.length) {\n        return (\n            <React.Fragment>\n                <div className='my-ads__header'>\n                    {isDesktop && (\n                        <Button\n                            is_disabled={general_store.is_barred}\n                            large\n                            onClick={my_ads_store.onClickCreate}\n                            primary\n                        >\n                            {localize('Create new ad')}\n                        </Button>\n                    )}\n                    <ToggleAds />\n                </div>\n                <Table\n                    className={classNames('my-ads-table', {\n                        'my-ads-table--disabled': !general_store.is_listed || general_store.is_barred,\n                    })}\n                >\n                    {isDesktop && (\n                        <Table.Header>\n                            <Table.Row className='my-ads-table__row'>\n                                {getHeaders(currency).map(header => (\n                                    <Table.Head key={header.text}>{header.text}</Table.Head>\n                                ))}\n                            </Table.Row>\n                        </Table.Header>\n                    )}\n                    <Table.Body className='my-ads-table__body'>\n                        <InfiniteDataList\n                            data_list_className='my-ads__data-list'\n                            has_more_items_to_load={my_ads_store.has_more_items_to_load}\n                            items={my_ads_store.adverts}\n                            keyMapperFn={item => item.id}\n                            loadMoreRowsFn={my_ads_store.loadMoreAds}\n                            rowRenderer={row_props => (\n                                <MyAdsRowRenderer {...row_props} country_list={country_list} table_ref={table_ref} />\n                            )}\n                        />\n                    </Table.Body>\n                </Table>\n                {!isDesktop && (\n                    <div className='my-ads__create-container'>\n                        <Button\n                            className='my-ads__create'\n                            is_disabled={general_store.is_barred}\n                            large\n                            onClick={my_ads_store.onClickCreate}\n                            primary\n                        >\n                            {localize('Create new ad')}\n                        </Button>\n                    </div>\n                )}\n            </React.Fragment>\n        );\n    }\n\n    return <NoAds is_ads_page />;\n};\n\nexport default observer(MyAdsTable);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Loading } from '@deriv/components';\nimport { useP2PCountryList } from '@deriv/hooks';\nimport { observer } from 'mobx-react-lite';\nimport { localize } from 'Components/i18next';\nimport { useStores } from 'Stores';\nimport TableError from 'Components/section-error';\nimport CreateAd from './create-ad.jsx';\nimport EditAd from './edit-ad.jsx';\nimport MyAdsTable from './my-ads-table.jsx';\nimport Verification from 'Components/verification';\nimport { document_status_codes, identity_status_codes } from 'Constants/account-status-codes';\n\nconst MyAdsState = ({ message }) => (\n    <div className='my-ads__state'>\n        <TableError message={message} className='section-error__table' size='xs' />\n    </div>\n);\n\nconst MyAds = () => {\n    const { p2p_country_list = {} } = useP2PCountryList();\n    const { general_store, my_ads_store, my_profile_store } = useStores();\n    const is_poi_poa_verified =\n        general_store.poi_status === identity_status_codes.VERIFIED &&\n        (!general_store.p2p_poa_required ||\n            (general_store.poa_status === document_status_codes.VERIFIED && !general_store.poa_authenticated_with_idv));\n    const table_ref = React.useRef(null);\n\n    React.useEffect(() => {\n        my_ads_store.setIsLoading(true);\n        my_ads_store.setShowEditAdForm(false);\n        my_ads_store.getAccountStatus();\n        my_profile_store.getPaymentMethodsList();\n        if (general_store.active_index !== 2) general_store.setActiveIndex(2);\n\n        return () => {\n            my_ads_store.setShowAdForm(false);\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    if (my_ads_store.is_loading) {\n        return <Loading is_fullscreen={false} />;\n    }\n\n    if (general_store.is_restricted) {\n        return <MyAdsState message={localize('Deriv P2P cashier is unavailable in your country.')} />;\n    }\n\n    if (my_ads_store.error_message) {\n        return <MyAdsState message={my_ads_store.error_message} />;\n    }\n\n    if (general_store.is_advertiser || is_poi_poa_verified) {\n        if (my_ads_store.show_ad_form) {\n            return (\n                <div className='my-ads'>\n                    <CreateAd country_list={p2p_country_list} />\n                </div>\n            );\n        } else if (my_ads_store.show_edit_ad_form) {\n            return (\n                <div className='my-ads'>\n                    <EditAd country_list={p2p_country_list} />\n                </div>\n            );\n        }\n\n        return (\n            <div className='my-ads' ref={table_ref}>\n                <MyAdsTable country_list={p2p_country_list} table_ref={table_ref} />\n            </div>\n        );\n    }\n\n    return <Verification />;\n};\n\nMyAds.propTypes = {\n    error_message: PropTypes.string,\n    getAccountStatus: PropTypes.func,\n    is_advertiser: PropTypes.bool,\n    is_loading: PropTypes.bool,\n    is_restricted: PropTypes.bool,\n    setIsLoading: PropTypes.func,\n    show_ad_form: PropTypes.bool,\n};\n\nexport default observer(MyAds);\n","import MyAds from './my-ads.jsx';\nimport './my-ads.scss';\n\nexport default MyAds;\n","import React from 'react';\nimport { FormikHandlers, FormikValues, useFormikContext } from 'formik';\nimport { Dropdown, Icon, Popover, Text } from '@deriv/components';\nimport { useDevice } from '@deriv-com/ui';\nimport { Localize, localize } from 'Components/i18next';\nimport { useModalManagerContext } from 'Components/modal-manager/modal-manager-context';\nimport { useP2PSettings } from '@deriv/hooks';\nimport { formatTime } from 'Utils/orders';\n\ntype TFormikContext = {\n    handleChange: FormikHandlers['handleChange'];\n    values: FormikValues;\n};\n\ntype TOrderTimeSelectionProps = {\n    classNameDisplay?: string;\n    classNameIcon?: string;\n    is_label_hidden?: boolean;\n};\n\nconst OrderTimeSelection = ({\n    classNameDisplay,\n    classNameIcon,\n    is_label_hidden = false,\n    ...field\n}: TOrderTimeSelectionProps) => {\n    const { values, handleChange }: TFormikContext = useFormikContext<TFormikContext>();\n    const { order_completion_time } = values;\n    const { showModal } = useModalManagerContext();\n    const { isDesktop } = useDevice();\n    const { p2p_settings } = useP2PSettings();\n    const { order_expiry_options } = p2p_settings ?? {};\n    const order_time_info_message = localize('Orders will expire if they aren’t completed within this time.');\n\n    const getOrderExpiryOptions = (\n        order_expiry_options: NonNullable<\n            NonNullable<ReturnType<typeof useP2PSettings>>['p2p_settings']\n        >['order_expiry_options']\n    ) => {\n        const options = order_expiry_options?.map(option => ({\n            text: formatTime(option / 60),\n            value: `${option}`,\n        }));\n        if (options?.some(option => option.value === order_completion_time)) return options;\n        return (\n            options?.concat({\n                text: formatTime(Number(order_completion_time) / 60),\n                value: order_completion_time,\n            }) ?? []\n        );\n    };\n\n    return (\n        <div className='order-time-selection'>\n            {!is_label_hidden && (\n                <div className='order-time-selection__title'>\n                    <Text color='prominent' size='xs' line_height='xl'>\n                        <Localize i18n_default_text='Orders must be completed in' />\n                    </Text>\n                    <Popover\n                        alignment='top'\n                        classNameBubble='order-time-selection__popover'\n                        message={<Localize i18n_default_text={order_time_info_message} />}\n                    >\n                        <Icon\n                            data_testid='dt_order_time_selection_info_icon'\n                            icon='IcInfoOutline'\n                            onClick={() =>\n                                !isDesktop &&\n                                showModal({ key: 'OrderTimeTooltipModal', props: { order_time_info_message } })\n                            }\n                        />\n                    </Popover>\n                </div>\n            )}\n            <Dropdown\n                {...field}\n                className='order-time-selection__time-dropdown'\n                classNameDisplay={classNameDisplay}\n                classNameIcon={classNameIcon}\n                is_align_text_left\n                list={getOrderExpiryOptions(order_expiry_options)}\n                onChange={handleChange}\n                value={values.order_completion_time}\n            />\n        </div>\n    );\n};\n\nexport default OrderTimeSelection;\n","import OrderTimeSelection from './order-time-selection';\nimport './order-time-selection.scss';\n\nexport default OrderTimeSelection;\n","import React from 'react';\nimport { ThemedScrollbars } from '@deriv/components';\nimport { observer } from 'mobx-react-lite';\nimport { localize } from 'Components/i18next';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport PaymentMethodCard from 'Components/payment-method-card';\nimport './sell-ad-payment-methods-list.scss';\n\nconst SellAdPaymentMethodsList = ({\n    is_only_horizontal = false,\n    is_scrollable = false,\n    onClickAdd,\n    onClickPaymentMethodCard,\n    p2p_advertiser_payment_methods,\n    selected_methods,\n}) => {\n    const style = {\n        borderColor: 'var(--brand-secondary)',\n        borderWidth: '2px',\n    };\n\n    // payment method order: Bank Transfer -> EWallets -> Others\n    const payment_method_order = { bank_transfer: 0, other: 2 };\n    const getPaymentMethodOrder = method => (!(method in payment_method_order) ? 1 : payment_method_order[method]);\n    const sortPaymentMethods = payment_methods_list => {\n        return payment_methods_list.sort((i, j) => getPaymentMethodOrder(i.method) - getPaymentMethodOrder(j.method));\n    };\n\n    return (\n        <ThemedScrollbars\n            className={classNames('sell-ad-payment-methods-list__container', {\n                'sell-ad-payment-methods-list__container--horizontal': is_only_horizontal,\n            })}\n            is_scrollbar_hidden\n            is_scrollable={is_scrollable}\n            is_only_horizontal={is_only_horizontal}\n        >\n            {p2p_advertiser_payment_methods &&\n                sortPaymentMethods(p2p_advertiser_payment_methods).map((payment_method, key) => (\n                    <PaymentMethodCard\n                        is_vertical_ellipsis_visible={false}\n                        key={key}\n                        medium\n                        onClick={() => onClickPaymentMethodCard(payment_method)}\n                        payment_method={payment_method}\n                        style={selected_methods.includes(payment_method.id) ? style : {}}\n                    />\n                ))}\n            <PaymentMethodCard is_add label={localize('Payment method')} medium onClickAdd={onClickAdd} />\n        </ThemedScrollbars>\n    );\n};\n\nSellAdPaymentMethodsList.propTypes = {\n    is_only_horizontal: PropTypes.bool,\n    is_scrollable: PropTypes.bool,\n    onClickAdd: PropTypes.func,\n    onClickPaymentMethodCard: PropTypes.func,\n    p2p_advertiser_payment_methods: PropTypes.array,\n    selected_methods: PropTypes.array,\n};\n\nexport default observer(SellAdPaymentMethodsList);\n","import React from 'react';\nimport { Dropdown, Icon } from '@deriv/components';\nimport { observer } from '@deriv/stores';\nimport { useDevice } from '@deriv-com/ui';\nimport { localize } from 'Components/i18next';\nimport { useModalManagerContext } from 'Components/modal-manager/modal-manager-context';\nimport { useStores } from 'Stores';\n\nconst BlockUserDropdown = () => {\n    const { isDesktop } = useDevice();\n    const { my_profile_store } = useStores();\n    const { showModal } = useModalManagerContext();\n\n    if (isDesktop) {\n        return (\n            <Dropdown\n                className='block-user-dropdown'\n                classNameLabel='block-user-dropdown--label'\n                is_align_text_left\n                list={my_profile_store.block_user_sort_list}\n                onChange={my_profile_store.handleChange}\n                placeholder={localize('Filter by')}\n                value={my_profile_store.selected_sort_value}\n            />\n        );\n    }\n\n    return (\n        <div\n            className='block-user-dropdown'\n            onClick={() => {\n                showModal({ key: 'BlockUserFilterModal' });\n            }}\n        >\n            <Icon icon='IcCashierSort' data_testid='dt_block_user_filter_icon' />\n        </div>\n    );\n};\n\nexport default observer(BlockUserDropdown);\n","import BlockUserDropdown from './block-user-dropdown';\nimport './block-user-dropdown.scss';\n\nexport default BlockUserDropdown;\n","import React from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { Icon, Text } from '@deriv/components';\nimport { Localize } from 'Components/i18next';\nimport { useDevice } from '@deriv-com/ui';\n\nconst BlockUserEmpty = () => {\n    const { isDesktop } = useDevice();\n\n    if (isDesktop) {\n        return (\n            <div className='block-user-empty' data-testid='dt_desktop_content'>\n                <Icon className='block-user-empty__icon' icon='IcEmptyBlockedAdvertisers' height={128} width={128} />\n                <Text className='block-user-empty__text' weight='bold'>\n                    <Localize i18n_default_text='No one to show here' />\n                </Text>\n            </div>\n        );\n    }\n\n    return (\n        <div className='block-user-empty__mobile-content'>\n            <Icon icon='IcEmptyBlockedAdvertisers' className='block-user-empty__icon' height={128} width={128} />\n            <Text className='block-user-empty__text' weight='bold'>\n                <Localize i18n_default_text='No one to show here' />\n            </Text>\n        </div>\n    );\n};\n\nexport default observer(BlockUserEmpty);\n","import BlockUserEmpty from './block-user-empty';\nimport './block-user-empty.scss';\n\nexport default BlockUserEmpty;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Button, Table, Text } from '@deriv/components';\nimport { routes } from '@deriv/shared';\nimport { observer } from '@deriv/stores';\nimport { Localize } from 'Components/i18next';\nimport UserAvatar from 'Components/user/user-avatar';\nimport { useStores } from 'Stores';\n\ntype TBlockUserRowProps = {\n    row: {\n        id: string;\n        is_blocked: number;\n        name: string;\n    };\n};\n\nconst BlockUserRow = ({ row: advertiser }: TBlockUserRowProps) => {\n    const { buy_sell_store, general_store, my_profile_store } = useStores();\n    const { onClickUnblock } = my_profile_store;\n    const { id, is_blocked, name } = advertiser;\n    const history = useHistory();\n\n    return (\n        <Table.Row className='block-user-row'>\n            <Table.Cell>\n                <div\n                    className={classNames('block-user-row__cell', {\n                        'block-user-row__cell--barred': general_store.is_barred,\n                    })}\n                    onClick={() => {\n                        if (!general_store.is_barred) {\n                            buy_sell_store.setSelectedAdState({\n                                advertiser_details: { id, name },\n                            });\n                            history.push({\n                                pathname: routes.p2p_advertiser_page,\n                                search: `?id=${id}`,\n                            });\n                        }\n                    }}\n                >\n                    <UserAvatar nickname={name} size={32} text_size='s' />\n                    <div className='block-user-row__cell-container'>\n                        <Text size='xs'>{name}</Text>\n                    </div>\n                </div>\n            </Table.Cell>\n            <Table.Cell className='block-user-row__button-group'>\n                {is_blocked ? (\n                    <Button\n                        className='block-user-row__button-group__unblock-button'\n                        secondary\n                        medium\n                        onClick={() => onClickUnblock(advertiser)}\n                    >\n                        <Localize i18n_default_text='Unblock' />\n                    </Button>\n                ) : (\n                    <Button\n                        className='block-user-row__button-group__block-button'\n                        alternate\n                        medium\n                        onClick={() => onClickUnblock(advertiser)}\n                    >\n                        <Localize i18n_default_text='Block' />\n                    </Button>\n                )}\n            </Table.Cell>\n        </Table.Row>\n    );\n};\n\nexport default observer(BlockUserRow);\n","import BlockUserRow from './block-user-row';\nimport './block-user-row.scss';\n\nexport default BlockUserRow;\n","import React from 'react';\nimport { InfiniteDataList, Loading, Table, Text } from '@deriv/components';\nimport { observer } from '@deriv/stores';\nimport { useDevice } from '@deriv-com/ui';\nimport { Localize } from 'Components/i18next';\nimport { useStores } from 'Stores';\nimport BlockUserEmpty from '../block-user-empty';\nimport BlockUserRow from './block-user-row';\n\nconst BlockUserTable = () => {\n    const { my_profile_store } = useStores();\n    const { isDesktop } = useDevice();\n\n    React.useEffect(() => {\n        my_profile_store.setTradePartnersList([]);\n        my_profile_store.getTradePartnersList({ startIndex: 0 }, true);\n        my_profile_store.setSearchTerm('');\n\n        return () => {\n            my_profile_store.setTradePartnersList([]);\n            my_profile_store.setSearchTerm('');\n            my_profile_store.setSearchResults([]);\n        };\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    if (my_profile_store.is_block_user_table_loading) {\n        return <Loading is_fullscreen={!isDesktop} />;\n    }\n\n    if (my_profile_store.search_term && my_profile_store.rendered_trade_partners_list.length === 0) {\n        return (\n            <Text align='center' className='block-user-table__text' weight={isDesktop ? 'bold' : 'normal'}>\n                <Localize i18n_default_text='There are no matching name.' />\n            </Text>\n        );\n    }\n\n    if (my_profile_store.rendered_trade_partners_list.length) {\n        return (\n            <Table className='block-user-table'>\n                <Table.Body className='block-user-table__body'>\n                    <InfiniteDataList\n                        data_list_className='block-use-table__data-list'\n                        has_filler\n                        has_more_items_to_load={my_profile_store.has_more_items_to_load}\n                        items={my_profile_store.rendered_trade_partners_list}\n                        keyMapperFn={item => item.id}\n                        loadMoreRowsFn={my_profile_store.getTradePartnersList}\n                        rowRenderer={props => <BlockUserRow {...props} />}\n                    />\n                </Table.Body>\n            </Table>\n        );\n    }\n\n    return <BlockUserEmpty />;\n};\n\nexport default observer(BlockUserTable);\n","import BlockUserTable from './block-user-table';\nimport './block-user-table.scss';\n\nexport default BlockUserTable;\n","import React from 'react';\nimport { Icon, MobileFullPageModal, Text } from '@deriv/components';\nimport { observer } from '@deriv/stores';\nimport { useDevice } from '@deriv-com/ui';\nimport { Localize, localize } from 'Components/i18next';\nimport { my_profile_tabs } from 'Constants/my-profile-tabs';\nimport { useStores } from 'Stores';\n\ntype TBlockUserTableErrorProps = {\n    error_message: string;\n};\n\nconst BlockUserTableError = ({ error_message }: TBlockUserTableErrorProps) => {\n    const { isDesktop } = useDevice();\n    const { my_profile_store } = useStores();\n\n    const BlockUserTableErrorIcon = (\n        <React.Fragment>\n            <Icon icon='IcBlockedAdvertisersBarred' className='block-user-table-error__icon' height={128} width={128} />\n            <Text align='center' className='block-user-table-error__text' weight='bold'>\n                <Localize i18n_default_text={error_message} />\n            </Text>\n        </React.Fragment>\n    );\n\n    if (isDesktop) {\n        return <div className='block-user-table-error'>{BlockUserTableErrorIcon}</div>;\n    }\n\n    return (\n        <MobileFullPageModal\n            body_className='block-user-table-error'\n            height_offset='80px'\n            is_modal_open\n            page_header_text={localize('Blocked advertisers')}\n            pageHeaderReturnFn={() => my_profile_store.setActiveTab(my_profile_tabs.MY_STATS)}\n        >\n            {BlockUserTableErrorIcon}\n        </MobileFullPageModal>\n    );\n};\n\nexport default observer(BlockUserTableError);\n","import BlockUserTableError from './block-user-table-error';\nimport './block-user-table-error.scss';\n\nexport default BlockUserTableError;\n","import React from 'react';\nimport debounce from 'lodash.debounce';\nimport { Loading, SearchBox, Text } from '@deriv/components';\nimport { observer } from '@deriv/stores';\nimport { useDevice } from '@deriv-com/ui';\nimport { Localize, localize } from 'Components/i18next';\nimport { api_error_codes } from 'Constants/api-error-codes';\nimport { useStores } from 'Stores';\nimport BlockUserDropdown from '../block-user-dropdown';\nimport BlockUserTable from '../block-user-table';\nimport BlockUserTableError from '../block-user-table/block-user-table-error';\n\nconst BlockUserList = observer(() => {\n    const { general_store, my_profile_store } = useStores();\n    const { isDesktop } = useDevice();\n\n    const debouncedGetSearchedTradePartners = debounce((search: string) => {\n        my_profile_store.setSearchTerm(search.trim());\n        my_profile_store.getSearchedTradePartners();\n    }, 200);\n\n    const onSearch = (search: string) => {\n        // Ensures that trade partners list is not reloaded if search term entered is the same\n        if (my_profile_store.search_term !== search.trim()) {\n            my_profile_store.setIsBlockUserTableLoading(true);\n            debouncedGetSearchedTradePartners(search);\n        }\n    };\n\n    if (\n        (general_store?.error_code === api_error_codes.TEMPORARY_BAR ||\n            general_store?.error_code === api_error_codes.PERMISSION_DENIED) &&\n        general_store.block_unblock_user_error\n    ) {\n        return <BlockUserTableError error_message={general_store.block_unblock_user_error} />;\n    }\n\n    if (my_profile_store.is_loading) {\n        return <Loading is_fullscreen={!isDesktop} />;\n    }\n\n    return (\n        <div className='block-user-list'>\n            {!my_profile_store.should_show_block_user_list_header && (\n                <React.Fragment>\n                    <Text className='block-user-list__text' size='xs'>\n                        <Localize i18n_default_text=\"When you block someone, you won't see their ads, and they can't see yours. Your ads will be hidden from their search results, too.\" />\n                    </Text>\n                    <div className='block-user-list__header'>\n                        <SearchBox\n                            onClear={my_profile_store.onClear}\n                            onSearch={onSearch}\n                            placeholder={localize('Search by nickname')}\n                        />\n                        <BlockUserDropdown />\n                    </div>\n                </React.Fragment>\n            )}\n            <BlockUserTable />\n        </div>\n    );\n});\n\nexport default BlockUserList;\n","import BlockUserList from './block-user-list';\nimport './block-user-list.scss';\n\nexport default BlockUserList;\n","import React from 'react';\nimport { reaction } from 'mobx';\nimport { MobileFullPageModal } from '@deriv/components';\nimport { observer } from '@deriv/stores';\nimport { useDevice } from '@deriv-com/ui';\nimport { localize } from 'Components/i18next';\nimport { useModalManagerContext } from 'Components/modal-manager/modal-manager-context';\nimport { api_error_codes } from 'Constants/api-error-codes';\nimport { my_profile_tabs } from 'Constants/my-profile-tabs';\nimport { useStores } from 'Stores';\nimport { getErrorMessage, getErrorModalTitle } from 'Utils/block-user';\nimport BlockUserList from './block-user-list';\n\nconst BlockUser = () => {\n    const { isDesktop } = useDevice();\n    const { buy_sell_store, general_store, my_profile_store } = useStores();\n    const { block_unblock_user_error, error_code } = general_store;\n    const { is_blocked, name } = my_profile_store.selected_trade_partner;\n    const { hideModal, showModal, useRegisterModalProps } = useModalManagerContext();\n    const is_invalid_advertiser_id = error_code === api_error_codes.INVALID_ADVERTISER_ID;\n\n    reaction(\n        () => block_unblock_user_error,\n        () => {\n            if (\n                block_unblock_user_error &&\n                general_store.active_index === 3 &&\n                !buy_sell_store.show_advertiser_page &&\n                error_code !== api_error_codes.TEMPORARY_BAR &&\n                error_code !== api_error_codes.PERMISSION_DENIED\n            ) {\n                showModal({\n                    key: 'ErrorModal',\n                    props: {\n                        error_message: getErrorMessage(\n                            block_unblock_user_error,\n                            is_blocked,\n                            is_invalid_advertiser_id,\n                            name\n                        ),\n                        error_modal_button_text: localize('Got it'),\n                        error_modal_title: getErrorModalTitle(is_invalid_advertiser_id, name),\n                        has_close_icon: false,\n                        onClose: () => {\n                            general_store.setBlockUnblockUserError('');\n                            hideModal();\n                        },\n                    },\n                });\n                general_store.setBlockUnblockUserError(null);\n            }\n        },\n        { fireImmediately: true }\n    );\n\n    useRegisterModalProps({\n        key: 'BlockUserModal',\n        props: {\n            advertiser_name: name,\n            is_advertiser_blocked: !!is_blocked,\n            onCancel: hideModal,\n            onSubmit: my_profile_store.onSubmit,\n        },\n    });\n\n    if (isDesktop) {\n        return <BlockUserList />;\n    }\n\n    return (\n        <MobileFullPageModal\n            body_className='block-user__modal'\n            height_offset='80px'\n            is_flex\n            is_modal_open={my_profile_store.active_tab === my_profile_tabs.MY_COUNTERPARTIES}\n            onClickClose={() => {\n                // do nothing\n            }}\n            page_header_className='buy-sell__modal-header'\n            page_header_text={localize('My counterparties')}\n            pageHeaderReturnFn={() => my_profile_store.setActiveTab(my_profile_tabs.MY_STATS)}\n        >\n            <BlockUserList />\n        </MobileFullPageModal>\n    );\n};\n\nexport default observer(BlockUser);\n","import BlockUser from './block-user';\nimport './block-user.scss';\n\nexport default BlockUser;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Field, Form, Formik } from 'formik';\nimport { Observer } from 'mobx-react-lite';\nimport { Button, Input, Loading, MobileFullPageModal, Text } from '@deriv/components';\nimport { observer } from '@deriv/stores';\nimport { useDevice } from '@deriv-com/ui';\nimport { Localize, localize } from 'Components/i18next';\nimport SectionError from 'Components/section-error';\nimport { my_profile_tabs } from 'Constants/my-profile-tabs';\nimport { useStores } from 'Stores';\n\nconst MyProfileForm = () => {\n    const { isDesktop } = useDevice();\n    const { general_store, my_profile_store } = useStores();\n\n    const content = (\n        <Formik\n            enableReinitialize\n            initialValues={{\n                contact_info: general_store.contact_info,\n                default_advert_description: general_store.default_advert_description,\n            }}\n            onSubmit={my_profile_store.handleSubmit}\n            validate={my_profile_store.validateForm}\n        >\n            {({ dirty, errors, isSubmitting, isValid }) => {\n                return (\n                    <Form className='my-profile-form__form'>\n                        <Field name='contact_info'>\n                            {({ field }) => (\n                                <Input\n                                    {...field}\n                                    className='my-profile-form__textarea'\n                                    error={errors.contact_info}\n                                    has_character_counter\n                                    initial_character_count={general_store.contact_info.length}\n                                    label={\n                                        <Text color='less-prominent' size='xs'>\n                                            <Localize i18n_default_text='Contact details' />\n                                        </Text>\n                                    }\n                                    max_characters={300}\n                                    type='textarea'\n                                />\n                            )}\n                        </Field>\n                        <Field name='default_advert_description'>\n                            {({ field }) => (\n                                <Input\n                                    {...field}\n                                    className='my-profile-form__textarea'\n                                    error={errors.default_advert_description}\n                                    has_character_counter\n                                    hint={localize('This information will be visible to everyone.')}\n                                    initial_character_count={general_store?.default_advert_description?.length}\n                                    is_relative_hint\n                                    max_characters={300}\n                                    label={\n                                        <Text color='less-prominent' size='xs'>\n                                            <Localize i18n_default_text='Instructions' />\n                                        </Text>\n                                    }\n                                    type='textarea'\n                                />\n                            )}\n                        </Field>\n                        <div className='my-profile-form__footer'>\n                            <Observer>\n                                {() => (\n                                    <React.Fragment>\n                                        <SectionError message={my_profile_store.form_error} />\n                                        <Button\n                                            className={classNames('my-profile-form__footer-button', {\n                                                'dc-btn--green': my_profile_store.is_submit_success,\n                                            })}\n                                            has_effect\n                                            is_disabled={!dirty || isSubmitting || !isValid}\n                                            is_submit_success={my_profile_store.is_submit_success}\n                                            large\n                                            primary\n                                        >\n                                            <Localize i18n_default_text='Save' />\n                                        </Button>\n                                    </React.Fragment>\n                                )}\n                            </Observer>\n                        </div>\n                    </Form>\n                );\n            }}\n        </Formik>\n    );\n\n    if (my_profile_store.is_loading) {\n        return <Loading is_fullscreen={false} />;\n    }\n\n    if (isDesktop) {\n        return <div className='my-profile-form'>{content}</div>;\n    }\n\n    return (\n        <MobileFullPageModal\n            className='my-profile-form'\n            is_modal_open={my_profile_store.active_tab === my_profile_tabs.AD_TEMPLATE}\n            onClickClose={() => {\n                // do nothing\n            }}\n            pageHeaderReturnFn={() => my_profile_store.setActiveTab(my_profile_tabs.MY_STATS)}\n            page_header_text={localize('Ad details')}\n        >\n            {content}\n        </MobileFullPageModal>\n    );\n};\n\nexport default observer(MyProfileForm);\n","import MyProfileForm from './my-profile-form';\nimport './my-profile-form.scss';\n\nexport default MyProfileForm;\n","import React from 'react';\nimport { Money, Text } from '@deriv/components';\nimport { observer, useStore } from '@deriv/stores';\nimport { useDevice } from '@deriv-com/ui';\nimport { Localize } from 'Components/i18next';\nimport { useStores } from 'Stores';\nimport { getTextSize } from 'Utils/responsive';\n\nconst MyProfileStatsTable = () => {\n    const {\n        client: { currency },\n    } = useStore();\n    const { isMobile } = useDevice();\n\n    const { general_store } = useStores();\n\n    const {\n        buy_completion_rate,\n        buy_orders_amount,\n        buy_orders_count = 0,\n        buy_time_avg,\n        partner_count,\n        release_time_avg,\n        sell_completion_rate,\n        sell_orders_amount,\n        sell_orders_count = 0,\n        total_orders_count = 0,\n        total_turnover,\n    } = general_store.advertiser_info;\n\n    const [show_lifetime_turnover_value, setShowLifetimeTurnoverValue] = React.useState(false);\n    const [show_lifetime_order_value, setShowLifetimeOrderValue] = React.useState(false);\n\n    const avg_buy_time_in_minutes = buy_time_avg > 60 ? Math.round(buy_time_avg / 60) : '1';\n    const avg_release_time_in_minutes = release_time_avg > 60 ? Math.round(release_time_avg / 60) : '1';\n    const textSize = getTextSize('xxxs', 'xs', isMobile);\n\n    const TextItalic = (\n        <Text key={0} className='my-profile-stats-table--italic' color='less-prominent' size={textSize} />\n    );\n\n    const stats_strings = [\n        {\n            text_1: <Localize i18n_default_text='Buy completion  <0>30d</0>' components={[TextItalic]} />,\n            text_2: buy_completion_rate ? `${buy_completion_rate}% (${buy_orders_count})` : '-',\n        },\n        {\n            text_1: <Localize i18n_default_text='Sell completion  <0>30d</0>' components={[TextItalic]} />,\n            text_2: sell_completion_rate ? `${sell_completion_rate}% (${sell_orders_count})` : '-',\n        },\n        {\n            text_1: <Localize i18n_default_text='Avg pay time  <0>30d</0>' components={[TextItalic]} />,\n            text_2: buy_time_avg ? (\n                <span>\n                    {avg_buy_time_in_minutes === '1' && '< '}\n                    <Localize\n                        i18n_default_text='{{avg_buy_time_in_minutes}} min'\n                        values={{ avg_buy_time_in_minutes }}\n                    />\n                </span>\n            ) : (\n                '-'\n            ),\n        },\n        {\n            text_1: <Localize i18n_default_text='Avg release time  <0>30d</0>' components={[TextItalic]} />,\n            text_2: release_time_avg ? (\n                <span>\n                    {avg_release_time_in_minutes === '1' && '< '}\n                    <Localize\n                        i18n_default_text='{{avg_release_time_in_minutes}} min'\n                        values={{ avg_release_time_in_minutes }}\n                    />\n                </span>\n            ) : (\n                '-'\n            ),\n        },\n        {\n            text_1: (\n                <Localize\n                    i18n_default_text='Trade volume  <0>30d</0> | <1>lifetime</1>'\n                    components={[\n                        <Text\n                            className='my-profile-stats-table--pointer'\n                            color={show_lifetime_turnover_value ? 'loss-danger' : 'less-prominent'}\n                            key={0}\n                            onClick={() => setShowLifetimeTurnoverValue(!show_lifetime_turnover_value)}\n                            size={textSize}\n                        />,\n                        <Text\n                            className='my-profile-stats-table--pointer'\n                            color={show_lifetime_turnover_value ? 'less-prominent' : 'loss-danger'}\n                            key={0}\n                            onClick={() => setShowLifetimeTurnoverValue(!show_lifetime_turnover_value)}\n                            size={textSize}\n                        />,\n                    ]}\n                />\n            ),\n            text_2: show_lifetime_turnover_value ? (\n                <Money amount={total_turnover} currency={currency} show_currency />\n            ) : (\n                <Money\n                    amount={Number(buy_orders_amount) + Number(sell_orders_amount)}\n                    currency={currency}\n                    show_currency\n                />\n            ),\n        },\n        {\n            text_1: (\n                <Localize\n                    i18n_default_text='Total orders  <0>30d</0> | <1>lifetime</1>'\n                    components={[\n                        <Text\n                            key={0}\n                            className='my-profile-stats-table--pointer'\n                            color={show_lifetime_order_value ? 'loss-danger' : 'less-prominent'}\n                            onClick={() => setShowLifetimeOrderValue(!show_lifetime_order_value)}\n                            size={textSize}\n                        />,\n                        <Text\n                            key={0}\n                            className='my-profile-stats-table--pointer'\n                            color={show_lifetime_order_value ? 'less-prominent' : 'loss-danger'}\n                            onClick={() => setShowLifetimeOrderValue(!show_lifetime_order_value)}\n                            size={textSize}\n                        />,\n                    ]}\n                />\n            ),\n            text_2: show_lifetime_order_value\n                ? total_orders_count\n                : Number(buy_orders_count) + Number(sell_orders_count),\n        },\n        {\n            text_1: <Localize i18n_default_text='Trade partners' />,\n            text_2: partner_count || '0',\n        },\n    ];\n\n    return (\n        <div className='my-profile-stats-table'>\n            {stats_strings.map((stat_string, key) => (\n                <div className='my-profile-stats-table__cell' key={key}>\n                    <Text as='p' color='less-prominent' size={textSize}>\n                        {stat_string.text_1}\n                    </Text>\n                    <Text as='p' color='prominent' size='xs' weight='bold'>\n                        {stat_string.text_2}\n                    </Text>\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default observer(MyProfileStatsTable);\n","import MyProfileStatsTable from './my-profile-stats-table';\nimport './my-profile-stats-table.scss';\n\nexport default MyProfileStatsTable;\n","import React from 'react';\nimport { Text, ToggleSwitch } from '@deriv/components';\nimport { observer } from '@deriv/stores';\nimport { useDevice } from '@deriv-com/ui';\nimport { Localize } from 'Components/i18next';\nimport { useStores } from 'Stores';\nimport { getTextSize } from 'Utils/responsive';\n\nconst MyProfilePrivacy = () => {\n    const { general_store, my_profile_store } = useStores();\n    const { isMobile } = useDevice();\n\n    return (\n        <div className='my-profile-privacy'>\n            <div className='my-profile-privacy__toggle-container'>\n                <Text className='my-profile-privacy__label' color='prominent' size={getTextSize('xxs', 'xs', isMobile)}>\n                    <Localize i18n_default_text='Show my real name' />\n                </Text>\n                <Text color='less-prominent' size='xxxs'>\n                    {`${my_profile_store.full_name}`}\n                </Text>\n            </div>\n            <ToggleSwitch\n                id='my-profile-privacy__toggle'\n                classNameLabel='my-profile-privacy__toggle'\n                is_enabled={general_store.should_show_real_name}\n                handleToggle={my_profile_store.handleToggle}\n            />\n        </div>\n    );\n};\n\nexport default observer(MyProfilePrivacy);\n","import MyProfilePrivacy from './my-profile-privacy';\nimport './my-profile-privacy.scss';\n\nexport default MyProfilePrivacy;\n","import React from 'react';\nimport { Icon, MobileFullPageModal, Text } from '@deriv/components';\nimport { observer } from '@deriv/stores';\nimport { useDevice } from '@deriv-com/ui';\nimport { Localize, localize } from 'Components/i18next';\nimport SeparatorContainerLine from 'Components/separator-container-line';\nimport { my_profile_tabs } from 'Constants/my-profile-tabs';\nimport { useStores } from 'Stores';\nimport MyProfileStatsTable from './my-profile-stats-table';\nimport MyProfilePrivacy from './my-profile-privacy';\n\nconst MyProfileStats = () => {\n    const { isDesktop } = useDevice();\n    const { my_profile_store } = useStores();\n    const [should_show_stats_and_ratings, setShouldShowStatsAndRatings] = React.useState(false);\n    const tabs = [\n        {\n            default_text: 'Stats',\n            onClick: () => setShouldShowStatsAndRatings(true),\n        },\n        {\n            default_text: 'Payment methods',\n            onClick: () => my_profile_store.setActiveTab(my_profile_tabs.PAYMENT_METHODS),\n        },\n        {\n            default_text: 'Ad details',\n            onClick: () => my_profile_store.setActiveTab(my_profile_tabs.AD_TEMPLATE),\n        },\n        {\n            default_text: 'My counterparties',\n            onClick: () => my_profile_store.setActiveTab(my_profile_tabs.MY_COUNTERPARTIES),\n        },\n    ];\n\n    if (isDesktop) {\n        return (\n            <React.Fragment>\n                <MobileFullPageModal\n                    height_offset='80px'\n                    is_flex\n                    is_modal_open={should_show_stats_and_ratings}\n                    onClickClose={() => {\n                        // do nothing\n                    }}\n                    page_header_text={localize('Stats')}\n                    pageHeaderReturnFn={() => setShouldShowStatsAndRatings(false)}\n                >\n                    <MyProfileStatsTable />\n                </MobileFullPageModal>\n                <MyProfileStatsTable />\n            </React.Fragment>\n        );\n    }\n    return (\n        <React.Fragment>\n            <MobileFullPageModal\n                height_offset='80px'\n                is_flex\n                is_modal_open={should_show_stats_and_ratings}\n                onClickClose={() => {\n                    // do nothing\n                }}\n                page_header_text={localize('Stats')}\n                pageHeaderReturnFn={() => setShouldShowStatsAndRatings(false)}\n            >\n                <MyProfileStatsTable />\n            </MobileFullPageModal>\n            <SeparatorContainerLine className='my-profile-stats__separator' />\n            <MyProfilePrivacy />\n            <SeparatorContainerLine className='my-profile-stats__separator' />\n            {tabs.map((tab, key) => {\n                return (\n                    <React.Fragment key={key}>\n                        <div className='my-profile-stats__navigation' onClick={tab.onClick}>\n                            <Text color='prominent' size='xxs'>\n                                <Localize i18n_default_text={tab.default_text} />\n                            </Text>\n                            <Icon icon='IcChevronRight' />\n                        </div>\n                        {key !== tabs.length - 1 && <SeparatorContainerLine className='my-profile-stats__separator' />}\n                    </React.Fragment>\n                );\n            })}\n        </React.Fragment>\n    );\n};\n\nexport default observer(MyProfileStats);\n","import MyProfileStats from './my-profile-stats';\nimport './my-profile-stats.scss';\n\nexport default MyProfileStats;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Field, Form, FormikValues } from 'formik';\nimport { Button, Input, Loading, Text } from '@deriv/components';\nimport { useP2PAdvertiserPaymentMethods } from '@deriv/hooks';\nimport { isEmptyObject } from '@deriv/shared';\nimport { observer } from '@deriv/stores';\nimport { useDevice } from '@deriv-com/ui';\nimport { useStores } from 'Stores';\nimport { Localize, localize } from 'Components/i18next';\nimport { useModalManagerContext } from 'Components/modal-manager/modal-manager-context';\nimport ModalForm from 'Components/modal-manager/modal-form';\nimport PageReturn from 'Components/page-return';\nimport { TPaymentMethod } from 'Types/my-profile.types';\n\nconst EditPaymentMethodForm = () => {\n    const { general_store, my_profile_store } = useStores();\n    const { isDesktop } = useDevice();\n    const { showModal } = useModalManagerContext();\n    const { mutation, update } = useP2PAdvertiserPaymentMethods();\n    const { error: mutation_error, reset, status: mutation_status } = mutation;\n    const {\n        payment_method_to_edit,\n        setAddPaymentMethodErrorMessage,\n        setPaymentMethodToEdit,\n        setSelectedPaymentMethod,\n        setSelectedPaymentMethodDisplayName,\n        setShouldShowEditPaymentMethodForm,\n        validatePaymentMethodFields,\n    } = my_profile_store;\n\n    const updatePaymentMethod = values => {\n        update(payment_method_to_edit.id, values);\n    };\n\n    type FieldsInitialValues = {\n        [key: string]: TPaymentMethod;\n    };\n\n    const fields_initial_values: FieldsInitialValues = {};\n\n    if (payment_method_to_edit.fields) {\n        Object.keys(payment_method_to_edit.fields).forEach((key: string) => {\n            fields_initial_values[key] = payment_method_to_edit.fields[key].value;\n        });\n    }\n\n    React.useEffect(() => {\n        return () => {\n            setSelectedPaymentMethod('');\n            setSelectedPaymentMethodDisplayName('');\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    React.useEffect(() => {\n        if (mutation_status === 'success') {\n            setShouldShowEditPaymentMethodForm(false);\n        } else if (mutation_status === 'error') {\n            setAddPaymentMethodErrorMessage(mutation_error.message);\n            showModal({ key: 'AddPaymentMethodErrorModal', props: {} });\n            general_store.formik_ref.setSubmitting(false);\n            reset();\n        }\n    }, [mutation_error, mutation_status, reset]);\n\n    if (isEmptyObject(payment_method_to_edit)) {\n        return <Loading is_fullscreen={false} />;\n    }\n\n    return (\n        <ModalForm\n            enableReinitialize\n            initialValues={fields_initial_values}\n            onSubmit={updatePaymentMethod}\n            validate={validatePaymentMethodFields}\n        >\n            {({ dirty, handleChange, isSubmitting, errors }: FormikValues) => {\n                return (\n                    <React.Fragment>\n                        {isDesktop && (\n                            <PageReturn\n                                onClick={() => {\n                                    if (dirty) {\n                                        showModal({\n                                            key: 'CancelEditPaymentMethodModal',\n                                            props: {},\n                                        });\n                                    } else {\n                                        setShouldShowEditPaymentMethodForm(false);\n                                    }\n                                }}\n                                page_title={localize('Edit payment method')}\n                            />\n                        )}\n                        <Form className='edit-payment-method-form__form'>\n                            <div className='edit-payment-method-form__form-wrapper'>\n                                <Field name='choose_payment_method'>\n                                    {({ field }: FormikValues) => (\n                                        <Input\n                                            {...field}\n                                            disabled\n                                            label={\n                                                <Text color='prominent' size='xs'>\n                                                    <Localize i18n_default_text='Choose your payment method' />\n                                                </Text>\n                                            }\n                                            required\n                                            type='field'\n                                            value={payment_method_to_edit.display_name}\n                                        />\n                                    )}\n                                </Field>\n                                {payment_method_to_edit.fields &&\n                                    Object.keys(payment_method_to_edit.fields).map(payment_method_key => {\n                                        const current_field = payment_method_to_edit.fields[payment_method_key];\n\n                                        return (\n                                            <Field\n                                                name={payment_method_key}\n                                                id={payment_method_key}\n                                                key={payment_method_key}\n                                            >\n                                                {({ field }: FormikValues) => {\n                                                    return (\n                                                        <Input\n                                                            {...field}\n                                                            className={classNames({\n                                                                'edit-payment-method-form__payment-method-field':\n                                                                    !errors[payment_method_key]?.length,\n                                                                'edit-payment-method-form__payment-method-field--text-area':\n                                                                    payment_method_key === 'instructions',\n                                                            })}\n                                                            data-lpignore='true'\n                                                            error={errors[payment_method_key]}\n                                                            label={current_field.display_name}\n                                                            name={payment_method_key}\n                                                            onChange={handleChange}\n                                                            required={!!current_field.required}\n                                                            type={\n                                                                payment_method_key === 'instructions'\n                                                                    ? 'textarea'\n                                                                    : current_field.type\n                                                            }\n                                                            value={field.value || ''}\n                                                        />\n                                                    );\n                                                }}\n                                            </Field>\n                                        );\n                                    })}\n                            </div>\n                            <div\n                                className={classNames('edit-payment-method-form__buttons', {\n                                    'edit-payment-method-form__buttons--separated-footer':\n                                        general_store.active_index === 3 && !isDesktop,\n                                    'edit-payment-method-form__buttons--separated-footer-profile':\n                                        general_store.active_index === 3 && isDesktop,\n                                })}\n                            >\n                                <Button\n                                    secondary\n                                    large\n                                    onClick={() => {\n                                        if (dirty) {\n                                            showModal({\n                                                key: 'CancelEditPaymentMethodModal',\n                                                props: {},\n                                            });\n                                        } else {\n                                            setPaymentMethodToEdit(null);\n                                            setShouldShowEditPaymentMethodForm(false);\n                                        }\n                                    }}\n                                    type='button'\n                                >\n                                    <Localize i18n_default_text='Cancel' />\n                                </Button>\n                                <Button\n                                    className='edit-payment-method-form__buttons--add'\n                                    primary\n                                    large\n                                    is_disabled={isSubmitting || !dirty || !!Object.keys(errors)?.length}\n                                >\n                                    <Localize i18n_default_text='Save changes' />\n                                </Button>\n                            </div>\n                        </Form>\n                    </React.Fragment>\n                );\n            }}\n        </ModalForm>\n    );\n};\n\nexport default observer(EditPaymentMethodForm);\n","import EditPaymentMethodForm from './edit-payment-method-form';\nimport './edit-payment-method-form.scss';\n\nexport default EditPaymentMethodForm;\n","import React from 'react';\nimport { Icon, MobileFullPageModal, Text, Button } from '@deriv/components';\nimport { observer } from '@deriv/stores';\nimport { useDevice } from '@deriv-com/ui';\nimport { my_profile_tabs } from 'Constants/my-profile-tabs';\nimport { Localize, localize } from 'Components/i18next';\nimport { useStores } from 'Stores';\n\nconst PaymentMethodsEmpty = () => {\n    const { isDesktop } = useDevice();\n    const { my_profile_store } = useStores();\n\n    const payment_method_empty_icon = (\n        <React.Fragment>\n            <Icon icon='IcPaymentMethodsWallet' className='payment-methods-empty__icon' height={159} width={256} />\n            <Text className='payment-methods-empty__text' weight='bold'>\n                <Localize i18n_default_text='You haven’t added any payment methods yet' />\n            </Text>\n            <Text>\n                <Localize i18n_default_text='Hit the button below to add payment methods.' />\n            </Text>\n            <Button\n                className='payment-methods-empty__button'\n                has_effect\n                large\n                primary\n                onClick={my_profile_store.showAddPaymentMethodForm}\n                text={localize('Add payment methods')}\n            />\n        </React.Fragment>\n    );\n\n    if (isDesktop) {\n        return <div className='payment-methods-empty'>{payment_method_empty_icon}</div>;\n    }\n\n    return (\n        <MobileFullPageModal\n            body_className='payment-methods-list__modal'\n            height_offset='80px'\n            is_flex\n            is_modal_open\n            onClickClose={() => {\n                // do nothing\n            }}\n            page_header_text={localize('Payment methods')}\n            pageHeaderReturnFn={() => my_profile_store.setActiveTab(my_profile_tabs.MY_STATS)}\n        >\n            {payment_method_empty_icon}\n        </MobileFullPageModal>\n    );\n};\n\nexport default observer(PaymentMethodsEmpty);\n","import PaymentMethodsEmpty from './payment-methods-empty';\nimport './payment-methods-empty.scss';\n\nexport default PaymentMethodsEmpty;\n","import React from 'react';\nimport { observer } from '@deriv/stores';\nimport { Button, Loading, MobileFullPageModal, Text, ThemedScrollbars } from '@deriv/components';\nimport { useP2PAdvertiserPaymentMethods } from '@deriv/hooks';\nimport { useDevice } from '@deriv-com/ui';\nimport { useStores } from 'Stores';\nimport { Localize, localize } from 'Components/i18next';\nimport { useModalManagerContext } from 'Components/modal-manager/modal-manager-context';\nimport PaymentMethodCard from 'Components/payment-method-card';\nimport ScrollbarWrapper from 'Components/scrollbar-wrapper';\nimport { my_profile_tabs } from 'Constants/my-profile-tabs';\nimport { TPaymentMethod } from 'Types/my-profile.types';\n\nconst PaymentMethodsList = () => {\n    const { data: advertiser_payment_methods, isRefetching } = useP2PAdvertiserPaymentMethods();\n    const { isDesktop } = useDevice();\n    const { isCurrentModal } = useModalManagerContext();\n    const { my_profile_store } = useStores();\n\n    const should_show_loading_screen =\n        !advertiser_payment_methods || (isRefetching && !isCurrentModal('DeletePaymentMethodConfirmationModal'));\n\n    type TTypeToTitleMapper = {\n        [key: string]: string;\n    };\n\n    const type_to_title_mapper: TTypeToTitleMapper = {\n        bank: localize('Bank Transfers'),\n        ewallet: localize('E-wallets'),\n        other: localize('Others'),\n    };\n\n    React.useEffect(() => {\n        my_profile_store.setPaymentMethodToDelete(null);\n        my_profile_store.setPaymentMethodToEdit(null);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const add_new_button = (\n        <Button\n            className='payment-methods-list__button'\n            large\n            onClick={() => my_profile_store.setShouldShowAddPaymentMethodForm(true)}\n            primary\n        >\n            <Localize i18n_default_text='Add new' />\n        </Button>\n    );\n\n    if (should_show_loading_screen) return <Loading is_fullscreen={false} />;\n\n    if (isDesktop) {\n        return (\n            <ScrollbarWrapper height='39rem'>\n                <div className='payment-methods-list'>\n                    {add_new_button}\n                    <div className='payment-methods-list__list-container'>\n                        {advertiser_payment_methods &&\n                            Object.keys(type_to_title_mapper).map(key => {\n                                const current_title = type_to_title_mapper[key];\n                                const payment_methods = advertiser_payment_methods.filter(\n                                    payment_method => payment_method.type === key\n                                );\n\n                                if (!payment_methods.length) return null;\n\n                                return (\n                                    <React.Fragment key={key}>\n                                        <Text className='payment-methods-list__list-header' size='xs' weight='bold'>\n                                            {current_title}\n                                        </Text>\n                                        <div className='payment-methods-list__list-body'>\n                                            {payment_methods.map((each_payment_method: TPaymentMethod, key: number) => (\n                                                <PaymentMethodCard\n                                                    key={`${key}__${each_payment_method.id}`}\n                                                    large\n                                                    payment_method={each_payment_method}\n                                                    show_payment_method_name={false}\n                                                />\n                                            ))}\n                                        </div>\n                                    </React.Fragment>\n                                );\n                            })}\n                    </div>\n                </div>\n            </ScrollbarWrapper>\n        );\n    }\n\n    return (\n        <ScrollbarWrapper height='39rem'>\n            <MobileFullPageModal\n                body_className='payment-methods-list__modal'\n                height_offset='80px'\n                is_flex\n                is_modal_open\n                onClickClose={() => {\n                    // do nothing\n                }}\n                page_header_text={localize('Payment methods')}\n                pageHeaderReturnFn={() => my_profile_store.setActiveTab(my_profile_tabs.MY_STATS)}\n                page_footer_className='payment-methods-list__modal--footer'\n                renderPageFooterChildren={() => add_new_button}\n            >\n                <div className='payment-methods-list__list-container'>\n                    {advertiser_payment_methods &&\n                        Object.keys(type_to_title_mapper).map((key: string) => {\n                            const current_title = type_to_title_mapper[key];\n                            const payment_methods = advertiser_payment_methods.filter(\n                                payment_method => payment_method.type === key\n                            );\n\n                            if (!payment_methods.length) return null;\n\n                            return (\n                                <React.Fragment key={key}>\n                                    <Text className='payment-methods-list__list-header' size='xs' weight='bold'>\n                                        {current_title}\n                                    </Text>\n                                    <ThemedScrollbars\n                                        className='payment-methods-list__list-horizontal'\n                                        has_horizontal\n                                        is_only_horizontal\n                                        is_scrollbar_hidden\n                                    >\n                                        {payment_methods.map((each_payment_method: TPaymentMethod, key: number) => (\n                                            <PaymentMethodCard\n                                                key={`${key}__${each_payment_method.id}`}\n                                                payment_method={each_payment_method}\n                                                small\n                                                show_payment_method_name={false}\n                                            />\n                                        ))}\n                                    </ThemedScrollbars>\n                                </React.Fragment>\n                            );\n                        })}\n                </div>\n            </MobileFullPageModal>\n        </ScrollbarWrapper>\n    );\n};\n\nexport default observer(PaymentMethodsList);\n","import PaymentMethodsList from './payment-methods-list';\nimport './payment-methods-list.scss';\n\nexport default PaymentMethodsList;\n","import React from 'react';\nimport { Loading } from '@deriv/components';\nimport { useP2PAdvertiserPaymentMethods } from '@deriv/hooks';\nimport { observer } from '@deriv/stores';\nimport { useDevice } from '@deriv-com/ui';\nimport { useStores } from 'Stores';\nimport AddPaymentMethod from 'Components/add-payment-method';\nimport EditPaymentMethodForm from './edit-payment-method-form';\nimport PaymentMethodsEmpty from './payment-methods-empty';\nimport PaymentMethodsList from './payment-methods-list';\n\nconst PaymentMethods = () => {\n    const { my_profile_store } = useStores();\n    const { isDesktop } = useDevice();\n    const { data: p2p_advertiser_payment_methods, isRefetching } = useP2PAdvertiserPaymentMethods();\n\n    React.useEffect(() => {\n        my_profile_store.setIsLoading(true);\n        my_profile_store.getAdvertiserPaymentMethods();\n        my_profile_store.getPaymentMethodsList();\n        my_profile_store.setShouldShowAddPaymentMethodForm(false);\n        my_profile_store.setShouldShowEditPaymentMethodForm(false);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    if (my_profile_store.is_loading) {\n        return <Loading is_fullscreen={!isDesktop} />;\n    } else if (my_profile_store.should_show_add_payment_method_form) {\n        return <AddPaymentMethod />;\n    } else if (!p2p_advertiser_payment_methods?.length && !isRefetching) {\n        return <PaymentMethodsEmpty />;\n    } else if (my_profile_store.should_show_edit_payment_method_form) {\n        return <EditPaymentMethodForm />;\n    }\n\n    return <PaymentMethodsList />;\n};\n\nexport default observer(PaymentMethods);\n","import PaymentMethods from './payment-methods';\n\nexport default PaymentMethods;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { MobileFullPageModal } from '@deriv/components';\nimport { observer } from '@deriv/stores';\nimport { useDevice } from '@deriv-com/ui';\nimport { localize } from 'Components/i18next';\nimport { useModalManagerContext } from 'Components/modal-manager/modal-manager-context';\nimport { my_profile_tabs } from 'Constants/my-profile-tabs';\nimport { useStores } from 'Stores';\nimport BlockUser from '../block-user';\nimport MyProfileForm from '../my-profile-form';\nimport MyProfileStats from '../my-profile-stats';\nimport PaymentMethods from '../payment-methods';\n\nconst MyProfileContent = () => {\n    const { isDesktop } = useDevice();\n    const { general_store, my_profile_store } = useStores();\n    const {\n        active_tab,\n        selected_payment_method,\n        should_show_add_payment_method_form,\n        should_show_edit_payment_method_form,\n    } = my_profile_store;\n    const { showModal } = useModalManagerContext() || {};\n\n    if (active_tab === my_profile_tabs.AD_TEMPLATE) {\n        return <MyProfileForm />;\n    } else if (active_tab === my_profile_tabs.PAYMENT_METHODS) {\n        if (isDesktop) {\n            return <PaymentMethods />;\n        }\n\n        return (\n            <MobileFullPageModal\n                body_className={classNames('payment-methods-list__modal', {\n                    'payment-methods-list__modal-add': selected_payment_method || should_show_edit_payment_method_form,\n                })}\n                height_offset='80px'\n                is_modal_open\n                is_flex\n                onClickClose={() => {\n                    // do nothing\n                }}\n                page_header_className='buy-sell__modal-header'\n                page_header_text={localize('Add payment method')}\n                pageHeaderReturnFn={() => {\n                    if (general_store.is_form_modified || !!selected_payment_method) {\n                        if (should_show_add_payment_method_form) {\n                            showModal({\n                                key: 'CancelAddPaymentMethodModal',\n                            });\n                        }\n                        if (should_show_edit_payment_method_form) {\n                            showModal({\n                                key: 'CancelEditPaymentMethodModal',\n                            });\n                        }\n                    } else {\n                        my_profile_store.hideAddPaymentMethodForm();\n                        my_profile_store.setShouldShowEditPaymentMethodForm(false);\n                    }\n                }}\n            >\n                <PaymentMethods />\n            </MobileFullPageModal>\n        );\n    } else if (active_tab === my_profile_tabs.MY_COUNTERPARTIES) {\n        return <BlockUser />;\n    }\n    return <MyProfileStats />;\n};\n\nexport default observer(MyProfileContent);\n","import MyProfileContent from './my-profile-content';\n\nexport default MyProfileContent;\n","import React from 'react';\nimport { Icon, Money, Text } from '@deriv/components';\nimport { observer, useStore } from '@deriv/stores';\nimport { useDevice } from '@deriv-com/ui';\nimport { Localize } from 'Components/i18next';\nimport { useModalManagerContext } from 'Components/modal-manager/modal-manager-context';\nimport { useStores } from 'Stores';\nimport { getIconSize, getTextSize } from 'Utils/responsive';\n\nconst MyProfileBalance = () => {\n    const { general_store } = useStores();\n    const {\n        client: { currency },\n    } = useStore();\n    const { isMobile } = useDevice();\n    const { showModal } = useModalManagerContext() || {};\n\n    return (\n        <div className='my-profile-balance'>\n            <div className='my-profile-balance__column'>\n                <div className='my-profile-balance__row'>\n                    <Text color='less-prominent' size={getTextSize('xxxs', 'xs', isMobile)}>\n                        <Localize i18n_default_text='Available Deriv P2P balance' />\n                    </Text>\n                    <Icon\n                        className='my-profile-balance__icon'\n                        color='disabled'\n                        data_testid='dt_my_profile_balance_icon'\n                        icon='IcInfoOutline'\n                        onClick={() =>\n                            showModal({\n                                key: 'MyProfileBalanceModal',\n                            })\n                        }\n                        size={getIconSize(12, 16, isMobile)}\n                    />\n                </div>\n                <Text className='my-profile-balance__amount' color='prominent' size='m' weight='bold'>\n                    <Money amount={general_store.advertiser_info.balance_available} currency={currency} show_currency />\n                </Text>\n            </div>\n        </div>\n    );\n};\n\nexport default observer(MyProfileBalance);\n","import MyProfileBalance from './my-profile-balance';\nimport './my-profile-balance.scss';\n\nexport default MyProfileBalance;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Button, Money, Table, Text } from '@deriv/components';\nimport { formatMoney } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { Localize } from 'Components/i18next';\nimport { useModalManagerContext } from 'Components/modal-manager/modal-manager-context';\nimport { useStores } from 'Stores';\n\nconst MyProfileDetailsTable = () => {\n    const { general_store } = useStores();\n    const {\n        client: { currency },\n    } = useStore();\n    const { showModal } = useModalManagerContext() || {};\n\n    const { daily_buy_limit, daily_sell_limit, upgradable_daily_limits } = general_store.advertiser_info;\n    const { advertiser_buy_limit, advertiser_sell_limit } = general_store;\n\n    return (\n        <div>\n            <div\n                className={classNames('my-profile-details-table', {\n                    'my-profile-details-table__upgradable': upgradable_daily_limits,\n                })}\n            >\n                <Table>\n                    <Table.Head>\n                        <Text color='prominent' size='xs'>\n                            <Localize i18n_default_text='Buy' />\n                        </Text>\n                    </Table.Head>\n                    <Table.Row className='my-profile-details-table__row'>\n                        <Table.Cell className='my-profile-details-table__cell'>\n                            <Text color='less-prominent' size='xs'>\n                                <Localize i18n_default_text='Daily limit' />\n                            </Text>\n                            <Text color='prominent' size='xs' weight='bold'>\n                                <Money amount={daily_buy_limit} currency={currency} show_currency />\n                            </Text>\n                        </Table.Cell>\n                        <Table.Cell className='my-profile-details-table__cell'>\n                            <Text color='less-prominent' size='xs'>\n                                <Localize i18n_default_text='Available' />\n                            </Text>\n                            <Text color='prominent' size='xs' weight='bold'>\n                                <Money amount={advertiser_buy_limit} currency={currency} show_currency />\n                            </Text>\n                        </Table.Cell>\n                    </Table.Row>\n                </Table>\n                <Table>\n                    <Table.Head>\n                        <Text color='prominent' size='xs'>\n                            <Localize i18n_default_text='Sell' />\n                        </Text>\n                    </Table.Head>\n                    <Table.Row className='my-profile-details-table__row'>\n                        <Table.Cell className='my-profile-details-table__cell'>\n                            <Text color='less-prominent' size='xs'>\n                                <Localize i18n_default_text='Daily limit' />\n                            </Text>\n                            <Text color='prominent' size='xs' weight='bold'>\n                                <Money amount={daily_sell_limit} currency={currency} show_currency />\n                            </Text>\n                        </Table.Cell>\n                        <Table.Cell className='my-profile-details-table__cell'>\n                            <Text color='less-prominent' size='xs'>\n                                <Localize i18n_default_text='Available' />\n                            </Text>\n                            <Text color='prominent' size='xs' weight='bold'>\n                                <Money amount={advertiser_sell_limit} currency={currency} show_currency />\n                            </Text>\n                        </Table.Cell>\n                    </Table.Row>\n                </Table>\n            </div>\n            {upgradable_daily_limits && (\n                <Text as='div' className='my-profile-details-table__limit'>\n                    <Text color='less-prominent' line_height='l' size='xxs'>\n                        <Localize\n                            i18n_default_text='Want to increase your daily limits to <0>{{max_daily_buy}} {{currency}}</0> (buy) and <1>{{max_daily_sell}} {{currency}}</1> (sell)?'\n                            components={[<strong key={0} />, <strong key={1} />]}\n                            values={{\n                                currency,\n                                max_daily_buy: formatMoney(currency, upgradable_daily_limits.max_daily_buy, true),\n                                max_daily_sell: formatMoney(currency, upgradable_daily_limits.max_daily_sell, true),\n                            }}\n                        />\n                    </Text>\n                    <Button\n                        onClick={() => {\n                            showModal({ key: 'DailyLimitModal' });\n                        }}\n                        small\n                        tertiary\n                    >\n                        <Localize i18n_default_text='Increase my limits' />\n                    </Button>\n                </Text>\n            )}\n        </div>\n    );\n};\n\nexport default observer(MyProfileDetailsTable);\n","import MyProfileDetailsTable from './my-profile-details-table';\nimport './my-profile-details-table.scss';\n\nexport default MyProfileDetailsTable;\n","import React from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { Button, Icon, Modal, Popover, Text } from '@deriv/components';\nimport { useDevice } from '@deriv-com/ui';\nimport { localize } from 'Components/i18next';\nimport { useStores } from 'Stores';\nimport './block-user-count.scss';\n\nconst BlockUserCount = () => {\n    const { isDesktop } = useDevice();\n    const { general_store } = useStores();\n    const { user_blocked_count } = general_store;\n\n    const [is_block_user_count_modal_open, setIsBlockUserCountModalOpen] = React.useState(false);\n\n    const getMessage = () => {\n        switch (user_blocked_count) {\n            case 0:\n                return localize('Nobody has blocked you. Yay!');\n            case 1:\n                return localize('{{user_blocked_count}} person has blocked you', {\n                    user_blocked_count,\n                });\n            default:\n                return localize('{{user_blocked_count}} people have blocked you', {\n                    user_blocked_count,\n                });\n        }\n    };\n\n    const getContent = () => (\n        <div onClick={!isDesktop ? () => setIsBlockUserCountModalOpen(true) : null}>\n            <Popover\n                alignment='top'\n                className='block-user-count'\n                classNameTarget='block-user-count__container'\n                message={getMessage()}\n            >\n                <Icon className='block-user-count__container--icon' icon='IcUserBlockedOutline' size={16} />\n                <Text color='less-prominent' size={isDesktop ? 'xs' : 14}>\n                    {user_blocked_count}\n                </Text>\n            </Popover>\n        </div>\n    );\n\n    if (isDesktop) {\n        return <React.Fragment>{getContent()}</React.Fragment>;\n    }\n\n    return (\n        <React.Fragment>\n            <Modal has_close_icon={false} is_open={is_block_user_count_modal_open} width='440px'>\n                <Modal.Body>\n                    <Text color='prominent' size='xs'>\n                        {getMessage()}\n                    </Text>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button\n                        large\n                        onClick={() => {\n                            setIsBlockUserCountModalOpen(false);\n                        }}\n                        primary\n                    >\n                        {localize('Ok')}\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n            {getContent()}\n        </React.Fragment>\n    );\n};\n\nexport default observer(BlockUserCount);\n","import React from 'react';\nimport { Text } from '@deriv/components';\nimport { daysSince } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { useDevice } from '@deriv-com/ui';\nimport { Localize } from 'Components/i18next';\nimport BlockUserCount from 'Pages/advertiser-page/block-user/block-user-count';\nimport RecommendedBy from 'Components/recommended-by';\nimport StarRating from 'Components/star-rating';\nimport TradeBadge from 'Components/trade-badge';\nimport UserAvatar from 'Components/user/user-avatar';\nimport { document_status_codes, identity_status_codes } from 'Constants/account-status-codes';\nimport { useStores } from 'Stores';\nimport { getIconSize, getTextSize } from 'Utils/responsive';\nimport MyProfilePrivacy from '../my-profile-privacy';\n\nconst MyProfileName = () => {\n    const { isMobile, isDesktop } = useDevice();\n    const { general_store } = useStores();\n    const { client } = useStore();\n    const {\n        basic_verification,\n        buy_orders_count,\n        created_time,\n        full_verification,\n        rating_average,\n        rating_count,\n        recommended_average,\n        recommended_count,\n        sell_orders_count,\n    } = general_store.advertiser_info;\n    const { email_address } = client;\n\n    const date_joined = created_time ? new Date(created_time * 1000).toISOString().split('T')[0] : '';\n    const joined_since = daysSince(date_joined);\n    // rating_average_decimal converts rating_average to 1 d.p number\n    const rating_average_decimal = rating_average ? Number(rating_average).toFixed(1) : null;\n    const user_nickname = general_store.is_advertiser ? general_store.nickname : email_address;\n\n    return (\n        <div className='my-profile-name'>\n            <UserAvatar\n                className='my-profile-name__avatar'\n                nickname={user_nickname}\n                size={getIconSize(32, 64, isMobile)}\n                text_size={getTextSize('s', 'm', isMobile)}\n            />\n            <div className='my-profile-name__name'>\n                <div className='my-profile-name__privacy'>\n                    <div className='my-profile-name__column'>\n                        <Text color='prominent' weight='bold'>\n                            {user_nickname}\n                        </Text>\n                        {!isDesktop && (\n                            <div className='my-profile-name__row'>\n                                <Text\n                                    className='my-profile-name__rating__row'\n                                    color='less-prominent'\n                                    size={getTextSize('xxxs', 'xs')}\n                                >\n                                    {joined_since ? (\n                                        <Localize\n                                            i18n_default_text='Joined {{days_since_joined}}d'\n                                            values={{ days_since_joined: joined_since }}\n                                        />\n                                    ) : (\n                                        <Localize i18n_default_text='Joined today' />\n                                    )}\n                                </Text>\n                            </div>\n                        )}\n                        <div className='my-profile-name__rating'>\n                            {isDesktop && (\n                                <Text\n                                    className='my-profile-name__rating__row'\n                                    color='less-prominent'\n                                    size={getTextSize('xxxs', 'xs', isMobile)}\n                                >\n                                    {joined_since ? (\n                                        <Localize\n                                            i18n_default_text='Joined {{days_since_joined}}d'\n                                            values={{ days_since_joined: joined_since }}\n                                        />\n                                    ) : (\n                                        <Localize i18n_default_text='Joined today' />\n                                    )}\n                                </Text>\n                            )}\n                            {rating_average ? (\n                                <React.Fragment>\n                                    <div className='my-profile-name__rating__row'>\n                                        <Text color='prominent' size={getTextSize('xxxs', 'xs', isMobile)}>\n                                            {rating_average_decimal}\n                                        </Text>\n                                        <StarRating\n                                            empty_star_icon='IcEmptyStar'\n                                            full_star_icon='IcFullStar'\n                                            initial_value={rating_average_decimal}\n                                            is_readonly\n                                            number_of_stars={5}\n                                            should_allow_hover_effect={false}\n                                            star_size={getIconSize(17, 20, isMobile)}\n                                        />\n                                        <div className='my-profile-name__rating__text'>\n                                            <Text color='less-prominent' size={getTextSize('xxxs', 'xs', isMobile)}>\n                                                {rating_count === 1 ? (\n                                                    <Localize\n                                                        i18n_default_text='({{number_of_ratings}} rating)'\n                                                        values={{ number_of_ratings: rating_count }}\n                                                    />\n                                                ) : (\n                                                    <Localize\n                                                        i18n_default_text='({{number_of_ratings}} ratings)'\n                                                        values={{ number_of_ratings: rating_count }}\n                                                    />\n                                                )}\n                                            </Text>\n                                        </div>\n                                    </div>\n                                    <div className='my-profile-name__rating__row'>\n                                        <RecommendedBy\n                                            recommended_average={recommended_average}\n                                            recommended_count={recommended_count}\n                                        />\n                                    </div>\n                                </React.Fragment>\n                            ) : (\n                                <div className='my-profile-name__rating__row'>\n                                    <Text color='less-prominent' size={getTextSize('xxxs', 'xs', isMobile)}>\n                                        <Localize i18n_default_text='Not rated yet' />\n                                    </Text>\n                                </div>\n                            )}\n                            {isDesktop && (\n                                <div className='my-profile-name__rating__row'>\n                                    <BlockUserCount />\n                                </div>\n                            )}\n                            {/* TODO: uncomment when implementing business hours feature */}\n                            {/* <div className='my-profile-name__rating__row'>\n                                    <MyProfileNameBusinessHours />\n                                </div> */}\n                        </div>\n                        {!isDesktop && (\n                            <div className='my-profile-name__row'>\n                                <div className='my-profile-name__rating__row'>\n                                    <BlockUserCount />\n                                </div>\n                                {/* TODO: uncomment when implementing business hours feature */}\n                                {/* <div className='my-profile-name__rating__row'>\n                                    <MyProfileNameBusinessHours />\n                                </div> */}\n                            </div>\n                        )}\n                        <div className='my-profile-name__row'>\n                            <TradeBadge\n                                is_poa_verified={\n                                    general_store.is_advertiser\n                                        ? !!full_verification\n                                        : general_store.poa_status === document_status_codes.VERIFIED\n                                }\n                                is_poi_verified={\n                                    general_store.is_advertiser\n                                        ? !!basic_verification\n                                        : general_store.poi_status === identity_status_codes.VERIFIED\n                                }\n                                trade_count={Number(buy_orders_count) + Number(sell_orders_count)}\n                                large\n                            />\n                        </div>\n                    </div>\n                    {isDesktop && <MyProfilePrivacy />}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default observer(MyProfileName);\n","import MyProfileName from './my-profile-name';\nimport './my-profile-name.scss';\n\nexport default MyProfileName;\n","import React from 'react';\nimport MyProfileBalance from '../my-profile-balance';\nimport MyProfileDetailsTable from '../my-profile-details-table';\nimport MyProfileName from '../my-profile-name';\n\nconst MyProfileDetailsContainer = () => (\n    <div className='my-profile-details-container'>\n        <MyProfileName />\n        <div className='my-profile-details-container__table'>\n            <MyProfileBalance />\n            <MyProfileDetailsTable />\n        </div>\n    </div>\n);\n\nexport default MyProfileDetailsContainer;\n","import MyProfileDetailsContainer from './my-profile-details-container';\nimport './my-profile-details-container.scss';\n\nexport default MyProfileDetailsContainer;\n","import React from 'react';\nimport { ButtonToggle } from '@deriv/components';\nimport { observer } from '@deriv/stores';\nimport { localize } from 'Components/i18next';\nimport ToggleContainer from 'Components/toggle-container';\nimport { my_profile_tabs } from 'Constants/my-profile-tabs';\nimport { useStores } from 'Stores';\n\nconst MyProfileHeader = () => {\n    const { my_profile_store } = useStores();\n\n    const getMyProfileTabFilters = () => [\n        {\n            text: localize('Stats'),\n            value: my_profile_tabs.MY_STATS,\n        },\n        {\n            text: localize('Payment methods'),\n            value: my_profile_tabs.PAYMENT_METHODS,\n        },\n        {\n            text: localize('Ad details'),\n            value: my_profile_tabs.AD_TEMPLATE,\n        },\n        {\n            text: localize('My counterparties'),\n            value: my_profile_tabs.MY_COUNTERPARTIES,\n        },\n    ];\n\n    const onChangeTab = (event: { target: { value: string; name: string } }) =>\n        my_profile_store.setActiveTab(event.target.value);\n\n    return (\n        <ToggleContainer>\n            <ButtonToggle\n                buttons_arr={getMyProfileTabFilters()}\n                className='my-profile-header'\n                is_animated\n                name='profile-header'\n                onChange={onChangeTab}\n                value={my_profile_store.active_tab}\n                has_rounded_button\n            />\n        </ToggleContainer>\n    );\n};\n\nexport default observer(MyProfileHeader);\n","import MyProfileHeader from './my-profile-header';\nimport './my-profile-header.scss';\n\nexport default MyProfileHeader;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Loading, Text } from '@deriv/components';\nimport { routes } from '@deriv/shared';\nimport { observer } from '@deriv/stores';\nimport { useDevice } from '@deriv-com/ui';\nimport { useModalManagerContext } from 'Components/modal-manager/modal-manager-context';\nimport Verification from 'Components/verification';\nimport { document_status_codes, identity_status_codes } from 'Constants/account-status-codes';\nimport { my_profile_tabs } from 'Constants/my-profile-tabs';\nimport { useStores } from 'Stores';\nimport MyProfileContent from './my-profile-content';\nimport MyProfileDetailsContainer from './my-profile-stats/my-profile-details-container';\nimport MyProfileHeader from './my-profile-header';\n\nconst MyProfile = () => {\n    const { isDesktop } = useDevice();\n    const { general_store, my_profile_store } = useStores();\n    const { showModal } = useModalManagerContext();\n    const history = useHistory();\n    const is_poi_poa_verified =\n        general_store.poi_status === identity_status_codes.VERIFIED &&\n        (!general_store.p2p_poa_required ||\n            (general_store.poa_status === document_status_codes.VERIFIED && !general_store.poa_authenticated_with_idv));\n\n    React.useEffect(() => {\n        if (general_store.active_index !== 3) general_store.setActiveIndex(3);\n        my_profile_store.getSettings();\n\n        return () => {\n            // leave this in the return otherwise the default isn't set to my stats\n            my_profile_store.setActiveTab(my_profile_tabs.MY_STATS);\n            my_profile_store.setShouldShowAddPaymentMethodForm(false);\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    React.useEffect(() => {\n        if (\n            is_poi_poa_verified &&\n            !general_store.is_advertiser &&\n            !general_store.is_loading &&\n            general_store.is_p2p_user === false\n        ) {\n            showModal({\n                key: 'NicknameModal',\n                props: {\n                    onCancel: () => {\n                        history.push(routes.p2p_buy_sell);\n                    },\n                },\n            });\n        }\n    }, [is_poi_poa_verified, general_store.is_advertiser, general_store.is_loading, general_store.is_p2p_user]);\n\n    if (general_store.is_p2p_user === null) {\n        return <Loading is_fullscreen={false} />;\n    }\n\n    if (my_profile_store.error_message) {\n        return (\n            <div className='my-profile__error'>\n                <Text align='center' as='p' className='dp2p-table-error' color='loss-danger' size='xs'>\n                    {my_profile_store.error_message}\n                </Text>\n            </div>\n        );\n    }\n\n    if (general_store.is_advertiser || is_poi_poa_verified || general_store.is_p2p_user) {\n        return (\n            <div className='my-profile'>\n                <div className='my-profile__content'>\n                    <MyProfileDetailsContainer />\n                    {isDesktop && <MyProfileHeader />}\n                    <MyProfileContent />\n                </div>\n            </div>\n        );\n    }\n\n    return <Verification />;\n};\n\nexport default observer(MyProfile);\n","import MyProfile from './my-profile';\nimport './my-profile.scss';\n\nexport default MyProfile;\n","import React from 'react';\nimport { Text } from '@deriv/components';\nimport { observer } from 'mobx-react-lite';\nimport { OnlineStatusAvatar } from 'Components/online-status';\nimport { useStores } from 'Stores';\nimport { getLastOnlineLabel } from 'Utils/adverts';\nimport './chat-header.scss';\nimport { useDevice } from '@deriv-com/ui';\n\nconst ChatHeaderBody = observer(() => {\n    const { isMobile } = useDevice();\n    const { order_store } = useStores();\n    const { other_user_details } = order_store.order_information;\n    const { is_online, last_online_time, name } = other_user_details;\n\n    return (\n        <React.Fragment>\n            <div className='chat-header-icon'>\n                <OnlineStatusAvatar is_online={is_online} nickname={name} size={40} text_size='s' />\n            </div>\n            <div className='chat-header-user'>\n                <Text as='p' className='chat-header-user-name' color='prominent' weight='bold'>\n                    {name}\n                </Text>\n                <Text\n                    as='p'\n                    className='chat-header-user-timestamp'\n                    color='less-prominent'\n                    size={isMobile ? 'xxs' : 'xs'}\n                >\n                    {getLastOnlineLabel(is_online, last_online_time)}\n                </Text>\n            </div>\n        </React.Fragment>\n    );\n});\n\nconst ChatHeader = () => {\n    const { isDesktop } = useDevice();\n    if (!isDesktop) {\n        return null; // Handled in chat-wrapper.jsx\n    }\n\n    return (\n        <div className='chat-header'>\n            <ChatHeaderBody />\n        </div>\n    );\n};\n\nChatHeader.Body = ChatHeaderBody;\nChatHeader.displayName = 'ChatHeader';\n\nexport default ChatHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon } from '@deriv/components';\nimport ChatMessage from 'Utils/chat-message';\nimport './chat-message-receipt.scss';\n\nconst ChatMessageReceipt = ({ chat_channel, message, sendbird_user_id }) => {\n    let icon_name;\n\n    if (message.status === ChatMessage.STATUS_PENDING) {\n        icon_name = 'IcMessagePending';\n    } else if (message.status === ChatMessage.STATUS_ERRORED) {\n        icon_name = 'IcMessageErrored';\n    } else {\n        const channel_user_ids = Object.keys(chat_channel.cachedUnreadMemberState);\n        const other_sendbird_user_id = channel_user_ids.find(user_id => user_id !== sendbird_user_id);\n        // User's last read timestamp is larger than or equal to this message's createdAt.\n        if (chat_channel.cachedUnreadMemberState[other_sendbird_user_id] >= message.created_at) {\n            icon_name = 'IcMessageSeen';\n        } else {\n            icon_name = 'IcMessageDelivered';\n        }\n    }\n\n    return <Icon className='chat-message-receipt' icon={icon_name} size={16} />;\n};\n\nChatMessageReceipt.propTypes = {\n    chat_channel: PropTypes.object,\n    message: PropTypes.instanceOf(ChatMessage),\n    sendbird_user_id: PropTypes.string,\n};\n\nexport default ChatMessageReceipt;\n","import React from 'react';\nimport { Text } from '@deriv/components';\nimport PropTypes from 'prop-types';\nimport ChatMessage from 'Utils/chat-message';\nimport './chat-message-text.scss';\n\nconst ChatMessageText = React.memo(({ children, color, type = '' }) => (\n    <div className={'chat-message-text'}>\n        <Text\n            as='p'\n            color={color}\n            line_height={type === ChatMessage.TYPE_ADMIN ? 'l' : 'm'}\n            size={type === ChatMessage.TYPE_ADMIN ? 'xxs' : 'xs'}\n        >\n            {children}\n        </Text>\n    </div>\n));\n\nChatMessageText.displayName = 'ChatMessageText';\nChatMessageText.propTypes = {\n    children: PropTypes.any,\n    color: PropTypes.string,\n    type: PropTypes.string,\n};\n\nexport default ChatMessageText;\n","import classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Text, ThemedScrollbars, Icon } from '@deriv/components';\nimport { formatMilliseconds } from '@deriv/shared';\nimport { observer } from '@deriv/stores';\nimport { Localize } from 'Components/i18next';\nimport ChatMessageReceipt from 'Pages/orders/chat/chat-message-receipt.jsx';\nimport ChatMessageText from 'Pages/orders/chat/chat-message-text.jsx';\nimport { useStores } from 'Stores';\nimport ChatMessage from 'Utils/chat-message';\nimport { convertToMB, isImageType, isPDFType } from 'Utils/file-uploader';\nimport './chat-messages.scss';\n\nconst AdminMessage = () => (\n    <div className='chat-messages-item chat-messages-item--admin'>\n        <ChatMessageText color='general' type='admin'>\n            <div className='chat-messages-item--admin-text'>\n                <Localize\n                    i18n_default_text='<0>Important:</0> Deriv will never contact you via WhatsApp to ask for your personal information. Always ignore any messages from numbers claiming to be from Deriv.'\n                    components={[<strong key={0} />]}\n                />\n            </div>\n            <Localize\n                i18n_default_text=\"<0>Note:</0> In case of a dispute, we'll use this chat as a reference.\"\n                components={[<strong key={0} />]}\n            />\n        </ChatMessageText>\n    </div>\n);\nconst ChatMessages = observer(() => {\n    const { sendbird_store } = useStores();\n    const scroll_ref = React.useRef(null);\n\n    const onImageLoad = event => {\n        // Height of element changes after the image is loaded. Accommodate\n        // this extra height in the scroll.\n        if (scroll_ref.current) {\n            scroll_ref.current.scrollTop += event.target.parentNode.clientHeight;\n        }\n    };\n\n    React.useEffect(() => {\n        sendbird_store.setMessagesRef(scroll_ref);\n        if (sendbird_store.chat_messages.length > 0 && scroll_ref.current) {\n            // Scroll all the way to the bottom of the container.\n            scroll_ref.current.scrollTop = scroll_ref.current.scrollHeight;\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    if (sendbird_store.chat_messages.length) {\n        let current_date = null;\n\n        const getMessageFormat = (chat_message, message_color) => {\n            const { file_type, url, size, name } = chat_message ?? {};\n            if (isImageType(file_type))\n                return (\n                    <a className='chat-messages-item-image' href={url} rel='noopener noreferrer' target='_blank'>\n                        <img src={url} onLoad={onImageLoad} />\n                    </a>\n                );\n            else if (isPDFType(file_type)) {\n                return (\n                    <ChatMessageText color={message_color}>\n                        <div className='chat-messages-item-pdf'>\n                            <Icon icon='IcPdf' data_testid='dt_pdf_icon' size={20} />\n                            <a href={url} rel='noopener noreferrer' target='_blank'>\n                                {name}\n                            </a>\n                        </div>\n                        {`${convertToMB(size).toFixed(2)}MB`}\n                    </ChatMessageText>\n                );\n            }\n            return (\n                <ChatMessageText color={message_color}>\n                    <a className='chat-messages-item-file' href={url} rel='noopener noreferrer' target='_blank'>\n                        {name}\n                    </a>\n                </ChatMessageText>\n            );\n        };\n\n        return (\n            <ThemedScrollbars\n                autohide\n                className='chat-messages'\n                height='unset'\n                refSetter={scroll_ref}\n                onScroll={event => sendbird_store.onMessagesScroll(event)}\n            >\n                <React.Fragment>\n                    <AdminMessage />\n                    {sendbird_store.chat_messages.map(chat_message => {\n                        const is_my_message = chat_message.sender_user_id === sendbird_store.chat_info.user_id;\n                        const message_date = formatMilliseconds(chat_message.created_at, 'MMMM D, YYYY');\n                        const message_color = is_my_message ? 'colored-background' : 'general';\n                        const should_render_date =\n                            current_date !== message_date && Boolean((current_date = message_date));\n\n                        return (\n                            <React.Fragment key={chat_message.id}>\n                                {should_render_date && (\n                                    <div className='chat-messages-date'>\n                                        <Text align='center' color='less-prominent' lh='m' size='xs' weight='bold'>\n                                            {message_date}\n                                        </Text>\n                                    </div>\n                                )}\n                                <div\n                                    className={classNames(\n                                        'chat-messages-item',\n                                        `chat-messages-item--${is_my_message ? 'outgoing' : 'incoming'}`\n                                    )}\n                                >\n                                    {chat_message.message_type === ChatMessage.TYPE_USER && (\n                                        <ChatMessageText color={message_color} type={chat_message.custom_type}>\n                                            {chat_message.message}\n                                        </ChatMessageText>\n                                    )}\n                                    {chat_message.message_type === ChatMessage.TYPE_FILE &&\n                                        getMessageFormat(chat_message, message_color)}\n                                    <div className={'order-chat__messages-item-timestamp'}>\n                                        <Text color='less-prominent' line_height='s' size='xxxs'>\n                                            {formatMilliseconds(chat_message.created_at, 'HH:mm', true)}\n                                        </Text>\n                                        {is_my_message && (\n                                            <ChatMessageReceipt\n                                                message={chat_message}\n                                                chat_channel={sendbird_store.active_chat_channel}\n                                                sendbird_user_id={sendbird_store.chat_info.user_id}\n                                            />\n                                        )}\n                                    </div>\n                                </div>\n                            </React.Fragment>\n                        );\n                    })}\n                </React.Fragment>\n            </ThemedScrollbars>\n        );\n    }\n\n    return (\n        <div className='chat-messages'>\n            <AdminMessage />\n        </div>\n    );\n});\n\nChatMessages.displayName = 'ChatMessages';\nChatMessages.propTypes = {\n    active_chat_channel: PropTypes.object,\n    chat_messages: PropTypes.number,\n    chat_info: PropTypes.shape({\n        app_id: PropTypes.string,\n        user_id: PropTypes.string,\n        token: PropTypes.string,\n    }),\n};\n\nexport default ChatMessages;\n","import React from 'react';\nimport { Icon } from '@deriv/components';\nimport PropTypes from 'prop-types';\n\nconst ChatFooterIcon = React.memo(({ should_show_attachment_icon }) => (\n    <Icon icon={should_show_attachment_icon ? 'IcAttachment' : 'IcSendMessage'} width={16} />\n));\n\nChatFooterIcon.displayName = 'ChatFooterIcon';\nChatFooterIcon.propTypes = {\n    should_show_attachment_icon: PropTypes.bool,\n};\n\nexport default ChatFooterIcon;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Input, Text } from '@deriv/components';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react-lite';\nimport { localize, Localize } from 'Components/i18next';\nimport ChatFooterIcon from 'Pages/orders/chat/chat-footer-icon.jsx';\nimport { useStores } from 'Stores';\nimport ChatMessage from 'Utils/chat-message';\nimport './chat-footer.scss';\nimport { useDevice } from '@deriv-com/ui';\n\nconst ChatFooter = observer(() => {\n    const { isDesktop } = useDevice();\n    const { order_store, sendbird_store } = useStores();\n    const file_input_ref = React.useRef(null);\n    const text_input_ref = React.useRef(null);\n    const [character_count, setCharacterCount] = React.useState(0);\n\n    const handleChange = event => {\n        setCharacterCount(event.target.value.length);\n    };\n\n    const handleKeyDown = event => {\n        if (event.key === 'Enter' && isDesktop) {\n            if (event.ctrlKey || event.metaKey) {\n                const { target: element } = event;\n                const { value } = element;\n\n                if (typeof element.selectionStart === 'number' && typeof element.selectionEnd === 'number') {\n                    event.target.value = `${value.slice(0, element.selectionStart)}\\n${value.slice(\n                        element.selectionEnd\n                    )}`;\n                } else if (document.selection?.createRange) {\n                    element.focus();\n\n                    const range = document.selection.createRange();\n\n                    range.text = '\\r\\n';\n                    range.collapse(false);\n                    range.select();\n                }\n            } else {\n                event.preventDefault();\n                sendMessage();\n            }\n        }\n    };\n\n    const sendMessage = () => {\n        const el_target = text_input_ref.current;\n        const should_restore_focus = document.activeElement === el_target;\n\n        if (el_target && el_target.value) {\n            sendbird_store.sendMessage(el_target.value);\n            el_target.value = '';\n            handleChange({ target: el_target });\n\n            if (should_restore_focus) {\n                el_target.focus();\n            }\n        }\n    };\n\n    const should_show_attachment_icon = character_count === 0;\n    const max_characters = 5000;\n\n    if (sendbird_store.is_chat_frozen || order_store.order_information.is_inactive_order) {\n        return (\n            <Text align='center' className='chat-footer--frozen' color='prominent' line_height='s' size='xs'>\n                <Localize i18n_default_text='This conversation is closed.' />\n            </Text>\n        );\n    }\n\n    return (\n        <React.Fragment>\n            <div\n                className={classNames('chat-footer', {\n                    'chat-footer--empty': sendbird_store.chat_messages.length === 0,\n                })}\n            >\n                <div className='chat-footer-input'>\n                    <Input\n                        has_character_counter\n                        initial_character_count={character_count}\n                        max_characters={max_characters}\n                        onChange={handleChange}\n                        onKeyDown={handleKeyDown}\n                        placeholder={localize('Enter message')}\n                        ref={ref => (text_input_ref.current = ref)}\n                        rows={1}\n                        trailing_icon={\n                            <div\n                                className='chat-footer-icon-container'\n                                onClick={\n                                    should_show_attachment_icon ? () => file_input_ref.current.click() : sendMessage\n                                }\n                            >\n                                <ChatFooterIcon should_show_attachment_icon={should_show_attachment_icon} />\n                            </div>\n                        }\n                        type='textarea'\n                    />\n                    <input\n                        onChange={e => sendbird_store.sendFile(e.target.files[0])}\n                        ref={el => (file_input_ref.current = el)}\n                        style={{ display: 'none' }}\n                        type='file'\n                    />\n                </div>\n            </div>\n        </React.Fragment>\n    );\n});\n\nChatFooter.displayName = 'ChatFooter';\nChatFooter.propTypes = {\n    chat_messages: PropTypes.arrayOf(PropTypes.instanceOf(ChatMessage)),\n    sendMessage: PropTypes.bool,\n    sendFile: PropTypes.bool,\n};\n\nexport default ChatFooter;\n","import React from 'react';\nimport { MobileFullPageModal } from '@deriv/components';\nimport { useDevice } from '@deriv-com/ui';\nimport { observer } from 'mobx-react-lite';\nimport PropTypes from 'prop-types';\nimport { useStores } from 'Stores';\nimport ChatHeader from './chat-header.jsx';\n\nconst ChatWrapper = observer(({ children, is_modal_open }) => {\n    const { sendbird_store, order_store } = useStores();\n    const { isDesktop } = useDevice();\n\n    return !isDesktop ? (\n        <MobileFullPageModal\n            className='chat'\n            height_offset='80px'\n            is_flex\n            is_modal_open={is_modal_open}\n            page_header_className='chat__header'\n            pageHeaderReturnFn={() => {\n                sendbird_store.setShouldShowChatModal(false);\n                sendbird_store.setShouldShowChatOnOrders(false);\n                order_store.should_navigate_to_order_details && order_store.hideDetails(true);\n                order_store.setShouldNavigateToOrderDetails(false);\n            }}\n            renderPageHeaderElement={<ChatHeader.Body />}\n        >\n            {children}\n        </MobileFullPageModal>\n    ) : (\n        <React.Fragment>{children}</React.Fragment>\n    );\n});\n\nChatWrapper.propTypes = {\n    children: PropTypes.any,\n    is_modal_open: PropTypes.bool,\n};\n\nexport default ChatWrapper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Loading, Text } from '@deriv/components';\nimport { observer } from 'mobx-react-lite';\nimport { Localize, localize } from 'Components/i18next';\nimport ChatHeader from 'Pages/orders/chat/chat-header.jsx';\nimport ChatMessages from 'Pages/orders/chat/chat-messages.jsx';\nimport ChatFooter from 'Pages/orders/chat/chat-footer.jsx';\nimport ChatWrapper from 'Pages/orders/chat/chat-wrapper.jsx';\nimport { useStores } from 'Stores';\nimport 'Pages/orders/chat/chat.scss';\n\nconst Chat = observer(() => {\n    const { order_store, sendbird_store } = useStores();\n\n    React.useLayoutEffect(() => {\n        return () => {\n            order_store.onPageReturn();\n        };\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    if (sendbird_store.is_chat_loading) {\n        return (\n            <div className='chat'>\n                <Loading is_fullscreen={false} />;\n            </div>\n        );\n    }\n\n    if (sendbird_store.has_chat_error) {\n        return (\n            <div className='chat'>\n                <div className='chat__error'>\n                    <Text as='p' color='prominent'>\n                        <Localize i18n_default_text='Oops, something went wrong' />\n                    </Text>\n                    <div className='chat__error-retry'>\n                        <Button\n                            has_effect\n                            large\n                            onClick={() => {\n                                (async () => {\n                                    await sendbird_store.initialiseChatWsConnection();\n                                })();\n                            }}\n                            primary\n                            text={localize('Retry')}\n                            type='button'\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    return (\n        <ChatWrapper is_modal_open={sendbird_store.should_show_chat_modal}>\n            <div className='chat'>\n                <ChatHeader />\n                <ChatMessages />\n                <ChatFooter />\n            </div>\n        </ChatWrapper>\n    );\n});\n\nChat.displayName = 'Chat';\nChat.propTypes = {\n    has_chat_error: PropTypes.bool,\n    is_chat_loading: PropTypes.bool,\n    initialiseChatWsConnection: PropTypes.func,\n    should_show_chat_modal: PropTypes.bool,\n};\n\nexport default Chat;\n","import React from 'react';\nimport { useStore, observer } from '@deriv/stores';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { millisecondsToTimer } from 'Utils/date-time';\nimport { createExtendedOrderDetails } from 'Utils/orders';\nimport { getDistanceToServerTime } from 'Utils/server_time';\nimport { useStores } from 'Stores';\nimport { Icon, Table, Text } from '@deriv/components';\nimport { formatMoney, routes } from '@deriv/shared';\nimport { useDevice } from '@deriv-com/ui';\nimport { localize } from 'Components/i18next';\nimport RatingCellRenderer from 'Components/rating-cell-renderer';\nimport { useModalManagerContext } from 'Components/modal-manager/modal-manager-context';\nimport './order-table-row.scss';\n\nconst Title = ({ send_amount, currency, order_type, purchase_time }) => {\n    return (\n        <React.Fragment>\n            <Text size='sm' color='prominent' line_height='xxs' weight='bold' as='p'>\n                {order_type} {formatMoney(currency, send_amount, true)} {currency}\n            </Text>\n            <Text color='less-prominent' as='p' line_height='xxs' size='xxs' align='left'>\n                {purchase_time}\n            </Text>\n        </React.Fragment>\n    );\n};\n\nconst OrderRow = ({ row: order }) => {\n    const { isDesktop } = useDevice();\n    const getTimeLeft = time => {\n        const distance = getDistanceToServerTime(time);\n        return {\n            distance,\n            label: distance < 0 ? localize('expired') : millisecondsToTimer(distance),\n        };\n    };\n    const { general_store, order_store, sendbird_store } = useStores();\n    const {\n        notifications: { removeNotificationByKey, removeNotificationMessage },\n        client: { loginid },\n    } = useStore();\n\n    const [order_state, setOrderState] = React.useState(order); // Use separate state to force refresh when (FE-)expired.\n    const [is_timer_visible, setIsTimerVisible] = React.useState();\n    const should_show_order_details = React.useRef(true);\n    const { showModal, hideModal } = useModalManagerContext() || {};\n\n    const {\n        account_currency,\n        amount_display,\n        has_review_details,\n        id,\n        is_buy_order_for_user,\n        is_completed_order,\n        is_order_reviewable,\n        is_user_recommended_previously,\n        local_currency,\n        order_expiry_milliseconds,\n        other_user_details,\n        price_display,\n        purchase_time,\n        rating,\n        should_highlight_alert,\n        should_highlight_danger,\n        should_highlight_disabled,\n        should_highlight_success,\n        status_string,\n    } = order_state;\n\n    const offer_amount = `${amount_display} ${account_currency}`;\n    const transaction_amount = `${Number(price_display).toFixed(2)} ${local_currency}`;\n    const order_type = is_buy_order_for_user ? localize('Buy') : localize('Sell');\n\n    const [remaining_time, setRemainingTime] = React.useState(getTimeLeft(order_expiry_milliseconds).label);\n    const interval = React.useRef(null);\n\n    const history = useHistory();\n    const location = useLocation();\n\n    const isOrderSeen = order_id => {\n        const { notifications } = general_store.getLocalStorageSettingsForLoginId();\n        return notifications.some(notification => notification.order_id === order_id && notification.is_seen === true);\n    };\n\n    const onRowClick = () => {\n        if (should_show_order_details.current) {\n            const current_query_params = new URLSearchParams(location.search);\n\n            current_query_params.append('order', order.id);\n\n            history.replace({\n                pathname: routes.p2p_orders,\n                search: current_query_params.toString(),\n                hash: location.hash,\n            });\n\n            return order_store.setOrderId(order.id);\n        }\n\n        return () => {};\n    };\n\n    const showRatingModal = () => {\n        showModal({\n            key: 'RatingModal',\n            props: {\n                is_buy_order_for_user,\n                is_user_recommended_previously,\n                onClickDone: () => {\n                    order_store.setOrderRating(id);\n                    hideModal();\n                    should_show_order_details.current = true;\n                    order_store.setRatingValue(0);\n                    removeNotificationMessage({ key: `p2p_order_${id}` });\n                    removeNotificationByKey({ key: `p2p_order_${id}` });\n                    order_store.setIsLoading(true);\n                    order_store.setOrders([]);\n                    order_store.loadMoreOrders({ startIndex: 0 });\n                },\n                onClickSkip: () => {\n                    order_store.setRatingValue(0);\n                    hideModal();\n                    should_show_order_details.current = true;\n                },\n            },\n        });\n    };\n\n    React.useEffect(() => {\n        const countDownTimer = () => {\n            const { distance, label } = getTimeLeft(order_expiry_milliseconds);\n\n            if (distance < 0) {\n                setRemainingTime(label);\n                setOrderState(createExtendedOrderDetails(order.order_details, loginid, general_store.server_time));\n                clearInterval(interval.current);\n                setIsTimerVisible(false);\n            } else {\n                setRemainingTime(label);\n                setIsTimerVisible(general_store.is_active_tab);\n            }\n        };\n\n        interval.current = setInterval(countDownTimer, 1000);\n        return () => clearInterval(interval.current);\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n    if (isDesktop) {\n        return (\n            <div onClick={onRowClick}>\n                <Table.Row\n                    className={classNames('order-table-row order-table-grid', {\n                        'order-table-grid--active': general_store.is_active_tab,\n                        'order-table-row--attention': !isOrderSeen(id),\n                    })}\n                >\n                    {!general_store.is_active_tab && <Table.Cell>{purchase_time}</Table.Cell>}\n                    <Table.Cell>{order_type}</Table.Cell>\n                    <Table.Cell>{id}</Table.Cell>\n                    <Table.Cell>{other_user_details.name}</Table.Cell>\n                    <Table.Cell>\n                        <Text\n                            as='div'\n                            size='xxs' // TODO: Change the font-size once design is ready\n                            weight='bold'\n                            className={classNames('order-table-status', {\n                                'order-table-status--danger': should_highlight_danger,\n                                'order-table-status--alert': should_highlight_alert,\n                                'order-table-status--success': should_highlight_success,\n                                'order-table-status--disabled': should_highlight_disabled,\n                            })}\n                        >\n                            {status_string}\n                        </Text>\n                    </Table.Cell>\n                    <Table.Cell>{is_buy_order_for_user ? transaction_amount : offer_amount}</Table.Cell>\n                    <Table.Cell>{is_buy_order_for_user ? offer_amount : transaction_amount}</Table.Cell>\n                    <Table.Cell>\n                        {general_store.is_active_tab ? (\n                            <div className='order-table-row-time'>\n                                <Text align='center' size='xxs'>\n                                    {remaining_time}\n                                </Text>\n                            </div>\n                        ) : (\n                            is_completed_order && (\n                                <RatingCellRenderer\n                                    has_review_details={has_review_details}\n                                    is_reviewable={!!is_order_reviewable}\n                                    rating={rating}\n                                    onClickUserRatingButton={() => {\n                                        should_show_order_details.current = false;\n                                        showRatingModal();\n                                    }}\n                                />\n                            )\n                        )}\n                    </Table.Cell>\n                </Table.Row>\n            </div>\n        );\n    }\n\n    return (\n        <div onClick={onRowClick}>\n            <Table.Row\n                className={classNames('orders__mobile', {\n                    'orders__mobile--attention': !isOrderSeen(id),\n                })}\n            >\n                <Table.Cell\n                    className={classNames('orders__mobile-header', {\n                        'order-table-grid--active': general_store.is_active_tab,\n                    })}\n                >\n                    <Text\n                        as='div'\n                        align='center'\n                        size='xxs' // TODO: Change the font-size once design is ready\n                        weight='bold'\n                        className={classNames('orders__mobile-status', {\n                            'order-table-status--danger': should_highlight_danger,\n                            'order-table-status--alert': should_highlight_alert,\n                            'order-table-status--success': should_highlight_success,\n                            'order-table-status--disabled': should_highlight_disabled,\n                        })}\n                    >\n                        {status_string}\n                    </Text>\n                </Table.Cell>\n                <Table.Cell className='orders__mobile-header-right'>\n                    {is_timer_visible && (\n                        <Text\n                            size='xxs'\n                            color='prominent'\n                            align='center'\n                            line_height='l'\n                            className='orders__mobile-time'\n                        >\n                            {remaining_time}\n                        </Text>\n                    )}\n                    {general_store.is_active_tab ? (\n                        <div className='orders__mobile-chat'>\n                            <Icon\n                                icon='IcChat'\n                                height={15}\n                                width={16}\n                                onClick={() => {\n                                    order_store.setShouldNavigateToOrderDetails(true);\n                                    sendbird_store.setShouldShowChatModal(true);\n                                    sendbird_store.setShouldShowChatOnOrders(true);\n                                }}\n                            />\n                        </div>\n                    ) : (\n                        <div className='orders__mobile-chat'>\n                            {is_completed_order && (\n                                <RatingCellRenderer\n                                    has_review_details={has_review_details}\n                                    is_reviewable={!!is_order_reviewable}\n                                    rating={rating}\n                                    onClickUserRatingButton={() => {\n                                        should_show_order_details.current = false;\n                                        showRatingModal();\n                                    }}\n                                />\n                            )}\n                        </div>\n                    )}\n                </Table.Cell>\n                <Table.Cell className='orders__mobile-title'>\n                    <Title\n                        send_amount={amount_display}\n                        currency={account_currency}\n                        order_type={order_type}\n                        purchase_time={purchase_time}\n                    />\n                </Table.Cell>\n            </Table.Row>\n        </div>\n    );\n};\n\nOrderRow.propTypes = {\n    order: PropTypes.object,\n    row: PropTypes.object,\n    server_time: PropTypes.object,\n};\n\nexport default observer(OrderRow);\n","import React from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { Table } from '@deriv/components';\nimport { observer } from 'mobx-react-lite';\nimport { localize } from 'Components/i18next';\nimport { order_list } from 'Constants/order-list';\nimport { useStores } from 'Stores';\nimport './order-table-header.scss';\n\nconst OrderTableHeader = observer(({ children }) => {\n    const { general_store } = useStores();\n\n    return (\n        <Table className='order-table-header'>\n            <Table.Header>\n                <Table.Row\n                    className={classnames('order-table-header__labels order-table-grid', {\n                        'order-table-grid--active': general_store.is_active_tab,\n                    })}\n                >\n                    {general_store.order_table_type === order_list.INACTIVE && (\n                        <Table.Head>{localize('Date')}</Table.Head>\n                    )}\n                    <Table.Head>{localize('Order')}</Table.Head>\n                    <Table.Head>{localize('Order ID')}</Table.Head>\n                    <Table.Head>{localize('Counterparty')}</Table.Head>\n                    <Table.Head>{localize('Status')}</Table.Head>\n                    <Table.Head>{localize('Send')}</Table.Head>\n                    <Table.Head>{localize('Receive')}</Table.Head>\n                    {general_store.order_table_type === 'active' && <Table.Head>{localize('Time')}</Table.Head>}\n                </Table.Row>\n            </Table.Header>\n            <Table.Body className='order-table-body'>{children}</Table.Body>\n        </Table>\n    );\n});\n\nOrderTableHeader.propTypes = {\n    children: PropTypes.any,\n    is_active_tab: PropTypes.bool,\n};\n\nexport default OrderTableHeader;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Loading, Button, InfiniteDataList, Div100vhContainer, Text } from '@deriv/components';\nimport { reaction } from 'mobx';\nimport { routes } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { useDevice } from '@deriv-com/ui';\nimport { Localize } from 'Components/i18next';\nimport TableError from 'Components/section-error';\nimport P2pEmpty from 'Components/p2p-empty';\nimport OrderRow from 'Pages/orders/order-table/order-table-row.jsx';\nimport OrderTableHeader from 'Pages/orders/order-table/order-table-header.jsx';\nimport { useStores } from 'Stores';\nimport { createExtendedOrderDetails } from 'Utils/orders';\n\nconst ContentWrapper = ({ children }) => {\n    const { isDesktop } = useDevice();\n    if (!isDesktop) {\n        return <Div100vhContainer height_offset='21rem'>{children}</Div100vhContainer>;\n    }\n    return <OrderTableHeader>{children}</OrderTableHeader>;\n};\n\nconst OrderTableContent = () => {\n    const { general_store, order_store } = useStores();\n    const {\n        client: { loginid },\n    } = useStore();\n    const history = useHistory();\n    const { is_active_tab } = general_store;\n    const getNoOrderMessage = () => {\n        if (is_active_tab) {\n            return (\n                <Text weight='bold'>\n                    <Localize i18n_default_text='You have no orders.' />\n                </Text>\n            );\n        }\n\n        return (\n            <Text as='div' align='center' color='less-prominent'>\n                <Localize i18n_default_text=\"You've made no transactions of this type during this period.\" />\n            </Text>\n        );\n    };\n\n    React.useEffect(\n        () =>\n            reaction(\n                () => general_store.order_table_type,\n                () => {\n                    order_store.setIsLoading(true);\n                    order_store.setOrders([]);\n                    order_store.loadMoreOrders({ startIndex: 0 });\n                },\n                { fireImmediately: true }\n            ),\n        [] // eslint-disable-line react-hooks/exhaustive-deps\n    );\n\n    if (order_store.is_loading) {\n        return <Loading is_fullscreen={false} />;\n    }\n\n    if (order_store.api_error_message) {\n        return <TableError message={order_store.api_error_message} size='xs' className='section-error__table' />;\n    }\n\n    if (order_store.orders.length) {\n        const modified_list = order_store.orders\n            .map(order => createExtendedOrderDetails(order, loginid, general_store.server_time))\n            // TODO: Get rid of this filter if confirmed that BE is sending correct data.\n            .filter(order => (is_active_tab ? order.is_active_order : order.is_inactive_order));\n\n        if (modified_list.length) {\n            return (\n                <ContentWrapper>\n                    <InfiniteDataList\n                        data_list_className='orders__data-list'\n                        has_more_items_to_load={order_store.has_more_items_to_load}\n                        items={modified_list}\n                        keyMapperFn={item => item.id}\n                        loadMoreRowsFn={order_store.loadMoreOrders}\n                        rowRenderer={row_props => <OrderRow {...row_props} />}\n                    />\n                </ContentWrapper>\n            );\n        }\n    }\n\n    return (\n        <P2pEmpty\n            has_tabs\n            icon={is_active_tab ? 'IcNoOrder' : 'IcStatement'}\n            is_disabled={!is_active_tab}\n            title={getNoOrderMessage()}\n        >\n            {is_active_tab && (\n                <Button\n                    primary\n                    large\n                    className='p2p-empty__button'\n                    onClick={() => {\n                        general_store.handleTabClick(0);\n                        history.push({ pathname: routes.p2p_buy_sell });\n                    }}\n                >\n                    <Localize i18n_default_text='Buy/Sell' />\n                </Button>\n            )}\n        </P2pEmpty>\n    );\n};\n\nOrderTableContent.propTypes = {\n    is_active: PropTypes.bool,\n    server_time: PropTypes.object,\n    showDetails: PropTypes.func,\n};\n\nexport default observer(OrderTableContent);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ButtonToggle } from '@deriv/components';\nimport { toMoment } from '@deriv/shared';\nimport { useDevice } from '@deriv-com/ui';\nimport { observer } from 'mobx-react-lite';\nimport { localize } from 'Components/i18next';\nimport ToggleContainer from 'Components/toggle-container';\nimport CompositeCalendar from 'Components/composite-calendar';\nimport { order_list } from 'Constants/order-list';\nimport { useStores } from 'Stores';\nimport OrderTableContent from './order-table-content.jsx';\nimport './order-table.scss';\n\nconst OrderTable = ({ showDetails }) => {\n    const { general_store, order_store } = useStores();\n    const { isDesktop } = useDevice();\n    const { date_from, date_to, filtered_date_range, handleDateChange, setDateTo } = order_store;\n\n    const orders_list_filters = [\n        {\n            text: localize('Active orders'),\n            value: order_list.ACTIVE,\n            count: general_store.active_notification_count,\n        },\n        {\n            text: localize('Past orders'),\n            value: order_list.INACTIVE,\n            count: general_store.inactive_notification_count,\n        },\n    ];\n\n    const is_active_tab = general_store.order_table_type === order_list.ACTIVE;\n\n    React.useEffect(() => {\n        if (isDesktop && !date_to) {\n            setDateTo(toMoment().startOf('day').add(1, 'd').subtract(1, 's').unix());\n        }\n    }, []);\n    return (\n        <React.Fragment>\n            <div className='order-table'>\n                <div className='order-table__toggle-wrapper '>\n                    <ToggleContainer>\n                        <ButtonToggle\n                            buttons_arr={orders_list_filters}\n                            className='order-table__toggle-wrapper-filter'\n                            is_animated\n                            name='filter'\n                            onChange={({ target: { value } }) => general_store.setOrderTableType(value)}\n                            value={general_store.order_table_type}\n                            has_rounded_button\n                        />\n                    </ToggleContainer>\n                    {!is_active_tab && (\n                        <div className='order-table__toggle-wrapper--search'>\n                            <CompositeCalendar\n                                input_date_range={filtered_date_range}\n                                onChange={handleDateChange}\n                                from={date_from}\n                                to={date_to}\n                            />\n                        </div>\n                    )}\n                </div>\n            </div>\n            <OrderTableContent showDetails={showDetails} is_active={is_active_tab} />\n        </React.Fragment>\n    );\n};\n\nOrderTable.propTypes = {\n    showDetails: PropTypes.func,\n};\n\nexport default observer(OrderTable);\n","import React from 'react';\nimport { useSafeState } from '@deriv/components';\nimport { reaction } from 'mobx';\nimport { observer } from '@deriv/stores';\nimport OrderDetails from 'Components/order-details/order-details.jsx';\nimport { useModalManagerContext } from 'Components/modal-manager/modal-manager-context';\nimport { useStores } from 'Stores';\nimport OrderTable from './order-table/order-table.jsx';\n\nconst Orders = observer(() => {\n    const { order_store, general_store } = useStores();\n    const { showModal } = useModalManagerContext();\n\n    // This is a bit hacky, but it allows us to force re-render this\n    // component when the timer expired. This is created due to BE\n    // not expiring orders on time. Remove this when they do.\n    const [, forceRerender] = useSafeState();\n    order_store.setForceRerenderOrders(forceRerender);\n\n    React.useEffect(() => {\n        if (general_store.active_index !== 1) general_store.setActiveIndex(1);\n        const disposeOrderIdReaction = reaction(\n            () => order_store.order_id,\n            () => {\n                // DO NOT REMOVE. This fixes all P2P order routing issues\n                order_store.onOrderIdUpdate();\n            },\n            { fireImmediately: true }\n        );\n\n        const disposeOrdersUpdateReaction = reaction(\n            () => order_store.orders,\n            () => order_store.onOrdersUpdate(),\n            { fireImmediately: true }\n        );\n\n        const disposeOrderVerificationReaction = reaction(\n            () => order_store.verification_code,\n            () => {\n                if (order_store.action_param && order_store.verification_code) {\n                    showModal({ key: 'LoadingModal', props: {} });\n                    order_store.verifyEmailVerificationCode(order_store.action_param, order_store.verification_code);\n                }\n            },\n            { fireImmediately: true }\n        );\n\n        return () => {\n            disposeOrderIdReaction();\n            disposeOrdersUpdateReaction();\n            disposeOrderVerificationReaction();\n            order_store.onUnmount();\n        };\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    if (order_store.order_information) {\n        return (\n            <div className='orders'>\n                <OrderDetails />\n            </div>\n        );\n    }\n\n    return (\n        <div className='orders'>\n            <OrderTable />\n        </div>\n    );\n});\n\nOrders.displayName = 'Orders';\n\nexport default Orders;\n","import Orders from './orders.jsx';\nimport './orders.scss';\n\nexport default Orders;\n"],"names":["___CSS_LOADER_EXPORT___","push","module","id","api","content","__esModule","default","options","exports","locals","isDesktop","useDevice","_useStores","useStores","advertiser_page_store","buy_sell_store","general_store","advertiser_details_id","counterparty_type","is_counterparty_advertiser_blocked","advertiser_id","counterparty_advertiser_id","is_advertiser_info_subscribed","selected_local_currency","is_advertiser_blocked","list_item_limit","_useP2PAdvertList","useP2PAdvertList","_objectSpread","limit","local_currency","enabled","_useP2PAdvertList$dat","data","adverts","loadMoreAdvertiserAdverts","loadMoreAdverts","rest","_objectWithoutProperties","_excluded","has_more_adverts_to_load","length","sort_by","should_use_client_limits","is_buy","selected_payment_method_value","table_type","search_term","buy_sell","BUY","SELL","use_client_limits","payment_method","items","has_more_items_to_load","filtered_items","React","filter","item","type","search_results","_item$advertiser_deta","advertiser_details","name","toLowerCase","includes","trim","getSearchResults","rendered_adverts","is_mobile","arguments","undefined","EMPTY_ITEM_PLACE_HOLDER","NO_MATCH_ROW","concat","_toConsumableArray","getRenderedAdverts","AdvertiserPageRow","_ref","advert","row","counterparty_details_id","counterparty_advertiser_info","currency","useStore","client","effective_rate","eligibility_status","is_eligible","max_order_amount_limit_display","min_order_amount_limit_display","payment_method_names","price_display","rate_type","rate","showModal","useModalManagerContext","is_buy_advert","is_my_advert","exchange_rate","useP2PExchangeRate","display_effective_rate","generateEffectiveRate","price","market_rate","showBuySellForm","setSelectedAdState","key","onBuySellButtonClick","is_advertiser","props","onConfirm","should_hide_close_btn","disposeAdvertIntervalReaction","registerAdvertIntervalReaction","Table","Row","className","Cell","Text","color","size","weight","map","line_height","BuySellRowAction","account_currency","onClick","Localize","i18n_default_text","values","as","displayName","propTypes","PropTypes","observer","EmptyAdsMessage","_useP2PAdvertiserAdve","useP2PAdvertiserAdverts","isLoading","Tabs","active_index","is_full_width","onTabItemClick","handleTabItemClick","header_fit_content","top","label","localize","Loading","is_fullscreen","Header","Head","Body","InfiniteDataList","data_list_className","keyMapperFn","rowRenderer","row_props","_extends","showAdPopup","loadMoreRowsFn","P2pEmpty","classNames","icon","title","dropdown_menu_ref","useOnClickOutside","setIsDropdownMenuVisible","is_dropdown_menu_visible","Icon","ref","showBlockUserModal","Dropdown","is_align_text_right","list","placeholder","_useDevice","isMobile","info","advertiser_info","buy_completion_rate","buy_orders_amount","buy_orders_count","buy_time_avg","partner_count","release_time_avg","sell_completion_rate","sell_orders_amount","sell_orders_count","avg_buy_time_in_minutes","Math","round","avg_release_time_in_minutes","mobileTextSize","components","Money","amount","Number","show_currency","align","BlockUserOverlay","children","is_visible","onClickUnblock","advertiser_details_name","height","width","advertiser_name","Button","large","secondary","isRequired","my_profile_store","counterparty_advert_id","is_barred","setCounterpartyAdvertId","setCounterpartyAdvertiserId","_useModalManagerConte","hideModal","useRegisterModalProps","history","useHistory","location","useLocation","basic_verification","created_time","first_name","full_verification","is_online","last_online_time","last_name","rating_average","rating_count","recommended_average","recommended_count","is_invalid_advertiser_id","error_code","api_error_codes","INVALID_ADVERTISER_ID","joined_since","daysSince","nickname","rating_average_decimal","toFixed","_useP2PAdvertInfo","useP2PAdvertInfo","p2p_advert_info","isSubscribed","showErrorModal","error_message","error_modal_title","getEligibilityMessage","error_modal_button_text","onClose","should_hide_all_modals","setShowAdvertInfo","is_active","advert_type","setActiveIndex","search","url_params","URLSearchParams","get","setShowAdvertiserPage","onMount","disposeCounterpartyAdvertiserIdReaction","reaction","onAdvertiserIdUpdate","routes","p2p_buy_sell","fireImmediately","onUnmount","setCounterpartyAdvertiserInfo","disposeBlockUnblockUserErrorReaction","block_unblock_user_error","getErrorMessage","getErrorModalTitle","has_close_icon","hideAdvertiserPage","active_tab_route","setActiveTab","my_profile_tabs","MY_COUNTERPARTIES","onCancel","setBlockUnblockUserError","onSubmit","error","isError","is_loading","is_block_unblock_user_loading","message","PageReturn","path","my_profile","page_title","AdvertiserPageDropdownMenu","UserAvatar","text_size","OnlineStatusIcon","OnlineStatusLabel","days_since_joined","isEmptyObject","StarRating","empty_star_className","empty_star_icon","full_star_className","full_star_icon","initial_value","is_readonly","number_of_stars","should_allow_hover_effect","star_size","number_of_ratings","RecommendedBy","TradeBadge","is_poa_verified","is_poi_verified","trade_count","AdvertiserPageStats","AdvertiserPageAdverts","_modules$cashier","is_production","window","origin","URLConstants","derivAppProduction","_useGrowthbookGetFeat2","_slicedToArray","useGrowthbookGetFeatureValue","featureFlag","defaultValue","is_p2p_standalone_enabled","isGBLoaded","_useStore","notifications","ui","common","modules","balance","is_logging_in","loginid","setOnRemount","cashier","setP2POrderProps","setP2PRedirectTo","order_store","_useP2PSettings","useP2PSettings","p2p_settings","subscribe","lang","getLanguage","_React$useState2","order_id","setOrderId","_React$useState4","action_param","setActionParam","_React$useState6","code_param","setCodeParam","useP2PCompletedOrdersNotification","replace","derivP2pProduction","derivP2pStaging","init","setListItemLimit","setExternalStores","setWebsocketInit","WS","routeToMyProfile","p2p_my_profile","disposeAdvertiserInfoSubscribedReaction","test","pathname","p2p_advertiser_page","localStorage","setItem","onpageshow","event","persisted","reload","waitWS","then","getItem","removeItem","my_ads","p2p_orders","p2p_my_ads","advert_id","currency_list","forEach","is_default","value","setSelectedLocalCurrency","setLocalCurrency","passed_order_id","has","setQueryOrder","Analytics","trackEvent","action","form_name","deposit_category","login_id","input_order_id","current_query_params","append","toString","hash","setLanguage","navigateToOrderDetails","redirectTo","redirectToOrderDetails","setP2POrderTab","setIsRatingModalOpen","is_open","setAccountBalance","setVerificationCode","ModalManagerContextProvider","ModalManager","AppContent","Routes","is_disabled","primary","small","onUnavailableClick","CurrencySelector","default_value","onSelect","local_currencies_list","component","display_name","getSortedList","list_items","sorted_list","list_item","has_adverts","index","findIndex","text","splice","filtered_currency_list","setFilteredCurrencyList","Formik","enableReinitialize","initialValues","_ref2","setFieldValue","Field","_ref3","field","Autocomplete","autoComplete","historyValue","is_list_visible","leading_icon","list_height","not_found_text","interpolation","escapeValue","onItemSelection","_ref4","onSearch","trailing_icon","sort_list","classNameLabel","is_align_text_left","onChange","handleChange","selected_value","setIsSortDropdownOpen","data_testid","setIsListVisible","currency_selector_ref","onLocalCurrencySelect","BuySellHeader","is_currency_selector_visible","feature_level","setSearchTerm","useP2PRenderedAdverts","ToggleContainer","ButtonToggle","buttons_arr","is_animated","onChangeTableType","has_rounded_button","CurrencyDropdown","SearchBox","onClear","SortDropdown","BuySellRow","style","_advert$advertiser_de","is_poi_poa_verified","poi_status","identity_status_codes","VERIFIED","p2p_poa_required","poa_status","document_status_codes","poa_authenticated_with_idv","onClickRow","setShouldShowVerification","showAdvertiserPage","onClickBuySell","setSelectedAdvert","OnlineStatusAvatar","completed_orders_count","min_order","max_order","BuySellRowRenderer","BuySellTable","onScroll","isTablet","_useStores2","fetchAdvertiserAdverts","_useP2PRenderedAdvert","code","PERMISSION_DENIED","setIsBlocked","TableError","Modal","is_sort_dropdown_open","toggleModal","RadioGroup","onToggle","selected","required","Item","has_filler","NoAds","BuySell","previous_scroll_top","should_show_verification","hideVerification","Verification","_event$target","show_advertiser_page","current","target","scrollTop","is_submit_disabled","navigate","onCancelClick","onConfirmClick","params","selected_ad_state","setErrorMessage","setIsSubmitDisabled","should_show_popup","submitForm","_ref$is_ads_page","is_ads_page","my_ads_store","handleTabClick","setCreateSellAdFromNoAds","setShowAdForm","is_default_currency","onClickButton","disabled","BuyAdPaymentMethodsList","is_alignment_top","list_portal_id","selected_methods","setSelectedMethods","should_show_hint","touched","selected_edit_method","setSelectedEditMethod","payment_methods_list","setPaymentMethodsList","close_icon","setCloseIcon","_React$useState8","show_list","setShowList","_React$useState10","hide_list","setHideList","deleted_autocomplete_ref","setCurrentMethod","is_deleted","onClickDeletePaymentMethodItem","payment_method_id","i","getPaymentMethodDisplayName","onEditPaymentMethodItem","current_method","edited_methods","onClickPaymentMethodItem","onClickIcon","method","_ref5","onBlur","e","preventDefault","_ref6","setTimeout","PaymentMethodIcon","onHideDropdownList","_ref7","onFocus","onShowDropdownList","onTouchStart","onMouseDown","show_ad_form","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_my_ads_store$ad_form","country_list","_useStore$client","local_currency_config","contact_info","description","amount_display","eligible_countries","min_completion_rate","min_join_days","order_expiry_period","payment_method_details","rate_display","ad_rate_type","_useP2PSettings$p2p_s","adverts_archive_period","float_rate_offset_limit_string","has_counterparty_conditions","_my_profile_store$pay","Object","entries","payment_method_detail","payment_method_ids","setMinJoinDays","setMinCompletionRate","setP2pAdvertInformation","onUpdateAd","setApiErrorCode","ad_form_values","default_advert_description","float_rate_offset_limit","max_transaction","min_transaction","offer_amount","order_completion_time","rate_type_string","ad_type","FLOAT","setSubmitting","setAdFormValues","handleSubmit","validate","validateCreateAdForm","validateOnMount","_Object$keys","_country_list$eligibl","errors","isSubmitting","isValid","Form","noValidate","ThemedScrollbars","InlineMessage","getInlineTextSize","Input","CopyAdvertFormTrailingIcon","is_relative_hint","FloatingRate","error_messages","fiat_currency","offset","upper_limit","lower_limit","change_handler","restrictDecimalPlace","OrderTimeSelection","classNameDisplay","classNameIcon","is_label_hidden","join","eligible_countries_display","country_name","keys","has_effect","confirm_label","onClickCancel","getCurrentStep","getTotalSteps","goToNextStep","goToPreviousStep","is_next_btn_disabled","is_save_btn_disabled","post_btn_text","_useFormikContext","useFormikContext","countries","_country_list$key","getSelectedCountriesText","_country_list$value","onApply","field_className","readOnly","CreateAdSummary","price_rate","override_exchange_rate","market_feed","display_offer_amount","formatMoney","display_price_rate","display_total","roundOffDecimal","percentOf","target_amount","target_currency","assign","local_amount","removeTrailingZeros","is_form_dirty","goToFirstStep","has_min_join_days_changed","setHasMinJoinDaysChange","has_min_completion_rate_changed","setHasMinCompletionRateChanged","dirty","_my_ads_store$p2p_adv","p2p_advert_information","_my_ads_store$p2p_adv2","_my_ads_store$p2p_adv3","BlockSelector","tooltip_info","PreferredCountriesSelector","AdFormController","required_ad_type","selected_ad_type","is_sell_advert","onSelectPaymentMethods","p2p_advertiser_payment_methods","useP2PAdvertiserPaymentMethods","selected_buy_methods","setSelectedBuyMethods","selected_sell_methods","setSelectedSellMethods","SellAdPaymentMethodsList","onClickAdd","onClickPaymentMethodCard","PaymentMethodCard","is_add","medium","setIsFormDirty","selected_payment_methods","setSelectedPaymentMethods","setIsNextBtnDisabled","payment_methods_changed","every","pm","CreateAdFormPaymentMethods","current_step","steps","circumference","PI","transform","r","cx","cy","fill","stroke","strokeWidth","strokeDasharray","strokeDashoffset","x","y","dominantBaseline","textAnchor","fontSize","fontWeight","_ref$action","setFieldTouched","is_edit","user_input","AdTypeSectionTrailingIcon","restrictLength","hint","balance_available","dp2p_balance","parseInt","initial_character_count","has_character_counter","max_characters","setShowEditAdForm","setApiErrorMessage","setCurrentStep","Wizard","initial_step","onStepChange","step","active_step","nav","FormProgress","AdProgressBar","header","AdTypeSection","AdPaymentDetailsSection","AdConditionsSection","CreateAdFormWrapper","Div100vhContainer","height_offset","order_expiry_options","order_payment_period_string","should_hide_all_modals_on_cancel","getPaymentMethodsList","getAdvertiserPaymentMethods","max","apply","payment_info","create_sell_ad_from_no_ads","is_scrollbar_hidden","AdWizard","is_form_loading","setShouldCopyAdvert","should_copy_advert","CopyAdvertForm","CreateAdForm","EditAdFormWrapper","max_order_amount_display","min_order_amount_display","setEditAdFormError","selected_payment_method_values","getPaymentMethodValue","payment_method_value","_Object$entries","reached_target_date","onClickSaveEditAd","validateEditAdForm","EditAdForm","ToggleAds","isMounted","useIsMounted","is_listed","ToggleSwitch","is_enabled","handleToggle","requestWS","p2p_advertiser_update","response","setApiError","setIsListed","api_error","AdStatus","AdType","ad_pause_color","float_rate","MyAdsRowDropdown","handleBlur","is_advert_active","is_nativepicker_visible","onSelectMore","no_border","suffix_icon","MyAdsRowRenderer","table_ref","remaining_amount","remaining_amount_display","_advert$visibility_st","visibility_status","row_ref","is_custom_dropdown","setIsCustomDropdown","setIsAdvertActive","show_warning_icon","setShowWarningIcon","is_advert_menu_visible","setIsAdvertMenuVisible","amount_dealt","enable_action_point","ADVERT_INACTIVE","ADVERTISER_ADS_PAUSED","is_advert_listed","icon_disabled_color","is_activate_ad_disabled","showQuickAddModal","handleOnEdit","onToggleSwitchModal","onClickEdit","should_show_tooltip_icon","_row_ref$current","_table_ref$current","setTableHeight","table_height","clientHeight","onClickTooltipIcon","updated_visibility_status","status","onClickCopy","onSwitch","onClickActivateDeactivate","onClickDelete","ProgressIndicator","total","Popover","alignment","arrow_styles","bottom","classNameBubble","classNameTarget","marginRight","offered_currency","setAdverts","setSelectedAdId","loadMoreAds","startIndex","is_table_loading","onClickCreate","MyAdsState","MyAds","_useP2PCountryList$p","useP2PCountryList","p2p_country_list","setIsLoading","getAccountStatus","is_restricted","CreateAd","show_edit_ad_form","EditAd","MyAdsTable","_ref$is_label_hidden","order_time_info_message","_options$concat","option","formatTime","some","getOrderExpiryOptions","_ref$is_only_horizont","is_only_horizontal","_ref$is_scrollable","is_scrollable","borderColor","borderWidth","payment_method_order","bank_transfer","other","getPaymentMethodOrder","sort","j","is_vertical_ellipsis_visible","block_user_sort_list","selected_sort_value","advertiser","is_blocked","alternate","setTradePartnersList","getTradePartnersList","setSearchResults","is_block_user_table_loading","rendered_trade_partners_list","BlockUserRow","BlockUserEmpty","BlockUserTableErrorIcon","MobileFullPageModal","body_className","is_modal_open","page_header_text","pageHeaderReturnFn","MY_STATS","debouncedGetSearchedTradePartners","debounce","getSearchedTradePartners","TEMPORARY_BAR","should_show_block_user_list_header","setIsBlockUserTableLoading","BlockUserDropdown","BlockUserTable","BlockUserTableError","_my_profile_store$sel","selected_trade_partner","BlockUserList","is_flex","active_tab","onClickClose","page_header_className","validateForm","_general_store$defaul","Observer","SectionError","form_error","is_submit_success","AD_TEMPLATE","_general_store$advert","_general_store$advert2","_general_store$advert3","_general_store$advert4","total_orders_count","total_turnover","show_lifetime_turnover_value","setShowLifetimeTurnoverValue","show_lifetime_order_value","setShowLifetimeOrderValue","textSize","getTextSize","TextItalic","stats_strings","text_1","text_2","stat_string","full_name","should_show_real_name","should_show_stats_and_ratings","setShouldShowStatsAndRatings","tabs","default_text","PAYMENT_METHODS","MyProfileStatsTable","SeparatorContainerLine","MyProfilePrivacy","tab","_useP2PAdvertiserPaym","mutation","update","mutation_error","reset","mutation_status","payment_method_to_edit","setAddPaymentMethodErrorMessage","setPaymentMethodToEdit","setSelectedPaymentMethod","setSelectedPaymentMethodDisplayName","setShouldShowEditPaymentMethodForm","validatePaymentMethodFields","fields_initial_values","fields","formik_ref","ModalForm","payment_method_key","current_field","_errors$payment_metho","payment_method_empty_icon","showAddPaymentMethodForm","advertiser_payment_methods","isRefetching","isCurrentModal","should_show_loading_screen","type_to_title_mapper","bank","ewallet","setPaymentMethodToDelete","add_new_button","setShouldShowAddPaymentMethodForm","ScrollbarWrapper","current_title","payment_methods","each_payment_method","show_payment_method_name","page_footer_className","renderPageFooterChildren","has_horizontal","should_show_add_payment_method_form","AddPaymentMethod","should_show_edit_payment_method_form","EditPaymentMethodForm","PaymentMethodsList","PaymentMethodsEmpty","selected_payment_method","MyProfileForm","PaymentMethods","is_form_modified","hideAddPaymentMethodForm","BlockUser","MyProfileStats","getIconSize","daily_buy_limit","daily_sell_limit","upgradable_daily_limits","advertiser_buy_limit","advertiser_sell_limit","max_daily_buy","max_daily_sell","tertiary","user_blocked_count","is_block_user_count_modal_open","setIsBlockUserCountModalOpen","getMessage","getContent","Footer","email_address","date_joined","Date","toISOString","split","user_nickname","BlockUserCount","MyProfileName","MyProfileBalance","MyProfileDetailsTable","getSettings","is_p2p_user","MyProfileDetailsContainer","MyProfileHeader","MyProfileContent","ChatHeaderBody","other_user_details","order_information","getLastOnlineLabel","ChatHeader","ChatMessageReceipt","icon_name","chat_channel","sendbird_user_id","ChatMessage","STATUS_PENDING","STATUS_ERRORED","other_sendbird_user_id","cachedUnreadMemberState","find","user_id","created_at","ChatMessageText","_ref$type","TYPE_ADMIN","AdminMessage","ChatMessages","sendbird_store","scroll_ref","onImageLoad","parentNode","setMessagesRef","chat_messages","scrollHeight","current_date","autohide","refSetter","onMessagesScroll","chat_message","is_my_message","sender_user_id","chat_info","message_date","formatMilliseconds","message_color","should_render_date","Boolean","lh","message_type","TYPE_USER","custom_type","TYPE_FILE","file_type","url","isImageType","href","rel","src","onLoad","isPDFType","convertToMB","getMessageFormat","active_chat_channel","app_id","token","ChatFooterIcon","should_show_attachment_icon","ChatFooter","file_input_ref","text_input_ref","character_count","setCharacterCount","sendMessage","el_target","should_restore_focus","document","activeElement","focus","is_chat_frozen","is_inactive_order","onKeyDown","ctrlKey","metaKey","_document$selection","element","selectionStart","selectionEnd","slice","selection","createRange","range","collapse","select","rows","click","sendFile","files","el","display","ChatWrapper","setShouldShowChatModal","setShouldShowChatOnOrders","should_navigate_to_order_details","hideDetails","setShouldNavigateToOrderDetails","renderPageHeaderElement","_regeneratorRuntime","t","prototype","n","hasOwnProperty","o","defineProperty","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","call","h","l","f","s","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","callInvokeWithMethodAndArg","Error","done","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","isNaN","isGeneratorFunction","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","reverse","pop","prev","charAt","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","Chat","onPageReturn","is_chat_loading","has_chat_error","_callee","_context","initialiseChatWsConnection","_next","_throw","should_show_chat_modal","Title","send_amount","order_type","purchase_time","OrderRow","order","getTimeLeft","time","distance","getDistanceToServerTime","millisecondsToTimer","_useStore$notificatio","removeNotificationByKey","removeNotificationMessage","order_state","setOrderState","is_timer_visible","setIsTimerVisible","should_show_order_details","has_review_details","is_buy_order_for_user","is_completed_order","is_order_reviewable","is_user_recommended_previously","order_expiry_milliseconds","rating","should_highlight_alert","should_highlight_danger","should_highlight_disabled","should_highlight_success","status_string","transaction_amount","remaining_time","setRemainingTime","interval","isOrderSeen","getLocalStorageSettingsForLoginId","notification","is_seen","onRowClick","showRatingModal","onClickDone","setOrderRating","setRatingValue","setOrders","loadMoreOrders","onClickSkip","setInterval","_getTimeLeft","createExtendedOrderDetails","order_details","server_time","clearInterval","is_active_tab","RatingCellRenderer","is_reviewable","onClickUserRatingButton","OrderTableHeader","classnames","order_table_type","order_list","INACTIVE","ContentWrapper","OrderTableContent","api_error_message","orders","modified_list","is_active_order","has_tabs","showDetails","OrderTable","date_from","date_to","filtered_date_range","handleDateChange","setDateTo","orders_list_filters","ACTIVE","count","active_notification_count","inactive_notification_count","toMoment","startOf","add","subtract","unix","setOrderTableType","CompositeCalendar","input_date_range","from","to","Orders","forceRerender","useSafeState","setForceRerenderOrders","disposeOrderIdReaction","onOrderIdUpdate","disposeOrdersUpdateReaction","onOrdersUpdate","disposeOrderVerificationReaction","verification_code","verifyEmailVerificationCode","OrderDetails"],"sourceRoot":""}