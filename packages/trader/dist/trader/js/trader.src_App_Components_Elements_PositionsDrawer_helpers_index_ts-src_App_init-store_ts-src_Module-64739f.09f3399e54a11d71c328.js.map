{"version":3,"file":"trader/js/trader.src_App_Components_Elements_PositionsDrawer_helpers_index_ts-src_App_init-store_ts-src_Module-64739f.09f3399e54a11d71c328.js","mappings":"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","sources":["webpack://@deriv/trader/../stores/src/storeContext.ts","webpack://@deriv/trader/../stores/src/stores/FeatureFlagsStore.ts","webpack://@deriv/trader/../stores/src/stores/BaseStore.ts","webpack://@deriv/trader/../stores/src/storeProvider.tsx","webpack://@deriv/trader/../stores/src/useStore.ts","webpack://@deriv/trader/./src/Analytics/index.ts","webpack://@deriv/trader/./src/App/Components/Animations/bounce.tsx","webpack://@deriv/trader/./src/App/Components/Animations/slide-in.tsx","webpack://@deriv/trader/./src/App/Components/Elements/PositionsDrawer/helpers/positions-helper.ts","webpack://@deriv/trader/./src/Stores/Modules/Trading/Actions/symbol.ts","webpack://@deriv/trader/./src/Stores/Modules/Trading/Constants/validation-rules.ts","webpack://@deriv/trader/./src/Stores/Modules/Trading/Actions/purchase.ts","webpack://@deriv/trader/./src/Stores/Modules/Trading/Helpers/accumulator.ts","webpack://@deriv/trader/./src/Stores/Modules/Trading/Actions/contract-type.ts","webpack://@deriv/trader/./src/Stores/Modules/Trading/Actions/duration.ts","webpack://@deriv/trader/./src/Stores/Modules/Trading/Actions/start-date.ts","webpack://@deriv/trader/./src/Stores/Modules/Trading/Helpers/process.ts","webpack://@deriv/trader/./src/Stores/base-store.ts","webpack://@deriv/trader/./src/Stores/Modules/Trading/Helpers/chart.ts","webpack://@deriv/trader/./src/Stores/Modules/Trading/trade-store.ts","webpack://@deriv/trader/./src/Stores/Modules/Positions/positions-store.ts","webpack://@deriv/trader/./src/Stores/Modules/Markets/markets-store.ts","webpack://@deriv/trader/./src/Stores/Modules/index.ts","webpack://@deriv/trader/./src/Stores/index.ts","webpack://@deriv/trader/./src/App/init-store.ts","webpack://@deriv/trader/./src/AppV2/Utils/positions-utils.ts","webpack://@deriv/trader/./src/AppV2/Utils/trade-params-utils.tsx","webpack://@deriv/trader/./src/AppV2/Utils/trade-types-utils.tsx","webpack://@deriv/trader/./src/Modules/Contract/Components/LastDigitPrediction/digit.tsx","webpack://@deriv/trader/./src/Modules/Contract/Components/LastDigitPrediction/digit-spot.tsx","webpack://@deriv/trader/./src/Modules/Contract/Components/LastDigitPrediction/last-digit-stat.tsx","webpack://@deriv/trader/./src/Modules/Contract/Components/LastDigitPrediction/digit-display.tsx","webpack://@deriv/trader/./src/Modules/Contract/Components/LastDigitPrediction/last-digit-pointer.tsx","webpack://@deriv/trader/./src/Modules/Contract/Components/LastDigitPrediction/last-digit-prediction.tsx","webpack://@deriv/trader/./src/Modules/Contract/Components/Digits/digits.tsx","webpack://@deriv/trader/./src/Modules/Contract/Components/Digits/index.ts","webpack://@deriv/trader/./src/Modules/Page404/Components/Page404.tsx","webpack://@deriv/trader/./src/Modules/Page404/index.ts","webpack://@deriv/trader/./src/Modules/SmartChart/Components/Markers/accumulators-profit-loss-text.tsx","webpack://@deriv/trader/./src/Modules/SmartChart/Components/Markers/accumulators-profit-loss-tooltip.tsx","webpack://@deriv/trader/./src/Modules/SmartChart/Components/Markers/accumulators-chart-elements.tsx","webpack://@deriv/trader/./src/Modules/SmartChart/Components/Markers/marker.tsx","webpack://@deriv/trader/./src/Modules/SmartChart/Components/bottom-widgets.tsx","webpack://@deriv/trader/./src/Modules/SmartChart/Components/toolbar-widgets.tsx","webpack://@deriv/trader/./src/Modules/SmartChart/Components/recent-trade-info.tsx","webpack://@deriv/trader/./src/Modules/SmartChart/Components/top-widgets.tsx","webpack://@deriv/trader/./src/Modules/SmartChart/index.js","webpack://@deriv/trader/./src/Modules/Trading/Helpers/contract-type.tsx","webpack://@deriv/trader/./src/Modules/Trading/Helpers/digits.ts","webpack://@deriv/trader/./src/Stores/Modules/Trading/Helpers/contract-type.ts","webpack://@deriv/trader/./src/Stores/Modules/Trading/Helpers/proposal.ts","webpack://@deriv/trader/./src/Stores/Modules/Trading/Helpers/start-date.ts","webpack://@deriv/trader/./src/Stores/Providers/modules-providers.tsx","webpack://@deriv/trader/./src/Stores/useModulesStores.tsx","webpack://@deriv/trader/./src/Stores/useTraderStores.tsx","webpack://@deriv/trader/./src/_common/base/server_time.ts","webpack://@deriv/trader/./src/trader-providers.tsx","webpack://@deriv/trader/../utils/src/getLocalStorage.ts","webpack://@deriv/trader/../utils/src/getFeatureFlag.ts","webpack://@deriv/trader/../utils/src/chat.ts"],"sourcesContent":["import { createContext } from 'react';\nimport type { TStores } from '../types';\n\nconst StoreContext = createContext<TStores | null>(null);\n\nexport default StoreContext;\n","import BaseStore from './BaseStore';\n\nconst FLAGS = {\n    dtrader_v2_mobile: false,\n    dtrader_v2_desktop: false,\n    next_qs: false,\n    sharkfin: false,\n    wallet: false,\n} satisfies Record<string, boolean>;\n\nexport default class FeatureFlagsStore extends BaseStore<{ [k in keyof typeof FLAGS]: boolean }> {\n    private static instance: FeatureFlagsStore | null = null;\n\n    constructor() {\n        if (FeatureFlagsStore.instance) {\n            FeatureFlagsStore.instance.cleanup();\n        }\n\n        super('FeatureFlagsStore', () => {\n            // Set the default values for the first time.\n            if (!this.data) this.update(FLAGS);\n            // Update the store data if a new flag was added or removed.\n            if (this.data && Object.keys(this.data).length !== Object.keys(FLAGS).length) {\n                this.update(old => {\n                    const data = FLAGS;\n\n                    Object.keys(FLAGS).forEach(flag => {\n                        // @ts-expect-error flag key is always present in the object, Hence can ignore the TS error.\n                        if (old[flag] !== undefined) data[flag] = old[flag];\n                    });\n\n                    return data;\n                });\n            }\n        });\n\n        this.data = FLAGS;\n        FeatureFlagsStore.instance = this;\n    }\n\n    cleanup() {\n        this.unmount();\n    }\n}\n","import { action, makeObservable, observable } from 'mobx';\nimport { makePersistable, stopPersisting } from 'mobx-persist-store';\n\nexport default class BaseStore<T> {\n    data: T | undefined = undefined;\n\n    constructor(name: string, onHydrationDone?: VoidFunction) {\n        makeObservable(this, {\n            data: observable,\n            update: action.bound,\n            unmount: action.bound,\n        });\n\n        makePersistable(this, { name, properties: ['data'], storage: window.localStorage }).then(() =>\n            onHydrationDone?.()\n        );\n    }\n\n    update(data: NonNullable<T> | ((previous?: T) => NonNullable<T>)) {\n        this.data = data instanceof Function ? data(this.data) : data;\n    }\n\n    unmount() {\n        stopPersisting(this);\n    }\n}\n","import React, { useEffect, useMemo } from 'react';\nimport StoreContext from './storeContext';\nimport { FeatureFlagsStore } from './stores';\nimport type { TCoreStores, TStores } from '../types';\n\nconst StoreProvider = ({ children, store }: React.PropsWithChildren<{ store: TCoreStores }>) => {\n    const memoizedValue: TStores = useMemo(() => {\n        // If the store is mocked for testing purposes, then return the mocked value.\n        if ('is_mock' in store && store.is_mock) return store as unknown as TStores;\n\n        // Otherwise, instantiate store and return it.\n        return {\n            ...store,\n            feature_flags: new FeatureFlagsStore(),\n        };\n    }, [store]);\n\n    useEffect(() => {\n        return () => {\n            Object.values(memoizedValue).forEach(value => {\n                if (typeof value === 'object' && 'unmount' in value) value.unmount();\n            });\n        };\n    }, [memoizedValue]);\n\n    return <StoreContext.Provider value={memoizedValue}>{children}</StoreContext.Provider>;\n};\n\nexport default StoreProvider;\n","import { useContext } from 'react';\nimport StoreContext from './storeContext';\n\nconst useStore = () => {\n    const store = useContext(StoreContext);\n\n    if (!store) {\n        throw new Error('useStore must be used within StoreProvider');\n    }\n\n    return store;\n};\n\nexport default useStore;\n","import { cacheTrackEvents } from '@deriv/shared';\nimport { Analytics } from '@deriv-com/analytics';\n\nexport const sendDtraderV2OpenToAnalytics = () => {\n    cacheTrackEvents.loadEvent([\n        {\n            event: {\n                name: 'ce_dtrader_trade_form',\n                properties: {\n                    action: 'open',\n                },\n            },\n        },\n    ]);\n};\n\nexport const sendSelectedTradeTypeToAnalytics = (\n    trade_name: string,\n    subform_name: string,\n    market_name: string,\n    trade_type_count: number\n) => {\n    cacheTrackEvents.loadEvent([\n        {\n            event: {\n                name: 'ce_dtrader_trade_form',\n                properties: {\n                    action: 'select_trade_type',\n                    trade_name,\n                    subform_name,\n                    market_name,\n                    trade_type_count,\n                },\n            },\n        },\n    ]);\n};\n\nexport const sendOpenGuideToAnalytics = (trade_name: string, subform_name: string) => {\n    cacheTrackEvents.loadEvent([\n        {\n            event: {\n                name: 'ce_dtrader_trade_form',\n                properties: {\n                    action: 'open_guide',\n                    trade_name,\n                    subform_name,\n                },\n            },\n        },\n    ]);\n};\n\nexport const sendMarketTypeToAnalytics = (market_name: string, trade_name: string) => {\n    cacheTrackEvents.loadEvent([\n        {\n            event: {\n                name: 'ce_dtrader_trade_form',\n                properties: {\n                    action: 'select_market_type',\n                    market_name,\n                    trade_name,\n                },\n            },\n        },\n    ]);\n};\n\nexport const sendDtraderV2PurchaseToAnalytics = (trade_name: string, market_name: string, contract_id: number) => {\n    cacheTrackEvents.loadEvent([\n        {\n            event: {\n                name: 'ce_dtrader_trade_form',\n                properties: {\n                    action: 'run_contract',\n                    trade_name,\n                    market_name,\n                    contract_id: contract_id.toString(),\n                },\n            },\n        },\n    ]);\n};\n\nexport const sendDtraderPurchaseToAnalytics = (trade_name: string, market_name: string, contract_id: number) => {\n    cacheTrackEvents.loadEvent([\n        {\n            event: {\n                name: 'ce_contracts_set_up_form',\n                properties: {\n                    action: 'run_contract',\n                    trade_name,\n                    market_name,\n                    contract_id: contract_id.toString(),\n                },\n            },\n        },\n    ]);\n};\n","import React from 'react';\nimport { motion } from 'framer-motion';\n\ntype TBounce = React.PropsWithChildren<{\n    className: string;\n    is_visible: boolean;\n    keyname: string;\n}>;\n\nconst BounceUp = {\n    animate: {\n        y: 0,\n        opacity: 1,\n    },\n    initial: {\n        y: 35,\n        opacity: 0,\n    },\n    transition: {\n        type: 'spring',\n        stiffness: 500,\n        damping: 15,\n        duration: 0.3,\n    },\n};\n\nconst Bounce = ({ children, className, is_visible, keyname }: TBounce) =>\n    is_visible ? (\n        <motion.div\n            initial={BounceUp.initial}\n            animate={BounceUp.animate}\n            transition={BounceUp.transition}\n            className={className}\n            key={keyname}\n        >\n            {children}\n        </motion.div>\n    ) : null;\n\nexport { Bounce };\n","import React from 'react';\nimport { motion } from 'framer-motion';\n\ntype TSlideIn = React.PropsWithChildren<{\n    className: string;\n    is_visible?: boolean;\n    keyname: string;\n    type?: string;\n}>;\n\nconst SlideInFromTop = {\n    initial: {\n        y: -20,\n        opacity: 0,\n    },\n    animate: {\n        y: 0,\n        opacity: 1,\n    },\n    transition: {\n        duration: 0.2,\n    },\n};\n\nconst SlideInFromBottom = {\n    initial: {\n        y: 20,\n        opacity: 0,\n    },\n    animate: {\n        y: 0,\n        opacity: 1,\n    },\n    transition: {\n        duration: 0.2,\n    },\n};\n\nconst SlideIn = ({ children, className, keyname, is_visible, type }: TSlideIn) => {\n    if (type === 'bottom') {\n        return (\n            <>\n                {is_visible && (\n                    <motion.div\n                        initial={SlideInFromBottom.initial}\n                        animate={SlideInFromBottom.animate}\n                        transition={SlideInFromBottom.transition}\n                        className={className}\n                        key={keyname}\n                    >\n                        {children}\n                    </motion.div>\n                )}\n            </>\n        );\n    }\n    return (\n        <>\n            {is_visible && (\n                <motion.div\n                    initial={SlideInFromTop.initial}\n                    animate={SlideInFromTop.animate}\n                    transition={SlideInFromTop.transition}\n                    className={className}\n                    key={keyname}\n                >\n                    {children}\n                </motion.div>\n            )}\n        </>\n    );\n};\n\nexport { SlideIn };\n","import { localize } from '@deriv/translations';\nimport {\n    addComma,\n    isHighLow,\n    getContractTypesConfig,\n    isCallPut,\n    isVanillaContract,\n    TContractInfo,\n    CONTRACT_TYPES,\n    TRADE_TYPES,\n} from '@deriv/shared';\n\nexport const addCommaToNumber = (\n    num: number | null | undefined,\n    decimal_places?: number | undefined\n): string | number | null | undefined => {\n    if (!num || isNaN(num)) {\n        return num;\n    }\n    const n = String(decimal_places ? (+num).toFixed(decimal_places) : num);\n    const p = n.indexOf('.');\n    return n.replace(/\\d(?=(?:\\d{3})+(?:\\.|$))/g, (m, i) => (p <= 0 || i < p ? `${m},` : m));\n};\n\nexport const getBarrierLabel = (contract_info: TContractInfo) => {\n    if (isDigitType(contract_info.contract_type)) {\n        return localize('Target');\n    }\n    if (isVanillaContract(contract_info.contract_type)) {\n        return localize('Strike');\n    }\n    return localize('Barrier');\n};\n\nexport const getBarrierValue = (contract_info: TContractInfo) => {\n    if (isDigitType(contract_info.contract_type)) {\n        return digitTypeMap(contract_info)[contract_info.contract_type as keyof ReturnType<typeof digitTypeMap>];\n    }\n    return contract_info.barrier ? addComma(contract_info.barrier) : null;\n};\n\nexport const isDigitType = (contract_type: TContractInfo['contract_type']) =>\n    contract_type && /digit/.test(contract_type.toLowerCase());\n\nconst digitTypeMap = (contract_info: TContractInfo) => ({\n    [CONTRACT_TYPES.MATCH_DIFF.DIFF]: localize('Not {{barrier}}', { barrier: contract_info.barrier }),\n    [CONTRACT_TYPES.EVEN_ODD.EVEN]: localize('Even'),\n    [CONTRACT_TYPES.MATCH_DIFF.MATCH]: localize('Equals {{barrier}}', { barrier: contract_info.barrier }),\n    [CONTRACT_TYPES.EVEN_ODD.ODD]: localize('Odd'),\n    [CONTRACT_TYPES.OVER_UNDER.OVER]: localize('Over {{barrier}}', { barrier: contract_info.barrier }),\n    [CONTRACT_TYPES.OVER_UNDER.UNDER]: localize('Under {{barrier}}', { barrier: contract_info.barrier }),\n});\n\nexport const filterByContractType = (\n    { contract_type, shortcode }: { contract_type?: string; shortcode?: string },\n    trade_contract_type: string\n) => {\n    const is_call_put = isCallPut(trade_contract_type as Parameters<typeof isCallPut>[0]);\n    const is_high_low = isHighLow({ shortcode });\n    const is_vanilla = isVanillaContract(contract_type);\n    const { CALL, CALLE, PUT, PUTE } = CONTRACT_TYPES;\n    const trade_types = is_call_put\n        ? [CALL, CALLE, PUT, PUTE]\n        : getContractTypesConfig()[trade_contract_type]?.trade_types;\n    const match = trade_types?.includes(contract_type ?? '');\n    if (trade_contract_type === TRADE_TYPES.HIGH_LOW) return is_high_low;\n    return match && (is_vanilla || !is_high_low);\n};\n","import { ContractType } from 'Stores/Modules/Trading/Helpers/contract-type';\n\nexport const onChangeSymbolAsync = async (symbol: string): Promise<void> => {\n    await ContractType.buildContractTypesConfig(symbol);\n};\n","import { localize } from '@deriv/translations';\nimport { isHourValid, isMinuteValid, isTimeValid, toMoment, TRuleOptions } from '@deriv/shared';\nimport { isSessionAvailable } from '../Helpers/start-date';\nimport { TTradeStore } from 'Types';\n\ntype TValidationRules = {\n    [key: string]: {\n        rules?: Array<string | TRuleOptions<TTradeStore>>[];\n        trigger?: string;\n    };\n};\n\nconst tradeSpecificBarrierCheck = (is_vanilla: boolean, input: number) => is_vanilla || input !== 0;\n\nexport const getValidationRules = (): TValidationRules => ({\n    amount: {\n        rules: [\n            ['req', { message: localize('Amount is a required field.') }],\n            ['number', { min: 0, type: 'float' }],\n        ],\n    },\n    barrier_1: {\n        rules: [\n            [\n                'req',\n                {\n                    condition: store => !!store.barrier_count && store.form_components.indexOf('barrier') > -1,\n                    message: localize('Barrier is a required field.'),\n                },\n            ],\n            ['barrier', { condition: (store: TTradeStore) => !!store.barrier_count }],\n            [\n                'custom',\n                {\n                    func: (value: TTradeStore['barrier_1'], options, store, inputs) =>\n                        Number(store?.barrier_count) > 1 ? +value > Number(inputs?.barrier_2) : true,\n                    message: localize('Higher barrier must be higher than lower barrier.'),\n                },\n            ],\n            [\n                'custom',\n                {\n                    func: (value: TTradeStore['barrier_1'], options, store, inputs) =>\n                        /^[+-]/.test(inputs?.barrier_1 ?? '')\n                            ? tradeSpecificBarrierCheck(!!store?.is_vanilla, Number(inputs?.barrier_1))\n                            : true,\n                    message: localize('Barrier cannot be zero.'),\n                },\n            ],\n        ],\n        trigger: 'barrier_2',\n    },\n    barrier_2: {\n        rules: [\n            [\n                'req',\n                {\n                    condition: store => store.barrier_count > 1 && store.form_components.indexOf('barrier') > -1,\n                    message: localize('Barrier is a required field.'),\n                },\n            ],\n            ['barrier', { condition: (store: TTradeStore) => !!store.barrier_count }],\n            [\n                'custom',\n                {\n                    func: (value: TTradeStore['barrier_2'], options, store, inputs) =>\n                        (/^[+-]/g.test(inputs?.barrier_1 ?? '') && /^[+-]/g.test(value)) ||\n                        (/^(?![+-])/g.test(inputs?.barrier_1 ?? '') && /^(?![+-])/g.test(value)),\n                    message: localize('Both barriers should be relative or absolute'),\n                },\n            ],\n            [\n                'custom',\n                {\n                    func: (value: TTradeStore['barrier_2'], options, store, inputs) =>\n                        Number(inputs?.barrier_1) > +value,\n                    message: localize('Lower barrier must be lower than higher barrier.'),\n                },\n            ],\n        ],\n        trigger: 'barrier_1',\n    },\n    duration: {\n        rules: [['req', { message: localize('Duration is a required field.') }]],\n    },\n    start_date: {\n        trigger: 'start_time',\n    },\n    expiry_date: {\n        trigger: 'expiry_time',\n    },\n    start_time: {\n        rules: [\n            [\n                'custom',\n                {\n                    func: (value: TTradeStore['start_time'], options, store) =>\n                        store?.contract_start_type === 'spot' || isTimeValid(value ?? ''),\n                    message: localize('Please enter the start time in the format \"HH:MM\".'),\n                },\n            ],\n            [\n                'custom',\n                {\n                    func: (value: TTradeStore['start_time'], options, store) =>\n                        store?.contract_start_type === 'spot' || isHourValid(value ?? ''),\n                    message: localize('Hour must be between 0 and 23.'),\n                },\n            ],\n            [\n                'custom',\n                {\n                    func: (value: TTradeStore['start_time'], options, store) =>\n                        store?.contract_start_type === 'spot' || isMinuteValid(value ?? ''),\n                    message: localize('Minute must be between 0 and 59.'),\n                },\n            ],\n            [\n                'custom',\n                {\n                    func: (value: TTradeStore['start_time'], options, store) => {\n                        if (store?.contract_start_type === 'spot') return true;\n                        if (!isTimeValid(value ?? '')) return false;\n                        const start_moment = toMoment(store?.start_date);\n                        const start_moment_clone = start_moment.clone();\n                        const [h, m] = value?.split(':') ?? [];\n                        return isSessionAvailable(\n                            store?.sessions,\n                            start_moment_clone.hour(+h).minute(+m),\n                            start_moment\n                        );\n                    },\n                    message: localize('Start time cannot be in the past.'),\n                },\n            ],\n        ],\n    },\n    expiry_time: {\n        rules: [\n            [\n                'custom',\n                {\n                    func: (value: TTradeStore['expiry_time'], options, store) =>\n                        store?.contract_start_type === 'spot' || isTimeValid(value ?? ''),\n                    message: localize('Please enter the expiry time in the format \"HH:MM\".'),\n                },\n            ],\n            [\n                'custom',\n                {\n                    func: (value: TTradeStore['expiry_time'], options, store) =>\n                        store?.contract_start_type === 'spot' || isHourValid(value ?? ''),\n                    message: localize('Hour must be between 0 and 23.'),\n                },\n            ],\n            [\n                'custom',\n                {\n                    func: (value: TTradeStore['expiry_time'], options, store) =>\n                        store?.contract_start_type === 'spot' || isMinuteValid(value ?? ''),\n                    message: localize('Minute must be between 0 and 59.'),\n                },\n            ],\n            [\n                'custom',\n                {\n                    func: (value: TTradeStore['expiry_time'], options, store) => {\n                        if (store?.contract_start_type === 'spot') return true;\n                        if (!isTimeValid(value ?? '')) return false;\n                        const start_moment = toMoment(store?.start_date);\n                        const start_moment_clone = start_moment.clone();\n                        const [h, m] = value?.split(':') ?? [];\n                        return isSessionAvailable(\n                            store?.sessions,\n                            start_moment_clone.hour(+h).minute(+m),\n                            start_moment\n                        );\n                    },\n                    message: localize('Expiry time cannot be in the past.'),\n                },\n            ],\n        ],\n    },\n    ...getMultiplierValidationRules(),\n});\n\nexport const getMultiplierValidationRules = () => ({\n    stop_loss: {\n        rules: [\n            [\n                'req',\n                {\n                    condition: (store: TTradeStore) => store.has_stop_loss && !store.stop_loss,\n                    message: localize('Please enter a stop loss amount.'),\n                },\n            ],\n        ],\n    },\n    take_profit: {\n        rules: [\n            [\n                'req',\n                {\n                    condition: (store: TTradeStore) => store.has_take_profit && !store.take_profit,\n                    message: localize('Please enter a take profit amount.'),\n                },\n            ],\n        ],\n    },\n});\n","import { Buy, BuyContractResponse, BuyContractRequest } from '@deriv/api-types';\nimport { WS } from '@deriv/shared';\n\ntype TResponse = BuyContractResponse & {\n    echo_req: Buy;\n    error?: {\n        code: string;\n        message: string;\n        details?: BuyContractResponse['buy'] & { field: string };\n    };\n};\n\nexport const processPurchase = async (\n    proposal_id: string,\n    price: string | number,\n    passthrough?: BuyContractRequest['passthrough']\n): Promise<TResponse> =>\n    WS.buy({\n        proposal_id,\n        price,\n        ...(passthrough && { passthrough }),\n    });\n","/**\n * @param {Object} previous_ticks_history_stats - an object of type: { ticks_stayed_in: number[], last_tick_epoch: number }\n *                                                with ticks_stayed_in starting with the latest counter value;\n * @param {number[]} new_ticks_history_stats - an array of ticks counters containing 100 last values at first, and then only 1 latest updated counter value;\n * @param {number} last_tick_epoch - an epoch of the latest tick counted by the latest (last) ticks counter in new_ticks_stayed_in array;\n * @returns an object of the same type as previous_ticks_history_stats.\n */\n\nimport { TTradeStore } from 'Types';\n\ntype TGetUpdatedTicksHistoryStats = {\n    previous_ticks_history_stats: TTradeStore['ticks_history_stats'];\n    new_ticks_history_stats?: TTradeStore['ticks_history_stats']['ticks_stayed_in'];\n    last_tick_epoch: TTradeStore['ticks_history_stats']['last_tick_epoch'];\n};\n\nexport const getUpdatedTicksHistoryStats = ({\n    previous_ticks_history_stats = {},\n    new_ticks_history_stats = [],\n    last_tick_epoch,\n}: TGetUpdatedTicksHistoryStats) => {\n    // we anticipate that the latest counter value will be the last one in the received new_ticks_stayed_in array:\n    let ticks_stayed_in = [];\n    const previous_history = previous_ticks_history_stats.ticks_stayed_in || [];\n    const previous_epoch = previous_ticks_history_stats.last_tick_epoch ?? 0;\n    if (!new_ticks_history_stats.length || !last_tick_epoch) return previous_ticks_history_stats;\n    if (new_ticks_history_stats.length > 1) {\n        ticks_stayed_in = [...new_ticks_history_stats].reverse();\n    } else if (new_ticks_history_stats[0] <= previous_history[0] && last_tick_epoch > previous_epoch) {\n        ticks_stayed_in = [new_ticks_history_stats[0], ...previous_history.slice(0, previous_history.length - 1)];\n    } else if (last_tick_epoch === previous_epoch) {\n        ticks_stayed_in = previous_history;\n    } else {\n        ticks_stayed_in = [new_ticks_history_stats[0], ...previous_history.slice(1)];\n    }\n    return { ticks_stayed_in, last_tick_epoch };\n};\n","import { isDtraderV2DesktopEnabled, isDtraderV2MobileEnabled } from '@deriv/shared';\nimport { ContractType } from 'Stores/Modules/Trading/Helpers/contract-type';\nimport { TTradeStore } from 'Types';\n\nexport const onChangeContractTypeList = ({\n    root_store,\n    contract_types_list,\n    contract_types_list_v2,\n    contract_type,\n}: TTradeStore) => {\n    const is_dtrader_v2_enabled =\n        isDtraderV2MobileEnabled(root_store?.ui.is_mobile) || isDtraderV2DesktopEnabled(root_store?.ui.is_desktop);\n    const list = is_dtrader_v2_enabled ? contract_types_list_v2 : contract_types_list;\n    return ContractType.getContractType(list, contract_type);\n};\n\nexport const onChangeContractType = (store: TTradeStore) => {\n    return ContractType.getContractValues(store);\n};\n","import { getExpiryType, getDurationMinMaxValues } from '@deriv/shared';\nimport { ContractType } from 'Stores/Modules/Trading/Helpers/contract-type';\nimport { TTradeStore } from 'Types';\n\ntype TOnChangeExpiry = (store: TTradeStore) => {\n    contract_expiry_type: string;\n    barrier_count?: number;\n    barrier_1?: string;\n    barrier_2?: string;\n};\ntype TAssertDurationParams = Partial<\n    Pick<TTradeStore, 'contract_expiry_type' | 'duration' | 'duration_min_max' | 'duration_unit'>\n>;\n\nexport const onChangeExpiry: TOnChangeExpiry = store => {\n    const contract_expiry_type = getExpiryType(store);\n\n    // TODO: there will be no barrier available if contract is only daily but client chooses intraday endtime. we should find a way to handle this.\n    const obj_barriers =\n        store.contract_expiry_type !== contract_expiry_type && // barrier value changes for tick/intraday/daily\n        ContractType.getBarriers(store.contract_type, contract_expiry_type);\n\n    return {\n        contract_expiry_type,\n        ...obj_barriers,\n    };\n};\n\nexport const onChangeContractType = (store: TTradeStore) => {\n    const contract_expiry_type = getExpiryType(store);\n\n    const { duration, duration_min_max, duration_unit } = store;\n\n    const obj_duration = assertDuration({ contract_expiry_type, duration, duration_min_max, duration_unit });\n\n    return {\n        ...obj_duration,\n    };\n};\n\nconst assertDuration = ({\n    contract_expiry_type,\n    duration,\n    duration_min_max,\n    duration_unit,\n}: TAssertDurationParams = {}) => {\n    const [min, max] = getDurationMinMaxValues(duration_min_max ?? {}, contract_expiry_type ?? '', duration_unit ?? '');\n\n    if (Number(duration) < Number(min)) {\n        return { duration: min };\n    }\n    if (Number(duration) > Number(max)) {\n        return { duration: max };\n    }\n    return {};\n};\n","import { ContractType } from 'Stores/Modules/Trading/Helpers/contract-type';\nimport { TTradeStore } from 'Types';\n\nexport const onChangeStartDate = async (store: TTradeStore) => {\n    const { contract_type, duration_unit, start_date } = store;\n    const server_time = store.root_store?.common.server_time;\n    let { start_time, expiry_type } = store;\n\n    start_time = start_time || server_time?.clone().add(6, 'minute').format('HH:mm'); // when there is not a default value for start_time, it should be set more than 5 min after server_time\n\n    const obj_contract_start_type = ContractType.getStartType(start_date);\n    const contract_start_type = obj_contract_start_type.contract_start_type;\n    const obj_sessions = ContractType.getSessions(contract_type, start_date);\n    const sessions = obj_sessions.sessions;\n    const obj_start_time = ContractType.getStartTime(sessions, start_date, start_time);\n\n    const obj_duration_units_list = ContractType.getDurationUnitsList(contract_type, contract_start_type);\n    const duration_units_list = obj_duration_units_list.duration_units_list;\n    const obj_duration_unit = ContractType.getDurationUnit(duration_unit, contract_type, contract_start_type);\n\n    const obj_expiry_type = ContractType.getExpiryType(duration_units_list, expiry_type);\n    expiry_type = obj_expiry_type.expiry_type;\n    const obj_expiry_date = ContractType.getExpiryDate(duration_units_list, store.expiry_date, expiry_type, start_date);\n\n    const obj_duration_min_max = ContractType.getDurationMinMax(contract_type, contract_start_type);\n\n    return {\n        ...obj_contract_start_type,\n        ...obj_duration_units_list,\n        ...obj_duration_min_max,\n        ...obj_duration_unit,\n        ...obj_sessions,\n        ...obj_start_time,\n        ...obj_expiry_date,\n        ...obj_expiry_type,\n    };\n};\n\nexport const onChangeExpiry = async (store: TTradeStore) => {\n    const { start_time, expiry_date, expiry_type, expiry_time, start_date, symbol, sessions } = store;\n    const trading_times = await ContractType.getTradingTimes(expiry_date, symbol);\n    const obj_market_open_times = { market_open_times: trading_times.open };\n    const obj_market_close_times = { market_close_times: trading_times.close };\n\n    const market_close_times = obj_market_close_times.market_close_times;\n    const obj_expiry_time = ContractType.getExpiryTime(\n        expiry_date,\n        expiry_time,\n        expiry_type,\n        market_close_times,\n        sessions,\n        start_date,\n        start_time\n    );\n\n    return {\n        ...obj_expiry_time,\n        ...obj_market_open_times,\n        ...obj_market_close_times,\n    };\n};\n","import { ContractType as ContractTypeHelper } from 'Stores/Modules/Trading/Helpers/contract-type';\nimport * as ContractType from '../Actions/contract-type';\nimport * as Duration from '../Actions/duration';\nimport * as StartDate from '../Actions/start-date';\nimport { TTradeStore } from 'Types';\n\n// remove local TGetSnapshot type and assertion after TS migration for trader package is complete\ntype TGetSnapshot = (properties?: string[]) => TTradeStore;\n\nconst processInSequence = async (\n    store: TTradeStore,\n    functions: ReturnType<typeof getMethodsList> | ReturnType<typeof getExpiryMethodsList>\n) => {\n    const snapshot = (store.getSnapshot as TGetSnapshot)();\n    // To make sure that every function is invoked and affects the snapshot respectively, we have to use for instead of forEach\n    for (let i = 0; i < functions.length; i++) {\n        // Shallow copy with Object.assign is good enough to extend the snapshot with new state\n        // we don't need deep extension here, since each function in functions array composes a property of the store completely\n        Object.assign(snapshot, await functions[i](snapshot)); // eslint-disable-line no-await-in-loop\n    }\n    store.updateStore({\n        ...snapshot,\n    });\n};\n\nexport const processTradeParams = async (store: TTradeStore, new_state: Partial<TTradeStore>) => {\n    const functions = getMethodsList(store, new_state);\n    await processInSequence(store, functions);\n\n    const duration_functions = getExpiryMethodsList();\n    await processInSequence(store, duration_functions);\n\n    store.updateStore({\n        is_trade_enabled: true,\n        is_trade_enabled_v2: true,\n    });\n};\n\nconst getMethodsList = (\n    store: Parameters<typeof processTradeParams>[0],\n    new_state: Parameters<typeof processTradeParams>[1]\n) => {\n    const filtered_keys = Object.keys(new_state).filter(key => /\\b(symbol|contract_type|is_equal)\\b/.test(key));\n    return [\n        ContractTypeHelper.getContractCategories,\n        ContractType.onChangeContractTypeList,\n        ...(filtered_keys.length > 0 || !store.contract_type // symbol/contract_type changed or contract_type not set yet\n            ? [ContractType.onChangeContractType]\n            : []),\n        StartDate.onChangeStartDate,\n        Duration.onChangeExpiry, // it should be always after StartDate.onChangeStartDate\n        ...(filtered_keys.length || !store.contract_type // symbol/contract_type changed or contract_type not set yet\n            ? [Duration.onChangeContractType]\n            : []),\n    ];\n};\n\nconst getExpiryMethodsList = () => [StartDate.onChangeExpiry];\n","import { action, intercept, observable, reaction, toJS, when, makeObservable } from 'mobx';\nimport { isProduction, isEmptyObject, Validator } from '@deriv/shared';\nimport { getValidationRules } from './Modules/Trading/Constants/validation-rules';\nimport { TRootStore } from 'Types';\n\ntype TValidationRules = ReturnType<typeof getValidationRules> | Record<string, never>;\n\ntype TBaseStoreOptions = {\n    root_store: TRootStore;\n    local_storage_properties?: string[];\n    session_storage_properties?: string[];\n    validation_rules?: TValidationRules;\n    store_name?: string;\n};\n\n/**\n * BaseStore class is the base class for all defined stores in the application. It handles some stuff such as:\n *  1. Creating snapshot object from the store.\n *  2. Saving the store's snapshot in local/session storage and keeping them in sync.\n */\nexport default class BaseStore {\n    /**\n     * An enum object to define LOCAL_STORAGE and SESSION_STORAGE\n     */\n    static STORAGES = Object.freeze({\n        LOCAL_STORAGE: Symbol('LOCAL_STORAGE'),\n        SESSION_STORAGE: Symbol('SESSION_STORAGE'),\n    });\n    clientInitDisposer: null | (() => void) = null;\n    client_init_listener: null | (() => Promise<void>) = null;\n    logoutDisposer: null | (() => void) = null;\n    logout_listener: null | (() => Promise<void>) = null;\n    local_storage_properties: string[];\n    networkStatusChangeDisposer: null | (() => void) = null;\n    network_status_change_listener: null | ((is_online: boolean) => void) = null;\n    partial_fetch_time = 0;\n    preSwitchAccountDisposer: null | (() => void) = null;\n    pre_switch_account_listener: null | (() => Promise<void>) = null;\n    realAccountSignupEndedDisposer: null | (() => void) = null;\n    real_account_signup_ended_listener: null | (() => Promise<void>) = null;\n    root_store: TRootStore;\n    session_storage_properties: string[];\n    store_name = '';\n    switchAccountDisposer: null | (() => void) = null;\n    switch_account_listener: null | (() => Promise<void>) = null;\n    themeChangeDisposer: null | (() => void) = null;\n    theme_change_listener: null | ((is_dark_mode_on: boolean) => void) = null;\n    validation_errors: { [key: string]: string[] } = {};\n    validation_rules: TValidationRules | Record<string, never> = {};\n    /**\n     * Constructor of the base class that gets properties' name of child which should be saved in storages\n     *\n     * @param {Object} options - An object that contains the following properties:\n     *     @property {Object}   root_store - An object that contains the root store of the app.\n     *     @property {String[]} local_storage_properties - A list of properties' names that should be kept in localStorage.\n     *     @property {String[]} session_storage_properties - A list of properties' names that should be kept in sessionStorage.\n     *     @property {Object}   validation_rules - An object that contains the validation rules for each property of the store.\n     *     @property {String}   store_name - Explicit store name for browser application storage (to bypass minification)\n     */\n    constructor(options = {} as TBaseStoreOptions) {\n        makeObservable(this, {\n            validation_errors: observable,\n            validation_rules: observable,\n            partial_fetch_time: observable,\n            retrieveFromStorage: action,\n            setValidationErrorMessages: action,\n            setValidationRules: action,\n            addRule: action,\n            validateProperty: action,\n            validateAllProperties: action,\n            onSwitchAccount: action.bound,\n            onPreSwitchAccount: action.bound,\n            onLogout: action.bound,\n            onClientInit: action.bound,\n            onNetworkStatusChange: action.bound,\n            onThemeChange: action.bound,\n            onRealAccountSignupEnd: action.bound,\n            disposePreSwitchAccount: action.bound,\n            disposeSwitchAccount: action.bound,\n            disposeLogout: action.bound,\n            disposeClientInit: action.bound,\n            disposeNetworkStatusChange: action.bound,\n            disposeThemeChange: action.bound,\n            disposeRealAccountSignupEnd: action.bound,\n            onUnmount: action.bound,\n            assertHasValidCache: action.bound,\n        });\n\n        const { root_store, local_storage_properties, session_storage_properties, validation_rules, store_name } =\n            options;\n\n        Object.defineProperty(this, 'root_store', {\n            enumerable: false,\n            writable: true,\n        });\n        Object.defineProperty(this, 'local_storage_properties', {\n            enumerable: false,\n            writable: true,\n        });\n        Object.defineProperty(this, 'session_storage_properties', {\n            enumerable: false,\n            writable: true,\n        });\n\n        const has_local_or_session_storage = local_storage_properties?.length || session_storage_properties?.length;\n\n        if (has_local_or_session_storage) {\n            if (!store_name) {\n                throw new Error('store_name is required for local/session storage');\n            }\n\n            Object.defineProperty(this, 'store_name', {\n                value: store_name,\n                enumerable: false,\n                writable: false,\n            });\n        }\n\n        this.root_store = root_store;\n        this.local_storage_properties = local_storage_properties || [];\n        this.session_storage_properties = session_storage_properties || [];\n\n        setTimeout(() => {\n            this.setValidationRules(validation_rules);\n\n            this.setupReactionForLocalStorage();\n            this.setupReactionForSessionStorage();\n            this.retrieveFromStorage();\n        }, 0);\n    }\n\n    /**\n     * Returns an snapshot of the current store\n     *\n     * @param {String[]} properties - A list of properties' names that should be in the snapshot.\n     *\n     * @return {Object} Returns a cloned object of the store.\n     */\n    getSnapshot(properties: string[]): object {\n        let snapshot = toJS(this);\n\n        if (!isEmptyObject(this.root_store)) {\n            snapshot.root_store = this.root_store;\n        }\n\n        if (properties?.length) {\n            snapshot = properties.reduce(\n                (result, p) => Object.assign(result, { [p]: snapshot[p as keyof this] }),\n                {} as this\n            );\n        }\n\n        return snapshot;\n    }\n\n    /**\n     * Sets up a reaction on properties which are mentioned in `local_storage_properties`\n     *  and invokes `saveToStorage` when there are any changes on them.\n     *\n     */\n    setupReactionForLocalStorage() {\n        if (this.local_storage_properties.length) {\n            reaction(\n                () => this.local_storage_properties.map(i => this[i as keyof this]),\n                () => this.saveToStorage(this.local_storage_properties, BaseStore.STORAGES.LOCAL_STORAGE)\n            );\n        }\n    }\n\n    /**\n     * Sets up a reaction on properties which are mentioned in `session_storage_properties`\n     *  and invokes `saveToStorage` when there are any changes on them.\n     *\n     */\n    setupReactionForSessionStorage() {\n        if (this.session_storage_properties.length) {\n            reaction(\n                () => this.session_storage_properties.map(i => this[i as keyof this]),\n                () => this.saveToStorage(this.session_storage_properties, BaseStore.STORAGES.SESSION_STORAGE)\n            );\n        }\n    }\n\n    /**\n     * Removes properties that are not passed from the snapshot of the store and saves it to the passed storage\n     *\n     * @param {String[]} properties - A list of the store's properties' names which should be saved in the storage.\n     * @param {Symbol}   storage    - A symbol object that defines the storage which the snapshot should be stored in it.\n     *\n     */\n    saveToStorage(properties: string[] = [], storage = Symbol('')) {\n        const snapshot = JSON.stringify(this.getSnapshot(properties), (key, value) => {\n            if (value !== null) return value;\n            return undefined;\n        });\n\n        if (storage === BaseStore.STORAGES.LOCAL_STORAGE) {\n            localStorage.setItem(this.store_name, snapshot);\n        } else if (storage === BaseStore.STORAGES.SESSION_STORAGE) {\n            sessionStorage.setItem(this.store_name, snapshot);\n        }\n    }\n\n    /**\n     * Retrieves saved snapshot of the store and assigns to the current instance.\n     *\n     */\n    retrieveFromStorage() {\n        const local_storage_snapshot = JSON.parse(String(localStorage.getItem(this.store_name)));\n        const session_storage_snapshot = JSON.parse(String(sessionStorage.getItem(this.store_name)));\n\n        const snapshot = { ...local_storage_snapshot, ...session_storage_snapshot };\n\n        Object.keys(snapshot).forEach(k => (this[k as keyof this] = snapshot[k]));\n    }\n\n    /**\n     * Sets validation error messages for an observable property of the store\n     *\n     * @param {String} propertyName - The observable property's name\n     * @param [{String}] messages - An array of strings that contains validation error messages for the particular property.\n     *\n     */\n    setValidationErrorMessages(propertyName: string, messages: string[]) {\n        const is_different = () =>\n            !!this.validation_errors[propertyName]\n                .filter(x => !messages.includes(x))\n                .concat(messages.filter(x => !this.validation_errors[propertyName].includes(x))).length;\n        if (!this.validation_errors[propertyName] || is_different()) {\n            this.validation_errors[propertyName] = messages;\n        }\n    }\n\n    /**\n     * Sets validation rules\n     *\n     * @param {object} rules\n     *\n     */\n    setValidationRules(rules: TValidationRules = {}): void {\n        Object.keys(rules).forEach(key => {\n            this.addRule<keyof TValidationRules>(key as keyof TValidationRules, rules[key as keyof TValidationRules]);\n        });\n    }\n\n    /**\n     * Adds rules to the particular property\n     *\n     * @param {String} property\n     * @param {String} rules\n     *\n     */\n    addRule<T extends keyof TValidationRules>(property: T, rules: TValidationRules[T]) {\n        this.validation_rules[property] = rules;\n\n        intercept(this, property as unknown as keyof this, change => {\n            this.validateProperty(property, change.newValue);\n            return change;\n        });\n    }\n\n    /**\n     * Validates a particular property of the store\n     *\n     * @param {String} property - The name of the property in the store\n     * @param {object} value    - The value of the property, it can be undefined.\n     *\n     */\n    validateProperty<T extends BaseStore>(property: string, value: T[keyof T]) {\n        const validation_rules_for_property = this.validation_rules[property] ?? {};\n        const trigger = (\n            'trigger' in validation_rules_for_property ? validation_rules_for_property.trigger : undefined\n        ) as keyof this;\n        const inputs = { [property]: value ?? this[property as keyof this] } as Pick<this, keyof this>;\n        const validation_rules = {\n            [property]: 'rules' in validation_rules_for_property ? validation_rules_for_property.rules : [],\n        };\n\n        if (!!trigger && Object.hasOwnProperty.call(this, trigger)) {\n            const validation_rules_for_trigger = this.validation_rules[trigger as keyof TValidationRules];\n            inputs[trigger] = this[trigger];\n            validation_rules[trigger as keyof TValidationRules] =\n                'rules' in validation_rules_for_trigger ? validation_rules_for_trigger.rules : [];\n        }\n        const validator = new Validator(inputs, validation_rules, this);\n\n        validator.isPassed();\n\n        Object.keys(inputs).forEach(key => {\n            this.setValidationErrorMessages(key, validator.errors.get(key));\n        });\n    }\n\n    /**\n     * Validates all properties which validation rule has been set for.\n     *\n     */\n    validateAllProperties() {\n        const validation_rules = Object.keys(this.validation_rules);\n        const validation_errors = Object.keys(this.validation_errors);\n        validation_rules.forEach(p => {\n            this.validateProperty(p, this[p as keyof this]);\n        });\n\n        // Remove keys that are present in error, but not in rules:\n        validation_errors.forEach(error => {\n            if (!validation_rules.includes(error)) {\n                delete this.validation_errors[error];\n            }\n        });\n    }\n\n    onSwitchAccount(listener: null | (() => Promise<void>)): void {\n        if (listener) {\n            this.switch_account_listener = listener;\n\n            this.switchAccountDisposer = when(\n                () => !!this.root_store.client.switch_broadcast,\n                () => {\n                    try {\n                        const result = this.switch_account_listener?.();\n                        if (result?.then && typeof result.then === 'function') {\n                            result.then(() => {\n                                this.root_store.client.switchEndSignal();\n                                this.onSwitchAccount(this.switch_account_listener);\n                            });\n                        } else {\n                            throw new Error('Switching account listeners are required to return a promise.');\n                        }\n                    } catch (error) {\n                        // there is no listener currently active. so we can just ignore the error raised from treating\n                        // a null object as a function. Although, in development mode, we throw a console error.\n                        if (!isProduction()) {\n                            console.error(error); // eslint-disable-line\n                        }\n                    }\n                }\n            );\n        }\n    }\n\n    onPreSwitchAccount(listener: null | (() => Promise<void>)): void {\n        if (listener) {\n            this.pre_switch_account_listener = listener;\n            this.preSwitchAccountDisposer = when(\n                () => !!this.root_store.client.pre_switch_broadcast,\n                () => {\n                    try {\n                        const result = this.pre_switch_account_listener?.();\n                        if (result?.then && typeof result.then === 'function') {\n                            result.then(() => {\n                                this.root_store.client.setPreSwitchAccount(false);\n                                this.onPreSwitchAccount(this.pre_switch_account_listener);\n                            });\n                        } else {\n                            throw new Error('Pre-switch account listeners are required to return a promise.');\n                        }\n                    } catch (error) {\n                        // there is no listener currently active. so we can just ignore the error raised from treating\n                        // a null object as a function. Although, in development mode, we throw a console error.\n                        if (!isProduction()) {\n                            console.error(error); // eslint-disable-line\n                        }\n                    }\n                }\n            );\n        }\n    }\n\n    onLogout(listener: null | (() => Promise<void>)): void {\n        this.logoutDisposer = when(\n            () => !!this.root_store.client.has_logged_out,\n            async () => {\n                try {\n                    const result = this.logout_listener?.();\n                    if (result?.then && typeof result.then === 'function') {\n                        result.then(() => {\n                            this.root_store.client.setLogout(false);\n                            this.onLogout(this.logout_listener);\n                        });\n                    } else {\n                        throw new Error('Logout listeners are required to return a promise.');\n                    }\n                } catch (error) {\n                    // there is no listener currently active. so we can just ignore the error raised from treating\n                    // a null object as a function. Although, in development mode, we throw a console error.\n                    if (!isProduction()) {\n                        console.error(error); // eslint-disable-line\n                    }\n                }\n            }\n        );\n        this.logout_listener = listener;\n    }\n\n    onClientInit(listener: null | (() => Promise<void>)): void {\n        this.clientInitDisposer = when(\n            () => !!this.root_store.client.initialized_broadcast,\n            async () => {\n                try {\n                    const result = this.client_init_listener?.();\n                    if (result?.then && typeof result.then === 'function') {\n                        result.then(() => {\n                            this.root_store.client.setInitialized(false);\n                            this.onClientInit(this.client_init_listener);\n                        });\n                    } else {\n                        throw new Error('Client init listeners are required to return a promise.');\n                    }\n                } catch (error) {\n                    // there is no listener currently active. so we can just ignore the error raised from treating\n                    // a null object as a function. Although, in development mode, we throw a console error.\n                    if (!isProduction()) {\n                        console.error(error); // eslint-disable-line\n                    }\n                }\n            }\n        );\n        this.client_init_listener = listener;\n    }\n\n    onNetworkStatusChange(listener: null | ((is_online: boolean) => void)): void {\n        this.networkStatusChangeDisposer = reaction(\n            () => this.root_store.common.is_network_online,\n            is_online => {\n                try {\n                    this.network_status_change_listener?.(is_online);\n                } catch (error) {\n                    // there is no listener currently active. so we can just ignore the error raised from treating\n                    // a null object as a function. Although, in development mode, we throw a console error.\n                    if (!isProduction()) {\n                        console.error(error); // eslint-disable-line\n                    }\n                }\n            }\n        );\n\n        this.network_status_change_listener = listener;\n    }\n\n    onThemeChange(listener: null | ((is_dark_mode_on: boolean) => void)): void {\n        this.themeChangeDisposer = reaction(\n            () => this.root_store.ui.is_dark_mode_on,\n            is_dark_mode_on => {\n                try {\n                    this.theme_change_listener?.(is_dark_mode_on);\n                } catch (error) {\n                    // there is no listener currently active. so we can just ignore the error raised from treating\n                    // a null object as a function. Although, in development mode, we throw a console error.\n                    if (!isProduction()) {\n                        console.error(error); // eslint-disable-line\n                    }\n                }\n            }\n        );\n\n        this.theme_change_listener = listener;\n    }\n\n    onRealAccountSignupEnd(listener: null | (() => Promise<void>)): void {\n        this.realAccountSignupEndedDisposer = when(\n            () => !!this.root_store.ui.has_real_account_signup_ended,\n            () => {\n                try {\n                    const result = this.real_account_signup_ended_listener?.();\n                    if (result?.then && typeof result.then === 'function') {\n                        result.then(() => {\n                            this.root_store.ui.setRealAccountSignupEnd(false);\n                            this.onRealAccountSignupEnd(this.real_account_signup_ended_listener);\n                        });\n                    } else {\n                        throw new Error('Real account signup listeners are required to return a promise.');\n                    }\n                } catch (error) {\n                    // there is no listener currently active. so we can just ignore the error raised from treating\n                    // a null object as a function. Although, in development mode, we throw a console error.\n                    if (!isProduction()) {\n                        console.error(error); // eslint-disable-line\n                    }\n                }\n            }\n        );\n\n        this.real_account_signup_ended_listener = listener;\n    }\n\n    disposePreSwitchAccount() {\n        if (typeof this.preSwitchAccountDisposer === 'function') {\n            this.preSwitchAccountDisposer();\n        }\n        this.pre_switch_account_listener = null;\n    }\n\n    disposeSwitchAccount() {\n        if (typeof this.switchAccountDisposer === 'function') {\n            this.switchAccountDisposer();\n        }\n        this.switch_account_listener = null;\n    }\n\n    disposeLogout() {\n        if (typeof this.logoutDisposer === 'function') {\n            this.logoutDisposer();\n        }\n        this.logout_listener = null;\n    }\n\n    disposeClientInit() {\n        if (typeof this.clientInitDisposer === 'function') {\n            this.clientInitDisposer();\n        }\n        this.client_init_listener = null;\n    }\n\n    disposeNetworkStatusChange() {\n        if (typeof this.networkStatusChangeDisposer === 'function') {\n            this.networkStatusChangeDisposer();\n        }\n        this.network_status_change_listener = null;\n    }\n\n    disposeThemeChange() {\n        if (typeof this.themeChangeDisposer === 'function') {\n            this.themeChangeDisposer();\n        }\n        this.theme_change_listener = null;\n    }\n\n    disposeRealAccountSignupEnd() {\n        if (typeof this.realAccountSignupEndedDisposer === 'function') {\n            this.realAccountSignupEndedDisposer();\n        }\n        this.real_account_signup_ended_listener = null;\n    }\n\n    onUnmount() {\n        this.disposePreSwitchAccount();\n        this.disposeSwitchAccount();\n        this.disposeLogout();\n        this.disposeClientInit();\n        this.disposeNetworkStatusChange();\n        this.disposeThemeChange();\n        this.disposeRealAccountSignupEnd();\n    }\n\n    assertHasValidCache(loginid: string, ...reactions: VoidFunction[]): void {\n        // account was changed when this was unmounted.\n        if (this.root_store.client.loginid !== loginid) {\n            reactions.forEach(act => act());\n            this.partial_fetch_time = 0;\n        }\n    }\n}\n","import type { TEvents } from '@deriv-com/analytics';\n\nexport type TPayload = {\n    data: Omit<\n        Partial<TEvents['ce_chart_types_form'] & TEvents['ce_market_types_form'] & TEvents['ce_indicators_types_form']>,\n        'action'\n    > & {\n        action: string;\n    };\n    event_type: 'ce_chart_types_form' | 'ce_market_types_form' | 'ce_indicators_types_form';\n};\n\ntype TStateChangeOption = {\n    indicator_type_name?: string;\n    indicators_category_name?: string;\n    isClosed?: boolean;\n    is_favorite?: boolean;\n    is_info_open?: boolean;\n    is_open?: boolean;\n    chart_type_name?: string;\n    search_string?: string;\n    symbol?: string;\n    symbol_category?: string;\n    time_interval_name?: string;\n};\n\nexport const ACTION = {\n    ADD_ACTIVE: 'add_active',\n    ADD_TO_FAVORITES: 'add_to_favorites',\n    CHOOSE_CHART_TYPE: 'choose_chart_type',\n    CHOOSE_MARKET_TYPE: 'choose_market_type',\n    CHOOSE_TIME_INTERVAL: 'choose_time_interval',\n    CLEAN_ALL_ACTIVE: 'clean_all_active',\n    CLOSE: 'close',\n    DELETE_ACTIVE: 'delete_active',\n    DELETE_FROM_FAVORITES: 'delete_from_favorites',\n    EDIT_ACTIVE: 'edit_active',\n    INFO_OPEN: 'info_open',\n    INFO_CLOSE: 'info_close',\n    INFO_REDIRECT: 'info_redirect',\n    OPEN: 'open',\n    SEARCH: 'search',\n} as const;\n\nexport const STATE_TYPES = {\n    CHART_INTERVAL_CHANGE: 'CHART_INTERVAL_CHANGE',\n    CHART_TYPE_CHANGE: 'CHART_TYPE_CHANGE',\n    FAVORITE_MARKETS_TOGGLE: 'FAVORITE_MARKETS_TOGGLE',\n    INDICATOR_ADDED: 'INDICATOR_ADDED',\n    INDICATOR_DELETED: 'INDICATOR_DELETED',\n    INDICATOR_INFO_TOGGLE: 'INDICATOR_INFO_TOGGLE',\n    INDICATOR_SEARCH: 'INDICATOR_SEARCH',\n    INDICATOR_SETTINGS_OPEN: 'INDICATOR_SETTINGS_OPEN',\n    INDICATORS_CLEAR_ALL: 'INDICATORS_CLEAR_ALL',\n    INDICATORS_MODAL_TOGGLE: 'INDICATORS_MODAL_TOGGLE',\n    INITIAL: 'INITIAL',\n    MARKET_SEARCH: 'MARKET_SEARCH',\n    MARKET_STATE_CHANGE: 'MARKET_STATE_CHANGE',\n    READY: 'READY',\n    SCROLL_TO_LEFT: 'SCROLL_TO_LEFT',\n    SET_CHART_MODE: 'SET_CHART_MODE',\n    SYMBOL_CHANGE: 'SYMBOL_CHANGE',\n} as const;\n\nexport const SUBFORM_NAME = {\n    INDICATORS_INFO: 'indicators_info',\n    INDICATORS_TYPE: 'indicators_type',\n} as const;\n\nconst getChartTypeFormAnalyticsData = (state: keyof typeof STATE_TYPES, option: TStateChangeOption = {}) => {\n    const { chart_type_name = '', time_interval_name } = option;\n    const chart_event_type = 'ce_chart_types_form';\n    const payload: TPayload = {\n        data: {\n            action: '',\n            chart_type_name,\n            time_interval_name,\n        },\n        event_type: chart_event_type,\n    };\n    if (!chart_type_name) return {};\n    switch (state) {\n        case STATE_TYPES.CHART_INTERVAL_CHANGE:\n            payload.data.action = ACTION.CHOOSE_TIME_INTERVAL;\n            break;\n        case STATE_TYPES.CHART_TYPE_CHANGE:\n            payload.data.action = ACTION.CHOOSE_CHART_TYPE;\n            break;\n        default:\n            return {};\n    }\n    return payload;\n};\n\nconst getIndicatorTypeFormAnalyticsData = (state: keyof typeof STATE_TYPES, option: TStateChangeOption = {}) => {\n    const { indicator_type_name = '', indicators_category_name = '', is_info_open, is_open, search_string } = option;\n    const indicators_event_type = 'ce_indicators_types_form';\n    const indicators_subform = is_info_open ? SUBFORM_NAME.INDICATORS_INFO : SUBFORM_NAME.INDICATORS_TYPE;\n    const info_open_close_action = is_info_open ? ACTION.INFO_OPEN : ACTION.INFO_CLOSE;\n    const open_close_action = is_open ? ACTION.OPEN : ACTION.CLOSE;\n    const payload = {\n        event_type: indicators_event_type,\n    } as TPayload;\n    if (\n        (state === STATE_TYPES.INDICATOR_SEARCH && !option.search_string) ||\n        ((state === STATE_TYPES.INDICATOR_ADDED ||\n            state === STATE_TYPES.INDICATOR_DELETED ||\n            state === STATE_TYPES.INDICATOR_INFO_TOGGLE ||\n            state === STATE_TYPES.INDICATOR_SETTINGS_OPEN) &&\n            !indicator_type_name)\n    ) {\n        return {};\n    }\n    switch (state) {\n        case STATE_TYPES.INDICATOR_ADDED:\n            payload.data = {\n                action: ACTION.ADD_ACTIVE,\n                indicator_type_name,\n                indicators_category_name,\n                subform_name: indicators_subform,\n            };\n            break;\n        case STATE_TYPES.INDICATOR_DELETED:\n            payload.data = {\n                action: ACTION.DELETE_ACTIVE,\n                indicator_type_name,\n                indicators_category_name,\n            };\n            break;\n        case STATE_TYPES.INDICATOR_INFO_TOGGLE:\n            payload.data = {\n                action: info_open_close_action,\n                indicator_type_name,\n                indicators_category_name,\n            };\n            break;\n        case STATE_TYPES.INDICATOR_SEARCH:\n            payload.data = {\n                action: ACTION.SEARCH,\n                search_string,\n            };\n            break;\n        case STATE_TYPES.INDICATOR_SETTINGS_OPEN:\n            payload.data = {\n                action: ACTION.EDIT_ACTIVE,\n                indicator_type_name,\n                indicators_category_name,\n            };\n            break;\n        case STATE_TYPES.INDICATORS_MODAL_TOGGLE:\n            payload.data = {\n                action: open_close_action,\n            };\n            break;\n        case STATE_TYPES.INDICATORS_CLEAR_ALL:\n            payload.data = {\n                action: ACTION.CLEAN_ALL_ACTIVE,\n            };\n            break;\n        default:\n            return {};\n    }\n    return payload;\n};\n\nconst getMarketTypeFormAnalyticsData = (state: keyof typeof STATE_TYPES, option: TStateChangeOption = {}) => {\n    const { is_favorite, symbol_category: tab_market_name = '', search_string, symbol: market_type_name = '' } = option;\n    const market_event_type = 'ce_market_types_form';\n    const favorites_action = is_favorite ? ACTION.ADD_TO_FAVORITES : ACTION.DELETE_FROM_FAVORITES;\n    const payload = {\n        event_type: market_event_type,\n    } as TPayload;\n    if (\n        (state === STATE_TYPES.MARKET_SEARCH && !option.search_string) ||\n        (state === STATE_TYPES.FAVORITE_MARKETS_TOGGLE && !market_type_name)\n    ) {\n        return {};\n    }\n    switch (state) {\n        case STATE_TYPES.FAVORITE_MARKETS_TOGGLE:\n            payload.data = {\n                action: favorites_action,\n                market_type_name,\n            };\n            break;\n        case STATE_TYPES.MARKET_SEARCH:\n            payload.data = {\n                action: ACTION.SEARCH,\n                search_string,\n            };\n            break;\n        case STATE_TYPES.SYMBOL_CHANGE:\n            payload.data = {\n                action: ACTION.CHOOSE_MARKET_TYPE,\n                market_type_name,\n                tab_market_name,\n            };\n            break;\n        default:\n            return {};\n    }\n    return payload;\n};\n\nexport const getChartAnalyticsData = (state: keyof typeof STATE_TYPES, option: TStateChangeOption = {}) => {\n    const chart_type_form_events: string[] = [STATE_TYPES.CHART_INTERVAL_CHANGE, STATE_TYPES.CHART_TYPE_CHANGE];\n    const indicator_type_form_events: string[] = [\n        STATE_TYPES.INDICATOR_ADDED,\n        STATE_TYPES.INDICATOR_DELETED,\n        STATE_TYPES.INDICATOR_INFO_TOGGLE,\n        STATE_TYPES.INDICATOR_SEARCH,\n        STATE_TYPES.INDICATOR_SETTINGS_OPEN,\n        STATE_TYPES.INDICATORS_CLEAR_ALL,\n        STATE_TYPES.INDICATORS_MODAL_TOGGLE,\n    ];\n    const market_type_form_events: string[] = [\n        STATE_TYPES.FAVORITE_MARKETS_TOGGLE,\n        STATE_TYPES.MARKET_SEARCH,\n        STATE_TYPES.SYMBOL_CHANGE,\n    ];\n    if (chart_type_form_events.includes(state)) return getChartTypeFormAnalyticsData(state, option);\n    if (indicator_type_form_events.includes(state)) return getIndicatorTypeFormAnalyticsData(state, option);\n    if (market_type_form_events.includes(state)) return getMarketTypeFormAnalyticsData(state, option);\n    return {};\n};\n","import * as Symbol from './Actions/symbol';\nimport {\n    WS,\n    ChartBarrierStore,\n    cloneObject,\n    convertDurationLimit,\n    extractInfoFromShortcode,\n    findFirstOpenMarket,\n    getBarrierPipSize,\n    getMinPayout,\n    getPlatformSettings,\n    getPropertyValue,\n    getContractSubtype,\n    getTradeNotificationMessage,\n    isBarrierSupported,\n    isAccumulatorContract,\n    isCryptocurrency,\n    isEmptyObject,\n    isMarketClosed,\n    isMultiplierContract,\n    isTurbosContract,\n    isVanillaFxContract,\n    isVanillaContract,\n    pickDefaultSymbol,\n    resetEndTimeOnVolatilityIndices,\n    setLimitOrderBarriers,\n    showDigitalOptionsUnavailableError,\n    showUnavailableLocationError,\n    getCurrencyDisplayCode,\n    BARRIER_COLORS,\n    TRADE_TYPES,\n    hasBarrier,\n    isHighLow,\n    CONTRACT_TYPES,\n    setTradeURLParams,\n    getTradeURLParams,\n    isTouchContract,\n    getCardLabelsV2,\n    formatMoney,\n    getContractPath,\n    routes,\n    cacheTrackEvents,\n    isDtraderV2DesktopEnabled,\n    isDtraderV2MobileEnabled,\n} from '@deriv/shared';\nimport type { TEvents } from '@deriv-com/analytics';\nimport { localize } from '@deriv/translations';\nimport { getValidationRules, getMultiplierValidationRules } from 'Stores/Modules/Trading/Constants/validation-rules';\nimport { ContractType } from 'Stores/Modules/Trading/Helpers/contract-type';\nimport { isDigitContractType, isDigitTradeType } from 'Modules/Trading/Helpers/digits';\nimport ServerTime from '_common/base/server_time';\nimport { processPurchase } from './Actions/purchase';\nimport { getUpdatedTicksHistoryStats } from './Helpers/accumulator';\nimport { processTradeParams } from './Helpers/process';\nimport { action, computed, makeObservable, observable, override, reaction, runInAction, toJS, when } from 'mobx';\nimport { createProposalRequests, getProposalErrorField, getProposalInfo } from './Helpers/proposal';\nimport BaseStore from '../../base-store';\nimport { TContractTypesList, TRootStore, TTextValueNumber, TTextValueStrings } from 'Types';\nimport debounce from 'lodash.debounce';\nimport {\n    ActiveSymbols,\n    ActiveSymbolsRequest,\n    Buy,\n    BuyContractResponse,\n    History,\n    PriceProposalRequest,\n    PriceProposalResponse,\n    ServerTimeRequest,\n    TickSpotData,\n    TicksHistoryRequest,\n    TicksHistoryResponse,\n    TicksStreamResponse,\n    TradingTimesRequest,\n} from '@deriv/api-types';\nimport { STATE_TYPES, TPayload, getChartAnalyticsData } from './Helpers/chart';\nimport { safeParse } from '@deriv/utils';\nimport { sendDtraderPurchaseToAnalytics } from '../../../Analytics';\n\ntype TBarriers = Array<\n    ChartBarrierStore & {\n        hideOffscreenBarrier?: boolean;\n        isSingleBarrier?: boolean;\n    }\n>;\n\nexport type ProposalResponse = PriceProposalResponse & {\n    proposal: PriceProposalResponse['proposal'] & {\n        payout_choices: string[];\n        barrier_spot_distance: string;\n        contract_details: {\n            barrier: string;\n        };\n    };\n    error?: PriceProposalResponse['error'] & {\n        code: string;\n        message: string;\n        details?: {\n            payout_per_point_choices?: number[];\n            barrier_choices?: string[];\n            [k: string]: unknown;\n        };\n    };\n};\n\nexport type TChartLayout = {\n    adj: boolean;\n    aggregationType: string;\n    animation?: boolean;\n    candleWidth: number;\n    chartScale: string;\n    chartType: string;\n    crosshair: number;\n    extended: boolean;\n    flipped: boolean;\n    interval: number;\n    marketSessions: Partial<Record<string, boolean>>;\n    outliers: boolean;\n    panels: {\n        chart: {\n            chartName: string;\n            display: string;\n            index: number;\n            percent: number;\n            yAxis: {\n                name: string;\n                position: null;\n            };\n            yaxisLHS: string[];\n            yaxisRHS: string[];\n        };\n    };\n    periodicity: number;\n    previousMaxTicks?: number;\n    range: Partial<Record<string, unknown>>;\n    setSpan: Partial<Record<string, unknown>>;\n    studies?: Partial<Record<string, unknown>>;\n    symbols: [\n        {\n            interval: number;\n            periodicity: number;\n            setSpan: Partial<Record<string, unknown>>;\n            symbol: string;\n            symbolObject: ActiveSymbols[number];\n            timeUnit: string;\n        },\n    ];\n    timeUnit: string;\n    volumeUnderlay: boolean;\n};\nexport type TChartStateChangeOption = {\n    indicator_type_name?: string;\n    indicators_category_name?: string;\n    isClosed?: boolean;\n    is_favorite?: boolean;\n    is_info_open?: boolean;\n    is_open?: boolean;\n    chart_type_name?: string;\n    granularity?: number;\n    search_string?: string;\n    symbol?: string;\n    symbol_category?: string;\n    time_interval_name?: string;\n};\nexport type TV2ParamsInitialValues = {\n    growth_rate?: number;\n    strike?: string | number;\n    multiplier?: number;\n    barrier_1?: number;\n    payout_per_point?: string;\n};\ntype TContractDataForGTM = Omit<Partial<PriceProposalRequest>, 'cancellation' | 'limit_order'> &\n    ReturnType<typeof getProposalInfo> & {\n        buy_price: number;\n    };\ntype TPrevChartLayout =\n    | (TChartLayout & {\n          isDone?: VoidFunction;\n          is_used?: boolean;\n      })\n    | null;\n\ntype TDurationMinMax = {\n    [key: string]: { min: number; max: number };\n};\ntype TResponse<Req, Res extends { [key: string]: unknown }, K extends string> = Res & {\n    echo_req: Req;\n    error?: {\n        code: string;\n        message: string;\n        details?: Res[K] & { field: string; payout_per_point_choices?: number[] };\n    };\n};\ntype TProposalInfo = {\n    [key: string]: ReturnType<typeof getProposalInfo>;\n};\ntype TStakeBoundary = Record<\n    string,\n    {\n        min_stake?: number;\n        max_stake?: number;\n    }\n>;\ntype TTicksHistoryResponse = TicksHistoryResponse | TicksStreamResponse;\ntype TBarriersData = Record<string, never> | { barrier: string; barrier_choices?: string[] };\ntype TValidationParams = ReturnType<typeof getProposalInfo>['validation_params'];\n\nconst store_name = 'trade_store';\nconst g_subscribers_map: Partial<Record<string, ReturnType<typeof WS.subscribeTicksHistory>>> = {}; // blame amin.m\n\nexport default class TradeStore extends BaseStore {\n    // Control values\n    is_trade_component_mounted = false;\n    is_purchase_enabled = false;\n    is_trade_enabled = false;\n    is_trade_enabled_v2 = false;\n    is_equal = 0;\n    has_equals_only = false;\n\n    // Underlying\n    symbol = '';\n    is_market_closed = false;\n    previous_symbol = '';\n    active_symbols: ActiveSymbols = [];\n    has_symbols_for_v2 = false;\n\n    form_components: string[] = [];\n\n    // Contract Type\n    contract_expiry_type = '';\n    contract_start_type = '';\n    contract_type = '';\n    prev_contract_type = '';\n    contract_types_list: TContractTypesList = {};\n    non_available_contract_types_list: TContractTypesList = {};\n    trade_type_tab = '';\n    trade_types: { [key: string]: string } = {};\n    contract_types_list_v2: TContractTypesList = {};\n\n    // Amount\n    amount = 10;\n    basis = '';\n    basis_list: Array<TTextValueStrings> = [];\n    currency = '';\n    default_stake: number | undefined;\n    stake_boundary: Partial<TStakeBoundary> = {};\n\n    // Duration\n    duration = 5;\n    duration_min_max: TDurationMinMax = {};\n    duration_unit = '';\n    duration_units_list: Array<TTextValueStrings> = [];\n    expiry_date: string | null = '';\n    expiry_epoch: number | string = '';\n    expiry_time: string | null = '';\n    expiry_type: string | null = 'duration';\n    saved_expiry_date_v2: string = '';\n    unsaved_expiry_date_v2: string = '';\n\n    // Barrier\n    barrier = '';\n    barrier_1 = '';\n    barrier_2 = '';\n    barrier_count = 0;\n    main_barrier: ChartBarrierStore | null = null;\n    barriers: TBarriers = [];\n    barrier_choices: string[] = [];\n    payout_choices: string[] = [];\n    // Start Time\n    start_date = 0; // 0 refers to 'now'\n    start_dates_list: Array<{ text: string; value: number }> = [];\n    start_time: string | null = null;\n    sessions: Array<{ open: moment.Moment; close: moment.Moment }> = [];\n\n    market_open_times: string[] = [];\n    // End Date Time\n    /**\n     * An array that contains market closing time.\n     *\n     * e.g. [\"04:00:00\", \"08:00:00\"]\n     *\n     */\n    market_close_times: string[] = [];\n    validation_params: {\n        [key: string]: TValidationParams | Record<string, never>;\n    } = {};\n\n    // Last Digit\n    digit_stats: number[] = [];\n    last_digit = 5;\n    is_mobile_digit_view_selected = false;\n    tick_data: TickSpotData | null = null;\n\n    // Purchase\n    proposal_info: TProposalInfo = {};\n    purchase_info: Partial<BuyContractResponse> = {};\n\n    // Chart loader observables\n    is_chart_loading?: boolean;\n    should_show_active_symbols_loading = false;\n\n    // Accumulator trade params\n    accumulator_range_list: number[] = [];\n    growth_rate = 0.03;\n    maximum_payout = 0;\n    maximum_ticks = 0;\n    ticks_history_stats: {\n        ticks_stayed_in?: number[];\n        last_tick_epoch?: number;\n    } = {};\n    tick_size_barrier_percentage = '';\n\n    // Multiplier trade params\n    multiplier = 0;\n    multiplier_range_list: TTextValueNumber[] = [];\n    stop_loss?: string;\n    take_profit?: string;\n    has_stop_loss = false;\n    has_take_profit = false;\n    has_cancellation = false;\n    open_payout_wheelpicker = false;\n    commission?: string | number;\n    cancellation_price?: number;\n    stop_out?: number;\n    expiration?: number;\n    hovered_contract_type?: string | null;\n    cancellation_duration = '60m';\n    cancellation_range_list: Array<TTextValueStrings> = [];\n    cached_multiplier_cancellation_list: Array<TTextValueStrings> = [];\n    ref: React.RefObject<{\n        hasPredictionIndicators(): void;\n        triggerPopup(arg: () => void): void;\n    }> | null = null;\n    // Turbos trade params\n    long_barriers: TBarriersData = {};\n    short_barriers: TBarriersData = {};\n    payout_per_point = '';\n\n    // Vanilla trade params\n    strike_price_choices: TBarriersData = {};\n\n    // Mobile\n    is_trade_params_expanded = true;\n    v2_params_initial_values: TV2ParamsInitialValues = {};\n\n    debouncedSetChartStatus = debounce((status: boolean) => {\n        runInAction(() => {\n            this.is_chart_loading = status;\n        });\n    }); // no time is needed here, the only goal is to put the call into macrotasks queue\n    debouncedProposal = debounce(this.requestProposal, 500);\n    proposal_requests: Record<string, Partial<PriceProposalRequest>> = {};\n    is_purchasing_contract = false;\n\n    initial_barriers?: { barrier_1: string; barrier_2: string };\n    is_initial_barrier_applied = false;\n    is_digits_widget_active = false;\n    should_skip_prepost_lifecycle = false;\n    constructor({ root_store }: { root_store: TRootStore }) {\n        const local_storage_properties = [\n            'amount',\n            'currency',\n            'barrier_1',\n            'barrier_2',\n            'basis',\n            'contract_start_type',\n            'duration',\n            'duration_unit',\n            'expiry_date',\n            'expiry_type',\n            'growth_rate',\n            'has_take_profit',\n            'has_stop_loss',\n            'has_cancellation',\n            'short_barriers',\n            'long_barriers',\n            'strike_price_choices',\n            'is_equal',\n            'last_digit',\n            'multiplier',\n            'start_date',\n            'start_time',\n            'stop_loss',\n            'take_profit',\n            'is_trade_params_expanded',\n            'v2_params_initial_values',\n        ];\n        const session_storage_properties = ['contract_type', 'symbol'];\n\n        super({\n            root_store,\n            local_storage_properties,\n            session_storage_properties,\n            store_name,\n            validation_rules: getValidationRules(),\n        });\n\n        makeObservable(this, {\n            accumulator_range_list: observable,\n            active_symbols: observable,\n            amount: observable,\n            barrier_1: observable,\n            barrier_2: observable,\n            barrier_count: observable,\n            barrier_choices: observable,\n            payout_choices: observable,\n            barriers: observable,\n            basis_list: observable,\n            basis: observable,\n            payout_per_point: observable,\n            cancellation_duration: observable,\n            cancellation_price: observable,\n            cancellation_range_list: observable,\n            cached_multiplier_cancellation_list: observable,\n            commission: observable,\n            contract_expiry_type: observable,\n            contract_start_type: observable,\n            contract_type: observable,\n            contract_types_list: observable,\n            contract_types_list_v2: observable,\n            currency: observable,\n            default_stake: observable,\n            digit_stats: observable,\n            duration_min_max: observable,\n            duration_unit: observable,\n            duration_units_list: observable,\n            duration: observable,\n            expiration: observable,\n            expiry_date: observable,\n            saved_expiry_date_v2: observable,\n            unsaved_expiry_date_v2: observable,\n            setSavedExpiryDateV2: action.bound,\n            setUnsavedExpiryDateV2: action.bound,\n            expiry_epoch: observable,\n            expiry_time: observable,\n            expiry_type: observable,\n            form_components: observable,\n            growth_rate: observable,\n            has_cancellation: observable,\n            has_equals_only: observable,\n            has_open_accu_contract: computed,\n            has_stop_loss: observable,\n            has_symbols_for_v2: observable,\n            has_take_profit: observable,\n            hovered_contract_type: observable,\n            is_accumulator: computed,\n            is_chart_loading: observable,\n            is_digits_widget_active: observable,\n            is_dtrader_v2: computed,\n            is_dtrader_v2_mobile: computed,\n            is_dtrader_v2_desktop: computed,\n            is_equal: observable,\n            is_market_closed: observable,\n            is_mobile_digit_view_selected: observable,\n            is_purchase_enabled: observable,\n            is_synthetics_trading_market_available: computed,\n            is_trade_component_mounted: observable,\n            is_trade_enabled: observable,\n            is_trade_enabled_v2: observable,\n            is_trade_params_expanded: observable,\n            is_turbos: computed,\n            last_digit: observable,\n            long_barriers: observable,\n            main_barrier: observable,\n            market_close_times: observable,\n            market_open_times: observable,\n            maximum_payout: observable,\n            maximum_ticks: observable,\n            validation_params: observable,\n            multiplier_range_list: observable,\n            multiplier: observable,\n            non_available_contract_types_list: observable,\n            previous_symbol: observable,\n            ref: observable,\n            proposal_info: observable.ref,\n            purchase_info: observable.ref,\n            setDefaultStake: action.bound,\n            sessions: observable,\n            setDefaultGrowthRate: action.bound,\n            setDigitStats: action.bound,\n            setTickData: action.bound,\n            short_barriers: observable,\n            should_show_active_symbols_loading: observable,\n            should_skip_prepost_lifecycle: observable,\n            stake_boundary: observable,\n            start_date: observable,\n            start_dates_list: observable,\n            start_time: observable,\n            strike_price_choices: observable,\n            stop_loss: observable,\n            stop_out: observable,\n            symbol: observable,\n            take_profit: observable,\n            tick_data: observable,\n            tick_size_barrier_percentage: observable,\n            ticks_history_stats: observable,\n            trade_type_tab: observable,\n            trade_types: observable,\n            open_payout_wheelpicker: observable,\n            togglePayoutWheelPicker: action.bound,\n            v2_params_initial_values: observable,\n            accountSwitcherListener: action.bound,\n            barrier_pipsize: computed,\n            barriers_flattened: computed,\n            changeDurationValidationRules: action.bound,\n            chartStateChange: action.bound,\n            clearContracts: action.bound,\n            clearLimitOrderBarriers: action.bound,\n            clearPurchaseInfo: action.bound,\n            clientInitListener: action.bound,\n            clearV2ParamsInitialValues: action.bound,\n            processContractsForV2: action.bound,\n            enablePurchase: action.bound,\n            exportLayout: action.bound,\n            forgetAllProposal: action.bound,\n            getFirstOpenMarket: action.bound,\n            has_alternative_source: computed,\n            initAccountCurrency: action.bound,\n            is_multiplier: computed,\n            is_symbol_in_active_symbols: computed,\n            is_synthetics_available: computed,\n            is_vanilla: computed,\n            is_vanilla_fx: computed,\n            loadActiveSymbols: action.bound,\n            logoutListener: action.bound,\n            main_barrier_flattened: computed,\n            networkStatusChangeListener: action.bound,\n            onAllowEqualsChange: action.bound,\n            onChange: action.bound,\n            onChangeMultiple: action.bound,\n            onChartBarrierChange: action.bound,\n            onHoverPurchase: action.bound,\n            onMount: action.bound,\n            onProposalResponse: action.bound,\n            onPurchase: action.bound,\n            onPurchaseV2: action.bound,\n            onUnmount: override,\n            prepareTradeStore: action.bound,\n            preSwitchAccountListener: action.bound,\n            processPurchase: action.bound,\n            pushPurchaseDataToGtm: action.bound,\n            refresh: action.bound,\n            requestProposal: action.bound,\n            resetAccumulatorData: action.bound,\n            resetErrorServices: action.bound,\n            resetPreviousSymbol: action.bound,\n            setActiveSymbols: action.bound,\n            setActiveSymbolsV2: action.bound,\n            setBarrierChoices: action.bound,\n            setPayoutChoices: action.bound,\n            setChartModeFromURL: action.bound,\n            setChartStatus: action.bound,\n            setContractTypes: action.bound,\n            setContractTypesListV2: action.bound,\n            setDefaultSymbol: action.bound,\n            setIsTradeParamsExpanded: action.bound,\n            setIsDigitsWidgetActive: action.bound,\n            setMarketStatus: action.bound,\n            getTurbosChartBarrier: action.bound,\n            setMobileDigitView: action.bound,\n            setPreviousSymbol: action.bound,\n            setSkipPrePostLifecycle: action.bound,\n            setStakeBoundary: action.bound,\n            setTradeTypeTab: action.bound,\n            setTradeStatus: action.bound,\n            setV2ParamsInitialValues: action.bound,\n            show_digits_stats: computed,\n            updateStore: action.bound,\n            updateSymbol: action.bound,\n            setPayoutPerPoint: action.bound,\n        });\n\n        when(\n            () => !isEmptyObject(this.contract_types_list_v2),\n            () => {\n                if (!this.contract_types_list_v2 || !this.is_dtrader_v2) return;\n                const searchParams = new URLSearchParams(window.location.search);\n                const urlContractType = searchParams.get('trade_type');\n                const tradeStoreString = sessionStorage.getItem('trade_store');\n                const tradeStoreObj = safeParse(tradeStoreString ?? '{}') ?? {};\n                const flattedContractTypesV2 = Object.values(this.contract_types_list_v2)\n                    .map(contract_type => contract_type.categories)\n                    .flatMap(categories => categories);\n                const isValidContractType = flattedContractTypesV2.some(\n                    contract_type => contract_type.value === urlContractType\n                );\n                if (urlContractType) {\n                    if (isValidContractType) {\n                        tradeStoreObj.contract_type = urlContractType;\n                        sessionStorage.setItem('trade_store', JSON.stringify(tradeStoreObj));\n                        this.contract_type = urlContractType;\n                    } else {\n                        this.root_store.ui.toggleUrlUnavailableModal(true);\n                    }\n                }\n            }\n        );\n\n        when(\n            () => this.has_symbols_for_v2,\n            () => {\n                if (!this.contract_types_list_v2 || !this.is_dtrader_v2) return;\n                const searchParams = new URLSearchParams(window.location.search);\n                const urlSymbol = searchParams.get('symbol');\n                const tradeStoreString = sessionStorage.getItem('trade_store');\n                const tradeStoreObj = safeParse(tradeStoreString ?? '{}') ?? {};\n                const isValidSymbol = this.active_symbols.some(symbol => symbol.symbol === urlSymbol);\n\n                if (urlSymbol) {\n                    if (isValidSymbol) {\n                        tradeStoreObj.symbol = urlSymbol;\n                        sessionStorage.setItem('trade_store', JSON.stringify(tradeStoreObj));\n                        this.symbol = urlSymbol;\n                    } else {\n                        this.root_store.ui.toggleUrlUnavailableModal(true);\n                    }\n                }\n            }\n        );\n\n        reaction(\n            () => [this.contract_expiry_type, this.duration_min_max, this.duration_unit, this.expiry_type],\n            () => {\n                this.changeDurationValidationRules();\n            }\n        );\n        reaction(\n            () => this.is_equal,\n            () => {\n                this.contract_type?.includes(TRADE_TYPES.RISE_FALL) && this.onAllowEqualsChange();\n            }\n        );\n        reaction(\n            () => this.symbol,\n            () => {\n                const date = resetEndTimeOnVolatilityIndices(this.symbol, this.expiry_type);\n                if (date) {\n                    this.expiry_date = date;\n                }\n                this.setDefaultGrowthRate();\n                this.resetAccumulatorData();\n                if (this.active_symbols.length) {\n                    setTradeURLParams({ symbol: this.symbol });\n                }\n                this.root_store.notifications.removeTradeNotifications();\n            }\n        );\n        reaction(\n            () => this.duration_unit,\n            () => {\n                this.contract_expiry_type = this.duration_unit === 't' ? 'tick' : 'intraday';\n            }\n        );\n        reaction(\n            () => [this.has_stop_loss, this.has_take_profit],\n            () => {\n                if (!this.has_stop_loss) {\n                    this.validation_errors.stop_loss = [];\n                }\n                if (!this.has_take_profit) {\n                    this.validation_errors.take_profit = [];\n                }\n            }\n        );\n        reaction(\n            () => [this.contract_type],\n            () => {\n                this.root_store.portfolio.setContractType(this.contract_type);\n                if (this.is_accumulator || this.is_multiplier || this.is_turbos) {\n                    // when switching back to Multiplier contract, re-apply Stop loss / Take profit validation rules\n                    Object.assign(this.validation_rules, getMultiplierValidationRules());\n                } else {\n                    // we need to remove these two validation rules on contract_type change\n                    // to be able to remove any existing Stop loss / Take profit validation errors\n                    delete this.validation_rules.stop_loss;\n                    delete this.validation_rules.take_profit;\n                }\n                this.resetAccumulatorData();\n                if (!isEmptyObject(this.contract_types_list) || !isEmptyObject(this.contract_types_list_v2)) {\n                    setTradeURLParams({ contractType: this.contract_type });\n                }\n                this.root_store.notifications.removeTradeNotifications();\n            }\n        );\n        reaction(\n            () => this.root_store.common.current_language,\n            () => {\n                this.setValidationRules(getValidationRules());\n                this.changeDurationValidationRules();\n                if (!this.amount) {\n                    this.validateAllProperties();\n                }\n            }\n        );\n        reaction(\n            () => this.accumulator_range_list.length,\n            () => {\n                if (this.accumulator_range_list.length) {\n                    this.setDefaultGrowthRate();\n                }\n            }\n        );\n    }\n\n    get is_symbol_in_active_symbols() {\n        return this.active_symbols.some(\n            symbol_info => symbol_info.symbol === this.symbol && symbol_info.exchange_is_open === 1\n        );\n    }\n\n    get has_open_accu_contract() {\n        return (\n            this.is_accumulator &&\n            !!this.root_store.portfolio.open_accu_contract &&\n            !!this.root_store.portfolio.active_positions.find(\n                ({ contract_info, type }) => isAccumulatorContract(type) && contract_info.underlying === this.symbol\n            )\n        );\n    }\n\n    resetAccumulatorData() {\n        if (!isEmptyObject(this.root_store.contract_trade.accumulator_barriers_data)) {\n            this.root_store.contract_trade.clearAccumulatorBarriersData();\n        }\n    }\n\n    setV2ParamsInitialValues({\n        value,\n        name,\n    }: {\n        value: number | string | boolean;\n        name: keyof TV2ParamsInitialValues;\n    }) {\n        this.v2_params_initial_values = { ...this.v2_params_initial_values, ...{ [name]: value } };\n    }\n\n    setSavedExpiryDateV2(date: string) {\n        this.saved_expiry_date_v2 = date || '';\n    }\n\n    setUnsavedExpiryDateV2(date: string) {\n        this.unsaved_expiry_date_v2 = date || '';\n    }\n\n    clearV2ParamsInitialValues() {\n        this.v2_params_initial_values = {};\n    }\n\n    setDefaultGrowthRate() {\n        if (\n            this.is_accumulator &&\n            !this.accumulator_range_list.includes(this.growth_rate) &&\n            this.accumulator_range_list.length\n        ) {\n            this.growth_rate = this.accumulator_range_list[0];\n        }\n    }\n\n    setSkipPrePostLifecycle(should_skip: boolean) {\n        if (!!should_skip !== !!this.should_skip_prepost_lifecycle) {\n            // to skip assignment if no change is made\n            this.should_skip_prepost_lifecycle = should_skip;\n        }\n    }\n\n    setTradeStatus(status: boolean) {\n        this.is_trade_enabled = status;\n    }\n\n    refresh() {\n        this.forgetAllProposal();\n        this.proposal_info = {};\n        this.purchase_info = {};\n        this.proposal_requests = {};\n    }\n\n    clearContracts = () => {\n        this.root_store.contract_trade.contracts = [];\n    };\n\n    async loadActiveSymbols(should_set_default_symbol = true, should_show_loading = true) {\n        if (this.is_dtrader_v2) {\n            await when(() => this.has_symbols_for_v2);\n            return;\n        }\n        this.should_show_active_symbols_loading = should_show_loading;\n\n        await this.setActiveSymbols();\n        await this.root_store.active_symbols.setActiveSymbols();\n\n        const { symbol, showModal } = getTradeURLParams({ active_symbols: this.active_symbols });\n        if (showModal && should_show_loading && !this.root_store.client.is_logging_in) {\n            this.root_store.ui.toggleUrlUnavailableModal(true);\n        }\n        const hasSymbolChanged = symbol && symbol !== this.symbol;\n        if (hasSymbolChanged) this.symbol = symbol;\n        if (should_set_default_symbol && !symbol) await this.setDefaultSymbol();\n        setTradeURLParams({ symbol: hasSymbolChanged ? symbol : this.symbol });\n\n        const r = await WS.storage.contractsFor(this.symbol);\n        if (['InvalidSymbol', 'InputValidationFailed'].includes(r.error?.code)) {\n            const symbol_to_update = await pickDefaultSymbol(this.active_symbols);\n            await this.processNewValuesAsync({ symbol: symbol_to_update });\n        }\n\n        runInAction(() => {\n            this.should_show_active_symbols_loading = false;\n        });\n    }\n\n    async setDefaultSymbol() {\n        if (!this.is_symbol_in_active_symbols) {\n            this.is_trade_enabled = false;\n\n            const symbol = await pickDefaultSymbol(this.active_symbols);\n            await this.processNewValuesAsync({ symbol });\n        }\n    }\n\n    async setActiveSymbols() {\n        const is_on_mf_account = this.root_store.client.landing_company_shortcode === 'maltainvest';\n        const is_logged_in = this.root_store.client.is_logged_in;\n        const showError = this.root_store.common.showError;\n\n        const { active_symbols, error } = await WS.authorized.activeSymbols();\n\n        if (error) {\n            showError({ message: localize('Trading is unavailable at this time.') });\n            return;\n        }\n\n        if (!active_symbols?.length) {\n            await WS.wait('get_settings');\n            /*\n             * This logic is related to EU country checks\n             * Avoid moving this upward in the scope since mobx will lose reactivity\n             */\n            if (is_on_mf_account) {\n                showDigitalOptionsUnavailableError(showError, {\n                    text: localize(\n                        'We’re working to have this available for you soon. If you have another account, switch to that account to continue trading. You may add a Deriv MT5 Financial.'\n                    ),\n                    title: localize('{{platform_name_trader}} is not available for this account', {\n                        platform_name_trader: getPlatformSettings('trader').name,\n                    }),\n                    link: localize('Go to {{platform_name_mt5}} dashboard', {\n                        platform_name_mt5: getPlatformSettings('mt5').name,\n                    }),\n                });\n                return;\n            } else if (!is_on_mf_account) {\n                showUnavailableLocationError(showError, is_logged_in);\n            }\n            showUnavailableLocationError(showError, is_logged_in);\n        }\n        await this.processNewValuesAsync({ active_symbols });\n    }\n\n    async processContractsForV2() {\n        const contract_categories = ContractType.getContractCategories();\n        this.processNewValuesAsync({\n            ...(contract_categories as Pick<TradeStore, 'contract_types_list'> & {\n                has_only_forward_starting_contracts: boolean;\n            }),\n        });\n        this.processNewValuesAsync(ContractType.getContractValues(this));\n    }\n\n    async setContractTypes() {\n        if (this.is_dtrader_v2) {\n            return;\n        }\n\n        let contractType: string | undefined = '';\n        if (this.symbol && this.is_symbol_in_active_symbols) {\n            await Symbol.onChangeSymbolAsync(this.symbol);\n            runInAction(() => {\n                const contract_categories = ContractType.getContractCategories();\n                const { contractType: contractTypeParam, showModal } = getTradeURLParams({\n                    contract_types_list: contract_categories.contract_types_list,\n                });\n                contractType = contractTypeParam;\n                const { is_logging_in, is_switching } = this.root_store.client;\n                if (showModal && !is_logging_in && !is_switching) this.root_store.ui.toggleUrlUnavailableModal(true);\n                this.processNewValuesAsync({\n                    ...(contract_categories as Pick<TradeStore, 'contract_types_list'> & {\n                        has_only_forward_starting_contracts: boolean;\n                    }),\n                    ...ContractType.getContractType(\n                        contract_categories.contract_types_list,\n                        contractType ?? this.contract_type\n                    ),\n                });\n                this.processNewValuesAsync(ContractType.getContractValues(this));\n            });\n        }\n        this.root_store.common.setSelectedContractType(contractType ?? this.contract_type);\n        this.root_store.portfolio.setContractType(contractType ?? this.contract_type);\n        setTradeURLParams({\n            contractType: contractType ?? this.contract_type,\n        });\n    }\n\n    async prepareTradeStore(should_set_default_symbol = true) {\n        this.initial_barriers = { barrier_1: this.barrier_1, barrier_2: this.barrier_2 };\n        await when(() => !this.root_store.client.is_populating_account_list);\n\n        // waits for `website_status` in order to set `stake_default` for the selected currency\n        await WS.wait('website_status');\n        await runInAction(async () => {\n            await this.processNewValuesAsync(\n                {\n                    // fallback to default currency if current logged-in client hasn't selected a currency yet\n                    currency: this.root_store.client.currency || this.root_store.client.default_currency,\n                },\n                true,\n                null,\n                false\n            );\n        });\n        await this.loadActiveSymbols(should_set_default_symbol);\n        await this.setContractTypes();\n        await this.processNewValuesAsync(\n            {\n                is_market_closed: isMarketClosed(this.active_symbols, this.symbol),\n            },\n            true,\n            null,\n            false\n        );\n    }\n\n    async onChangeMultiple(values: Partial<TradeStore>) {\n        Object.keys(values).forEach(name => {\n            if (!(name in this)) {\n                throw new Error(`Invalid Argument: ${name}`);\n            }\n        });\n\n        await this.processNewValuesAsync({ ...values }, true); // wait for store to be updated\n        this.validateAllProperties(); // then run validation before sending proposal\n    }\n\n    async onChange(e: { target: { name: string; value: unknown } }) {\n        const { name, value } = e.target;\n        if (\n            name === 'contract_type' &&\n            ['accumulator', 'match_diff', 'even_odd', 'over_under'].includes(value as string)\n        ) {\n            this.prev_contract_type = this.contract_type;\n        }\n\n        // reset stop loss after trade type was changed\n        if (name === 'contract_type' && this.has_stop_loss) {\n            this.has_stop_loss = false;\n            this.stop_loss = '';\n        }\n\n        if (name === 'symbol' && value) {\n            // set trade params skeleton and chart loader to true until processNewValuesAsync resolves\n            this.setChartStatus(true);\n            // reset market close status\n            this.setMarketStatus(false);\n            this.is_trade_enabled = false;\n            // this.root_store.modules.contract_trade.contracts = [];\n            // TODO: Clear the contracts in contract-trade-store\n        } else if (name === 'currency') {\n            // Only allow the currency dropdown change if client is not logged in\n            if (!this.root_store.client.is_logged_in) {\n                this.root_store.client.selectCurrency(value as string);\n            }\n        } else if (name === 'expiry_date') {\n            this.expiry_time = null;\n        } else if (!(name in this)) {\n            throw new Error(`Invalid Argument: ${name}`);\n        }\n\n        await this.processNewValuesAsync(\n            { [name]: value },\n            true,\n            name === 'contract_type' ? { contract_type: this.contract_type } : {}, // refer to [Multiplier validation rules] below\n            true\n        ); // wait for store to be updated\n        this.validateAllProperties(); // then run validation before sending proposal\n        this.root_store.common.setSelectedContractType(this.contract_type);\n    }\n\n    setDefaultStake(default_stake?: number) {\n        this.default_stake = default_stake;\n    }\n\n    setPreviousSymbol(symbol: string) {\n        if (this.previous_symbol !== symbol) this.previous_symbol = symbol;\n    }\n\n    setIsTradeParamsExpanded(value: boolean) {\n        this.is_trade_params_expanded = value;\n    }\n\n    async resetPreviousSymbol() {\n        this.setMarketStatus(isMarketClosed(this.active_symbols, this.previous_symbol));\n\n        await Symbol.onChangeSymbolAsync(this.previous_symbol);\n        this.updateSymbol(this.symbol);\n\n        this.setChartStatus(false);\n        runInAction(() => {\n            this.previous_symbol = ''; // reset the symbol to default\n        });\n    }\n\n    onHoverPurchase(is_over: boolean, contract_type?: string) {\n        if (this.is_accumulator) return;\n        if (this.is_purchase_enabled && this.main_barrier && !this.is_multiplier) {\n            this.main_barrier.updateBarrierShade(is_over, contract_type ?? '');\n        } else if (!is_over && this.main_barrier && !this.is_multiplier) {\n            this.main_barrier.updateBarrierShade(false, contract_type ?? '');\n        }\n\n        this.hovered_contract_type = is_over ? contract_type : null;\n        setLimitOrderBarriers({\n            barriers: this.root_store.portfolio.barriers,\n            is_over,\n            contract_type,\n            contract_info: this.proposal_info[contract_type ?? ''],\n        });\n    }\n\n    clearLimitOrderBarriers() {\n        this.hovered_contract_type = null;\n        const { barriers } = this;\n        setLimitOrderBarriers({\n            barriers,\n            is_over: false,\n        });\n    }\n\n    get barrier_pipsize() {\n        return getBarrierPipSize(this.barrier_1);\n    }\n\n    get main_barrier_flattened() {\n        const is_digit_trade_type = isDigitTradeType(this.contract_type);\n        return is_digit_trade_type ? null : toJS(this.main_barrier);\n    }\n\n    get barriers_flattened() {\n        return this.root_store.portfolio.barriers && toJS(this.root_store.portfolio.barriers);\n    }\n\n    setMainBarrier = (proposal_info: PriceProposalRequest) => {\n        if (!proposal_info) {\n            return;\n        }\n        const { contract_type, barrier, barrier2 } = proposal_info;\n        if (isBarrierSupported(contract_type)) {\n            // create barrier only when it's available in response\n            this.main_barrier = new ChartBarrierStore(barrier, barrier2, this.onChartBarrierChange, {\n                color: BARRIER_COLORS.BLUE,\n                not_draggable: this.is_turbos || this.is_vanilla,\n            });\n        } else {\n            this.main_barrier = null;\n        }\n    };\n\n    async onPurchaseV2(\n        trade_type: string,\n        isMobile: boolean,\n        callback?: (params: { message: string; redirectTo: string; title: string }, contract_id: number) => void\n    ) {\n        await when(() => {\n            const proposal_info_keys = Object.keys(this.proposal_info);\n            const proposal_request_keys = Object.keys(this.proposal_requests);\n            return proposal_info_keys.length > 0 && proposal_info_keys.length === proposal_request_keys.length;\n        });\n\n        const info = this.proposal_info?.[trade_type];\n        if (info) this.onPurchase(info.id, info.stake, trade_type, isMobile, callback, true);\n    }\n\n    onPurchase = debounce(this.processPurchase, 300);\n\n    processPurchase(\n        proposal_id: string,\n        price: string | number,\n        type: string,\n        isMobile: boolean,\n        callback?: (params: { message: string; redirectTo: string; title: string }, contract_id: number) => void,\n        is_dtrader_v2?: boolean\n    ) {\n        if (!this.is_purchase_enabled) return;\n        if (proposal_id) {\n            runInAction(() => {\n                this.is_purchase_enabled = false;\n                this.is_purchasing_contract = true;\n            });\n            const is_tick_contract = this.duration_unit === 't';\n            processPurchase(proposal_id, price).then(\n                action((response: TResponse<Buy, BuyContractResponse, 'buy'>) => {\n                    if (!this.is_trade_component_mounted) {\n                        this.enablePurchase();\n                        this.is_purchasing_contract = false;\n                        return;\n                    }\n\n                    const last_digit = +this.last_digit;\n                    if (response.error) {\n                        // using javascript to disable purchase-buttons manually to compensate for mobx lag\n                        this.disablePurchaseButtons();\n                        // invalidToken error will handle in socket-general.js\n                        if (response.error.code !== 'InvalidToken') {\n                            this.root_store.common.setServicesError(\n                                {\n                                    type: response.msg_type,\n                                    ...response.error,\n                                },\n                                this.is_dtrader_v2\n                            );\n\n                            // Clear purchase info on mobile after toast box error disappears (mobile_toast_timeout = 3500)\n                            if (isMobile && this.root_store.common?.services_error?.type === 'buy') {\n                                setTimeout(() => {\n                                    this.clearPurchaseInfo();\n                                    this.requestProposal();\n                                }, 3500);\n                            }\n                        }\n                    } else if (response.buy) {\n                        if (this.proposal_info[type] && this.proposal_info[type].id !== proposal_id) {\n                            throw new Error('Proposal ID does not match.');\n                        }\n                        const contract_data: TContractDataForGTM = {\n                            ...this.proposal_requests[type],\n                            ...this.proposal_info[type],\n                            buy_price: response.buy.buy_price,\n                        };\n                        const { contract_id, longcode, start_time } = response.buy;\n\n                        // toggle smartcharts to contract mode\n                        if (contract_id) {\n                            const shortcode = response.buy.shortcode;\n                            const { category, underlying } = extractInfoFromShortcode(shortcode);\n                            const is_digit_contract = isDigitContractType(category?.toUpperCase() ?? '');\n                            const is_multiplier = isMultiplierContract(category);\n                            const contract_type = category?.toUpperCase();\n                            const is_call = category.toUpperCase() === CONTRACT_TYPES.CALL;\n                            const is_put = category.toUpperCase() === CONTRACT_TYPES.PUT;\n                            const is_high_low = isHighLow({ shortcode_info: extractInfoFromShortcode(shortcode) });\n                            let higher_lower_contact = CONTRACT_TYPES.LOWER.toLowerCase();\n                            let rise_fall_contract = CONTRACT_TYPES.FALL.toLowerCase();\n                            if (is_call) {\n                                higher_lower_contact = CONTRACT_TYPES.HIGHER.toLowerCase();\n                                rise_fall_contract = CONTRACT_TYPES.RISE.toLowerCase();\n                            }\n                            const call_put_contract = is_high_low ? higher_lower_contact : rise_fall_contract;\n\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                            if ((window as any).hj) {\n                                const event_string = `placed_${is_call || is_put ? call_put_contract : category}_trade`;\n                                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                                (window as any).hj('event', event_string);\n                            }\n\n                            this.root_store.contract_trade.addContract({\n                                contract_id,\n                                start_time,\n                                longcode,\n                                underlying,\n                                barrier: is_digit_contract ? last_digit : null,\n                                contract_type,\n                                is_tick_contract,\n                            });\n                            this.root_store.portfolio.onBuyResponse({\n                                contract_id,\n                                longcode,\n                                contract_type,\n                            });\n                            // NOTE: changing chart granularity and chart_type has to be done in a different render cycle\n                            // so we have to set chart granularity to zero, and change the chart_type to 'mountain' first,\n                            // and then set the chart view to the start_time\n                            // draw the start time line and show longcode then mount contract\n                            // this.root_store.modules.contract_trade.drawContractStartTime(start_time, longcode, contract_id);\n                            if (!is_dtrader_v2) {\n                                sendDtraderPurchaseToAnalytics(contract_type, this.symbol, contract_id);\n                            }\n\n                            if (!isMobile) {\n                                this.root_store.ui.openPositionsDrawer();\n                            }\n                            this.proposal_info = {};\n                            this.forgetAllProposal();\n                            this.purchase_info = response;\n                            this.proposal_requests = {};\n                            this.debouncedProposal();\n                            this.clearLimitOrderBarriers();\n                            this.pushPurchaseDataToGtm(contract_data);\n                            if (this.root_store.ui.is_mobile) {\n                                const shortcode = response.buy.shortcode;\n                                const extracted_info_from_shortcode = extractInfoFromShortcode(shortcode);\n                                const contract_id = response.buy.contract_id;\n                                const currency = getCurrencyDisplayCode(this.root_store.client.currency);\n                                const formatted_stake = `${getCardLabelsV2().STAKE}: ${formatMoney(\n                                    currency,\n                                    response.buy.buy_price,\n                                    true,\n                                    0,\n                                    0\n                                )} ${currency}`;\n                                const trade_type = extracted_info_from_shortcode.category;\n\n                                if (window.location.pathname === routes.trade)\n                                    callback?.(\n                                        {\n                                            message: getTradeNotificationMessage(shortcode),\n                                            redirectTo: getContractPath(contract_id),\n                                            title: formatted_stake,\n                                        },\n                                        contract_id\n                                    );\n\n                                this.root_store.notifications.addTradeNotification({\n                                    buy_price: is_multiplier ? this.amount : response.buy.buy_price,\n                                    contract_id,\n                                    contract_type: trade_type,\n                                    currency,\n                                    purchase_time: response.buy.purchase_time,\n                                    shortcode,\n                                    status: 'open',\n                                });\n                            }\n\n                            this.is_purchasing_contract = false;\n                            return;\n                        }\n                    }\n                    this.forgetAllProposal();\n                    this.purchase_info = response;\n                    this.enablePurchase();\n                    this.is_purchasing_contract = false;\n                })\n            );\n        }\n    }\n\n    enablePurchase() {\n        if (!this.root_store.client.is_unwelcome) {\n            this.is_purchase_enabled = true;\n        }\n    }\n\n    disablePurchaseButtons = () => {\n        const el_purchase_value = document.getElementsByClassName('trade-container__price-info');\n        const el_purchase_buttons = document.getElementsByClassName('btn-purchase');\n        [].forEach.bind(el_purchase_buttons, el => {\n            (el as HTMLButtonElement).classList.add('btn-purchase--disabled');\n        })();\n        [].forEach.bind(el_purchase_value, el => {\n            (el as HTMLDivElement).classList.add('trade-container__price-info--fade');\n        })();\n    };\n\n    /**\n     * Updates the store with new values\n     * @param  {Object} new_state - new values to update the store with\n     * @return {Object} returns the object having only those values that are updated\n     */\n    updateStore(new_state: Partial<TradeStore>) {\n        Object.keys(cloneObject(new_state) || {}).forEach(key => {\n            if (key === 'root_store' || ['validation_rules', 'validation_errors', 'currency'].indexOf(key) > -1) return;\n            if (JSON.stringify(this[key as keyof this]) === JSON.stringify(new_state[key as keyof TradeStore])) {\n                delete new_state[key as keyof TradeStore];\n            } else {\n                if (key === 'symbol') {\n                    this.is_purchase_enabled = false;\n                    this.is_trade_enabled = false;\n                }\n\n                if (new_state.start_date && typeof new_state.start_date === 'string') {\n                    new_state.start_date = parseInt(new_state.start_date);\n                }\n\n                this[key as 'currency'] = new_state[key as keyof TradeStore] as TradeStore['currency'];\n\n                // validation is done in mobx intercept (base_store.js)\n                // when barrier_1 is set, it is compared with store.barrier_2 (which is not updated yet)\n                if (key === 'barrier_2' && new_state.barrier_1) {\n                    this.barrier_1 = new_state.barrier_1; // set it again, after barrier_2 is updated in store\n                }\n            }\n        });\n        return new_state;\n    }\n\n    async processNewValuesAsync(\n        obj_new_values: Partial<TradeStore> = {},\n        is_changed_by_user = false,\n        obj_old_values: Partial<TradeStore> | null = {},\n        should_forget_first = true\n    ) {\n        // To switch to rise_fall_equal contract type when allow equal is checked on first page refresh or\n        // when switch back to Rise/Fall from another contract type i.e.\n        if (obj_new_values.contract_type && obj_new_values.contract_type === TRADE_TYPES.RISE_FALL && !!this.is_equal) {\n            obj_new_values.contract_type = TRADE_TYPES.RISE_FALL_EQUAL;\n        }\n        // when accumulator is selected, we need to change chart type to mountain and granularity to 0\n        // and we need to restore previous chart type and granularity when accumulator is unselected\n        const {\n            prev_chart_type,\n            prev_granularity,\n            chart_type,\n            granularity,\n            savePreviousChartMode,\n            updateChartType,\n            updateGranularity,\n        } = this.root_store.contract_trade || {};\n        if (isAccumulatorContract(obj_new_values.contract_type) || isDigitTradeType(obj_new_values.contract_type)) {\n            savePreviousChartMode(chart_type, granularity);\n            updateGranularity(0);\n            updateChartType('line');\n        } else if (\n            (obj_new_values.contract_type || obj_new_values.symbol) &&\n            prev_chart_type &&\n            prev_granularity &&\n            (prev_chart_type !== chart_type || prev_granularity !== granularity)\n        ) {\n            updateGranularity(prev_granularity);\n            updateChartType(prev_chart_type);\n            savePreviousChartMode('', null);\n        }\n        if (/\\bduration\\b/.test(Object.keys(obj_new_values) as unknown as string)) {\n            // TODO: fix this in input-field.jsx\n            if (typeof obj_new_values.duration === 'string') {\n                obj_new_values.duration = +obj_new_values.duration;\n            }\n        }\n        // Sets the default value to Amount when Currency has changed from Fiat to Crypto and vice versa.\n        // The source of default values is the website_status response.\n        if (should_forget_first) {\n            this.forgetAllProposal();\n            this.proposal_requests = {};\n        }\n        if (is_changed_by_user && /\\bcurrency\\b/.test(Object.keys(obj_new_values) as unknown as string)) {\n            const prev_currency = obj_old_values?.currency || this.currency;\n            const has_currency_changed = obj_new_values.currency !== prev_currency;\n\n            const should_reset_stake =\n                isCryptocurrency(obj_new_values.currency ?? '') ||\n                // For switch between fiat and crypto and vice versa\n                isCryptocurrency(obj_new_values.currency ?? '') !== isCryptocurrency(prev_currency);\n\n            if (has_currency_changed && should_reset_stake) {\n                obj_new_values.amount = obj_new_values.amount || getMinPayout(obj_new_values.currency ?? '');\n            }\n            this.currency = obj_new_values.currency ?? '';\n        }\n\n        let has_only_forward_starting_contracts;\n\n        if (Object.keys(obj_new_values).includes('symbol')) {\n            this.setPreviousSymbol(this.symbol);\n            await Symbol.onChangeSymbolAsync(obj_new_values.symbol ?? '');\n            this.setMarketStatus(isMarketClosed(this.active_symbols, obj_new_values.symbol ?? ''));\n            has_only_forward_starting_contracts =\n                ContractType.getContractCategories().has_only_forward_starting_contracts;\n        }\n\n        // Set stake to default one (from contracts_for) on symbol or contract type switch.\n        // On contract type we also additionally reset take profit\n        if (this.default_stake && this.is_dtrader_v2) {\n            const has_symbol_changed = obj_new_values.symbol && this.symbol && this.symbol !== obj_new_values.symbol;\n            const has_contract_type_changed =\n                obj_new_values.contract_type &&\n                obj_old_values?.contract_type &&\n                obj_new_values.contract_type !== obj_old_values.contract_type;\n\n            if (has_symbol_changed || has_contract_type_changed) {\n                const is_crypto = isCryptocurrency(this.currency ?? '');\n                const default_crypto_value = getMinPayout(this.currency ?? '') ?? '';\n                obj_new_values.amount = is_crypto ? default_crypto_value : this.default_stake;\n            }\n            if (has_contract_type_changed) {\n                obj_new_values.has_take_profit = false;\n                obj_new_values.take_profit = '';\n            }\n        }\n\n        // TODO: remove all traces of setHasOnlyForwardingContracts and has_only_forward_starting_contracts in app\n        //  once future contracts are implemented\n        this.root_store.ui.setHasOnlyForwardingContracts(has_only_forward_starting_contracts);\n        if (has_only_forward_starting_contracts) return;\n\n        const new_state = this.updateStore(cloneObject(obj_new_values));\n\n        if (\n            is_changed_by_user ||\n            /\\b(symbol|contract_types_list)\\b/.test(Object.keys(new_state) as unknown as string)\n        ) {\n            this.updateStore({\n                // disable purchase button(s), clear contract info\n                is_purchase_enabled: false,\n                proposal_info: {},\n            });\n\n            // To prevent infinite loop when changing from advanced end_time to digit type contract\n            if (obj_new_values.contract_type && this.root_store.ui.is_advanced_duration) {\n                if (isDigitTradeType(obj_new_values.contract_type)) {\n                    this.barrier_1 = '';\n                    this.barrier_2 = '';\n                    this.expiry_type = 'duration';\n                    this.root_store.ui.is_advanced_duration = false;\n                }\n            }\n\n            // TODO: handle barrier updates on proposal api\n            // const is_barrier_changed = 'barrier_1' in new_state || 'barrier_2' in new_state;\n            await processTradeParams(this, new_state);\n\n            this.updateStore({\n                ...(!this.is_initial_barrier_applied ? this.initial_barriers : {}),\n            });\n            this.is_initial_barrier_applied = true;\n            if (/\\b(contract_type|currency)\\b/.test(Object.keys(new_state) as unknown as string)) {\n                this.validateAllProperties();\n            }\n            this.debouncedProposal();\n        }\n    }\n\n    get is_dtrader_v2_mobile() {\n        return isDtraderV2MobileEnabled(this.root_store.ui.is_mobile);\n    }\n\n    get is_dtrader_v2_desktop() {\n        return isDtraderV2DesktopEnabled(this.root_store.ui.is_desktop);\n    }\n\n    get is_dtrader_v2() {\n        return this.is_dtrader_v2_mobile || this.is_dtrader_v2_desktop;\n    }\n\n    get is_synthetics_available() {\n        return !!this.active_symbols?.find(item => item.market === 'synthetic_index');\n    }\n\n    get is_synthetics_trading_market_available() {\n        return !!this.active_symbols?.find(\n            item => item.subgroup === 'synthetics' && !isMarketClosed(this.active_symbols, item.symbol)\n        );\n    }\n\n    get show_digits_stats() {\n        return isDigitTradeType(this.contract_type);\n    }\n\n    setDigitStats(digit_stats: number[]) {\n        this.digit_stats = digit_stats;\n    }\n\n    setTickData(tick: TickSpotData | null) {\n        this.tick_data = tick;\n    }\n\n    setMobileDigitView(bool: boolean) {\n        this.is_mobile_digit_view_selected = bool;\n    }\n\n    pushPurchaseDataToGtm(contract_data: TContractDataForGTM) {\n        const data = {\n            event: 'buy_contract',\n            bom_ui: 'new',\n            contract: {\n                amount: contract_data.amount,\n                barrier1: contract_data.barrier,\n                barrier2: contract_data.barrier2,\n                basis: contract_data.basis,\n                buy_price: contract_data.buy_price,\n                contract_type: contract_data.contract_type,\n                currency: contract_data.currency,\n                date_expiry: contract_data.date_expiry,\n                date_start: contract_data.date_start,\n                duration: contract_data.duration,\n                duration_unit: contract_data.duration_unit,\n                payout: contract_data.payout,\n                symbol: contract_data.symbol,\n            },\n            settings: {\n                theme: this.root_store.ui.is_dark_mode_on ? 'dark' : 'light',\n                positions_drawer: this.root_store.ui.is_positions_drawer_on ? 'open' : 'closed',\n                chart: {\n                    toolbar_position: this.root_store.ui.is_chart_layout_default ? 'bottom' : 'left',\n                    chart_asset_info: this.root_store.ui.is_chart_asset_info_visible ? 'visible' : 'hidden',\n                    chart_type: this.root_store.contract_trade.chart_type,\n                    granularity: this.root_store.contract_trade.granularity,\n                },\n            },\n        };\n        this.root_store.gtm.pushDataLayer(data);\n    }\n\n    clearPurchaseInfo() {\n        this.purchase_info = {};\n        this.proposal_requests = {};\n        this.proposal_info = {};\n    }\n\n    requestProposal() {\n        const requests = createProposalRequests(this);\n        if (Object.values(this.validation_errors).some(e => e.length)) {\n            runInAction(() => {\n                this.proposal_info = {};\n                this.purchase_info = {};\n            });\n            this.forgetAllProposal();\n            if (this.is_accumulator) this.resetAccumulatorData();\n            return;\n        }\n\n        if (!isEmptyObject(requests)) {\n            runInAction(() => {\n                this.proposal_requests = requests as Record<string, Partial<PriceProposalRequest>>;\n                this.purchase_info = {};\n            });\n            Object.keys(this.proposal_requests).forEach(type => {\n                WS.subscribeProposal(this.proposal_requests[type], this.onProposalResponse);\n            });\n        }\n        this.root_store.ui.resetPurchaseStates();\n    }\n\n    forgetAllProposal() {\n        const length = Object.keys(this.proposal_requests).length;\n        if (length > 0) WS.forgetAll('proposal');\n    }\n\n    setMarketStatus(status: boolean) {\n        this.is_market_closed = status;\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    getTurbosChartBarrier(response: ProposalResponse) {\n        return (Number(response.proposal?.contract_details?.barrier) - Number(response.proposal?.spot)).toFixed(\n            getBarrierPipSize(response.proposal?.contract_details?.barrier)\n        );\n    }\n\n    onProposalResponse(response: TResponse<PriceProposalRequest, ProposalResponse, 'proposal'>) {\n        const { contract_type } = response.echo_req;\n        const prev_proposal_info = getPropertyValue(this.proposal_info, contract_type) || {};\n        const obj_prev_contract_basis = getPropertyValue(prev_proposal_info, 'obj_contract_basis') || {};\n\n        // add/update expiration or date_expiry for crypto indices from proposal\n        const date_expiry = response.proposal?.date_expiry;\n        this.expiry_epoch = date_expiry || this.expiry_epoch;\n\n        if (!response.error && !!date_expiry && this.is_crypto_multiplier) {\n            this.expiration = date_expiry;\n        }\n\n        this.proposal_info = {\n            ...this.proposal_info,\n            [contract_type]: getProposalInfo(this, response, obj_prev_contract_basis),\n        };\n        this.validation_params[contract_type] = this.proposal_info[contract_type].validation_params;\n\n        if (this.is_multiplier && this.proposal_info && this.proposal_info.MULTUP) {\n            const { commission, cancellation, limit_order } = this.proposal_info.MULTUP;\n            // commission and cancellation.ask_price is the same for MULTUP/MULTDOWN\n            if (commission) {\n                this.commission = commission;\n            }\n            if (cancellation) {\n                this.cancellation_price = cancellation.ask_price;\n            }\n            this.stop_out = limit_order?.stop_out?.order_amount;\n        }\n\n        if (this.is_accumulator && this.proposal_info?.ACCU) {\n            const {\n                barrier_spot_distance,\n                maximum_ticks = 0,\n                ticks_stayed_in,\n                tick_size_barrier_percentage = '',\n                last_tick_epoch,\n                maximum_payout = 0,\n                high_barrier,\n                low_barrier,\n                spot_time,\n            } = this.proposal_info.ACCU;\n            this.ticks_history_stats = getUpdatedTicksHistoryStats({\n                previous_ticks_history_stats: this.ticks_history_stats,\n                new_ticks_history_stats: ticks_stayed_in,\n                last_tick_epoch,\n            });\n            this.maximum_ticks = maximum_ticks;\n            this.maximum_payout = maximum_payout;\n            this.tick_size_barrier_percentage = tick_size_barrier_percentage;\n            const { updateAccumulatorBarriersData } = this.root_store.contract_trade || {};\n            if (updateAccumulatorBarriersData) {\n                updateAccumulatorBarriersData({\n                    accumulators_high_barrier: high_barrier,\n                    accumulators_low_barrier: low_barrier,\n                    barrier_spot_distance,\n                    current_spot_time: spot_time,\n                    underlying: this.symbol,\n                });\n            }\n        }\n\n        if (!this.main_barrier || this.main_barrier?.shade) {\n            if (this.is_turbos) {\n                if (response.proposal) {\n                    const chart_barrier = response.proposal.barrier_spot_distance;\n                    this.setMainBarrier({\n                        ...response.echo_req,\n                        barrier: String(chart_barrier),\n                    });\n                }\n            } else {\n                this.setMainBarrier(response.echo_req);\n            }\n        }\n\n        if (this.hovered_contract_type === contract_type) {\n            setLimitOrderBarriers({\n                barriers: this.root_store.portfolio.barriers,\n                contract_info: this.proposal_info[this.hovered_contract_type ?? ''],\n                contract_type,\n                is_over: true,\n            });\n        }\n\n        if (response.error) {\n            const error_id = getProposalErrorField(response);\n            if (error_id) {\n                this.setValidationErrorMessages(error_id, [response.error.message]);\n            }\n            // Commission for multipliers is normally set from proposal response.\n            // But when we change the multiplier and if it is invalid, we don't get the proposal response to set the commission. We only get error message.\n            // This is a work around to set the commission from error message.\n            if (this.is_multiplier) {\n                const { message, details } = response.error;\n                const commission_match = (message || '').match(/\\((\\d+\\.*\\d*)\\)/);\n                if (details?.field === 'stop_loss' && commission_match?.[1]) {\n                    this.commission = commission_match[1];\n                }\n            }\n            if (this.is_accumulator) this.resetAccumulatorData();\n\n            // Sometimes when we navigate fast, `forget_all` proposal is called immediately after proposal subscription calls.\n            // But, in the BE, `forget_all` proposal call is processed before the proposal subscriptions are registered. In this case, `forget_all` proposal doesn't forget the new subscriptions.\n            // So when we send new proposal subscription requests, we get `AlreadySubscribed` error.\n            // If we get an error message with code `AlreadySubscribed`, `forget_all` proposal will be called and all the existing subscriptions will be marked as complete in `deriv-api` and will subscribe to new proposals\n            if (response.error.code === 'AlreadySubscribed') {\n                this.refresh();\n\n                if (this.is_trade_component_mounted) {\n                    this.debouncedProposal();\n                }\n                return;\n            }\n\n            // Sometimes the initial barrier doesn't match with current barrier choices received from API.\n            // When this happens we want to populate the list of barrier choices to choose from since the value cannot be specified manually\n            if (this.is_vanilla && response.error.details?.barrier_choices) {\n                const { barrier_choices, max_stake, min_stake } = response.error.details;\n\n                this.setStakeBoundary(contract_type, min_stake, max_stake);\n                this.setBarrierChoices(barrier_choices as string[]);\n                if (!this.barrier_choices.includes(this.barrier_1)) {\n                    // Since on change of duration `proposal` API call is made which returns a new set of barrier values.\n                    // The new list is set and the mid value is assigned\n                    const index = Math.floor(this.barrier_choices.length / 2);\n                    this.barrier_1 = this.barrier_choices[index];\n                    this.onChange({\n                        target: {\n                            name: 'barrier_1',\n                            value: this.barrier_1,\n                        },\n                    });\n                }\n            }\n            if (this.is_turbos && response.error.details?.payout_per_point_choices) {\n                const { payout_per_point_choices, min_stake, max_stake } = response.error.details;\n                const payoutIndex = Math.floor(payout_per_point_choices.length / 2);\n                this.setPayoutChoices(payout_per_point_choices.map(item => String(item)));\n                this.setStakeBoundary(contract_type, min_stake, max_stake);\n                this.onChange({\n                    target: {\n                        name: 'payout_per_point',\n                        value: String(payout_per_point_choices[payoutIndex]),\n                    },\n                });\n                this.barrier_1 = String(this.getTurbosChartBarrier(response));\n            }\n        } else {\n            this.validateAllProperties();\n            if (this.is_vanilla) {\n                const { max_stake, min_stake, barrier_choices } = response.proposal ?? {};\n                this.setBarrierChoices(barrier_choices as string[]);\n                this.setStakeBoundary(contract_type, min_stake, max_stake);\n            } else if (this.is_turbos) {\n                const { max_stake, min_stake, payout_choices } = response.proposal ?? {};\n                if (payout_choices) {\n                    if (this.payout_per_point == '') {\n                        this.onChange({\n                            target: {\n                                name: 'payout_per_point',\n                                value: String(Math.floor(payout_choices.length / 2)),\n                            },\n                        });\n                    }\n                    this.setPayoutChoices(payout_choices as string[]);\n                    this.setStakeBoundary(contract_type, min_stake, max_stake);\n                    this.barrier_1 = response.proposal.barrier_spot_distance;\n                }\n            }\n        }\n\n        if (!this.is_purchasing_contract) {\n            this.enablePurchase();\n        }\n    }\n\n    onChartBarrierChange(barrier_1: string, barrier_2?: string) {\n        this.processNewValuesAsync({ barrier_1, barrier_2 }, true);\n    }\n\n    onAllowEqualsChange() {\n        this.processNewValuesAsync(\n            { contract_type: this.is_equal ? TRADE_TYPES.RISE_FALL_EQUAL : TRADE_TYPES.RISE_FALL },\n            true\n        );\n    }\n\n    updateSymbol(underlying: string) {\n        if (!underlying) return;\n        this.onChange({\n            target: {\n                name: 'symbol',\n                value: underlying,\n            },\n        });\n    }\n\n    changeDurationValidationRules() {\n        if (this.expiry_type === 'endtime') {\n            this.validation_errors.duration = [];\n            return;\n        }\n\n        if (!this.validation_rules.duration) return;\n\n        const index = this.validation_rules.duration.rules?.findIndex(item => item[0] === 'number');\n        const limits = this.duration_min_max[this.contract_expiry_type] || false;\n\n        if (limits) {\n            const duration_options = {\n                min: convertDurationLimit(+limits.min, this.duration_unit),\n                max: convertDurationLimit(+limits.max, this.duration_unit),\n            };\n\n            if (Number(index) > -1 && this.validation_rules.duration.rules) {\n                this.validation_rules.duration.rules[Number(index)][1] = duration_options;\n            } else {\n                this.validation_rules.duration.rules?.push(['number', duration_options]);\n            }\n            this.validateProperty('duration', this.duration);\n        }\n    }\n\n    async accountSwitcherListener() {\n        if (this.root_store.common.is_language_changing) {\n            await this.loadActiveSymbols(false, false);\n            this.root_store.common.is_language_changing = false;\n        } else {\n            await this.loadActiveSymbols(true, false);\n        }\n\n        this.resetErrorServices();\n        await this.setContractTypes();\n        runInAction(async () => {\n            if (!this.is_dtrader_v2) {\n                this.processNewValuesAsync(\n                    { currency: this.root_store.client.currency || this.root_store.client.default_currency },\n                    true,\n                    { currency: this.currency },\n                    false\n                );\n            }\n        });\n        return Promise.resolve();\n    }\n\n    preSwitchAccountListener() {\n        this.clearContracts();\n        this.is_trade_enabled = false;\n        this.is_trade_enabled_v2 = false;\n        return Promise.resolve();\n    }\n\n    async logoutListener() {\n        this.clearContracts();\n        this.refresh();\n        this.resetErrorServices();\n        if (this.root_store.common.is_language_changing) {\n            await this.loadActiveSymbols(false);\n            this.root_store.common.is_language_changing = false;\n        } else {\n            await this.loadActiveSymbols();\n        }\n        await this.setContractTypes();\n        this.is_trade_enabled = true;\n        this.is_trade_enabled_v2 = true;\n        this.debouncedProposal();\n    }\n\n    clientInitListener() {\n        this.initAccountCurrency(this.root_store.client.currency || this.root_store.client.default_currency);\n        return Promise.resolve();\n    }\n\n    networkStatusChangeListener(is_online: boolean) {\n        this.setTradeStatus(is_online);\n        this.is_trade_enabled_v2 = is_online;\n    }\n\n    resetErrorServices() {\n        this.root_store.ui.toggleServicesErrorModal(false);\n    }\n\n    onMount() {\n        this.root_store.notifications.removeTradeNotifications();\n        if (this.is_trade_component_mounted && this.should_skip_prepost_lifecycle) {\n            const { chart_type, granularity } = this.root_store.contract_trade;\n            setTradeURLParams({\n                chartType: chart_type,\n                granularity,\n                symbol: this.symbol,\n                contractType: this.contract_type,\n            });\n            return;\n        }\n        this.root_store.notifications.setShouldShowPopups(false);\n        this.onPreSwitchAccount(this.preSwitchAccountListener);\n        this.onSwitchAccount(this.accountSwitcherListener);\n        this.resetAccumulatorData();\n        this.onLogout(this.logoutListener);\n        this.onClientInit(this.clientInitListener);\n        this.onNetworkStatusChange(this.networkStatusChangeListener);\n        this.setChartModeFromURL();\n        this.setChartStatus(true);\n        runInAction(async () => {\n            this.is_trade_component_mounted = true;\n            await this.prepareTradeStore();\n            this.root_store.notifications.setShouldShowPopups(true);\n        });\n    }\n\n    setChartModeFromURL() {\n        const { chartType: chartTypeParam, granularity: granularityParam, contractType } = getTradeURLParams();\n        const { chart_type, granularity, updateChartType, updateGranularity } = this.root_store.contract_trade;\n\n        if (!isNaN(Number(granularityParam)) && granularityParam !== granularity) {\n            updateGranularity(Number(granularityParam));\n        }\n        if (chartTypeParam && chartTypeParam !== chart_type) {\n            updateChartType(chartTypeParam);\n        }\n\n        const urlParams: {\n            chartType: string;\n            granularity: number;\n            contractType?: string;\n        } = {\n            chartType: chartTypeParam ?? chart_type,\n            granularity: granularityParam ?? Number(granularity),\n        };\n\n        if (contractType) {\n            this.contract_type = contractType ?? '';\n            urlParams.contractType = contractType;\n        }\n\n        setTradeURLParams(urlParams);\n    }\n\n    setChartStatus(status: boolean, isFromChart?: boolean) {\n        if (isFromChart) this.debouncedSetChartStatus(status);\n        else this.is_chart_loading = status;\n    }\n\n    async initAccountCurrency(new_currency: string) {\n        if (this.currency === new_currency) return;\n\n        await this.processNewValuesAsync({ currency: new_currency }, true, { currency: this.currency }, false);\n        this.refresh();\n        this.debouncedProposal();\n    }\n\n    onUnmount() {\n        if (this.should_skip_prepost_lifecycle) {\n            return;\n        }\n        this.disposePreSwitchAccount();\n        this.disposeSwitchAccount();\n        this.disposeLogout();\n        this.disposeClientInit();\n        this.disposeNetworkStatusChange();\n        this.disposeThemeChange();\n        this.is_trade_component_mounted = false;\n        this.clearV2ParamsInitialValues();\n        // TODO: Find a more elegant solution to unmount contract-trade-store\n        this.root_store.contract_trade.onUnmount();\n        this.refresh();\n        this.resetErrorServices();\n        if (this.root_store.notifications.is_notifications_visible) {\n            this.root_store.notifications.toggleNotificationsModal();\n        }\n        if (this.prev_chart_layout) {\n            this.prev_chart_layout.is_used = false;\n        }\n        this.clearContracts();\n        this.resetAccumulatorData();\n        if (this.is_vanilla) {\n            this.setBarrierChoices([]);\n        }\n    }\n\n    prev_chart_layout: TPrevChartLayout = null;\n\n    get chart_layout() {\n        let layout = null;\n        if (this.prev_chart_layout && this.prev_chart_layout.is_used === false) {\n            layout = this.prev_chart_layout;\n        }\n        return layout;\n    }\n\n    get is_crypto_multiplier() {\n        return this.contract_type === TRADE_TYPES.MULTIPLIER && this.symbol.startsWith('cry');\n    }\n\n    exportLayout(layout: TChartLayout) {\n        delete layout.previousMaxTicks; // TODO: fix it in smartcharts\n        this.prev_chart_layout = layout;\n        if (this.prev_chart_layout) {\n            this.prev_chart_layout.isDone = () => {\n                if (this.prev_chart_layout) this.prev_chart_layout.is_used = true;\n                this.setChartStatus(false);\n            };\n        }\n    }\n\n    // ---------- WS ----------\n    wsSubscribe = (req: TicksHistoryRequest, callback: (response: TTicksHistoryResponse) => void) => {\n        const passthrough_callback = (...args: [TTicksHistoryResponse]) => {\n            callback(...args);\n            if ('ohlc' in args[0] && this.root_store.contract_trade.granularity !== 0) {\n                const { close, pip_size } = args[0].ohlc as { close: string; pip_size: number };\n                if (close && pip_size) this.setTickData({ pip_size, quote: Number(close) });\n            }\n            if (this.is_accumulator) {\n                let current_spot_data = {};\n                if ('tick' in args[0]) {\n                    const { epoch, quote, symbol } = args[0].tick as TickSpotData;\n                    if (this.symbol !== symbol) return;\n                    current_spot_data = {\n                        current_spot: quote,\n                        current_spot_time: epoch,\n                    };\n                } else if ('history' in args[0]) {\n                    const { prices, times } = args[0].history as History;\n                    const symbol = args[0].echo_req.ticks_history;\n                    if (this.symbol !== symbol) return;\n                    current_spot_data = {\n                        current_spot: prices?.[prices?.length - 1],\n                        current_spot_time: times?.[times?.length - 1],\n                        prev_spot_time: times?.[times?.length - 2],\n                    };\n                } else {\n                    return;\n                }\n                this.root_store.contract_trade.updateAccumulatorBarriersData(current_spot_data);\n            }\n        };\n        if (isMarketClosed(this.active_symbols, req.ticks_history)) {\n            delete req.subscribe;\n            WS.getTicksHistory(req).then(passthrough_callback, passthrough_callback);\n        } else if (req.subscribe === 1) {\n            const key = JSON.stringify(req);\n            const subscriber = WS.subscribeTicksHistory(req, passthrough_callback);\n            g_subscribers_map[key] = subscriber;\n        }\n    };\n\n    wsForget = (req: TicksHistoryRequest) => {\n        const key = JSON.stringify(req);\n        if (g_subscribers_map[key]) {\n            g_subscribers_map[key]?.unsubscribe();\n            delete g_subscribers_map[key];\n        }\n        // WS.forget('ticks_history', callback, match);\n    };\n\n    wsForgetStream = (stream_id: string) => {\n        WS.forgetStream(stream_id);\n    };\n\n    wsSendRequest = (req: TradingTimesRequest | ActiveSymbolsRequest | ServerTimeRequest) => {\n        if ('time' in req) {\n            return ServerTime.timePromise().then(server_time => {\n                if (server_time) {\n                    return {\n                        msg_type: 'time',\n                        time: server_time.unix(),\n                    };\n                }\n                return WS.time();\n            });\n        }\n        if ('active_symbols' in req) {\n            if (this.root_store.client.is_logged_in) {\n                return WS.authorized.activeSymbols('brief');\n            }\n            return WS.activeSymbols('brief');\n        }\n        if ('trading_times' in req) {\n            return WS.tradingTimes(req.trading_times);\n        }\n        return WS.storage.send(req);\n    };\n\n    chartStateChange(state: string, option?: TChartStateChangeOption) {\n        if (\n            state === STATE_TYPES.MARKET_STATE_CHANGE &&\n            this.is_trade_component_mounted &&\n            option?.isClosed &&\n            option.isClosed !== this.is_market_closed\n        ) {\n            this.prepareTradeStore(false);\n        }\n        if (state === STATE_TYPES.SET_CHART_MODE) {\n            if (!isNaN(Number(option?.granularity))) {\n                this.root_store.contract_trade.updateGranularity(Number(option?.granularity));\n            }\n            if (option?.chart_type_name) {\n                this.root_store.contract_trade.updateChartType(option?.chart_type_name);\n            }\n        }\n        const { data, event_type } = getChartAnalyticsData(state as keyof typeof STATE_TYPES, option) as TPayload;\n        if (data) {\n            cacheTrackEvents.loadEvent([\n                {\n                    event: {\n                        name: event_type,\n                        properties: {\n                            ...data,\n                            action: data.action as TEvents['ce_indicators_types_form']['action'],\n                            form_name: 'default',\n                        },\n                    },\n                },\n            ]);\n        }\n    }\n\n    get has_alternative_source() {\n        return this.is_multiplier && !!this.hovered_contract_type;\n    }\n\n    get has_barrier() {\n        return hasBarrier(this.contract_type);\n    }\n\n    get is_accumulator() {\n        return this.contract_type === TRADE_TYPES.ACCUMULATOR;\n    }\n\n    get is_multiplier() {\n        return this.contract_type === TRADE_TYPES.MULTIPLIER;\n    }\n\n    get is_turbos() {\n        return isTurbosContract(this.contract_type);\n    }\n\n    get is_vanilla() {\n        return isVanillaContract(this.contract_type);\n    }\n\n    get is_vanilla_fx() {\n        return isVanillaFxContract(this.contract_type, this.symbol);\n    }\n\n    get is_touch() {\n        return isTouchContract(this.contract_type);\n    }\n\n    async getFirstOpenMarket(markets_to_search: string[]) {\n        if (this.active_symbols?.length) {\n            return findFirstOpenMarket(this.active_symbols, markets_to_search);\n        }\n        const { active_symbols, error } = await WS.authorized.activeSymbols();\n        if (error) {\n            this.root_store.common.showError({ message: localize('Trading is unavailable at this time.') });\n            return undefined;\n        }\n        return findFirstOpenMarket(active_symbols, markets_to_search);\n    }\n\n    setStakeBoundary(type: string, min_stake?: number, max_stake?: number) {\n        if (min_stake && max_stake) this.stake_boundary[type] = { min_stake, max_stake };\n    }\n\n    setActiveSymbolsV2(active_symbols: ActiveSymbols) {\n        this.active_symbols = active_symbols;\n        this.has_symbols_for_v2 = !!active_symbols.length;\n    }\n\n    setContractTypesListV2(contract_types_list: TContractTypesList) {\n        this.contract_types_list_v2 = contract_types_list;\n    }\n\n    setBarrierChoices(barrier_choices: string[]) {\n        this.barrier_choices = barrier_choices ?? [];\n        if (this.is_vanilla) {\n            this.strike_price_choices = { barrier: this.barrier_1, barrier_choices };\n        }\n    }\n\n    setPayoutChoices(payout_choices: string[]) {\n        this.payout_choices = payout_choices ?? [];\n        const stored_barriers_data = { barrier: this.barrier_1, payout_choices };\n        if (getContractSubtype(this.contract_type) === 'Long') {\n            this.long_barriers = stored_barriers_data;\n        } else {\n            this.short_barriers = stored_barriers_data;\n        }\n    }\n\n    togglePayoutWheelPicker() {\n        this.open_payout_wheelpicker = !this.open_payout_wheelpicker;\n    }\n    setPayoutPerPoint(val: string) {\n        if (val && val !== this.payout_per_point) {\n            this.payout_per_point = val;\n            this.onChange({\n                target: {\n                    name: 'payout_per_point',\n                    value: String(this.payout_per_point),\n                },\n            });\n        }\n    }\n    setIsDigitsWidgetActive(is_active: boolean) {\n        this.is_digits_widget_active = is_active;\n    }\n\n    setTradeTypeTab(label = '') {\n        this.trade_type_tab = label;\n    }\n}\n","import { makeObservable, observable, action, override } from 'mobx';\nimport { TRootStore } from 'Types';\nimport { getFilteredContractTypes } from 'AppV2/Utils/positions-utils';\nimport BaseStore from 'Stores/base-store';\n\nexport default class PositionsStore extends BaseStore {\n    openContractTypeFilter: string[] | [] = [];\n    closedContractTypeFilter: string[] | [] = [];\n    filteredContractTypes: string[] | [] = [];\n    timeFilter = '';\n    customTimeRangeFilter = '';\n    dateFrom: number | null = null;\n    dateTo: number | null = null;\n\n    constructor({ root_store }: { root_store: TRootStore }) {\n        super({ root_store });\n\n        makeObservable(this, {\n            openContractTypeFilter: observable,\n            closedContractTypeFilter: observable,\n            timeFilter: observable,\n            customTimeRangeFilter: observable,\n            dateFrom: observable,\n            dateTo: observable,\n            setClosedContractTypeFilter: action.bound,\n            setOpenContractTypeFilter: action.bound,\n            setTimeFilter: action.bound,\n            setCustomTimeRangeFilter: action.bound,\n            setDateFrom: action.bound,\n            setDateTo: action.bound,\n            onUnmount: override,\n        });\n    }\n\n    setClosedContractTypeFilter(contractTypes: string[] | []) {\n        this.closedContractTypeFilter = [...contractTypes];\n        this.filteredContractTypes = getFilteredContractTypes(contractTypes);\n    }\n\n    setOpenContractTypeFilter(contractTypes: string[] | []) {\n        this.openContractTypeFilter = [...contractTypes];\n    }\n\n    setTimeFilter(newTimeFilter?: string) {\n        this.timeFilter = newTimeFilter || '';\n    }\n\n    setCustomTimeRangeFilter(newCustomTimeFilter?: string) {\n        this.customTimeRangeFilter = newCustomTimeFilter || '';\n    }\n\n    setDateFrom(newDateFrom: number | null) {\n        this.dateFrom = newDateFrom;\n    }\n\n    setDateTo(newDateTo: number | null) {\n        this.dateTo = newDateTo;\n    }\n\n    onUnmount() {\n        this.setClosedContractTypeFilter([]);\n        this.setOpenContractTypeFilter([]);\n        this.setTimeFilter('');\n        this.setCustomTimeRangeFilter('');\n        this.setDateFrom(null);\n        this.setDateTo(null);\n    }\n}\n","import { makeObservable, observable, action } from 'mobx';\nimport { TRootStore } from 'Types';\nimport BaseStore from 'Stores/base-store';\n\nexport default class MarketsStore extends BaseStore {\n    // favorites\n    favoriteIndicators: string[] = [];\n    favoriteSymbols: string[] = [];\n\n    constructor({ root_store }: { root_store: TRootStore }) {\n        super({ root_store });\n\n        makeObservable(this, {\n            favoriteSymbols: observable,\n            favoriteIndicators: observable,\n            setFavoriteSymbols: action.bound,\n            setFavoriteIndicators: action.bound,\n            removeFavoriteSymbol: action.bound,\n            removeFavoriteIndicator: action.bound,\n        });\n\n        // Initialize localStorage if it doesn't exist\n        const existingFavorites = localStorage.getItem('cq-favorites');\n        if (!existingFavorites) {\n            const initialData = {\n                indicators: [],\n                'chartTitle&Comparison': [],\n            };\n            localStorage.setItem('cq-favorites', JSON.stringify(initialData));\n        } else {\n            const indicators = JSON.parse(existingFavorites).indicators;\n            const favoriteSymbols = JSON.parse(existingFavorites)['chartTitle&Comparison'];\n            this.favoriteIndicators = indicators;\n            this.favoriteSymbols = favoriteSymbols;\n        }\n    }\n\n    setFavoriteIndicators(indicators: string[]) {\n        this.favoriteIndicators = indicators;\n        this.syncLocalStorage();\n    }\n\n    setFavoriteSymbols(symbols: string[]) {\n        this.favoriteSymbols = symbols;\n        this.syncLocalStorage();\n    }\n\n    removeFavoriteIndicator(indicator: string) {\n        this.favoriteIndicators = this.favoriteIndicators.filter(favIndicator => favIndicator !== indicator);\n        this.syncLocalStorage();\n    }\n\n    removeFavoriteSymbol(symbol: string) {\n        this.favoriteSymbols = this.favoriteSymbols.filter(favSymbol => favSymbol !== symbol);\n        this.syncLocalStorage();\n    }\n\n    syncLocalStorage() {\n        const favorites = {\n            indicators: this.favoriteIndicators,\n            'chartTitle&Comparison': this.favoriteSymbols,\n        };\n        localStorage.setItem('cq-favorites', JSON.stringify(favorites));\n    }\n}\n","import TradeStore from './Trading/trade-store';\nimport PositionsStore from './Positions/positions-store';\nimport MarketsStore from './Markets/markets-store';\nimport { TCoreStores } from '@deriv/stores/types';\nimport { TRootStore } from 'Types';\n\nexport default class ModulesStore {\n    positions: PositionsStore;\n    markets: MarketsStore;\n    trade: TradeStore;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    cashier: any;\n\n    constructor(root_store: TRootStore, core_store: TCoreStores) {\n        this.cashier = core_store.modules.cashier;\n        this.trade = new TradeStore({ root_store });\n        this.positions = new PositionsStore({ root_store });\n        this.markets = new MarketsStore({ root_store });\n    }\n}\n","import { TCoreStores } from '@deriv/stores/types';\nimport ModulesStore from './Modules';\n\nexport default class RootStore {\n    client: TCoreStores['client'];\n    common: TCoreStores['common'];\n    modules: ModulesStore;\n    ui: TCoreStores['ui'];\n    gtm: TCoreStores['gtm'];\n    notifications: TCoreStores['notifications'];\n    contract_replay: TCoreStores['contract_replay'];\n    contract_trade: TCoreStores['contract_trade'];\n    portfolio: TCoreStores['portfolio'];\n    chart_barrier_store: TCoreStores['chart_barrier_store'];\n    active_symbols: TCoreStores['active_symbols'];\n\n    constructor(core_store: TCoreStores) {\n        this.client = core_store.client;\n        this.common = core_store.common;\n        this.modules = new ModulesStore(this, core_store);\n        this.ui = core_store.ui;\n        this.gtm = core_store.gtm;\n        this.notifications = core_store.notifications;\n        this.contract_replay = core_store.contract_replay;\n        this.contract_trade = core_store.contract_trade;\n        this.portfolio = core_store.portfolio;\n        this.chart_barrier_store = core_store.chart_barrier_store;\n        this.active_symbols = core_store.active_symbols;\n    }\n}\n","import { configure } from 'mobx';\nimport { setWebsocket } from '@deriv/shared';\nimport ServerTime from '_common/base/server_time';\nimport { TCoreStores } from '@deriv/stores/types';\nimport type { TWebSocket } from 'Types';\nimport RootStore from '../Stores';\n\nconfigure({ enforceActions: 'observed' });\n\nlet root_store: TCoreStores;\n\nconst initStore = (core_store: TCoreStores, websocket: TWebSocket) => {\n    if (root_store) return root_store;\n\n    ServerTime.init(core_store.common);\n    setWebsocket(websocket);\n    root_store = new RootStore(core_store) as unknown as TCoreStores;\n\n    return root_store;\n};\n\nexport default initStore;\n","import { CONTRACT_TYPES, getSupportedContracts, getTotalProfit, isHighLow, isMultiplierContract } from '@deriv/shared';\nimport { TPortfolioPosition } from '@deriv/stores/types';\nimport { TClosedPosition } from 'AppV2/Containers/Positions/positions-content';\nimport { CONTRACT_LIST } from './trade-types-utils';\n\nexport const DEFAULT_DATE_FORMATTING_CONFIG = {\n    day: '2-digit',\n    month: 'short',\n    year: 'numeric',\n} as Record<string, string>;\n\nexport const TAB_NAME = {\n    OPEN: 'Open',\n    CLOSED: 'Closed',\n};\n\nexport const filterPositions = (positions: (TPortfolioPosition | TClosedPosition)[], filter: string[]) => {\n    if (!filter.length) return positions;\n    // Split contract type names with '/' (e.g. Rise/Fall)\n    const splittedFilter = filter.map(option => (option.includes('/') ? option.split('/') : option)).flat();\n\n    return positions.filter(({ contract_info }) => {\n        const config = getSupportedContracts(isHighLow({ shortcode: contract_info.shortcode }))[\n            contract_info.contract_type as keyof ReturnType<typeof getSupportedContracts>\n        ];\n        if (!config) return false;\n        return splittedFilter.includes('main_title' in config ? config.main_title : config.name);\n    });\n};\nconst contractTypesConfig = {\n    [CONTRACT_LIST.ACCUMULATORS]: [CONTRACT_TYPES.ACCUMULATOR],\n    [CONTRACT_LIST.VANILLAS]: [CONTRACT_TYPES.VANILLA.CALL, CONTRACT_TYPES.VANILLA.PUT],\n    [CONTRACT_LIST.TURBOS]: [CONTRACT_TYPES.TURBOS.LONG, CONTRACT_TYPES.TURBOS.SHORT],\n    [CONTRACT_LIST.MULTIPLIERS]: [CONTRACT_TYPES.MULTIPLIER.DOWN, CONTRACT_TYPES.MULTIPLIER.UP],\n    [CONTRACT_LIST.RISE_FALL]: [CONTRACT_TYPES.CALL, CONTRACT_TYPES.PUT, CONTRACT_TYPES.CALLE, CONTRACT_TYPES.PUTE],\n    [CONTRACT_LIST.HIGHER_LOWER]: [CONTRACT_TYPES.CALL, CONTRACT_TYPES.PUT],\n    [CONTRACT_LIST.TOUCH_NO_TOUCH]: [CONTRACT_TYPES.TOUCH.NO_TOUCH, CONTRACT_TYPES.TOUCH.ONE_TOUCH],\n    [CONTRACT_LIST.MATCHES_DIFFERS]: [CONTRACT_TYPES.MATCH_DIFF.DIFF, CONTRACT_TYPES.MATCH_DIFF.MATCH],\n    [CONTRACT_LIST.EVEN_ODD]: [CONTRACT_TYPES.EVEN_ODD.EVEN, CONTRACT_TYPES.EVEN_ODD.ODD],\n    [CONTRACT_LIST.OVER_UNDER]: [CONTRACT_TYPES.OVER_UNDER.OVER, CONTRACT_TYPES.OVER_UNDER.UNDER],\n};\n\nexport const getFilteredContractTypes = (filter: string[] = []) => {\n    if (!filter.length) return [];\n    const filteredContractTypes = filter\n        .map(option => contractTypesConfig[option as keyof typeof contractTypesConfig] ?? [])\n        .flat();\n    return [...new Set(filteredContractTypes)];\n};\n\nexport const getProfit = (\n    contract_info: TPortfolioPosition['contract_info'] | TClosedPosition['contract_info']\n): string | number => {\n    return (\n        (contract_info as TClosedPosition['contract_info']).profit_loss?.replaceAll(',', '') ??\n        (isMultiplierContract(contract_info.contract_type)\n            ? getTotalProfit(contract_info as TPortfolioPosition['contract_info'])\n            : (contract_info as TPortfolioPosition['contract_info']).profit)\n    );\n};\n\nexport const getTotalPositionsProfit = (positions: (TPortfolioPosition | TClosedPosition)[]) => {\n    return positions.reduce((sum, { contract_info }) => sum + Number(getProfit(contract_info)), 0);\n};\n\nexport const setPositionURLParams = (tab_name: string) => {\n    const searchParams = new URLSearchParams(window.location.search);\n    searchParams.set('tab_name', tab_name);\n    if (searchParams.toString()) {\n        const newQuery = `${window.location.pathname}?${searchParams.toString()}`;\n        window.history.replaceState({}, document.title, newQuery);\n    }\n};\n","import {\n    CONTRACT_TYPES,\n    isTimeValid,\n    isTouchContract,\n    isTurbosContract,\n    isVanillaContract,\n    shouldShowExpiration,\n    TRADE_TYPES,\n} from '@deriv/shared';\nimport { Localize, localize } from '@deriv/translations';\nimport { Moment } from 'moment';\nimport React from 'react';\nimport { createProposalRequestForContract, getProposalInfo } from 'Stores/Modules/Trading/Helpers/proposal';\nimport { TTradeStore } from 'Types';\n\nexport const DURATION_UNIT = {\n    DAYS: 'd',\n    TICKS: 't',\n    MINUTES: 'm',\n    HOURS: 'h',\n    SECONDS: 's',\n};\n\nexport const getTradeParams = (symbol?: string, has_cancellation?: boolean) => ({\n    [TRADE_TYPES.RISE_FALL]: {\n        duration: true,\n        stake: true,\n        allow_equals: true,\n    },\n    [TRADE_TYPES.RISE_FALL_EQUAL]: {\n        duration: true,\n        stake: true,\n        allow_equals: true,\n    },\n    [TRADE_TYPES.HIGH_LOW]: {\n        trade_type_tabs: true,\n        duration: true,\n        barrier: true,\n        stake: true,\n        payout: true,\n    },\n    [TRADE_TYPES.TOUCH]: {\n        trade_type_tabs: true,\n        duration: true,\n        barrier: true,\n        stake: true,\n        payout: true,\n    },\n    [TRADE_TYPES.MATCH_DIFF]: {\n        last_digit: true,\n        duration: true,\n        stake: true,\n    },\n    [TRADE_TYPES.EVEN_ODD]: {\n        duration: true,\n        stake: true,\n    },\n    [TRADE_TYPES.OVER_UNDER]: {\n        last_digit: true,\n        duration: true,\n        stake: true,\n    },\n    [TRADE_TYPES.ACCUMULATOR]: {\n        growth_rate: true,\n        stake: true,\n        take_profit: true,\n        accu_info_display: true,\n    },\n    [TRADE_TYPES.MULTIPLIER]: {\n        multiplier: true,\n        stake: true,\n        risk_management: true,\n        ...(has_cancellation ? { mult_info_display: true } : {}),\n        ...(shouldShowExpiration(symbol) ? { expiration: true } : {}),\n    },\n    [TRADE_TYPES.TURBOS.LONG]: {\n        trade_type_tabs: true,\n        duration: true,\n        payout_per_point: true,\n        stake: true,\n        take_profit: true,\n        barrier_info: true,\n    },\n    [TRADE_TYPES.TURBOS.SHORT]: {\n        trade_type_tabs: true,\n        duration: true,\n        payout_per_point: true,\n        stake: true,\n        take_profit: true,\n        barrier_info: true,\n    },\n    [TRADE_TYPES.VANILLA.CALL]: {\n        trade_type_tabs: true,\n        duration: true,\n        strike: true,\n        stake: true,\n        payout_per_point_info: true,\n    },\n    [TRADE_TYPES.VANILLA.PUT]: {\n        trade_type_tabs: true,\n        duration: true,\n        strike: true,\n        stake: true,\n        payout_per_point_info: true,\n    },\n});\n\nexport const isDigitContractWinning = (\n    contract_type: string | undefined,\n    selected_digit: number | null,\n    current_digit: number | null\n) => {\n    const win_conditions = {\n        [CONTRACT_TYPES.MATCH_DIFF.MATCH]: current_digit === selected_digit,\n        [CONTRACT_TYPES.MATCH_DIFF.DIFF]: current_digit !== selected_digit,\n        [CONTRACT_TYPES.OVER_UNDER.OVER]:\n            !!((current_digit || current_digit === 0) && (selected_digit || selected_digit === 0)) &&\n            current_digit > selected_digit,\n        [CONTRACT_TYPES.OVER_UNDER.UNDER]:\n            !!((current_digit || current_digit === 0) && (selected_digit || selected_digit === 0)) &&\n            current_digit < selected_digit,\n        [CONTRACT_TYPES.EVEN_ODD.ODD]: !!current_digit && Boolean(current_digit % 2),\n        [CONTRACT_TYPES.EVEN_ODD.EVEN]: (!!current_digit && !(current_digit % 2)) || current_digit === 0,\n    } as { [key: string]: boolean };\n    if (!contract_type || !win_conditions[contract_type]) return false;\n    return win_conditions[contract_type];\n};\n\nexport const focusAndOpenKeyboard = (focused_input?: HTMLInputElement | null, main_input?: HTMLInputElement | null) => {\n    if (main_input && focused_input) {\n        // Reveal a temporary input element and put focus on it\n        focused_input.style.display = 'block';\n        focused_input.focus({ preventScroll: true });\n\n        // The keyboard is open, so now adding a delayed focus on the target element and hide the temporary input element\n        return setTimeout(() => {\n            main_input.focus();\n            main_input.click();\n            focused_input.style.display = 'none';\n        }, 300);\n    }\n};\n\nexport const getTradeTypeTabsList = (contract_type = '') => {\n    const is_turbos = isTurbosContract(contract_type);\n    const is_vanilla = isVanillaContract(contract_type);\n    const is_high_low = contract_type === TRADE_TYPES.HIGH_LOW;\n    const is_touch = isTouchContract(contract_type);\n    const tab_list = [\n        {\n            label: 'Up',\n            value: TRADE_TYPES.TURBOS.LONG,\n            contract_type: CONTRACT_TYPES.TURBOS.LONG,\n            is_displayed: is_turbos,\n        },\n        {\n            label: 'Down',\n            value: TRADE_TYPES.TURBOS.SHORT,\n            contract_type: CONTRACT_TYPES.TURBOS.SHORT,\n            is_displayed: is_turbos,\n        },\n        {\n            label: 'Call',\n            value: TRADE_TYPES.VANILLA.CALL,\n            contract_type: CONTRACT_TYPES.VANILLA.CALL,\n            is_displayed: is_vanilla,\n        },\n        {\n            label: 'Put',\n            value: TRADE_TYPES.VANILLA.PUT,\n            contract_type: CONTRACT_TYPES.VANILLA.PUT,\n            is_displayed: is_vanilla,\n        },\n        { label: 'Higher', value: TRADE_TYPES.HIGH_LOW, contract_type: CONTRACT_TYPES.CALL, is_displayed: is_high_low },\n        { label: 'Lower', value: TRADE_TYPES.HIGH_LOW, contract_type: CONTRACT_TYPES.PUT, is_displayed: is_high_low },\n        {\n            label: 'Touch',\n            value: TRADE_TYPES.TOUCH,\n            contract_type: CONTRACT_TYPES.TOUCH.ONE_TOUCH,\n            is_displayed: is_touch,\n        },\n        {\n            label: 'No Touch',\n            value: TRADE_TYPES.TOUCH,\n            contract_type: CONTRACT_TYPES.TOUCH.NO_TOUCH,\n            is_displayed: is_touch,\n        },\n    ];\n    return tab_list.filter(({ is_displayed }) => is_displayed);\n};\n\nexport const isSmallScreen = () => window.innerHeight <= 640;\n\nexport const addUnit = ({\n    value,\n    unit = localize('min'),\n    should_add_space = true,\n}: {\n    value: string | number;\n    unit?: string;\n    should_add_space?: boolean;\n}) => `${typeof value === 'number' ? value : parseInt(value)}${should_add_space ? ' ' : ''}${unit}`;\n\nexport const getSnackBarText = ({\n    has_cancellation,\n    has_take_profit,\n    has_stop_loss,\n    switching_cancellation,\n    switching_tp_sl,\n}: {\n    has_cancellation?: boolean;\n    has_take_profit?: boolean;\n    has_stop_loss?: boolean;\n    switching_cancellation?: boolean;\n    switching_tp_sl?: boolean;\n}) => {\n    if (switching_cancellation && has_cancellation) {\n        if (has_take_profit && has_stop_loss) return <Localize i18n_default_text='TP and SL have been turned off.' />;\n        if (has_take_profit) return <Localize i18n_default_text='TP has been turned off.' />;\n        if (has_stop_loss) return <Localize i18n_default_text='SL has been turned off.' />;\n    }\n    if (switching_tp_sl && (has_take_profit || has_stop_loss) && has_cancellation)\n        return <Localize i18n_default_text='DC has been turned off.' />;\n};\n\nexport const getClosestTimeToCurrentGMT = (interval: number): string => {\n    const now = new Date();\n    now.setMinutes(now.getMinutes() + 5);\n\n    const options: Intl.DateTimeFormatOptions = {\n        hour: '2-digit',\n        minute: '2-digit',\n        hour12: false,\n        timeZone: 'UTC',\n    };\n    const formattedTime = new Intl.DateTimeFormat('en-GB', options).format(now);\n\n    const [hours, minutes] = formattedTime.split(':').map(Number);\n\n    const date = new Date();\n    date.setUTCHours(hours);\n    date.setUTCMinutes(minutes);\n\n    const roundedMinutes = Math.ceil(date.getUTCMinutes() / interval) * interval;\n\n    if (roundedMinutes >= 60) {\n        date.setUTCHours(date.getUTCHours() + 1);\n        date.setUTCMinutes(0);\n    } else {\n        date.setUTCMinutes(roundedMinutes);\n    }\n\n    const newHours = String(date.getUTCHours()).padStart(2, '0');\n    const newMinutes = String(date.getUTCMinutes()).padStart(2, '0');\n\n    return `${newHours}:${newMinutes}`;\n};\n\nexport const getOptionPerUnit = (\n    unit: string,\n    duration_min_max: Record<string, { min: number; max: number }>\n): { value: number; label: React.ReactNode }[][] => {\n    const generateOptions = (start: number, end: number, label: React.ReactNode) => {\n        return Array.from({ length: end - start + 1 }, (_, i) => ({\n            value: start + i,\n            label: (\n                <React.Fragment key={start + i}>\n                    {start + i} {label}\n                </React.Fragment>\n            ),\n        }));\n    };\n\n    const { intraday, tick, daily } = duration_min_max;\n    const unitConfig: Record<\n        string,\n        { start: number; end: number; label: React.ReactNode } | (() => { value: number; label: React.ReactNode }[][])\n    > = {\n        m: {\n            start: Math.max(1, intraday?.min / 60),\n            end: Math.min(59, intraday?.max / 60),\n            label: <Localize i18n_default_text='min' />,\n        },\n        s: {\n            start: Math.max(15, intraday?.min),\n            end: Math.min(59, intraday?.max),\n            label: <Localize i18n_default_text='sec' />,\n        },\n        d: {\n            start: Math.max(1, daily?.min / 86400),\n            end: Math.min(365, daily?.max / 86400),\n            label: <Localize i18n_default_text='days' />,\n        },\n        t: {\n            start: Math.max(1, tick?.min),\n            end: Math.min(10, tick?.max),\n            label: <Localize i18n_default_text='tick' />,\n        },\n    };\n\n    const config = unitConfig[unit];\n\n    if (typeof config === 'function') {\n        return config();\n    }\n\n    if (config) {\n        const { start, end, label } = config;\n        return [generateOptions(Math.ceil(start), Math.floor(end), label)];\n    }\n\n    return [[]];\n};\n\nexport const getSmallestDuration = (\n    obj: { [x: string]: { min: number; max: number } | { min: number } },\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    durationUnits: any[]\n) => {\n    const keysPriority = ['tick', 'intraday', 'daily'];\n    let smallestValueInSeconds = Infinity;\n    let smallestUnit: 's' | 'm' | 'h' | 'd' | null = null;\n\n    // eslint-disable-next-line no-restricted-syntax\n    for (const key of keysPriority) {\n        if (obj[key]) {\n            if (key === 'tick') {\n                const tickUnit = durationUnits.find((item: { value: string }) => item.value === 't');\n                if (tickUnit) {\n                    return { value: obj[key].min, unit: 't' };\n                }\n            }\n\n            if (obj[key].min < smallestValueInSeconds) {\n                smallestValueInSeconds = obj[key].min;\n\n                if (key === 'intraday') {\n                    if (smallestValueInSeconds >= 60 && smallestValueInSeconds < 3600) {\n                        smallestUnit = 'm';\n                    } else if (smallestValueInSeconds >= 3600 && smallestValueInSeconds < 86400) {\n                        smallestUnit = 'h';\n                    }\n                } else if (key === 'daily') {\n                    smallestUnit = 'd';\n                }\n            }\n        }\n    }\n\n    if (smallestUnit) {\n        const validUnit = durationUnits.find((item: { value: string; text: string }) => item.value === smallestUnit);\n        if (validUnit) {\n            let convertedValue;\n            switch (smallestUnit) {\n                case 'm':\n                    convertedValue = smallestValueInSeconds / 60;\n                    break;\n                case 'h':\n                    convertedValue = smallestValueInSeconds / 3600;\n                    break;\n                case 'd':\n                    convertedValue = smallestValueInSeconds / 86400;\n                    break;\n                default:\n                    convertedValue = 1;\n            }\n            return { value: convertedValue, unit: smallestUnit };\n        }\n    }\n\n    return null;\n};\n\nexport const getDatePickerStartDate = (\n    duration_units_list: { value: string }[],\n    server_time: Moment,\n    start_time: string | null,\n    duration_min_max: Record<string, { min: number; max: number }>\n) => {\n    const hasIntradayDurationUnit = (duration_units_list: { value: string }[]) => {\n        return duration_units_list.some((unit: { value: string }) => ['m', 'h'].indexOf(unit.value) !== -1);\n    };\n\n    const setMinTime = (dateObj: Date, time?: string) => {\n        const [hour, minute, second] = time ? time.split(':') : [0, 0, 0];\n        dateObj?.setHours(Number(hour));\n        dateObj?.setMinutes(Number(minute) || 0);\n        dateObj?.setSeconds(Number(second) || 0);\n        return dateObj;\n    };\n\n    const toDate = (value: string | number | Date | Moment): Date => {\n        if (!value) return new Date();\n\n        if (value instanceof Date && !isNaN(value.getTime())) {\n            return value;\n        }\n\n        if (typeof value === 'number') {\n            return new Date(value * 1000);\n        }\n\n        const parsedDate = new Date(value as Date);\n        if (isNaN(parsedDate.getTime())) {\n            const today = new Date();\n            const daysInMonth = new Date(today.getUTCFullYear(), today.getUTCMonth() + 1, 0).getDate();\n            const valueAsNumber = Date.parse(value as string) / (1000 * 60 * 60 * 24);\n            return valueAsNumber > daysInMonth\n                ? new Date(today.setUTCDate(today.getUTCDate() + Number(value)))\n                : new Date(value as Date);\n        }\n\n        return parsedDate;\n    };\n\n    const getMinDuration = (server_time: string | number | Date | Moment, duration_units_list: { value: string }[]) => {\n        const server_date = toDate(server_time);\n        return hasIntradayDurationUnit(duration_units_list)\n            ? new Date(server_date)\n            : new Date(server_date.getTime() + (duration_min_max?.daily?.min || 0) * 1000);\n    };\n\n    const getMomentContractStartDateTime = () => {\n        const minDurationDate = getMinDuration(server_time, duration_units_list);\n        const time = isTimeValid(start_time ?? '') ? start_time : (server_time?.toISOString().substr(11, 8) ?? '');\n        return setMinTime(minDurationDate, time ?? '');\n    };\n\n    const min_date = new Date(getMomentContractStartDateTime());\n    return min_date;\n};\n\nexport const getProposalRequestObject = ({\n    new_values = {},\n    should_subscribe = false,\n    trade_store,\n    trade_type,\n}: {\n    new_values: Record<string, unknown>;\n    should_subscribe?: boolean;\n    trade_store: TTradeStore;\n    trade_type: string;\n}) => {\n    const store = {\n        ...trade_store,\n        ...new_values,\n    };\n\n    const request = createProposalRequestForContract(\n        store as Parameters<typeof createProposalRequestForContract>[0],\n        trade_type\n    ) as Omit<ReturnType<typeof createProposalRequestForContract>, 'subscribe'> & {\n        subscribe?: number;\n        limit_order:\n            | {\n                  take_profit?: number;\n                  stop_loss?: number;\n              }\n            | undefined;\n    };\n\n    if (!should_subscribe) delete request.subscribe;\n\n    return request;\n};\n\nexport const getPayoutInfo = (proposal_info: ReturnType<typeof getProposalInfo>) => {\n    // getting current payout\n    const { has_error, message = '', payout = 0, error_field } = proposal_info ?? {};\n    const float_number_search_regex = /\\d+(\\.\\d+)?/g;\n    const is_error_matching = has_error && (error_field === 'amount' || error_field === 'stake');\n    const proposal_error_message = is_error_matching ? message : '';\n    /* TODO: stop using error text for getting the payout value, need API changes */\n    // Extracting the value of exceeded payout from error text\n    const error_payout = proposal_error_message\n        ? Number(proposal_error_message.match(float_number_search_regex)?.[2])\n        : 0;\n    const contract_payout = payout || error_payout;\n\n    // getting max allowed payout\n    const { payout: validation_payout } = (proposal_info?.validation_params || proposal_info?.validation_params) ?? {};\n    const { max } = validation_payout ?? {};\n    /* TODO: stop using error text for getting the max payout value, need API changes */\n    // Extracting the value of max payout from error text\n    const error_max_payout = is_error_matching && message ? Number(message.match(float_number_search_regex)?.[1]) : 0;\n    const max_payout = max || error_max_payout;\n\n    return { contract_payout, max_payout, error: proposal_error_message };\n};\n","import React from 'react';\nimport { Localize } from '@deriv/translations';\nimport { getAvailableContractTypes, getCategoriesSortedByKey } from 'Modules/Trading/Helpers/contract-type';\nimport {\n    getContractTypePosition,\n    getSupportedContracts,\n    TRADE_TYPES,\n    unsupported_contract_types_list,\n} from '@deriv/shared';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { getTradeTypeTabsList } from './trade-params-utils';\n\ntype TContractType = {\n    text?: string;\n    value: string;\n};\n\ntype TCategories = {\n    id: string;\n    title: string;\n    icon?: React.ReactNode;\n};\n\nconst getSortedIndex = (type: string) =>\n    getContractTypePosition(type as keyof ReturnType<typeof getSupportedContracts>) === 'bottom' ? 1 : 0;\n\nexport const CONTRACT_LIST = {\n    ACCUMULATORS: 'Accumulators',\n    VANILLAS: 'Vanillas',\n    TURBOS: 'Turbos',\n    MULTIPLIERS: 'Multipliers',\n    RISE_FALL: 'Rise/Fall',\n    HIGHER_LOWER: 'Higher/Lower',\n    TOUCH_NO_TOUCH: 'Touch/No Touch',\n    MATCHES_DIFFERS: 'Matches/Differs',\n    EVEN_ODD: 'Even/Odd',\n    OVER_UNDER: 'Over/Under',\n};\n\nexport const AVAILABLE_CONTRACTS = [\n    {\n        tradeType: <Localize i18n_default_text='Accumulators' />,\n        id: CONTRACT_LIST.ACCUMULATORS,\n        for: [TRADE_TYPES.ACCUMULATOR],\n    },\n    {\n        tradeType: <Localize i18n_default_text='Vanillas' />,\n        id: CONTRACT_LIST.VANILLAS,\n        for: [TRADE_TYPES.VANILLA.CALL, TRADE_TYPES.VANILLA.PUT],\n    },\n    {\n        tradeType: <Localize i18n_default_text='Turbos' />,\n        id: CONTRACT_LIST.TURBOS,\n        for: [TRADE_TYPES.TURBOS.LONG, TRADE_TYPES.TURBOS.SHORT],\n    },\n    {\n        tradeType: <Localize i18n_default_text='Multipliers' />,\n        id: CONTRACT_LIST.MULTIPLIERS,\n        for: [TRADE_TYPES.MULTIPLIER],\n    },\n    {\n        tradeType: <Localize i18n_default_text='Rise/Fall' />,\n        id: CONTRACT_LIST.RISE_FALL,\n        for: [TRADE_TYPES.RISE_FALL, TRADE_TYPES.RISE_FALL_EQUAL],\n    },\n    {\n        tradeType: <Localize i18n_default_text='Higher/Lower' />,\n        id: CONTRACT_LIST.HIGHER_LOWER,\n        for: [TRADE_TYPES.HIGH_LOW],\n    },\n    {\n        tradeType: <Localize i18n_default_text='Touch/No Touch' />,\n        id: CONTRACT_LIST.TOUCH_NO_TOUCH,\n        for: [TRADE_TYPES.TOUCH],\n    },\n    {\n        tradeType: <Localize i18n_default_text='Matches/Differs' />,\n        id: CONTRACT_LIST.MATCHES_DIFFERS,\n        for: [TRADE_TYPES.MATCH_DIFF],\n    },\n    { tradeType: <Localize i18n_default_text='Even/Odd' />, id: CONTRACT_LIST.EVEN_ODD, for: [TRADE_TYPES.EVEN_ODD] },\n    {\n        tradeType: <Localize i18n_default_text='Over/Under' />,\n        id: CONTRACT_LIST.OVER_UNDER,\n        for: [TRADE_TYPES.OVER_UNDER],\n    },\n];\n\nexport const getTradeTypesList = (contract_types_list: ReturnType<typeof useTraderStore>['contract_types_list']) => {\n    const available_trade_types = getAvailableContractTypes(\n        contract_types_list as unknown as Parameters<typeof getAvailableContractTypes>[0],\n        unsupported_contract_types_list\n    );\n    return Object.values(getCategoriesSortedByKey(available_trade_types))\n        .map(({ contract_types }) =>\n            contract_types[0].value.startsWith('vanilla')\n                ? contract_types.map(type => ({ ...type, text: 'Vanillas' }))\n                : contract_types\n        )\n        .flat()\n        .filter(\n            ({ value }) =>\n                ![TRADE_TYPES.VANILLA.PUT, TRADE_TYPES.TURBOS.SHORT, TRADE_TYPES.RISE_FALL_EQUAL].includes(value)\n        );\n};\n\n/* Gets the array of sorted contract types that are used to display purchased buttons and other info based on a selected trade type tab if applicable. */\nexport const getDisplayedContractTypes = (\n    trade_types: ReturnType<typeof useTraderStore>['trade_types'],\n    contract_type: string,\n    trade_type_tab: string\n) =>\n    Object.keys(trade_types)\n        .filter(type => !getTradeTypeTabsList(contract_type).length || type === trade_type_tab)\n        .sort((a, b) => getSortedIndex(a) - getSortedIndex(b));\n\nexport const sortCategoriesInTradeTypeOrder = (trade_types: TContractType[], categories: TCategories[]) => {\n    return trade_types\n        .map((item: { value: string }) => {\n            return categories.find(category => category.id === item.value);\n        })\n        .filter(item => item) as TCategories[];\n};\n","import classNames from 'classnames';\nimport React from 'react';\n\ntype TDigit = {\n    is_latest?: boolean;\n    is_lost?: boolean;\n    is_selected?: boolean;\n    is_won?: boolean;\n    percentage: number | null;\n    value: number;\n};\n\nconst Digit = ({ is_latest, is_lost, is_selected, is_won, percentage, value }: TDigit) => {\n    const display_percentage = percentage && !isNaN(percentage) ? parseFloat(percentage.toFixed(1)) : null;\n    return (\n        <React.Fragment>\n            <span\n                className={classNames('digits__digit-value', {\n                    'digits__digit-value--latest': is_latest,\n                    'digits__digit-value--selected': is_selected,\n                    'digits__digit-value--win': is_won && is_latest,\n                    'digits__digit-value--loss': is_lost && is_latest,\n                })}\n            >\n                <i\n                    className={classNames('digits__digit-display-value', {\n                        'digits__digit-display-value--no-stats': !display_percentage,\n                    })}\n                >\n                    {value}\n                </i>\n                {!!display_percentage && <i className='digits__digit-display-percentage'>{display_percentage}%</i>}\n            </span>\n        </React.Fragment>\n    );\n};\n\nexport default Digit;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Text } from '@deriv/components';\n\ntype TDigitSpot = {\n    current_spot?: string | null;\n    is_selected_winning?: boolean;\n    is_lost?: boolean;\n    is_won?: boolean;\n};\n\nconst DigitSpot = ({ current_spot, is_selected_winning, is_lost, is_won }: TDigitSpot) => (\n    <React.Fragment>\n        <Text\n            size='xs'\n            align='center'\n            weight='bold'\n            className='digits__digit-spot-value'\n            data-testid='dt_digits_digit_spot_value'\n        >\n            {current_spot?.slice(0, -1)}\n        </Text>\n        <span\n            className={classNames('digits__digit-spot-last', {\n                'digits__digit-spot-last--selected-win': is_selected_winning,\n                'digits__digit-spot-last--win': is_won,\n                'digits__digit-spot-last--loss': is_lost,\n            })}\n            data-testid='dt_digits_digit_spot_last'\n        >\n            {current_spot?.slice(-1)}\n        </span>\n    </React.Fragment>\n);\n\nexport default DigitSpot;\n","import classNames from 'classnames';\nimport React from 'react';\n\ntype TLastDigitStat = {\n    is_max: boolean | null;\n    is_min: boolean | null;\n    is_selected?: boolean;\n    percentage: number | null;\n};\n\nconst LastDigitStat = ({ is_max, is_min, is_selected, percentage }: TLastDigitStat) => {\n    // interpolate color opacity within 7.5 to 12.5 range\n    let opacity = ((percentage ?? 0) - 10) / 4;\n    opacity = Math.min(Math.max(opacity, -1), +1);\n    opacity = ((opacity + 1) / 2) * 0.85 + 0.15;\n    const w = 339.292;\n    let p = (20 * (percentage ?? 0) - 102) / 3 / 100;\n    p = Math.max(Math.min(p, 0.66), 0.06);\n\n    return (\n        <div\n            className={classNames('digits__pie-container', {\n                'digits__pie-container--selected': is_selected,\n            })}\n        >\n            <svg className='digits__pie-progress' width='120' height='120' viewBox='0 0 120 120'>\n                <circle\n                    className='progress__bg'\n                    cx='60'\n                    cy='60'\n                    r='54'\n                    fill='none'\n                    stroke='#E8EEFC'\n                    strokeWidth='12'\n                    data-testid='dt_progress_bg'\n                />\n                {percentage && (\n                    <circle\n                        className={classNames('progress__value', {\n                            'progress__value--is-max': is_max,\n                            'progress__value--is-min': is_min,\n                        })}\n                        cx='60'\n                        cy='60'\n                        r='54'\n                        fill='none'\n                        strokeOpacity={is_max || is_min ? 1 : opacity}\n                        strokeWidth='12'\n                        strokeDasharray={[w * p, w * (1 - p)].join(' ')}\n                        // strokeDashoffset={(w * (1 - (0 * 3.5 * percentage / 100)))}\n                        strokeDashoffset={w * ((p + 1) / 2)}\n                        data-testid='dt_progress_value'\n                    />\n                )}\n            </svg>\n        </div>\n    );\n};\n\nexport default LastDigitStat;\n","import classNames from 'classnames';\nimport { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { DesktopWrapper } from '@deriv/components';\nimport { isMobile } from '@deriv/shared';\nimport { Bounce } from 'App/Components/Animations';\nimport Digit from './digit';\nimport DigitSpot from './digit-spot';\nimport LastDigitStat from './last-digit-stat';\nimport { ProposalOpenContract } from '@deriv/api-types';\n\ntype TDigitDisplay = Pick<React.ComponentProps<typeof DigitSpot>, 'is_lost' | 'is_won'> &\n    Pick<React.ComponentProps<typeof Digit>, 'is_lost' | 'is_won'> &\n    Pick<React.ComponentProps<typeof LastDigitStat>, 'is_max' | 'is_min'> & {\n        barrier: number | null;\n        is_digit_contract?: boolean;\n        has_entry_spot: boolean;\n        onSelect: ((digit_value: number) => void) | null;\n        latest_digit: {\n            digit: number | null;\n            spot: string | null;\n        };\n        selected_digit?: number;\n        status: ProposalOpenContract['status'];\n        stats?: number | null;\n        value: number;\n        onLastDigitSpot?: (value: {\n            spot: TDigitDisplay['latest_digit']['spot'];\n            is_lost: TDigitDisplay['is_lost'];\n            is_selected_winning: boolean;\n            is_latest: boolean;\n            is_won: TDigitDisplay['is_won'];\n        }) => void;\n    };\nconst DigitDisplay = ({\n    barrier,\n    is_digit_contract,\n    has_entry_spot,\n    is_lost,\n    is_max,\n    is_min,\n    is_won,\n    onSelect,\n    latest_digit,\n    selected_digit,\n    status,\n    stats,\n    value,\n    onLastDigitSpot,\n}: TDigitDisplay) => {\n    const { digit, spot } = latest_digit;\n    const is_latest = value === digit;\n    const is_selected = value === barrier;\n    const is_selected_winning = digit === barrier;\n    const percentage = stats ? (stats * 100) / 1000 : null;\n\n    React.useEffect(() => {\n        if (onLastDigitSpot) {\n            onLastDigitSpot({ spot, is_lost, is_selected_winning, is_latest, is_won });\n        }\n    }, [latest_digit, spot, barrier, value, is_lost, is_selected_winning, is_latest, is_won, onLastDigitSpot]);\n\n    const is_digit_selectable = isMobile() && typeof onSelect === 'function' && !status;\n    const is_digit_selected = isMobile() && value === selected_digit && !status;\n    return (\n        <div\n            className={classNames('digits__digit', {\n                'digits__digit--latest': is_latest,\n                'digits__digit--win': is_won && is_latest,\n                'digits__digit--loss': is_lost && is_latest,\n                'digits__digit--is-selectable': is_digit_selectable,\n                'digits__digit--is-selected': is_digit_selected,\n            })}\n            onClick={() => {\n                if (!is_digit_selectable) return;\n                onSelect(value);\n            }}\n        >\n            <LastDigitStat is_min={is_min} is_max={is_max} is_selected={is_selected} percentage={percentage} />\n            <DesktopWrapper>\n                <Bounce\n                    is_visible={!!(is_digit_contract && is_latest && spot && status && has_entry_spot)}\n                    className='digits__digit-spot'\n                    keyname='digits__digit-spot'\n                >\n                    <DigitSpot\n                        current_spot={spot}\n                        is_lost={is_lost}\n                        is_selected_winning={is_selected_winning}\n                        is_won={is_won}\n                    />\n                </Bounce>\n            </DesktopWrapper>\n            <Digit\n                is_latest={is_latest}\n                is_lost={is_lost}\n                is_selected={is_selected}\n                is_won={is_won}\n                percentage={percentage}\n                value={value}\n            />\n        </div>\n    );\n};\n\nexport default observer(DigitDisplay);\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Icon } from '@deriv/components';\n\ntype TLastDigitPointer = {\n    is_lost?: boolean;\n    is_trade_page?: boolean;\n    is_won?: boolean;\n    position: {\n        left: number;\n        top: number;\n    };\n};\n\nconst LastDigitPointer = ({ is_lost, is_trade_page, is_won, position }: TLastDigitPointer) => (\n    <React.Fragment>\n        {!!position && (\n            <span\n                className='digits__pointer'\n                style={{ transform: `translate3d(calc(${position.left}px), ${position.top}px, 0px)` }}\n            >\n                <Icon\n                    icon='IcProfit'\n                    className={classNames('digits__icon', {\n                        'digits__icon--win': is_won && !is_trade_page,\n                        'digits__icon--loss': is_lost && !is_trade_page,\n                    })}\n                    color={is_won ? 'green' : 'red'}\n                    custom_color={!(is_won || is_lost) ? 'var(--brand-orange)' : undefined}\n                />\n            </span>\n        )}\n    </React.Fragment>\n);\n\nexport default LastDigitPointer;\n","import classNames from 'classnames';\nimport { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { isMobile, TRADE_TYPES } from '@deriv/shared';\nimport DigitDisplay from './digit-display';\nimport LastDigitPointer from './last-digit-pointer';\nimport { ProposalOpenContract, TicksStreamResponse } from '@deriv/api-types';\n\ntype TLastDigitPrediction = Pick<\n    React.ComponentProps<typeof DigitDisplay>,\n    'barrier' | 'is_digit_contract' | 'has_entry_spot' | 'onLastDigitSpot'\n> & {\n    contract_type?: string;\n    digits?: number[];\n    digits_info: { [key: string]: { digit: number; spot: string } };\n    dimension: number;\n    is_ended?: boolean;\n    is_trade_page?: boolean;\n    onDigitChange?: (event: { target: { name: string; value: number } }) => void;\n    selected_digit?: number;\n    status?: ProposalOpenContract['status'];\n    tick?: TicksStreamResponse['tick'];\n    trade_type?: string;\n};\nconst display_array = Array.from(Array(10).keys()); // digits array [0 - 9]\n\nconst LastDigitPrediction = ({\n    barrier,\n    contract_type,\n    digits,\n    digits_info,\n    dimension,\n    is_digit_contract,\n    has_entry_spot,\n    is_ended,\n    is_trade_page,\n    onDigitChange,\n    onLastDigitSpot,\n    selected_digit,\n    status,\n    tick,\n    trade_type,\n}: TLastDigitPrediction) => {\n    const [digit_offset] = React.useState<Record<number, Record<'left' | 'top', number>>>({\n        0: { left: 6, top: 0 },\n        1: { left: 6 + dimension * 1, top: 0 },\n        2: { left: 6 + dimension * 2, top: 0 },\n        3: { left: 6 + dimension * 3, top: 0 },\n        4: { left: 6 + dimension * 4, top: 0 },\n        5: { left: 6 + dimension * 5, top: 0 },\n        6: { left: 6 + dimension * 6, top: 0 },\n        7: { left: 6 + dimension * 7, top: 0 },\n        8: { left: 6 + dimension * 8, top: 0 },\n        9: { left: 6 + dimension * 9, top: 0 },\n    });\n\n    const [digit_offset_mobile] = React.useState<Record<number, Record<'left' | 'top', number>>>({\n        0: { left: 6, top: -60 },\n        1: { left: 6 + dimension * 1, top: -60 },\n        2: { left: 6 + dimension * 2, top: -60 },\n        3: { left: 6 + dimension * 3, top: -60 },\n        4: { left: 6 + dimension * 4, top: -60 },\n        5: { left: 6 + dimension * 0, top: 8 },\n        6: { left: 6 + dimension * 1, top: 8 },\n        7: { left: 6 + dimension * 2, top: 8 },\n        8: { left: 6 + dimension * 3, top: 8 },\n        9: { left: 6 + dimension * 4, top: 8 },\n    });\n\n    const handleSelect = (digit_value: number) => {\n        if (!isSelectableDigitType()) return;\n        if (digit_value !== selected_digit && typeof onDigitChange === 'function') {\n            onDigitChange({ target: { name: 'last_digit', value: digit_value } });\n        }\n    };\n\n    const getBarrier = (num: number | null): number | null => {\n        const barrier_map: {\n            [key: string]: (val: number | null) => boolean;\n        } = {\n            DIGITMATCH: (val: number | null) => val === barrier,\n            DIGITDIFF: (val: number | null) => val !== barrier,\n            DIGITOVER: (val: number | null) => !!((val || val === 0) && (barrier || barrier === 0)) && val > barrier,\n            DIGITUNDER: (val: number | null) => !!((val || val === 0) && (barrier || barrier === 0)) && val < barrier,\n            DIGITODD: (val: number | null) => !!val && Boolean(val % 2),\n            DIGITEVEN: (val: number | null) => (!!val && !(val % 2)) || val === 0,\n        };\n        if (!contract_type || !barrier_map[contract_type]) return null;\n        return barrier_map[contract_type](num) ? num : null;\n    };\n\n    const getOffset = () => (isMobile() ? digit_offset_mobile : digit_offset);\n\n    const isSelectableDigitType = () => (isMobile() ? trade_type !== TRADE_TYPES.EVEN_ODD : false);\n    const digits_array = Object.keys(digits_info)\n        .sort((a, b) => +a - +b)\n        .map(spot_time => digits_info[+spot_time]);\n    const last_contract_digit = digits_array.slice(-1)[0] || {};\n\n    // 'won' or 'lost' status exists after contract expiry\n    const is_won = is_ended && status === 'won' && is_digit_contract;\n    // need to explicitly have is_lost condition here\n    // because negating is_won would always be true,\n    // but we only need is_lost condition only once we have the 'won' or 'lost' status\n    const is_lost = is_ended && status === 'lost' && is_digit_contract;\n\n    const min = digits ? Math.min(...digits) : null;\n    const max = digits ? Math.max(...digits) : null;\n\n    // latest last digit refers to digit and spot values from latest price\n    // latest contract digit refers to digit and spot values from last digit contract in contracts array\n    const latest_tick_pip_size = tick ? +tick.pip_size : null;\n    const latest_tick_quote_price =\n        tick?.quote && latest_tick_pip_size ? tick.quote.toFixed(latest_tick_pip_size) : null;\n    const latest_tick_digit = latest_tick_quote_price ? +(latest_tick_quote_price.split('').pop() || '') : null;\n    const position = tick ? getOffset()[latest_tick_digit ?? -1] : getOffset()[last_contract_digit.digit];\n    const latest_digit = !(is_won || is_lost)\n        ? { digit: latest_tick_digit, spot: latest_tick_quote_price }\n        : last_contract_digit;\n    return (\n        <div\n            className={classNames('digits', {\n                'digits--trade': is_trade_page,\n            })}\n        >\n            {display_array.map(idx => (\n                <DigitDisplay\n                    barrier={getBarrier(idx)}\n                    has_entry_spot={has_entry_spot}\n                    is_digit_contract={is_digit_contract}\n                    is_lost={is_lost}\n                    is_won={is_won}\n                    key={idx}\n                    is_max={digits ? digits[idx] === max : null}\n                    is_min={digits ? digits[idx] === min : null}\n                    stats={digits ? digits[idx] : null}\n                    status={status}\n                    latest_digit={is_trade_page ? latest_digit : last_contract_digit}\n                    value={idx}\n                    onLastDigitSpot={onLastDigitSpot}\n                    onSelect={isSelectableDigitType() ? handleSelect : null}\n                    selected_digit={isSelectableDigitType() ? selected_digit : undefined}\n                />\n            ))}\n            <LastDigitPointer is_lost={is_lost} is_trade_page={is_trade_page} is_won={is_won} position={position} />\n        </div>\n    );\n};\n\nexport default observer(LastDigitPrediction);\n","import classNames from 'classnames';\nimport React from 'react';\nimport { toJS } from 'mobx';\nimport { Popover, Text } from '@deriv/components';\nimport { TickSpotData } from '@deriv/api-types';\nimport { getMarketNamesMap, useIsMounted, isContractElapsed, TContractStore } from '@deriv/shared';\nimport { Localize } from '@deriv/translations';\nimport { Bounce, SlideIn } from 'App/Components/Animations';\nimport { DigitSpot, LastDigitPrediction } from '../LastDigitPrediction';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { useDevice } from '@deriv-com/ui';\n\ntype TTraderStore = ReturnType<typeof useTraderStore>;\ntype TOnChangeStatus = { status: string | null | undefined; current_tick: number | null };\ntype TOnLastDigitSpot = {\n    spot: string | null;\n    is_lost?: boolean;\n    is_selected_winning: boolean;\n    is_latest: boolean;\n    is_won?: boolean;\n};\ntype TDigitsWrapper = TDigits & {\n    onChangeStatus?: (params: TOnChangeStatus) => void;\n    onLastDigitSpot?: (params: TOnLastDigitSpot) => void;\n};\ntype TDigits = Pick<TContractStore, 'contract_info' | 'digits_info'> & {\n    digits_array?: number[];\n    display_status?: TContractStore['display_status'];\n    is_digit_contract?: TContractStore['is_digit_contract'];\n    is_ended?: TContractStore['is_ended'];\n    is_trade_page?: boolean;\n    is_mobile: boolean;\n    onDigitChange?: TTraderStore['onChange'];\n    selected_digit?: TTraderStore['last_digit'];\n    trade_type?: TTraderStore['contract_type'];\n    tick?: TickSpotData | null;\n    underlying?: TTraderStore['symbol'];\n};\ntype TTickStream = NonNullable<TContractStore['contract_info']['tick_stream']>[number];\ntype TTickData =\n    | TickSpotData\n    | null\n    | undefined\n    | {\n          ask: TTickStream['tick'];\n          bid: TTickStream['tick'];\n          current_tick: number;\n          epoch: TTickStream['epoch'];\n          quote: TTickStream['tick'];\n          pip_size?: number;\n      };\n\nconst DigitsWrapper = ({\n    contract_info,\n    digits_array,\n    digits_info,\n    display_status,\n    is_digit_contract,\n    is_ended,\n    is_trade_page,\n    is_mobile,\n    onDigitChange,\n    selected_digit,\n    trade_type,\n    onChangeStatus,\n    ...props\n}: TDigitsWrapper) => {\n    const has_contract = contract_info.date_start;\n    let tick: TTickData = props.tick;\n\n    const is_tick_ready = is_trade_page ? !!tick : true;\n    const is_contract_elapsed = is_trade_page ? isContractElapsed(contract_info, tick) : false;\n    const status = !is_contract_elapsed && is_tick_ready ? display_status : null;\n\n    // tick from contract_info.tick_stream has totally different\n    // format from the tick from tick_history api call.\n    if (has_contract && !is_contract_elapsed) {\n        tick = null;\n        const tick_stream = contract_info.tick_stream;\n        if (tick_stream?.length) {\n            const t = toJS(tick_stream.slice(-1)[0]);\n            tick = {\n                ask: t.tick,\n                bid: t.tick,\n                epoch: t.epoch,\n                pip_size: t.tick_display_value?.split('.')[1].length,\n                quote: t.tick,\n                current_tick: tick_stream.length,\n            };\n        }\n    }\n\n    React.useEffect(() => {\n        if (onChangeStatus) {\n            onChangeStatus({ status, current_tick: tick && 'current_tick' in tick ? tick.current_tick : null });\n        }\n    }, [tick, is_trade_page, display_status, onChangeStatus, status]);\n\n    return (\n        <LastDigitPrediction\n            // dimension of a single digit widget including margin/padding (number)\n            // i.e - 40px + 6px left and 6px right padding/margin = 52\n            dimension={is_mobile ? 64 : 52}\n            has_entry_spot={!!contract_info.entry_tick}\n            barrier={!is_contract_elapsed && is_tick_ready ? Number(contract_info.barrier) : null}\n            contract_type={!is_contract_elapsed && is_tick_ready ? contract_info.contract_type : ''}\n            digits={digits_array}\n            digits_info={!is_contract_elapsed && is_tick_ready ? digits_info : {}}\n            is_digit_contract={is_digit_contract}\n            is_ended={is_ended}\n            is_trade_page={is_trade_page}\n            status={status as React.ComponentProps<typeof LastDigitPrediction>['status']}\n            tick={tick as React.ComponentProps<typeof LastDigitPrediction>['tick']}\n            trade_type={trade_type}\n            onDigitChange={onDigitChange}\n            selected_digit={selected_digit}\n            onLastDigitSpot={props.onLastDigitSpot}\n        />\n    );\n};\n\nconst Digits = React.memo((props: TDigits) => {\n    const [status, setStatus] = React.useState<string | null>();\n    const [current_tick, setCurrentTick] = React.useState<number | null>();\n    const [spot, setSpot] = React.useState<string | null>();\n    const [is_selected_winning, setIsSelectedWinning] = React.useState<boolean>();\n    const [is_won, setIsWon] = React.useState<boolean>();\n    const [is_lost, setIsLost] = React.useState<boolean>();\n    const isMounted = useIsMounted();\n    const { isMobile } = useDevice();\n\n    const { contract_info, digits_array, is_digit_contract, is_trade_page, underlying } = props;\n\n    const onChangeStatus = (params: TOnChangeStatus) => {\n        setStatus(params.status);\n        setCurrentTick(params.current_tick);\n    };\n\n    const onLastDigitSpot = (params: TOnLastDigitSpot) => {\n        setSpot(params.spot);\n        setIsLost(params.is_lost);\n        setIsSelectedWinning(params.is_selected_winning);\n        setIsWon(params.is_won);\n    };\n\n    const getPopoverMessage = () => {\n        const underlying_name = is_trade_page ? underlying : contract_info.underlying;\n        return (\n            <Localize\n                i18n_default_text='Last digit stats for latest 1000 ticks for {{underlying_name}}'\n                values={{\n                    underlying_name:\n                        getMarketNamesMap()[\n                            underlying_name?.toUpperCase() as keyof ReturnType<typeof getMarketNamesMap>\n                        ],\n                }}\n            />\n        );\n    };\n\n    if (isMobile) {\n        return (\n            <div className='digits__container'>\n                <Bounce\n                    is_visible={!!(is_digit_contract && status && spot && !!contract_info.entry_tick)}\n                    className={classNames('digits__digit-spot', {\n                        'digits__digit-spot--is-trading': is_trade_page,\n                    })}\n                    keyname='digits__digit-spot'\n                >\n                    {is_trade_page && (\n                        <Text size='xs' align='center' className='digits__digit-spot-value'>\n                            <Localize i18n_default_text='Tick {{current_tick}} - ' values={{ current_tick }} />\n                        </Text>\n                    )}\n                    <DigitSpot\n                        current_spot={spot}\n                        is_lost={is_lost}\n                        is_selected_winning={is_selected_winning}\n                        is_won={is_won}\n                    />\n                </Bounce>\n                <DigitsWrapper {...props} onChangeStatus={onChangeStatus} onLastDigitSpot={onLastDigitSpot} />\n            </div>\n        );\n    }\n\n    return (\n        <SlideIn\n            is_visible={(digits_array || is_digit_contract) && isMounted()}\n            className='digits__container'\n            keyname='digits'\n            type='bottom'\n        >\n            {is_trade_page && (\n                <div className='digits__tooltip-container'>\n                    <Popover\n                        alignment='top'\n                        classNameBubble='digits__tooltip-bubble'\n                        icon='info'\n                        id='dt_last_digits_info_tooltip'\n                        margin={4}\n                        message={getPopoverMessage()}\n                        zIndex='100'\n                    />\n                </div>\n            )}\n            <DigitsWrapper {...props} />\n        </SlideIn>\n    );\n});\n\nDigits.displayName = 'Digits';\n\nexport default Digits;\n","import Digits from './digits';\n\nexport default Digits;\n","import React from 'react';\nimport { PageError } from '@deriv/components';\nimport { routes, getUrlBase } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\n\nconst Page404 = () => (\n    <PageError\n        header={localize('We couldn’t find that page')}\n        messages={[\n            localize('You may have followed a broken link, or the page has moved to a new address.'),\n            localize('Error code: {{error_code}} page not found', { error_code: 404 }),\n        ]}\n        redirect_urls={[routes.trade]}\n        redirect_labels={[localize('Return to trade')]}\n        classNameImage='page-404__image'\n        image_url={getUrlBase('/public/images/common/404.png')}\n    />\n);\n\nexport default Page404;\n","import Page404 from './Components/Page404';\n\nexport default Page404;\n","import React from 'react';\nimport { Text } from '@deriv/components';\nimport { addComma, formatMoney, getCurrencyDisplayCode, isMobile } from '@deriv/shared';\nimport { FastMarker } from 'Modules/SmartChart';\nimport classNames from 'classnames';\nimport { TRef } from './accumulators-profit-loss-tooltip';\nimport { ProposalOpenContract } from '@deriv/api-types';\n\ntype TAccumulatorsProfitLossText = Pick<ProposalOpenContract, 'current_spot' | 'current_spot_time' | 'currency'> & {\n    className?: string;\n    profit_value: number;\n    should_show_profit_percentage?: boolean;\n};\n\nconst ACTIONS = {\n    INC: 'increment',\n    DEC: 'decrement',\n    ADD10: 'add10',\n} as const;\n\nconst AccumulatorsProfitLossText = ({\n    current_spot,\n    current_spot_time,\n    currency,\n    className = 'sc-accumulators-profit-loss-text',\n    profit_value,\n    should_show_profit_percentage,\n}: TAccumulatorsProfitLossText) => {\n    const [is_fading_in, setIsFadingIn] = React.useState(false);\n    const [is_sliding, setIsSliding] = React.useState(false);\n    const formatted_profit = should_show_profit_percentage\n        ? addComma(profit_value, 2)\n        : formatMoney(currency ?? '', profit_value, true, 0, 0);\n    const prev_profit = React.useRef(formatted_profit);\n    const prev_profit_tenth = +prev_profit.current?.split('.')[1][0];\n    const [current_profit_tenth, setCurrentProfitTenth] = React.useState(prev_profit_tenth);\n    const profit_tenth_ref = React.useRef(0);\n    const interval_id_ref = React.useRef<ReturnType<typeof setInterval>>();\n    const fading_in_timeout_id = React.useRef<ReturnType<typeof setTimeout>>();\n    const sliding_timeout_id = React.useRef<ReturnType<typeof setTimeout>>();\n    const profit_portions_array = formatted_profit.split('.');\n    const profit_whole_number = profit_portions_array[0];\n    const profit_tenth = +profit_portions_array[1][0];\n    const profit_hundredths = +profit_portions_array[1].slice(1);\n    const won = profit_value >= 0;\n    const sign = profit_value > 0 ? '+' : '';\n\n    const runThroughTenthDigit = (\n        action: typeof ACTIONS[keyof typeof ACTIONS],\n        interval_ms: number,\n        start: number,\n        end: number\n    ) => {\n        clearInterval(interval_id_ref.current);\n        const interval_id = setInterval(() => {\n            if (action === ACTIONS.INC && profit_tenth_ref.current < end) {\n                profit_tenth_ref.current = (profit_tenth_ref.current + 1) % 10;\n            } else if (action === ACTIONS.DEC && profit_tenth_ref.current > end) {\n                profit_tenth_ref.current = Math.abs(profit_tenth_ref.current - 1) % 10;\n            } else if (action === ACTIONS.ADD10 && profit_tenth_ref.current < start + 10) {\n                profit_tenth_ref.current += 1;\n            } else if (\n                action === ACTIONS.ADD10 ? profit_tenth_ref.current === start + 10 : profit_tenth_ref.current === end\n            ) {\n                clearInterval(interval_id);\n            }\n            setCurrentProfitTenth(profit_tenth_ref.current % 10);\n        }, interval_ms);\n        interval_id_ref.current = interval_id;\n    };\n\n    React.useEffect(() => {\n        if (profit_value) {\n            setIsFadingIn(true);\n            setIsSliding(true);\n            fading_in_timeout_id.current = setTimeout(() => {\n                setIsFadingIn(false);\n            }, 600);\n            sliding_timeout_id.current = setTimeout(() => {\n                setIsSliding(false);\n            }, 300);\n        }\n        if (profit_value !== 0) {\n            const updateTenth = (start: number, end: number) => {\n                const delta = Math.abs(end - start);\n                profit_tenth_ref.current = start;\n                if (start < end) {\n                    runThroughTenthDigit(ACTIONS.INC, 300 / delta, start, end);\n                } else if (start > end) {\n                    runThroughTenthDigit(ACTIONS.DEC, 300 / delta, start, end);\n                } else {\n                    runThroughTenthDigit(ACTIONS.ADD10, 30, start, end);\n                }\n            };\n            updateTenth(prev_profit_tenth, profit_tenth);\n        }\n        return () => {\n            clearTimeout(fading_in_timeout_id.current);\n            clearTimeout(sliding_timeout_id.current);\n            clearInterval(interval_id_ref.current);\n        };\n    }, [profit_value, prev_profit_tenth, profit_tenth]);\n\n    const onRef = (ref: TRef | null): void => {\n        if (ref) {\n            if (!current_spot) {\n                // this call will hide the marker:\n                ref.setPosition({ epoch: null, price: null });\n            }\n            if (current_spot && current_spot_time) {\n                ref.setPosition({\n                    epoch: +current_spot_time,\n                    price: +current_spot,\n                });\n            }\n        }\n    };\n\n    return (\n        <FastMarker markerRef={onRef} className={classNames(className, won ? 'won' : 'lost')} overlap_y_axis={false}>\n            <Text\n                weight='bold'\n                size={isMobile() ? 's' : 'sm'}\n                color={won ? 'profit-success' : 'loss-danger'}\n                className={classNames(`${className}__profit`, `${className}__profit--${won ? 'won' : 'loss'}`, {\n                    [`${className}__profit--fading-in`]: is_fading_in,\n                })}\n                data-testid='dt_accumulator_profit_text'\n            >\n                {`${sign}${profit_whole_number}.`}\n                <div className={is_sliding ? `${className}__sliding-tenth` : ''}>{current_profit_tenth}</div>\n                {`${profit_hundredths}`}\n            </Text>\n            <Text size={isMobile() ? 'xxxs' : 'xxs'} as='div' className={`${className}__currency`}>\n                {should_show_profit_percentage ? '%' : getCurrencyDisplayCode(currency)}\n            </Text>\n        </FastMarker>\n    );\n};\n\nexport default React.memo(AccumulatorsProfitLossText);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { CSSTransition } from 'react-transition-group';\nimport { Money, Text } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport AccumulatorsProfitLossText from './accumulators-profit-loss-text';\nimport { FastMarker } from 'Modules/SmartChart';\nimport { getDecimalPlaces } from '@deriv/shared';\nimport { useStore } from '@deriv/stores';\n\ntype TContractInfo = ReturnType<typeof useStore>['portfolio']['all_positions'][number]['contract_info'];\n\ntype TAccumulatorsProfitLossTooltip = {\n    alignment?: string;\n    className?: string;\n    should_show_profit_text?: boolean;\n    is_mobile?: boolean;\n} & TContractInfo;\n\nexport type TRef = {\n    setPosition: (position: { epoch: number | null; price: number | null }) => void;\n};\n\nconst AccumulatorsProfitLossTooltip = ({\n    alignment = 'right',\n    className = 'sc-accumulators-profit-loss-tooltip',\n    current_spot,\n    current_spot_time,\n    currency,\n    exit_tick,\n    exit_tick_time,\n    high_barrier,\n    is_sold,\n    profit,\n    profit_percentage,\n    should_show_profit_text,\n    is_mobile,\n}: TAccumulatorsProfitLossTooltip) => {\n    const [is_tooltip_open, setIsTooltipOpen] = React.useState(false);\n    const won = Number(profit) >= 0;\n    const tooltip_timeout = React.useRef<ReturnType<typeof setTimeout>>();\n    const should_show_profit_percentage = getDecimalPlaces(currency) > 2 && !!profit_percentage;\n\n    React.useEffect(() => {\n        return () => {\n            clearTimeout(tooltip_timeout.current);\n        };\n    }, []);\n\n    React.useEffect(() => {\n        if (is_sold) {\n            setIsTooltipOpen(true);\n            tooltip_timeout.current = onCloseDelayed(3000);\n        }\n    }, [is_sold]);\n\n    const onCloseDelayed = (duration: number) =>\n        setTimeout(() => {\n            setIsTooltipOpen(false);\n        }, duration);\n\n    const onHoverOrTapHandler = () => {\n        clearTimeout(tooltip_timeout.current);\n        tooltip_timeout.current = onCloseDelayed(1500);\n    };\n\n    const opposite_arrow_position = React.useMemo(() => {\n        const horizontal = ['left', 'right'];\n        return horizontal.includes(alignment)\n            ? horizontal.find(el => el !== alignment)\n            : ['top', 'bottom'].find(el => el !== alignment);\n    }, [alignment]);\n\n    const onRef = (ref: TRef | null): void => {\n        if (ref) {\n            if (!exit_tick) {\n                // this call will hide the marker:\n                ref.setPosition({ epoch: null, price: null });\n            }\n            if (exit_tick_time && exit_tick) {\n                ref.setPosition({\n                    epoch: +exit_tick_time,\n                    price: +exit_tick,\n                });\n            }\n        }\n    };\n\n    if (typeof profit !== 'number') return null;\n    if (!is_sold && current_spot_time && high_barrier && should_show_profit_text)\n        return (\n            <AccumulatorsProfitLossText\n                currency={currency}\n                current_spot={current_spot}\n                current_spot_time={current_spot_time}\n                profit_value={should_show_profit_percentage ? profit_percentage : profit}\n                should_show_profit_percentage={should_show_profit_percentage}\n            />\n        );\n\n    return is_sold && exit_tick_time ? (\n        <FastMarker markerRef={onRef} className={classNames(className, won ? 'won' : 'lost')}>\n            <span\n                className={`${className}__spot-circle`}\n                onMouseEnter={() => setIsTooltipOpen(true)}\n                onMouseLeave={onHoverOrTapHandler}\n                onTouchStart={() => setIsTooltipOpen(true)}\n                onTouchEnd={onHoverOrTapHandler}\n                data-testid='dt_accumulator_tooltip_spot'\n            />\n            <CSSTransition\n                in={is_tooltip_open}\n                timeout={{\n                    exit: 500,\n                }}\n                unmountOnExit\n                classNames={`${className}__content`}\n            >\n                <div className={classNames(`${className}__content`, `arrow-${opposite_arrow_position}`)}>\n                    <Text size={is_mobile ? 'xxxxs' : 'xxs'} className={`${className}__text`}>\n                        {localize('Total profit/loss:')}\n                    </Text>\n                    <Text size={is_mobile ? 'xxxs' : 'xs'} className={`${className}__text`} weight='bold'>\n                        <Money amount={profit} currency={currency} has_sign show_currency />\n                    </Text>\n                </div>\n            </CSSTransition>\n        </FastMarker>\n    ) : null;\n};\n\nexport default React.memo(AccumulatorsProfitLossTooltip);\n","import { filterByContractType } from 'App/Components/Elements/PositionsDrawer/helpers/positions-helper';\nimport React from 'react';\nimport { useStore } from '@deriv/stores';\nimport AccumulatorsProfitLossTooltip from './accumulators-profit-loss-tooltip';\nimport ChartMarker from './marker';\nimport { TRADE_TYPES } from '@deriv/shared';\n\ntype TPortfolioStore = ReturnType<typeof useStore>['portfolio'];\n\ntype TAccumulatorsChartElements = {\n    all_positions: TPortfolioStore['all_positions'];\n    current_spot?: number;\n    current_spot_time?: number;\n    has_crossed_accu_barriers: boolean;\n    should_show_profit_text: React.ComponentProps<typeof AccumulatorsProfitLossTooltip>['should_show_profit_text'];\n    symbol: string;\n    is_mobile?: boolean;\n};\n\nconst AccumulatorsChartElements = ({\n    all_positions,\n    current_spot,\n    current_spot_time,\n    has_crossed_accu_barriers,\n    should_show_profit_text,\n    symbol,\n    is_mobile,\n}: TAccumulatorsChartElements) => {\n    const accumulators_positions = all_positions.filter(\n        ({ contract_info }) =>\n            contract_info &&\n            symbol === contract_info.underlying &&\n            filterByContractType(contract_info, TRADE_TYPES.ACCUMULATOR)\n    );\n\n    return (\n        <React.Fragment>\n            {!!accumulators_positions.length &&\n                accumulators_positions.map(({ contract_info }) => (\n                    <AccumulatorsProfitLossTooltip\n                        key={contract_info.contract_id}\n                        {...contract_info}\n                        should_show_profit_text={should_show_profit_text}\n                        is_mobile={is_mobile}\n                    />\n                ))}\n            {has_crossed_accu_barriers && !!current_spot_time && !!current_spot && (\n                <ChartMarker\n                    marker_config={{\n                        ContentComponent: 'div',\n                        x: current_spot_time,\n                        y: current_spot,\n                    }}\n                    marker_content_props={{ className: 'sc-current-spot-emphasizer' }}\n                />\n            )}\n        </React.Fragment>\n    );\n};\n\nexport default React.memo(AccumulatorsChartElements);\n","import { toJS } from 'mobx';\nimport React, { useMemo } from 'react';\nimport { FastMarker } from 'Modules/SmartChart';\n\ntype TContentConfig = {\n    className?: string;\n    label?: string;\n    line_style?: string;\n    spot_className?: string;\n};\n\nexport type TMarkerContentConfig = TContentConfig & {\n    align_label?: string;\n    is_value_hidden?: boolean;\n    marker_config?: {\n        [key: string]: {\n            type: string;\n            marker_config: {\n                ContentComponent: React.ComponentType<TMarkerContentConfig> | string;\n                className?: string;\n            };\n            content_config: TContentConfig;\n        };\n    };\n    spot_epoch?: string;\n    spot_count?: number;\n    spot_profit?: string;\n    spot_value?: string;\n    status?: string;\n};\n\ntype TChartMarker = {\n    marker_config: {\n        ContentComponent: React.ComponentType<TMarkerContentConfig> | string;\n        className?: string;\n        x: string | number;\n        y: string | number | null;\n    };\n    marker_content_props: TMarkerContentConfig;\n    is_positioned_behind?: boolean;\n    is_positioned_before?: boolean;\n};\ntype TRef = {\n    setPosition: (position: { epoch: number | null; price: number | null }) => void;\n    div: HTMLDivElement;\n};\n\nconst ChartMarker = ({\n    marker_config,\n    marker_content_props,\n    is_positioned_behind = false,\n    is_positioned_before = false,\n}: TChartMarker) => {\n    const { ContentComponent, ...marker_props } = marker_config;\n\n    // TODO:\n    //  - rename x to epoch\n    //  - rename y to price\n    const onRef = (ref?: TRef) => {\n        if (ref) {\n            // NOTE: null price means vertical line.\n            if (!marker_props.y) {\n                const margin = 24; // height of line marker icon\n\n                ref.div.style.height = `calc(100% - ${margin}px)`;\n            } else {\n                ref.div.style.zIndex = '1';\n            }\n            if (is_positioned_behind) ref.div.style.zIndex = '-1';\n            if (is_positioned_before) ref.div.style.zIndex = '102';\n            ref.setPosition({\n                epoch: +marker_props.x,\n                price: Number(marker_props.y),\n            });\n        }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const Component = useMemo(() => ContentComponent, []);\n    return (\n        <FastMarker markerRef={onRef}>\n            <Component {...toJS(marker_content_props)} />\n        </FastMarker>\n    );\n};\n\nexport default ChartMarker;\n","import React from 'react';\n\nconst BottomWidgets = ({ Widget }: { Widget: React.ReactNode }) => <div className='bottom-widgets'>{Widget}</div>;\n\nexport default BottomWidgets;\n","import React from 'react';\nimport { ChartMode, DrawTools, Share, StudyLegend, Views, ToolbarWidget } from 'Modules/SmartChart';\nimport { useDevice } from '@deriv-com/ui';\nimport { isDesktopOs, isTabletOs } from '@deriv/shared';\n\ntype TToolbarWidgetsProps = {\n    position?: string;\n    updateChartType: (type: string) => void;\n    updateGranularity: (granularity: number) => void;\n};\n\nconst ToolbarWidgets = ({ position, updateChartType, updateGranularity }: TToolbarWidgetsProps) => {\n    const { isMobile } = useDevice();\n    const is_real_desktop_device = isDesktopOs() && !isTabletOs; // in a tablet simulator on desktop, isDesktopOs returns true\n\n    return (\n        <ToolbarWidget position={position || (isMobile ? 'bottom' : null)}>\n            <ChartMode portalNodeId='modal_root' onChartType={updateChartType} onGranularity={updateGranularity} />\n            {is_real_desktop_device && !isMobile && (\n                <StudyLegend portalNodeId='modal_root' searchInputClassName='data-hj-whitelist' />\n            )}\n            {!isMobile && (\n                <Views\n                    portalNodeId='modal_root'\n                    searchInputClassName='data-hj-whitelist'\n                    onChartType={updateChartType}\n                    onGranularity={updateGranularity}\n                />\n            )}\n            {is_real_desktop_device && !isMobile && <DrawTools portalNodeId='modal_root' />}\n            {is_real_desktop_device && !isMobile && <Share portalNodeId='modal_root' />}\n        </ToolbarWidget>\n    );\n};\n\nexport default React.memo(ToolbarWidgets);\n","import React from 'react';\nimport { observer, useStore } from '@deriv/stores';\nimport { isAccumulatorContract, isDigitContract, isEnded } from '@deriv/shared';\nimport { Localize } from '@deriv/translations';\nimport { Text } from '@deriv/components';\n\nconst RecentTradeInfo = observer(() => {\n    const { contract_trade } = useStore();\n    const { granularity, filtered_contracts } = contract_trade;\n\n    const latest_tick_contract = filtered_contracts[filtered_contracts.length - 1];\n\n    if (\n        !latest_tick_contract?.contract_info.tick_stream ||\n        isAccumulatorContract(latest_tick_contract.contract_info.contract_type)\n    )\n        return null;\n\n    const is_ended = isEnded(latest_tick_contract.contract_info);\n    if (is_ended || granularity !== 0) return null;\n\n    const { contract_type, tick_stream, tick_count } = latest_tick_contract.contract_info;\n    const current_tick = isDigitContract(contract_type) ? tick_stream.length : Math.max(tick_stream.length - 1, 0);\n    return (\n        <Text weight='bold' className='recent-trade-info'>\n            <Localize\n                i18n_default_text='Tick {{current_tick}}/{{tick_count}}'\n                values={{\n                    current_tick,\n                    tick_count,\n                }}\n            />\n        </Text>\n    );\n});\n\nexport default RecentTradeInfo;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ChartTitle } from 'Modules/SmartChart';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport RecentTradeInfo from './recent-trade-info';\n\ntype TTopWidgets = {\n    InfoBox?: React.ReactNode;\n    is_digits_widget_active?: boolean;\n    is_mobile?: boolean;\n    is_title_enabled?: boolean;\n    onSymbolChange?: ReturnType<typeof useTraderStore>['onChange'];\n    open?: boolean;\n    open_market?: {\n        category?: string;\n        subcategory?: string;\n    } | null;\n    theme?: string;\n    y_axis_width?: number;\n};\n\nconst TopWidgets = ({\n    InfoBox,\n    is_mobile,\n    is_title_enabled = true,\n    onSymbolChange,\n    theme,\n    open_market,\n    open,\n    is_digits_widget_active,\n}: TTopWidgets) => {\n    const ChartTitleLocal = (\n        <ChartTitle\n            open_market={open_market}\n            open={open}\n            enabled={is_title_enabled}\n            onChange={onSymbolChange}\n            searchInputClassName='data-hj-whitelist'\n            isNestedList={is_mobile}\n            portalNodeId={is_mobile ? 'deriv_app' : undefined}\n        />\n    );\n\n    const portal = ReactDOM.createPortal(\n        <div className={`smartcharts-${theme}`}>\n            <div className='top-widgets-portal'>\n                {ChartTitleLocal}\n                {!is_digits_widget_active && <RecentTradeInfo />}\n            </div>\n        </div>,\n        document.getElementById('app_contents') as Element | DocumentFragment\n    );\n\n    return (\n        <React.Fragment>\n            {InfoBox}\n            {is_mobile ? portal : ChartTitleLocal}\n        </React.Fragment>\n    );\n};\n\nexport default TopWidgets;\n","import React from 'react';\nimport { getUrlBase, moduleLoader } from '@deriv/shared';\n\nlet module;\n\nconst init = () => {\n    module = moduleLoader(() => {\n        return import(/* webpackChunkName: \"smart_chart\" */ '@deriv/deriv-charts');\n    });\n\n    module.then(({ setSmartChartsPublicPath }) => {\n        setSmartChartsPublicPath(getUrlBase('/js/smartcharts/'));\n    });\n};\n\n// React.Lazy expects a default export for the component\n// SmartChart library exports many components\nconst load = component_name => () => {\n    if (!module) {\n        init();\n    }\n    return module.then(module => {\n        return { default: module[component_name] };\n    });\n};\n\nexport const SmartChart = React.lazy(load('SmartChart'));\nexport const ChartTitle = React.lazy(load('ChartTitle'));\n\nexport const ChartSize = React.lazy(load('ChartSize'));\nexport const ChartMode = React.lazy(load('ChartMode'));\nexport const DrawTools = React.lazy(load('DrawTools'));\nexport const Share = React.lazy(load('Share'));\nexport const StudyLegend = React.lazy(load('StudyLegend'));\nexport const Views = React.lazy(load('Views'));\nexport const ToolbarWidget = React.lazy(load('ToolbarWidget'));\n\nexport const FastMarker = React.lazy(load('FastMarker'));\nexport const RawMarker = React.lazy(load('RawMarker'));\n","import React from 'react';\nimport { localize } from '@deriv/translations';\nimport { ActiveSymbols } from '@deriv/api-types';\nimport { TContractType, TContractCategory, TList } from '../Components/Form/ContractType/types';\nimport { unsupported_contract_types_list } from '@deriv/shared';\n\ntype TContractTypesList = {\n    [key: string]: {\n        name: string;\n        categories: DeepRequired<TContractType[]>;\n    };\n};\n\ntype TItem = {\n    value: string;\n};\n\nexport const isMajorPairsSymbol = (checked_symbol: string, active_symbols: ActiveSymbols) =>\n    active_symbols.some(({ submarket, symbol }) => /major_pairs/i.test(submarket) && checked_symbol === symbol);\n\nexport const contract_category_icon = {\n    [localize('Ups & Downs')]: 'IcUpsDowns',\n    [localize('Highs & Lows')]: 'IcHighsLows',\n    [localize('Ins & Outs')]: 'IcInsOuts',\n    [localize('Look Backs')]: 'IcLookbacks',\n    [localize('Digits')]: 'IcDigits',\n    [localize('Multipliers')]: 'IcMultiplier',\n    [localize('Accumulators')]: 'IcCatAccumulator',\n} as const;\n\nexport const ordered_trade_categories = [\n    'Accumulators',\n    'Vanillas',\n    'Turbos',\n    'Multipliers',\n    'Ups & Downs',\n    'Highs & Lows',\n    'Digits',\n];\n\nexport const getContractTypeCategoryIcons = () =>\n    ({\n        All: 'IcCatAll',\n        Accumulators: 'IcCatAccumulator',\n        Options: 'IcCatOptions',\n        Multipliers: 'IcCatMultiplier',\n        Turbos: 'IcCatTurbos',\n    } as const);\n\n/**\n * Returns a list of contracts in the following format:\n * {\n *      label: '', // contract category label\n *      contract_types: [], // list of contract types\n *      icon: '', // contract categoty icon\n * }\n * @param {object} contract_types_list  - list of all contracts\n * @param {array}  unsupported_list - list of unsupported contract types\n */\n\nexport const getAvailableContractTypes = (\n    contract_types_list: TContractTypesList,\n    unsupported_list: typeof unsupported_contract_types_list\n) => {\n    return Object.keys(contract_types_list)\n        .map(key => {\n            const contract_types = contract_types_list[key].categories;\n            const contract_name = contract_types_list[key].name;\n            const available_contract_types = contract_types.filter(type =>\n                type.value &&\n                // TODO: remove this check once all contract types are supported\n                !unsupported_list.includes(type.value as typeof unsupported_contract_types_list[number])\n                    ? type\n                    : undefined\n            );\n\n            if (available_contract_types.length) {\n                return {\n                    key,\n                    label: contract_name,\n                    contract_types: available_contract_types,\n                    icon: contract_category_icon[contract_name],\n                    component:\n                        contract_name === localize('Accumulators') ? (\n                            <span className='dc-vertical-tab__header--new'>{localize('NEW!')}</span>\n                        ) : null,\n                };\n            }\n            return undefined;\n        })\n        .filter(Boolean) as {\n        key: string;\n        label: string;\n        contract_types: TContractType[];\n        icon:\n            | 'IcUpsDowns'\n            | 'IcHighsLows'\n            | 'IcInsOuts'\n            | 'IcLookbacks'\n            | 'IcDigits'\n            | 'IcMultiplier'\n            | 'IcCatAccumulator';\n        component: JSX.Element | null;\n    }[];\n};\n\n/**\n * Returns a filtered list\n * @param {object} contract_types_list  - list of all contracts\n * @param {array}  filtered_items_array - list of filtered contract category names and/or contract types names\n */\n/*export const getFilteredList = (contract_types_list, filtered_items_array: Array<string>) => {\n    return Object.keys(contract_types_list)\n        .map(key => {\n            const { label, contract_types, icon } = contract_types_list[key];\n\n            const filtered_by_contract_types = contract_types.filter(c =>\n                filtered_items_array.includes(c.text.toLowerCase())\n            );\n\n            const filtered_by_contract_category = filtered_items_array.includes(label.toLowerCase());\n\n            if (filtered_by_contract_types.length) {\n                return {\n                    label,\n                    contract_types: filtered_by_contract_types,\n                    icon,\n                };\n            } else if (filtered_by_contract_category) {\n                return {\n                    label,\n                    contract_types,\n                    icon,\n                };\n            }\n            return undefined;\n        })\n        .filter(Boolean);\n};*/\n\n// const flatten = (arr: any) => [].concat(...arr);\n\n/**\n * Flatten list object into an array of contract category label and contract types names\n * @param {object} list\n */\n// export const getContractsList = (list: any) =>\n//     flatten(\n//         Object.keys(list).map(\n//             k => [\n//                 list[k].label.toLowerCase(), // contract category names\n//                 ...list[k].contract_types.map((c: any) => c.text.toLowerCase()),\n//             ] // contract types names\n//         )\n//     );\n\nexport const findContractCategory = (list: Partial<TList[]>, item: TItem) =>\n    list?.find(list_item => list_item?.contract_types?.some(i => i.value.includes(item.value))) ||\n    ({} as TContractCategory);\n\nexport const getContractCategoryKey = (list: TList[], item: TItem) => findContractCategory(list, item)?.key;\n\nexport const getContractTypes = (list: TList[], item: TItem) => findContractCategory(list, item)?.contract_types;\n\nexport const getCategoriesSortedByKey = (list: TContractCategory[] = []) =>\n    [...list].sort((a, b) => ordered_trade_categories.indexOf(a.key) - ordered_trade_categories.indexOf(b.key));\n","import { CONTRACT_TYPES, TRADE_TYPES } from '@deriv/shared';\n\nconst digitCategoriesMap = [TRADE_TYPES.EVEN_ODD, TRADE_TYPES.MATCH_DIFF, TRADE_TYPES.OVER_UNDER] as const;\nconst digitTypesMap = [\n    CONTRACT_TYPES.MATCH_DIFF.DIFF,\n    CONTRACT_TYPES.MATCH_DIFF.MATCH,\n    CONTRACT_TYPES.OVER_UNDER.OVER,\n    CONTRACT_TYPES.OVER_UNDER.UNDER,\n    CONTRACT_TYPES.EVEN_ODD.EVEN,\n    CONTRACT_TYPES.EVEN_ODD.ODD,\n] as const;\n\nexport const isDigitTradeType = (trade_type = '') => digitCategoriesMap.some(item => item === trade_type);\nexport const isDigitContractType = (contract_type: string) => digitTypesMap.some(item => item === contract_type);\n","import {\n    WS,\n    getPropertyValue,\n    getSortedTradeTypes,\n    cloneObject,\n    isTimeValid,\n    minDate,\n    toMoment,\n    getUnitMap,\n    buildBarriersConfig,\n    buildDurationConfig,\n    hasIntradayDurationUnit,\n    buildForwardStartingConfig,\n    unsupported_contract_types_list,\n    getCleanedUpCategories,\n    getContractCategoriesConfig,\n    getContractTypesConfig,\n    getContractSubtype,\n    getLocalizedBasis,\n    TTradeTypesCategories,\n    TRADE_TYPES,\n    isDtraderV2MobileEnabled,\n    isDtraderV2DesktopEnabled,\n} from '@deriv/shared';\nimport ServerTime from '_common/base/server_time';\nimport { localize } from '@deriv/translations';\nimport { isSessionAvailable } from './start-date';\nimport { ContractsFor, ContractsForSymbolResponse, TradingTimes, TradingTimesResponse } from '@deriv/api-types';\nimport { TConfig, TTradeStore } from 'Types';\n\ntype TBarriers = Record<\n    keyof TTradeStore['duration_min_max'],\n    {\n        barrier?: string;\n        high_barrier?: string;\n        low_barrier?: string;\n    }\n> & {\n    count: number;\n};\n\ntype TNonAvailableContractsList = Record<'contract_category' | 'contract_display_name' | 'contract_type', string>[];\ntype TTextValueStrings = {\n    text: string;\n    value: string;\n};\ntype TTimes = {\n    open: string[];\n    close: string[];\n};\ntype TEvents =\n    | {\n          dates: string;\n          descrip: string;\n      }[]\n    | [];\n\nexport const ContractType = (() => {\n    type TContractValues = ReturnType<typeof getComponents> &\n        ReturnType<typeof getBasis> &\n        ReturnType<typeof getTradeTypes> &\n        ReturnType<typeof getStartDates> &\n        ReturnType<typeof getStartType> &\n        ReturnType<typeof getBarriers> &\n        ReturnType<typeof getDurationUnit> &\n        ReturnType<typeof getDurationUnitsList> &\n        ReturnType<typeof getDurationMinMax> &\n        ReturnType<typeof getAccumulatorRange> &\n        ReturnType<typeof getMultiplierRange> &\n        ReturnType<typeof getCancellation> &\n        ReturnType<typeof getExpiryType> &\n        ReturnType<typeof getEqualProps>;\n\n    let available_contract_types: ReturnType<typeof getContractTypesConfig> = {};\n    let available_categories: TTradeTypesCategories = {};\n    let contract_types: ReturnType<typeof getContractTypesConfig>;\n    let non_available_categories: TTradeTypesCategories = {};\n    const trading_events: { [key: string]: Record<string, TEvents | undefined> } = {};\n    const trading_times: { [key: string]: Record<string, TTimes> } = {};\n    let has_only_forward_starting_contracts = false;\n\n    const buildContractTypesConfig = (symbol: string): Promise<void> =>\n        WS.contractsFor(symbol).then((r: Required<ContractsForSymbolResponse>) => {\n            const has_contracts = getPropertyValue(r, ['contracts_for']);\n            has_only_forward_starting_contracts =\n                has_contracts && !r.contracts_for.available.find(contract => contract.start_type !== 'forward');\n            if (!has_contracts || has_only_forward_starting_contracts) return;\n            const contract_categories = getContractCategoriesConfig();\n            contract_types = getContractTypesConfig(symbol);\n            available_contract_types = {};\n            available_categories = cloneObject(contract_categories); // To preserve the order (will clean the extra items later in this function)\n            r.contracts_for.available.forEach(contract => {\n                const type = Object.keys(contract_types).find(\n                    key =>\n                        contract_types[key].trade_types.indexOf(contract.contract_type) !== -1 &&\n                        (typeof contract_types[key].barrier_count === 'undefined' ||\n                            Number(contract_types[key].barrier_count) === contract.barriers) // To distinguish betweeen Rise/Fall & Higher/Lower\n                );\n\n                if (!type) return; // ignore unsupported contract types\n\n                if (!available_contract_types[type]) {\n                    // extend contract_categories to include what is needed to create the contract list\n                    const sub_cats =\n                        available_categories[\n                            Object.keys(available_categories).find(\n                                key => available_categories[key].categories.indexOf(type) !== -1\n                            ) ?? ''\n                        ].categories;\n\n                    if (!sub_cats) return;\n\n                    sub_cats[(sub_cats as string[]).indexOf(type)] = { value: type, text: contract_types[type].title };\n\n                    // populate available contract types\n                    available_contract_types[type] = cloneObject(contract_types[type]);\n                }\n                const config: TConfig = available_contract_types[type].config || {};\n\n                // set config values\n                config.has_spot = config.has_spot || contract.start_type === 'spot';\n                config.durations = config.hide_duration ? undefined : buildDurationConfig(contract, config.durations);\n                config.trade_types = buildTradeTypesConfig(contract, config.trade_types);\n                config.barriers = buildBarriersConfig(contract, config.barriers);\n                config.barrier_category = contract.barrier_category as TConfig['barrier_category'];\n                config.barrier_choices = contract.barrier_choices as TConfig['barrier_choices'];\n                config.forward_starting_dates = buildForwardStartingConfig(contract, config.forward_starting_dates);\n                config.growth_rate_range = contract.growth_rate_range as TConfig['growth_rate_range'];\n                config.multiplier_range = contract.multiplier_range as TConfig['multiplier_range'];\n                config.cancellation_range = contract.cancellation_range as TConfig['cancellation_range'];\n\n                available_contract_types[type].config = config;\n            });\n            available_categories = getCleanedUpCategories(available_categories);\n\n            non_available_categories = {};\n            const mutable_contracts_config = cloneObject(contract_categories);\n            const getCategories = (key = ''): string[] => mutable_contracts_config[key]?.categories ?? [];\n            const non_available_contracts = r.contracts_for.non_available as TNonAvailableContractsList;\n\n            if (non_available_contracts) {\n                non_available_contracts.forEach(({ contract_type }) => {\n                    const type =\n                        Object.keys(contract_types).find(key =>\n                            contract_types[key].trade_types.includes(contract_type)\n                        ) ?? '';\n                    const key = Object.keys(mutable_contracts_config).find(key => getCategories(key).includes(type));\n                    const categories: Array<string | TTextValueStrings> = getCategories(key);\n                    const title = contract_types[type]?.title;\n                    const is_available = !!available_categories[key as keyof TTradeTypesCategories]?.categories?.find(\n                        el => (el as TTextValueStrings).text === title\n                    );\n                    if (categories.includes(type) && !is_available) {\n                        categories[categories.indexOf(type)] = { value: type, text: title };\n                    }\n                    if (key) {\n                        non_available_categories[key] = mutable_contracts_config[key];\n                    }\n                });\n            }\n            non_available_categories = getCleanedUpCategories(non_available_categories);\n        });\n\n    const buildTradeTypesConfig = (\n        contract: ContractsFor['available'][number],\n        trade_types: { [key: string]: string } = {}\n    ) => {\n        trade_types[contract.contract_type] = contract.contract_display ?? '';\n        return trade_types;\n    };\n\n    const getArrayDefaultValue = <T>(arr_new_values: Array<T>, value: T): T =>\n        arr_new_values.indexOf(value) !== -1 ? value : arr_new_values[0];\n\n    const getContractValues = (store: TTradeStore): TContractValues | Record<string, never> => {\n        const {\n            contract_expiry_type,\n            contract_type,\n            basis,\n            duration_unit,\n            expiry_type,\n            multiplier,\n            start_date,\n            cancellation_duration,\n            short_barriers,\n            long_barriers,\n            strike_price_choices,\n            v2_params_initial_values,\n            root_store,\n        } = store;\n\n        if (!contract_type) return {};\n\n        let stored_barriers_data: TTradeStore['short_barriers' | 'long_barriers' | 'strike_price_choices'];\n        switch (getContractSubtype(contract_type)) {\n            case 'Short':\n                stored_barriers_data = short_barriers;\n                break;\n            case 'Long':\n                stored_barriers_data = long_barriers;\n                break;\n            case 'Call':\n            case 'Put':\n                stored_barriers_data =\n                    v2_params_initial_values?.strike &&\n                    (isDtraderV2MobileEnabled(root_store?.ui.is_mobile) ||\n                        isDtraderV2DesktopEnabled(root_store?.ui.is_desktop))\n                        ? ({\n                              ...strike_price_choices,\n                              barrier: v2_params_initial_values.strike,\n                          } as TTradeStore['strike_price_choices'])\n                        : strike_price_choices;\n                break;\n            default:\n                stored_barriers_data = {};\n        }\n\n        const form_components = getComponents(contract_type);\n        const obj_basis = getBasis(contract_type, basis);\n        const obj_trade_types = getTradeTypes(contract_type);\n        const obj_start_dates = getStartDates(contract_type, start_date);\n        const obj_start_type = getStartType(obj_start_dates.start_date);\n        const obj_barrier = getBarriers(contract_type, contract_expiry_type, stored_barriers_data?.barrier);\n        const obj_duration_unit = getDurationUnit(duration_unit, contract_type, obj_start_type.contract_start_type);\n\n        const obj_duration_units_list = getDurationUnitsList(contract_type, obj_start_type.contract_start_type);\n        const obj_duration_units_min_max = getDurationMinMax(contract_type, obj_start_type.contract_start_type);\n        const obj_accumulator_range_list = getAccumulatorRange(contract_type);\n        const obj_barrier_choices = getBarrierChoices(contract_type, stored_barriers_data?.barrier_choices);\n        const obj_multiplier_range_list = getMultiplierRange(contract_type, multiplier);\n        const obj_cancellation = getCancellation(contract_type, cancellation_duration);\n        const obj_expiry_type = getExpiryType(obj_duration_units_list.duration_units_list, expiry_type);\n        const obj_equal = getEqualProps(contract_type);\n\n        return {\n            ...form_components,\n            ...obj_basis,\n            ...obj_trade_types,\n            ...obj_start_dates,\n            ...obj_start_type,\n            ...obj_barrier,\n            ...obj_duration_unit,\n            ...obj_duration_units_list,\n            ...obj_duration_units_min_max,\n            ...obj_expiry_type,\n            ...obj_accumulator_range_list,\n            ...obj_barrier_choices,\n            ...obj_multiplier_range_list,\n            ...obj_cancellation,\n            ...obj_equal,\n        };\n    };\n\n    const getContractType = (list: TTradeTypesCategories, contractType: string) => {\n        const filteredList = Object.keys(list || {})\n            .reduce<string[]>((k, l) => [...k, ...(list[l].categories as TTextValueStrings[]).map(ct => ct.value)], [])\n            .filter(\n                type =>\n                    !unsupported_contract_types_list.includes(type as (typeof unsupported_contract_types_list)[number])\n            );\n        const sortedList = getSortedTradeTypes(filteredList);\n\n        return {\n            contract_type: getArrayDefaultValue(sortedList, contractType),\n        };\n    };\n\n    const getComponents = (c_type: string) => {\n        if (!contract_types) return {};\n        const check = ['duration', 'amount', ...(contract_types[c_type]?.components ?? [])].filter(\n            component =>\n                !(\n                    component === 'duration' &&\n                    contract_types[c_type].config &&\n                    contract_types[c_type].config?.hide_duration\n                )\n        );\n        return (\n            contract_types && {\n                form_components: check,\n            }\n        );\n    };\n\n    const getDurationUnitsList = (contract_type: string, contract_start_type: string) => {\n        return {\n            duration_units_list:\n                (getPropertyValue(available_contract_types, [\n                    contract_type,\n                    'config',\n                    'durations',\n                    'units_display',\n                    contract_start_type,\n                ]) as TTextValueStrings[]) || [],\n        };\n    };\n\n    const getDurationUnit = (duration_unit: string, contract_type: string, contract_start_type: string) => {\n        const duration_units =\n            (getPropertyValue(available_contract_types, [\n                contract_type,\n                'config',\n                'durations',\n                'units_display',\n                contract_start_type,\n            ]) as TTextValueStrings[]) || [];\n        const arr_units: string[] = [];\n        duration_units.forEach(obj => {\n            arr_units.push(obj.value);\n        });\n\n        return {\n            duration_unit: getArrayDefaultValue(arr_units, duration_unit),\n        };\n    };\n\n    const getDurationMinMax = (contract_type: string, contract_start_type: string, contract_expiry_type?: string) => {\n        let duration_min_max: TTradeStore['duration_min_max'] =\n            getPropertyValue(available_contract_types, [\n                contract_type,\n                'config',\n                'durations',\n                'min_max',\n                contract_start_type,\n            ]) || {};\n\n        if (contract_expiry_type) {\n            duration_min_max =\n                'contract_expiry_type' in duration_min_max\n                    ? (duration_min_max as unknown as { [key: string]: TTradeStore['duration_min_max'] })[\n                          contract_expiry_type\n                      ]\n                    : {};\n        }\n\n        return { duration_min_max };\n    };\n\n    const getFullContractTypes = () => available_contract_types;\n\n    const getStartType = (start_date: number) => ({\n        // Number(0) refers to 'now'\n        contract_start_type: start_date === Number(0) ? 'spot' : 'forward',\n    });\n\n    const getStartDates = (contract_type: string, current_start_date: number) => {\n        const config: TConfig = getPropertyValue(available_contract_types, [contract_type, 'config']);\n        const start_dates_list = [];\n\n        if (config?.has_spot) {\n            // Number(0) refers to 'now'\n            start_dates_list.push({ text: localize('Now'), value: Number(0) });\n        }\n        if (config?.forward_starting_dates) {\n            start_dates_list.push(...config.forward_starting_dates);\n        }\n\n        const start_date = start_dates_list.find(item => item.value === current_start_date)\n            ? current_start_date\n            : start_dates_list[0]?.value;\n\n        return { start_date, start_dates_list };\n    };\n\n    const getSessions = (contract_type: string, start_date: number) => {\n        const config: TConfig = getPropertyValue(available_contract_types, [contract_type, 'config']) || {};\n        const sessions = config.forward_starting_dates?.find(option => option.value === start_date)?.sessions;\n        return { sessions };\n    };\n\n    const hours = [...Array(24).keys()].map(a => `0${a}`.slice(-2));\n    const minutes = [...Array(12).keys()].map(a => `0${a * 5}`.slice(-2));\n\n    const getValidTime = (\n        sessions: ReturnType<typeof getSessions>['sessions'],\n        compare_moment: moment.Moment,\n        start_moment?: moment.Moment\n    ) => {\n        if (sessions && !isSessionAvailable(sessions, compare_moment)) {\n            // first see if changing the minute brings it to the right session\n            compare_moment.minute(\n                Number(\n                    minutes.find(m => isSessionAvailable(sessions, compare_moment.minute(+m))) ||\n                        compare_moment.format('mm')\n                )\n            );\n            // if not, also change the hour\n            if (!isSessionAvailable(sessions, compare_moment)) {\n                compare_moment.minute(0);\n                compare_moment.hour(\n                    Number(\n                        hours.find(h => isSessionAvailable(sessions, compare_moment.hour(+h), start_moment, true)) ||\n                            compare_moment.format('HH')\n                    )\n                );\n                compare_moment.minute(\n                    Number(\n                        minutes.find(m => isSessionAvailable(sessions, compare_moment.minute(+m))) ||\n                            compare_moment.format('mm')\n                    )\n                );\n            }\n        }\n        return compare_moment.format('HH:mm');\n    };\n\n    const buildMoment = (date: string | number | null, time?: string | null) => {\n        const [hour, minute] = isTimeValid(time ?? '') ? (time?.split(':') ?? []) : [0, 0];\n        return toMoment(date || ServerTime.get())\n            .hour(+hour)\n            .minute(+minute);\n    };\n\n    const getStartTime = (\n        sessions: ReturnType<typeof getSessions>['sessions'],\n        start_date: number,\n        start_time?: string | null\n    ) => ({\n        start_time: start_date ? getValidTime(sessions, buildMoment(start_date, start_time)) : null,\n    });\n\n    const getTradingEvents = async (date: string, underlying: string | null = null) => {\n        if (!date) {\n            return [];\n        }\n        if (!(date in trading_events)) {\n            const trading_times_response: TradingTimesResponse = await WS.tradingTimes(date);\n            const trading_times_data = trading_times_response.trading_times as TradingTimes;\n            if (getPropertyValue(trading_times_response, ['trading_times', 'markets'])) {\n                for (let i = 0; i < trading_times_data.markets.length; i++) {\n                    const submarkets = trading_times_data.markets[i].submarkets;\n                    if (submarkets) {\n                        for (let j = 0; j < submarkets.length; j++) {\n                            const symbols = submarkets[j].symbols;\n                            if (symbols) {\n                                for (let k = 0; k < symbols.length; k++) {\n                                    const symbol = symbols[k];\n                                    if (!trading_events[trading_times_response.echo_req.trading_times as string]) {\n                                        trading_events[trading_times_response.echo_req.trading_times as string] = {};\n                                    }\n                                    trading_events[trading_times_response.echo_req.trading_times as string][\n                                        symbol.symbol\n                                    ] = symbol.events as TEvents;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return trading_events[date][underlying as string];\n    };\n\n    const getTradingTimes = async (\n        date: string | null,\n        underlying: string | null = null\n    ): Promise<Record<string, never> | TTimes | Record<string, TTimes>> => {\n        if (!date) {\n            return {};\n        }\n\n        if (!(date in trading_times)) {\n            const trading_times_response: TradingTimesResponse = await WS.tradingTimes(date);\n            const trading_times_data = trading_times_response.trading_times as TradingTimes;\n            if (getPropertyValue(trading_times_response, ['trading_times', 'markets'])) {\n                for (let i = 0; i < trading_times_data.markets.length; i++) {\n                    const submarkets = trading_times_data.markets[i].submarkets;\n                    if (submarkets) {\n                        for (let j = 0; j < submarkets.length; j++) {\n                            const symbols = submarkets[j].symbols;\n                            if (symbols) {\n                                for (let k = 0; k < symbols.length; k++) {\n                                    const symbol = symbols[k];\n                                    if (!trading_times[trading_times_response.echo_req.trading_times as string]) {\n                                        trading_times[trading_times_response.echo_req.trading_times as string] = {};\n                                    }\n                                    trading_times[trading_times_response.echo_req.trading_times as string][\n                                        symbol.symbol\n                                    ] = {\n                                        open: (symbol.times as TTimes).open,\n                                        close: (symbol.times as TTimes).close,\n                                    };\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return underlying ? trading_times[date][underlying] : trading_times[date];\n    };\n\n    const getExpiryType = (\n        duration_units_list: ReturnType<typeof getDurationUnitsList>['duration_units_list'],\n        expiry_type: string | null\n    ) => {\n        if (duration_units_list) {\n            if (\n                (!expiry_type && duration_units_list.length > 0) ||\n                (duration_units_list.length === 1 && duration_units_list[0].value === 't')\n            ) {\n                return { expiry_type: 'duration' };\n            }\n            if (duration_units_list.length === 0) {\n                return {\n                    expiry_type: null,\n                };\n            }\n        }\n\n        return { expiry_type };\n    };\n\n    const getExpiryDate = (\n        duration_units_list: ReturnType<typeof getDurationUnitsList>['duration_units_list'],\n        expiry_date: string | null,\n        expiry_type: string | null,\n        start_date: number\n    ) => {\n        let proper_expiry_date = null;\n\n        if (expiry_type === 'endtime') {\n            const moment_start = toMoment(start_date);\n            const moment_expiry = toMoment(expiry_date);\n\n            if (!hasIntradayDurationUnit(duration_units_list)) {\n                const is_invalid = moment_expiry.isSameOrBefore(moment_start, 'day');\n                proper_expiry_date = (is_invalid ? moment_start.clone().add(1, 'day') : moment_expiry).format(\n                    'YYYY-MM-DD'\n                );\n            } else {\n                // forward starting contracts should only show today and tomorrow as expiry date\n                const is_invalid =\n                    moment_expiry.isBefore(moment_start, 'day') ||\n                    (start_date && moment_expiry.isAfter(moment_start.clone().add(1, 'day')));\n                proper_expiry_date = (is_invalid ? moment_start : moment_expiry).format('YYYY-MM-DD');\n            }\n        }\n\n        return { expiry_date: proper_expiry_date };\n    };\n\n    // It has to follow the correct order of checks:\n    // first check if end time is within available sessions\n    // then confirm that end time is at least 5 minute after start time\n    const getExpiryTime = (\n        expiry_date: string | null,\n        expiry_time: string | null,\n        expiry_type: string | null,\n        market_close_times: string[] | undefined | TTimes,\n        sessions: TTradeStore['sessions'],\n        start_date: number,\n        start_time?: string | null\n    ) => {\n        let end_time: moment.Moment | string | null = null;\n\n        if (expiry_type === 'endtime') {\n            let market_close_time = '23:59:59';\n\n            if (Array.isArray(market_close_times) && market_close_times?.length && market_close_times[0] !== '--') {\n                // Some of underlyings (e.g. Australian Index) have two close time during a day so we always select the further one as the end time of the contract.\n                market_close_time = market_close_times.slice(-1)[0];\n            }\n\n            // For contracts with a duration of more that 24 hours must set the expiry_time to the market's close time on the expiry date.\n            if (!start_date && ServerTime.get()?.isBefore(buildMoment(expiry_date), 'day')) {\n                end_time = market_close_time;\n            } else {\n                const start_moment = start_date\n                    ? buildMoment(start_date, start_time)\n                    : (ServerTime.get() as moment.Moment);\n                const end_moment = buildMoment(expiry_date, expiry_time);\n\n                end_time = end_moment.format('HH:mm');\n                // When the contract is forwarding, and the duration is endtime, users can purchase the contract within 24 hours.\n                const expiry_sessions = [\n                    {\n                        open: start_moment.clone().add(5, 'minute'), // expiry time should be at least 5 minute after start_time\n                        close: minDate(\n                            start_moment.clone().add(24, 'hour'),\n                            buildMoment(expiry_date, market_close_time)\n                        ),\n                    },\n                ];\n\n                if (!isSessionAvailable(expiry_sessions, end_moment)) {\n                    end_time = getValidTime(expiry_sessions, end_moment.clone(), start_moment.clone());\n                }\n                if (end_moment.isSameOrBefore(start_moment) || end_moment.diff(start_moment, 'minute') < 5) {\n                    const is_end_of_day = start_moment.get('hours') === 23 && start_moment.get('minute') >= 55;\n                    const is_end_of_session =\n                        sessions && !isSessionAvailable(sessions, start_moment.clone().add(5, 'minutes'));\n                    end_time = start_moment.clone().add(is_end_of_day || is_end_of_session ? 0 : 5, 'minutes');\n                    // Set the end_time to be multiple of 5 to be equal as the SELECTED_TIME that shown to the client.\n                    end_time = setMinuteMultipleByFive(end_time as moment.Moment).format('HH:mm');\n                }\n                // Set the expiry_time to 5 minute less than start_time for forwading contracts when the expiry_time is null and the expiry_date is tomorrow.\n                if (end_time === '00:00' && start_moment.isBefore(end_moment, 'day')) {\n                    end_time = start_moment.clone().subtract(5, 'minute').format('HH:mm');\n                }\n            }\n        }\n        return { expiry_time: end_time };\n    };\n\n    const setMinuteMultipleByFive = (moment_obj: moment.Moment) =>\n        moment_obj.minute(Math.ceil(moment_obj.minute() / 5) * 5);\n\n    const getTradeTypes = (contract_type: string) => ({\n        trade_types: getPropertyValue(available_contract_types, [contract_type, 'config', 'trade_types']),\n    });\n\n    const getBarriers = (contract_type: string, expiry_type: string, stored_barrier_value?: string) => {\n        const barriers =\n            (getPropertyValue(available_contract_types, [contract_type, 'config', 'barriers']) as TBarriers) || {};\n        const barrier_values = barriers[expiry_type] || {};\n        const barrier_1 = barrier_values.barrier || barrier_values.high_barrier || '';\n        const barrier_2 = barrier_values.low_barrier || '';\n        return {\n            barrier_count: barriers.count || 0,\n            barrier_1: stored_barrier_value || barrier_1.toString(),\n            barrier_2: barrier_2.toString(),\n        };\n    };\n\n    const getBasis = (contract_type: string, basis: string) => {\n        const arr_basis: string[] = getPropertyValue(available_contract_types, [contract_type, 'basis']) || [];\n        const localized_basis = getLocalizedBasis();\n        const basis_list = arr_basis.reduce<TTextValueStrings[]>(\n            (cur, bas) => [...cur, { text: localized_basis[bas as keyof typeof localized_basis], value: bas }],\n            []\n        );\n\n        return {\n            basis_list,\n            basis: getArrayDefaultValue(arr_basis, basis),\n        };\n    };\n\n    const getAccumulatorRange = (contract_type: string) => ({\n        accumulator_range_list:\n            (getPropertyValue(available_contract_types, [contract_type, 'config', 'growth_rate_range']) as number[]) ||\n            [],\n    });\n\n    const getBarrierCategory = (contract_type: string) => ({\n        barrier_category: getPropertyValue(available_contract_types, [contract_type, 'config', 'barrier_category']),\n    });\n\n    const getBarrierChoices = (contract_type: string, stored_barrier_choices = [] as string[]) => ({\n        barrier_choices: stored_barrier_choices.length\n            ? stored_barrier_choices\n            : getPropertyValue(available_contract_types, [contract_type, 'config', 'barrier_choices']) || [],\n    });\n\n    const getMultiplierRange = (contract_type: string, multiplier: number) => {\n        const arr_multiplier: number[] =\n            getPropertyValue(available_contract_types, [contract_type, 'config', 'multiplier_range']) || [];\n\n        return {\n            multiplier_range_list: arr_multiplier.map(m => ({ text: `x${m}`, value: m })),\n            multiplier: getArrayDefaultValue(arr_multiplier, multiplier),\n        };\n    };\n\n    const getCancellation = (contract_type: string, cancellation_duration: string) => {\n        const arr_cancellation_range: string[] =\n            getPropertyValue(available_contract_types, [contract_type, 'config', 'cancellation_range']) || [];\n        const cached_multipliers_cancellation: string[] =\n            getPropertyValue(available_contract_types, [TRADE_TYPES.MULTIPLIER, 'config', 'cancellation_range']) || [];\n        const regex = /(^(?:\\d){1,})|((?:[a-zA-Z]){1,}$)/g;\n        const getText = (str: string) => {\n            const [duration, unit] = str.match(regex) ?? [];\n            const unit_map = getUnitMap();\n            const unit_names = unit_map[unit as keyof typeof unit_map];\n            const name = 'name_plural' in unit_names ? unit_names.name_plural : unit_names.name;\n            return `${duration} ${name}`;\n        };\n        const mapCancellationRangeList = (d: string) => ({ text: `${getText(d)}`, value: d });\n\n        const should_show_cancellation = !!arr_cancellation_range.length;\n\n        return {\n            cancellation_duration: getArrayDefaultValue(arr_cancellation_range, cancellation_duration),\n            cancellation_range_list: arr_cancellation_range.map(mapCancellationRangeList),\n            cached_multiplier_cancellation_list: cached_multipliers_cancellation.map(mapCancellationRangeList),\n            ...(should_show_cancellation ? {} : { has_cancellation: false }),\n        };\n    };\n\n    const getEqualProps = (contract_type: string) => {\n        const base_contract_type = /^(.*)_equal$/.exec(contract_type)?.[1];\n\n        if (base_contract_type && !available_contract_types[base_contract_type]) {\n            return {\n                is_equal: 1,\n                has_equals_only: true,\n            };\n        }\n        return {};\n    };\n\n    return {\n        buildContractTypesConfig,\n        getBarrierCategory,\n        getBarriers,\n        getContractType,\n        getContractValues,\n        getDurationMinMax,\n        getDurationUnit,\n        getDurationUnitsList,\n        getFullContractTypes,\n        getExpiryDate,\n        getExpiryTime,\n        getExpiryType,\n        getSessions,\n        getStartTime,\n        getStartType,\n        getTradingEvents,\n        getTradingTimes,\n        getContractCategories: () => ({\n            contract_types_list: available_categories,\n            has_only_forward_starting_contracts,\n            non_available_contract_types_list: non_available_categories,\n        }),\n    };\n})();\n","import { PriceProposalResponse, Proposal } from '@deriv/api-types';\nimport {\n    convertToUnix,\n    getDecimalPlaces,\n    getLocalizedBasis,\n    getPropertyValue,\n    isAccumulatorContract,\n    isTurbosContract,\n    toMoment,\n    TRADE_TYPES,\n} from '@deriv/shared';\nimport { TError, TTradeStore } from 'Types';\n\ntype TObjContractBasis = {\n    text: string;\n    value: string;\n};\n\ntype TObjMultiplier = {\n    cancellation?: string;\n    limit_order?: {\n        take_profit?: number;\n        stop_loss?: number;\n    };\n    multiplier?: number;\n};\n\ntype TObjAccum = {\n    growth_rate?: number;\n    limit_order?: {\n        take_profit?: number;\n    };\n};\n\ntype TObjExpiry = {\n    date_expiry?: number;\n};\n\ntype TValidationParams =\n    | {\n          validation_params?: {\n              payout?: {\n                  max: string;\n              };\n              max_payout?: string;\n              max_ticks?: number;\n              stake?: {\n                  max: string;\n                  min: string;\n              };\n              take_profit: {\n                  max: string;\n                  min: string;\n              };\n              stop_loss: { max: string; min: string };\n          };\n      }\n    | undefined;\n\nexport type ExpandedProposal = Proposal & TValidationParams;\n\nconst isVisible = (elem: HTMLElement) => !(!elem || (elem.offsetWidth === 0 && elem.offsetHeight === 0));\n\nconst map_error_field: { [key: string]: string } = {\n    barrier: 'barrier_1',\n    barrier2: 'barrier_2',\n    date_expiry: 'expiry_date',\n};\n\nexport const getProposalErrorField = (response: PriceProposalResponse) => {\n    const error_field: string = getPropertyValue(response, ['error', 'details', 'field']);\n    if (!error_field) {\n        return null;\n    }\n    const error_id = map_error_field[error_field] || error_field;\n    const el_error = document.getElementsByName(error_id)[0];\n    return el_error && isVisible(el_error) ? error_id : null;\n};\n\nexport const getProposalInfo = (\n    store: TTradeStore,\n    response: PriceProposalResponse & TError,\n    obj_prev_contract_basis?: TObjContractBasis\n) => {\n    const proposal: ExpandedProposal = response.proposal || ({} as ExpandedProposal);\n    const profit = (proposal.payout || 0) - (proposal.ask_price || 0);\n    const returns = (profit * 100) / (proposal.ask_price || 1);\n    const stake = proposal.display_value;\n    const basis_list = store.basis_list;\n\n    const contract_basis: TObjContractBasis | undefined =\n        store.is_vanilla || store.is_turbos\n            ? { text: getLocalizedBasis().payout_per_point, value: 'display_number_of_contracts' }\n            : basis_list.find(o => o.value !== store.basis) || ({} as TObjContractBasis);\n\n    const is_stake = contract_basis?.value === 'stake';\n\n    const price = is_stake ? stake : (proposal[contract_basis?.value as keyof ExpandedProposal] as string | number);\n\n    const obj_contract_basis = {\n        text: contract_basis?.text || '',\n        value: price || '',\n    };\n\n    const commission = proposal.commission;\n    const cancellation = proposal.cancellation;\n    const accumulators_details = {\n        ...proposal.contract_details,\n        growth_rate: store.growth_rate,\n        spot_time: proposal.spot_time,\n    };\n\n    return {\n        commission,\n        cancellation,\n        id: proposal.id || '',\n        has_error: !!response.error,\n        has_error_details: !!getProposalErrorField(response),\n        error_code: response?.error?.code,\n        error_field: response?.error?.details?.field,\n        limit_order: proposal.limit_order,\n        message: proposal.longcode || response?.error?.message,\n        obj_contract_basis,\n        payout: proposal.payout,\n        profit: profit.toFixed(getDecimalPlaces(store.currency)),\n        returns: `${returns.toFixed(2)}%`,\n        stake,\n        spot: proposal.spot,\n        validation_params: proposal?.validation_params,\n        ...accumulators_details,\n    };\n};\n\nexport const createProposalRequests = (store: TTradeStore) => {\n    const requests = {} as Record<string, ReturnType<typeof createProposalRequestForContract>>;\n\n    Object.keys(store.trade_types).forEach(type => {\n        const new_req = createProposalRequestForContract(store, type);\n        requests[type] = new_req;\n    });\n\n    return requests;\n};\n\nconst setProposalMultiplier = (store: TTradeStore, obj_multiplier: TObjMultiplier) => {\n    obj_multiplier.multiplier = store.multiplier;\n    obj_multiplier.cancellation = store.has_cancellation ? store.cancellation_duration : undefined;\n\n    obj_multiplier.limit_order = store.has_take_profit || store.has_stop_loss ? {} : undefined;\n\n    if (store.has_take_profit && store.take_profit && obj_multiplier.limit_order) {\n        obj_multiplier.limit_order.take_profit = +store.take_profit || 0; // send positive take_profit to API\n    }\n\n    if (store.has_stop_loss && store.stop_loss && obj_multiplier.limit_order) {\n        obj_multiplier.limit_order.stop_loss = +store.stop_loss || 0; // send positive stop_loss to API\n    }\n};\n\nconst setProposalAccumulator = (store: TTradeStore, obj_accumulator: TObjAccum) => {\n    obj_accumulator.growth_rate = store.growth_rate;\n\n    obj_accumulator.limit_order = store.has_take_profit ? {} : undefined;\n\n    if (store.has_take_profit && store.take_profit && obj_accumulator.limit_order) {\n        obj_accumulator.limit_order.take_profit = +store.take_profit || 0; // send positive take_profit to API\n    }\n};\n\nexport const createProposalRequestForContract = (store: TTradeStore, type_of_contract: string) => {\n    const obj_accumulator: TObjAccum = {};\n    const obj_expiry: TObjExpiry = {};\n    const obj_multiplier: TObjMultiplier = {};\n    let limit_order;\n\n    if (store.expiry_type === 'endtime' && store.expiry_time) {\n        const expiry_date = toMoment(store.expiry_date);\n        obj_expiry.date_expiry = convertToUnix(expiry_date.unix(), store.expiry_time);\n    }\n\n    if (store.contract_type === TRADE_TYPES.MULTIPLIER) {\n        setProposalMultiplier(store, obj_multiplier);\n    }\n\n    if (store.contract_type === TRADE_TYPES.ACCUMULATOR) {\n        setProposalAccumulator(store, obj_accumulator);\n    }\n\n    if (isTurbosContract(store.contract_type) && store.has_take_profit && store.take_profit) {\n        limit_order = { take_profit: +store.take_profit || 0 };\n    }\n\n    return {\n        proposal: 1,\n        subscribe: 1,\n        amount: parseFloat(store.amount.toString()) || 0,\n        basis: store.basis,\n        contract_type: type_of_contract,\n        currency: store.currency,\n        symbol: store.symbol,\n        ...(store.start_date && store.start_time && { date_start: convertToUnix(store.start_date, store.start_time) }),\n        ...(store.expiry_type === 'duration'\n            ? {\n                  duration: parseInt(store.duration.toString()),\n                  duration_unit: store.duration_unit,\n              }\n            : obj_expiry),\n        ...((store.barrier_count > 0 || store.form_components.indexOf('last_digit') !== -1) &&\n            !isAccumulatorContract(type_of_contract) &&\n            !isTurbosContract(type_of_contract) && {\n                barrier: store.barrier || store.barrier_1 || store.last_digit,\n            }),\n        ...(store.barrier_count === 2 && !isAccumulatorContract(type_of_contract) && { barrier2: store.barrier_2 }),\n        ...(isTurbosContract(type_of_contract) && {\n            payout_per_point: store.payout_per_point || store.last_digit,\n        }),\n        limit_order,\n        ...obj_accumulator,\n        ...obj_multiplier,\n    };\n};\n","import ServerTime from '_common/base/server_time';\nimport { toMoment } from '@deriv/shared';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\nconst isBeforeDate = (compare_moment: moment.Moment, should_only_check_hour: boolean, start_moment?: moment.Moment) => {\n    const now_moment = toMoment(start_moment);\n    if (should_only_check_hour) {\n        now_moment.minute(0).second(0);\n    }\n    return compare_moment.isBefore(now_moment) && now_moment.unix() !== compare_moment.unix();\n};\n\nexport const isSessionAvailable = (\n    sessions: ReturnType<typeof useTraderStore>['sessions'] = [],\n    compare_moment: moment.Moment = toMoment(ServerTime.get()),\n    start_moment: moment.Moment = toMoment(ServerTime.get()),\n    should_only_check_hour = false\n) =>\n    !isBeforeDate(compare_moment, should_only_check_hour, ServerTime.get()) &&\n    !isBeforeDate(compare_moment, should_only_check_hour, start_moment) &&\n    (!sessions.length ||\n        !!sessions.find(session =>\n            compare_moment.isBetween(session.open, session.close, should_only_check_hour ? 'hour' : null, '[]')\n        ));\n","import React from 'react';\nimport { StoreProvider } from '@deriv/stores';\nimport { ModulesStoreProvider } from 'Stores/useModulesStores';\nimport type { TCoreStores } from '@deriv/stores/types';\n\nexport const ModulesProvider = ({ children, store }: React.PropsWithChildren<{ store: TCoreStores }>) => {\n    return (\n        <StoreProvider store={store}>\n            <ModulesStoreProvider>{children}</ModulesStoreProvider>\n        </StoreProvider>\n    );\n};\n\nexport default ModulesProvider;\n","import React from 'react';\nimport { useStore } from '@deriv/stores';\nimport ModulesStore from './Modules';\n\nconst ModulesStoreContext = React.createContext<ModulesStore | null>(null);\n\nexport const ModulesStoreProvider = ({ children }: React.PropsWithChildren<unknown>) => {\n    const { modules } = useStore();\n    return <ModulesStoreContext.Provider value={modules as ModulesStore}>{children}</ModulesStoreContext.Provider>;\n};\n\nexport const useModulesStore = () => {\n    const store = React.useContext(ModulesStoreContext);\n\n    if (!store) {\n        throw new Error('useModulesStore must be used within ModulesStoreProvider');\n    }\n\n    return store;\n};\n","import React from 'react';\nimport { useStore } from '@deriv/stores';\nimport TradeStore from './Modules/Trading/trade-store';\n\nconst TraderStoreContext = React.createContext<TradeStore | null>(null);\n\nexport const TraderStoreProvider = ({ children }: React.PropsWithChildren<unknown>) => {\n    const { modules } = useStore();\n    // const memoizedValue = useMemo(() => new TraderStore(), []);\n\n    return <TraderStoreContext.Provider value={modules?.trade}>{children}</TraderStoreContext.Provider>;\n};\n\nexport const useTraderStore = () => {\n    const store = React.useContext(TraderStoreContext);\n\n    if (!store) {\n        throw new Error('useTraderStore must be used within TraderStoreProvider');\n    }\n\n    return store;\n};\n","import { TCoreStores } from '@deriv/stores/types';\nimport { PromiseUtils } from '@deriv-com/utils';\nimport moment from 'moment';\n\nconst ServerTime = (() => {\n    let clock_started = false;\n    const pending = PromiseUtils.createPromise<moment.Moment>();\n    let common_store: TCoreStores['common'];\n\n    const init = (store: TCoreStores['common']) => {\n        if (!clock_started) {\n            common_store = store;\n            pending.resolve?.(common_store.server_time);\n            clock_started = true;\n        }\n    };\n\n    const get = () => (clock_started && common_store.server_time ? common_store.server_time.clone() : undefined);\n\n    return {\n        init,\n        get,\n        timePromise: () => (clock_started ? Promise.resolve(common_store.server_time) : pending.promise),\n    };\n})();\n\nexport default ServerTime;\n","import React from 'react';\nimport { StoreProvider } from '@deriv/stores';\nimport { TraderStoreProvider } from 'Stores/useTraderStores';\nimport type { TCoreStores } from '@deriv/stores/types';\n\nexport const TraderProviders = ({ children, store }: React.PropsWithChildren<{ store: TCoreStores }>) => {\n    return (\n        <StoreProvider store={store}>\n            <TraderStoreProvider>{children}</TraderStoreProvider>\n        </StoreProvider>\n    );\n};\n\nexport default TraderProviders;\n","/** check is stringified object or not */\nexport const safeParse = (s: string) => {\n    try {\n        return JSON.parse(s);\n    } catch (error) {\n        return s;\n    }\n};\n\n/**\n * Retrieves the value stored in localStorage for the given key.\n * @param {string} key - The localStorage key.\n * @returns {any} - The value stored in localStorage for the given key, or null if the key does not exist or has no value.\n */\n/**\n * @deprecated Please use 'LocalStorageUtils.getValue' from '@deriv-com/utils' instead of this.\n */\nexport const getLocalStorage = (key: string) => {\n    const data = localStorage.getItem(key);\n    return data ? safeParse(data) : null;\n};\n","// eslint-disable-next-line import/no-extraneous-dependencies\nimport { Analytics } from '@deriv-com/analytics';\n\nconst waitForGrowthbook = () => {\n    return new Promise(resolve => {\n        const startTime = Date.now();\n\n        const checkAnalytics = async () => {\n            // This is a fallback incase growthbook experience an error and never gets loaded\n            if (Date.now() - startTime >= 10000) {\n                resolve(false);\n                return;\n            }\n\n            if (typeof Analytics !== 'undefined') {\n                if (Analytics.getInstances()?.ab !== undefined) {\n                    resolve(true);\n                } else {\n                    const gbState = await Analytics?.getGrowthbookStatus();\n\n                    if (gbState?.isLoaded) {\n                        resolve(true);\n                    } else {\n                        setTimeout(checkAnalytics, 50);\n                    }\n                }\n            } else {\n                setTimeout(checkAnalytics, 50);\n            }\n        };\n\n        checkAnalytics();\n    });\n};\n\nconst getFeatureFlag = async (feature: string, defaultValue?: string | boolean | undefined) => {\n    let enabled = false;\n\n    if (typeof window?.GrowthbookFeatures === 'undefined') {\n        window.GrowthbookFeatures = {};\n    }\n\n    // Avoid rechecks and return previous result immediately\n    if (typeof window.GrowthbookFeatures[feature] !== 'undefined') {\n        return window.GrowthbookFeatures[feature];\n    }\n\n    const isSuccessfullyLoaded = await waitForGrowthbook();\n\n    if (Analytics && Analytics?.getGrowthbookStatus && isSuccessfullyLoaded) {\n        const gbState = await Analytics?.getGrowthbookStatus();\n\n        // If Growthbook has config error, down or encountering issues, feature flag will default to false\n        if (gbState.isLoaded && gbState.status?.success) {\n            enabled = Analytics?.getFeatureValue(feature, !!defaultValue);\n        }\n    }\n\n    window.GrowthbookFeatures[feature] = enabled;\n\n    return enabled;\n};\n\nexport default getFeatureFlag;\n","/* This utility function is responsible to pop out currently\n enabled widget based on growthbook feature flag */\n\nimport getFeatureFlag from './getFeatureFlag';\n\nconst Chat = {\n    isFreshChat: async () => getFeatureFlag('enable_freshworks_live_chat'),\n    isIntercom: async () => getFeatureFlag('enable_intercom'),\n\n    getFlags: async () => {\n        try {\n            const [isFreshChat, isIntercom] = await Promise.all([Chat.isFreshChat(), Chat.isIntercom()]);\n            return { isFreshChat, isIntercom };\n        } catch (_error) {\n            return { isFreshChat: false, isIntercom: false };\n        }\n    },\n\n    open: async () => {\n        const isFreshChat = await Chat.isFreshChat();\n        const isIntercom = await Chat.isIntercom();\n\n        if (isFreshChat) {\n            window.fcWidget?.open();\n        } else if (isIntercom) {\n            window.Intercom('show');\n        } else {\n            window.LiveChatWidget?.call('maximize');\n        }\n    },\n\n    clear: async () => {\n        const { isFreshChat, isIntercom } = await Chat.getFlags();\n        if (isFreshChat) {\n            window.fcWidget?.user.clear();\n        } else if (isIntercom && window.Intercom) {\n            window.Intercom('shutdown');\n            window.DerivInterCom.initialize({\n                hideLauncher: true,\n                token: null,\n            });\n        }\n    },\n\n    close: async () => {\n        const { isFreshChat, isIntercom } = await Chat.getFlags();\n\n        if (isFreshChat) {\n            window.fcWidget?.close();\n        } else if (isIntercom) {\n            window.Intercom('hide');\n        } else {\n            window.LiveChatWidget?.call('hide');\n        }\n    },\n};\n\nexport default Chat;\n"],"names":["createContext","FLAGS","dtrader_v2_mobile","dtrader_v2_desktop","next_qs","sharkfin","wallet","FeatureFlagsStore","_BaseStore","_this","_classCallCheck","instance","cleanup","_callSuper","data","update","Object","keys","length","old","forEach","flag","undefined","_inherits","key","value","this","unmount","BaseStore","name","onHydrationDone","makeObservable","observable","action","bound","makePersistable","properties","storage","window","localStorage","then","Function","stopPersisting","_ref","children","store","memoizedValue","useMemo","is_mock","_objectSpread","feature_flags","useEffect","values","_typeof","React","StoreContext","Provider","useContext","Error","sendDtraderV2OpenToAnalytics","cacheTrackEvents","loadEvent","event","sendSelectedTradeTypeToAnalytics","trade_name","subform_name","market_name","trade_type_count","sendOpenGuideToAnalytics","sendMarketTypeToAnalytics","sendDtraderV2PurchaseToAnalytics","contract_id","toString","sendDtraderPurchaseToAnalytics","BounceUp","animate","y","opacity","initial","transition","type","stiffness","damping","duration","Bounce","className","is_visible","keyname","motion","div","SlideInFromTop","SlideInFromBottom","SlideIn","getBarrierLabel","contract_info","isDigitType","contract_type","localize","isVanillaContract","getBarrierValue","digitTypeMap","barrier","addComma","test","toLowerCase","_defineProperty","CONTRACT_TYPES","MATCH_DIFF","DIFF","EVEN_ODD","EVEN","MATCH","ODD","OVER_UNDER","OVER","UNDER","filterByContractType","_ref2","trade_contract_type","_getContractTypesConf","shortcode","is_call_put","isCallPut","is_high_low","isHighLow","is_vanilla","CALL","CALLE","PUT","PUTE","trade_types","getContractTypesConfig","match","includes","TRADE_TYPES","HIGH_LOW","_regeneratorRuntime","e","t","r","prototype","n","hasOwnProperty","o","defineProperty","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","call","h","l","f","s","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","resolve","__await","callInvokeWithMethodAndArg","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","onChangeSymbolAsync","_callee","symbol","_context","ContractType","buildContractTypesConfig","arguments","apply","_next","_throw","_x","getValidationRules","amount","rules","message","min","barrier_1","condition","barrier_count","form_components","indexOf","func","options","inputs","Number","barrier_2","_inputs$barrier_","input","trigger","_inputs$barrier_2","_inputs$barrier_3","start_date","expiry_date","start_time","contract_start_type","isTimeValid","isHourValid","isMinuteValid","_value$split","start_moment","toMoment","start_moment_clone","clone","_slicedToArray","split","m","isSessionAvailable","sessions","hour","minute","expiry_time","_value$split2","_ref4","getMultiplierValidationRules","stop_loss","has_stop_loss","take_profit","has_take_profit","ownKeys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","getOwnPropertyDescriptors","defineProperties","toPrimitive","String","_toPrimitive","_toPropertyKey","processPurchase","proposal_id","price","passthrough","WS","buy","_x2","_x3","onChangeContractTypeList","root_store","contract_types_list","contract_types_list_v2","list","isDtraderV2MobileEnabled","ui","is_mobile","isDtraderV2DesktopEnabled","is_desktop","getContractType","onChangeContractType","getContractValues","onChangeExpiry","contract_expiry_type","getExpiryType","getBarriers","duration_min_max","duration_unit","assertDuration","_getDurationMinMaxVal2","getDurationMinMaxValues","max","_asyncToGenerator","onChangeStartDate","_store$root_store","server_time","expiry_type","obj_contract_start_type","obj_sessions","obj_start_time","obj_duration_units_list","duration_units_list","obj_duration_unit","obj_expiry_type","obj_expiry_date","obj_duration_min_max","common","add","format","getStartType","getSessions","getStartTime","getDurationUnitsList","getDurationUnit","getExpiryDate","getDurationMinMax","_callee2","trading_times","obj_market_open_times","obj_market_close_times","market_close_times","obj_expiry_time","_context2","getTradingTimes","market_open_times","open","close","getExpiryTime","processInSequence","functions","snapshot","getSnapshot","t0","t1","t2","assign","updateStore","processTradeParams","new_state","duration_functions","getMethodsList","getExpiryMethodsList","is_trade_enabled","is_trade_enabled_v2","_x4","filtered_keys","ContractTypeHelper","getContractCategories","concat","_toConsumableArray","StartDate","Duration","_defineProperties","clientInitDisposer","client_init_listener","logoutDisposer","logout_listener","local_storage_properties","networkStatusChangeDisposer","network_status_change_listener","partial_fetch_time","preSwitchAccountDisposer","pre_switch_account_listener","realAccountSignupEndedDisposer","real_account_signup_ended_listener","session_storage_properties","store_name","switchAccountDisposer","switch_account_listener","themeChangeDisposer","theme_change_listener","validation_errors","validation_rules","retrieveFromStorage","setValidationErrorMessages","setValidationRules","addRule","validateProperty","validateAllProperties","onSwitchAccount","onPreSwitchAccount","onLogout","onClientInit","onNetworkStatusChange","onThemeChange","onRealAccountSignupEnd","disposePreSwitchAccount","disposeSwitchAccount","disposeLogout","disposeClientInit","disposeNetworkStatusChange","disposeThemeChange","disposeRealAccountSignupEnd","onUnmount","assertHasValidCache","setTimeout","setupReactionForLocalStorage","setupReactionForSessionStorage","toJS","isEmptyObject","reduce","result","_this2","reaction","map","saveToStorage","STORAGES","LOCAL_STORAGE","_this3","SESSION_STORAGE","JSON","stringify","setItem","sessionStorage","_this4","local_storage_snapshot","parse","getItem","session_storage_snapshot","k","propertyName","messages","_this5","x","_this6","property","_this7","intercept","change","newValue","_this$validation_rule","_this8","validation_rules_for_property","validation_rules_for_trigger","validator","Validator","isPassed","errors","get","_this9","error","listener","_this10","when","client","switch_broadcast","_this10$switch_accoun","switchEndSignal","isProduction","console","_this11","pre_switch_broadcast","_this11$pre_switch_ac","setPreSwitchAccount","_this12","has_logged_out","_this12$logout_listen","setLogout","_this13","initialized_broadcast","_this13$client_init_l","setInitialized","_this14","is_network_online","is_online","_this14$network_statu","_this15","is_dark_mode_on","_this15$theme_change_","_this16","has_real_account_signup_ended","_this16$real_account_","setRealAccountSignupEnd","loginid","_len","reactions","Array","_key","act","freeze","ACTION","STATE_TYPES","SUBFORM_NAME","getChartAnalyticsData","state","option","indicator_type_form_events","market_type_form_events","_option$chart_type_na","chart_type_name","payload","time_interval_name","event_type","getChartTypeFormAnalyticsData","_option$indicator_typ","indicator_type_name","_option$indicators_ca","indicators_category_name","is_info_open","is_open","search_string","indicators_subform","info_open_close_action","open_close_action","getIndicatorTypeFormAnalyticsData","is_favorite","_option$symbol_catego","symbol_category","tab_market_name","_option$symbol","market_type_name","favorites_action","getMarketTypeFormAnalyticsData","_getPrototypeOf","ReferenceError","_assertThisInitialized","_possibleConstructorReturn","_isNativeReflectConstruct","Reflect","construct","Boolean","valueOf","bind","_setPrototypeOf","g_subscribers_map","TradeStore","is_trade_component_mounted","is_purchase_enabled","is_equal","has_equals_only","is_market_closed","previous_symbol","active_symbols","has_symbols_for_v2","prev_contract_type","non_available_contract_types_list","trade_type_tab","basis","basis_list","currency","default_stake","stake_boundary","expiry_epoch","saved_expiry_date_v2","unsaved_expiry_date_v2","main_barrier","barriers","barrier_choices","payout_choices","start_dates_list","validation_params","digit_stats","last_digit","is_mobile_digit_view_selected","tick_data","proposal_info","purchase_info","is_chart_loading","should_show_active_symbols_loading","accumulator_range_list","growth_rate","maximum_payout","maximum_ticks","ticks_history_stats","tick_size_barrier_percentage","multiplier","multiplier_range_list","has_cancellation","open_payout_wheelpicker","commission","cancellation_price","stop_out","expiration","hovered_contract_type","cancellation_duration","cancellation_range_list","cached_multiplier_cancellation_list","ref","long_barriers","short_barriers","payout_per_point","strike_price_choices","is_trade_params_expanded","v2_params_initial_values","debouncedSetChartStatus","debounce","status","runInAction","debouncedProposal","requestProposal","proposal_requests","is_purchasing_contract","initial_barriers","is_initial_barrier_applied","is_digits_widget_active","should_skip_prepost_lifecycle","clearContracts","contract_trade","contracts","setMainBarrier","barrier2","isBarrierSupported","ChartBarrierStore","onChartBarrierChange","color","BARRIER_COLORS","BLUE","not_draggable","is_turbos","onPurchase","disablePurchaseButtons","el_purchase_value","document","getElementsByClassName","el_purchase_buttons","el","classList","prev_chart_layout","wsSubscribe","req","callback","passthrough_callback","args","granularity","ohlc","pip_size","setTickData","quote","is_accumulator","current_spot_data","_ref3","tick","epoch","current_spot","current_spot_time","history","prices","times","echo_req","ticks_history","prev_spot_time","updateAccumulatorBarriersData","isMarketClosed","subscribe","getTicksHistory","subscriber","subscribeTicksHistory","wsForget","_g_subscribers_map$ke","unsubscribe","wsForgetStream","stream_id","forgetStream","wsSendRequest","ServerTime","timePromise","msg_type","time","unix","is_logged_in","authorized","activeSymbols","tradingTimes","send","setSavedExpiryDateV2","setUnsavedExpiryDateV2","has_open_accu_contract","computed","is_dtrader_v2","is_dtrader_v2_mobile","is_dtrader_v2_desktop","is_synthetics_trading_market_available","setDefaultStake","setDefaultGrowthRate","setDigitStats","togglePayoutWheelPicker","accountSwitcherListener","barrier_pipsize","barriers_flattened","changeDurationValidationRules","chartStateChange","clearLimitOrderBarriers","clearPurchaseInfo","clientInitListener","clearV2ParamsInitialValues","processContractsForV2","enablePurchase","exportLayout","forgetAllProposal","getFirstOpenMarket","has_alternative_source","initAccountCurrency","is_multiplier","is_symbol_in_active_symbols","is_synthetics_available","is_vanilla_fx","loadActiveSymbols","logoutListener","main_barrier_flattened","networkStatusChangeListener","onAllowEqualsChange","onChange","onChangeMultiple","onHoverPurchase","onMount","onProposalResponse","onPurchaseV2","override","prepareTradeStore","preSwitchAccountListener","pushPurchaseDataToGtm","refresh","resetAccumulatorData","resetErrorServices","resetPreviousSymbol","setActiveSymbols","setActiveSymbolsV2","setBarrierChoices","setPayoutChoices","setChartModeFromURL","setChartStatus","setContractTypes","setContractTypesListV2","setDefaultSymbol","setIsTradeParamsExpanded","setIsDigitsWidgetActive","setMarketStatus","getTurbosChartBarrier","setMobileDigitView","setPreviousSymbol","setSkipPrePostLifecycle","setStakeBoundary","setTradeTypeTab","setTradeStatus","setV2ParamsInitialValues","show_digits_stats","updateSymbol","setPayoutPerPoint","_safeParse","urlContractType","URLSearchParams","location","search","tradeStoreString","tradeStoreObj","safeParse","isValidContractType","categories","flatMap","some","toggleUrlUnavailableModal","_safeParse2","urlSymbol","isValidSymbol","_this$contract_type","RISE_FALL","date","resetEndTimeOnVolatilityIndices","setTradeURLParams","notifications","removeTradeNotifications","portfolio","setContractType","contractType","current_language","symbol_info","exchange_is_open","open_accu_contract","active_positions","find","_ref5","isAccumulatorContract","underlying","accumulator_barriers_data","clearAccumulatorBarriersData","_ref6","should_skip","_loadActiveSymbols","_r$error","should_set_default_symbol","should_show_loading","_getTradeURLParams","hasSymbolChanged","symbol_to_update","_args","getTradeURLParams","showModal","is_logging_in","contractsFor","code","pickDefaultSymbol","processNewValuesAsync","_setDefaultSymbol","_setActiveSymbols","_callee3","is_on_mf_account","showError","_yield$WS$authorized$","_context3","landing_company_shortcode","wait","showDigitalOptionsUnavailableError","text","title","platform_name_trader","getPlatformSettings","link","platform_name_mt5","showUnavailableLocationError","_processContractsForV","_callee4","contract_categories","_context4","_setContractTypes","_callee5","_contractType2","_contractType3","_contractType4","_context5","_contractType","_getTradeURLParams2","contractTypeParam","_this5$root_store$cli","is_switching","setSelectedContractType","_prepareTradeStore","_callee7","_args7","_context7","is_populating_account_list","_callee6","_context6","default_currency","_onChangeMultiple","_callee8","_context8","_onChange","_callee9","_e$target","_context9","target","selectCurrency","_resetPreviousSymbol","_callee10","_context10","is_over","updateBarrierShade","setLimitOrderBarriers","getBarrierPipSize","isDigitTradeType","_onPurchaseV","_callee11","trade_type","isMobile","_this$proposal_info","info","_context11","proposal_info_keys","proposal_request_keys","id","stake","_x5","is_tick_contract","response","_this10$root_store$co","_this10$root_store$co2","setServicesError","services_error","contract_data","buy_price","_response$buy","longcode","_category$toUpperCase","_extractInfoFromShort","extractInfoFromShortcode","category","is_digit_contract","isDigitContractType","toUpperCase","isMultiplierContract","is_call","is_put","shortcode_info","higher_lower_contact","LOWER","rise_fall_contract","FALL","HIGHER","RISE","call_put_contract","hj","event_string","addContract","onBuyResponse","openPositionsDrawer","extracted_info_from_shortcode","getCurrencyDisplayCode","formatted_stake","getCardLabelsV2","STAKE","formatMoney","pathname","routes","trade","getTradeNotificationMessage","redirectTo","getContractPath","addTradeNotification","purchase_time","is_unwelcome","cloneObject","parseInt","_processNewValuesAsync","_callee12","obj_new_values","is_changed_by_user","obj_old_values","should_forget_first","_ref8","prev_chart_type","prev_granularity","chart_type","savePreviousChartMode","updateChartType","updateGranularity","_obj_new_values$curre","_obj_new_values$curre2","_obj_new_values$curre4","prev_currency","has_currency_changed","should_reset_stake","_obj_new_values$curre3","has_only_forward_starting_contracts","_obj_new_values$symbo","_obj_new_values$symbo2","has_symbol_changed","has_contract_type_changed","_this$currency","_getMinPayout","_this$currency2","is_crypto","default_crypto_value","_args12","_context12","RISE_FALL_EQUAL","isCryptocurrency","getMinPayout","setHasOnlyForwardingContracts","is_advanced_duration","_this$active_symbols","item","market","_this$active_symbols2","subgroup","bool","bom_ui","contract","barrier1","date_expiry","date_start","payout","settings","theme","positions_drawer","is_positions_drawer_on","chart","toolbar_position","is_chart_layout_default","chart_asset_info","is_chart_asset_info_visible","gtm","pushDataLayer","requests","createProposalRequests","subscribeProposal","resetPurchaseStates","forgetAll","_response$proposal","_response$proposal$co","_response$proposal2","_response$proposal3","_response$proposal3$c","proposal","contract_details","spot","toFixed","_response$proposal4","_this$proposal_info2","_this$main_barrier","_this$hovered_contrac","prev_proposal_info","getPropertyValue","obj_prev_contract_basis","is_crypto_multiplier","getProposalInfo","MULTUP","_limit_order$stop_out","_this$proposal_info$M","cancellation","limit_order","ask_price","order_amount","ACCU","_this$proposal_info$A","barrier_spot_distance","_this$proposal_info$A2","ticks_stayed_in","_this$proposal_info$A3","last_tick_epoch","_this$proposal_info$A4","high_barrier","low_barrier","spot_time","_previous_ticks_histo","_ref$previous_ticks_h","previous_ticks_history_stats","_ref$new_ticks_histor","new_ticks_history_stats","previous_history","previous_epoch","getUpdatedTicksHistoryStats","accumulators_high_barrier","accumulators_low_barrier","shade","chart_barrier","_response$error$detai","_response$error$detai3","error_id","getProposalErrorField","_response$error","details","commission_match","field","_response$error$detai2","max_stake","min_stake","index","Math","floor","payout_per_point_choices","_response$error$detai4","payoutIndex","_response$proposal5","_ref10","_response$proposal6","_ref11","findIndex","limits","_this$validation_rule2","duration_options","convertDurationLimit","_accountSwitcherListener","_callee14","_context14","is_language_changing","_callee13","_context13","_logoutListener","_callee15","_context15","toggleServicesErrorModal","_this$root_store$cont","chartType","setShouldShowPopups","_callee16","_context16","_getTradeURLParams3","chartTypeParam","granularityParam","_this$root_store$cont2","urlParams","isFromChart","_initAccountCurrency","_callee17","new_currency","_context17","_x6","is_notifications_visible","toggleNotificationsModal","is_used","layout","MULTIPLIER","startsWith","previousMaxTicks","isDone","isClosed","_ref14","form_name","hasBarrier","ACCUMULATOR","isTurbosContract","isVanillaFxContract","isTouchContract","_getFirstOpenMarket","_callee18","markets_to_search","_this$active_symbols3","_yield$WS$authorized$2","_context18","findFirstOpenMarket","_x7","stored_barriers_data","getContractSubtype","val","is_active","label","PositionsStore","openContractTypeFilter","closedContractTypeFilter","filteredContractTypes","timeFilter","customTimeRangeFilter","dateFrom","dateTo","setClosedContractTypeFilter","setOpenContractTypeFilter","setTimeFilter","setCustomTimeRangeFilter","setDateFrom","setDateTo","contractTypes","getFilteredContractTypes","newTimeFilter","newCustomTimeFilter","newDateFrom","newDateTo","MarketsStore","favoriteIndicators","favoriteSymbols","setFavoriteSymbols","setFavoriteIndicators","removeFavoriteSymbol","removeFavoriteIndicator","existingFavorites","indicators","syncLocalStorage","symbols","indicator","favIndicator","favSymbol","favorites","ModulesStore","_createClass","core_store","positions","markets","cashier","modules","RootStore","contract_replay","chart_barrier_store","configure","enforceActions","websocket","init","setWebsocket","DEFAULT_DATE_FORMATTING_CONFIG","day","month","year","TAB_NAME","OPEN","CLOSED","filterPositions","splittedFilter","flat","config","getSupportedContracts","main_title","contractTypesConfig","CONTRACT_LIST","ACCUMULATORS","VANILLAS","VANILLA","TURBOS","LONG","SHORT","MULTIPLIERS","DOWN","UP","HIGHER_LOWER","TOUCH_NO_TOUCH","TOUCH","NO_TOUCH","ONE_TOUCH","MATCHES_DIFFERS","_contractTypesConfig2","Set","getProfit","_profit_loss$replaceA","_profit_loss","profit_loss","replaceAll","getTotalProfit","profit","getTotalPositionsProfit","sum","setPositionURLParams","tab_name","searchParams","set","newQuery","replaceState","DURATION_UNIT","DAYS","TICKS","MINUTES","HOURS","SECONDS","getTradeParams","allow_equals","trade_type_tabs","accu_info_display","risk_management","mult_info_display","shouldShowExpiration","barrier_info","strike","payout_per_point_info","isDigitContractWinning","selected_digit","current_digit","win_conditions","focusAndOpenKeyboard","focused_input","main_input","style","display","focus","preventScroll","click","getTradeTypeTabsList","is_touch","is_displayed","isSmallScreen","innerHeight","addUnit","_ref3$unit","unit","_ref3$should_add_spac","should_add_space","getSnackBarText","switching_cancellation","switching_tp_sl","Localize","i18n_default_text","getClosestTimeToCurrentGMT","interval","now","Date","setMinutes","getMinutes","_formattedTime$split$2","Intl","DateTimeFormat","hour12","timeZone","hours","minutes","setUTCHours","setUTCMinutes","roundedMinutes","ceil","getUTCMinutes","getUTCHours","newHours","padStart","newMinutes","getOptionPerUnit","intraday","daily","start","end","from","_","generateOptions","getSmallestDuration","obj","durationUnits","smallestValueInSeconds","Infinity","smallestUnit","_i","_keysPriority","convertedValue","getDatePickerStartDate","_server_time$toISOStr","minDurationDate","getMinDuration","_duration_min_max$dai","server_date","getTime","parsedDate","today","daysInMonth","getUTCFullYear","getUTCMonth","getDate","setUTCDate","getUTCDate","toDate","hasIntradayDurationUnit","toISOString","substr","dateObj","second","setHours","setSeconds","setMinTime","getProposalRequestObject","_ref7","_ref7$new_values","new_values","_ref7$should_subscrib","should_subscribe","trade_store","request","createProposalRequestForContract","getPayoutInfo","_proposal_error_messa","_message$match","has_error","_ref8$message","_ref8$payout","error_field","float_number_search_regex","is_error_matching","proposal_error_message","error_payout","contract_payout","validation_payout","error_max_payout","max_payout","getSortedIndex","getContractTypePosition","AVAILABLE_CONTRACTS","tradeType","for","getTradeTypesList","available_trade_types","getAvailableContractTypes","unsupported_contract_types_list","getCategoriesSortedByKey","contract_types","getDisplayedContractTypes","sort","b","sortCategoriesInTradeTypeOrder","is_latest","is_lost","is_selected","is_won","percentage","display_percentage","parseFloat","classNames","is_selected_winning","Text","size","align","weight","is_max","is_min","w","width","height","viewBox","cx","cy","fill","stroke","strokeWidth","strokeOpacity","strokeDasharray","join","strokeDashoffset","observer","has_entry_spot","onSelect","latest_digit","stats","onLastDigitSpot","digit","is_digit_selectable","is_digit_selected","onClick","LastDigitStat","DesktopWrapper","DigitSpot","Digit","is_trade_page","position","transform","left","top","Icon","icon","custom_color","display_array","digits","digits_info","dimension","is_ended","onDigitChange","digit_offset","digit_offset_mobile","handleSelect","digit_value","isSelectableDigitType","getOffset","last_contract_digit","latest_tick_pip_size","latest_tick_quote_price","latest_tick_digit","idx","DigitDisplay","num","barrier_map","DIGITMATCH","DIGITDIFF","DIGITOVER","DIGITUNDER","DIGITODD","DIGITEVEN","LastDigitPointer","DigitsWrapper","digits_array","display_status","onChangeStatus","props","_objectWithoutProperties","_excluded","has_contract","is_tick_ready","is_contract_elapsed","isContractElapsed","tick_stream","_t$tick_display_value","ask","bid","tick_display_value","current_tick","LastDigitPrediction","entry_tick","Digits","underlying_name","_React$useState2","setStatus","_React$useState4","setCurrentTick","_React$useState6","setSpot","_React$useState8","setIsSelectedWinning","_React$useState10","setIsWon","_React$useState12","setIsLost","isMounted","useIsMounted","useDevice","_extends","params","Popover","alignment","classNameBubble","margin","getMarketNamesMap","zIndex","PageError","header","error_code","redirect_urls","redirect_labels","classNameImage","image_url","getUrlBase","ACTIONS","AccumulatorsProfitLossText","_prev_profit$current","_ref$className","profit_value","should_show_profit_percentage","is_fading_in","setIsFadingIn","is_sliding","setIsSliding","formatted_profit","prev_profit_tenth","current","current_profit_tenth","setCurrentProfitTenth","profit_tenth_ref","interval_id_ref","fading_in_timeout_id","sliding_timeout_id","profit_portions_array","profit_whole_number","profit_tenth","profit_hundredths","won","sign","runThroughTenthDigit","interval_ms","clearInterval","interval_id","setInterval","abs","delta","clearTimeout","FastMarker","markerRef","setPosition","overlap_y_axis","as","AccumulatorsProfitLossTooltip","_ref$alignment","exit_tick","exit_tick_time","is_sold","profit_percentage","should_show_profit_text","is_tooltip_open","setIsTooltipOpen","tooltip_timeout","getDecimalPlaces","onCloseDelayed","onHoverOrTapHandler","opposite_arrow_position","horizontal","onMouseEnter","onMouseLeave","onTouchStart","onTouchEnd","CSSTransition","in","timeout","exit","unmountOnExit","Money","has_sign","show_currency","AccumulatorsChartElements","all_positions","has_crossed_accu_barriers","accumulators_positions","ChartMarker","marker_config","ContentComponent","marker_content_props","_ref$is_positioned_be","is_positioned_behind","_ref$is_positioned_be2","is_positioned_before","marker_props","Component","Widget","ToolbarWidgets","is_real_desktop_device","isDesktopOs","isTabletOs","ToolbarWidget","ChartMode","portalNodeId","onChartType","onGranularity","StudyLegend","searchInputClassName","Views","DrawTools","Share","useStore","filtered_contracts","latest_tick_contract","isEnded","_latest_tick_contract","tick_count","isDigitContract","InfoBox","_ref$is_title_enabled","is_title_enabled","onSymbolChange","open_market","ChartTitleLocal","ChartTitle","enabled","isNestedList","portal","ReactDOM","RecentTradeInfo","getElementById","module","load","component_name","moduleLoader","setSmartChartsPublicPath","default","SmartChart","contract_category_icon","ordered_trade_categories","getContractTypeCategoryIcons","All","Accumulators","Options","Multipliers","Turbos","unsupported_list","contract_name","available_contract_types","component","findContractCategory","list_item","_list_item$contract_t","getContractCategoryKey","_findContractCategory","getContractTypes","_findContractCategory2","digitCategoriesMap","digitTypesMap","isArray","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","_arrayLikeToArray","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","available_categories","non_available_categories","trading_events","buildTradeTypesConfig","getArrayDefaultValue","getComponents","getStartDates","getValidTime","buildMoment","setMinuteMultipleByFive","getTradeTypes","getBasis","getAccumulatorRange","getBarrierChoices","getMultiplierRange","getCancellation","getEqualProps","_contract$contract_di","contract_display","arr_new_values","c_type","_contract_types$c_typ","_contract_types$c_typ2","check","components","_contract_types$c_typ3","hide_duration","duration_units","arr_units","current_start_date","_start_dates_list$","has_spot","forward_starting_dates","compare_moment","_time$split","moment_obj","arr_basis","localized_basis","getLocalizedBasis","cur","bas","stored_barrier_choices","arr_multiplier","arr_cancellation_range","cached_multipliers_cancellation","regex","mapCancellationRangeList","str","_str$match","unit_names","getUnitMap","name_plural","should_show_cancellation","_exec","base_contract_type","exec","has_contracts","contracts_for","available","start_type","getContractCategoriesConfig","_Object$keys$find","sub_cats","durations","buildDurationConfig","buildBarriersConfig","barrier_category","buildForwardStartingConfig","growth_rate_range","multiplier_range","cancellation_range","getCleanedUpCategories","mutable_contracts_config","getCategories","_mutable_contracts_co","_mutable_contracts_co2","non_available_contracts","non_available","_Object$keys$find2","_contract_types$type","_available_categories","_available_categories2","is_available","getBarrierCategory","stored_barrier_value","barrier_values","count","filteredList","ct","sortedList","getSortedTradeTypes","_stored_barriers_data","_stored_barriers_data2","obj_basis","obj_trade_types","obj_start_dates","obj_start_type","obj_barrier","obj_duration_units_min_max","obj_accumulator_range_list","obj_barrier_choices","obj_multiplier_range_list","obj_cancellation","obj_equal","getFullContractTypes","proper_expiry_date","moment_start","moment_expiry","isBefore","isAfter","isSameOrBefore","end_time","_ServerTime$get","market_close_time","end_moment","expiry_sessions","minDate","diff","is_end_of_day","is_end_of_session","subtract","_config$forward_start","_config$forward_start2","getTradingEvents","trading_times_response","trading_times_data","submarkets","j","events","_args2","map_error_field","elem","el_error","getElementsByName","offsetWidth","offsetHeight","_response$error2","_response$error2$deta","_response$error3","returns","display_value","contract_basis","obj_contract_basis","accumulators_details","has_error_details","new_req","type_of_contract","obj_accumulator","obj_expiry","obj_multiplier","convertToUnix","setProposalMultiplier","setProposalAccumulator","isBeforeDate","should_only_check_hour","now_moment","session","isBetween","StoreProvider","ModulesStoreProvider","ModulesStoreContext","useModulesStore","TraderStoreContext","TraderStoreProvider","useTraderStore","common_store","clock_started","pending","PromiseUtils","createPromise","_pending$resolve","promise","getLocalStorage","feature","defaultValue","_window","isSuccessfullyLoaded","_gbState$status","gbState","GrowthbookFeatures","startTime","checkAnalytics","_Analytics$getInstanc","Analytics","getInstances","ab","getGrowthbookStatus","isLoaded","success","getFeatureValue","_close","_clear","_open","_getFlags","_isIntercom","_isFreshChat","Chat","isFreshChat","getFeatureFlag","isIntercom","getFlags","_yield$Promise$all","_yield$Promise$all2","all","_window$fcWidget","_window$LiveChatWidge","fcWidget","Intercom","LiveChatWidget","clear","_yield$Chat$getFlags","_window$fcWidget2","user","DerivInterCom","initialize","hideLauncher","token","_yield$Chat$getFlags2","_window$fcWidget3","_window$LiveChatWidge2"],"sourceRoot":""}