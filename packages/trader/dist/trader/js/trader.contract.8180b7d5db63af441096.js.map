{"version":3,"file":"trader/js/trader.contract.8180b7d5db63af441096.js","mappings":"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","sources":["webpack://@deriv/trader/./src/App/Components/Elements/Errors/error-component.tsx","webpack://@deriv/trader/./src/App/Components/Elements/Errors/index.ts","webpack://@deriv/trader/./src/Modules/Contract/Components/InfoBox/info-box-longcode.tsx","webpack://@deriv/trader/./src/Modules/Contract/Components/contract-error.tsx","webpack://@deriv/trader/./src/Modules/Contract/Components/InfoBox/info-box.tsx","webpack://@deriv/trader/./src/Modules/Contract/Components/InfoBox/index.ts","webpack://@deriv/trader/./src/Modules/Contract/Containers/contract-replay-widget.tsx","webpack://@deriv/trader/./src/Modules/SmartChart/Components/Markers/reset-contract-chart-elements.tsx","webpack://@deriv/trader/./src/Modules/Contract/Containers/replay-chart.tsx","webpack://@deriv/trader/../hooks/src/useFeatureFlags.ts","webpack://@deriv/trader/./src/App/Components/Elements/ContractAudit/contract-audit-item.tsx","webpack://@deriv/trader/./src/App/Components/Elements/ContractAudit/contract-details.tsx","webpack://@deriv/trader/./src/App/Components/Elements/ContractAudit/contract-history.tsx","webpack://@deriv/trader/./src/App/Components/Elements/ContractAudit/contract-audit.tsx","webpack://@deriv/trader/./src/App/Components/Elements/ContractAudit/index.ts","webpack://@deriv/trader/./src/App/Components/Elements/ContractDrawer/swipeable-components.tsx","webpack://@deriv/trader/./src/App/Components/Elements/ContractDrawer/market-closed-contract-overlay.tsx","webpack://@deriv/trader/./src/App/Components/Elements/ContractDrawer/contract-drawer-card.tsx","webpack://@deriv/trader/./src/App/Components/Elements/ContractDrawer/contract-drawer.tsx","webpack://@deriv/trader/./src/App/Components/Elements/ContractDrawer/index.ts","webpack://@deriv/trader/./src/Modules/Contract/Containers/contract-replay.tsx","webpack://@deriv/trader/./src/Modules/Contract/Containers/contract.tsx","webpack://@deriv/trader/./src/Modules/Contract/index.ts","webpack://@deriv/trader/./src/Stores/Modules/Trading/Helpers/logic.ts"],"sourcesContent":["import React from 'react';\nimport { Dialog, PageErrorContainer } from '@deriv/components';\nimport { routes } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\n\ntype TErrorComponent = {\n    header: React.ReactNode;\n    message: React.ReactNode;\n    is_dialog: boolean;\n    redirect_label: string;\n    redirectOnClick: (() => void) | null;\n    should_show_refresh: boolean;\n};\n\nconst ErrorComponent: React.FC<Partial<TErrorComponent>> = ({\n    header,\n    message,\n    is_dialog,\n    redirect_label,\n    redirectOnClick,\n    should_show_refresh = true,\n}) => {\n    const refresh_message: string = should_show_refresh ? localize('Please refresh this page to continue.') : '';\n\n    if (is_dialog) {\n        return (\n            <Dialog\n                title={header || localize('There was an error')}\n                is_visible={true}\n                confirm_button_text={redirect_label || localize('Ok')}\n                onConfirm={redirectOnClick || (() => location.reload())}\n            >\n                {message || localize('Sorry, an error occurred while processing your request.')}\n            </Dialog>\n        );\n    }\n    return (\n        <PageErrorContainer\n            error_header={header ?? ''}\n            error_messages={message ? [message, refresh_message] : []}\n            redirect_urls={[routes.trade]}\n            redirect_labels={[redirect_label || localize('Refresh')]}\n            buttonOnClick={redirectOnClick || (() => location.reload())}\n        />\n    );\n};\n\nexport default ErrorComponent;\n","import ErrorComponent from './error-component';\n\nexport default ErrorComponent;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Icon, Text, Modal, Button } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport { TContractInfo, isTabletOs } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\n\ntype TInfoBoxLongcode = { contract_info: TContractInfo };\n\nconst InfoBoxLongcode = observer(({ contract_info }: TInfoBoxLongcode) => {\n    const {\n        ui: { is_mobile },\n    } = useStore();\n    const max_longcode_length = is_mobile ? 47 : 150;\n    const [is_collapsed, setIsCollapsed] = React.useState(true);\n\n    const handleToggle = (e?: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>) => {\n        if (e) {\n            e.preventDefault();\n            if (e.type !== 'keydown' || (e.type === 'keydown' && (e as React.KeyboardEvent).key === 'Enter')) {\n                setIsCollapsed(!is_collapsed);\n            }\n        } else {\n            setIsCollapsed(!is_collapsed);\n        }\n    };\n\n    return (\n        <div className='info-box-longcode'>\n            <Icon icon='IcContractFlag' className='info-box-longcode-icon' size={24} />\n            <div\n                className='info-box-longcode-wrapper'\n                onClick={is_mobile ? handleToggle : undefined}\n                onKeyDown={handleToggle}\n            >\n                <Text\n                    size='xs'\n                    className={classNames('info-box-longcode-text', {\n                        'info-box-longcode-text--collapsed': is_collapsed || is_mobile,\n                        'info-box-longcode-text--collapsed--fixed-height': !isTabletOs && (is_collapsed || is_mobile),\n                    })}\n                >\n                    {contract_info.longcode}\n                </Text>\n                {` `}\n                {contract_info?.longcode && contract_info.longcode.length > max_longcode_length && (\n                    <Text as='a' href='#' size='xs' onClick={handleToggle} className='info-box-longcode-text'>\n                        {is_collapsed || is_mobile ? (\n                            <Localize i18n_default_text='View more' />\n                        ) : (\n                            <Localize i18n_default_text='View less' />\n                        )}\n                    </Text>\n                )}\n            </div>\n            <Modal\n                className='info-box-longcode--modal'\n                is_open={is_mobile && !is_collapsed}\n                title={<Localize i18n_default_text='Trade info' />}\n                has_close_icon={false}\n                should_close_on_click_outside\n                small\n                toggleModal={handleToggle}\n            >\n                <Modal.Body>\n                    <Text size='xs'>{contract_info.longcode}</Text>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button className='info-box-longcode--modal-button' primary large onClick={handleToggle}>\n                        <Localize i18n_default_text='OK' />\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </div>\n    );\n});\n\nexport default InfoBoxLongcode;\n","import React from 'react';\nimport { Icon } from '@deriv/components';\n\ntype TContractError = {\n    message?: string;\n    onClickClose: () => void;\n};\n\n// TODO: move to App/Components, Refactor svg, consider other types, more features;\n// when a general design and more icons for all messages is ready\nconst ContractError = ({ message = '', onClickClose }: TContractError) =>\n    !message ? null : (\n        <div className='message'>\n            <div className='message-icon'>\n                <svg width='16' height='16' viewBox='0 0 16 16'>\n                    <g fill='none' fillRule='evenodd'>\n                        <circle cx='8' cy='8' r='8' fill='#F44336' />\n                        <path\n                            fill='#FFF'\n                            fillRule='nonzero'\n                            d='M8 7.293l3.146-3.147a.5.5 0 0 1 .708.708L8.707 8l3.147 3.146a.5.5 0 0 1-.708.708L8 8.707l-3.146 3.147a.5.5 0 0 1-.708-.708L7.293 8 4.146 4.854a.5.5 0 1 1 .708-.708L8 7.293z'\n                        />\n                    </g>\n                </svg>\n            </div>\n            <div className='message-text'>{message}</div>\n            <div className='message-close' onClick={onClickClose}>\n                <Icon icon='IcCross' />\n            </div>\n        </div>\n    );\n\nexport default ContractError;\n","import React from 'react';\nimport { SlideIn } from 'App/Components/Animations';\nimport InfoBoxLongcode from './info-box-longcode';\nimport ContractError from '../contract-error';\nimport { TContractInfo } from '@deriv/shared';\n\ntype TInfoBox = {\n    contract_info: TContractInfo;\n    error_message?: string;\n    removeError: () => void;\n};\n\nconst InfoBox = ({ contract_info, error_message, removeError }: TInfoBox) => {\n    const is_ready = !!contract_info.longcode;\n    return (\n        <SlideIn is_visible={is_ready} className='info-box-container' keyname='info-box-container'>\n            {!!contract_info.contract_type && (\n                <div className='info-box'>\n                    <InfoBoxLongcode contract_info={contract_info} />\n                </div>\n            )}\n            <ContractError message={error_message} onClickClose={removeError} />\n        </SlideIn>\n    );\n};\n\nexport default InfoBox;\n","import InfoBox from './info-box';\n\nexport default InfoBox;\n","import React from 'react';\nimport Digits from 'Modules/Contract/Components/Digits';\nimport InfoBox from 'Modules/Contract/Components/InfoBox';\nimport BottomWidgets from '../../SmartChart/Components/bottom-widgets';\nimport TopWidgets from '../../SmartChart/Components/top-widgets';\nimport { observer, useStore } from '@deriv/stores';\n\nexport const DigitsWidget = observer(() => {\n    const { contract_replay, ui } = useStore();\n    const { is_mobile } = ui;\n    const { contract_store } = contract_replay;\n    const { contract_info, digits_info, display_status, is_digit_contract, is_ended } = contract_store;\n\n    return (\n        <Digits\n            is_digit_contract={is_digit_contract}\n            is_ended={is_ended}\n            is_mobile={is_mobile}\n            contract_info={contract_info}\n            digits_info={digits_info}\n            display_status={display_status}\n        />\n    );\n});\n\nexport const InfoBoxWidget = observer(() => {\n    const { contract_replay } = useStore();\n    const { contract_store, removeErrorMessage: removeError, error_message } = contract_replay;\n    const { contract_info } = contract_store;\n\n    return <InfoBox contract_info={contract_info} error_message={error_message} removeError={removeError} />;\n});\n\n// Chart widgets passed into SmartCharts\nexport const ChartTopWidgets = () => {\n    return <TopWidgets InfoBox={<InfoBoxWidget />} is_title_enabled={false} />;\n};\nexport const ChartBottomWidgets = () => <BottomWidgets Widget={<DigitsWidget />} />;\n","import React from 'react';\nimport type { TContractInfo } from '@deriv/shared';\nimport ChartMarker from './marker';\n\ntype ResetContractChartElements = {\n    contract_info: TContractInfo;\n};\n\nconst ResetContractChartElements = ({ contract_info }: ResetContractChartElements) => {\n    const { contract_type, entry_spot, reset_time, reset_barrier } = contract_info ?? {};\n    const is_reset_call = /CALL/i.test(contract_type ?? '');\n\n    // Gradient logic: when reset_time has come, we need to reapply gradient. For CALL, shade will be applied to the lowest barrier, for PUT - to the highest barrier\n    let y_axis_coordinates = Math.max(Number(entry_spot), Number(reset_barrier));\n    if (is_reset_call) {\n        y_axis_coordinates = Math.min(Number(entry_spot), Number(reset_barrier));\n    }\n\n    return (\n        <React.Fragment>\n            <ChartMarker\n                is_positioned_behind\n                marker_config={{\n                    ContentComponent: 'div',\n                    x: Number(reset_time),\n                    y: y_axis_coordinates,\n                }}\n                marker_content_props={{\n                    className: `sc-barrier_gradient sc-barrier_gradient--${is_reset_call ? 'to-bottom' : 'to-top'}`,\n                }}\n            />\n            <ChartMarker\n                is_positioned_behind\n                marker_config={{\n                    ContentComponent: 'div',\n                    x: Number(reset_time),\n                    y: Number(reset_barrier),\n                }}\n                marker_content_props={{ className: 'sc-reset_barrier' }}\n            />\n        </React.Fragment>\n    );\n};\n\nexport default React.memo(ResetContractChartElements);\n","import React from 'react';\nimport { usePrevious } from '@deriv/components';\nimport {\n    getDurationPeriod,\n    getDurationUnitText,\n    getEndTime,\n    getPlatformRedirect,\n    hasContractStarted,\n    isDtraderV2DesktopEnabled,\n    isDtraderV2MobileEnabled,\n} from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { ChartBottomWidgets, ChartTopWidgets } from './contract-replay-widget';\nimport ResetContractChartElements from 'Modules/SmartChart/Components/Markers/reset-contract-chart-elements';\nimport { SmartChart } from 'Modules/SmartChart';\nimport ChartMarker from 'Modules/SmartChart/Components/Markers/marker';\nimport { useDevice } from '@deriv-com/ui';\n\nconst ReplayChart = observer(\n    ({\n        is_dark_theme_prop,\n        is_accumulator_contract,\n        is_reset_contract,\n        is_vertical_scroll_disabled,\n    }: {\n        is_dark_theme_prop?: boolean;\n        is_accumulator_contract?: boolean;\n        is_reset_contract?: boolean;\n        is_vertical_scroll_disabled?: boolean;\n    }) => {\n        const trade = useTraderStore();\n        const { contract_replay, common, ui } = useStore();\n        const { isMobile } = useDevice();\n        const { contract_store, chart_state, chartStateChange, margin } = contract_replay;\n        const { contract_config, is_digit_contract, barriers_array, getContractsArray, markers_array, contract_info } =\n            contract_store;\n        const { underlying: symbol, audit_details, barrier_count } = contract_info;\n        const allow_scroll_to_epoch = chart_state === 'READY' || chart_state === 'SCROLL_TO_LEFT';\n        const { app_routing_history, current_language, is_socket_opened } = common;\n        const { is_chart_layout_default, is_chart_countdown_visible } = ui;\n        const { end_epoch, chart_type, start_epoch, granularity } = contract_config || {};\n        const is_dark_theme = is_dark_theme_prop || ui.is_dark_mode_on;\n        const is_sold_before_started =\n            !!contract_info?.is_forward_starting && !hasContractStarted(contract_info) && !!contract_info.is_sold;\n        /**\n         * TODO: remove forcing light theme once DBot supports dark theme\n         * DBot does not support for dark theme since till now,\n         * as a result, if any user come to report detail pages\n         * from DBot, we should force it to have light theme\n         */\n        const from_platform = getPlatformRedirect(app_routing_history);\n        const should_force_light_theme = from_platform.name === 'DBot';\n        const settings = {\n            language: current_language,\n            theme: is_dark_theme && !should_force_light_theme ? 'dark' : 'light',\n            position: is_chart_layout_default ? 'bottom' : 'left',\n            countdown: is_chart_countdown_visible,\n            assetInformation: false, // ui.is_chart_asset_info_visible,\n            isHighestLowestMarkerEnabled: false, // TODO: Pending UI\n        };\n        const scroll_to_epoch = allow_scroll_to_epoch && contract_config ? contract_config.scroll_to_epoch : undefined;\n        const all_ticks = audit_details ? audit_details.all_ticks : [];\n        const { wsForget, wsSubscribe, wsSendRequest, wsForgetStream } = trade;\n\n        const isBottomWidgetVisible = () => {\n            return !isMobile && is_digit_contract;\n        };\n\n        const getChartYAxisMargin = () => {\n            const chart_margin = {\n                top: isMobile ? 96 : 148,\n                bottom: isBottomWidgetVisible() ? 128 : 112,\n            };\n\n            if (isMobile) {\n                chart_margin.bottom = 48;\n                chart_margin.top = 48;\n            }\n\n            return chart_margin;\n        };\n        const prev_start_epoch = usePrevious(start_epoch);\n\n        const has_ended = !!getEndTime(contract_info);\n        const is_dtrader_v2_enabled =\n            isDtraderV2DesktopEnabled(ui.is_desktop) || isDtraderV2MobileEnabled(ui.is_mobile);\n\n        return (\n            <SmartChart\n                id='replay'\n                barriers={barriers_array}\n                bottomWidgets={isBottomWidgetVisible() ? ChartBottomWidgets : undefined}\n                chartControlsWidgets={null}\n                chartType={chart_type}\n                endEpoch={end_epoch}\n                margin={margin}\n                isMobile={isMobile}\n                enabledNavigationWidget={!isMobile}\n                enabledChartFooter={false}\n                granularity={granularity}\n                requestAPI={wsSendRequest}\n                requestForget={wsForget}\n                requestForgetStream={wsForgetStream}\n                crosshair={isMobile ? 0 : undefined}\n                maxTick={isMobile ? 8 : undefined}\n                requestSubscribe={wsSubscribe}\n                settings={settings}\n                startEpoch={is_sold_before_started ? contract_info.purchase_time : start_epoch}\n                scrollToEpoch={scroll_to_epoch}\n                stateChangeListener={chartStateChange}\n                symbol={symbol}\n                allTicks={all_ticks}\n                topWidgets={is_dtrader_v2_enabled ? () => <React.Fragment /> : ChartTopWidgets}\n                isConnectionOpened={is_socket_opened}\n                isStaticChart={\n                    // forcing chart reload when start_epoch changes to an earlier epoch for ACCU closed contract:\n                    !!is_accumulator_contract && !!end_epoch && Number(start_epoch) < Number(prev_start_epoch)\n                }\n                shouldFetchTradingTimes={false}\n                should_zoom_out_on_yaxis={is_accumulator_contract}\n                yAxisMargin={getChartYAxisMargin()}\n                anchorChartToLeft={isMobile}\n                shouldFetchTickHistory={\n                    getDurationUnitText(getDurationPeriod(contract_info)) !== 'seconds' ||\n                    contract_info.status === 'open'\n                }\n                shouldDrawTicksFromContractInfo={is_accumulator_contract}\n                contractInfo={contract_info}\n                contracts_array={getContractsArray()}\n                isLive={!has_ended}\n                isVerticalScrollEnabled={!is_vertical_scroll_disabled}\n                startWithDataFitMode={true}\n            >\n                {markers_array.map(({ content_config, marker_config, react_key, type }) => (\n                    <ChartMarker\n                        key={react_key}\n                        marker_config={marker_config}\n                        marker_content_props={content_config}\n                        is_positioned_before={(type === 'SPOT_ENTRY' || type === 'SPOT_EXIT') && barrier_count === 2}\n                    />\n                ))}\n                {is_reset_contract && contract_info?.reset_time && (\n                    <ResetContractChartElements contract_info={contract_info} />\n                )}\n            </SmartChart>\n        );\n    }\n);\nexport default ReplayChart;\n","import { useMemo } from 'react';\nimport { useStore } from '@deriv/stores';\n\nconst useFeatureFlags = () => {\n    const { feature_flags } = useStore();\n\n    const result = useMemo(() => {\n        const flags = feature_flags.data ?? {};\n\n        return Object.keys(flags).reduce(\n            (previous, current) => ({\n                ...previous,\n                // @ts-expect-error current key is always present in the object, Hence can ignore the TS error.\n                [`is_${current}_enabled`]: Boolean(flags[current]),\n            }),\n            {} as Record<`is_${keyof typeof flags}_enabled`, boolean>\n        );\n    }, [feature_flags.data]);\n\n    return result;\n};\nexport default useFeatureFlags;\n","import React from 'react';\nimport { formatDate, formatTime } from '@deriv/shared';\nimport { Text } from '@deriv/components';\n\ntype TContractAuditItem = {\n    additional_info?: React.ReactNode | string;\n    icon?: React.ReactNode;\n    id: string;\n    label?: string | React.ReactNode;\n    timestamp?: number;\n    value: React.ReactNode;\n    value2?: React.ReactNode;\n};\n\nconst ContractAuditItem = ({ additional_info, icon, id, label, timestamp, value, value2 }: TContractAuditItem) => (\n    <div id={id} className='contract-audit__grid' data-testid={id}>\n        {icon && <div className='contract-audit__icon'>{icon}</div>}\n        <div className='contract-audit__item'>\n            <Text size='xxxs' styles={{ lineHeight: 'unset' }} className='contract-audit__label'>\n                {label}\n            </Text>\n            <div className='contract-audit__value-wrapper'>\n                <Text weight='bold' size='xxs' line_height='m' color='prominent' className='contract-audit__value'>\n                    {value}\n                </Text>\n                {value2 && (\n                    <Text weight='bold' size='xxs' line_height='m' color='prominent' className='contract-audit__value2'>\n                        {value2}\n                    </Text>\n                )}\n                {additional_info && (\n                    <Text\n                        size='xxxs'\n                        line_height='s'\n                        color='less-prominent'\n                        className='contract-audit__timestamp-value'\n                    >\n                        {additional_info}\n                    </Text>\n                )}\n            </div>\n        </div>\n        {timestamp && (\n            <div className='contract-audit__timestamp'>\n                <Text size='xxxs' align='right' line_height='xs' className='contract-audit__timestamp-value'>\n                    {formatDate(timestamp)}\n                </Text>\n                <Text size='xxxs' align='right' line_height='xs' className='contract-audit__timestamp-value'>\n                    {formatTime(timestamp)}\n                </Text>\n            </div>\n        )}\n    </div>\n);\n\nexport default ContractAuditItem;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Money, Icon, ThemedScrollbars, Text } from '@deriv/components';\nimport { localize, Localize } from '@deriv/translations';\nimport {\n    addComma,\n    epochToMoment,\n    getCancellationPrice,\n    getCurrencyDisplayCode,\n    getLocalizedBasis,\n    formatResetDuration,\n    hasTwoBarriers,\n    isAccumulatorContract,\n    isAsiansContract,\n    isEndedBeforeCancellationExpired,\n    isMultiplierContract,\n    isSmartTraderContract,\n    isLookBacksContract,\n    isTicksContract,\n    isResetContract,\n    isTurbosContract,\n    isUserCancelled,\n    isUserSold,\n    isVanillaFxContract,\n    TContractInfo,\n    CONTRACT_TYPES,\n    toGMTFormat,\n} from '@deriv/shared';\nimport { Analytics } from '@deriv-com/analytics';\nimport { getBarrierLabel, getBarrierValue, isDigitType } from 'App/Components/Elements/PositionsDrawer/helpers';\nimport ContractAuditItem from './contract-audit-item';\nimport { isCancellationExpired } from 'Stores/Modules/Trading/Helpers/logic';\nimport { useDevice } from '@deriv-com/ui';\n\ntype TContractDetails = {\n    contract_end_time?: number;\n    contract_info: TContractInfo;\n    duration: number | string;\n    duration_unit: string;\n    exit_spot?: string;\n    is_vanilla?: boolean;\n};\n\nconst ContractDetails = ({\n    contract_end_time,\n    contract_info,\n    duration,\n    duration_unit,\n    exit_spot,\n    is_vanilla,\n}: TContractDetails) => {\n    const {\n        barrier,\n        commission,\n        contract_type,\n        currency,\n        date_start,\n        display_number_of_contracts,\n        entry_spot_display_value,\n        entry_tick_time,\n        exit_tick_time,\n        high_barrier,\n        is_sold,\n        low_barrier,\n        profit,\n        selected_tick,\n        status,\n        tick_count,\n        tick_passed,\n        transaction_ids: { buy, sell } = {},\n        reset_barrier,\n        reset_time,\n        underlying,\n    } = contract_info;\n    const { isMobile } = useDevice();\n\n    const is_profit = Number(profit) >= 0;\n    const cancellation_price = getCancellationPrice(contract_info);\n    const show_barrier = !is_vanilla && !isAccumulatorContract(contract_type) && !isSmartTraderContract(contract_type);\n    const show_duration = !isAccumulatorContract(contract_type) || !isNaN(Number(contract_end_time));\n    const show_payout_per_point = isTurbosContract(contract_type) || is_vanilla;\n    const ticks_label = Number(tick_count) < 2 ? localize('tick') : localize('ticks');\n    const show_strike_barrier = is_vanilla || isAsiansContract(contract_type) || isResetContract(contract_type);\n    const ticks_duration_text = isAccumulatorContract(contract_type)\n        ? `${tick_passed}/${tick_count} ${localize('ticks')}`\n        : `${tick_count} ${ticks_label}`;\n\n    const INDICATIVE_HIGH = 'H';\n    const INDICATIVE_LOW = 'L';\n\n    const additional_info = isResetContract(contract_type) ? (\n        <Localize\n            i18n_default_text='The reset time is {{ reset_time }}'\n            values={{\n                reset_time:\n                    Number(tick_count) > 0\n                        ? `${Math.floor(Number(tick_count) / 2)} ${ticks_label}`\n                        : formatResetDuration(contract_info),\n            }}\n        />\n    ) : (\n        ''\n    );\n\n    const createLookBacksMarker = (abbreviation?: string) => {\n        const low_spot_text = is_sold ? (\n            <Localize i18n_default_text='Low spot' />\n        ) : (\n            <Localize i18n_default_text='Indicative low spot' />\n        );\n        const high_spot_text = is_sold ? (\n            <Localize i18n_default_text='High spot' />\n        ) : (\n            <Localize i18n_default_text='Indicative high spot' />\n        );\n        return {\n            label: abbreviation === INDICATIVE_LOW ? low_spot_text : high_spot_text,\n            icon: (\n                <div className='lookbacks-marker__wrapper'>\n                    <Text color='colored-background' size='xxxs' className='lookbacks-marker__asset'>\n                        {abbreviation}\n                    </Text>\n                </div>\n            ),\n        };\n    };\n\n    const lookbacks_marker = createLookBacksMarker(\n        contract_type === CONTRACT_TYPES.LB_PUT ? INDICATIVE_HIGH : INDICATIVE_LOW\n    );\n\n    const vanilla_payout_text = isVanillaFxContract(contract_type, underlying)\n        ? getLocalizedBasis().payout_per_pip\n        : getLocalizedBasis().payout_per_point;\n\n    const getLabel = () => {\n        if (isUserSold(contract_info) && isEndedBeforeCancellationExpired(contract_info))\n            return localize('Deal cancellation');\n        if (isUserCancelled(contract_info)) return localize('Deal cancellation (executed)');\n        if (isCancellationExpired(contract_info)) return localize('Deal cancellation (expired)');\n        return localize('Deal cancellation (active)');\n    };\n\n    React.useEffect(() => {\n        Analytics.trackEvent('ce_reports_form', {\n            action: 'open_contract_details',\n            form_name: 'default',\n            form_source: 'deriv_trader',\n        });\n    }, []);\n\n    return (\n        <ThemedScrollbars is_bypassed={isMobile}>\n            <div className='contract-audit__tabs-content'>\n                <ContractAuditItem\n                    id='dt_id_label'\n                    icon={<Icon icon='IcContractId' size={24} />}\n                    label={localize('Reference ID')}\n                    value={localize('{{buy_value}} (Buy)', { buy_value: buy })}\n                    value2={sell ? localize('{{sell_value}} (Sell)', { sell_value: sell }) : undefined}\n                />\n                {isMultiplierContract(contract_type) ? (\n                    <React.Fragment>\n                        <ContractAuditItem\n                            id='dt_commission_label'\n                            icon={<Icon icon='IcContractCommission' size={24} />}\n                            label={localize('Commission')}\n                            value={<Money amount={commission ?? ''} currency={currency} show_currency />}\n                        />\n                        {!!cancellation_price && (\n                            <ContractAuditItem\n                                id='dt_cancellation_label'\n                                icon={<Icon icon='IcContractSafeguard' size={24} />}\n                                label={getLabel()}\n                                value={<Money amount={cancellation_price} currency={currency} />}\n                            />\n                        )}\n                    </React.Fragment>\n                ) : (\n                    <React.Fragment>\n                        {show_duration && (\n                            <ContractAuditItem\n                                id='dt_duration_label'\n                                icon={<Icon icon='IcContractDuration' size={24} />}\n                                label={localize('Duration')}\n                                value={Number(tick_count) > 0 ? ticks_duration_text : `${duration} ${duration_unit}`}\n                                additional_info={additional_info}\n                            />\n                        )}\n                        {show_strike_barrier && (\n                            <React.Fragment>\n                                <ContractAuditItem\n                                    id='dt_bt_label'\n                                    icon={<Icon icon='IcContractStrike' size={24} />}\n                                    label={getBarrierLabel(contract_info)}\n                                    value={\n                                        (isResetContract(contract_type)\n                                            ? addComma(entry_spot_display_value)\n                                            : getBarrierValue(contract_info)) || ' - '\n                                    }\n                                />\n                                {reset_time && (\n                                    <React.Fragment>\n                                        <ContractAuditItem\n                                            id='dt_reset_barrier_label'\n                                            icon={<Icon icon='IcContractResetBarrier' size={24} />}\n                                            label={localize('Reset barrier')}\n                                            value={reset_barrier ? addComma(reset_barrier) : ' - '}\n                                        />\n                                        <ContractAuditItem\n                                            id='dt_reset_time_label'\n                                            icon={<Icon icon='IcContractResetTime' size={24} />}\n                                            label={localize('Reset time')}\n                                            value={toGMTFormat(epochToMoment(reset_time))}\n                                        />\n                                    </React.Fragment>\n                                )}\n                            </React.Fragment>\n                        )}\n                        {show_barrier && (\n                            <ContractAuditItem\n                                id='dt_bt_label'\n                                icon={\n                                    isDigitType(contract_type) ? (\n                                        <Icon icon='IcContractTarget' size={24} />\n                                    ) : (\n                                        <Icon icon='IcContractBarrier' size={24} />\n                                    )\n                                }\n                                label={getBarrierLabel(contract_info)}\n                                value={getBarrierValue(contract_info) || ' - '}\n                            />\n                        )}\n                        {hasTwoBarriers(contract_type) && (\n                            <React.Fragment>\n                                {[high_barrier, low_barrier].map((barrier, index) => (\n                                    <ContractAuditItem\n                                        id={`dt_bt_label_${index + 1}`}\n                                        icon={<Icon icon='IcContractStrike' size={24} />}\n                                        key={barrier}\n                                        label={\n                                            high_barrier === barrier\n                                                ? localize('High barrier')\n                                                : localize('Low barrier')\n                                        }\n                                        value={barrier}\n                                    />\n                                ))}\n                            </React.Fragment>\n                        )}\n                        {show_payout_per_point && (\n                            <ContractAuditItem\n                                id='dt_bt_label'\n                                icon={<Icon icon='IcContractPayout' size={24} />}\n                                label={vanilla_payout_text}\n                                value={\n                                    display_number_of_contracts\n                                        ? `${display_number_of_contracts} ${getCurrencyDisplayCode(currency)}`\n                                        : ' - '\n                                }\n                            />\n                        )}\n                    </React.Fragment>\n                )}\n                {isTicksContract(contract_type) && (\n                    <ContractAuditItem\n                        id='dt_entry_spot_label'\n                        icon={\n                            <div className='contract-audit__selected-tick'>\n                                <div\n                                    className={classNames(\n                                        'contract-audit__selected-tick--marker',\n                                        `contract-audit__selected-tick--marker--${status}`\n                                    )}\n                                >\n                                    {selected_tick}\n                                </div>\n                            </div>\n                        }\n                        label={localize('Selected tick')}\n                        value={barrier || '----'}\n                    />\n                )}\n                <ContractAuditItem\n                    id='dt_start_time_label'\n                    icon={<Icon icon='IcContractStartTime' size={24} />}\n                    label={localize('Start time')}\n                    value={toGMTFormat(epochToMoment(Number(date_start))) || ' - '}\n                />\n                {isLookBacksContract(contract_type) && (\n                    <React.Fragment>\n                        {contract_type === CONTRACT_TYPES.LB_HIGH_LOW ? (\n                            <React.Fragment>\n                                {[high_barrier, low_barrier].map((barrier, index) => {\n                                    const high_low_marker = createLookBacksMarker(\n                                        index === 0 ? INDICATIVE_HIGH : INDICATIVE_LOW\n                                    );\n\n                                    return (\n                                        <ContractAuditItem\n                                            id={`dt_bt_label_${index + 1}`}\n                                            icon={high_low_marker.icon}\n                                            key={barrier}\n                                            label={high_low_marker.label}\n                                            value={barrier}\n                                        />\n                                    );\n                                })}\n                            </React.Fragment>\n                        ) : (\n                            <ContractAuditItem\n                                id='dt_indicative_high_spot'\n                                icon={lookbacks_marker.icon}\n                                label={lookbacks_marker.label}\n                                value={contract_info?.barrier}\n                            />\n                        )}\n                    </React.Fragment>\n                )}\n                {!isDigitType(contract_type) && (\n                    <ContractAuditItem\n                        id='dt_entry_spot_label'\n                        icon={<Icon icon='IcContractEntrySpot' size={24} />}\n                        label={localize('Entry spot')}\n                        value={entry_spot_display_value ? addComma(entry_spot_display_value) : ' - '}\n                        value2={entry_tick_time ? toGMTFormat(epochToMoment(entry_tick_time)) : ' - '}\n                        additional_info={\n                            isTicksContract(contract_type) &&\n                            localize('The entry spot is the first tick for High/Low Ticks.')\n                        }\n                    />\n                )}\n                {!isNaN(Number(exit_spot)) && (\n                    <ContractAuditItem\n                        id='dt_exit_spot_label'\n                        icon={<Icon icon='IcContractExitSpot' size={24} />}\n                        label={localize('Exit spot')}\n                        value={exit_spot ? addComma(exit_spot) : ' - '}\n                        value2={toGMTFormat(epochToMoment(Number(exit_tick_time))) || ' - '}\n                    />\n                )}\n                {!isNaN(Number(contract_end_time)) && (\n                    <ContractAuditItem\n                        id='dt_exit_time_label'\n                        icon={<Icon icon='IcContractExitTime' color={is_profit ? 'green' : 'red'} size={24} />}\n                        label={localize('Exit time')}\n                        value={toGMTFormat(epochToMoment(Number(contract_end_time))) || ' - '}\n                    />\n                )}\n            </div>\n        </ThemedScrollbars>\n    );\n};\n\nexport default ContractDetails;\n","import React from 'react';\nimport { Icon, Money, ThemedScrollbars, Text } from '@deriv/components';\nimport { isMobile, TContractStore } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport ContractAuditItem from './contract-audit-item';\n\ntype TContractHistory = {\n    currency?: string;\n    history?: [] | TContractStore['contract_update_history'];\n};\nconst ContractHistory = ({ currency, history = [] }: TContractHistory) => {\n    if (!history.length) {\n        return (\n            <div className='contract-audit__empty'>\n                <Icon icon='IcBox' size={48} color='secondary' />\n                <h4 className='contract-audit__empty-header'>{localize('No history')}</h4>\n                <Text align='center' line_height='s' color='less-prominent' size='xxs'>\n                    {localize('You have yet to update either take profit or stop loss')}\n                </Text>\n            </div>\n        );\n    }\n    return (\n        <ThemedScrollbars is_bypassed={isMobile()}>\n            <div className='contract-audit__tabs-content'>\n                {history.map((item, key) => (\n                    <ContractAuditItem\n                        key={`${key}-${item.order_date}`}\n                        id={`dt_history_label_${key}`}\n                        label={item.display_name}\n                        timestamp={Number(item?.order_date)}\n                        value={\n                            Math.abs(Number(item.order_amount)) !== 0 ? (\n                                <React.Fragment>\n                                    {Number(item.order_amount) < 0 && <strong>-</strong>}\n                                    <Money amount={item.order_amount} currency={currency} />\n                                    {item.value && (\n                                        <React.Fragment>\n                                            <br />\n                                            <span>({item.value})</span>\n                                        </React.Fragment>\n                                    )}\n                                </React.Fragment>\n                            ) : (\n                                localize('Cancelled')\n                            )\n                        }\n                    />\n                ))}\n            </div>\n        </ThemedScrollbars>\n    );\n};\n\nexport default ContractHistory;\n","import React from 'react';\nimport { Tabs } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { WS, TContractStore, TContractInfo } from '@deriv/shared';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport ContractDetails from './contract-details';\nimport ContractHistory from './contract-history';\n\ntype TContractUpdateHistory = TContractStore['contract_update_history'];\n\ntype TContractAudit = Partial<\n    Pick<ReturnType<typeof useTraderStore>, 'is_accumulator' | 'is_turbos' | 'is_multiplier' | 'is_vanilla'>\n> & {\n    contract_update_history: TContractUpdateHistory;\n    contract_end_time: number | undefined;\n    contract_info: TContractInfo;\n    current_language: string;\n    duration: string | number;\n    duration_unit: string;\n    exit_spot: string | undefined;\n    is_dark_theme: boolean;\n    is_history_tab_active: boolean;\n    is_open: boolean;\n    toggleHistoryTab: (state_change?: boolean) => void;\n};\n\ntype TResponse = {\n    contract_update_history: TContractUpdateHistory;\n};\n\nconst ContractAudit = ({\n    contract_update_history,\n    current_language,\n    is_accumulator,\n    is_history_tab_active,\n    is_multiplier,\n    is_turbos,\n    toggleHistoryTab,\n    ...props\n}: TContractAudit) => {\n    const { contract_id, currency } = props.contract_info;\n    const [update_history, setUpdateHistory] = React.useState<TContractUpdateHistory>([]);\n\n    const getSortedUpdateHistory = (history: TContractUpdateHistory) =>\n        history.sort((a, b) => Number(b?.order_date) - Number(a?.order_date));\n\n    const requestUpdatedHistory = React.useCallback((id?: number) => {\n        if (!id) return;\n        WS.contractUpdateHistory(id)\n            .then((response: TResponse) => {\n                setUpdateHistory(getSortedUpdateHistory(response.contract_update_history));\n            })\n            .catch(() => null);\n    }, []);\n\n    React.useEffect(() => {\n        if (!!contract_update_history.length && contract_update_history.length > update_history.length)\n            setUpdateHistory(getSortedUpdateHistory(contract_update_history));\n    }, [contract_update_history, update_history]);\n\n    React.useEffect(() => {\n        if (is_history_tab_active && current_language) requestUpdatedHistory(contract_id);\n    }, [contract_id, is_history_tab_active, current_language, requestUpdatedHistory]);\n\n    const onTabItemClick = (tab_index: number) => {\n        toggleHistoryTab(!!tab_index);\n        if (tab_index) requestUpdatedHistory(contract_id);\n    };\n\n    if (!is_multiplier && !is_accumulator && !is_turbos) {\n        return (\n            <div className='contract-audit__wrapper'>\n                <ContractDetails {...props} />\n            </div>\n        );\n    }\n    return (\n        <div className='contract-audit__wrapper'>\n            <Tabs top className='contract-audit__tabs' onTabItemClick={onTabItemClick}>\n                <div label={localize('Details')}>\n                    <ContractDetails {...props} />\n                </div>\n                <div label={localize('History')}>\n                    <ContractHistory currency={currency} history={update_history} />\n                </div>\n            </Tabs>\n        </div>\n    );\n};\n\nexport default ContractAudit;\n","import ContractAudit from './contract-audit';\n\nexport default ContractAudit;\n","import classNames from 'classnames';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { SwipeableWrapper } from '@deriv/components';\n\ntype TSwipeableContractAuditProps = React.PropsWithChildren<{\n    is_multiplier?: boolean;\n    onSwipedDown?: () => void;\n}>;\ntype TSwipeableContractDrawerProps = React.PropsWithChildren<{\n    onSwipedDown?: () => void;\n    onSwipedUp?: () => void;\n}>;\n\n/**\n * Swipeable components\n */\nexport const SwipeableContractAudit = ({ is_multiplier, children, onSwipedDown }: TSwipeableContractAuditProps) => {\n    const swipe_handlers = SwipeableWrapper.useSwipeable({\n        onSwipedDown,\n    });\n\n    const target_el = document.getElementById('dt_contract_drawer_audit');\n\n    if (!target_el) return null;\n\n    return ReactDOM.createPortal(\n        <div className='contract-audit-card'>\n            <div\n                {...swipe_handlers}\n                className={classNames('contract-audit-card__container', {\n                    'contract-audit-card__container--is-multiplier': is_multiplier,\n                })}\n            >\n                {children}\n            </div>\n        </div>,\n        target_el\n    );\n};\n\nexport const SwipeableContractDrawer = ({ children, onSwipedDown, onSwipedUp }: TSwipeableContractDrawerProps) => {\n    const swipe_handlers = SwipeableWrapper.useSwipeable({\n        onSwipedDown,\n        onSwipedUp,\n    });\n\n    return <div {...swipe_handlers}>{children}</div>;\n};\n","import React from 'react';\nimport { Text } from '@deriv/components';\n\nconst MarketClosedContractOverlay = ({ validation_error }: { validation_error?: string }) => (\n    <div className='contract-card__market-closed'>\n        <Text align='center' as='p' className='contract-card__market-closed__title' weight='bold'>\n            {validation_error}\n        </Text>\n    </div>\n);\n\nexport default MarketClosedContractOverlay;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Collapsible, ContractCard, useHover } from '@deriv/components';\nimport {\n    getEndTime,\n    getSymbolDisplayName,\n    getCardLabels,\n    getContractTypeDisplay,\n    getMarketInformation,\n    isCryptoContract,\n    isDesktop,\n    toMoment,\n} from '@deriv/shared';\nimport { SwipeableContractDrawer } from './swipeable-components';\nimport MarketClosedContractOverlay from './market-closed-contract-overlay';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { observer, useStore } from '@deriv/stores';\nimport { useDevice } from '@deriv-com/ui';\n\ntype TContractCardBodyProps = React.ComponentProps<typeof ContractCard.Body>;\ntype TContractCardFooterProps = React.ComponentProps<typeof ContractCard.Footer>;\ntype TSwipeableContractDrawerProps = React.ComponentProps<typeof SwipeableContractDrawer>;\n\ntype TContractDrawerCardProps = {\n    currency?: string;\n    is_collapsed: boolean;\n    is_market_closed: boolean;\n    result?: string;\n    server_time?: moment.Moment;\n    toggleContractAuditDrawer: () => void;\n} & Pick<\n    TContractCardBodyProps,\n    | 'contract_info'\n    | 'contract_update'\n    | 'is_accumulator'\n    | 'is_mobile'\n    | 'is_multiplier'\n    | 'is_turbos'\n    | 'is_vanilla'\n    | 'is_lookbacks'\n> &\n    Pick<TContractCardFooterProps, 'is_sell_requested' | 'onClickCancel' | 'onClickSell'> &\n    Pick<TSwipeableContractDrawerProps, 'onSwipedDown' | 'onSwipedUp'>;\n\nconst ContractDrawerCard = observer(\n    ({\n        contract_info,\n        contract_update,\n        currency = '',\n        is_accumulator,\n        is_collapsed,\n        is_market_closed,\n        is_mobile,\n        is_multiplier,\n        is_vanilla,\n        is_sell_requested,\n        is_turbos,\n        is_lookbacks,\n        onClickCancel,\n        onClickSell,\n        onSwipedUp,\n        onSwipedDown,\n        result,\n        server_time = toMoment(),\n        toggleContractAuditDrawer,\n    }: TContractDrawerCardProps) => {\n        const { ui, contract_trade } = useStore();\n        const { active_symbols } = useTraderStore();\n        const {\n            addToast,\n            current_focus,\n            removeToast,\n            should_show_cancellation_warning,\n            setCurrentFocus,\n            toggleCancellationWarning,\n        } = ui;\n        const { getContractById } = contract_trade;\n        const [hover_ref, should_hide_closed_overlay] = useHover<HTMLDivElement>();\n        const { isMobile } = useDevice();\n\n        const { profit, validation_error } = contract_info;\n        const is_sold = !!getEndTime(contract_info);\n        const display_name = getSymbolDisplayName(\n            active_symbols,\n            getMarketInformation(contract_info.shortcode || '').underlying\n        );\n\n        const is_crypto = isCryptoContract(contract_info.underlying);\n        const has_progress_slider = !is_multiplier || (is_crypto && is_multiplier);\n\n        const card_header = (\n            <ContractCard.Header\n                contract_info={contract_info}\n                display_name={display_name}\n                getCardLabels={getCardLabels}\n                getContractTypeDisplay={getContractTypeDisplay}\n                has_progress_slider={isDesktop() && has_progress_slider}\n                is_mobile={is_mobile}\n                is_sell_requested={is_sell_requested}\n                is_sold={is_sold}\n                onClickSell={onClickSell}\n                server_time={server_time}\n            />\n        );\n\n        const card_body = (\n            <ContractCard.Body\n                addToast={addToast}\n                contract_info={contract_info}\n                contract_update={contract_update}\n                currency={currency}\n                current_focus={current_focus ?? ''}\n                getCardLabels={getCardLabels}\n                getContractById={getContractById}\n                is_accumulator={is_accumulator}\n                is_mobile={is_mobile}\n                is_multiplier={is_multiplier}\n                is_sold={is_sold}\n                is_turbos={is_turbos}\n                is_vanilla={is_vanilla}\n                is_lookbacks={is_lookbacks}\n                has_progress_slider={is_mobile && has_progress_slider}\n                removeToast={removeToast}\n                server_time={server_time}\n                setCurrentFocus={setCurrentFocus}\n                should_show_cancellation_warning={should_show_cancellation_warning}\n                toggleCancellationWarning={toggleCancellationWarning}\n            />\n        );\n\n        const card_footer = (\n            <ContractCard.Footer\n                contract_info={contract_info}\n                getCardLabels={getCardLabels}\n                is_multiplier={is_multiplier}\n                is_lookbacks={is_lookbacks}\n                is_sell_requested={is_sell_requested}\n                onClickCancel={onClickCancel}\n                onClickSell={onClickSell}\n                server_time={server_time}\n            />\n        );\n\n        const contract_el = (\n            <React.Fragment>\n                {card_header}\n                {card_body}\n            </React.Fragment>\n        );\n\n        const contract_card = (\n            <ContractCard\n                contract_info={contract_info}\n                getCardLabels={getCardLabels}\n                is_multiplier={is_multiplier}\n                profit_loss={Number(profit)}\n                should_show_result_overlay={false}\n            >\n                <div\n                    className={classNames('dc-contract-card', {\n                        'dc-contract-card--green': Number(profit) > 0 && !result,\n                        'dc-contract-card--red': Number(profit) < 0 && !result,\n                        'contract-card__market-closed--disabled': is_market_closed && should_hide_closed_overlay,\n                    })}\n                    ref={hover_ref}\n                >\n                    {is_market_closed && !getEndTime(contract_info) && (\n                        <div\n                            className={classNames({\n                                'contract-card__market-closed--hidden': isDesktop() && should_hide_closed_overlay,\n                            })}\n                        >\n                            <MarketClosedContractOverlay validation_error={validation_error} />\n                        </div>\n                    )}\n                    {contract_el}\n                    {card_footer}\n                </div>\n            </ContractCard>\n        );\n\n        if (isMobile) {\n            return (\n                <SwipeableContractDrawer onSwipedUp={onSwipedUp} onSwipedDown={onSwipedDown}>\n                    <Collapsible.ArrowButton onClick={toggleContractAuditDrawer} is_collapsed={is_collapsed} />\n                    {contract_card}\n                </SwipeableContractDrawer>\n            );\n        }\n\n        return contract_card;\n    }\n);\n\nexport default ContractDrawerCard;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { RouteComponentProps, withRouter } from 'react-router';\nimport { CSSTransition } from 'react-transition-group';\nimport { Div100vhContainer } from '@deriv/components';\nimport {\n    isEmptyObject,\n    getDurationPeriod,\n    getDurationTime,\n    getDurationUnitText,\n    getEndTime,\n    mobileOSDetect,\n    TContractStore,\n    TContractInfo,\n} from '@deriv/shared';\nimport ContractAudit from 'App/Components/Elements/ContractAudit';\nimport { PositionsCardLoader } from 'App/Components/Elements/ContentLoader';\nimport ContractDrawerCard from './contract-drawer-card';\nimport { SwipeableContractAudit } from './swipeable-components';\nimport { observer, useStore } from '@deriv/stores';\nimport { useDevice } from '@deriv-com/ui';\n\ntype TContractDrawerCardProps = React.ComponentProps<typeof ContractDrawerCard>;\ntype TContractDrawerProps = RouteComponentProps & {\n    contract_info?: TContractInfo;\n    contract_update_history: TContractStore['contract_update_history'];\n    is_dark_theme: boolean;\n    toggleHistoryTab: (state_change?: boolean) => void;\n} & Pick<\n        TContractDrawerCardProps,\n        | 'contract_update'\n        | 'is_accumulator'\n        | 'is_market_closed'\n        | 'is_multiplier'\n        | 'is_sell_requested'\n        | 'is_lookbacks'\n        | 'is_turbos'\n        | 'is_vanilla'\n        | 'onClickCancel'\n        | 'onClickSell'\n    >;\n\nconst PAGE_BOTTOM_MARGIN = ['iOS', 'unknown'].includes(mobileOSDetect()) ? 0 : 13;\n\nconst ContractDrawer = observer(\n    ({\n        contract_info = {},\n        contract_update,\n        contract_update_history,\n        is_accumulator,\n        is_sell_requested,\n        is_dark_theme,\n        is_market_closed,\n        is_multiplier,\n        is_turbos,\n        is_vanilla,\n        is_lookbacks,\n        onClickCancel,\n        onClickSell,\n        toggleHistoryTab,\n    }: TContractDrawerProps) => {\n        const { common, ui } = useStore();\n        const { current_language, is_language_changing, server_time } = common;\n        const { is_history_tab_active } = ui;\n        const { currency, exit_tick_display_value } = contract_info;\n        const contract_drawer_ref = React.useRef<HTMLDivElement>(null);\n        const contract_drawer_card_ref = React.useRef<HTMLDivElement>(null);\n        const [should_show_contract_audit, setShouldShowContractAudit] = React.useState(false);\n        const { isMobile } = useDevice();\n\n        const contract_audit = (\n            <ContractAudit\n                contract_end_time={getEndTime(contract_info)}\n                contract_info={contract_info}\n                contract_update_history={contract_update_history}\n                duration_unit={getDurationUnitText(getDurationPeriod(contract_info)) ?? ''}\n                duration={getDurationTime(contract_info)}\n                exit_spot={exit_tick_display_value}\n                is_accumulator={is_accumulator}\n                is_dark_theme={is_dark_theme}\n                is_history_tab_active={is_history_tab_active}\n                is_multiplier={is_multiplier}\n                is_open\n                is_turbos={is_turbos}\n                is_vanilla={is_vanilla}\n                current_language={is_language_changing ? '' : current_language}\n                toggleHistoryTab={toggleHistoryTab}\n            />\n        );\n\n        if (isEmptyObject(contract_info)) return null;\n\n        // For non-binary contract, the status is always null, so we check for is_expired in contract_info\n        const fallback_result = contract_info.status || contract_info.is_expired;\n\n        const body_content = fallback_result ? (\n            <React.Fragment>\n                <ContractDrawerCard\n                    contract_info={contract_info}\n                    contract_update={contract_update}\n                    currency={currency}\n                    is_accumulator={is_accumulator}\n                    is_mobile={isMobile}\n                    is_market_closed={is_market_closed}\n                    is_multiplier={is_multiplier}\n                    is_turbos={is_turbos}\n                    is_vanilla={is_vanilla}\n                    is_sell_requested={is_sell_requested}\n                    is_lookbacks={is_lookbacks}\n                    is_collapsed={should_show_contract_audit}\n                    onClickCancel={onClickCancel}\n                    onClickSell={onClickSell}\n                    onSwipedUp={() => setShouldShowContractAudit(true)}\n                    onSwipedDown={() => setShouldShowContractAudit(false)}\n                    server_time={server_time}\n                    toggleContractAuditDrawer={() => setShouldShowContractAudit(!should_show_contract_audit)}\n                />\n                {!isMobile && contract_audit}\n            </React.Fragment>\n        ) : (\n            <div className='contract-card'>\n                <PositionsCardLoader speed={2} />\n            </div>\n        );\n\n        const contract_drawer = (\n            <CSSTransition in={should_show_contract_audit} timeout={250} classNames='contract-drawer__transition'>\n                <div\n                    id='dt_contract_drawer'\n                    className={classNames('contract-drawer', {\n                        'contract-drawer--with-collapsible-btn': !!getEndTime(contract_info) || isMobile,\n                        'contract-drawer--is-multiplier': is_multiplier && isMobile,\n                        'contract-drawer--is-multiplier-sold': is_multiplier && isMobile && getEndTime(contract_info),\n                    })}\n                    style={{\n                        transform: (should_show_contract_audit &&\n                            contract_drawer_ref.current &&\n                            contract_drawer_card_ref.current &&\n                            `translateY(calc(${contract_drawer_card_ref.current.clientHeight}px - ${contract_drawer_ref.current.clientHeight}px + ${PAGE_BOTTOM_MARGIN}px))`) as React.CSSProperties['transform'],\n                    }}\n                    ref={contract_drawer_ref}\n                >\n                    <div className='contract-drawer__body' ref={contract_drawer_card_ref}>\n                        {body_content}\n                    </div>\n                    {should_show_contract_audit && isMobile && (\n                        <div id='dt_contract_drawer_audit'>\n                            <SwipeableContractAudit is_multiplier={is_multiplier}>\n                                {contract_audit}\n                            </SwipeableContractAudit>\n                        </div>\n                    )}\n                </div>\n            </CSSTransition>\n        );\n\n        if (isMobile) {\n            return (\n                <div\n                    style={{\n                        height: contract_drawer_card_ref.current?.clientHeight,\n                    }}\n                >\n                    <Div100vhContainer height_offset='40px' is_bypassed={!contract_drawer_card_ref.current}>\n                        {contract_drawer}\n                    </Div100vhContainer>\n                </div>\n            );\n        }\n\n        return contract_drawer;\n    }\n);\n\nexport default withRouter(ContractDrawer);\n","import ContractDrawer from './contract-drawer';\n\nexport default ContractDrawer;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { Div100vhContainer, PageOverlay, SwipeableWrapper, FadeWrapper } from '@deriv/components';\nimport {\n    getContractTypeFeatureFlag,\n    isAccumulatorContract,\n    isEmptyObject,\n    isHighLow,\n    isMultiplierContract,\n    isTurbosContract,\n    isVanillaContract,\n    isResetContract,\n    isLookBacksContract,\n} from '@deriv/shared';\nimport { Localize } from '@deriv/translations';\nimport { useFeatureFlags } from '@deriv/hooks';\nimport { useDevice } from '@deriv-com/ui';\nimport ChartLoader from 'App/Components/Elements/chart-loader';\nimport ContractDrawer from 'App/Components/Elements/ContractDrawer';\nimport { DigitsWidget, InfoBoxWidget } from './contract-replay-widget';\nimport ReplayChart from './replay-chart';\nimport { observer, useStore } from '@deriv/stores';\n\ntype TLocationState = { from_table_row: boolean };\n\nconst ContractReplay = observer(({ contract_id }: { contract_id: number }) => {\n    const { state } = useLocation<TLocationState>();\n    const { common, contract_replay, ui } = useStore();\n    const [swipe_index, setSwipeIndex] = React.useState(0);\n    const { contract_store } = contract_replay;\n    const { is_market_closed, is_sell_requested, onClickCancel, onClickSell, onMount, onUnmount, is_chart_loading } =\n        contract_replay;\n    const { contract_info, contract_update, contract_update_history, is_digit_contract } = contract_store;\n    const { routeBackInApp } = common;\n    const {\n        is_dark_mode_on: is_dark_theme,\n        is_mobile,\n        notification_messages_ui: NotificationMessages,\n        toggleHistoryTab,\n    } = ui;\n    const trade_type_feature_flag =\n        contract_info.shortcode &&\n        getContractTypeFeatureFlag(contract_info.contract_type ?? '', isHighLow(contract_info));\n    const is_trade_type_disabled =\n        useFeatureFlags()[`is_${trade_type_feature_flag}_enabled` as keyof ReturnType<typeof useFeatureFlags>] ===\n        false;\n    const [is_visible, setIsVisible] = React.useState(false);\n    const history = useHistory();\n    const { isMobile } = useDevice();\n\n    React.useEffect(() => {\n        const url_array = /[^/]*$/.exec(location.pathname);\n        const url_contract_id = url_array ? +url_array[0] : undefined;\n        onMount(contract_id || url_contract_id);\n        setIsVisible(true);\n\n        return () => {\n            setIsVisible(false);\n            onUnmount();\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [contract_id, location, onMount, onUnmount]);\n\n    const onClickClose = React.useCallback(() => {\n        setIsVisible(false);\n        const is_from_table_row = !isEmptyObject(state) ? state.from_table_row : false;\n        return is_from_table_row ? history.goBack() : routeBackInApp(history);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [history, routeBackInApp]);\n\n    React.useEffect(() => {\n        // don't open Contract details page for trade types with disabled feature flag:\n        if (is_trade_type_disabled && is_visible) {\n            onClickClose();\n        }\n    }, [is_trade_type_disabled, is_visible, onClickClose]);\n\n    const onChangeSwipeableIndex = (index: number) => {\n        setSwipeIndex(index);\n    };\n\n    if (!contract_info.underlying) return null;\n\n    const is_accumulator = isAccumulatorContract(contract_info.contract_type);\n    const is_multiplier = isMultiplierContract(contract_info.contract_type);\n    const is_turbos = isTurbosContract(contract_info.contract_type);\n    const is_vanilla = isVanillaContract(contract_info.contract_type);\n    const is_reset_contract = isResetContract(contract_info.contract_type);\n    const is_lookbacks = isLookBacksContract(contract_info.contract_type);\n\n    const contract_drawer_el = (\n        <ContractDrawer\n            contract_info={contract_info}\n            contract_update={contract_update}\n            contract_update_history={contract_update_history}\n            is_accumulator={is_accumulator}\n            is_dark_theme={is_dark_theme}\n            is_market_closed={is_market_closed}\n            is_multiplier={is_multiplier}\n            is_turbos={is_turbos}\n            is_sell_requested={is_sell_requested}\n            is_vanilla={is_vanilla}\n            is_lookbacks={is_lookbacks}\n            onClickCancel={onClickCancel}\n            onClickSell={onClickSell}\n            toggleHistoryTab={toggleHistoryTab}\n        />\n    );\n\n    if (isMobile) {\n        return (\n            <FadeWrapper\n                is_visible={is_visible}\n                className='contract-details-wrapper'\n                keyname='contract-details-wrapper'\n            >\n                <NotificationMessages />\n                <PageOverlay\n                    id='dt_contract_replay_container'\n                    header={<Localize i18n_default_text='Contract details' />}\n                    onClickClose={onClickClose}\n                >\n                    <Div100vhContainer\n                        className='trade-container__replay'\n                        height_offset='80px' // * 80px = header + contract details header heights in mobile\n                    >\n                        <div\n                            className={classNames('contract-drawer__mobile-wrapper', {\n                                'contract-drawer__mobile-wrapper--is-multiplier': is_mobile && is_multiplier,\n                            })}\n                            data-testid='dt_contract_drawer_mobile_wrapper'\n                        >\n                            {contract_drawer_el}\n                        </div>\n                        <React.Suspense fallback={<div />}>\n                            <div\n                                className={classNames('replay-chart__container', {\n                                    'replay-chart__container--is-multiplier': is_mobile && is_multiplier,\n                                    'vanilla-trade-chart': is_vanilla,\n                                })}\n                                data-testid='dt_replay_chart_container'\n                            >\n                                <ChartLoader is_dark={is_dark_theme} is_visible={is_chart_loading} />\n                                {is_digit_contract ? (\n                                    <React.Fragment>\n                                        <InfoBoxWidget />\n                                        <SwipeableWrapper\n                                            className='replay-chart__container-swipeable-wrapper'\n                                            data-testid='dt_replay_chart_swipeable_wrapper'\n                                            is_swipe_disabled={swipe_index === 1}\n                                            onChange={\n                                                onChangeSwipeableIndex as React.ComponentProps<\n                                                    typeof SwipeableWrapper\n                                                >['onChange']\n                                            }\n                                        >\n                                            <DigitsWidget />\n                                            <ReplayChart />\n                                        </SwipeableWrapper>\n                                    </React.Fragment>\n                                ) : (\n                                    <ReplayChart\n                                        is_dark_theme_prop={is_dark_theme}\n                                        is_accumulator_contract={is_accumulator}\n                                        is_reset_contract={is_reset_contract}\n                                    />\n                                )}\n                            </div>\n                        </React.Suspense>\n                    </Div100vhContainer>\n                </PageOverlay>\n            </FadeWrapper>\n        );\n    }\n\n    return (\n        <FadeWrapper is_visible={is_visible} className='contract-details-wrapper' keyname='contract-details-wrapper'>\n            <PageOverlay\n                id='dt_contract_replay_container'\n                header={<Localize i18n_default_text='Contract details' />}\n                onClickClose={onClickClose}\n            >\n                <div className='trade-container__replay'>\n                    {contract_drawer_el}\n                    <React.Suspense fallback={<div />}>\n                        <div\n                            className={classNames('replay-chart__container', {\n                                'replay-chart__container--is-multiplier': is_mobile && is_multiplier,\n                                'vanilla-trade-chart': is_vanilla,\n                            })}\n                            data-testid='dt_replay_chart_container'\n                        >\n                            <NotificationMessages />\n                            <ChartLoader is_dark={is_dark_theme} is_visible={is_chart_loading} />\n                            <ReplayChart\n                                is_dark_theme_prop={is_dark_theme}\n                                is_accumulator_contract={is_accumulator}\n                                is_reset_contract={is_reset_contract}\n                            />\n                        </div>\n                    </React.Suspense>\n                </div>\n            </PageOverlay>\n        </FadeWrapper>\n    );\n});\n\nexport default ContractReplay;\n","import React from 'react';\nimport { Redirect, withRouter } from 'react-router';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { CSSTransition } from 'react-transition-group';\nimport { routes } from '@deriv/shared';\nimport ErrorComponent from 'App/Components/Elements/Errors';\nimport { localize } from '@deriv/translations';\nimport ContractReplay from './contract-replay';\nimport { observer, useStore } from '@deriv/stores';\n\ntype TContractParams = { contract_id: string };\ntype TContract = RouteComponentProps<TContractParams>;\n\nconst dialog_errors = ['GetProposalFailure', 'ContractValidationError'];\n\nconst Contract = observer(({ match, history }: TContract) => {\n    const { contract_replay } = useStore();\n    const {\n        removeErrorMessage,\n        error_message,\n        error_code,\n        has_error,\n        removeAccountSwitcherListener: onUnmount,\n        setAccountSwitcherListener: onMount,\n    } = contract_replay;\n    React.useEffect(() => {\n        onMount(+match.params.contract_id, history);\n\n        return () => {\n            removeErrorMessage();\n            onUnmount();\n        };\n    }, [onMount, onUnmount, removeErrorMessage, history, match.params.contract_id]);\n\n    if (isNaN(Number(match.params.contract_id))) {\n        return <Redirect to='/404' />;\n    }\n\n    return (\n        <React.Fragment>\n            {has_error ? (\n                <ErrorComponent\n                    data-testid='dt_error_component'\n                    message={error_message}\n                    is_dialog={dialog_errors.includes(error_code ?? '')}\n                    redirect_label={\n                        dialog_errors.includes(error_code ?? '') ? localize('Ok') : localize('Go back to trading')\n                    }\n                    redirectOnClick={() => history.push(routes.trade)}\n                    should_show_refresh={false}\n                />\n            ) : (\n                <CSSTransition\n                    in={!has_error}\n                    timeout={400}\n                    classNames={{\n                        enter: 'contract--enter',\n                        enterDone: 'contract--enter-done',\n                        exit: 'contract--exit',\n                    }}\n                    unmountOnExit\n                >\n                    <ContractReplay contract_id={+match.params.contract_id} key={+match.params.contract_id} />\n                </CSSTransition>\n            )}\n        </React.Fragment>\n    );\n});\n\nexport default withRouter(Contract);\n","import Contract from './Containers/contract';\n\nexport default Contract;\n","import { TContractInfo } from '@deriv/shared';\nimport ServerTime from '_common/base/server_time';\n\nexport const isCancellationExpired = (contract_info: TContractInfo) =>\n    !!contract_info.cancellation?.date_expiry &&\n    contract_info.cancellation.date_expiry < (ServerTime.get() as moment.Moment).unix();\n"],"names":["_ref","header","message","is_dialog","redirect_label","redirectOnClick","_ref$should_show_refr","should_show_refresh","refresh_message","localize","React","Dialog","title","is_visible","confirm_button_text","onConfirm","location","reload","PageErrorContainer","error_header","error_messages","redirect_urls","routes","trade","redirect_labels","buttonOnClick","observer","contract_info","is_mobile","useStore","ui","max_longcode_length","_React$useState2","_slicedToArray","is_collapsed","setIsCollapsed","handleToggle","e","preventDefault","type","key","className","Icon","icon","size","onClick","undefined","onKeyDown","Text","classNames","isTabletOs","longcode","length","as","href","Localize","i18n_default_text","Modal","is_open","has_close_icon","should_close_on_click_outside","small","toggleModal","Body","Footer","Button","primary","large","_ref$message","onClickClose","width","height","viewBox","fill","fillRule","cx","cy","r","d","error_message","removeError","is_ready","SlideIn","keyname","contract_type","InfoBoxLongcode","ContractError","DigitsWidget","_useStore","contract_replay","contract_store","digits_info","display_status","is_digit_contract","is_ended","Digits","InfoBoxWidget","removeErrorMessage","InfoBox","ChartTopWidgets","TopWidgets","is_title_enabled","ChartBottomWidgets","BottomWidgets","Widget","ResetContractChartElements","_ref2","entry_spot","reset_time","reset_barrier","is_reset_call","test","y_axis_coordinates","Math","max","Number","min","ChartMarker","is_positioned_behind","marker_config","ContentComponent","x","y","marker_content_props","concat","chart_margin","is_dark_theme_prop","is_accumulator_contract","is_reset_contract","is_vertical_scroll_disabled","useTraderStore","common","isMobile","useDevice","chart_state","chartStateChange","margin","contract_config","barriers_array","getContractsArray","markers_array","symbol","underlying","audit_details","barrier_count","allow_scroll_to_epoch","app_routing_history","current_language","is_socket_opened","is_chart_layout_default","is_chart_countdown_visible","end_epoch","chart_type","start_epoch","granularity","is_dark_theme","is_dark_mode_on","is_sold_before_started","is_forward_starting","hasContractStarted","is_sold","should_force_light_theme","getPlatformRedirect","name","settings","language","theme","position","countdown","assetInformation","isHighestLowestMarkerEnabled","scroll_to_epoch","all_ticks","wsForget","wsSubscribe","wsSendRequest","wsForgetStream","isBottomWidgetVisible","prev_start_epoch","usePrevious","has_ended","getEndTime","is_dtrader_v2_enabled","isDtraderV2DesktopEnabled","is_desktop","isDtraderV2MobileEnabled","SmartChart","id","barriers","bottomWidgets","chartControlsWidgets","chartType","endEpoch","enabledNavigationWidget","enabledChartFooter","requestAPI","requestForget","requestForgetStream","crosshair","maxTick","requestSubscribe","startEpoch","purchase_time","scrollToEpoch","stateChangeListener","allTicks","topWidgets","isConnectionOpened","isStaticChart","shouldFetchTradingTimes","should_zoom_out_on_yaxis","yAxisMargin","top","bottom","anchorChartToLeft","shouldFetchTickHistory","getDurationUnitText","getDurationPeriod","status","shouldDrawTicksFromContractInfo","contractInfo","contracts_array","isLive","isVerticalScrollEnabled","startWithDataFitMode","map","_ref3","content_config","react_key","is_positioned_before","feature_flags","useMemo","_feature_flags$data","flags","data","Object","keys","reduce","previous","current","_objectSpread","_defineProperty","Boolean","additional_info","label","timestamp","value","value2","styles","lineHeight","weight","line_height","color","align","formatDate","formatTime","contract_end_time","duration","duration_unit","exit_spot","is_vanilla","barrier","commission","currency","date_start","display_number_of_contracts","entry_spot_display_value","entry_tick_time","exit_tick_time","high_barrier","low_barrier","profit","selected_tick","tick_count","tick_passed","_contract_info$transa","transaction_ids","_contract_info$transa2","buy","sell","is_profit","cancellation_price","getCancellationPrice","show_barrier","isAccumulatorContract","isSmartTraderContract","show_duration","isNaN","show_payout_per_point","isTurbosContract","ticks_label","show_strike_barrier","isAsiansContract","isResetContract","ticks_duration_text","values","floor","formatResetDuration","createLookBacksMarker","abbreviation","low_spot_text","high_spot_text","lookbacks_marker","CONTRACT_TYPES","LB_PUT","vanilla_payout_text","isVanillaFxContract","getLocalizedBasis","payout_per_pip","payout_per_point","Analytics","trackEvent","action","form_name","form_source","ThemedScrollbars","is_bypassed","ContractAuditItem","buy_value","sell_value","isMultiplierContract","Money","amount","show_currency","isUserSold","isEndedBeforeCancellationExpired","isUserCancelled","isCancellationExpired","getBarrierLabel","addComma","getBarrierValue","toGMTFormat","epochToMoment","isDigitType","hasTwoBarriers","index","getCurrencyDisplayCode","isTicksContract","isLookBacksContract","LB_HIGH_LOW","high_low_marker","_ref$history","history","item","order_date","display_name","abs","order_amount","contract_update_history","is_accumulator","is_history_tab_active","is_multiplier","is_turbos","toggleHistoryTab","props","_objectWithoutProperties","_excluded","_props$contract_info","contract_id","update_history","setUpdateHistory","getSortedUpdateHistory","sort","a","b","requestUpdatedHistory","WS","contractUpdateHistory","then","response","Tabs","onTabItemClick","tab_index","ContractDetails","ContractHistory","SwipeableContractAudit","children","onSwipedDown","swipe_handlers","SwipeableWrapper","useSwipeable","target_el","document","getElementById","ReactDOM","_extends","SwipeableContractDrawer","onSwipedUp","validation_error","contract_update","_ref$currency","is_market_closed","is_sell_requested","is_lookbacks","onClickCancel","onClickSell","result","_ref$server_time","server_time","toMoment","toggleContractAuditDrawer","contract_trade","active_symbols","addToast","current_focus","removeToast","should_show_cancellation_warning","setCurrentFocus","toggleCancellationWarning","getContractById","_useHover2","useHover","hover_ref","should_hide_closed_overlay","getSymbolDisplayName","getMarketInformation","shortcode","is_crypto","isCryptoContract","has_progress_slider","card_header","ContractCard","Header","getCardLabels","getContractTypeDisplay","isDesktop","card_body","card_footer","contract_el","contract_card","profit_loss","should_show_result_overlay","ref","MarketClosedContractOverlay","Collapsible","ArrowButton","PAGE_BOTTOM_MARGIN","includes","mobileOSDetect","ContractDrawer","_getDurationUnitText","_ref$contract_info","is_language_changing","exit_tick_display_value","contract_drawer_ref","contract_drawer_card_ref","should_show_contract_audit","setShouldShowContractAudit","contract_audit","ContractAudit","getDurationTime","isEmptyObject","_contract_drawer_card","body_content","is_expired","ContractDrawerCard","PositionsCardLoader","speed","contract_drawer","CSSTransition","in","timeout","style","transform","clientHeight","Div100vhContainer","height_offset","withRouter","_contract_info$contra","state","useLocation","swipe_index","setSwipeIndex","onMount","onUnmount","is_chart_loading","routeBackInApp","NotificationMessages","notification_messages_ui","trade_type_feature_flag","getContractTypeFeatureFlag","isHighLow","is_trade_type_disabled","useFeatureFlags","_React$useState4","setIsVisible","useHistory","url_array","exec","pathname","url_contract_id","from_table_row","goBack","isVanillaContract","contract_drawer_el","FadeWrapper","PageOverlay","fallback","ChartLoader","is_dark","is_swipe_disabled","onChange","ReplayChart","dialog_errors","Contract","match","error_code","has_error","removeAccountSwitcherListener","setAccountSwitcherListener","params","Redirect","to","ErrorComponent","push","enter","enterDone","exit","unmountOnExit","ContractReplay","_contract_info$cancel","cancellation","date_expiry","ServerTime","get","unix"],"sourceRoot":""}