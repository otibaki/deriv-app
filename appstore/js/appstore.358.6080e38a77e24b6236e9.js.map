{"version":3,"file":"appstore/js/appstore.358.6080e38a77e24b6236e9.js","mappings":"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","sources":["webpack://@deriv/appstore/@deriv/account/webpack/universalModuleDefinition","webpack://@deriv/appstore/@deriv/node_modules/object-assign/index.js","webpack://@deriv/appstore/@deriv/node_modules/react/cjs/react-jsx-runtime.production.min.js","webpack://@deriv/appstore/@deriv/node_modules/react/jsx-runtime.js","webpack://@deriv/appstore/@deriv/account/external umd \"@deriv-com/translations\"","webpack://@deriv/appstore/@deriv/account/external umd \"@deriv/shared\"","webpack://@deriv/appstore/@deriv/account/external umd \"react\"","webpack://@deriv/appstore/@deriv/account/webpack/bootstrap","webpack://@deriv/appstore/@deriv/account/webpack/runtime/compat get default export","webpack://@deriv/appstore/@deriv/account/webpack/runtime/define property getters","webpack://@deriv/appstore/@deriv/account/webpack/runtime/hasOwnProperty shorthand","webpack://@deriv/appstore/@deriv/account/Configs/get-status-badge-config.tsx","webpack://@deriv/appstore/../account/src/Configs/get-mt5-status-badge-config.tsx","webpack://@deriv/appstore/./src/assets/svgs/currency/index.tsx","webpack://@deriv/appstore/./src/components/containers/currency-switcher-container.tsx","webpack://@deriv/appstore/./src/components/currency-switcher-card/demo/demo-account-card.tsx","webpack://@deriv/appstore/./src/components/pre-loader/currency-switcher-loader.tsx","webpack://@deriv/appstore/./src/components/currency-switcher-card/real/real-account-card.tsx","webpack://@deriv/appstore/./src/components/currency-switcher-card/real/real-account-switcher.tsx","webpack://@deriv/appstore/./src/components/currency-switcher-card/index.tsx","webpack://@deriv/appstore/./src/components/containers/grid-container.tsx","webpack://@deriv/appstore/./src/components/containers/listing-container.tsx","webpack://@deriv/appstore/./src/components/trade-button/trade-button.tsx","webpack://@deriv/appstore/./src/components/trade-button/index.ts","webpack://@deriv/appstore/./src/components/multi-action-button-group/multi-action-button-group.tsx","webpack://@deriv/appstore/./src/components/multi-action-button-group/index.ts","webpack://@deriv/appstore/./src/components/containers/trading-app-card-actions.tsx","webpack://@deriv/appstore/./src/components/modals/open-positions-svg-modal/open-positions-svg-modal.tsx","webpack://@deriv/appstore/./src/components/modals/open-positions-svg-modal/index.ts","webpack://@deriv/appstore/./src/components/containers/trading-app-card.tsx","webpack://@deriv/appstore/./src/components/disclaimer/disclaimer.tsx","webpack://@deriv/appstore/./src/components/disclaimer/index.ts","webpack://@deriv/appstore/./src/components/elements/cfds-description/cfds-description.tsx","webpack://@deriv/appstore/./src/components/elements/cfds-description/index.tsx","webpack://@deriv/appstore/./src/components/elements/options-description/options-description.tsx","webpack://@deriv/appstore/./src/components/elements/options-description/index.tsx","webpack://@deriv/appstore/./src/components/elements/text/balance-text.tsx","webpack://@deriv/appstore/./src/constants/platform-config.ts","webpack://@deriv/appstore/./src/constants/utils.ts","webpack://@deriv/appstore/./src/helpers/account-helper.ts","webpack://@deriv/appstore/./src/helpers/total-assets-helper.ts","webpack://@deriv/appstore/./src/helpers/trustpilot-helper.ts","webpack://@deriv/appstore/../hooks/src/useGetMFAccountStatus.ts","webpack://@deriv/appstore/../hooks/src/useHasMaltaInvestAccount.ts","webpack://@deriv/appstore/../hooks/src/useMFAccountStatus.ts","webpack://@deriv/appstore/../hooks/src/usePlatformDemoAccount.ts","webpack://@deriv/appstore/../hooks/src/usePlatformRealAccounts.ts","webpack://@deriv/appstore/../hooks/src/usePlatformAccounts.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@deriv-com/translations\"), require(\"@deriv/shared\"), require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"@deriv-com/translations\", \"@deriv/shared\", \"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"@deriv/account\"] = factory(require(\"@deriv-com/translations\"), require(\"@deriv/shared\"), require(\"react\"));\n\telse\n\t\troot[\"@deriv/account\"] = factory(root[\"@deriv-com/translations\"], root[\"@deriv/shared\"], root[\"react\"]);\n})(self, (__WEBPACK_EXTERNAL_MODULE__deriv_com_translations__, __WEBPACK_EXTERNAL_MODULE__deriv_shared__, __WEBPACK_EXTERNAL_MODULE_react__) => {\nreturn ","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","/** @license React v17.0.2\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';require(\"object-assign\");var f=require(\"react\"),g=60103;exports.Fragment=60107;if(\"function\"===typeof Symbol&&Symbol.for){var h=Symbol.for;g=h(\"react.element\");exports.Fragment=h(\"react.fragment\")}var m=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,n=Object.prototype.hasOwnProperty,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,k){var b,d={},e=null,l=null;void 0!==k&&(e=\"\"+k);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(l=a.ref);for(b in a)n.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:g,type:c,key:e,ref:l,props:d,_owner:m.current}}exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__deriv_com_translations__;","module.exports = __WEBPACK_EXTERNAL_MODULE__deriv_shared__;","module.exports = __WEBPACK_EXTERNAL_MODULE_react__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","import React from 'react';\nimport { ACCOUNT_BADGE_STATUS, TAccountBadgeStatus } from '@deriv/shared';\nimport { Localize } from '@deriv-com/translations';\n\nconst getStatusBadgeConfig = (account_status: TAccountBadgeStatus) => {\n    switch (account_status) {\n        case ACCOUNT_BADGE_STATUS.PENDING:\n            return {\n                text: <Localize i18n_default_text='In review' />,\n                icon: 'IcMt5Pending',\n            };\n        case ACCOUNT_BADGE_STATUS.FAILED:\n            return {\n                text: <Localize i18n_default_text='Failed' />,\n                icon: 'IcMt5Failed',\n                icon_size: '18',\n            };\n        case ACCOUNT_BADGE_STATUS.NEEDS_VERIFICATION: {\n            return {\n                text: <Localize i18n_default_text='Needs Verification' />,\n                icon: 'IcMt5Verification',\n                icon_size: '18',\n            };\n        }\n        default:\n            return {\n                text: '',\n                icon: '',\n            };\n    }\n};\n\nexport default getStatusBadgeConfig;\n","import React from 'react';\nimport { Text } from '@deriv/components';\nimport { MT5_ACCOUNT_STATUS, TRADING_PLATFORM_STATUS } from '@deriv/shared';\nimport { Localize } from '@deriv-com/translations';\nimport { TMT5AccountStatus } from '../Types/common.type';\n\nconst getMT5StatusBadgeConfig = (mt5_account_status: TMT5AccountStatus) => {\n    const BadgeTextComponent = <Text key={0} weight='bold' size='xxxs' color='warning' />;\n\n    switch (mt5_account_status) {\n        case MT5_ACCOUNT_STATUS.PENDING:\n            return {\n                text: <Localize i18n_default_text='In review' />,\n                icon: 'IcMt5Pending',\n            };\n        case MT5_ACCOUNT_STATUS.FAILED:\n            return {\n                text: <Localize i18n_default_text='Failed' />,\n                icon: 'IcMt5Failed',\n                icon_size: '18',\n            };\n        case MT5_ACCOUNT_STATUS.NEEDS_VERIFICATION: {\n            return {\n                text: <Localize i18n_default_text='Needs Verification' />,\n                icon: 'IcMt5Verification',\n                icon_size: '18',\n            };\n        }\n        case MT5_ACCOUNT_STATUS.MIGRATED_WITH_POSITION:\n            return {\n                text: <Localize i18n_default_text='<0>No new positions</0>' components={[BadgeTextComponent]} />,\n                icon: 'IcAlertWarning',\n            };\n        case MT5_ACCOUNT_STATUS.MIGRATED_WITHOUT_POSITION:\n            return {\n                text: <Localize i18n_default_text='<0>Account closed</0>' components={[BadgeTextComponent]} />,\n                icon: 'IcAlertWarning',\n            };\n        case MT5_ACCOUNT_STATUS.UNDER_MAINTENANCE:\n            return {\n                text: <Localize i18n_default_text='<0>Server maintenance</0>' components={[BadgeTextComponent]} />,\n                icon: 'IcAlertWarning',\n            };\n        case TRADING_PLATFORM_STATUS.UNAVAILABLE:\n            return {\n                text: <Localize i18n_default_text='<0>Unavailable</0>' components={[BadgeTextComponent]} />,\n                icon: 'IcAlertWarning',\n            };\n        default:\n            return {\n                text: '',\n                icon: '',\n            };\n    }\n};\n\nexport default getMT5StatusBadgeConfig;\n","import React from 'react';\nimport { Icon } from '@deriv/components';\nimport { capitalizeFirstLetter } from '@deriv/shared';\nimport { IconProps } from '../icon-types';\n\nexport const IsIconCurrency = (icon?: string): icon is Currency =>\n    Currencies.find(currency => currency === icon) !== undefined;\n\nconst Currencies = [\n    'AUD',\n    'BCH',\n    'BTC',\n    'BUSD',\n    'DAI',\n    'ETH',\n    'EURCHECK',\n    'EUR',\n    'EURS',\n    'EUSDT',\n    'GBP',\n    'IDK',\n    'LTC',\n    'PAX',\n    'TUSD',\n    'TUSDT',\n    'UNKNOWN',\n    'USD',\n    'USDC',\n    'USDK',\n    'UST',\n    'XRP',\n    'VIRTUAL',\n] as const;\n\n// TODO: This probably can be moved somewhere else.\nexport type Currency = typeof Currencies[number];\n\nconst CurrencyIcon = ({ icon, ...props }: IconProps<Currency>) => {\n    return <Icon icon={`IcCurrency${capitalizeFirstLetter(icon.toLowerCase())}`} {...props} />;\n};\n\nexport default CurrencyIcon;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Icon } from '@deriv/components';\nimport { Jurisdiction } from '@deriv/shared';\nimport { useStore, observer } from '@deriv/stores';\nimport CurrencyIcon, { Currency } from 'Assets/svgs/currency';\nimport TradingPlatformIcon from 'Assets/svgs/trading-platform';\nimport './currency-switcher-container.scss';\n\ninterface CurrentSwitcherContainerProps extends Omit<React.HTMLAttributes<HTMLDivElement>, 'title'> {\n    actions?: React.ReactNode;\n    has_interaction?: boolean;\n    icon: Currency | 'Options' | 'Unknown';\n    title?: React.ReactNode;\n    show_dropdown?: boolean;\n}\ntype CurrencyPlatformIconProps = {\n    icon: Currency | 'Options';\n};\n\ntype DropdownProps = Omit<\n    CurrentSwitcherContainerProps,\n    'actions' | 'children' | 'className' | 'has_interaction' | 'icon' | 'title' | 'show_dropdown'\n>;\n\nconst CurrencyPlatformIcon = ({ icon }: CurrencyPlatformIconProps) =>\n    icon === 'Options' ? (\n        <TradingPlatformIcon icon={icon} size={32} className='currency-switcher__currency--icon' />\n    ) : (\n        <CurrencyIcon icon={icon} size={32} className='currency-switcher__currency--icon' />\n    );\n\nconst Dropdown = observer(({ ...props }: DropdownProps) => {\n    const store = useStore();\n    const { modules, traders_hub } = store;\n    const { is_eu_user, is_demo } = traders_hub;\n    const { current_list } = modules.cfd;\n\n    const has_mf_mt5_account = Object.keys(current_list)\n        .map(key => current_list[key])\n        .some(account => account.landing_company_short === Jurisdiction.MALTA_INVEST);\n\n    if ((is_eu_user && has_mf_mt5_account) || is_demo) {\n        return null;\n    }\n    return (\n        <div data-testid='dt_currency-switcher__arrow' className='currency-switcher-container__arrow' {...props}>\n            <Icon icon='IcChevronDownBold' />\n        </div>\n    );\n});\n\nconst CurrentSwitcherContainer = observer(\n    ({\n        actions,\n        children,\n        className,\n        has_interaction = false,\n        icon,\n        title,\n        show_dropdown = true,\n        ...props\n    }: CurrentSwitcherContainerProps) => {\n        const store = useStore();\n        const { client } = store;\n\n        const { document_status } = client.authentication_status;\n\n        return (\n            <div\n                className={classNames(className, 'currency-switcher-container', {\n                    'currency-switcher-container--has-interaction': has_interaction,\n                })}\n            >\n                <div className='currency-switcher-container--left'>\n                    <CurrencyPlatformIcon icon={icon} />\n                    <div\n                        className={classNames(\n                            'currency-switcher-container__content',\n                            `currency-switcher-container--${document_status || 'failed' || 'pending' || 'default'}`\n                        )}\n                    >\n                        <div\n                            className={classNames(\n                                'currency-switcher-container__content--text',\n                                `currency-switcher-container__content--text--${\n                                    document_status || 'failed' || 'pending' || 'default'\n                                }`\n                            )}\n                        >\n                            {title}\n                        </div>\n                        {children}\n                    </div>\n                </div>\n                <div className='currency-switcher-container--right'>\n                    {actions}\n                    {show_dropdown && <Dropdown {...props} />}\n                </div>\n            </div>\n        );\n    }\n);\n\nexport default CurrentSwitcherContainer;\n","import React from 'react';\nimport { Button, Text } from '@deriv/components';\nimport CurrencySwitcherContainer from 'Components/containers/currency-switcher-container';\nimport BalanceText from 'Components/elements/text/balance-text';\nimport './demo-account-card.scss';\nimport { localize } from '@deriv/translations';\nimport { usePlatformAccounts } from '@deriv/hooks';\nimport { useStore, observer } from '@deriv/stores';\n\nconst DemoAccountCard = observer(() => {\n    const { client, traders_hub, common } = useStore();\n    const { accounts, loginid, resetVirtualBalance, default_currency } = client;\n    const { selected_account_type } = traders_hub;\n    const { demo: platform_demo_account } = usePlatformAccounts();\n\n    const canResetBalance = () => {\n        return loginid && (accounts[loginid]?.balance || 0) !== 10000;\n    };\n\n    const { current_language } = common;\n\n    return (\n        <CurrencySwitcherContainer\n            className='demo-account-card'\n            icon='VIRTUAL'\n            title={\n                <BalanceText\n                    currency={platform_demo_account?.currency || default_currency}\n                    balance={platform_demo_account?.balance || 0}\n                    size='xs'\n                />\n            }\n            actions={\n                canResetBalance() && (\n                    <Button\n                        key={`currency-switcher__button--key-${current_language}`}\n                        secondary\n                        onClick={resetVirtualBalance}\n                        className='currency-switcher__button'\n                    >\n                        {localize('Reset Balance')}\n                    </Button>\n                )\n            }\n        >\n            <Text className='demo-account-card__type' color='primary' size='xs' line_height='s'>\n                {localize(selected_account_type)}\n            </Text>\n        </CurrencySwitcherContainer>\n    );\n});\n\nexport default DemoAccountCard;\n","import React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nconst CurrencySwitcherLoader = () => {\n    return (\n        <ContentLoader\n            viewBox='0 0 332 72'\n            backgroundColor={'var(--general-section-1)'}\n            foregroundColor={'var(--general-hover)'}\n        >\n            <circle cx='34' cy='36' r='20' />\n            <rect x='80' y='18' rx='4' ry='4' width='70' height='12' />\n            <rect x='80' y='36' rx='3' ry='3' width='100' height='14' />\n            <rect x='240' y='22' rx='5' ry='5' width='70' height='30' />\n        </ContentLoader>\n    );\n};\n\nexport default CurrencySwitcherLoader;\n","import React from 'react';\nimport { useHistory } from 'react-router';\nimport { Button, Text } from '@deriv/components';\nimport { getCurrencyName, routes, isCryptocurrency, startPerformanceEventTimer, cacheTrackEvents } from '@deriv/shared';\nimport { Localize } from '@deriv/translations';\nimport BalanceText from 'Components/elements/text/balance-text';\nimport CurrencySwitcherContainer from 'Components/containers/currency-switcher-container';\nimport { useGrowthbookGetFeatureValue } from '@deriv/hooks';\nimport { useStore, observer } from '@deriv/stores';\nimport { IsIconCurrency } from 'Assets/svgs/currency';\n\nconst default_balance = { balance: 0, currency: 'USD' };\n\nconst RealAccountCard = observer(() => {\n    const history = useHistory();\n\n    const { client, common, modules, traders_hub } = useStore();\n\n    const { accounts, loginid } = client;\n    const { current_language } = common;\n    const { current_list } = modules.cfd;\n    const { openModal, is_eu_user, selected_account_type } = traders_hub;\n\n    const { balance, currency } = loginid ? accounts[loginid] : default_balance;\n\n    const has_mf_mt5_account = Object.keys(current_list)\n        .map(key => current_list[key])\n        .some(account => account.landing_company_short === 'maltainvest');\n\n    const uppercase_currency = currency?.toUpperCase();\n    const get_currency = IsIconCurrency(uppercase_currency) ? uppercase_currency : 'Unknown';\n\n    const [is_traders_dashboard_tracking_enabled] = useGrowthbookGetFeatureValue({\n        featureFlag: 'ce_tradershub_dashboard_tracking',\n        defaultValue: false,\n    });\n\n    return (\n        <CurrencySwitcherContainer\n            className='demo-account-card'\n            title={\n                currency ? (\n                    <BalanceText currency={currency} balance={Number(balance)} size='xs' />\n                ) : (\n                    'No currency assigned'\n                )\n            }\n            icon={get_currency}\n            onClick={() => {\n                if (!is_eu_user && !has_mf_mt5_account) {\n                    openModal('currency_selection');\n                }\n                return openModal('currency_selection');\n            }}\n            actions={\n                currency && (\n                    <Button\n                        onClick={(e: MouseEvent) => {\n                            if (is_traders_dashboard_tracking_enabled) {\n                                cacheTrackEvents.loadEvent([\n                                    {\n                                        event: {\n                                            name: 'ce_tradershub_dashboard_form',\n                                            properties: {\n                                                action: 'deposit_balance',\n                                                form_name: 'traders_hub_default',\n                                                account_mode: selected_account_type,\n                                            },\n                                        },\n                                    },\n                                ]);\n                            }\n\n                            if (isCryptocurrency(currency))\n                                startPerformanceEventTimer('load_crypto_deposit_cashier_time');\n                            else startPerformanceEventTimer('load_fiat_deposit_cashier_time');\n                            e.stopPropagation();\n                            history.push(`${routes.cashier_deposit}#deposit`);\n                        }}\n                        secondary\n                        className='currency-switcher__button'\n                    >\n                        <Localize\n                            key={`currency-switcher__button-text-${current_language}`}\n                            i18n_default_text='Deposit'\n                        />\n                    </Button>\n                )\n            }\n            has_interaction\n        >\n            <Text color='primary' size='xs' line_height='s'>\n                {getCurrencyName(currency)}\n            </Text>\n        </CurrencySwitcherContainer>\n    );\n});\n\nexport default RealAccountCard;\n","import React from 'react';\nimport { getStatusBadgeConfig } from '@deriv/account';\nimport { StatusBadge, Text } from '@deriv/components';\nimport CurrencySwitcherContainer from 'Components/containers/currency-switcher-container';\nimport CurrencySwitcherLoader from 'Components/pre-loader/currency-switcher-loader';\nimport { useStore, observer } from '@deriv/stores';\nimport RealAccountCard from './real-account-card';\nimport './real-account-switcher.scss';\nimport { IsIconCurrency } from 'Assets/svgs/currency';\nimport { useMFAccountStatus } from '@deriv/hooks';\n\nconst AccountNeedsVerification = observer(() => {\n    const mf_account_status = useMFAccountStatus();\n    const { client, traders_hub, common } = useStore();\n    const { account_list, loginid } = client;\n    const { openModal, setVerificationModalOpen } = traders_hub;\n    const { setAppstorePlatform } = common;\n\n    const account = account_list?.find((acc: { loginid?: string }) => loginid === acc?.loginid);\n    const icon_title = account?.title;\n\n    const onClickBanner = () => {\n        setAppstorePlatform('');\n        setVerificationModalOpen(true);\n    };\n\n    const {\n        text: badge_text,\n        icon: badge_icon,\n        icon_size: badge_icon_size,\n    } = getStatusBadgeConfig(mf_account_status, onClickBanner);\n\n    return (\n        <CurrencySwitcherContainer\n            className='real-account-switcher__container'\n            title={\n                <Text size='xs' line_height='s'>\n                    {icon_title}\n                </Text>\n            }\n            icon={IsIconCurrency(icon_title) ? icon_title : 'USD'}\n            onClick={() => {\n                return openModal('currency_selection');\n            }}\n        >\n            <StatusBadge\n                account_status={mf_account_status}\n                icon={badge_icon}\n                text={badge_text}\n                icon_size={badge_icon_size}\n                onClick={onClickBanner}\n            />\n        </CurrencySwitcherContainer>\n    );\n});\n\nconst RealAccountSwitcher = observer(() => {\n    const { client, traders_hub } = useStore();\n    const mf_account_status = useMFAccountStatus();\n    const { is_logging_in, is_switching, has_maltainvest_account } = client;\n    const { is_eu_user, no_CR_account, no_MF_account } = traders_hub;\n\n    const eu_account = is_eu_user && !no_MF_account;\n    const cr_account = !is_eu_user && !no_CR_account;\n\n    //dont show loader if user has no respective regional account\n    if ((is_switching || is_logging_in) && (eu_account || cr_account)) {\n        return (\n            <div className='real-account-switcher__container content-loader'>\n                <CurrencySwitcherLoader />\n            </div>\n        );\n    }\n\n    if (mf_account_status && is_eu_user) {\n        return <AccountNeedsVerification />;\n    }\n\n    if (has_maltainvest_account && is_eu_user) {\n        return <RealAccountCard />;\n    } else if (!no_CR_account && !is_eu_user) {\n        return <RealAccountCard />;\n    }\n    return null;\n});\n\nexport default RealAccountSwitcher;\n","import React from 'react';\nimport { observer } from 'mobx-react-lite';\nimport DemoAccountCard from './demo/demo-account-card';\nimport RealAccountSwitcher from './real/real-account-switcher';\nimport { useStore } from '@deriv/stores';\n\nconst CurrencySwitcherCard = observer(() => {\n    const { traders_hub, client } = useStore();\n    const { has_any_real_account, has_maltainvest_account } = client;\n    const { is_real, is_demo, is_eu_user } = traders_hub;\n\n    const has_cr_account = !is_eu_user && has_any_real_account;\n\n    const has_mf_account = is_eu_user && has_maltainvest_account;\n\n    if (is_real && (has_cr_account || has_mf_account)) {\n        return <RealAccountSwitcher />;\n    } else if (is_demo) {\n        return <DemoAccountCard />;\n    }\n    return null;\n});\n\nexport default CurrencySwitcherCard;\n","import React, { HTMLAttributes } from 'react';\n\nconst GridContainer = ({ children }: HTMLAttributes<HTMLDivElement>) => {\n    return <div className='listing-container__content'>{children}</div>;\n};\n\nexport default GridContainer;\n","import React, { HTMLAttributes, ReactNode } from 'react';\nimport classNames from 'classnames';\nimport CurrencySwitcherCard from 'Components/currency-switcher-card';\nimport GridContainer from 'Components/containers/grid-container';\nimport './listing-container.scss';\n\ntype TListingContainerProps = {\n    title: ReactNode;\n    description: ReactNode;\n    is_deriv_platform?: boolean;\n    className?: string;\n    is_outside_grid_container?: boolean;\n};\ntype TOptionsProps = Pick<TListingContainerProps, 'title' | 'description' | 'is_deriv_platform'>;\ntype TSwitcherProps = Pick<TListingContainerProps, 'is_deriv_platform'>;\n\nconst Options = ({ title, description }: TOptionsProps) => {\n    return (\n        <div className='listing-container__title'>\n            {title}\n            {description}\n        </div>\n    );\n};\n\nconst Switcher = ({ is_deriv_platform }: TSwitcherProps) => {\n    if (!is_deriv_platform) return null;\n    return <CurrencySwitcherCard />;\n};\n\nconst ListingContainer = ({\n    title,\n    description,\n    is_deriv_platform = false,\n    is_outside_grid_container,\n    children,\n    className,\n}: TListingContainerProps & Omit<HTMLAttributes<HTMLDivElement>, 'title'>) => {\n    return (\n        <div className={classNames('listing-container', className)}>\n            <div className='listing-container__top-container'>\n                <Options title={title} description={description} />\n                <Switcher is_deriv_platform={is_deriv_platform} />\n            </div>\n            {is_outside_grid_container ? children : <GridContainer>{children}</GridContainer>}\n        </div>\n    );\n};\n\nexport default ListingContainer;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button } from '@deriv/components';\nimport { observer, useStore } from '@deriv/stores';\nimport { localize } from '@deriv/translations';\nimport { Actions } from 'Components/containers/trading-app-card-actions';\n\nconst TradeButton = observer(\n    ({\n        link_to,\n        onAction,\n        is_external,\n        is_buttons_disabled,\n        new_tab,\n    }: Pick<Actions, 'link_to' | 'onAction' | 'is_external' | 'new_tab' | 'is_buttons_disabled'>) => {\n        const { traders_hub, modules } = useStore();\n        const { is_demo } = traders_hub;\n        const { dxtrade_tokens } = modules.cfd;\n        const REAL_DXTRADE_URL = 'https://dx.deriv.com';\n        const DEMO_DXTRADE_URL = 'https://dx-demo.deriv.com';\n\n        if (link_to) {\n            if (is_external) {\n                if (new_tab) {\n                    return (\n                        <a href={link_to} target='_blank' rel='noopener noreferrer'>\n                            <Button primary>{localize('Open')}</Button>\n                        </a>\n                    );\n                }\n                return (\n                    <a href={link_to}>\n                        <Button primary>{localize('Open')}</Button>\n                    </a>\n                );\n            }\n            return (\n                <Link to={link_to}>\n                    <Button primary>{localize('Open')}</Button>\n                </Link>\n            );\n        } else if (onAction) {\n            return (\n                <Button primary className='trade-button' onClick={() => onAction()} is_disabled={is_buttons_disabled}>\n                    {localize('Open')}\n                </Button>\n            );\n        }\n\n        return (\n            <a\n                className='dc-btn trade-button'\n                type='button'\n                href={`${is_demo ? DEMO_DXTRADE_URL : REAL_DXTRADE_URL}${\n                    dxtrade_tokens.real ? `?${dxtrade_tokens.real}` : ''\n                }`}\n                target='_blank'\n                rel='noopener noreferrer'\n            >\n                <Button primary className='trade-button'>\n                    {localize('Open')}\n                </Button>\n            </a>\n        );\n    }\n);\n\nexport default TradeButton;\n","import TradeButton from './trade-button';\nimport './trade-button.scss';\n\nexport default TradeButton;\n","import { Button } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { Actions } from 'Components/containers/trading-app-card-actions';\nimport TradeButton from 'Components/trade-button';\nimport React from 'react';\n\n/**\n * Handles Transfer, Trade and top up. It uses the name attribute of the <button /> element to distinguish between transfer and top up\n * @param { string } link_to // contains the URL for the trade button\n * @param { onAction } // a callback function that handles the current action\n * @param { boolean } // indicates whether the current account type is real or demo\n * @returns {JSX.Element}\n * */\nconst MultiActionButtonGroup = ({\n    link_to,\n    onAction,\n    is_buttons_disabled,\n    is_real,\n}: Pick<Actions, 'link_to' | 'onAction' | 'is_buttons_disabled' | 'is_real'>) => {\n    return (\n        <div className='multi-action-button-group'>\n            <Button\n                secondary\n                name={`${is_real ? 'transfer-btn' : 'topup-btn'}`}\n                onClick={onAction}\n                is_disabled={is_buttons_disabled}\n            >\n                {is_real ? localize('Transfer') : localize('Top up')}\n            </Button>\n            <TradeButton link_to={link_to} onAction={onAction} is_buttons_disabled={is_buttons_disabled} />\n        </div>\n    );\n};\nexport default MultiActionButtonGroup;\n","import MultiActionButtonGroup from './multi-action-button-group';\nimport './multi-action-button-group.scss';\n\nexport default MultiActionButtonGroup;\n","import { Button } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport TradeButton from 'Components/trade-button/trade-button';\nimport React from 'react';\nimport { observer } from 'mobx-react-lite';\nimport MultiActionButtonGroup from 'Components/multi-action-button-group';\n\nexport type Actions = {\n    action_type: 'get' | 'none' | 'trade' | 'dxtrade' | 'multi-action'; // multi-action can be tranfer_trade or top_up_trade\n    clickable_icon?: boolean;\n    link_to?: string;\n    has_divider?: boolean;\n    onAction?: (e?: React.MouseEvent<HTMLButtonElement>) => void;\n    is_external?: boolean;\n    new_tab?: boolean;\n    is_buttons_disabled?: boolean;\n    is_account_being_created?: boolean;\n    is_real?: boolean;\n    is_new?: boolean;\n};\n\nconst TradingAppCardActions = ({\n    action_type,\n    link_to,\n    onAction,\n    is_external,\n    new_tab,\n    is_account_being_created,\n    is_buttons_disabled,\n    is_real,\n}: Actions) => {\n    switch (action_type) {\n        case 'get':\n            return (\n                <Button disabled={is_account_being_created} primary_light onClick={() => onAction?.()}>\n                    {localize('Get')}\n                </Button>\n            );\n        case 'trade':\n            return <TradeButton link_to={link_to} onAction={onAction} is_external={is_external} new_tab={new_tab} />;\n        case 'dxtrade':\n            return <TradeButton link_to={link_to} />;\n        case 'multi-action':\n            return (\n                <MultiActionButtonGroup\n                    link_to={link_to}\n                    onAction={onAction}\n                    is_buttons_disabled={is_buttons_disabled}\n                    is_real={is_real}\n                />\n            );\n        case 'none':\n        default:\n            return null;\n    }\n};\n\nexport default observer(TradingAppCardActions);\n","import React from 'react';\nimport { Button, Modal, Text } from '@deriv/components';\nimport { Jurisdiction, MT5_ACCOUNT_STATUS, getMT5AccountTitle } from '@deriv/shared';\nimport { useStore } from '@deriv/stores';\nimport { Localize, localize } from '@deriv/translations';\nimport { TTradingPlatformAvailableAccount } from '../account-type-modal/types';\nimport { TMarketType } from '../../../types/common.types';\n\ntype TOpenPositionsSVGModal = {\n    market_type: NonNullable<TTradingPlatformAvailableAccount['market_type']> | TMarketType;\n    status: string;\n    is_modal_open: boolean;\n    setModalOpen: React.Dispatch<React.SetStateAction<boolean>>;\n};\n\nconst OpenPositionsSVGModal = ({ market_type, status, is_modal_open, setModalOpen }: TOpenPositionsSVGModal) => {\n    const { client } = useStore();\n    const { mt5_login_list } = client;\n    const eligible_accounts = mt5_login_list?.filter(\n        account => account?.market_type === market_type && account.landing_company_short !== Jurisdiction.SVG\n    );\n\n    const eligible_accounts_label = eligible_accounts.map(account =>\n        getMT5AccountTitle({\n            account_type: market_type,\n            jurisdiction: account.landing_company_short,\n        })\n    );\n\n    const is_migrated_with_position = status === MT5_ACCOUNT_STATUS.MIGRATED_WITH_POSITION;\n\n    return (\n        <Modal\n            is_open={is_modal_open}\n            toggleModal={() => setModalOpen(is_modal_open => !is_modal_open)}\n            small\n            has_close_icon={false}\n        >\n            <Modal.Body>\n                <Text as='h1' color='prominent' weight='bold' className='open-positions-svg__modal-title'>\n                    {is_migrated_with_position ? (\n                        <Localize i18n_default_text='No new positions' />\n                    ) : (\n                        <Localize i18n_default_text='Account closed' />\n                    )}\n                </Text>\n                <Text as='p' color='prominent ' size='xs'>\n                    {is_migrated_with_position ? (\n                        <Localize\n                            i18n_default_text='You can no longer open new positions with your {{from_account}} account. Please use your {{to_account}} account to open new positions.'\n                            values={{\n                                from_account: getMT5AccountTitle({\n                                    account_type: market_type,\n                                    jurisdiction: Jurisdiction.SVG,\n                                }),\n                                to_account: eligible_accounts_label.join(localize(' or ')),\n                            }}\n                        />\n                    ) : (\n                        <Localize\n                            i18n_default_text='Your {{from_account}} account will be archived after 60 days of inactivity. You can still access your trade history until the account is archived.'\n                            values={{\n                                from_account: getMT5AccountTitle({\n                                    account_type: market_type,\n                                    jurisdiction: Jurisdiction.SVG,\n                                }),\n                            }}\n                        />\n                    )}\n                </Text>\n            </Modal.Body>\n            <Modal.Footer className='open-positions-svg__modal-footer'>\n                <Button has_effect onClick={() => setModalOpen(false)} secondary large>\n                    <Localize i18n_default_text='OK' />\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default OpenPositionsSVGModal;\n","import OpenPositionsSVGModal from './open-positions-svg-modal';\nimport './open-positions-svg-modal.scss';\n\nexport default OpenPositionsSVGModal;\n","import React from 'react';\nimport classNames from 'classnames';\nimport getMT5StatusBadgeConfig from '@deriv/account/src/Configs/get-mt5-status-badge-config';\nimport { Text, StatusBadge } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport TradingPlatformIconProps from 'Assets/svgs/trading-platform';\nimport {\n    BrandConfig,\n    DERIV_PLATFORM_NAMES,\n    getAppstorePlatforms,\n    getMFAppstorePlatforms,\n} from 'Constants/platform-config';\nimport TradingAppCardActions, { Actions } from './trading-app-card-actions';\nimport { AvailableAccount, TDetailsOfEachMT5Loginid } from 'Types';\nimport { useGrowthbookGetFeatureValue } from '@deriv/hooks';\nimport { observer, useStore } from '@deriv/stores';\nimport {\n    CFD_PLATFORMS,\n    ContentFlag,\n    getStaticUrl,\n    getUrlSmartTrader,\n    MT5_ACCOUNT_STATUS,\n    CFD_PRODUCTS_TITLE,\n    TRADING_PLATFORM_STATUS,\n    cacheTrackEvents,\n} from '@deriv/shared';\nimport OpenPositionsSVGModal from '../modals/open-positions-svg-modal';\nimport './trading-app-card.scss';\n\nconst TradingAppCard = ({\n    client_kyc_status,\n    availability,\n    name,\n    icon,\n    action_type,\n    clickable_icon = false,\n    description,\n    is_deriv_platform = false,\n    onAction,\n    sub_title,\n    has_divider,\n    platform,\n    short_code_and_region,\n    mt5_acc_auth_status,\n    selected_mt5_jurisdiction,\n    market_type,\n    is_new = false,\n}: Actions & BrandConfig & AvailableAccount & TDetailsOfEachMT5Loginid) => {\n    const {\n        common,\n        traders_hub,\n        modules: { cfd },\n    } = useStore();\n\n    const {\n        is_eu_user,\n        is_demo_low_risk,\n        content_flag,\n        is_real,\n        selected_account_type,\n        setVerificationModalOpen,\n        getMT5AccountKYCStatus,\n    } = traders_hub;\n    const { current_language, setAppstorePlatform } = common;\n    const {\n        is_account_being_created,\n        setAccountUnavailableModal,\n        setServerMaintenanceModal,\n        setJurisdictionSelectedShortcode,\n        setProduct,\n    } = cfd;\n\n    const [is_traders_dashboard_tracking_enabled] = useGrowthbookGetFeatureValue({\n        featureFlag: 'ce_tradershub_dashboard_tracking',\n        defaultValue: false,\n    });\n\n    const [is_open_position_svg_modal_open, setIsOpenPositionSvgModalOpen] = React.useState(false);\n\n    const low_risk_cr_non_eu = content_flag === ContentFlag.LOW_RISK_CR_NON_EU;\n\n    const app_platform =\n        !is_eu_user || low_risk_cr_non_eu || is_demo_low_risk ? getAppstorePlatforms() : getMFAppstorePlatforms();\n\n    const { app_desc, link_to, is_external, new_tab } = app_platform.find(config => config.name === name) || {\n        app_desc: description,\n        link_to: '',\n    };\n\n    const { text: badge_text, icon: badge_icon, icon_size: badge_size } = getMT5StatusBadgeConfig(mt5_acc_auth_status);\n\n    const getAppDescription = () => {\n        if (is_existing_real_ctrader_account) return '';\n        if (platform === CFD_PLATFORMS.DXTRADE) {\n            return (\n                <Localize\n                    components={[<strong key={0} />]}\n                    i18n_default_text='CFDs on financial and derived instruments, <0>powered by TradingView</0>.'\n                />\n            );\n        }\n        return app_desc;\n    };\n\n    const handleStatusBadgeClick = (mt5_acc_auth_status: string) => {\n        switch (mt5_acc_auth_status) {\n            case MT5_ACCOUNT_STATUS.MIGRATED_WITH_POSITION:\n            case MT5_ACCOUNT_STATUS.MIGRATED_WITHOUT_POSITION:\n                return setIsOpenPositionSvgModalOpen(!is_open_position_svg_modal_open);\n            case MT5_ACCOUNT_STATUS.UNDER_MAINTENANCE:\n                return setServerMaintenanceModal(true);\n            case TRADING_PLATFORM_STATUS.UNAVAILABLE:\n                return setAccountUnavailableModal(true);\n            case MT5_ACCOUNT_STATUS.PENDING:\n            case MT5_ACCOUNT_STATUS.FAILED:\n            case MT5_ACCOUNT_STATUS.NEEDS_VERIFICATION: {\n                setJurisdictionSelectedShortcode(selected_mt5_jurisdiction?.jurisdiction ?? '');\n                setProduct(selected_mt5_jurisdiction?.product ?? '');\n                getMT5AccountKYCStatus();\n                return setVerificationModalOpen(true);\n            }\n\n            default:\n        }\n    };\n\n    const openStaticPage = () => {\n        if (is_traders_dashboard_tracking_enabled) {\n            cacheTrackEvents.loadEvent([\n                {\n                    event: {\n                        name: 'ce_tradershub_dashboard_form',\n                        properties: {\n                            action: 'account_logo_push',\n                            form_name: 'traders_hub_default',\n                            account_mode: selected_account_type,\n                            account_name: !is_real ? `${sub_title === undefined ? name : sub_title}` : name,\n                        },\n                    },\n                },\n            ]);\n        }\n\n        if (is_deriv_platform) {\n            switch (name) {\n                case DERIV_PLATFORM_NAMES.TRADER:\n                    window.open(getStaticUrl(`/dtrader`));\n                    break;\n                case DERIV_PLATFORM_NAMES.DBOT:\n                    window.open(getStaticUrl(`/dbot`));\n                    break;\n                case DERIV_PLATFORM_NAMES.SMARTTRADER:\n                    window.open(getUrlSmartTrader());\n                    break;\n                case DERIV_PLATFORM_NAMES.GO:\n                    window.open(getStaticUrl('/deriv-go'));\n                    break;\n                default:\n            }\n        }\n        if (platform === CFD_PLATFORMS.MT5 && availability === 'EU')\n            window.open(getStaticUrl(`/dmt5`, {}, false, true));\n        else if (platform === CFD_PLATFORMS.MT5 && availability !== 'EU') window.open(getStaticUrl(`/dmt5`));\n        else if (platform === CFD_PLATFORMS.DXTRADE) window.open(getStaticUrl(`/derivx`));\n        else if (platform === CFD_PLATFORMS.CTRADER) window.open(getStaticUrl(`/deriv-ctrader`));\n        else if (icon === 'Options' && !is_eu_user)\n            window.open(getStaticUrl(`trade-types/options/digital-options/up-and-down/`));\n        else;\n    };\n    const is_mt5_maintainance_status = [\n        TRADING_PLATFORM_STATUS.UNAVAILABLE,\n        MT5_ACCOUNT_STATUS.UNDER_MAINTENANCE,\n    ].includes(mt5_acc_auth_status);\n\n    const platform_name = is_account_being_created ? name : (sub_title ?? name);\n\n    const is_existing_real_ctrader_account =\n        platform === CFD_PLATFORMS.CTRADER && is_real && action_type === 'multi-action';\n\n    return (\n        <div className='trading-app-card' key={`trading-app-card__${current_language}`}>\n            <div\n                className={classNames('trading-app-card__icon--container', {\n                    'trading-app-card__icon--container__clickable': clickable_icon,\n                })}\n            >\n                <TradingPlatformIconProps icon={icon} onClick={clickable_icon ? openStaticPage : undefined} size={48} />\n            </div>\n            <div\n                className={classNames('trading-app-card__container', { 'trading-app-card--divider': has_divider })}\n                data-testid={`dt_trading-app-card_${is_real ? 'real' : 'demo'}_${String(platform_name)\n                    .replaceAll(' ', '-')\n                    .toLowerCase()}${\n                    selected_mt5_jurisdiction?.jurisdiction ? `_${selected_mt5_jurisdiction.jurisdiction}` : ''\n                }`}\n            >\n                <div className='trading-app-card__details'>\n                    <div>\n                        <Text\n                            className='title'\n                            size='xs'\n                            line_height='s'\n                            color='prominent'\n                            data-testid='dt_cfd-account-name'\n                        >\n                            {sub_title}\n                        </Text>\n                        {short_code_and_region && (\n                            <Text size='xxxs' line_height='s' className='trading-app-card__details__short-code'>\n                                {short_code_and_region}\n                            </Text>\n                        )}\n                    </div>\n                    <div>\n                        <Text\n                            className='title'\n                            size='xs'\n                            line_height='s'\n                            color={action_type === 'trade' ? 'prominent' : 'general'}\n                            data-testid={\n                                action_type === 'get' || is_deriv_platform ? 'dt_platform-name' : 'dt_account-balance'\n                            }\n                        >\n                            {name}\n                        </Text>\n                        {is_new && name === CFD_PRODUCTS_TITLE.GOLD && (\n                            <Text className='trading-app-card__details__new' weight='bolder' size='xxs' line_height='s'>\n                                <Localize i18n_default_text='NEW' />\n                            </Text>\n                        )}\n                    </div>\n                    <Text\n                        className='description'\n                        color={'general'}\n                        size='xxs'\n                        line_height='m'\n                        data-testid={\n                            action_type === 'get' || is_deriv_platform ? 'dt_platform-description' : 'dt_account-id'\n                        }\n                    >\n                        {getAppDescription()}\n                    </Text>\n                    {mt5_acc_auth_status && action_type === 'multi-action' && (\n                        <StatusBadge\n                            className='trading-app-card__acc_status_badge'\n                            account_status={mt5_acc_auth_status}\n                            icon={badge_icon}\n                            text={badge_text}\n                            icon_size={badge_size}\n                            onClick={() => {\n                                setAppstorePlatform(platform);\n                                handleStatusBadgeClick(mt5_acc_auth_status);\n                            }}\n                        />\n                    )}\n                    <OpenPositionsSVGModal\n                        market_type={market_type}\n                        status={mt5_acc_auth_status ?? ''}\n                        is_modal_open={is_open_position_svg_modal_open}\n                        setModalOpen={setIsOpenPositionSvgModalOpen}\n                    />\n                </div>\n                <div className='trading-app-card__actions'>\n                    <TradingAppCardActions\n                        action_type={action_type}\n                        link_to={link_to}\n                        onAction={onAction}\n                        is_external={is_external}\n                        new_tab={new_tab}\n                        is_buttons_disabled={is_mt5_maintainance_status}\n                        is_account_being_created={!!is_account_being_created}\n                        is_real={is_real}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default observer(TradingAppCard);\n","import React from 'react';\nimport { Text } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport { useDevice } from '@deriv-com/ui';\nimport './disclaimer.scss';\n\nconst Disclaimer = () => {\n    const { isDesktop } = useDevice();\n\n    return (\n        <div data-testid='dt_traders_hub_disclaimer' className='disclaimer'>\n            <Text align='left' className='disclaimer-text' size={!isDesktop ? 'xxxs' : 'xs'}>\n                <Localize i18n_default_text='The products offered on our website are complex derivative products that carry a significant risk of potential loss. CFDs are complex instruments with a high risk of losing money rapidly due to leverage. 70.84% of retail investor accounts lose money when trading CFDs with this provider. You should consider whether you understand how these products work and whether you can afford to take the high risk of losing your money.' />\n            </Text>\n            <div className='disclaimer__bottom-plug' />\n        </div>\n    );\n};\n\nexport default Disclaimer;\n","import Disclaimer from './disclaimer';\n\nexport default Disclaimer;\n","import React from 'react';\nimport { Text, StaticUrl } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\n\nconst CFDsDescription = () => {\n    return (\n        <Text size='xs' line_height='s'>\n            <Localize\n                i18n_default_text='Trade bigger positions with less capital on a wide range of global markets. <0>Learn more</0>'\n                components={[<StaticUrl key={0} className='options' href='/trade-types/cfds' />]}\n            />\n        </Text>\n    );\n};\n\nexport default CFDsDescription;\n","import CFDsDescription from './cfds-description';\n\nexport default CFDsDescription;\n","import React from 'react';\nimport { Text, StaticUrl } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\n\ntype TOptionsDescription = {\n    is_eu_user: boolean;\n};\n\nconst OptionsDescription = ({ is_eu_user }: TOptionsDescription) => {\n    return is_eu_user ? (\n        <Text size='xs' line_height='s'>\n            <Localize\n                i18n_default_text='Multipliers let you trade with leverage and limit your risk to your stake. <0>Learn more</0>'\n                components={[<StaticUrl key={0} className='options' href='trade-types/multiplier/' />]}\n            />\n        </Text>\n    ) : (\n        <div>\n            <Text size='xs' line_height='s'>\n                <Localize\n                    i18n_default_text='Predict the market, profit if you’re right, risk only what you put in. <0>Learn more</0>'\n                    components={[\n                        <StaticUrl\n                            key={0}\n                            className='options'\n                            href='trade-types/options/digital-options/up-and-down/'\n                        />,\n                    ]}\n                />\n            </Text>\n        </div>\n    );\n};\n\nexport default OptionsDescription;\n","import OptionsDescription from './options-description';\n\nexport default OptionsDescription;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Text } from '@deriv/components';\nimport { formatMoney } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport './balance-text.scss';\n\n// Todo: this definitely needs to be somewhere else\ntype Size = 'xxxxs' | 'xxxs' | 'xxs' | 'xs' | 's' | 'xsm' | 'sm' | 'm' | 'l' | 'xl' | 'xxl';\n\ntype BalanceTextProps = {\n    balance: number;\n    currency: string;\n    size?: Size;\n    underline_style?: 'dotted' | 'solid' | 'none';\n};\n\nconst BalanceText = observer(({ balance, currency, size = 'm', underline_style = 'none' }: BalanceTextProps) => {\n    const { traders_hub } = useStore();\n    const { selected_account_type } = traders_hub;\n\n    const getTextClassName = () => {\n        if (selected_account_type === 'demo') {\n            return 'balance-text__text--demo';\n        }\n        if (selected_account_type === 'real') {\n            return 'balance-text__text--real';\n        }\n        return '';\n    };\n\n    return (\n        <div\n            className={classNames('balance-text__container', { 'balance-text--dotted': underline_style === 'dotted' })}\n            data-testid='dt_balance_text_container'\n        >\n            <Text weight='bold' size={size} className={getTextClassName()}>\n                {formatMoney(currency, balance, true)}\n            </Text>\n            <Text weight='bold' size={size} color='prominent' className={getTextClassName()}>\n                {currency}\n            </Text>\n        </div>\n    );\n});\n\nexport default BalanceText;\n","import { getUrlSmartTrader, getPlatformSettingsAppstore, routes, getStaticUrl } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport { PlatformIcons } from 'Assets/svgs/trading-platform';\nimport { TAccountCategory, TRegionAvailability } from 'Types';\n\nexport type AccountType = { text: 'Real' | 'Demo'; value: TAccountCategory };\nexport type RegionAvailability = 'Non-EU' | 'EU' | 'All';\nexport const getAccountTypes = (): AccountType[] => [\n    { text: localize('Demo'), value: 'demo' },\n    { text: localize('Real'), value: 'real' },\n];\nexport const region_availability: RegionAvailability[] = ['Non-EU', 'EU'];\n\nexport type BrandConfig = {\n    name: string;\n    icon: keyof typeof PlatformIcons;\n    availability: TRegionAvailability;\n    is_deriv_platform?: boolean;\n};\n\nexport interface PlatformConfig {\n    name: string;\n    app_desc: string;\n    link_to?: string;\n    is_external?: boolean;\n    new_tab?: boolean;\n}\n\nexport interface MfPlatformConfig extends PlatformConfig {\n    app_icon: string;\n    app_title: string;\n}\n\nexport const getAppstorePlatforms = (): PlatformConfig[] => [\n    {\n        name: getPlatformSettingsAppstore('trader').name,\n        app_desc: localize('The options and multipliers trading platform.'),\n        link_to: routes.trade,\n    },\n    {\n        name: getPlatformSettingsAppstore('dbot').name,\n        app_desc: localize('The ultimate bot trading platform.'),\n        link_to: routes.bot,\n        is_external: true,\n    },\n    {\n        name: getPlatformSettingsAppstore('smarttrader').name,\n        app_desc: localize('The legacy options trading platform.'),\n        link_to: getUrlSmartTrader(),\n        is_external: true,\n    },\n    {\n        name: getPlatformSettingsAppstore('go').name,\n        app_desc: localize('The mobile app for trading multipliers and accumulators.'),\n        link_to: getStaticUrl('/deriv-go'),\n        is_external: true,\n        new_tab: true,\n    },\n];\n\nexport const getMFAppstorePlatforms = (): MfPlatformConfig[] => [\n    {\n        app_icon: getPlatformSettingsAppstore('trader').icon,\n        app_title: getPlatformSettingsAppstore('trader').name,\n        name: getPlatformSettingsAppstore('trader').name,\n        app_desc: localize('The multipliers trading platform.'),\n        link_to: routes.trade,\n    },\n];\n\n// The platform names were taken from packages/shared/brand.config.json\nexport const DERIV_PLATFORM_NAMES = {\n    TRADER: 'Deriv Trader',\n    DBOT: 'Deriv Bot',\n    SMARTTRADER: 'SmartTrader',\n    GO: 'Deriv GO',\n} as const;\n","import { isMobile } from '@deriv/shared';\n\n/**\n * This function checks whether the current item should have a border at the bottom 'aka \"divider\" '.\n * @function getHasDivider\n * @param { number } current_item_index // the index of the current list item\n * @param { number } list_size // size of the whole list\n * @param { number } available_grid_columns // how many css grid columns the container element has or provides\n * @return { boolean }\n * */\nexport const getHasDivider = (current_item_index: number, list_size: number, available_grid_columns: number) => {\n    if (list_size < available_grid_columns) {\n        return false;\n    } else if (isMobile()) {\n        return current_item_index < list_size - 1;\n    }\n    return (\n        current_item_index <\n        list_size -\n            (list_size % available_grid_columns === 0 ? available_grid_columns : list_size % available_grid_columns)\n    );\n};\n\n// TODO: Moved to shared package! Delete it later, right now it uses for cashier wallet modals\n// TODO: Refactor using data transformation layer pattern when we will have API for wallets (e.g. wallet.icon)\nexport const getWalletCurrencyIcon = (currency: string, is_dark_mode_on: boolean, is_modal = false) => {\n    switch (currency) {\n        case 'demo':\n            if (is_modal) return 'IcWalletDerivDemoLight';\n            return is_dark_mode_on ? 'IcWalletDerivDemoDark' : 'IcWalletDerivDemoLight';\n        case 'USD':\n            return 'IcWalletCurrencyUsd';\n        case 'EUR':\n            return 'IcWalletCurrencyEur';\n        case 'AUD':\n            return 'IcWalletCurrencyAud';\n        case 'GBP':\n            return 'IcWalletCurrencyGbp';\n        case 'BTC':\n            return is_dark_mode_on ? 'IcWalletBitcoinDark' : 'IcWalletBitcoinLight';\n        case 'ETH':\n            return is_dark_mode_on ? 'IcWalletEtheriumDark' : 'IcWalletEtheriumLight';\n        case 'USDT':\n        case 'eUSDT':\n        case 'tUSDT':\n        case 'UST':\n            if (is_modal) {\n                return is_dark_mode_on ? 'IcWalletModalTetherDark' : 'IcWalletModalTetherLight';\n            }\n            return is_dark_mode_on ? 'IcWalletTetherDark' : 'IcWalletTetherLight';\n        case 'LTC':\n            return is_dark_mode_on ? 'IcWalletLiteCoinDark' : 'IcWalletLiteCoinLight';\n        case 'USDC':\n            return is_dark_mode_on ? 'IcWalletUsdCoinDark' : 'IcWalletUsdCoinLight';\n        default:\n            return 'Unknown';\n    }\n};\n","import { isCryptocurrency } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\n\ntype TAccountProps = {\n    a_currency: string;\n    b_currency: string;\n    a_is_crypto?: boolean;\n    b_is_crypto?: boolean;\n    a_is_fiat?: boolean;\n    b_is_fiat?: boolean;\n    loginid: string;\n    is_virtual?: boolean;\n    icon?: string;\n    is_disabled?: boolean;\n}[];\ntype TAccounts = {\n    currency: string;\n}[];\nexport const getSortedAccountList = (account_list: TAccountProps, accounts: TAccounts) => {\n    // sort accounts as follows:\n    // top is fiat, then crypto (each alphabetically by currency), then demo\n    return [...account_list].sort((a, b) => {\n        const a_currency = accounts[a.loginid as unknown as number].currency;\n        const b_currency = accounts[b.loginid as unknown as number].currency;\n        const a_is_crypto = isCryptocurrency(a_currency);\n        const b_is_crypto = isCryptocurrency(b_currency);\n        const a_is_fiat = !a_is_crypto;\n        const b_is_fiat = !b_is_crypto;\n        if (a.is_virtual || b.is_virtual) {\n            return a.is_virtual ? 1 : -1;\n        } else if ((a_is_crypto && b_is_crypto) || (a_is_fiat && b_is_fiat)) {\n            return a_currency < b_currency ? -1 : 1;\n        } else if (a_is_fiat && b_is_crypto) {\n            return -1;\n        }\n        return 1;\n    });\n};\n\nexport const getPlatformToggleOptions = (is_eu_title: boolean) => [\n    { text: is_eu_title ? localize('Multipliers') : localize('Options'), value: 'options' },\n    { text: localize('CFDs'), value: 'cfd' },\n];\n","import { useCFDAccounts, useExchangeRate, usePlatformAccounts } from '@deriv/hooks';\n\nexport const isRatesLoaded = (\n    is_real: boolean,\n    total_assets_real_currency: string | undefined,\n    platform_real_accounts: ReturnType<typeof usePlatformAccounts>['real'],\n    cfd_real_accounts: ReturnType<typeof useCFDAccounts>['real'],\n    exchange_rates: ReturnType<typeof useExchangeRate>['exchange_rates']\n) => {\n    // for demo\n    if (!is_real) return true;\n\n    const currencies_need_exchange_rates: string[] = [];\n    platform_real_accounts.forEach(account => {\n        const target = account.currency || total_assets_real_currency || '';\n        if (target && total_assets_real_currency !== target && !currencies_need_exchange_rates.includes(target)) {\n            currencies_need_exchange_rates.push(target);\n        }\n    });\n    cfd_real_accounts.forEach(account => {\n        const target = account.currency || total_assets_real_currency || '';\n        if (target && total_assets_real_currency !== target && !currencies_need_exchange_rates.includes(target)) {\n            currencies_need_exchange_rates.push(target);\n        }\n    });\n\n    const exchange_rates_keys = Object.keys(exchange_rates?.[total_assets_real_currency ?? ''] ?? {});\n    const is_all_currencies_inside = currencies_need_exchange_rates.every(currency =>\n        exchange_rates_keys.includes(currency)\n    );\n\n    return (\n        currencies_need_exchange_rates.length === 0 ||\n        (total_assets_real_currency &&\n            exchange_rates?.[total_assets_real_currency] &&\n            currencies_need_exchange_rates.length &&\n            is_all_currencies_inside)\n    );\n};\n","import { TTrustpilotWidgetData } from 'Types';\n\nexport const fetchTrustpilotData = async () => {\n    const defaultData = {\n        stars: 4.5,\n        trustScore: 4.5,\n        numberOfReviews: Number(47748).toLocaleString(),\n    };\n\n    try {\n        const appName = 'deriv.com';\n        const apiKey = process.env.TRUSTPILOT_API_KEY;\n\n        if (!appName || !apiKey) {\n            return {\n                ...defaultData,\n                error: 'Trustpilot app name or API key is missing',\n            };\n        }\n\n        const url = `https://api.trustpilot.com/v1/business-units/find?name=${appName}&apikey=${apiKey}`;\n        const response = await fetch(url);\n\n        if (!response.ok) {\n            return {\n                ...defaultData,\n                error: `Network response was not ok: ${response.statusText}`,\n            };\n        }\n\n        const result = await response.json();\n\n        const trustpilotData: TTrustpilotWidgetData = {\n            stars: result.score?.stars || defaultData.stars,\n            trustScore: result.score?.trustScore || defaultData.trustScore,\n            numberOfReviews: result.numberOfReviews?.total?.toLocaleString() || defaultData.numberOfReviews,\n        };\n\n        return trustpilotData;\n    } catch (error) {\n        const trustpilotData: TTrustpilotWidgetData = {\n            ...defaultData,\n            error: `Something wrong: error = ${error}`,\n        };\n\n        return trustpilotData;\n    }\n};\n","import { useEffect } from 'react';\nimport { useStore } from '@deriv/stores';\nimport { ACCOUNT_BADGE_STATUS } from '@deriv/shared';\n\nconst useGetMFAccountStatus = () => {\n    const { client } = useStore();\n    const { account_status, updateAccountStatus } = client || {};\n\n    useEffect(() => {\n        async function fetchData() {\n            await updateAccountStatus();\n        }\n        fetchData();\n    }, []);\n    const authentication = account_status?.authentication;\n    const poi_status = authentication?.identity?.status;\n    const onfido_status = authentication?.identity?.services?.onfido?.status;\n    const manual_status = authentication?.identity?.services?.manual?.status;\n    const poa_status = authentication?.document?.status;\n\n    const STATUS = {\n        NONE: 'none',\n        VERIFIED: 'verified',\n        PENDING: 'pending',\n        REJECTED: 'rejected',\n        EXPIRED: 'expired',\n        SUSPECTED: 'suspected',\n    } as const;\n    const failed_cases = [STATUS.REJECTED, STATUS.EXPIRED, STATUS.SUSPECTED];\n\n    //@ts-expect-error we can ignore this error since we are checking the status and returning true or false\n    const need_poa_resubmission = poa_status && failed_cases.includes(poa_status);\n    const poa_pending = poa_status === STATUS.PENDING;\n    const poa_not_submitted = poa_status === STATUS.NONE;\n\n    const poi_verified_by_onfido_or_manual = [onfido_status, manual_status].includes(STATUS.VERIFIED);\n    const poi_pending_by_onfido_or_manual =\n        [onfido_status, manual_status].includes(STATUS.PENDING) && !poi_verified_by_onfido_or_manual;\n\n    const poi_not_submitted_by_onfido_or_manual = [onfido_status, manual_status].every(\n        status => status === STATUS.NONE\n    );\n    const need_poi_submission = !poi_pending_by_onfido_or_manual && !poi_verified_by_onfido_or_manual;\n\n    const need_poi_resubmission = !poi_not_submitted_by_onfido_or_manual && need_poi_submission;\n    const is_verified = poi_status === STATUS.VERIFIED && poa_status === STATUS.VERIFIED;\n\n    const getMFAccountStatus = () => {\n        if (poa_status && onfido_status && manual_status) {\n            if (need_poi_resubmission || need_poa_resubmission) {\n                return ACCOUNT_BADGE_STATUS.FAILED;\n            } else if (poi_not_submitted_by_onfido_or_manual || poa_not_submitted) {\n                return ACCOUNT_BADGE_STATUS.NEEDS_VERIFICATION;\n            } else if (poi_pending_by_onfido_or_manual || poa_pending) {\n                return ACCOUNT_BADGE_STATUS.PENDING;\n            }\n            return null;\n        }\n        return null;\n    };\n    const getVerificationStatus = () => (!is_verified ? { poi_status, poa_status, valid_tin: 1, required_tin: 1 } : {});\n\n    return {\n        mf_account_status: getMFAccountStatus(),\n        kyc_status: getVerificationStatus(),\n    };\n};\n\nexport default useGetMFAccountStatus;\n","import { useStore } from '@deriv/stores';\n\nconst useHasMaltaInvestAccount = () => {\n    const { client } = useStore();\n    const { active_accounts } = client;\n    const has_malta_invest_account = active_accounts.some(\n        account => account.landing_company_shortcode === 'maltainvest'\n    );\n\n    return has_malta_invest_account;\n};\n\nexport default useHasMaltaInvestAccount;\n","import { ACCOUNT_BADGE_STATUS } from '@deriv/shared';\nimport useHasMaltaInvestAccount from './useHasMaltaInvestAccount';\nimport useGetMFAccountStatus from './useGetMFAccountStatus';\nimport { useStore } from '@deriv/stores';\n\nconst useMFAccountStatus = () => {\n    const {\n        client: { is_eu },\n    } = useStore();\n    const has_malta_invest_account = useHasMaltaInvestAccount();\n    const { mf_account_status } = useGetMFAccountStatus();\n\n    const should_show_status_for_multipliers_account =\n        is_eu &&\n        has_malta_invest_account &&\n        mf_account_status &&\n        [ACCOUNT_BADGE_STATUS.PENDING, ACCOUNT_BADGE_STATUS.FAILED, ACCOUNT_BADGE_STATUS.NEEDS_VERIFICATION].includes(\n            mf_account_status\n        );\n    return should_show_status_for_multipliers_account ? mf_account_status : null;\n};\n\nexport default useMFAccountStatus;\n","import { useStore } from '@deriv/stores';\n\n/**\n * we can use this hook to get the platform demo account.\n * it loops through the all of user's accounts, finds and returns demo account\n */\n\nconst usePlatformDemoAccount = () => {\n    const { client } = useStore();\n    const { accounts } = client;\n    const account_list = Object.keys(accounts).map(loginid => ({\n        ...accounts[loginid],\n        loginid,\n    }));\n\n    const platform_demo_account = account_list.find(account => account.is_virtual);\n\n    return platform_demo_account;\n};\n\nexport default usePlatformDemoAccount;\n","import { useStore } from '@deriv/stores';\n\n/**\n * we can use this hook to get all real accounts for both Eu and Non-Eu regions.\n * it loops through the accounts list and returns all real accounts\n */\n\nconst usePlatformRealAccounts = () => {\n    const { client, traders_hub } = useStore();\n    const { accounts } = client;\n    const { is_eu_user } = traders_hub;\n    const account_list = Object.keys(accounts).map(loginid => ({\n        ...accounts[loginid],\n        loginid,\n    }));\n\n    const platform_real_accounts = account_list.filter(account => {\n        const is_maltainvest =\n            'landing_company_shortcode' in account && account.landing_company_shortcode === 'maltainvest';\n\n        if (account.is_virtual) return false;\n        if (!is_eu_user) return !is_maltainvest;\n\n        return is_maltainvest;\n    });\n\n    return platform_real_accounts;\n};\n\nexport default usePlatformRealAccounts;\n","import usePlatformDemoAccount from './usePlatformDemoAccount';\nimport usePlatformRealAccounts from './usePlatformRealAccounts';\n\n/**\n * this is a wrapper hook for usePlatformDemoAccount and usePlatformRealAccounts\n * and it returns different platform accounts which are demo, and real\n */\nconst usePlatformAccounts = () => {\n    const platform_demo_account = usePlatformDemoAccount();\n    const platform_real_accounts = usePlatformRealAccounts();\n\n    return {\n        demo: platform_demo_account,\n        real: platform_real_accounts,\n    };\n};\n\nexport default usePlatformAccounts;\n"],"names":["r","self","e","t","o","Object","getOwnPropertySymbols","prototype","hasOwnProperty","propertyIsEnumerable","exports","assign","String","getOwnPropertyNames","fromCharCode","map","join","split","forEach","keys","n","i","a","c","TypeError","s","arguments","length","d","call","u","Symbol","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","key","ref","__self","__source","jsx","defaultProps","$$typeof","type","props","_owner","current","react","__esModule","defineProperty","enumerable","get","ACCOUNT_BADGE_STATUS","PENDING","text","Localize","i18n_default_text","icon","FAILED","icon_size","NEEDS_VERIFICATION","_typeof","module","require","define","mt5_account_status","BadgeTextComponent","React","Text","weight","size","color","MT5_ACCOUNT_STATUS","MIGRATED_WITH_POSITION","components","MIGRATED_WITHOUT_POSITION","UNDER_MAINTENANCE","TRADING_PLATFORM_STATUS","UNAVAILABLE","IsIconCurrency","undefined","Currencies","find","currency","_ref","_objectWithoutProperties","_excluded","Icon","_extends","concat","capitalizeFirstLetter","toLowerCase","CurrencyPlatformIcon","TradingPlatformIcon","className","CurrencyIcon","Dropdown","observer","_ref2","_objectDestructuringEmpty","store","useStore","modules","traders_hub","is_eu_user","is_demo","current_list","cfd","has_mf_mt5_account","some","account","landing_company_short","Jurisdiction","MALTA_INVEST","_ref3","actions","children","_ref3$has_interaction","has_interaction","title","_ref3$show_dropdown","show_dropdown","document_status","client","authentication_status","classNames","_accounts$loginid","_useStore","common","accounts","loginid","resetVirtualBalance","default_currency","selected_account_type","platform_demo_account","usePlatformAccounts","demo","current_language","CurrencySwitcherContainer","BalanceText","balance","Button","secondary","onClick","localize","line_height","ContentLoader","viewBox","backgroundColor","foregroundColor","cx","cy","x","y","rx","ry","width","height","default_balance","RealAccountCard","history","useHistory","openModal","uppercase_currency","toUpperCase","get_currency","is_traders_dashboard_tracking_enabled","_slicedToArray","useGrowthbookGetFeatureValue","featureFlag","defaultValue","Number","cacheTrackEvents","loadEvent","event","name","properties","action","form_name","account_mode","isCryptocurrency","startPerformanceEventTimer","stopPropagation","push","routes","cashier_deposit","getCurrencyName","account_list","setVerificationModalOpen","setAppstorePlatform","icon_title","onClickBanner","_getStatusBadgeConfig","badge_text","badge_icon_size","createElement","account_status","mf_account_status","RealAccountSwitcher","_useStore2","is_logging_in","is_switching","has_maltainvest_account","no_CR_account","no_MF_account","eu_account","AccountNeedsVerification","has_any_real_account","is_real","DemoAccountCard","Options","description","Switcher","is_deriv_platform","CurrencySwitcherCard","_ref3$is_deriv_platfo","is_outside_grid_container","GridContainer","link_to","onAction","is_external","is_buttons_disabled","new_tab","dxtrade_tokens","href","target","rel","primary","Link","to","is_disabled","real","TradeButton","action_type","is_account_being_created","disabled","primary_light","MultiActionButtonGroup","market_type","status","is_modal_open","setModalOpen","mt5_login_list","eligible_accounts_label","filter","SVG","getMT5AccountTitle","account_type","jurisdiction","is_migrated_with_position","Modal","is_open","toggleModal","small","has_close_icon","Body","as","values","from_account","to_account","Footer","has_effect","large","client_kyc_status","availability","_ref$clickable_icon","clickable_icon","_ref$is_deriv_platfor","sub_title","has_divider","platform","short_code_and_region","mt5_acc_auth_status","selected_mt5_jurisdiction","_ref$is_new","is_new","is_demo_low_risk","content_flag","getMT5AccountKYCStatus","setAccountUnavailableModal","setServerMaintenanceModal","setJurisdictionSelectedShortcode","setProduct","_React$useState2","is_open_position_svg_modal_open","setIsOpenPositionSvgModalOpen","low_risk_cr_non_eu","ContentFlag","LOW_RISK_CR_NON_EU","getAppstorePlatforms","getMFAppstorePlatforms","config","app_desc","_getMT5StatusBadgeCon","getMT5StatusBadgeConfig","badge_icon","badge_size","is_mt5_maintainance_status","includes","platform_name","is_existing_real_ctrader_account","CFD_PLATFORMS","CTRADER","TradingPlatformIconProps","account_name","DERIV_PLATFORM_NAMES","TRADER","window","open","getStaticUrl","DBOT","SMARTTRADER","getUrlSmartTrader","GO","MT5","DXTRADE","replaceAll","CFD_PRODUCTS_TITLE","GOLD","StatusBadge","_selected_mt5_jurisdi","_selected_mt5_jurisdi2","product","handleStatusBadgeClick","OpenPositionsSVGModal","TradingAppCardActions","isDesktop","useDevice","align","StaticUrl","_ref$size","_ref$underline_style","underline_style","getTextClassName","formatMoney","getAccountTypes","value","region_availability","getPlatformSettingsAppstore","trade","bot","app_icon","app_title","getHasDivider","current_item_index","list_size","available_grid_columns","isMobile","getPlatformToggleOptions","is_eu_title","isRatesLoaded","total_assets_real_currency","platform_real_accounts","cfd_real_accounts","exchange_rates","_exchange_rates","currencies_need_exchange_rates","exchange_rates_keys","is_all_currencies_inside","every","_regeneratorRuntime","iterator","asyncIterator","toStringTag","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","h","l","f","GeneratorFunction","GeneratorFunctionPrototype","p","getPrototypeOf","v","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","ownKeys","getOwnPropertyDescriptor","apply","_objectSpread","_defineProperty","getOwnPropertyDescriptors","defineProperties","toPrimitive","_toPrimitive","_toPropertyKey","asyncGeneratorStep","fetchTrustpilotData","_callee","defaultData","_result$score","_result$score2","_result$numberOfRevie","appName","apiKey","url","response","result","trustpilotData","_trustpilotData","_context","stars","trustScore","numberOfReviews","toLocaleString","process","error","fetch","ok","statusText","json","score","total","t0","_next","_throw","_authentication$ident","_authentication$ident2","_authentication$ident3","_authentication$docum","updateAccountStatus","useEffect","_fetchData","fetchData","authentication","poi_status","identity","onfido_status","services","onfido","manual_status","manual","poa_status","document","STATUS","need_poa_resubmission","poa_pending","poa_not_submitted","poi_verified_by_onfido_or_manual","poi_pending_by_onfido_or_manual","poi_not_submitted_by_onfido_or_manual","is_verified","kyc_status","valid_tin","required_tin","active_accounts","landing_company_shortcode","is_eu","has_malta_invest_account","useHasMaltaInvestAccount","useGetMFAccountStatus","is_virtual","is_maltainvest","usePlatformDemoAccount","usePlatformRealAccounts"],"sourceRoot":""}