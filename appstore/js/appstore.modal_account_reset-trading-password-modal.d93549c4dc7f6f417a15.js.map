{"version":3,"file":"appstore/js/appstore.modal_account_reset-trading-password-modal.d93549c4dc7f6f417a15.js","mappings":"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","sources":["webpack://@deriv/appstore/../account/src/Components/reset-trading-password-modal/reset-trading-password-modal.tsx","webpack://@deriv/appstore/../account/src/Components/reset-trading-password-modal/index.js"],"sourcesContent":["import React, { ChangeEvent } from 'react';\nimport { Formik, Form, FormikValues, FormikErrors } from 'formik';\nimport { useHistory } from 'react-router-dom';\nimport { Button, Dialog, Icon, PasswordInput, PasswordMeter, Text, FormSubmitButton } from '@deriv/components';\nimport {\n    getErrorMessages,\n    validPassword,\n    validLength,\n    WS,\n    getCFDPlatformLabel,\n    CFD_PLATFORMS,\n    validMT5Password,\n} from '@deriv/shared';\nimport { localize, Localize } from '@deriv/translations';\nimport { TPlatforms } from '../../Types';\nimport './reset-trading-password-modal.scss';\n\ntype TResetTradingPassword = {\n    setDialogTitleFunc?: (value: boolean) => void;\n    toggleResetTradingPasswordModal: (value: boolean) => void;\n    verification_code: string;\n    platform: TPlatforms;\n};\n\nconst ResetTradingPassword = ({\n    setDialogTitleFunc,\n    toggleResetTradingPasswordModal,\n    verification_code,\n    platform,\n}: TResetTradingPassword) => {\n    const handleSubmit = (values: FormikValues, actions: FormikValues) => {\n        actions.setSubmitting(true);\n\n        const params = {\n            new_password: values.password,\n            verification_code,\n            platform,\n        };\n\n        WS.tradingPlatformPasswordReset(params).then(async (response: FormikValues) => {\n            if (response.error) {\n                actions.setStatus({ error_msg: response.error.message, error_code: response.error.code });\n                setDialogTitleFunc?.(true);\n            } else {\n                actions.resetForm({ password: '' });\n                actions.setStatus({ reset_complete: true });\n                WS.getAccountStatus();\n            }\n            actions.setSubmitting(false);\n        });\n    };\n\n    const validateReset = (values: FormikValues) => {\n        const errors: FormikErrors<FormikValues> = {};\n        const max_length = platform === CFD_PLATFORMS.MT5 ? 16 : 25;\n\n        if (\n            !validLength(values.password, {\n                min: 8,\n                max: max_length,\n            })\n        ) {\n            errors.password = localize('You should enter {{min_number}}-{{max_number}} characters.', {\n                min_number: 8,\n                max_number: max_length,\n            });\n        } else if (!validPassword(values.password)) {\n            errors.password = getErrorMessages().password();\n        } else if (platform === CFD_PLATFORMS.MT5 && !validMT5Password(values.password)) {\n            errors.password = localize(\n                'Please include at least 1 special character such as ( _ @ ? ! / # ) in your password.'\n            );\n        }\n\n        return errors;\n    };\n\n    const reset_initial_values = { password: '' };\n\n    return (\n        <div className='reset-trading-password'>\n            <Formik\n                initialValues={reset_initial_values}\n                initialStatus={{ reset_complete: false, error_msg: '', error_code: '' }}\n                validate={validateReset}\n                onSubmit={handleSubmit}\n            >\n                {({\n                    handleBlur,\n                    errors,\n                    values,\n                    resetForm,\n                    touched,\n                    isSubmitting,\n                    setFieldTouched,\n                    handleChange,\n                    status,\n                }) => (\n                    <Form>\n                        <React.Fragment>\n                            {status.error_msg && (\n                                <div className='reset-trading-password__error'>\n                                    <Icon icon='IcMt5Expired' size={128} />\n                                    <Text\n                                        as='p'\n                                        size='xs'\n                                        weight='bold'\n                                        align='center'\n                                        className='reset-trading-password__lead'\n                                    >\n                                        {status.error_msg}\n                                    </Text>\n                                    {status.error_code === 'InvalidToken' && (\n                                        <Text\n                                            as='p'\n                                            color='prominent'\n                                            size='xs'\n                                            align='center'\n                                            className='reset-trading-password__description--is-centered'\n                                        >\n                                            <Localize i18n_default_text='Please request a new password and check your email for the new token.' />\n                                        </Text>\n                                    )}\n                                    <Button\n                                        className='reset-trading-password__confirm-button'\n                                        primary\n                                        large\n                                        onClick={() => {\n                                            resetForm();\n                                            toggleResetTradingPasswordModal(false);\n                                        }}\n                                    >\n                                        <Localize i18n_default_text='Ok' />\n                                    </Button>\n                                </div>\n                            )}\n                            {status.reset_complete && (\n                                <div className='reset-trading-password__password-success'>\n                                    <Icon\n                                        className='reset-trading-password__icon'\n                                        icon='IcSuccessResetTradingPassword'\n                                        size={128}\n                                    />\n                                    <Text as='p' weight='bold' className='reset-trading-password__heading'>\n                                        <Localize i18n_default_text='Success' />\n                                    </Text>\n                                    <Text align='center' as='p' size='xs' className='reset-trading-password__subtext'>\n                                        {localize(\n                                            'You have a new {{platform}} password to log in to your {{platform}} accounts on the web and mobile apps.',\n                                            {\n                                                platform: getCFDPlatformLabel(platform),\n                                            }\n                                        )}\n                                    </Text>\n                                    <Button\n                                        type='button'\n                                        onClick={() => {\n                                            resetForm();\n                                            toggleResetTradingPasswordModal(false);\n                                        }}\n                                        primary\n                                        large\n                                    >\n                                        <Localize i18n_default_text='Done' />\n                                    </Button>\n                                </div>\n                            )}\n                            {!status.error_msg && !status.reset_complete && (\n                                <div className='reset-trading-password__set-password'>\n                                    <Text as='p' weight='bold' className='reset-trading-password__heading'>\n                                        <Localize\n                                            i18n_default_text='Create a new {{platform}} password'\n                                            values={{\n                                                platform: getCFDPlatformLabel(platform),\n                                            }}\n                                        />\n                                    </Text>\n                                    <Text as='p' size='xs' className='reset-trading-password__details'>\n                                        <Localize\n                                            i18n_default_text='You can use this password for all your {{platform}} accounts.'\n                                            values={{\n                                                platform: getCFDPlatformLabel(platform),\n                                            }}\n                                        />\n                                    </Text>\n                                    <fieldset className='reset-trading-password__input-field'>\n                                        <PasswordMeter\n                                            input={values.password}\n                                            has_error={!!(touched.password && errors.password)}\n                                            custom_feedback_messages={\n                                                getErrorMessages().password_warnings as unknown as Record<\n                                                    string,\n                                                    string\n                                                >\n                                            }\n                                        >\n                                            <PasswordInput\n                                                autoComplete='new-password'\n                                                className='reset-trading-password__password-field'\n                                                name='password'\n                                                label={localize('{{platform}} password', {\n                                                    platform: getCFDPlatformLabel(platform),\n                                                })}\n                                                onChange={(e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n                                                    setFieldTouched('password', true);\n                                                    handleChange(e);\n                                                }}\n                                                onBlur={handleBlur}\n                                                error={touched.password ? errors.password : ''}\n                                                value={values.password}\n                                                data-lpignore='true'\n                                                required\n                                            />\n                                        </PasswordMeter>\n                                    </fieldset>\n                                    <Text as='p' size='xs' className='reset-trading-password__hint'>\n                                        {platform === CFD_PLATFORMS.MT5 ? (\n                                            <Localize i18n_default_text='Your password must contain between 8-16 characters that include uppercase and lowercase letters, and at least one number and special character such as ( _ @ ? ! / # ).' />\n                                        ) : (\n                                            <Localize i18n_default_text='Strong passwords contain at least 8 characters, combine uppercase and lowercase letters, numbers, and symbols.' />\n                                        )}\n                                    </Text>\n                                    <FormSubmitButton\n                                        is_disabled={!values.password || !!errors.password || isSubmitting}\n                                        has_cancel\n                                        cancel_label={localize('Cancel')}\n                                        onCancel={() => toggleResetTradingPasswordModal(false)}\n                                        is_loading={isSubmitting}\n                                        label={localize('Create')}\n                                    />\n                                </div>\n                            )}\n                        </React.Fragment>\n                    </Form>\n                )}\n            </Formik>\n        </div>\n    );\n};\n\ntype TResetTradingPasswordModal = {\n    disableApp: () => void;\n    enableApp: () => void;\n    is_loading: boolean;\n    is_visible: boolean;\n} & TResetTradingPassword;\n\nexport const ResetTradingPasswordModal = ({\n    disableApp,\n    enableApp,\n    is_loading,\n    is_visible,\n    toggleResetTradingPasswordModal,\n    verification_code,\n    platform,\n}: TResetTradingPasswordModal) => {\n    const [dialog_title, setDialogTitle] = React.useState('');\n    const history = useHistory();\n    React.useEffect(() => {\n        if (is_visible && history.location.search !== '') {\n            history.replace({\n                search: '',\n                hash: location.hash,\n            });\n        }\n    }, [history, is_visible]);\n\n    const setDialogTitleFunc = (is_invalid_token: boolean) => {\n        setDialogTitle(\n            is_invalid_token\n                ? localize('Reset {{platform}} password', {\n                      platform: getCFDPlatformLabel(platform),\n                  })\n                : ''\n        );\n    };\n\n    return (\n        <Dialog\n            className='reset-trading-password__dialog'\n            disableApp={disableApp}\n            enableApp={enableApp}\n            has_close_icon={!!dialog_title}\n            is_loading={is_loading}\n            is_visible={is_visible}\n            onConfirm={() => toggleResetTradingPasswordModal(false)}\n            title={dialog_title}\n        >\n            <ResetTradingPassword\n                toggleResetTradingPasswordModal={toggleResetTradingPasswordModal}\n                verification_code={verification_code}\n                setDialogTitleFunc={setDialogTitleFunc}\n                platform={platform}\n            />\n        </Dialog>\n    );\n};\n","import { ResetTradingPasswordModal } from './reset-trading-password-modal';\n\nexport default ResetTradingPasswordModal;\n"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","ResetTradingPassword","_ref","setDialogTitleFunc","toggleResetTradingPasswordModal","verification_code","platform","React","className","Formik","initialValues","password","initialStatus","reset_complete","error_msg","error_code","validate","errors","max_length","CFD_PLATFORMS","MT5","validLength","min","max","validPassword","validMT5Password","localize","getErrorMessages","min_number","max_number","onSubmit","actions","setSubmitting","params","new_password","WS","tradingPlatformPasswordReset","_ref2","_callee","response","_context","error","setStatus","message","code","resetForm","getAccountStatus","arguments","apply","_next","_throw","_x","_ref3","handleBlur","touched","isSubmitting","setFieldTouched","handleChange","status","Form","Icon","icon","size","Text","as","weight","align","color","Localize","i18n_default_text","Button","primary","large","onClick","getCFDPlatformLabel","PasswordMeter","input","has_error","custom_feedback_messages","password_warnings","PasswordInput","autoComplete","label","onChange","onBlur","required","FormSubmitButton","is_disabled","has_cancel","cancel_label","onCancel","is_loading","_ref4","disableApp","enableApp","is_visible","_React$useState2","_slicedToArray","dialog_title","setDialogTitle","history","useHistory","location","search","replace","hash","Dialog","has_close_icon","onConfirm","title","is_invalid_token"],"sourceRoot":""}