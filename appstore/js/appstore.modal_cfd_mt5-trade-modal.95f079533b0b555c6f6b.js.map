{"version":3,"file":"appstore/js/appstore.modal_cfd_mt5-trade-modal.95f079533b0b555c6f6b.js","mappings":"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","sources":["webpack://@deriv/appstore/../cfd/src/Containers/migration-banner/index.ts","webpack://@deriv/appstore/../cfd/src/Containers/mt5-desktop-redirect-option.tsx","webpack://@deriv/appstore/../cfd/src/Containers/mt5-mobile-redirect-option.tsx","webpack://@deriv/appstore/../cfd/src/Components/passwordbox.tsx","webpack://@deriv/appstore/../cfd/src/Components/cfd-account-copy.tsx","webpack://@deriv/appstore/../cfd/src/Components/specbox.tsx","webpack://@deriv/appstore/../cfd/src/Containers/dmt5-trade-modal.tsx","webpack://@deriv/appstore/../cfd/src/Helpers/config.tsx","webpack://@deriv/appstore/../cfd/src/Containers/ctrader-derivx-trade-modal.tsx","webpack://@deriv/appstore/../cfd/src/Containers/mt5-trade-modal.tsx"],"sourcesContent":["import MigrationBanner from './migration-banner';\n\nexport default MigrationBanner;\n","import React, { Fragment } from 'react';\nimport { Icon, Text } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { getDesktopDownloadOptions, getMobileDownloadOptions } from '../Helpers/constants';\nimport { CFD_PLATFORMS, getCFDPlatformLabel, getPlatformSettings, getUrlBase } from '@deriv/shared';\nimport { DetailsOfEachMT5Loginid } from '@deriv/api-types';\nimport './mt5-mobile-redirect-option.scss';\n\ntype TMT5DesktopRedirectOptionProps = {\n    account_title: string;\n    mt5_trade_account: DetailsOfEachMT5Loginid;\n};\n\nconst MT5DesktopRedirectOption = ({ account_title, mt5_trade_account }: TMT5DesktopRedirectOptionProps) => {\n    const desktopDownloadOptions = getDesktopDownloadOptions({ mt5_trade_account });\n    const mobileDownloadOptions = getMobileDownloadOptions({ mt5_trade_account });\n\n    return (\n        <Fragment>\n            <div className='cfd-trade-modal__download-center-app'>\n                {desktopDownloadOptions.map(option => (\n                    <div key={option.icon} className='cfd-trade-modal__download-center-app--option'>\n                        <Icon icon={option.icon} size={32} />\n                        <Text className='cfd-trade-modal__download-center-app--option-item' size='xs'>\n                            {option.text}\n                        </Text>\n                        <a\n                            className='cfd-trade-modal__download-center-app--option-link'\n                            type='button'\n                            href={option.href as string}\n                            target='_blank'\n                            rel='noopener noreferrer'\n                        >\n                            <Text size='xxs' weight='bold' color='prominent'>\n                                {option.button_text}\n                            </Text>\n                        </a>\n                    </div>\n                ))}\n            </div>\n            <Text align='center' as='div' className='cfd-trade-modal__download-center-text' size='xxs' weight='bold'>\n                {localize(\n                    'Download {{ platform }} on your phone to trade with the {{ platform }} {{ account }} account',\n                    {\n                        platform: getCFDPlatformLabel(CFD_PLATFORMS.MT5),\n                        account: account_title,\n                    }\n                )}\n            </Text>\n            <div className='cfd-trade-modal__download-center-options'>\n                <div className='cfd-trade-modal__download-center-options--mobile-links'>\n                    {mobileDownloadOptions.map(({ href, icon }) => (\n                        <a key={icon} href={href} target='_blank' rel='noopener noreferrer'>\n                            <Icon icon={icon} width={135} height={40} />\n                        </a>\n                    ))}\n                </div>\n\n                <div className='cfd-trade-modal__download-center-options--qrcode'>\n                    <img\n                        alt='mt5 download qr'\n                        src={getUrlBase('/public/images/common/mt5_download.png')}\n                        width={80}\n                        height={80}\n                    />\n                    <Text align='center' size='xxs'>\n                        {localize('Scan the QR code to download {{ platform }}.', {\n                            platform: getPlatformSettings(CFD_PLATFORMS.MT5).name,\n                        })}\n                    </Text>\n                </div>\n            </div>\n        </Fragment>\n    );\n};\n\nexport default MT5DesktopRedirectOption;\n","import React from 'react';\nimport { DetailsOfEachMT5Loginid } from '@deriv/api-types';\nimport { Icon, Text } from '@deriv/components';\nimport { getDeeplinkUrl, getMobileAppInstallerUrl, getWebtraderUrl } from '../Helpers/constants';\nimport './mt5-mobile-redirect-option.scss';\nimport { Localize } from '@deriv/translations';\n\nconst MT5MobileRedirectOption = ({ mt5_trade_account }: { mt5_trade_account: DetailsOfEachMT5Loginid }) => {\n    const mobileURLSet = async () => {\n        window.location.replace(getDeeplinkUrl({ mt5_trade_account }));\n        const mobileAppURL = await getMobileAppInstallerUrl({ mt5_trade_account });\n\n        const timeout = setTimeout(() => {\n            mobileAppURL && window.location.replace(mobileAppURL);\n        }, 4000);\n\n        document.addEventListener('visibilitychange', function () {\n            if (document.hidden) {\n                clearTimeout(timeout);\n            }\n\n            // iOS (17+) and certain browsers (edge) may have popups before redirecting\n            if (window.onblur) {\n                clearTimeout(timeout); // installer wont open but will redirect to MetaTrader5\n                if (!document.hidden) {\n                    mobileAppURL && window.location.replace(mobileAppURL); // if it is not redirecting then open installer\n                }\n            }\n        });\n    };\n\n    return (\n        <div className='mt5-download-container'>\n            <a\n                className='mt5-download-container--option'\n                href={getWebtraderUrl({ mt5_trade_account })}\n                target='_blank'\n                rel='noopener noreferrer'\n            >\n                <div className='full-row'>\n                    <Icon icon='IcDesktopOutline' size={16} />\n                    <Text align='left' size='xxs' weight='bold' className='title'>\n                        <Localize i18n_default_text={'MetaTrader5 web terminal'} />\n                    </Text>\n                    <Icon icon='IcChevronRight' size={16} />\n                </div>\n            </a>\n            <button className='mt5-download-container--option blue' onClick={mobileURLSet}>\n                <div className='full-row'>\n                    <Icon icon='IcMobileOutline' size={16} />\n                    <Text align='left' size='xxs' weight='bold' className='title'>\n                        <Localize i18n_default_text={'Trade with MT5 mobile app'} />\n                    </Text>\n                    <Icon icon='IcChevronRightLight' size={16} />\n                </div>\n            </button>\n\n            <Text as='p' size='xxxxs'>\n                <Localize\n                    i18n_default_text=\"Note: Don't have the MT5 app? Tap the <0>Trade with MT5 mobile app</0> button to download. Once you have\n                installed the app, return to this screen and hit the same button to log in.\"\n                    components={[<strong key={0} />]}\n                />\n            </Text>\n        </div>\n    );\n};\n\nexport default MT5MobileRedirectOption;\n","import React from 'react';\nimport { Button } from '@deriv/components';\nimport { TPasswordBoxProps } from './props.types';\nimport { Localize } from '@deriv/translations';\n\nconst PasswordBox = ({ onClick }: TPasswordBoxProps) => (\n    <div className='cfd-trade-modal__password-box'>\n        <Button className='cfd-trade-modal__password-action' transparent onClick={onClick}>\n            <Localize i18n_default_text='Forgot password?' />\n        </Button>\n    </div>\n);\n\nexport default PasswordBox;\n","import React from 'react';\nimport { Clipboard } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { isMobile } from '@deriv/shared';\nimport { TCFDAccountCopy } from './props.types';\n\nconst CFDAccountCopy = ({ text, className }: TCFDAccountCopy) => {\n    return (\n        <div className={className} data-testid='cfd_account_copy_main_div'>\n            <Clipboard\n                text_copy={text}\n                info_message={isMobile() ? '' : localize('copy')}\n                success_message={localize('copied!')}\n                popoverAlignment={isMobile() ? 'left' : 'bottom'}\n            />\n        </div>\n    );\n};\n\nexport { CFDAccountCopy };\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { Text } from '@deriv/components';\n\nimport { CFDAccountCopy } from './cfd-account-copy';\n\nexport type TSpecBoxProps = {\n    value?: string;\n    is_bold?: boolean;\n    is_broker?: boolean;\n};\n\nconst SpecBox = ({ value, is_bold, is_broker }: TSpecBoxProps) => (\n    <div className='cfd-trade-modal__spec-box '>\n        <Text\n            size='xs'\n            weight={is_bold ? 'bold' : ''}\n            className={classNames('cfd-trade-modal__spec-text', { 'cfd-trade-modal__spec-text-broker': is_broker })}\n        >\n            {value}\n        </Text>\n        <CFDAccountCopy text={value} className='cfd-trade-modal__spec-copy' />\n    </div>\n);\n\nexport default SpecBox;\n","import React from 'react';\nimport { TAdditionalDetailsOfEachMT5Loginid } from '@deriv/stores/types';\nimport { useDevice } from '@deriv-com/ui';\nimport { Text, Icon, Money, StatusBadge } from '@deriv/components';\nimport getMT5StatusBadgeConfig from '@deriv/account/src/Configs/get-mt5-status-badge-config';\nimport { getCFDAccountKey, MT5_ACCOUNT_STATUS, PRODUCT, Jurisdiction } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { Localize, localize } from '@deriv/translations';\nimport { CFD_PLATFORMS, MARKET_TYPE } from '../Helpers/cfd-config';\nimport TradingPlatformIcon from '../Assets/svgs/trading-platform';\nimport MigrationBanner from './migration-banner';\nimport MT5DesktopRedirectOption from './mt5-desktop-redirect-option';\nimport MT5MobileRedirectOption from './mt5-mobile-redirect-option';\nimport PasswordBox from '../Components/passwordbox';\nimport SpecBox from '../Components/specbox';\nimport { TCFDPasswordReset } from './props.types';\nimport { TProducts, TTradingPlatformAccounts } from '../Components/props.types';\n\ntype TMT5TradeModalProps = {\n    mt5_trade_account: TAdditionalDetailsOfEachMT5Loginid;\n    show_eu_related_content: boolean;\n    onPasswordManager: (\n        arg1: string | undefined,\n        arg2: string,\n        group: TCFDPasswordReset['account_group'],\n        arg4: string,\n        arg5: string | undefined\n    ) => void;\n    toggleModal: () => void;\n    product?: TProducts;\n    is_demo: string;\n};\n\nconst getTitle = (market_type: string, show_eu_related_content: boolean) => {\n    if (show_eu_related_content) localize('MT5 CFDs');\n    return market_type;\n};\n\nconst DMT5TradeModal = observer(\n    ({\n        mt5_trade_account,\n        show_eu_related_content,\n        onPasswordManager,\n        toggleModal,\n        product,\n        is_demo,\n    }: TMT5TradeModalProps) => {\n        const { isDesktop } = useDevice();\n        const { client } = useStore();\n        const { account_status: { authentication } = {} } = client;\n        const is_eligible_to_migrate = mt5_trade_account.eligible_to_migrate;\n\n        const getAccountTitle = () => {\n            switch (mt5_trade_account.product) {\n                case PRODUCT.STANDARD:\n                    return 'Standard';\n                case PRODUCT.SWAPFREE:\n                    return 'Swap-Free';\n                case PRODUCT.ZEROSPREAD:\n                    return 'Zero Spread';\n                case PRODUCT.STP:\n                    return 'Financial STP';\n                case PRODUCT.GOLD:\n                    return 'Gold';\n                default:\n                    return show_eu_related_content ? 'CFDs' : 'Financial';\n            }\n        };\n\n        const getAccountIcons = () => {\n            if (show_eu_related_content && product === PRODUCT.FINANCIAL) return 'CFDs';\n            else if (mt5_trade_account.market_type === MARKET_TYPE.SYNTHETIC) return 'Standard';\n            else if (mt5_trade_account.market_type === MARKET_TYPE.ALL && product === PRODUCT.SWAPFREE)\n                return 'SwapFree';\n            else if (mt5_trade_account.market_type === MARKET_TYPE.ALL && product === PRODUCT.ZEROSPREAD)\n                return 'ZeroSpread';\n            else if (mt5_trade_account.market_type === MARKET_TYPE.FINANCIAL && product === PRODUCT.GOLD) return 'Gold';\n            return 'Financial';\n        };\n\n        const { text: badge_text, icon: badge_icon } = getMT5StatusBadgeConfig(mt5_trade_account?.status);\n        const has_migration_status = [\n            MT5_ACCOUNT_STATUS.MIGRATED_WITH_POSITION,\n            MT5_ACCOUNT_STATUS.MIGRATED_WITHOUT_POSITION,\n        ].includes(mt5_trade_account?.status);\n        const getShortcode = () => {\n            switch (mt5_trade_account.landing_company_short) {\n                case Jurisdiction.SVG:\n                    return 'SVG';\n                case Jurisdiction.BVI:\n                    return 'BVI';\n                case Jurisdiction.VANUATU:\n                    return 'Vanuatu';\n                case Jurisdiction.MAURITIUS:\n                    return 'DML';\n                default:\n                    return null;\n            }\n        };\n\n        return (\n            <div className='cfd-trade-modal-container'>\n                <div className='cfd-trade-modal'>\n                    <TradingPlatformIcon icon={getAccountIcons()} size={24} />\n                    <div className='cfd-trade-modal__desc'>\n                        <div className='cfd-trade-modal__desc-heading'>\n                            <Text size='xs' line_height='l'>\n                                {getAccountTitle()}\n                            </Text>\n                            {!is_demo ? (\n                                getShortcode() && (\n                                    <Text size='xxs' line_height='l' className='cfd-trade-modal__desc-heading--real'>\n                                        {getShortcode()}\n                                    </Text>\n                                )\n                            ) : (\n                                <Text\n                                    size='xxs'\n                                    line_height='l'\n                                    weight='bold'\n                                    className='cfd-trade-modal__desc-heading--demo'\n                                >\n                                    {localize('Demo')}\n                                </Text>\n                            )}\n                        </div>\n                        {(mt5_trade_account as TTradingPlatformAccounts)?.display_login && (\n                            <Text color='less-prominent' size='xxxs' line_height='xxxs'>\n                                {(mt5_trade_account as TTradingPlatformAccounts)?.display_login}\n                            </Text>\n                        )}\n                    </div>\n                    <div className='cfd-trade-modal__acc_status'>\n                        {mt5_trade_account?.display_balance && (\n                            <Text\n                                size='xs'\n                                color='profit-success'\n                                className='cfd-trade-modal__desc-balance'\n                                weight='bold'\n                            >\n                                <Money\n                                    amount={mt5_trade_account.display_balance}\n                                    currency={mt5_trade_account.currency}\n                                    has_sign={!!mt5_trade_account.balance && mt5_trade_account.balance < 0}\n                                    show_currency\n                                />\n                            </Text>\n                        )}\n                        {has_migration_status && (\n                            <StatusBadge\n                                className='trading-app-card__acc_status_badge'\n                                account_status={mt5_trade_account.status}\n                                icon={badge_icon}\n                                text={badge_text}\n                            />\n                        )}\n                    </div>\n                </div>\n                <div className='cfd-trade-modal__login-specs'>\n                    <div className='cfd-trade-modal__login-specs-item'>\n                        <Text className='cfd-trade-modal--paragraph'>{localize('Broker')}</Text>\n                        <SpecBox is_bold is_broker value={mt5_trade_account?.landing_company} />\n                    </div>\n                    <div className='cfd-trade-modal__login-specs-item'>\n                        <Text className='cfd-trade-modal--paragraph'>{localize('Server')}</Text>\n                        <SpecBox\n                            is_bold\n                            value={(mt5_trade_account as TAdditionalDetailsOfEachMT5Loginid)?.server_info?.environment}\n                        />\n                    </div>\n                    <div className='cfd-trade-modal__login-specs-item'>\n                        <Text className='cfd-trade-modal--paragraph'>{localize('Login ID')}</Text>\n                        <SpecBox is_bold value={(mt5_trade_account as TTradingPlatformAccounts)?.display_login} />\n                    </div>\n                    <div className='cfd-trade-modal__login-specs-item'>\n                        <Text className='cfd-trade-modal--paragraph'>{localize('Password')}</Text>\n                        <div className='cfd-trade-modal--paragraph'>\n                            <PasswordBox\n                                platform='mt5'\n                                onClick={() => {\n                                    const account_type = getCFDAccountKey({\n                                        market_type: mt5_trade_account.market_type,\n                                        sub_account_type: mt5_trade_account.sub_account_type,\n                                        platform: CFD_PLATFORMS.MT5,\n                                        shortcode: mt5_trade_account.landing_company_short,\n                                        product,\n                                    });\n                                    onPasswordManager(\n                                        mt5_trade_account?.login,\n                                        getTitle(mt5_trade_account.market_type ?? '', show_eu_related_content),\n                                        mt5_trade_account.account_type ?? '',\n                                        account_type,\n                                        (mt5_trade_account as TAdditionalDetailsOfEachMT5Loginid)?.server\n                                    );\n                                    toggleModal();\n                                }}\n                            />\n                        </div>\n                    </div>\n                    <div className='cfd-trade-modal__maintenance'>\n                        <Icon\n                            icon='IcAlertWarning'\n                            size={!isDesktop ? 28 : 20}\n                            className='cfd-trade-modal__maintenance-icon'\n                        />\n                        <div className='cfd-trade-modal__maintenance-text'>\n                            <Localize i18n_default_text='Server maintenance starts at 01:00 GMT every Sunday, and this process may take up to 2 hours to complete. Service may be disrupted during this time.' />\n                        </div>\n                    </div>\n                </div>\n                {is_eligible_to_migrate && <MigrationBanner is_trade_modal />}\n\n                {!isDesktop ? (\n                    <MT5MobileRedirectOption mt5_trade_account={mt5_trade_account} />\n                ) : (\n                    <MT5DesktopRedirectOption account_title={getAccountTitle()} mt5_trade_account={mt5_trade_account} />\n                )}\n            </div>\n        );\n    }\n);\n\nexport default DMT5TradeModal;\n","import React from 'react';\nimport { QRCode } from 'react-qrcode';\n\nimport { Icon, Text, Button } from '@deriv/components';\nimport { TCFDsPlatformType, TMobilePlatforms } from 'Components/props.types';\nimport {\n    getPlatformDXTradeDownloadLink,\n    getPlatformCTraderDownloadLink,\n    getDXTradeWebTerminalLink,\n    getCTraderWebTerminalLink,\n    platformsIcons,\n    platformsText,\n    CTRADER_URL,\n} from './constants';\nimport { isMobile } from '@deriv/shared';\nimport { Localize } from '@deriv/translations';\n\nimport { TCFDDashboardContainer } from 'Containers/props.types';\nimport { CATEGORY, CFD_PLATFORMS } from './cfd-config';\n\nexport const mobileDownloadLink = (platform: TCFDsPlatformType, type: TMobilePlatforms) => {\n    switch (platform) {\n        case CFD_PLATFORMS.DXTRADE:\n            return getPlatformDXTradeDownloadLink(type);\n        case CFD_PLATFORMS.CTRADER:\n            return getPlatformCTraderDownloadLink(type);\n        default:\n            return getPlatformDXTradeDownloadLink(type);\n    }\n};\n\nexport const getPlatformQRCode = (acc_type: TCFDsPlatformType) => {\n    const qr_code_mobile = isMobile() ? '100%' : '80%';\n\n    const QRCodeLinks = () => {\n        switch (acc_type) {\n            case CFD_PLATFORMS.DXTRADE:\n                return 'https://onelink.to/grmtyx';\n            case CFD_PLATFORMS.CTRADER:\n                return 'https://onelink.to/5jgj8z';\n            default:\n                return 'https://onelink.to/grmtyx';\n        }\n    };\n\n    return (\n        <React.Fragment>\n            <QRCode\n                value={QRCodeLinks()}\n                size={5}\n                style={{ height: 'auto', maxWidth: '100%', width: qr_code_mobile }}\n            />\n            <Text align='center' size='xxs'>\n                <Localize\n                    i18n_default_text='Scan the QR code to download Deriv {{ platform }}.'\n                    values={{ platform: platformsText(acc_type) }}\n                />\n            </Text>\n        </React.Fragment>\n    );\n};\n\ntype TPlatformsDesktopDownload = {\n    platform: TCFDsPlatformType;\n    dxtrade_tokens: TCFDDashboardContainer['dxtrade_tokens'];\n    ctrader_tokens: TCFDDashboardContainer['ctrader_tokens'];\n    is_demo: string;\n    ctraderTokenCall: (url: string, account_type: 'real' | 'demo') => void;\n};\n\nexport const PlatformsDesktopDownload = ({\n    platform,\n    dxtrade_tokens,\n    ctrader_tokens,\n    ctraderTokenCall,\n    is_demo,\n}: TPlatformsDesktopDownload) => {\n    const PlatformsDesktopDownloadLinks = () => {\n        switch (platform) {\n            case CFD_PLATFORMS.CTRADER:\n                return getCTraderWebTerminalLink(\n                    ctrader_tokens && ctrader_tokens[is_demo ? CATEGORY.DEMO : CATEGORY.REAL]\n                );\n            case CFD_PLATFORMS.DXTRADE:\n                return getDXTradeWebTerminalLink(\n                    is_demo ? CATEGORY.DEMO : CATEGORY.REAL,\n                    dxtrade_tokens[is_demo ? CATEGORY.DEMO : CATEGORY.REAL]\n                );\n            default:\n                return '';\n        }\n    };\n\n    return (\n        <React.Fragment>\n            <Button\n                className='cfd-trade-modal__platform-button'\n                onClick={() => {\n                    if (platform === CFD_PLATFORMS.CTRADER) {\n                        ctraderTokenCall(CTRADER_URL, is_demo ? 'demo' : 'real');\n                    } else {\n                        window.open(PlatformsDesktopDownloadLinks());\n                    }\n                }}\n            >\n                <div className='cfd-trade-modal__platform-button-text'>\n                    <Text color='general' size='xxs' weight='bold'>\n                        <Localize i18n_default_text='Web terminal' />\n                    </Text>\n                </div>\n            </Button>\n        </React.Fragment>\n    );\n};\n","import React from 'react';\nimport { useDevice } from '@deriv-com/ui';\nimport { observer, useStore } from '@deriv/stores';\nimport { localize, Localize } from '@deriv/translations';\nimport { getCFDAccountKey } from '@deriv/shared';\nimport { DetailsOfEachMT5Loginid } from '@deriv/api-types';\nimport { Icon, Money, Text, ExpansionPanel, Button } from '@deriv/components';\nimport SpecBox from '../Components/specbox';\nimport { CFD_PLATFORMS } from '../Helpers/cfd-config';\nimport PasswordBox from '../Components/passwordbox';\nimport { getPlatformQRCode, mobileDownloadLink, PlatformsDesktopDownload } from '../Helpers/config';\nimport { TCFDDashboardContainer, TCFDsPlatformType, TTradingPlatformAccounts } from 'Components/props.types';\nimport {\n    CTRADER_DESKTOP_MAC_DOWNLOAD,\n    CTRADER_DESKTOP_WINDOWS_DOWNLOAD,\n    getTitle,\n    platformsText,\n    STRATEGY_PROVIDER_NOTES,\n} from '../Helpers/constants';\n\nimport { TCFDPasswordReset } from './props.types';\n\ntype TTradeModalProps = {\n    ctrader_derivx_trade_account: Required<DetailsOfEachMT5Loginid>;\n    is_eu_user: boolean;\n    onPasswordManager: (\n        arg1: string | undefined,\n        arg2: string,\n        group: TCFDPasswordReset['account_group'],\n        arg4: string,\n        arg5: string | undefined\n    ) => void;\n    toggleModal: () => void;\n    dxtrade_tokens: TCFDDashboardContainer['dxtrade_tokens'];\n    ctrader_tokens: TCFDDashboardContainer['ctrader_tokens'];\n    is_demo: string;\n    platform: TCFDsPlatformType;\n    is_mobile?: boolean;\n};\n\nconst PlatformIconsAndDescriptions = (\n    platform: TCFDsPlatformType,\n    is_demo: string,\n    ctrader_derivx_trade_account: Required<DetailsOfEachMT5Loginid>\n) => {\n    return (\n        <React.Fragment>\n            <Icon icon={`IcRebranding${platform.charAt(0).toUpperCase()}${platform.slice(1)}Dashboard`} size={24} />\n            <div className='cfd-trade-modal__desc'>\n                <Text size='xs' line_height='l' weight='bold' className='cfd-trade-modal__desc-heading'>\n                    <Localize\n                        i18n_default_text='Deriv {{platform}} <0>{{is_demo}}</0>'\n                        values={{\n                            platform: platformsText(platform),\n                            is_demo: is_demo ? 'Demo' : '',\n                        }}\n                        components={[\n                            <span\n                                key={0}\n                                className={platform === CFD_PLATFORMS.CTRADER && is_demo ? 'cfd-trade-modal--tag' : ''}\n                            />,\n                        ]}\n                    />\n                </Text>\n                {((ctrader_derivx_trade_account as TTradingPlatformAccounts)?.display_login &&\n                    platform === CFD_PLATFORMS.DXTRADE) ||\n                    (platform === CFD_PLATFORMS.CTRADER && is_demo && (\n                        <Text color='less-prominent' size='xxxs' line_height='xxxs'>\n                            {(ctrader_derivx_trade_account as TTradingPlatformAccounts)?.display_login}\n                        </Text>\n                    ))}\n            </div>\n        </React.Fragment>\n    );\n};\n\nconst CTraderDerivXTradeModal = ({\n    ctrader_derivx_trade_account,\n    is_eu_user,\n    onPasswordManager,\n    toggleModal,\n    dxtrade_tokens,\n    ctrader_tokens,\n    is_demo,\n    platform,\n    is_mobile,\n}: TTradeModalProps) => {\n    const { isDesktop } = useDevice();\n    const {\n        ui,\n        client,\n        common,\n        traders_hub,\n        modules: { cfd },\n    } = useStore();\n\n    const { ctrader_accounts_list, ctrader_trading_platform_available_accounts, ctrader_total_balance } = client;\n    const { setAccountType, toggleMT5TradeModal, is_account_being_created, loadCTraderTokens } = cfd;\n    const { setAppstorePlatform } = common;\n    const { openDerivRealAccountNeededModal } = ui;\n    const { selected_account_type, no_CR_account, is_real, has_any_real_account, getAccount } = traders_hub;\n\n    const message = {\n        header: (\n            <Text as='h2' size='xs' weight='bold' className='cfd-trade-modal__expansion-panel--header'>\n                {localize('See important notes')}\n            </Text>\n        ),\n        content: (\n            <ol className='cfd-trade-modal__expansion-panel--ordered-list'>\n                <Text as='li' size='xxs' line_height='l' className='cfd-trade-modal__expansion-panel--content'>\n                    {localize('Use your Deriv account email and password to log in to cTrader.')}\n                </Text>\n                <Text as='li' size='xxs' line_height='l' className='cfd-trade-modal__expansion-panel--content'>\n                    <Localize\n                        i18n_default_text='Manage up to {{max_count}} Deriv cTrader accounts. While you can convert any of your Deriv cTrader accounts into a strategy account, please take note of the following:'\n                        values={{\n                            max_count: ctrader_trading_platform_available_accounts[0]?.max_count,\n                        }}\n                    />\n                </Text>\n                <ul className='cfd-trade-modal__expansion-panel--unordered-list'>\n                    {STRATEGY_PROVIDER_NOTES.map(note => (\n                        <Text\n                            key={note}\n                            as='li'\n                            size='xxs'\n                            line_height='l'\n                            className='cfd-trade-modal__expansion-panel--content'\n                        >\n                            {localize(note)}\n                        </Text>\n                    ))}\n                    <Text as='li' size='xxs' line_height='l' className='cfd-trade-modal__expansion-panel--content'>\n                        <Localize\n                            i18n_default_text='To ensure you can always create and manage strategies with fees, <0>keep at least one account free from being a strategy provider.</0> This way, you’ll always have an account ready for collecting fees, allowing you to have up to four strategies where you may impose fees.'\n                            components={[<span key={0} className='cfd-trade-modal__expansion-panel--content-bold' />]}\n                        />\n                    </Text>\n                </ul>\n            </ol>\n        ),\n    };\n\n    const downloadCenterDescription = () => {\n        switch (platform) {\n            case 'dxtrade':\n                return (\n                    <Text\n                        align='center'\n                        as='p'\n                        className='cfd-trade-modal__download-center-text'\n                        size={!isDesktop ? 'xxxs' : 'xxs'}\n                        weight='bold'\n                    >\n                        {localize('Download Deriv X on your phone to trade with the Deriv X account')}\n                    </Text>\n                );\n            case 'ctrader':\n                return (\n                    <Text\n                        align='center'\n                        as='p'\n                        className='cfd-trade-modal__download-center-text'\n                        size={!isDesktop ? 'xxxs' : 'xxs'}\n                        weight='bold'\n                    >\n                        {localize('Download cTrader on your phone to trade with the Deriv cTrader account')}\n                    </Text>\n                );\n            default:\n                return '';\n        }\n    };\n\n    const downloadCenterAppOption = (platform_type: TCFDsPlatformType) => {\n        let app_title = '';\n        if (platform_type === CFD_PLATFORMS.DXTRADE) {\n            app_title = localize('Run Deriv X on your browser');\n        } else if (platform_type === 'ctrader' && !is_mobile) {\n            app_title = localize('Run cTrader on your browser');\n        } else if (platform_type === 'ctrader' && is_mobile) {\n            return null;\n        } else {\n            return null;\n        }\n\n        return (\n            <div className='cfd-trade-modal__download-center-app--option'>\n                <Text className='cfd-trade-modal__download-center-app--option-item' size='xs'>\n                    {app_title}\n                </Text>\n                <PlatformsDesktopDownload\n                    platform={platform}\n                    is_demo={is_demo}\n                    dxtrade_tokens={dxtrade_tokens}\n                    ctrader_tokens={ctrader_tokens}\n                    ctraderTokenCall={loadCTraderTokens}\n                />\n            </div>\n        );\n    };\n\n    return (\n        <div className='cfd-trade-modal-container'>\n            <div className='cfd-trade-modal'>\n                {PlatformIconsAndDescriptions(platform, is_demo, ctrader_derivx_trade_account)}\n                {ctrader_derivx_trade_account?.display_balance && (\n                    <div className='cfd-trade-modal__balance'>\n                        {platform === CFD_PLATFORMS.CTRADER && is_real && (\n                            <Text size='xxs' align='right'>\n                                {localize('Total balance:')}\n                            </Text>\n                        )}\n                        <Text\n                            size='s'\n                            color={platform !== CFD_PLATFORMS.CTRADER ? 'profit-success' : 'prominent'}\n                            className='cfd-trade-modal__desc-balance'\n                            weight='bold'\n                        >\n                            <Money\n                                amount={\n                                    is_real && platform === CFD_PLATFORMS.CTRADER\n                                        ? ctrader_total_balance\n                                        : ctrader_derivx_trade_account.display_balance\n                                }\n                                currency={ctrader_derivx_trade_account.currency}\n                                has_sign={\n                                    !!ctrader_derivx_trade_account.balance && ctrader_derivx_trade_account.balance < 0\n                                }\n                                show_currency\n                            />\n                        </Text>\n                    </div>\n                )}\n            </div>\n            <div className='cfd-trade-modal__login-specs'>\n                {platform === CFD_PLATFORMS.DXTRADE && (\n                    <React.Fragment>\n                        <div className='cfd-trade-modal__login-specs-item'>\n                            <Text className='cfd-trade-modal--paragraph'>{localize('Username')}</Text>\n                            <SpecBox\n                                is_bold\n                                value={(ctrader_derivx_trade_account as TTradingPlatformAccounts)?.login}\n                            />\n                        </div>\n                        <div className='cfd-trade-modal__login-specs-item'>\n                            <Text className='cfd-trade-modal--paragraph'>{localize('Password')}</Text>\n                            <div className='cfd-trade-modal--paragraph'>\n                                <PasswordBox\n                                    platform='dxtrade'\n                                    onClick={() => {\n                                        const account_type = getCFDAccountKey({\n                                            market_type: ctrader_derivx_trade_account.market_type,\n                                            sub_account_type: ctrader_derivx_trade_account.sub_account_type,\n                                            platform: CFD_PLATFORMS.MT5,\n                                            shortcode: ctrader_derivx_trade_account.landing_company_short,\n                                        });\n                                        onPasswordManager(\n                                            ctrader_derivx_trade_account?.login,\n                                            getTitle(ctrader_derivx_trade_account.market_type, is_eu_user),\n                                            ctrader_derivx_trade_account.account_type,\n                                            account_type,\n                                            ctrader_derivx_trade_account?.server\n                                        );\n                                        toggleModal();\n                                    }}\n                                />\n                            </div>\n                        </div>\n                    </React.Fragment>\n                )}\n\n                {platform === CFD_PLATFORMS.CTRADER && is_real && (\n                    <React.Fragment>\n                        {ctrader_accounts_list\n                            .filter(all_ctrader_accounts => all_ctrader_accounts.account_type === 'real')\n                            .map(ctrader_account => {\n                                return (\n                                    <div key={ctrader_account.login} className='cfd-trade-modal__list-of-accounts'>\n                                        <Text size='xs'>{ctrader_account.login}</Text>\n                                        <Text size='xs' weight='bold'>\n                                            <Money\n                                                amount={ctrader_account.balance}\n                                                currency={ctrader_account.currency}\n                                                has_sign={!!ctrader_account.balance && ctrader_account.balance < 0}\n                                                show_currency\n                                            />\n                                        </Text>\n                                    </div>\n                                );\n                            })}\n                        {(ctrader_trading_platform_available_accounts[0]?.available_count ?? 1) > 0 && (\n                            <div className='cfd-trade-modal__get-more-accounts'>\n                                <Button\n                                    onClick={() => {\n                                        toggleMT5TradeModal();\n                                        if ((!has_any_real_account || no_CR_account) && is_real) {\n                                            openDerivRealAccountNeededModal();\n                                        } else {\n                                            setAccountType({\n                                                category: selected_account_type,\n                                                type: 'all',\n                                            });\n                                            setAppstorePlatform(CFD_PLATFORMS.CTRADER);\n                                            getAccount();\n                                        }\n                                    }}\n                                    transparent\n                                    disabled={!!is_account_being_created}\n                                >\n                                    <Icon\n                                        icon={'IcAppstoreGetMoreAccounts'}\n                                        size={24}\n                                        className='cfd-trade-modal__get-more-accounts--icon'\n                                    />\n                                    <div className='cfd-trade-modal__get-more-accounts--details'>\n                                        <Text size='xxs' line-height='xxs'>\n                                            {localize('Get another cTrader account')}\n                                        </Text>\n                                    </div>\n                                </Button>\n                            </div>\n                        )}\n\n                        <div className='cfd-trade-modal__expansion-panel'>\n                            <ExpansionPanel message={message} />\n                        </div>\n                    </React.Fragment>\n                )}\n\n                <div className='cfd-trade-modal__maintenance'>\n                    <Icon\n                        icon='IcAlertWarning'\n                        size={!isDesktop ? 28 : 24}\n                        className='cfd-trade-modal__maintenance-icon'\n                    />\n                    <div className='cfd-trade-modal__maintenance-text'>\n                        <Text size='xxxs' className='cfd-trade-modal__maintenance-text'>\n                            {platform === CFD_PLATFORMS.DXTRADE && (\n                                <Localize i18n_default_text='Server maintenance starts at 06:00 GMT every Sunday and may last up to 2 hours. You may experience service disruption during this time.' />\n                            )}\n                            {platform === CFD_PLATFORMS.MT5 && (\n                                <Localize i18n_default_text='Server maintenance starts at 01:00 GMT every Sunday, and this process may take up to 2 hours to complete. Service may be disrupted during this time.' />\n                            )}\n                            {platform === CFD_PLATFORMS.CTRADER && (\n                                <Localize i18n_default_text='Server maintenance occurs every first Saturday of the month from 7 to 10 GMT time. You may experience service disruption during this time.' />\n                            )}\n                        </Text>\n                    </div>\n                </div>\n            </div>\n            <div className='cfd-trade-modal__download-center-app'>{downloadCenterAppOption(platform)}</div>\n            {platform === CFD_PLATFORMS.CTRADER && (\n                <React.Fragment>\n                    {!is_mobile && (\n                        <React.Fragment>\n                            <div className='cfd-trade-modal__download-center-app--windows'>\n                                <Icon icon='IcWindowsLogo' size={32} />\n                                <Text className='cfd-trade-modal__download-center-app--windows-item' size='xs'>\n                                    {localize('cTrader Windows app')}\n                                </Text>\n                                <a\n                                    className='dc-btn cfd-trade-modal__download-center-app--windows-link'\n                                    type='button'\n                                    href={CTRADER_DESKTOP_WINDOWS_DOWNLOAD}\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                >\n                                    <Text size='xxs' weight='bold' color='prominent'>\n                                        {localize('Download')}\n                                    </Text>\n                                </a>\n                            </div>\n                            <div className='cfd-trade-modal__download-center-app--macos'>\n                                <Icon icon='IcMacosLogo' size={32} />\n                                <Text className='cfd-trade-modal__download-center-app--macos-item' size='xs'>\n                                    {localize('cTrader MacOS app')}\n                                </Text>\n                                <a\n                                    className='dc-btn cfd-trade-modal__download-center-app--macos-link'\n                                    type='button'\n                                    href={CTRADER_DESKTOP_MAC_DOWNLOAD}\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                >\n                                    <Text size='xxs' weight='bold' color='prominent'>\n                                        {localize('Download')}\n                                    </Text>\n                                </a>\n                            </div>\n                        </React.Fragment>\n                    )}\n                </React.Fragment>\n            )}\n            <div className='cfd-trade-modal__download-center-description'>{downloadCenterDescription()}</div>\n\n            <div className='cfd-trade-modal__download-center-options'>\n                <div className='cfd-trade-modal__download-center-options--mobile-links'>\n                    <div className='cfd-trade-modal__download-center-options--mobile-links--apple'>\n                        <a href={mobileDownloadLink(platform, 'ios')} target='_blank' rel='noopener noreferrer'>\n                            <Icon icon='IcInstallationApple' width={!isDesktop ? '160' : '130'} height={40} />\n                        </a>\n                    </div>\n                    <a href={mobileDownloadLink(platform, 'android')} target='_blank' rel='noopener noreferrer'>\n                        <Icon icon='IcInstallationGoogle' width={135} height={40} />\n                    </a>\n                    {/* all platforms are on ios/android and huawei except ctrader is not on Huawei*/}\n                    {platform !== CFD_PLATFORMS.CTRADER && (\n                        <a href={mobileDownloadLink(platform, 'huawei')} target='_blank' rel='noopener noreferrer'>\n                            <Icon icon='IcInstallationHuawei' width={135} height={40} />\n                        </a>\n                    )}\n                </div>\n                {isDesktop && (\n                    <div className='cfd-trade-modal__download-center-options--qrcode'>\n                        {getPlatformQRCode(platform)}\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default observer(CTraderDerivXTradeModal);\n","import React from 'react';\nimport { useDevice } from '@deriv-com/ui';\n\nimport { Div100vhContainer, Modal, PageOverlay, UILoader } from '@deriv/components';\nimport { observer, useStore } from '@deriv/stores';\nimport { localize } from '@deriv/translations';\n\nimport { useCfdStore } from '../Stores/Modules/CFD/Helpers/useCfdStores';\n\nimport DMT5TradeModal from './dmt5-trade-modal';\nimport { TCFDPasswordReset } from './props.types';\nimport CTraderDerivXTradeModal from './ctrader-derivx-trade-modal';\n\ntype TMT5TradeModalProps = {\n    is_eu_user: boolean;\n    is_open: boolean;\n    onPasswordManager: (\n        arg1: string | undefined,\n        arg2: string,\n        group: TCFDPasswordReset['account_group'],\n        arg4: string,\n        arg5: string | undefined\n    ) => void;\n    toggleModal: () => void;\n    is_demo: string;\n};\n\nconst MT5TradeModal = observer(\n    ({ is_eu_user, is_open, onPasswordManager, toggleModal, is_demo }: TMT5TradeModalProps) => {\n        const { isDesktop } = useDevice();\n        const { traders_hub, common } = useStore();\n\n        const { show_eu_related_content } = traders_hub;\n        const { platform } = common;\n\n        const { mt5_trade_account, dxtrade_tokens, ctrader_tokens, product } = useCfdStore();\n\n        const CFDTradeModal = () => {\n            if (platform === 'mt5') {\n                return (\n                    <DMT5TradeModal\n                        mt5_trade_account={mt5_trade_account}\n                        show_eu_related_content={show_eu_related_content}\n                        onPasswordManager={onPasswordManager}\n                        toggleModal={toggleModal}\n                        product={product}\n                        is_demo={is_demo}\n                    />\n                );\n            }\n            return (\n                <CTraderDerivXTradeModal\n                    ctrader_derivx_trade_account={mt5_trade_account}\n                    is_eu_user={is_eu_user}\n                    onPasswordManager={onPasswordManager}\n                    toggleModal={toggleModal}\n                    is_demo={is_demo}\n                    platform={platform}\n                    ctrader_tokens={ctrader_tokens}\n                    dxtrade_tokens={dxtrade_tokens}\n                    is_mobile={!isDesktop}\n                />\n            );\n        };\n\n        return (\n            <React.Suspense fallback={<UILoader />}>\n                {isDesktop ? (\n                    <Modal\n                        is_open={is_open}\n                        title={localize('Trade')}\n                        toggleModal={toggleModal}\n                        should_header_stick_body={false}\n                        width='600px'\n                        exit_classname='cfd-modal--custom-exit'\n                    >\n                        <CFDTradeModal />\n                    </Modal>\n                ) : (\n                    <PageOverlay\n                        is_open={is_open}\n                        portal_id='deriv_app'\n                        header='Trade'\n                        onClickClose={toggleModal}\n                        header_classname='cfd-trade-modal__mobile-title'\n                    >\n                        <Div100vhContainer className='cfd-trade-modal__mobile-view-wrapper' height_offset='80px'>\n                            <CFDTradeModal />\n                        </Div100vhContainer>\n                    </PageOverlay>\n                )}\n            </React.Suspense>\n        );\n    }\n);\n\nexport default MT5TradeModal;\n"],"names":["_ref","account_title","mt5_trade_account","desktopDownloadOptions","getDesktopDownloadOptions","mobileDownloadOptions","getMobileDownloadOptions","React","Fragment","className","map","option","key","icon","Icon","size","Text","text","type","href","target","rel","weight","color","button_text","align","as","localize","platform","getCFDPlatformLabel","CFD_PLATFORMS","MT5","account","_ref2","width","height","alt","src","getUrlBase","getPlatformSettings","name","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","mobileURLSet","_callee","mobileAppURL","timeout","_context","window","location","replace","getDeeplinkUrl","getMobileAppInstallerUrl","setTimeout","document","addEventListener","hidden","clearTimeout","onblur","arguments","apply","_next","_throw","getWebtraderUrl","Localize","i18n_default_text","onClick","components","Button","transparent","CFDAccountCopy","Clipboard","text_copy","info_message","isMobile","success_message","popoverAlignment","is_bold","is_broker","classNames","observer","_server_info","show_eu_related_content","onPasswordManager","toggleModal","product","is_demo","isDesktop","useDevice","_client$account_statu","useStore","client","account_status","is_eligible_to_migrate","authentication","eligible_to_migrate","getAccountTitle","PRODUCT","STANDARD","SWAPFREE","ZEROSPREAD","STP","GOLD","_getMT5StatusBadgeCon","getMT5StatusBadgeConfig","status","badge_text","badge_icon","has_migration_status","MT5_ACCOUNT_STATUS","MIGRATED_WITH_POSITION","MIGRATED_WITHOUT_POSITION","includes","getShortcode","landing_company_short","Jurisdiction","SVG","BVI","VANUATU","MAURITIUS","TradingPlatformIcon","FINANCIAL","market_type","MARKET_TYPE","SYNTHETIC","ALL","line_height","display_login","display_balance","Money","amount","currency","has_sign","balance","show_currency","StatusBadge","SpecBox","landing_company","server_info","environment","PasswordBox","_mt5_trade_account$ma","_mt5_trade_account$ac","account_type","getCFDAccountKey","sub_account_type","shortcode","login","getTitle","server","MigrationBanner","is_trade_modal","MT5DesktopRedirectOption","MT5MobileRedirectOption","mobileDownloadLink","DXTRADE","getPlatformDXTradeDownloadLink","CTRADER","getPlatformCTraderDownloadLink","PlatformsDesktopDownload","dxtrade_tokens","ctrader_tokens","ctraderTokenCall","CTRADER_URL","open","getCTraderWebTerminalLink","CATEGORY","DEMO","REAL","getDXTradeWebTerminalLink","PlatformsDesktopDownloadLinks","_ctrader_trading_plat","_ctrader_trading_plat2","_ctrader_trading_plat3","acc_type","qr_code_mobile","ctrader_derivx_trade_account","is_eu_user","is_mobile","_useStore","ui","common","traders_hub","cfd","modules","ctrader_accounts_list","ctrader_trading_platform_available_accounts","ctrader_total_balance","setAccountType","toggleMT5TradeModal","is_account_being_created","loadCTraderTokens","setAppstorePlatform","openDerivRealAccountNeededModal","selected_account_type","no_CR_account","is_real","has_any_real_account","getAccount","message","header","content","max_count","STRATEGY_PROVIDER_NOTES","note","concat","toUpperCase","platformsText","PlatformIconsAndDescriptions","filter","all_ctrader_accounts","ctrader_account","available_count","category","disabled","ExpansionPanel","platform_type","app_title","downloadCenterAppOption","CTRADER_DESKTOP_WINDOWS_DOWNLOAD","CTRADER_DESKTOP_MAC_DOWNLOAD","downloadCenterDescription","QRCode","QRCodeLinks","style","maxWidth","is_open","_useCfdStore","useCfdStore","CFDTradeModal","DMT5TradeModal","CTraderDerivXTradeModal","fallback","UILoader","Modal","title","should_header_stick_body","exit_classname","PageOverlay","portal_id","onClickClose","header_classname","Div100vhContainer","height_offset"],"sourceRoot":""}