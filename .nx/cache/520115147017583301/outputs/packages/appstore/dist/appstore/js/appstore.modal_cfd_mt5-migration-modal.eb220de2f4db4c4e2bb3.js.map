{"version":3,"file":"appstore/js/appstore.modal_cfd_mt5-migration-modal.eb220de2f4db4c4e2bb3.js","mappings":"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","sources":["webpack://@deriv/appstore/../cfd/src/Containers/mt5-migration-modal/mt5-migration-account-icons.tsx","webpack://@deriv/appstore/../cfd/src/Containers/mt5-migration-modal/mt5-migration-modal-context.tsx","webpack://@deriv/appstore/../cfd/src/Containers/mt5-migration-modal/mt5-migration-front-side-content.tsx","webpack://@deriv/appstore/../cfd/src/Containers/mt5-migration-modal/mt5-migration-back-side-content.tsx","webpack://@deriv/appstore/../cfd/src/Containers/mt5-migration-modal/mt5-migration-modal-content.tsx","webpack://@deriv/appstore/../cfd/src/Containers/mt5-migration-modal/mt5-migration-modal.tsx","webpack://@deriv/appstore/../cfd/src/Containers/mt5-migration-modal/index.ts"],"sourcesContent":["import React from 'react';\nimport { Icon, Text } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport { useMT5SVGEligibleToMigrate } from '@deriv/hooks';\n\nconst MT5MigrationAccountIcons = () => {\n    const {\n        eligible_svg_to_bvi_derived_accounts,\n        eligible_svg_to_bvi_financial_accounts,\n        eligible_svg_to_vanuatu_derived_accounts,\n        eligible_svg_to_vanuatu_financial_accounts,\n        no_of_svg_accounts_to_migrate,\n    } = useMT5SVGEligibleToMigrate();\n\n    let existing_account_title = 'Existing account';\n    let new_account_title = 'New account';\n\n    if (no_of_svg_accounts_to_migrate > 1) {\n        existing_account_title = 'Existing accounts';\n        new_account_title = 'New accounts';\n    }\n\n    return (\n        <div className='mt5-migration-modal__migration_content-items__list'>\n            <div className='mt5-migration-modal__migration_content-items__list--container'>\n                <Text weight='bold' size='xs'>\n                    <Localize i18n_default_text='{{existing_account_title}}' values={{ existing_account_title }} />\n                </Text>\n                <div className='mt5-migration-modal__migration_content-items__list--container__icons'>\n                    {(eligible_svg_to_bvi_derived_accounts || eligible_svg_to_vanuatu_derived_accounts) && (\n                        <Icon icon='IcMt5SvgStandard' size={96} data_testid='dt_migrate_from_svg_standard' />\n                    )}\n                    {(eligible_svg_to_bvi_financial_accounts || eligible_svg_to_vanuatu_financial_accounts) && (\n                        <Icon icon='IcMt5SvgFinancial' size={96} data_testid='dt_migrate_from_svg_financial' />\n                    )}\n                </div>\n            </div>\n            <div className='mt5-migration-modal__migration_content-items__list--container'>\n                <Text weight='bold' size='xs'>\n                    <Localize i18n_default_text='{{new_account_title}}' values={{ new_account_title }} />\n                </Text>\n                <div className='mt5-migration-modal__migration_content-items__list--container__icons'>\n                    {eligible_svg_to_bvi_derived_accounts && (\n                        <Icon icon='IcMt5BviStandard' size={96} data_testid='dt_migrate_to_bvi_standard' />\n                    )}\n                    {eligible_svg_to_bvi_financial_accounts && (\n                        <Icon icon='IcMt5BviFinancial' size={96} data_testid='dt_migrate_to_bvi_financial' />\n                    )}\n                    {eligible_svg_to_vanuatu_derived_accounts && (\n                        <Icon icon='IcMt5VanuatuStandard' size={96} data_testid='dt_migrate_to_vanuatu_standard' />\n                    )}\n                    {eligible_svg_to_vanuatu_financial_accounts && (\n                        <Icon icon='IcMt5VanuatuFinancial' size={96} data_testid='dt_migrate_to_vanuatu_financial' />\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default MT5MigrationAccountIcons;\n","import React, { useContext } from 'react';\n\ntype TMT5MigrationModalContext = {\n    show_modal_front_side: boolean;\n    setShowModalFrontSide: React.Dispatch<React.SetStateAction<boolean>>;\n};\n\nexport const MT5MigrationModalContext = React.createContext<TMT5MigrationModalContext>({\n    show_modal_front_side: false,\n    setShowModalFrontSide: () => null,\n});\n\nexport const useMT5MigrationModalContext = () => useContext(MT5MigrationModalContext);\n","import React from 'react';\nimport { Button, Modal, Text, HintBox, StaticUrl } from '@deriv/components';\nimport {\n    CFD_PLATFORMS,\n    Jurisdiction,\n    getCFDPlatformNames,\n    JURISDICTION_MARKET_TYPES,\n    DBVI_COMPANY_NAMES,\n    getFormattedJurisdictionMarketTypes,\n    getFormattedJurisdictionCode,\n} from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { Localize } from '@deriv/translations';\nimport { useMT5SVGEligibleToMigrate } from '@deriv/hooks';\nimport MT5MigrationAccountIcons from './mt5-migration-account-icons';\nimport { useMT5MigrationModalContext } from './mt5-migration-modal-context';\n\nconst MT5MigrationFrontSideContent = observer(() => {\n    const { ui } = useStore();\n    const { is_mobile, setMT5MigrationModalEnabled } = ui;\n    const { setShowModalFrontSide } = useMT5MigrationModalContext();\n    const {\n        getEligibleAccountToMigrate,\n        eligible_account_to_migrate_label,\n        has_derived_mt5_to_migrate,\n        has_derived_and_financial_mt5,\n    } = useMT5SVGEligibleToMigrate();\n\n    const getFormattedAccounts = () =>\n        has_derived_and_financial_mt5\n            ? {\n                  platform: getCFDPlatformNames(CFD_PLATFORMS.MT5),\n                  type_1: getFormattedJurisdictionMarketTypes(JURISDICTION_MARKET_TYPES.DERIVED),\n                  type_2: getFormattedJurisdictionMarketTypes(JURISDICTION_MARKET_TYPES.FINANCIAL),\n                  from_account: getFormattedJurisdictionCode(Jurisdiction.SVG),\n              }\n            : {\n                  platform: getCFDPlatformNames(CFD_PLATFORMS.MT5),\n                  type: getFormattedJurisdictionMarketTypes(\n                      has_derived_mt5_to_migrate\n                          ? JURISDICTION_MARKET_TYPES.DERIVED\n                          : JURISDICTION_MARKET_TYPES.FINANCIAL\n                  ),\n\n                  from_account: getFormattedJurisdictionCode(Jurisdiction.SVG),\n              };\n\n    const onConfirm = () => {\n        setShowModalFrontSide(false);\n        setMT5MigrationModalEnabled(true);\n    };\n\n    return (\n        <React.Fragment>\n            <div className='mt5-migration-modal__container'>\n                <div>\n                    <Text as='p' size={is_mobile ? 'xs' : 's'} align='center'>\n                        {has_derived_and_financial_mt5 ? (\n                            <Localize\n                                i18n_default_text='Enhance your trading experience by upgrading your <0>{{platform}} {{type_1}}</0> <1/>and <0>{{type_2}} {{from_account}}</0> account(s).'\n                                values={{\n                                    ...getFormattedAccounts(),\n                                }}\n                                components={[<strong key={0} />]}\n                            />\n                        ) : (\n                            <Localize\n                                i18n_default_text='Enhance your trading experience by upgrading your <0/><1>{{platform}} {{type}} {{from_account}} </1> account(s).'\n                                values={{\n                                    ...getFormattedAccounts(),\n                                }}\n                                components={[<br key={0} />, <strong key={1} />]}\n                            />\n                        )}\n                    </Text>\n                </div>\n                <div className='mt5-migration-modal__migration_content'>\n                    <div className='mt5-migration-modal__migration_content-items'>\n                        <MT5MigrationAccountIcons />\n                    </div>\n                </div>\n                <div className='mt5-migration-modal__migration_infobox'>\n                    <HintBox\n                        icon='IcInfoBlue'\n                        message={\n                            <Text as='p' size={is_mobile ? 'xxxs' : 'xxs'}>\n                                {has_derived_and_financial_mt5 ? (\n                                    <Localize\n                                        i18n_default_text='Your existing <0>{{platform}} {{type_1}}</0> <1/>and <0>{{type_2}} {{from_account}}</0> account(s) will remain accessible.'\n                                        values={{\n                                            ...getFormattedAccounts(),\n                                        }}\n                                        components={[<strong key={0} />]}\n                                    />\n                                ) : (\n                                    <Localize\n                                        i18n_default_text='Your existing <0>{{platform}} {{type}} {{from_account}}</0> account(s) will remain accessible.'\n                                        values={{\n                                            ...getFormattedAccounts(),\n                                        }}\n                                        components={[<strong key={0} />]}\n                                    />\n                                )}\n                            </Text>\n                        }\n                        is_info\n                    />\n                </div>\n                <div>\n                    <Text as='p' size={is_mobile ? 'xxs' : 'xs'} align='center'>\n                        {has_derived_and_financial_mt5 ? (\n                            <Localize\n                                i18n_default_text='By clicking on <0>Next</0> you agree to move your {{platform}} {{type_1}} and {{type_2}} {{from_account}} account(s) under Deriv {{account_to_migrate}} Ltd’s <1>terms and conditions</1>.'\n                                components={[\n                                    <strong key={0} />,\n                                    <StaticUrl\n                                        key={1}\n                                        className='link'\n                                        href={DBVI_COMPANY_NAMES[getEligibleAccountToMigrate()]?.tnc_url}\n                                    />,\n                                ]}\n                                values={{\n                                    ...getFormattedAccounts(),\n                                    account_to_migrate: eligible_account_to_migrate_label,\n                                }}\n                            />\n                        ) : (\n                            <Localize\n                                i18n_default_text='By clicking on <0>Next</0> you agree to move your {{platform}} {{type}} {{from_account}} account(s) under <2/>Deriv {{account_to_migrate}} Ltd’s <1>terms and conditions</1>.'\n                                components={[\n                                    <strong key={0} />,\n                                    <StaticUrl\n                                        key={1}\n                                        className='link'\n                                        href={DBVI_COMPANY_NAMES[getEligibleAccountToMigrate()]?.tnc_url}\n                                        is_document\n                                    />,\n                                    is_mobile ? null : <br key={2} />,\n                                ]}\n                                values={{\n                                    ...getFormattedAccounts(),\n                                    account_to_migrate: eligible_account_to_migrate_label,\n                                }}\n                            />\n                        )}\n                    </Text>\n                </div>\n            </div>\n            <Modal.Footer has_separator>\n                <Button type='button' has_effect large primary onClick={onConfirm}>\n                    <Localize i18n_default_text='Next' />\n                </Button>\n            </Modal.Footer>\n        </React.Fragment>\n    );\n});\n\nexport default MT5MigrationFrontSideContent;\n","import { InlineMessage, Modal, Text, PasswordInput, FormSubmitButton } from '@deriv/components';\nimport { useMT5SVGEligibleToMigrate } from '@deriv/hooks';\nimport { CFD_PLATFORMS, WS, validLength, validPassword, getErrorMessages } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { Localize, localize } from '@deriv/translations';\nimport React from 'react';\nimport { useCfdStore } from '../../Stores/Modules/CFD/Helpers/useCfdStores';\nimport { Formik, FormikErrors, FormikHelpers, FormikProps } from 'formik';\nimport { TCFDPasswordFormValues } from 'Containers/cfd-password-modal';\n\nconst MT5MigrationBackSideContent = observer(() => {\n    const { ui, common, client } = useStore();\n    const { toggleMT5MigrationModal, setMT5MigrationModalEnabled, is_mobile } = ui;\n    const { email } = client;\n    const { setAppstorePlatform } = common;\n    const { setJurisdictionSelectedShortcode, setSentEmailModalStatus, submitMt5Password } = useCfdStore();\n    const { getEligibleAccountToMigrate } = useMT5SVGEligibleToMigrate();\n    const formik_ref = React.useRef<FormikProps<TCFDPasswordFormValues>>(null);\n\n    const initial_values: TCFDPasswordFormValues = {\n        password: '',\n    };\n\n    const content_size = is_mobile ? 'xxs' : 'xs';\n\n    const closeModal = () => {\n        setAppstorePlatform(CFD_PLATFORMS.MT5);\n        setJurisdictionSelectedShortcode(getEligibleAccountToMigrate());\n        toggleMT5MigrationModal(false);\n    };\n\n    const onConfirmMigration = (values: TCFDPasswordFormValues, actions: FormikHelpers<TCFDPasswordFormValues>) => {\n        submitMt5Password(values, actions).then(() => {\n            closeModal();\n        });\n    };\n\n    const onForgotPassword = () => {\n        setMT5MigrationModalEnabled(false);\n        toggleMT5MigrationModal(false);\n        WS.verifyEmail(email, 'trading_platform_mt5_password_reset', {\n            url_parameters: {\n                redirect_to: 10,\n            },\n        });\n        setSentEmailModalStatus(true);\n    };\n\n    const validatePassword = (values: TCFDPasswordFormValues) => {\n        const errors: FormikErrors<TCFDPasswordFormValues> = {};\n        if (\n            !validLength(values.password, {\n                min: 8,\n                max: 25,\n            })\n        ) {\n            errors.password = localize('You should enter {{min_number}}-{{max_number}} characters.', {\n                min_number: 8,\n                max_number: 25,\n            });\n        } else if (!validPassword(values.password)) {\n            errors.password = getErrorMessages().password();\n        }\n        if (values.password?.toLowerCase() === email.toLowerCase()) {\n            errors.password = localize('Your password cannot be the same as your email address.');\n        }\n        return errors;\n    };\n\n    return (\n        <Formik\n            initialValues={initial_values}\n            enableReinitialize\n            validate={validatePassword}\n            innerRef={formik_ref}\n            validateOnMount\n            onSubmit={onConfirmMigration}\n        >\n            {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\n                <form onSubmit={handleSubmit}>\n                    <div className='mt5-migration-modal__container'>\n                        <div className='mt5-migration-modal__password-header-container'>\n                            <Text as='p' size={content_size}>\n                                <Localize i18n_default_text='Enter your Deriv MT5 password to upgrade your account(s).' />\n                            </Text>\n                        </div>\n                        <div className='mt5-migration-modal__password-input-container'>\n                            <PasswordInput\n                                autoComplete='off'\n                                label={localize('Deriv MT5 password')}\n                                name='password'\n                                value={values.password}\n                                onBlur={handleBlur}\n                                onChange={handleChange}\n                            />\n                        </div>\n                        <div className='mt5-migration-modal__password-hint'>\n                            <InlineMessage type='information' size='sm'>\n                                <Text as='p' size='xxs'>\n                                    <Localize i18n_default_text=\"We've introduced additional password requirements to increase your account security. Your password should:\" />\n                                </Text>\n                                <ul className='mt5-migration-modal__password-hint-items'>\n                                    <li>\n                                        <Text as='p' size='xxs' weight='bold'>\n                                            <Localize i18n_default_text='Be between 8 to 16 characters.' />\n                                        </Text>\n                                    </li>\n\n                                    <li>\n                                        <Text as='p' size='xxs' weight='bold'>\n                                            <Localize i18n_default_text='Contain at least one special character.' />\n                                        </Text>\n                                    </li>\n                                </ul>\n                                <Text as='p' size='xxs'>\n                                    <Localize i18n_default_text=\"If your current password doesn't match these requirements, you'll need to create a new one in the next step.\" />\n                                </Text>\n                            </InlineMessage>\n                        </div>\n                    </div>\n                    <Modal.Footer>\n                        <FormSubmitButton\n                            is_disabled={!!errors.password || isSubmitting}\n                            is_absolute={is_mobile}\n                            label={localize('Upgrade')}\n                            has_cancel\n                            onCancel={onForgotPassword}\n                            cancel_label={localize('Forgot password?')}\n                            is_loading={isSubmitting}\n                        />\n                    </Modal.Footer>\n                </form>\n            )}\n        </Formik>\n    );\n});\n\nexport default MT5MigrationBackSideContent;\n","import React from 'react';\nimport { Div100vhContainer } from '@deriv/components';\nimport { observer, useStore } from '@deriv/stores';\nimport MT5MigrationFrontSideContent from './mt5-migration-front-side-content';\nimport { useMT5MigrationModalContext } from './mt5-migration-modal-context';\nimport MT5MigrationBackSideContent from './mt5-migration-back-side-content';\n\nconst MT5MigrationModalContent = observer(() => {\n    const { ui } = useStore();\n    const { is_mobile } = ui;\n    const { show_modal_front_side } = useMT5MigrationModalContext();\n\n    return (\n        <Div100vhContainer\n            className='mt5-migration-modal__mobile-container'\n            height_offset='150px'\n            is_bypassed={!is_mobile}\n        >\n            {show_modal_front_side ? <MT5MigrationFrontSideContent /> : <MT5MigrationBackSideContent />}\n        </Div100vhContainer>\n    );\n});\n\nexport default MT5MigrationModalContent;\n","import React from 'react';\nimport { DesktopWrapper, Modal, PageOverlay, UILoader, MobileWrapper, Text, Dialog } from '@deriv/components';\nimport { Localize, localize } from '@deriv/translations';\nimport { observer, useStore } from '@deriv/stores';\nimport MT5MigrationModalContent from './mt5-migration-modal-content';\nimport { MT5MigrationModalContext } from './mt5-migration-modal-context';\nimport './mt5-migration-modal.scss';\n\nconst MT5MigrationModal = observer(() => {\n    const {\n        ui,\n        modules: { cfd },\n    } = useStore();\n    const {\n        disableApp,\n        enableApp,\n        is_mt5_migration_modal_open,\n        is_mobile,\n        toggleMT5MigrationModal,\n        setMT5MigrationModalEnabled,\n        is_mt5_migration_modal_enabled,\n    } = ui;\n    const { mt5_migration_error, setMT5MigrationError, setIsFromMt5MigrationModal } = cfd;\n    const [show_modal_front_side, setShowModalFrontSide] = React.useState(true);\n    const modal_title = (\n        <Text size={is_mobile ? 'xs' : 's'} weight='bold'>\n            {show_modal_front_side ? (\n                <Localize i18n_default_text='Upgrade your MT5 account(s)' />\n            ) : (\n                <Localize i18n_default_text='Enter your Deriv MT5 password' />\n            )}\n        </Text>\n    );\n\n    React.useEffect(() => {\n        if (is_mt5_migration_modal_enabled) {\n            setShowModalFrontSide(false);\n        } else {\n            setShowModalFrontSide(true);\n        }\n    }, [is_mt5_migration_modal_enabled, setShowModalFrontSide, is_mt5_migration_modal_open]);\n\n    const closeModal = () => {\n        setMT5MigrationModalEnabled(false);\n        setIsFromMt5MigrationModal(false);\n        toggleMT5MigrationModal(false);\n    };\n\n    return (\n        <div>\n            <React.Suspense fallback={<UILoader />}>\n                <MT5MigrationModalContext.Provider value={{ show_modal_front_side, setShowModalFrontSide }}>\n                    <Dialog\n                        title={localize('Sorry for the interruption')}\n                        confirm_button_text={localize('Try again')}\n                        onConfirm={() => {\n                            setMT5MigrationError('');\n                            setMT5MigrationModalEnabled(false);\n                            toggleMT5MigrationModal(true);\n                        }}\n                        disableApp={disableApp}\n                        enableApp={enableApp}\n                        has_close_icon\n                        className='mt5-migration-modal__error-dialog'\n                        is_visible={!!mt5_migration_error}\n                        onClose={() => {\n                            setMT5MigrationError('');\n                            closeModal();\n                        }}\n                    >\n                        <Localize i18n_default_text='{{mt5_migration_error}}' values={{ mt5_migration_error }} />\n                    </Dialog>\n                    <DesktopWrapper>\n                        <Modal\n                            className='mt5-migration-modal'\n                            disableApp={disableApp}\n                            enableApp={enableApp}\n                            exit_classname='cfd-modal--custom-exit'\n                            is_open={is_mt5_migration_modal_open && !mt5_migration_error}\n                            title={modal_title}\n                            toggleModal={closeModal}\n                            width={show_modal_front_side ? '58.8rem' : '43.2rem'}\n                            has_return_icon={!show_modal_front_side}\n                            onReturn={() => setShowModalFrontSide(true)}\n                        >\n                            <MT5MigrationModalContent />\n                        </Modal>\n                    </DesktopWrapper>\n                    <MobileWrapper>\n                        <PageOverlay\n                            is_open={is_mt5_migration_modal_open}\n                            header_classname='mt5-migration-modal__mobile-header'\n                            portal_id='deriv_app'\n                            header={modal_title}\n                            onClickClose={closeModal}\n                            has_return_icon={!show_modal_front_side}\n                            onReturn={() => setShowModalFrontSide(true)}\n                        >\n                            <MT5MigrationModalContent />\n                        </PageOverlay>\n                    </MobileWrapper>\n                </MT5MigrationModalContext.Provider>\n            </React.Suspense>\n        </div>\n    );\n});\n\nexport default MT5MigrationModal;\n","import MT5MigrationModal from './mt5-migration-modal';\n\nexport default MT5MigrationModal;\n"],"names":["_useMT5SVGEligibleToM","useMT5SVGEligibleToMigrate","eligible_svg_to_bvi_derived_accounts","eligible_svg_to_bvi_financial_accounts","eligible_svg_to_vanuatu_derived_accounts","eligible_svg_to_vanuatu_financial_accounts","existing_account_title","new_account_title","no_of_svg_accounts_to_migrate","React","className","Text","weight","size","Localize","i18n_default_text","values","Icon","icon","data_testid","MT5MigrationModalContext","show_modal_front_side","setShowModalFrontSide","useMT5MigrationModalContext","useContext","observer","_DBVI_COMPANY_NAMES$g","_DBVI_COMPANY_NAMES$g2","ui","useStore","is_mobile","setMT5MigrationModalEnabled","getEligibleAccountToMigrate","eligible_account_to_migrate_label","has_derived_mt5_to_migrate","has_derived_and_financial_mt5","getFormattedAccounts","platform","getCFDPlatformNames","CFD_PLATFORMS","MT5","type_1","getFormattedJurisdictionMarketTypes","JURISDICTION_MARKET_TYPES","DERIVED","type_2","FINANCIAL","from_account","getFormattedJurisdictionCode","Jurisdiction","SVG","type","as","align","_objectSpread","components","key","MT5MigrationAccountIcons","HintBox","message","is_info","StaticUrl","href","DBVI_COMPANY_NAMES","tnc_url","account_to_migrate","is_document","Modal","Footer","has_separator","Button","has_effect","large","primary","onClick","_useStore","common","client","toggleMT5MigrationModal","email","setAppstorePlatform","_useCfdStore","useCfdStore","setJurisdictionSelectedShortcode","setSentEmailModalStatus","submitMt5Password","formik_ref","content_size","onForgotPassword","WS","verifyEmail","url_parameters","redirect_to","Formik","initialValues","password","enableReinitialize","validate","_values$password","errors","validLength","min","max","validPassword","getErrorMessages","localize","min_number","max_number","toLowerCase","innerRef","validateOnMount","onSubmit","actions","then","_ref","handleBlur","handleChange","handleSubmit","isSubmitting","touched","PasswordInput","autoComplete","label","name","value","onBlur","onChange","InlineMessage","FormSubmitButton","is_disabled","is_absolute","has_cancel","onCancel","cancel_label","is_loading","Div100vhContainer","height_offset","is_bypassed","MT5MigrationFrontSideContent","MT5MigrationBackSideContent","cfd","modules","disableApp","enableApp","is_mt5_migration_modal_open","is_mt5_migration_modal_enabled","mt5_migration_error","setMT5MigrationError","setIsFromMt5MigrationModal","_React$useState2","_slicedToArray","modal_title","closeModal","fallback","UILoader","Provider","Dialog","title","confirm_button_text","onConfirm","has_close_icon","is_visible","onClose","DesktopWrapper","exit_classname","is_open","toggleModal","width","has_return_icon","onReturn","MT5MigrationModalContent","MobileWrapper","PageOverlay","header_classname","portal_id","header","onClickClose"],"sourceRoot":""}