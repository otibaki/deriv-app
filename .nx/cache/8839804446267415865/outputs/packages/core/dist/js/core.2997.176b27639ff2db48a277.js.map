{"version":3,"file":"js/core.2997.176b27639ff2db48a277.js","mappings":"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","sources":["webpack:///../../account/dist/account/js/currency-radio-button-group.js","webpack:///../../account/dist/account/js/currency-radio-button.js","webpack:///../../account/dist/account/js/currency-selector-config.js","webpack:///../../account/dist/account/js/risk-tolerance-warning-modal.js","webpack:///../../account/src/Components/currency-selector/ust-popover.tsx","webpack:///../../account/src/Components/currency-selector/radio-button.tsx","webpack:///../../account/src/Components/currency-selector/radio-button-group.tsx","webpack:///../../account/src/Components/currency-selector/currency-selector.tsx","webpack:///../../account/src/Components/currency-selector/index.ts","webpack:///../../account/src/Components/real-account-signup/helpers/utils.ts","webpack:///./App/Containers/RealAccountSignup/helpers/constants.js","webpack:///./App/Containers/RealAccountSignup/choose-currency.js","webpack:///./App/Containers/RealAccountSignup/add-currency-note.jsx","webpack:///./App/Containers/RealAccountSignup/add-crypto-currency.jsx","webpack:///./App/Containers/RealAccountSignup/add-currency.jsx","webpack:///./App/Containers/RealAccountSignup/change-account-currency.jsx","webpack:///./App/Containers/RealAccountSignup/add-or-manage-accounts.jsx","webpack:///./App/Containers/RealAccountSignup/choose-currency.jsx","webpack:///./App/Containers/RealAccountSignup/finished-add-currency.jsx","webpack:///./App/Containers/RealAccountSignup/finished-set-currency.jsx","webpack:///./App/Containers/RealAccountSignup/set-currency.jsx","webpack:///./App/Containers/RealAccountSignup/signup-error-content.jsx","webpack:///./App/Containers/RealAccountSignup/helpers/dialog-heading.jsx","webpack:///./App/Containers/RealAccountSignup/helpers/dialog-message.jsx","webpack:///./App/Containers/RealAccountSignup/helpers/dialog-buttons.jsx","webpack:///./App/Containers/RealAccountSignup/status-dialog-container.jsx","webpack:///./App/Containers/RealAccountSignup/new-status-dialog-container.jsx","webpack:///./App/Containers/RealAccountSignup/real-account-signup.jsx","webpack:///./App/Containers/RealAccountSignup/index.js","webpack:///./App/Containers/RealAccountSignup/real-account-signup-loader.jsx","webpack:///../../hooks/src/usePaymentAgentList.ts"],"sourcesContent":["/*! For license information please see currency-radio-button-group.js.LICENSE.txt */\n!function(e,r){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=r(require(\"react\")):\"function\"==typeof define&&define.amd?define([\"react\"],r):\"object\"==typeof exports?exports[\"@deriv/account\"]=r(require(\"react\")):e[\"@deriv/account\"]=r(e.react)}(self,(e=>(()=>{\"use strict\";var r={\"../../../node_modules/object-assign/index.js\":e=>{var r=Object.getOwnPropertySymbols,t=Object.prototype.hasOwnProperty,n=Object.prototype.propertyIsEnumerable;e.exports=function(){try{if(!Object.assign)return!1;var e=new String(\"abc\");if(e[5]=\"de\",\"5\"===Object.getOwnPropertyNames(e)[0])return!1;for(var r={},t=0;t<10;t++)r[\"_\"+String.fromCharCode(t)]=t;if(\"0123456789\"!==Object.getOwnPropertyNames(r).map((function(e){return r[e]})).join(\"\"))return!1;var n={};return\"abcdefghijklmnopqrst\".split(\"\").forEach((function(e){n[e]=e})),\"abcdefghijklmnopqrst\"===Object.keys(Object.assign({},n)).join(\"\")}catch(e){return!1}}()?Object.assign:function(e,o){for(var c,s,i=function(e){if(null==e)throw new TypeError(\"Object.assign cannot be called with null or undefined\");return Object(e)}(e),a=1;a<arguments.length;a++){for(var l in c=Object(arguments[a]))t.call(c,l)&&(i[l]=c[l]);if(r){s=r(c);for(var u=0;u<s.length;u++)n.call(c,s[u])&&(i[s[u]]=c[s[u]])}}return i}},\"../../../node_modules/react/cjs/react-jsx-runtime.production.min.js\":(e,r,t)=>{t(\"../../../node_modules/object-assign/index.js\");var n=t(\"react\"),o=60103;if(\"function\"==typeof Symbol&&Symbol.for){var c=Symbol.for;o=c(\"react.element\"),c(\"react.fragment\")}var s=n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,i=Object.prototype.hasOwnProperty,a={key:!0,ref:!0,__self:!0,__source:!0};function l(e,r,t){var n,c={},l=null,u=null;for(n in void 0!==t&&(l=\"\"+t),void 0!==r.key&&(l=\"\"+r.key),void 0!==r.ref&&(u=r.ref),r)i.call(r,n)&&!a.hasOwnProperty(n)&&(c[n]=r[n]);if(e&&e.defaultProps)for(n in r=e.defaultProps)void 0===c[n]&&(c[n]=r[n]);return{$$typeof:o,type:e,key:l,ref:u,props:c,_owner:s.current}}r.jsx=l,r.jsxs=l},\"../../../node_modules/react/jsx-runtime.js\":(e,r,t)=>{e.exports=t(\"../../../node_modules/react/cjs/react-jsx-runtime.production.min.js\")},react:r=>{r.exports=e}},t={};function n(e){var o=t[e];if(void 0!==o)return o.exports;var c=t[e]={exports:{}};return r[e](c,c.exports,n),c.exports}n.d=(e,r)=>{for(var t in r)n.o(r,t)&&!n.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:r[t]})},n.o=(e,r)=>Object.prototype.hasOwnProperty.call(e,r);var o={};n.d(o,{default:()=>a});n(\"react\");function c(e){var r,t,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e)){var o=e.length;for(r=0;r<o;r++)e[r]&&(t=c(e[r]))&&(n&&(n+=\" \"),n+=t)}else for(t in e)e[t]&&(n&&(n+=\" \"),n+=t);return n}const s=function(){for(var e,r,t=0,n=\"\",o=arguments.length;t<o;t++)(e=arguments[t])&&(r=c(e))&&(n&&(n+=\" \"),n+=r);return n};var i=n(\"../../../node_modules/react/jsx-runtime.js\");const a=e=>{let{children:r,label:t,className:n,is_title_enabled:o=!0,is_fiat:c,item_count:a,description:l}=e;return(0,i.jsxs)(\"div\",{className:n,children:[o&&(0,i.jsx)(\"h2\",{className:s(`${n}--is-header`,{\"currency-selector__is-crypto\":!c}),children:t}),c&&(0,i.jsx)(\"div\",{className:\"currency-selector__description\",children:l}),(0,i.jsx)(\"div\",{className:s(\"currency-list__items\",{\"currency-list__items__center\":a<4,\"currency-list__items__is-fiat\":c,\"currency-list__items__is-crypto\":!c}),children:r})]})};return o=o.default})()));\n//# sourceMappingURL=currency-radio-button-group.js.map","/*! For license information please see currency-radio-button.js.LICENSE.txt */\n!function(e,r){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=r(require(\"@deriv/components\"),require(\"@deriv/shared\"),require(\"@deriv/translations\"),require(\"react\")):\"function\"==typeof define&&define.amd?define([\"@deriv/components\",\"@deriv/shared\",\"@deriv/translations\",\"react\"],r):\"object\"==typeof exports?exports[\"@deriv/account\"]=r(require(\"@deriv/components\"),require(\"@deriv/shared\"),require(\"@deriv/translations\"),require(\"react\")):e[\"@deriv/account\"]=r(e[\"@deriv/components\"],e[\"@deriv/shared\"],e[\"@deriv/translations\"],e.react)}(self,((e,r,t,n)=>(()=>{\"use strict\";var o={\"../../../node_modules/object-assign/index.js\":e=>{var r=Object.getOwnPropertySymbols,t=Object.prototype.hasOwnProperty,n=Object.prototype.propertyIsEnumerable;e.exports=function(){try{if(!Object.assign)return!1;var e=new String(\"abc\");if(e[5]=\"de\",\"5\"===Object.getOwnPropertyNames(e)[0])return!1;for(var r={},t=0;t<10;t++)r[\"_\"+String.fromCharCode(t)]=t;if(\"0123456789\"!==Object.getOwnPropertyNames(r).map((function(e){return r[e]})).join(\"\"))return!1;var n={};return\"abcdefghijklmnopqrst\".split(\"\").forEach((function(e){n[e]=e})),\"abcdefghijklmnopqrst\"===Object.keys(Object.assign({},n)).join(\"\")}catch(e){return!1}}()?Object.assign:function(e,o){for(var s,i,a=function(e){if(null==e)throw new TypeError(\"Object.assign cannot be called with null or undefined\");return Object(e)}(e),c=1;c<arguments.length;c++){for(var l in s=Object(arguments[c]))t.call(s,l)&&(a[l]=s[l]);if(r){i=r(s);for(var d=0;d<i.length;d++)n.call(s,i[d])&&(a[i[d]]=s[i[d]])}}return a}},\"../../../node_modules/react/cjs/react-jsx-runtime.production.min.js\":(e,r,t)=>{t(\"../../../node_modules/object-assign/index.js\");var n=t(\"react\"),o=60103;if(\"function\"==typeof Symbol&&Symbol.for){var s=Symbol.for;o=s(\"react.element\"),s(\"react.fragment\")}var i=n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,a=Object.prototype.hasOwnProperty,c={key:!0,ref:!0,__self:!0,__source:!0};function l(e,r,t){var n,s={},l=null,d=null;for(n in void 0!==t&&(l=\"\"+t),void 0!==r.key&&(l=\"\"+r.key),void 0!==r.ref&&(d=r.ref),r)a.call(r,n)&&!c.hasOwnProperty(n)&&(s[n]=r[n]);if(e&&e.defaultProps)for(n in r=e.defaultProps)void 0===s[n]&&(s[n]=r[n]);return{$$typeof:o,type:e,key:l,ref:d,props:s,_owner:i.current}}r.jsx=l,r.jsxs=l},\"../../../node_modules/react/jsx-runtime.js\":(e,r,t)=>{e.exports=t(\"../../../node_modules/react/cjs/react-jsx-runtime.production.min.js\")},\"@deriv/components\":r=>{r.exports=e},\"@deriv/shared\":e=>{e.exports=r},\"@deriv/translations\":e=>{e.exports=t},react:e=>{e.exports=n}},s={};function i(e){var r=s[e];if(void 0!==r)return r.exports;var t=s[e]={exports:{}};return o[e](t,t.exports,i),t.exports}i.n=e=>{var r=e&&e.__esModule?()=>e.default:()=>e;return i.d(r,{a:r}),r},i.d=(e,r)=>{for(var t in r)i.o(r,t)&&!i.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:r[t]})},i.o=(e,r)=>Object.prototype.hasOwnProperty.call(e,r);var a={};i.d(a,{default:()=>j});var c=i(\"react\"),l=i.n(c);function d(e){var r,t,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e)){var o=e.length;for(r=0;r<o;r++)e[r]&&(t=d(e[r]))&&(n&&(n+=\" \"),n+=t)}else for(t in e)e[t]&&(n&&(n+=\" \"),n+=t);return n}const u=function(){for(var e,r,t=0,n=\"\",o=arguments.length;t<o;t++)(e=arguments[t])&&(r=d(e))&&(n&&(n+=\" \"),n+=r);return n};var f=i(\"@deriv/components\"),m=i(\"@deriv/shared\"),p=i(\"@deriv/translations\"),_=i(\"../../../node_modules/react/jsx-runtime.js\");const v=e=>{let r,{id:t}=e;return r=/^UST$/i.test(t)?(0,_.jsx)(p.Localize,{i18n_default_text:\"Tether as an Omni token (USDT) is a version of Tether that is hosted on the Omni layer on the Bitcoin blockchain.\",components:[(0,_.jsx)(\"br\",{},0)]}):/^tUSDT$/i.test(t)?(0,_.jsx)(p.Localize,{i18n_default_text:\"Tether as a TRC20 token (tUSDT) is a version of Tether that is hosted on Tron.\"}):(0,_.jsx)(p.Localize,{i18n_default_text:\"Tether as an ERC20 token (eUSDT) is a version of Tether that is hosted on Ethereum.\"}),(0,_.jsx)(f.Popover,{alignment:\"top\",className:\"currency-list__popover\",disable_message_icon:!0,icon:\"info\",is_bubble_hover_enabled:!0,message:r,zIndex:\"9999\"})},j=e=>{let{field:{name:r,value:t,onChange:n,onBlur:o},icon:s,id:i,label:a,second_line_label:c,onClick:d,className:p,...j}=e;return(0,_.jsxs)(l().Fragment,{children:[(0,_.jsx)(\"input\",{name:r,id:i,type:\"radio\",value:i,checked:i===t,onChange:n,onBlur:o,disabled:j.selected,className:u(p,\"currency-list__radio-button\"),...j}),(0,_.jsx)(\"label\",{htmlFor:i,className:u(\"currency-list__item\",{\"currency-list__item--selected\":i===t,\"currency-list__item--current\":j.selected}),onClick:d,children:s?(0,_.jsxs)(l().Fragment,{children:[(0,_.jsx)(f.Icon,{className:\"currency-list__icon\",icon:s}),(0,_.jsxs)(\"div\",{className:\"label currency-list__item-text\",children:[(0,_.jsx)(\"div\",{className:\"currency-list__item-label\",children:a}),(0,_.jsx)(\"div\",{className:\"currency-list__item-code\",children:c})]})]}):(0,_.jsxs)(l().Fragment,{children:[(0,_.jsx)(f.Icon,{className:\"currency-list__icon\",icon:`IcCurrency-${i?.toLowerCase()}`}),i&&/^(UST|eUSDT|tUSDT)$/i.test(i)&&(0,_.jsx)(v,{id:i}),(0,_.jsxs)(\"div\",{className:\"label currency-list__item-text\",children:[(0,_.jsx)(\"div\",{className:\"currency-list__item-label\",children:a}),(0,_.jsxs)(\"div\",{className:\"currency-list__item-code\",children:[\"(\",(0,m.getCurrencyDisplayCode)(i),\")\"]})]})]})})]})};return a=a.default})()));\n//# sourceMappingURL=currency-radio-button.js.map","!function(e,r){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=r(require(\"@deriv/shared\"),require(\"@deriv/translations\")):\"function\"==typeof define&&define.amd?define([\"@deriv/shared\",\"@deriv/translations\"],r):\"object\"==typeof exports?exports[\"@deriv/account\"]=r(require(\"@deriv/shared\"),require(\"@deriv/translations\")):e[\"@deriv/account\"]=r(e[\"@deriv/shared\"],e[\"@deriv/translations\"])}(self,((e,r)=>(()=>{\"use strict\";var t={\"@deriv/shared\":r=>{r.exports=e},\"@deriv/translations\":e=>{e.exports=r}},a={};function o(e){var r=a[e];if(void 0!==r)return r.exports;var i=a[e]={exports:{}};return t[e](i,i.exports,o),i.exports}o.n=e=>{var r=e&&e.__esModule?()=>e.default:()=>e;return o.d(r,{a:r}),r},o.d=(e,r)=>{for(var t in r)o.o(r,t)&&!o.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:r[t]})},o.o=(e,r)=>Object.prototype.hasOwnProperty.call(e,r);var i={};o.d(i,{default:()=>l});var n=o(\"@deriv/shared\"),d=o(\"@deriv/translations\");const s={currency:{supported_in:[\"maltainvest\",\"svg\"],default_value:\"\",rules:[[\"req\",(0,d.localize)(\"Select an item\")]]}},l=(e,r)=>{let{real_account_signup_target:t}=e;return{header:{active_title:(0,d.localize)(\"Select your preferred currency\"),title:(0,d.localize)(\"Account currency\")},body:r,form_value:(0,n.getDefaultFields)(t,s),props:{validate:(0,n.generateValidationFunction)(t,s)},passthrough:[\"legal_allowed_currencies\"],icon:\"IcDashboardCurrency\"}};return i=i.default})()));\n//# sourceMappingURL=currency-selector-config.js.map","/*! For license information please see risk-tolerance-warning-modal.js.LICENSE.txt */\n!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t(require(\"@deriv-com/translations\"),require(\"@deriv/components\"),require(\"react\")):\"function\"==typeof define&&define.amd?define([\"@deriv-com/translations\",\"@deriv/components\",\"react\"],t):\"object\"==typeof exports?exports[\"@deriv/account\"]=t(require(\"@deriv-com/translations\"),require(\"@deriv/components\"),require(\"react\")):e[\"@deriv/account\"]=t(e[\"@deriv-com/translations\"],e[\"@deriv/components\"],e.react)}(self,((e,t,r)=>(()=>{\"use strict\";var o={\"../../../node_modules/object-assign/index.js\":e=>{var t=Object.getOwnPropertySymbols,r=Object.prototype.hasOwnProperty,o=Object.prototype.propertyIsEnumerable;e.exports=function(){try{if(!Object.assign)return!1;var e=new String(\"abc\");if(e[5]=\"de\",\"5\"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},r=0;r<10;r++)t[\"_\"+String.fromCharCode(r)]=r;if(\"0123456789\"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(\"\"))return!1;var o={};return\"abcdefghijklmnopqrst\".split(\"\").forEach((function(e){o[e]=e})),\"abcdefghijklmnopqrst\"===Object.keys(Object.assign({},o)).join(\"\")}catch(e){return!1}}()?Object.assign:function(e,n){for(var s,i,a=function(e){if(null==e)throw new TypeError(\"Object.assign cannot be called with null or undefined\");return Object(e)}(e),c=1;c<arguments.length;c++){for(var l in s=Object(arguments[c]))r.call(s,l)&&(a[l]=s[l]);if(t){i=t(s);for(var d=0;d<i.length;d++)o.call(s,i[d])&&(a[i[d]]=s[i[d]])}}return a}},\"../../../node_modules/react/cjs/react-jsx-runtime.production.min.js\":(e,t,r)=>{r(\"../../../node_modules/object-assign/index.js\");var o=r(\"react\"),n=60103;if(\"function\"==typeof Symbol&&Symbol.for){var s=Symbol.for;n=s(\"react.element\"),s(\"react.fragment\")}var i=o.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,a=Object.prototype.hasOwnProperty,c={key:!0,ref:!0,__self:!0,__source:!0};function l(e,t,r){var o,s={},l=null,d=null;for(o in void 0!==r&&(l=\"\"+r),void 0!==t.key&&(l=\"\"+t.key),void 0!==t.ref&&(d=t.ref),t)a.call(t,o)&&!c.hasOwnProperty(o)&&(s[o]=t[o]);if(e&&e.defaultProps)for(o in t=e.defaultProps)void 0===s[o]&&(s[o]=t[o]);return{$$typeof:n,type:e,key:l,ref:d,props:s,_owner:i.current}}t.jsx=l,t.jsxs=l},\"../../../node_modules/react/jsx-runtime.js\":(e,t,r)=>{e.exports=r(\"../../../node_modules/react/cjs/react-jsx-runtime.production.min.js\")},\"@deriv-com/translations\":t=>{t.exports=e},\"@deriv/components\":e=>{e.exports=t},react:e=>{e.exports=r},\"../../../node_modules/@deriv-com/ui/dist/hooks/useDevice.js\":(e,t,r)=>{r.d(t,{Y:()=>d});var o=r(\"react\"),n=typeof globalThis<\"u\"?globalThis:typeof window<\"u\"?window:typeof global<\"u\"?global:typeof self<\"u\"?self:{};var s=\"object\"==typeof n&&n&&n.Object===Object&&n,i=\"object\"==typeof self&&self&&self.Object===Object&&self;s||i||Function(\"return this\")();var a=typeof window<\"u\"?o.useLayoutEffect:o.useEffect;var c=typeof window>\"u\";function l(e,{defaultValue:t=!1,initializeWithValue:r=!0}={}){const n=e=>c?t:window.matchMedia(e).matches,[s,i]=(0,o.useState)((()=>r?n(e):t));function l(){i(n(e))}return a((()=>{const t=window.matchMedia(e);return l(),t.addListener?t.addListener(l):t.addEventListener(\"change\",l),()=>{t.removeListener?t.removeListener(l):t.removeEventListener(\"change\",l)}}),[e]),s}const d=()=>({isDesktop:l(\"(min-width: 1280px)\"),isMobile:l(\"(max-width: 600px)\"),isTablet:l(\"(min-width: 601px) and (max-width: 1279px)\"),isTabletPortrait:l(\"(min-width: 601px) and (max-width: 1279px) and (orientation: portrait)\"),isMobileOrTabletLandscape:l(\"(max-width: 1279px) and (orientation: landscape)\")})}},n={};function s(e){var t=n[e];if(void 0!==t)return t.exports;var r=n[e]={exports:{}};return o[e](r,r.exports,s),r.exports}s.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return s.d(t,{a:t}),t},s.d=(e,t)=>{for(var r in t)s.o(t,r)&&!s.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},s.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);var i={};s.d(i,{default:()=>m});var a=s(\"react\"),c=s.n(a),l=s(\"@deriv/components\"),d=s(\"@deriv-com/translations\"),u=s(\"../../../node_modules/@deriv-com/ui/dist/hooks/useDevice.js\"),p=s(\"../../../node_modules/react/jsx-runtime.js\");const m=e=>{let{show_risk_modal:t,handleAcceptRisk:r,title:o,button_text:n,body_content:s,has_sub_header:i=!1}=e;const{isDesktop:a}=(0,u.Y)(),{localize:m}=(0,d.useTranslations)();return(0,p.jsx)(c().Fragment,{children:a?(0,p.jsxs)(l.Modal,{width:\"44rem\",title:o,height:\"41rem\",is_open:t,className:\"center-risk-modal\",toggleModal:r,has_close_icon:!1,children:[(0,p.jsxs)(l.Modal.Body,{children:[(0,p.jsx)(l.Icon,{icon:\"IcRedWarning\",size:\"63\"}),(0,p.jsx)(l.Text,{as:\"p\",size:\"xs\",align:\"center\",line_height:\"s\",className:\"risk-acceptance__text\",children:s})]}),(0,p.jsx)(l.Modal.Footer,{children:(0,p.jsx)(l.Button,{type:\"button\",large:!0,text:n??m(\"OK\"),primary:!0,onClick:r})})]}):(0,p.jsxs)(l.MobileDialog,{visible:t,title:i?m(\"Trading Experience Assessment\"):o,portal_element_id:\"modal_root\",has_close_icon:!1,children:[(0,p.jsxs)(l.Modal.Body,{className:\"risk-tolerance-modal\",children:[i?(0,p.jsxs)(l.Text,{size:\"xs\",line_height:\"s\",weight:\"bold\",as:\"p\",className:\"risk-tolerance-modal__title\",children:[o,(0,p.jsx)(\"div\",{className:\"risk-tolerance-modal__title--separator\"})]}):null,(0,p.jsxs)(\"div\",{className:\"risk-tolerance-modal__wrapper\",children:[(0,p.jsx)(l.Icon,{icon:\"IcRedWarning\",size:\"65\"}),(0,p.jsx)(l.Text,{as:\"p\",size:\"xs\",align:\"center\",line_height:\"l\",className:\"risk-acceptance__text\",children:s})]})]}),(0,p.jsx)(l.Modal.Footer,{className:\"risk-tolerance-modal__footer\",children:(0,p.jsx)(l.Button,{type:\"button\",large:!0,text:n??m(\"OK\"),primary:!0,onClick:r})})]})})};return i=i.default})()));\n//# sourceMappingURL=risk-tolerance-warning-modal.js.map","import React from 'react';\nimport { Popover } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\n\nexport type TUSTPopover = {\n    id: string;\n};\n\nconst USTPopover = ({ id }: TUSTPopover) => {\n    let popover_message: React.ReactElement;\n    if (/^UST$/i.test(id)) {\n        popover_message = (\n            <Localize\n                i18n_default_text={\n                    'Tether as an Omni token (USDT) is a version of Tether that is hosted on the Omni layer on the Bitcoin blockchain.'\n                }\n                components={[<br key={0} />]}\n            />\n        );\n    } else if (/^tUSDT$/i.test(id)) {\n        popover_message = (\n            <Localize\n                i18n_default_text={'Tether as a TRC20 token (tUSDT) is a version of Tether that is hosted on Tron.'}\n            />\n        );\n    } else {\n        popover_message = (\n            <Localize\n                i18n_default_text={\n                    'Tether as an ERC20 token (eUSDT) is a version of Tether that is hosted on Ethereum.'\n                }\n            />\n        );\n    }\n\n    return (\n        <Popover\n            alignment='top'\n            className='currency-list__popover'\n            disable_message_icon\n            icon='info'\n            is_bubble_hover_enabled\n            message={popover_message}\n            zIndex='9999'\n        />\n    );\n};\n\nexport default USTPopover;\n","import React, { AllHTMLAttributes } from 'react';\nimport clsx from 'clsx';\nimport { Icon } from '@deriv/components';\nimport { getCurrencyDisplayCode } from '@deriv/shared';\nimport USTPopover from './ust-popover';\n\ntype TRadioButtonExtend = {\n    field: React.InputHTMLAttributes<HTMLInputElement>;\n    icon?: string;\n    second_line_label?: string;\n    id: string;\n    label: string;\n    onClick?: (e: React.MouseEvent<HTMLLabelElement, MouseEvent>) => void;\n};\n\nexport type TRadioButton = AllHTMLAttributes<HTMLInputElement | HTMLLabelElement> & TRadioButtonExtend;\n\n/**\n *  RadioButton component to select currency\n * @name RadioButton\n * @param {React.InputHTMLAttributes<HTMLInputElement>} field - field props given by Formik\n * @param {string} icon - icon name\n * @param {string} id - currency id\n * @param {string} label - currency name\n * @param {string} second_line_label - currency code\n * @param {Function} onClick - function to be called on click\n * @param {AllHTMLAttributes<HTMLInputElement | HTMLLabelElement>} props - other props to be passed\n * @returns {React.ReactNode} - returns a React node\n */\n\nconst RadioButton = ({\n    field: { name, value, onChange, onBlur },\n    icon,\n    id,\n    label,\n    second_line_label,\n    onClick,\n    className,\n    ...props\n}: TRadioButton) => {\n    return (\n        <React.Fragment>\n            <input\n                name={name}\n                id={id}\n                type='radio'\n                value={id} // could be something else for output?\n                checked={id === value}\n                onChange={onChange}\n                onBlur={onBlur}\n                disabled={props.selected}\n                className={clsx(className, 'currency-list__radio-button')}\n                {...props}\n            />\n            <label\n                htmlFor={id}\n                className={clsx('currency-list__item', {\n                    'currency-list__item--selected': id === value,\n                    'currency-list__item--current': props.selected,\n                })}\n                onClick={onClick}\n            >\n                {icon ? (\n                    <React.Fragment>\n                        <Icon className='currency-list__icon' icon={icon} />\n                        <div className='label currency-list__item-text'>\n                            <div className='currency-list__item-label'>{label}</div>\n                            <div className='currency-list__item-code'>{second_line_label}</div>\n                        </div>\n                    </React.Fragment>\n                ) : (\n                    <React.Fragment>\n                        <Icon className='currency-list__icon' icon={`IcCurrency-${id?.toLowerCase()}`} />\n                        {id && /^(UST|eUSDT|tUSDT)$/i.test(id) && <USTPopover id={id} />}\n                        <div className='label currency-list__item-text'>\n                            <div className='currency-list__item-label'>{label}</div>\n                            <div className='currency-list__item-code'>({getCurrencyDisplayCode(id)})</div>\n                        </div>\n                    </React.Fragment>\n                )}\n            </label>\n        </React.Fragment>\n    );\n};\n\nexport default RadioButton;\n","import React from 'react';\nimport clsx from 'clsx';\n\nexport type TRadioButtonGroup = {\n    className: string;\n    is_fiat?: boolean;\n    is_title_enabled?: boolean;\n    item_count: number;\n    label?: string;\n    description?: React.ReactNode;\n};\n\n/**\n * Wrapper component for RadioButton\n * @name RadioButtonGroup\n * @param {string} className - class name for styling\n * @param {boolean} is_fiat - is fiat currency\n * @param {boolean} is_title_enabled - is title enabled\n * @param {number} item_count - number of items\n * @param {string} label - label for the radio button\n * @param {React.ReactNode} description - description for the radio button\n * @returns {React.ReactNode} - returns a React node\n */\nconst RadioButtonGroup = ({\n    children,\n    label,\n    className,\n    is_title_enabled = true,\n    is_fiat,\n    item_count,\n    description,\n}: React.PropsWithChildren<TRadioButtonGroup>) => {\n    return (\n        <div className={className}>\n            {is_title_enabled && (\n                <h2\n                    className={clsx(`${className}--is-header`, {\n                        'currency-selector__is-crypto': !is_fiat,\n                    })}\n                >\n                    {label}\n                </h2>\n            )}\n            {is_fiat && <div className='currency-selector__description'>{description}</div>}\n            <div\n                className={clsx('currency-list__items', {\n                    'currency-list__items__center': item_count < 4,\n                    'currency-list__items__is-fiat': is_fiat,\n                    'currency-list__items__is-crypto': !is_fiat,\n                })}\n            >\n                {children}\n            </div>\n        </div>\n    );\n};\n\nexport default RadioButtonGroup;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { Field, Formik, FormikHandlers, FormikState } from 'formik';\nimport { AutoHeightWrapper, FormSubmitButton, Div100vhContainer, Modal, ThemedScrollbars } from '@deriv/components';\nimport { reorderCurrencies, getAddressDetailsFields, CURRENCY_TYPE } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { localize } from '@deriv/translations';\nimport RadioButton from './radio-button';\nimport RadioButtonGroup from './radio-button-group';\nimport { splitValidationResultTypes } from '../real-account-signup/helpers/utils';\nimport { useDevice } from '@deriv-com/ui';\n\nexport const Hr = () => <div className='currency-hr' />;\n\nexport type TCurrencySelectorFormProps = {\n    currency: string;\n};\n\ntype TCurrencySelectorExtend = {\n    getCurrentStep: () => number;\n    goToNextStep: () => void;\n    goToStep: (step: number) => void;\n    goToPreviousStep: () => void;\n    has_cancel: boolean;\n    has_wallet_account: boolean;\n    is_virtual: boolean;\n    onCancel: (current_step: number, goToPreviousStep: () => void) => void;\n    onSave?: (current_step: number, values: TCurrencySelectorFormProps) => void;\n    onSubmit: (\n        current_step: number | null,\n        values: TCurrencySelectorFormProps,\n        action: (isSubmitting: boolean) => void,\n        next_step: () => void\n    ) => void;\n    set_currency: boolean;\n    validate: (values: TCurrencySelectorFormProps) => TCurrencySelectorFormProps;\n    value: TCurrencySelectorFormProps;\n};\n\ntype TCurrencySelector = React.HTMLAttributes<HTMLInputElement | HTMLLabelElement> & TCurrencySelectorExtend;\n\n/**\n * Currency selector component to select the Account currency\n * @name CurrencySelector\n * @param getCurrentStep - Get the current step\n * @param goToNextStep - Go to the next step\n * @param goToStep - Go to a specific step\n * @param goToPreviousStep - Go to the previous step\n * @param has_cancel - Has cancel button\n * @param has_wallet_account - Has wallet account\n * @param is_virtual - Is virtual account\n * @param onCancel - To handle click on cancel button\n * @param onSave - To handle click on save button\n * @param onSubmit - To handle click on submit button\n * @param set_currency - Is current set\n * @param alidate - To validate the form\n * @param alue - Value of the form\n * @returns React node\n */\nconst CurrencySelector = observer(\n    ({\n        getCurrentStep,\n        goToNextStep,\n        goToStep,\n        onSubmit,\n        onSave,\n        onCancel,\n        goToPreviousStep,\n        set_currency,\n        validate,\n        has_cancel = false,\n        has_wallet_account,\n        value,\n    }: TCurrencySelector) => {\n        const { client, ui } = useStore();\n\n        const {\n            currency,\n            has_active_real_account: has_real_account,\n            upgradeable_currencies: legal_allowed_currencies,\n            available_crypto_currencies,\n            has_fiat,\n            accounts,\n        } = client;\n\n        const has_currency = Boolean(currency);\n\n        const { real_account_signup, real_account_signup_target, resetRealAccountSignupParams } = ui;\n        const { isMobile, isDesktop } = useDevice();\n\n        // Wrapped with String() to avoid type mismatch\n        const crypto = legal_allowed_currencies.filter(\n            selected_currency => String(selected_currency.type) === CURRENCY_TYPE.CRYPTO\n        );\n\n        // Wrapped with String() to avoid type mismatch\n        const fiat = legal_allowed_currencies.filter(\n            selected_currency => String(selected_currency.type) === CURRENCY_TYPE.FIAT\n        );\n        const [is_bypass_step, setIsBypassStep] = React.useState<boolean>(false);\n\n        const should_disable_fiat = !!Object.values(accounts).filter(\n            item => item.landing_company_shortcode === real_account_signup_target\n        ).length;\n\n        const handleCancel = (values: TCurrencySelectorFormProps) => {\n            const current_step = getCurrentStep() - 1;\n            onSave?.(current_step, values);\n            onCancel(current_step, goToPreviousStep);\n        };\n\n        const handleValidate = (values: TCurrencySelectorFormProps) => {\n            const current_step = (getCurrentStep?.() || 1) - 1;\n            onSave?.(current_step, values);\n\n            const { errors } = splitValidationResultTypes(validate(values));\n            return errors;\n        };\n\n        // In case of form error bypass to update personal data\n        React.useEffect(() => {\n            if (real_account_signup?.error_code) {\n                setIsBypassStep(true);\n            }\n        }, [real_account_signup?.error_code]);\n\n        React.useEffect(() => {\n            if (is_bypass_step && real_account_signup?.error_details) {\n                const keys = Object.keys(real_account_signup?.error_details);\n                const route_to_address_details = Object.keys(getAddressDetailsFields()).filter(item =>\n                    keys.includes(item)\n                );\n                if (route_to_address_details?.length > 0) {\n                    goToStep(3);\n                } else {\n                    goToNextStep();\n                }\n                resetRealAccountSignupParams();\n                setIsBypassStep(false);\n            }\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n        }, [is_bypass_step]);\n\n        const getHeightOffset = () => {\n            if (!has_currency && has_real_account) {\n                return '89px';\n            }\n            return '159px';\n        };\n\n        const getSubmitLabel = () => {\n            if (set_currency) {\n                return localize('Set currency');\n            } else if (has_wallet_account) {\n                return localize('Finish');\n            }\n            return localize('Next');\n        };\n\n        return (\n            <Formik\n                initialValues={value}\n                onSubmit={(values, actions) => {\n                    onSubmit(getCurrentStep ? getCurrentStep() - 1 : null, values, actions.setSubmitting, goToNextStep);\n                }}\n                validate={handleValidate}\n            >\n                {({ handleSubmit, values }: FormikState<TCurrencySelectorFormProps> & FormikHandlers) => (\n                    <AutoHeightWrapper default_height={450}>\n                        {({\n                            setRef,\n                            height,\n                        }: {\n                            setRef: (instance: HTMLFormElement | null) => void;\n                            height: number;\n                        }) => (\n                            <form\n                                ref={setRef}\n                                onSubmit={handleSubmit}\n                                className='currency-selector'\n                                data-testid='currency_selector_form'\n                            >\n                                <Div100vhContainer\n                                    className={clsx('currency-selector__container', {\n                                        'currency-selector__container--no-top-margin':\n                                            !has_currency && has_real_account && isMobile,\n                                    })}\n                                    height_offset={getHeightOffset()}\n                                    is_disabled={isDesktop}\n                                >\n                                    <ThemedScrollbars height={height}>\n                                        {!!fiat?.length && (\n                                            <React.Fragment>\n                                                <RadioButtonGroup\n                                                    className='currency-selector__radio-group currency-selector__radio-group--with-margin'\n                                                    is_fiat\n                                                    item_count={fiat.length}\n                                                >\n                                                    {reorderCurrencies(fiat as keyof typeof reorderCurrencies).map(\n                                                        avbl_currency => (\n                                                            <Field\n                                                                key={avbl_currency.value}\n                                                                component={RadioButton}\n                                                                name='currency'\n                                                                id={avbl_currency.value}\n                                                                label={avbl_currency.name}\n                                                                selected={should_disable_fiat && has_fiat}\n                                                            />\n                                                        )\n                                                    )}\n                                                </RadioButtonGroup>\n                                                {!!reorderCurrencies(crypto as keyof typeof reorderCurrencies, 'crypto')\n                                                    ?.length && <Hr />}\n                                            </React.Fragment>\n                                        )}\n                                        {!!reorderCurrencies(crypto as keyof typeof reorderCurrencies, 'crypto')\n                                            ?.length && (\n                                            <React.Fragment>\n                                                <RadioButtonGroup\n                                                    is_title_enabled={false}\n                                                    className='currency-selector__radio-group currency-selector__radio-group--with-margin'\n                                                    item_count={\n                                                        reorderCurrencies(\n                                                            crypto as keyof typeof reorderCurrencies,\n                                                            'crypto'\n                                                        ).length\n                                                    }\n                                                >\n                                                    {reorderCurrencies(\n                                                        crypto as keyof typeof reorderCurrencies,\n                                                        'crypto'\n                                                    ).map(avbl_currency => (\n                                                        <Field\n                                                            key={avbl_currency.value}\n                                                            component={RadioButton}\n                                                            selected={\n                                                                available_crypto_currencies?.filter(\n                                                                    crypto_data =>\n                                                                        crypto_data.value === avbl_currency.value\n                                                                )?.length === 0\n                                                            }\n                                                            name='currency'\n                                                            id={avbl_currency.value}\n                                                            label={avbl_currency.name}\n                                                        />\n                                                    ))}\n                                                </RadioButtonGroup>\n                                            </React.Fragment>\n                                        )}\n                                    </ThemedScrollbars>\n                                </Div100vhContainer>\n                                <Modal.Footer has_separator is_bypassed={isMobile}>\n                                    <FormSubmitButton\n                                        className={\n                                            set_currency\n                                                ? 'currency-selector--set-currency'\n                                                : 'currency-selector--deriv-account'\n                                        }\n                                        is_disabled={!values.currency}\n                                        is_center={false}\n                                        is_absolute={set_currency}\n                                        label={getSubmitLabel()}\n                                        {...(has_cancel\n                                            ? {\n                                                  cancel_label: localize('Previous'),\n                                                  has_cancel: true,\n                                                  onCancel: () => handleCancel(values),\n                                              }\n                                            : {})}\n                                    />\n                                </Modal.Footer>\n                            </form>\n                        )}\n                    </AutoHeightWrapper>\n                )}\n            </Formik>\n        );\n    }\n);\n\nexport default CurrencySelector;\n","import CurrencySelector from './currency-selector';\n\nexport default CurrencySelector;\n","import { FormikErrors, FormikValues } from 'formik';\n\n/**\n * Takes validation result of a form, sets warnings on component's state and pass errors down to the form\n *\n * @param {object} values - object containing form field values and validations\n * @return {object} object containing errors and warnings\n */\nfunction splitValidationResultTypes(values: FormikValues) {\n    const warnings: FormikErrors<FormikValues> = {};\n    const errors: FormikErrors<FormikValues> = {};\n    Object.keys(values).forEach((field: string) => {\n        const item = values[field];\n        if (Array.isArray(item)) {\n            if (item[0] === 'warn') {\n                warnings[field] = item[1];\n            } else if (item[0] === 'error') {\n                errors[field] = item[1];\n            }\n        }\n    });\n    return { warnings, errors };\n}\n\nexport { splitValidationResultTypes };\n","import { localize } from '@deriv/translations';\n\n/**\n * Experian result is defined by client's information validity.\n * Defines the possible types of actions needed to take on experian result response.\n *\n * Possible values are:\n *   - Success: Client can trade\n *   - Warn: POI/POA Validity partially failed, trade in demo possible\n *   - Danger: POI/POA validation failed. Trade is locked until this resolved.\n *   - Pending: POI/POA is in pending state.\n * @enum {EXPERIAN}\n */\nexport const EXPERIAN = {\n    SUCCESS: 1,\n    WARN: 0,\n    DANGER: -1,\n    PENDING: -2,\n};\n\n/**\n * Return account title for the given landing company\n *\n * @param {string} landing_company_shortcode\n * @return {string} localized title\n */\nexport const getAccountTitle = landing_company_shortcode => {\n    switch (landing_company_shortcode) {\n        case 'svg':\n            return localize('Options & Multipliers');\n        case 'maltainvest':\n            return localize('Multipliers');\n        default:\n            return localize('Deriv');\n    }\n};\n\n/**\n * @param {string} landing_company_shortcode\n *\n * @return {EXPERIAN.WARN|EXPERIAN.SUCCESS|EXPERIAN.DANGER}\n */\nexport const getExperianResult = status => {\n    const { landing_company_shortcode = '' } = status;\n\n    if (landing_company_shortcode === 'svg') return EXPERIAN.SUCCESS;\n\n    return EXPERIAN.SUCCESS;\n};\n\nexport const screen_height_sm_threshold = 930;\n","const currenciesPaymentAgentAvailability = (legal_allowed_currencies, all_payment_agent_list, account_list) => {\n    const result = [];\n    legal_allowed_currencies.forEach(currency => {\n        result.push({\n            ...currency,\n            has_payment_agent: !!all_payment_agent_list?.filter(agent => agent.currencies === currency.value).length,\n            is_disabled: account_list?.some(account => account.title === currency.value && account.is_disabled),\n        });\n    });\n    return result;\n};\n\nconst currenciesOnRampAvailability = legal_allowed_currencies => {\n    return legal_allowed_currencies.filter(({ platform }) => platform.ramp.length > 0);\n};\n\nexport default {\n    currenciesOnRampAvailability,\n    currenciesPaymentAgentAvailability,\n};\n","import React from 'react';\nimport { Text } from '@deriv/components';\n\nconst AddCurrencyNote = ({ message }) => {\n    return (\n        <div className='add-currency__note-wrapper'>\n            <Text as='p' color='prominent' align='center' size='xxs' className='add-currency__note'>\n                {message}\n            </Text>\n        </div>\n    );\n};\n\nexport default AddCurrencyNote;\n","import { Field, Formik } from 'formik';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { useDevice } from '@deriv-com/ui';\nimport { FormSubmitButton, Icon, Text, ThemedScrollbars } from '@deriv/components';\nimport { localize, Localize } from '@deriv/translations';\nimport { observer, useStore } from '@deriv/stores';\nimport { isMobile, reorderCurrencies, routes, website_name } from '@deriv/shared';\nimport { CurrencyRadioButtonGroup, CurrencyRadioButton } from '@deriv/account';\nimport CurrencyProvider from './choose-currency';\nimport AddCurrencyNote from './add-currency-note';\nimport './currency-selector.scss';\n\nconst messages = () => [\n    <Localize key={0} i18n_default_text='Choose your preferred cryptocurrency' />,\n    <Localize key={1} i18n_default_text='You can open an account for each cryptocurrency.' />,\n    <Localize key={2} i18n_default_text='Add a real account' />,\n    <Localize key={3} i18n_default_text='Choose a currency you would like to trade with.' />,\n    <Localize key={4} i18n_default_text='Choose a currency' />,\n];\n\nconst Headers = ({ heading, subheading }) => (\n    <React.Fragment>\n        <Text as='h1' color='prominent' align='center' weight='bold' className='add-crypto-currency__title'>\n            {heading}\n        </Text>\n        <Text as='h3' size='xxs' color='prominent' align='center' className='add-crypto-currency__sub-title'>\n            {subheading}\n        </Text>\n    </React.Fragment>\n);\n\nconst FIAT_CURRENCY_TYPE = 'fiat';\nconst CRYPTO_CURRENCY_TYPE = 'crypto';\n\nconst AddCryptoCurrency = observer(\n    ({\n        form_error,\n        is_add_fiat,\n        onClickBack,\n        onSubmit,\n        should_show_crypto_only,\n        should_show_fiat_only,\n        value,\n        hasNoAvailableCrypto,\n    }) => {\n        const { isDesktop } = useDevice();\n        const { client, modules, ui } = useStore();\n        const { available_crypto_currencies, upgradeable_currencies: legal_allowed_currencies, has_fiat } = client;\n        const { should_show_cancel } = ui;\n        const { cashier } = modules;\n\n        const deposit_target = cashier.general_store.deposit_target;\n\n        const getReorderedFiatCurrencies = () =>\n            reorderCurrencies(legal_allowed_currencies.filter(currency => currency.type === FIAT_CURRENCY_TYPE));\n        const getReorderedCryptoCurrencies = () => {\n            const currencies =\n                deposit_target === routes.cashier_onramp\n                    ? CurrencyProvider.currenciesOnRampAvailability(legal_allowed_currencies)\n                    : legal_allowed_currencies.filter(currency => currency.type === CRYPTO_CURRENCY_TYPE);\n\n            return reorderCurrencies(currencies, CRYPTO_CURRENCY_TYPE);\n        };\n        const canAddFiat = () => !has_fiat && !should_show_crypto_only;\n        const canAddCrypto = currency => {\n            // check if the cryptocurrency has not been created\n            return available_crypto_currencies.map(e => e.value).indexOf(currency.value) === -1;\n        };\n\n        return (\n            <Formik\n                initialValues={{\n                    currency: value.currency,\n                }}\n                onSubmit={onSubmit}\n            >\n                {({ handleSubmit, values, errors, touched, isSubmitting }) => (\n                    <form onSubmit={handleSubmit}>\n                        {!canAddFiat() && <Headers heading={messages()[0]} subheading={messages()[1]} />}\n                        {canAddFiat() && (\n                            <Headers heading={is_add_fiat ? messages()[4] : messages()[2]} subheading={messages()[3]} />\n                        )}\n                        {canAddFiat() && (\n                            <ThemedScrollbars>\n                                <CurrencyRadioButtonGroup\n                                    id='fiat_currency'\n                                    is_fiat\n                                    className='currency-selector__radio-group currency-selector__radio-group--with-margin'\n                                    value={values.currency}\n                                    error={errors.currency}\n                                    touched={touched.currency}\n                                    is_title_enabled={canAddFiat()}\n                                    item_count={getReorderedFiatCurrencies().length}\n                                >\n                                    {getReorderedFiatCurrencies().map(currency => (\n                                        <Field\n                                            key={currency.value}\n                                            component={CurrencyRadioButton}\n                                            name='currency'\n                                            id={currency.value}\n                                            label={currency.name}\n                                        />\n                                    ))}\n                                </CurrencyRadioButtonGroup>\n                            </ThemedScrollbars>\n                        )}\n                        {canAddFiat() && (\n                            <Text\n                                as='p'\n                                color='prominent'\n                                size='xxs'\n                                align='center'\n                                className='currency-selector__deposit-warn'\n                            >\n                                <Localize i18n_default_text='You’ll not be able to change currency once you have made a deposit.' />\n                            </Text>\n                        )}\n                        {hasNoAvailableCrypto() && (\n                            <div className='account-wizard--disabled-message'>\n                                <Text\n                                    as='p'\n                                    align='center'\n                                    size='xxs'\n                                    className='account-wizard--disabled-message-description'\n                                >\n                                    {localize(\n                                        'You already have an account for each of the cryptocurrencies available on {{deriv}}.',\n                                        {\n                                            deriv: website_name,\n                                        }\n                                    )}\n                                </Text>\n                            </div>\n                        )}\n                        {!should_show_fiat_only &&\n                            (available_crypto_currencies.length !== 0 ? (\n                                <>\n                                    <ThemedScrollbars height={isMobile() ? window.innerHeight - 240 : '460px'}>\n                                        <CurrencyRadioButtonGroup\n                                            id='crypto_currency'\n                                            className='currency-selector__radio-group currency-selector__radio-group--with-margin'\n                                            label={localize('Cryptocurrencies')}\n                                            value={values.currency}\n                                            error={errors.currency}\n                                            touched={touched.currency}\n                                            is_title_enabled={canAddFiat()}\n                                            item_count={getReorderedCryptoCurrencies().length}\n                                        >\n                                            {getReorderedCryptoCurrencies().map(currency => (\n                                                <Field\n                                                    key={currency.value}\n                                                    component={CurrencyRadioButton}\n                                                    name='currency'\n                                                    id={currency.value}\n                                                    label={currency.name}\n                                                    selected={canAddCrypto(currency)}\n                                                />\n                                            ))}\n                                        </CurrencyRadioButtonGroup>\n                                    </ThemedScrollbars>\n                                    {deposit_target === routes.cashier_onramp && (\n                                        <AddCurrencyNote\n                                            message={localize('Some currencies may not be supported by fiat onramp.')}\n                                        />\n                                    )}\n                                </>\n                            ) : (\n                                <ThemedScrollbars>\n                                    <CurrencyRadioButtonGroup\n                                        id='crypto_currency'\n                                        className='currency-selector__radio-group currency-selector__radio-group--with-margin'\n                                        label={localize('Cryptocurrencies')}\n                                        is_title_enabled={canAddFiat()}\n                                        item_count={getReorderedCryptoCurrencies().length}\n                                    >\n                                        {getReorderedCryptoCurrencies().map(currency => (\n                                            <Field\n                                                key={currency.value}\n                                                component={CurrencyRadioButton}\n                                                name='currency'\n                                                id={currency.value}\n                                                label={currency.name}\n                                                selected\n                                            />\n                                        ))}\n                                    </CurrencyRadioButtonGroup>\n                                </ThemedScrollbars>\n                            ))}\n                        <FormSubmitButton\n                            className='currency-selector__button'\n                            is_disabled={isSubmitting || !values.currency}\n                            label={localize('Add account')}\n                            is_absolute={isDesktop}\n                            form_error={form_error}\n                            has_cancel={should_show_cancel}\n                            cancel_label={localize('Back')}\n                            cancel_icon={<Icon icon='IcArrowLeftBold' />}\n                            onCancel={() => onClickBack()}\n                        />\n                    </form>\n                )}\n            </Formik>\n        );\n    }\n);\n\nAddCryptoCurrency.propTypes = {\n    hasNoAvailableCrypto: PropTypes.func,\n    form_error: PropTypes.string,\n    onSubmit: PropTypes.func,\n    should_show_crypto_only: PropTypes.bool,\n    should_show_fiat_only: PropTypes.bool,\n    value: PropTypes.shape({\n        crypto: PropTypes.string,\n        fiat: PropTypes.string,\n        currency: PropTypes.string,\n    }),\n    onClickBack: PropTypes.func,\n    is_add_fiat: PropTypes.bool,\n};\n\nexport default AddCryptoCurrency;\n","import { Field, Formik } from 'formik';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { usePaymentAgentList } from '@deriv/hooks';\nimport { FormSubmitButton, Icon, Loading, Text, ThemedScrollbars } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { isMobile, reorderCurrencies, routes } from '@deriv/shared';\nimport { CurrencyRadioButtonGroup, CurrencyRadioButton } from '@deriv/account';\nimport AddCryptoCurrency from './add-crypto-currency.jsx';\nimport AddCurrencyNote from './add-currency-note.jsx';\nimport CurrencyProvider from './choose-currency';\nimport { observer, useStore } from '@deriv/stores';\nimport './currency-selector.scss';\n\nconst CRYPTO_CURRENCY_TYPE = 'crypto';\nconst FIAT_CURRENCY_TYPE = 'fiat';\n\nconst AddCurrency = observer(({ onSubmit, hasNoAvailableCrypto, is_add_crypto, is_add_fiat }) => {\n    const { client, modules, ui } = useStore();\n    const { available_crypto_currencies, has_fiat, upgradeable_currencies: legal_allowed_currencies } = client;\n    const { cashier } = modules;\n    const setShouldShowAllAvailableCurrencies = cashier.general_store.setShouldShowAllAvailableCurrencies;\n    const deposit_target = cashier.general_store.deposit_target;\n    const { openRealAccountSignup } = ui;\n\n    const [form_error] = React.useState('');\n    const [form_value] = React.useState({ crypto: '', fiat: '' });\n    const { data: all_payment_agent_list, isLoading: is_loading } = usePaymentAgentList();\n\n    const getReorderedCurrencies = React.useMemo(() => {\n        const allowed_currencies_payment_agent_availability = CurrencyProvider.currenciesPaymentAgentAvailability(\n            legal_allowed_currencies,\n            all_payment_agent_list\n        );\n\n        const crypto = reorderCurrencies(\n            allowed_currencies_payment_agent_availability?.filter(\n                currency =>\n                    currency.type === CRYPTO_CURRENCY_TYPE &&\n                    available_crypto_currencies.some(x => x.value === currency.value)\n            ),\n            CRYPTO_CURRENCY_TYPE\n        );\n\n        const fiat = reorderCurrencies(\n            allowed_currencies_payment_agent_availability?.filter(\n                currency =>\n                    currency.type === FIAT_CURRENCY_TYPE &&\n                    !available_crypto_currencies.some(x => x.value === currency.value)\n            )\n        );\n\n        return {\n            crypto,\n            fiat,\n        };\n    }, [all_payment_agent_list, available_crypto_currencies, legal_allowed_currencies]);\n\n    const onClickBack = () => {\n        openRealAccountSignup('choose');\n        if (deposit_target === routes.cashier_pa) {\n            setShouldShowAllAvailableCurrencies(true);\n        }\n    };\n\n    const AddFiat = () => {\n        return (\n            <div>\n                <Text as='h1' color='prominent' align='center' weight='bold' className='add-currency__title'>\n                    {localize('Fiat currencies')}\n                </Text>\n                {!!has_fiat && (\n                    <Text as='p' color='prominent' align='center' size='xxs' className='add-currency__sub-title'>\n                        {localize('You are limited to one fiat account only.')}\n                    </Text>\n                )}\n                {is_loading ? (\n                    <Loading is_fullscreen={false} />\n                ) : (\n                    <CurrencyRadioButtonGroup\n                        id='crypto_currency'\n                        className='currency-selector__radio-group currency-selector__radio-group--with-margin'\n                        item_count={getReorderedCurrencies.fiat.length}\n                    >\n                        {getReorderedCurrencies.fiat.map(currency => (\n                            <Field\n                                key={currency.value}\n                                component={CurrencyRadioButton}\n                                name='currency'\n                                id={currency.value}\n                                label={currency.name}\n                                icon={currency.icon}\n                                second_line_label={currency.second_line_label}\n                                onClick={currency.onClick}\n                                selected={has_fiat}\n                            />\n                        ))}\n                    </CurrencyRadioButtonGroup>\n                )}\n            </div>\n        );\n    };\n\n    const AddCrypto = () => {\n        return (\n            <div>\n                <Text as='h1' color='prominent' align='center' weight='bold' className='add-currency__title'>\n                    {localize('Cryptocurrencies')}\n                </Text>\n                <Text as='p' color='prominent' align='center' size='xxs' className='add-currency__sub-title'>\n                    {localize('You can open an account for each cryptocurrency.')}\n                </Text>\n                {is_loading ? (\n                    <Loading is_fullscreen={false} />\n                ) : (\n                    <CurrencyRadioButtonGroup\n                        id='crypto_currency'\n                        className='currency-selector__radio-group currency-selector__radio-group--with-margin'\n                        item_count={getReorderedCurrencies.crypto.length}\n                    >\n                        {getReorderedCurrencies.crypto.map(currency => (\n                            <Field\n                                key={currency.value}\n                                component={CurrencyRadioButton}\n                                name='currency'\n                                id={currency.value}\n                                label={currency.name}\n                                icon={currency.icon}\n                                second_line_label={currency.second_line_label}\n                                onClick={currency.onClick}\n                                selected={deposit_target === routes.cashier_pa ? !currency.has_payment_agent : false}\n                            />\n                        ))}\n                    </CurrencyRadioButtonGroup>\n                )}\n            </div>\n        );\n    };\n\n    if (is_add_crypto)\n        return (\n            <ThemedScrollbars autohide={false}>\n                <div\n                    className={classNames('add-crypto-currency cashier-deposit', {\n                        'account-wizard--disabled': hasNoAvailableCrypto(),\n                    })}\n                >\n                    <AddCryptoCurrency\n                        className='account-wizard__body'\n                        onSubmit={onSubmit}\n                        onClickBack={onClickBack}\n                        value={form_value}\n                        form_error={form_error}\n                        should_show_crypto_only\n                        hasNoAvailableCrypto={hasNoAvailableCrypto}\n                    />\n                </div>\n            </ThemedScrollbars>\n        );\n\n    if (is_add_fiat) {\n        return (\n            <ThemedScrollbars autohide={false}>\n                <div className='change-currency'>\n                    <AddCryptoCurrency\n                        className='account-wizard__body'\n                        onSubmit={onSubmit}\n                        value={form_value}\n                        form_error={form_error}\n                        should_show_fiat_only\n                        hasNoAvailableCrypto={hasNoAvailableCrypto}\n                        is_add_fiat\n                    />\n                </div>\n            </ThemedScrollbars>\n        );\n    }\n\n    return (\n        <Formik\n            initialValues={{\n                currency: form_value.currency,\n            }}\n            onSubmit={onSubmit}\n        >\n            {({ handleSubmit, values, isSubmitting }) => (\n                <form onSubmit={handleSubmit}>\n                    <ThemedScrollbars height={isMobile() ? window.innerHeight - 190 : '460px'}>\n                        <div>\n                            <Text\n                                as='p'\n                                color='prominent'\n                                weight='bold'\n                                align='center'\n                                className='add-currency__wizard-header'\n                            >\n                                {localize('Choose your currency')}\n                            </Text>\n\n                            <AddFiat />\n                            <div className='add-currency__underline' />\n                            <AddCrypto />\n                        </div>\n                    </ThemedScrollbars>\n                    <AddCurrencyNote\n                        message={localize('Some currencies may not be supported by payment agents in your country.')}\n                    />\n                    <FormSubmitButton\n                        className='currency-selector__button'\n                        is_disabled={isSubmitting || !values.currency}\n                        label={localize('Add account')}\n                        is_absolute\n                        form_error={form_error}\n                        has_cancel\n                        cancel_label={localize('Back')}\n                        cancel_icon={<Icon icon='IcArrowLeftBold' />}\n                        onCancel={() => onClickBack()}\n                    />\n                </form>\n            )}\n        </Formik>\n    );\n});\n\nAddCurrency.propTypes = {\n    onSubmit: PropTypes.func,\n    is_add_crypto: PropTypes.bool,\n    is_add_fiat: PropTypes.bool,\n    hasNoAvailableCrypto: PropTypes.func,\n};\n\nexport default AddCurrency;\n","import { Field, Formik } from 'formik';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { FormSubmitButton, Text } from '@deriv/components';\nimport { isMobile, reorderCurrencies } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { localize, Localize } from '@deriv/translations';\nimport { CurrencyRadioButtonGroup, CurrencyRadioButton } from '@deriv/account';\nimport './currency-selector.scss';\nimport { Chat } from '@deriv/utils';\n\nconst FIAT_CURRENCY_TYPE = 'fiat';\n\nconst ChangeAccountCurrency = observer(\n    ({ value, onSubmit, form_error, can_change_fiat_currency, current_currency_type }) => {\n        const { client, ui } = useStore();\n        const {\n            upgradeable_currencies: legal_allowed_currencies,\n            currency: client_currency,\n            current_fiat_currency,\n        } = client;\n        const { closeRealAccountSignup } = ui;\n        const getReorderedCurrencies = () =>\n            reorderCurrencies(legal_allowed_currencies.filter(currency => currency.type === FIAT_CURRENCY_TYPE));\n\n        const is_fiat = current_currency_type === 'fiat';\n        const fiat_message = (\n            <Localize\n                i18n_default_text='If you want to change your account currency, please contact us via <0>live chat</0>.'\n                components={[\n                    <span\n                        key={0}\n                        className='link link--orange'\n                        onClick={() => {\n                            closeRealAccountSignup();\n                            Chat.open();\n                        }}\n                    />,\n                ]}\n            />\n        );\n\n        const non_fiat_mesage = (\n            <Localize\n                i18n_default_text='Please switch to your {{fiat_currency}} account to change currencies.'\n                values={{\n                    fiat_currency: current_fiat_currency?.toUpperCase?.(),\n                }}\n            />\n        );\n\n        const disabled_message = is_fiat ? fiat_message : non_fiat_mesage;\n\n        return (\n            <Formik\n                initialValues={{\n                    fiat: value.fiat,\n                }}\n                onSubmit={onSubmit}\n            >\n                {({ handleSubmit, values, errors, touched, isSubmitting }) => (\n                    <form\n                        onSubmit={e => {\n                            e.preventDefault();\n                            handleSubmit();\n                        }}\n                    >\n                        <Text as='h1' color='prominent' weight='bold' align='center' className='change-currency__title'>\n                            <Localize i18n_default_text='Change your currency' />\n                        </Text>\n                        <Text as='h3' size='xxs' align='center' className='change-currency__sub-title'>\n                            <Localize i18n_default_text='Choose the currency you would like to trade with.' />\n                        </Text>\n                        {!can_change_fiat_currency && (\n                            <div className='account-wizard--disabled-message'>\n                                <Text\n                                    as='p'\n                                    align='center'\n                                    size='xxs'\n                                    className='account-wizard--disabled-message-description'\n                                >\n                                    {disabled_message}\n                                </Text>\n                            </div>\n                        )}\n                        <CurrencyRadioButtonGroup\n                            id='fiat'\n                            label={localize('Cryptocurrencies')}\n                            className='currency-selector__radio-group currency-selector__radio-group--with-margin'\n                            value={values.fiat}\n                            error={errors.fiat}\n                            touched={touched.fiat}\n                            is_title_enabled={false}\n                            item_count={getReorderedCurrencies().length}\n                        >\n                            {getReorderedCurrencies().map(currency => (\n                                <Field\n                                    key={currency.value}\n                                    component={CurrencyRadioButton}\n                                    name='fiat'\n                                    id={currency.value}\n                                    label={currency.name}\n                                    selected={currency.value === client_currency}\n                                />\n                            ))}\n                        </CurrencyRadioButtonGroup>\n                        <FormSubmitButton\n                            className='change-currency__button'\n                            is_disabled={isSubmitting || !values.fiat}\n                            label={localize('Change currency')}\n                            is_absolute={!isMobile()}\n                            form_error={form_error}\n                        />\n                    </form>\n                )}\n            </Formik>\n        );\n    }\n);\n\nChangeAccountCurrency.propTypes = {\n    onSubmit: PropTypes.func,\n    closeModal: PropTypes.func,\n    value: PropTypes.shape({\n        crypto: PropTypes.string,\n        fiat: PropTypes.string,\n    }),\n    form_error: PropTypes.string,\n    can_change_fiat_currency: PropTypes.bool,\n    current_currency_type: PropTypes.string,\n    current_fiat_currency: PropTypes.string,\n};\n\nexport default ChangeAccountCurrency;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Tabs, ThemedScrollbars } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { CURRENCY_TYPE, isDesktop, isMobile } from '@deriv/shared';\nimport { WS } from 'Services';\nimport AddCryptoCurrency from './add-crypto-currency.jsx';\nimport AddCurrency from './add-currency.jsx';\nimport ChangeAccountCurrency from './change-account-currency.jsx';\nimport LoadingModal from './real-account-signup-loader.jsx';\nimport { observer, useStore } from '@deriv/stores';\nimport 'Sass/add-or-manage.scss';\nimport 'Sass/change-account.scss';\n\nconst AddOrManageAccounts = observer(props => {\n    const {\n        deposit_target,\n        is_add_crypto,\n        is_add_currency,\n        is_add_fiat,\n        is_loading,\n        onError,\n        onSuccessSetAccountCurrency,\n        setLoading,\n        onClose,\n    } = props;\n\n    const { client, modules, ui, traders_hub } = useStore();\n    const {\n        available_crypto_currencies,\n        can_change_fiat_currency,\n        current_currency_type,\n        has_fiat,\n        setAccountCurrency: setCurrency,\n        createCryptoAccount,\n        is_low_risk,\n        loginid,\n    } = client;\n    const { cashier } = modules;\n    const { show_eu_related_content } = traders_hub;\n    const { manage_real_account_tab_index, setShouldShowCancel, resetRealAccountSignupTarget } = ui;\n    const setIsDeposit = cashier.general_store.setIsDeposit;\n    const initial_active_index =\n        manage_real_account_tab_index ?? (has_fiat && available_crypto_currencies?.length === 0) ? 1 : 0;\n\n    const [active_index, setActiveIndex] = React.useState(initial_active_index);\n    const [form_error] = React.useState('');\n    const [form_value] = React.useState({ crypto: '', fiat: '' });\n\n    React.useEffect(() => {\n        const fetchMt5LoginList = async () => {\n            setLoading(true);\n            await WS.mt5LoginList();\n            setLoading(false);\n        };\n        fetchMt5LoginList();\n        return () => setShouldShowCancel(false);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const setActiveTabIndex = index => {\n        setActiveIndex(index);\n    };\n\n    const setCurrencyOrAddCryptoAccount = currency_object => {\n        setLoading(true);\n        Object.entries(currency_object).map(([key, value]) => {\n            if (key === CURRENCY_TYPE.FIAT) {\n                setCurrency(value)\n                    .then(response => {\n                        onSuccessSetAccountCurrency(\n                            response.passthrough.previous_currency,\n                            response.echo_req.set_account_currency,\n                            deposit_target\n                        );\n                    })\n                    .catch(error => {\n                        onError(error);\n                    })\n                    .finally(() => setLoading(false));\n            } else {\n                // Add Crypto Account\n                createCryptoAccount(value)\n                    .then(() => {\n                        onSuccessSetAccountCurrency('', value, deposit_target);\n                        resetRealAccountSignupTarget();\n                        setIsDeposit(true);\n                    })\n                    .catch(error => {\n                        onError(error);\n                    })\n                    .finally(() => setLoading(false));\n            }\n        });\n    };\n\n    const hasNoAvailableCrypto = () => {\n        return available_crypto_currencies.length === 0 && has_fiat;\n    };\n\n    if (is_loading) return <LoadingModal />;\n\n    const fiat_section = has_fiat && (\n        <div\n            className={classNames('change-currency', {\n                'account-wizard--disabled': !can_change_fiat_currency,\n            })}\n        >\n            <ChangeAccountCurrency\n                className='account-wizard__body'\n                onSubmit={setCurrencyOrAddCryptoAccount}\n                value={form_value}\n                form_error={form_error}\n                can_change_fiat_currency={can_change_fiat_currency}\n                current_currency_type={current_currency_type}\n                closeModal={onClose}\n            />\n        </div>\n    );\n\n    if (is_add_currency || is_add_crypto || is_add_fiat) {\n        return (\n            <AddCurrency\n                onSubmit={setCurrencyOrAddCryptoAccount}\n                value={form_value}\n                form_error={form_error}\n                should_show_crypto_only\n                hasNoAvailableCrypto={hasNoAvailableCrypto}\n                is_add_crypto={is_add_crypto}\n                is_add_fiat={is_add_fiat}\n                is_add_currency={is_add_currency}\n            />\n        );\n    }\n\n    const is_mf_active = loginid?.startsWith('MF');\n\n    return (\n        <ThemedScrollbars is_bypassed={isMobile()} autohide={false}>\n            {(show_eu_related_content && !is_low_risk && has_fiat) || is_mf_active ? (\n                fiat_section\n            ) : (\n                <Tabs\n                    active_index={active_index}\n                    className='account-wizard add-or-manage tabs--desktop'\n                    onTabItemClick={setActiveTabIndex}\n                    top\n                    header_fit_content={isDesktop()}\n                >\n                    <div label={localize('Cryptocurrencies')}>\n                        <div\n                            className={classNames('add-crypto-currency', {\n                                'account-wizard--disabled': hasNoAvailableCrypto(),\n                            })}\n                        >\n                            <AddCryptoCurrency\n                                className='account-wizard__body'\n                                onSubmit={setCurrencyOrAddCryptoAccount}\n                                value={form_value}\n                                form_error={form_error}\n                                should_show_crypto_only\n                                hasNoAvailableCrypto={hasNoAvailableCrypto}\n                            />\n                        </div>\n                    </div>\n                    <div label={localize('Fiat currencies')}>\n                        {has_fiat ? (\n                            fiat_section\n                        ) : (\n                            <AddCryptoCurrency\n                                className='account-wizard__body'\n                                onSubmit={setCurrencyOrAddCryptoAccount}\n                                value={form_value}\n                                form_error={form_error}\n                                should_show_fiat_only={true}\n                                hasNoAvailableCrypto={hasNoAvailableCrypto}\n                            />\n                        )}\n                    </div>\n                </Tabs>\n            )}\n        </ThemedScrollbars>\n    );\n});\n\nAddOrManageAccounts.propTypes = {\n    onClose: PropTypes.func,\n    onError: PropTypes.func,\n    onSuccessSetAccountCurrency: PropTypes.func,\n    is_loading: PropTypes.bool,\n    is_add_crypto: PropTypes.bool,\n    setLoading: PropTypes.func,\n    is_add_fiat: PropTypes.bool,\n    is_add_currency: PropTypes.bool,\n    deposit_target: PropTypes.string,\n};\n\nexport default AddOrManageAccounts;\n","import { Field, Formik } from 'formik';\nimport React from 'react';\nimport { FormSubmitButton, Loading, Text, ThemedScrollbars } from '@deriv/components';\nimport { usePaymentAgentList } from '@deriv/hooks';\nimport { localize } from '@deriv/translations';\nimport { reorderCurrencies, routes } from '@deriv/shared';\nimport { CurrencyRadioButtonGroup, CurrencyRadioButton } from '@deriv/account';\nimport CurrencyProvider from './choose-currency';\nimport { observer, useStore } from '@deriv/stores';\nimport './currency-selector.scss';\n\nconst CRYPTO_CURRENCY_TYPE = 'crypto';\n\nconst ChooseCurrency = observer(() => {\n    const { client, modules, ui } = useStore();\n    const {\n        account_list,\n        available_crypto_currencies,\n        currency: currency_title,\n        has_fiat,\n        upgradeable_currencies: legal_allowed_currencies,\n        switchAccount,\n    } = client;\n    const { cashier } = modules;\n    const { closeRealAccountSignup, continueRouteAfterChooseCrypto, openRealAccountSignup, setShouldShowCancel } = ui;\n    const deposit_target = cashier.general_store.deposit_target;\n    const should_show_all_available_currencies = cashier.general_store.should_show_all_available_currencies;\n    const setShouldShowAllAvailableCurrencies = cashier.general_store.setShouldShowAllAvailableCurrencies;\n    const [form_error] = React.useState('');\n    const [form_value] = React.useState({ crypto: '' });\n\n    const { data: all_payment_agent_list, isLoading: is_loading } = usePaymentAgentList();\n\n    React.useEffect(() => {\n        return () => setShouldShowAllAvailableCurrencies(false);\n    }, [setShouldShowAllAvailableCurrencies]);\n\n    const memoized_reordered_crypto_currencies = React.useMemo(() => {\n        const hasAllCryptos = () => {\n            return (\n                legal_allowed_currencies?.filter(\n                    currency =>\n                        currency.type === CRYPTO_CURRENCY_TYPE && !account_list.some(x => x.title === currency.value)\n                ).length === 0\n            );\n        };\n\n        const addNewCryptoAccount = () => {\n            openRealAccountSignup(deposit_target === routes.cashier_pa ? 'add_currency' : 'add_crypto');\n            setShouldShowCancel(true);\n        };\n        const allowed_currencies_payment_agent_availability = CurrencyProvider.currenciesPaymentAgentAvailability(\n            legal_allowed_currencies,\n            all_payment_agent_list,\n            account_list\n        );\n\n        const allowed_currencies_onramp_availability =\n            CurrencyProvider.currenciesOnRampAvailability(legal_allowed_currencies);\n\n        const getReorderCryptoCurrencies = () => {\n            let currencies_to_filter;\n\n            if (deposit_target === routes.cashier_onramp) {\n                currencies_to_filter = allowed_currencies_onramp_availability;\n            } else if (should_show_all_available_currencies) {\n                currencies_to_filter = allowed_currencies_payment_agent_availability;\n            } else {\n                currencies_to_filter = allowed_currencies_payment_agent_availability?.filter(\n                    currency =>\n                        currency.type === CRYPTO_CURRENCY_TYPE &&\n                        !available_crypto_currencies.some(x => x.value === currency.value)\n                );\n            }\n\n            const filtered_currencies = currencies_to_filter?.filter(currency =>\n                account_list.some(x => x.title === currency.value)\n            );\n\n            return reorderCurrencies(filtered_currencies, CRYPTO_CURRENCY_TYPE);\n        };\n\n        const shouldShowAddButton = () => {\n            switch (deposit_target) {\n                case routes.cashier_pa:\n                    return !has_fiat || !hasAllCryptos();\n                case routes.cashier_onramp: {\n                    const can_add_onramp_supported_crypto_account =\n                        legal_allowed_currencies.filter(\n                            currency =>\n                                currency.type === CRYPTO_CURRENCY_TYPE &&\n                                currency.platform.ramp.length > 0 &&\n                                !account_list.some(x => x.title === currency.value)\n                        ).length > 0;\n                    return can_add_onramp_supported_crypto_account;\n                }\n                default:\n                    return !hasAllCryptos();\n            }\n        };\n\n        const reordered_crypto_currencies = getReorderCryptoCurrencies();\n\n        if (shouldShowAddButton()) {\n            reordered_crypto_currencies.push({\n                value: 'plus',\n                name: deposit_target === routes.cashier_pa ? localize('Add a new') : localize('Add new'),\n                second_line_label:\n                    deposit_target === routes.cashier_pa ? localize('account') : localize('crypto account'),\n                icon: 'IcAddAccount',\n                onClick: () => addNewCryptoAccount(),\n                has_payment_agent: true,\n            });\n        }\n\n        return reordered_crypto_currencies;\n    }, [\n        account_list,\n        all_payment_agent_list,\n        available_crypto_currencies,\n        deposit_target,\n        has_fiat,\n        legal_allowed_currencies,\n        should_show_all_available_currencies,\n        openRealAccountSignup,\n        setShouldShowCancel,\n    ]);\n\n    const doSwitch = async value => {\n        const target_account = account_list.filter(account => account.title === value);\n        const loginid = target_account.map(x => x.loginid)[0];\n        if (loginid) await switchAccount(loginid);\n    };\n\n    const onSubmit = async obj => {\n        Object.entries(obj).map(([title, value]) => {\n            if (title) {\n                closeRealAccountSignup();\n                if (value !== currency_title) {\n                    doSwitch(value);\n                }\n                continueRouteAfterChooseCrypto();\n            }\n        });\n    };\n\n    return (\n        <Formik\n            initialValues={{\n                currency: form_value.currency,\n            }}\n            onSubmit={values => {\n                onSubmit(values);\n            }}\n        >\n            {({ handleSubmit, values, isSubmitting }) => (\n                <form onSubmit={handleSubmit}>\n                    <Text as='h1' color='prominent' align='center' weight='bold' className='add-crypto-currency__title'>\n                        {deposit_target === routes.cashier_pa\n                            ? localize('Choose an account or add a new one')\n                            : localize('Choose one of your accounts or add a new cryptocurrency account')}\n                    </Text>\n                    <ThemedScrollbars>\n                        {is_loading ? (\n                            <Loading is_fullscreen={false} className='currency-list__loading-wrapper' />\n                        ) : (\n                            <CurrencyRadioButtonGroup\n                                id='crypto_currency'\n                                className='currency-selector__radio-group currency-selector__radio-group--with-margin'\n                                item_count={memoized_reordered_crypto_currencies.length}\n                            >\n                                {memoized_reordered_crypto_currencies.map(currency => (\n                                    <Field\n                                        key={currency.value}\n                                        component={CurrencyRadioButton}\n                                        name='currency'\n                                        id={currency.value}\n                                        label={currency.name}\n                                        icon={currency.icon}\n                                        second_line_label={currency.second_line_label}\n                                        onClick={currency.onClick}\n                                        selected={\n                                            currency.is_disabled || deposit_target === routes.cashier_pa\n                                                ? !currency.has_payment_agent\n                                                : false\n                                        }\n                                    />\n                                ))}\n                            </CurrencyRadioButtonGroup>\n                        )}\n                    </ThemedScrollbars>\n                    <FormSubmitButton\n                        className='currency-selector__button'\n                        is_disabled={isSubmitting || !values.currency}\n                        label={localize('Continue')}\n                        is_absolute\n                        form_error={form_error}\n                    />\n                </form>\n            )}\n        </Formik>\n    );\n});\n\nexport default ChooseCurrency;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { useDevice } from '@deriv-com/ui';\nimport { Button, Div100vhContainer, Icon, Text } from '@deriv/components';\nimport { routes } from '@deriv/shared';\nimport { localize, Localize } from '@deriv/translations';\n\nconst FinishedAddCurrency = ({\n    current,\n    closeRealAccountSignup,\n    deposit_target,\n    redirectToLegacyPlatform,\n    deposit_real_account_signup_target,\n    history,\n    onSubmit,\n    setIsDeposit,\n}) => {\n    const { isDesktop } = useDevice();\n    const IconNextCurrency = () => <Icon icon={`IcCurrency-${current.toLowerCase()}`} height={120} width={90} />;\n    const IconWon = ({ className }) => <Icon className={className} icon='IcCheckmarkCircle' color='green' />;\n\n    const closeModalThenOpenCashier = () => {\n        closeRealAccountSignup();\n        history.push(deposit_target);\n        if (deposit_target === routes.cashier_deposit) {\n            setIsDeposit(true);\n        }\n        redirectToLegacyPlatform();\n    };\n\n    const onCancel = () => {\n        closeRealAccountSignup();\n        setIsDeposit(false);\n        redirectToLegacyPlatform();\n    };\n\n    return (\n        <React.Fragment>\n            {isDesktop && (\n                <div onClick={onCancel} className='finished-add-currency__close'>\n                    <Icon icon='IcCross' />\n                </div>\n            )}\n            <Div100vhContainer className='finished-add-currency__dialog' is_disabled={isDesktop} height_offset='40px'>\n                <div\n                    className={classNames('status-dialog__header', {\n                        'status-dialog__header--center': !isDesktop,\n                    })}\n                >\n                    <IconNextCurrency />\n                    <IconWon className='bottom-right-overlay' />\n                </div>\n                <div className={classNames('status-dialog__body', { 'status-dialog__body--no-grow': !isDesktop })}>\n                    <Text as='h2' align='center' className='status-dialog__message-header' weight='bold'>\n                        <Localize i18n_default_text='Your account is ready' />\n                    </Text>\n                    <Text as='p' align='center'>\n                        <Localize i18n_default_text='Fund your account to start trading.' />\n                    </Text>\n                </div>\n                <div className='finished-add-currency__footer'>\n                    <Button onClick={onCancel} text={localize('Maybe later')} secondary />\n                    <Button\n                        onClick={\n                            ['add_crypto', 'add_fiat', 'add_currency'].includes(deposit_real_account_signup_target)\n                                ? closeModalThenOpenCashier\n                                : onSubmit\n                        }\n                        text={localize('Deposit now')}\n                        primary\n                    />\n                </div>\n            </Div100vhContainer>\n        </React.Fragment>\n    );\n};\n\nexport default React.memo(FinishedAddCurrency);\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Button, Div100vhContainer, Icon, Text } from '@deriv/components';\nimport { getCurrencyDisplayCode, isDesktop, isMobile, routes } from '@deriv/shared';\nimport { localize, Localize } from '@deriv/translations';\n\nconst SuccessMessage = ({ prev, current }) =>\n    prev ? (\n        <Localize\n            i18n_default_text={\n                '<0>You have successfully changed your currency to {{currency}}.</0><0>Make a deposit now to start trading.</0>'\n            }\n            values={{\n                currency: getCurrencyDisplayCode(current),\n            }}\n            components={[\n                <Text\n                    as='p'\n                    align='center'\n                    className='status-dialog__message-text'\n                    color='general'\n                    size='xs'\n                    key={current}\n                />,\n            ]}\n        />\n    ) : (\n        <Localize\n            i18n_default_text={\n                '<0>You have added a {{currency}} account.</0><0> Make a deposit now to start trading.</0>'\n            }\n            values={{\n                currency: getCurrencyDisplayCode(current),\n            }}\n            components={[\n                <Text\n                    as='p'\n                    align='center'\n                    className='status-dialog__message-text'\n                    color='general'\n                    size='xs'\n                    key={current}\n                />,\n            ]}\n        />\n    );\n\nconst FinishedSetCurrency = ({\n    current,\n    closeRealAccountSignup,\n    deposit_target,\n    deposit_real_account_signup_target,\n    history,\n    onCancel,\n    onSubmit,\n    prev,\n    setIsDeposit,\n}) => {\n    const IconPrevCurrency = () =>\n        prev ? <Icon icon={`IcCurrency-${prev.toLowerCase()}`} height={120} width={90} /> : null;\n    const IconNextCurrency = () => <Icon icon={`IcCurrency-${current.toLowerCase()}`} height={120} width={90} />;\n    const IconArrow = () => (prev ? <Icon icon='IcArrowPointerRight' color='red' width={50} height={20} /> : null);\n\n    const IconWon = ({ className }) => <Icon className={className} icon='IcCheckmarkCircle' color='green' />;\n\n    const closeModalThenOpenCashier = () => {\n        closeRealAccountSignup();\n        history.push(deposit_target);\n        if (deposit_target === routes.cashier_deposit) {\n            setIsDeposit(true);\n        }\n    };\n\n    const closeModal = () => {\n        onCancel();\n        setIsDeposit(false);\n    };\n\n    return (\n        <Div100vhContainer className='status-dialog' is_disabled={isDesktop()} height_offset='40px'>\n            <div\n                className={classNames('status-dialog__header', {\n                    'status-dialog__header--center': isMobile(),\n                    'status-dialog__header--set-currency': prev,\n                })}\n            >\n                <IconPrevCurrency />\n                <IconArrow />\n                <IconNextCurrency />\n                <IconWon className='bottom-right-overlay' />\n            </div>\n            <div className={classNames('status-dialog__body', { 'status-dialog__body--no-grow': isMobile() })}>\n                <Text as='h2' align='center' className='status-dialog__message-header' weight='bold'>\n                    <Localize i18n_default_text='Success!' />\n                </Text>\n                <SuccessMessage prev={prev} current={current} />\n            </div>\n            <div className='status-dialog__footer'>\n                <Button onClick={closeModal} text={localize('Maybe later')} secondary />\n                <Button\n                    onClick={\n                        ['add_crypto', 'add_fiat', 'add_currency'].includes(deposit_real_account_signup_target)\n                            ? closeModalThenOpenCashier\n                            : onSubmit\n                    }\n                    text={localize('Deposit now')}\n                    primary\n                />\n            </div>\n        </Div100vhContainer>\n    );\n};\n\nexport default React.memo(FinishedSetCurrency);\n","import classNames from 'classnames';\nimport React from 'react';\nimport { localize } from '@deriv/translations';\nimport { currencySelectorConfig } from '@deriv/account';\nimport { website_name, generateValidationFunction } from '@deriv/shared';\nimport { Text } from '@deriv/components';\nimport CurrencySelector from '@deriv/account/src/Components/currency-selector';\nimport LoadingModal from './real-account-signup-loader.jsx';\nimport 'Sass/set-currency.scss';\nimport 'Sass/change-account.scss';\nimport { observer, useStore } from '@deriv/stores';\n\nconst SetCurrency = observer(({ setLoading, onSuccessSetAccountCurrency, onError, is_loading, ...props }) => {\n    const { client } = useStore();\n    const { available_crypto_currencies, has_fiat, landing_company_shortcode, setAccountCurrency } = client;\n    const form_error = React.useState('');\n    const form_value = React.useState({ currency: '' });\n\n    const setCurrency = (obj, setSubmitting) => {\n        setLoading(true);\n        const { currency } = obj;\n        if (currency) {\n            setAccountCurrency(currency)\n                .then(response => {\n                    setSubmitting(false);\n                    onSuccessSetAccountCurrency('', response.echo_req.set_account_currency);\n                })\n                .catch(error_message => {\n                    onError(error_message);\n                })\n                .finally(() => setLoading(false));\n        }\n    };\n\n    const updateValue = (index, value, setSubmitting) => {\n        setCurrency(value, setSubmitting);\n    };\n\n    const noCryptoAvailable = () => {\n        return available_crypto_currencies.length === 0 && has_fiat && props.currency;\n    };\n\n    if (is_loading) return <LoadingModal />;\n    return (\n        <div\n            className={classNames('set-currency-modal', {\n                'set-currency-modal--disabled': noCryptoAvailable(),\n            })}\n        >\n            {noCryptoAvailable() && (\n                <div className='set-currency-modal--disabled-message'>\n                    <p>\n                        {localize(\n                            'You already have an account for each of the cryptocurrencies available on {{deriv}}.',\n                            {\n                                deriv: website_name,\n                            }\n                        )}\n                    </p>\n                </div>\n            )}\n            <div className='set-currency-modal__heading-container'>\n                <Text\n                    as='p'\n                    size='xs'\n                    line_height='s'\n                    align='center'\n                    className='set-currency-modal__heading-container__main-heading'\n                >\n                    {localize(\n                        'You have an account that do not have currency assigned. Please choose a currency to trade with this account.'\n                    )}\n                </Text>\n                <Text\n                    as='p'\n                    weight='bold'\n                    align='center'\n                    className='set-currency-modal__heading-container__sub-heading'\n                >\n                    {localize('Select your preferred currency')}\n                </Text>\n            </div>\n            <CurrencySelector\n                className='account-wizard__body'\n                onSubmit={updateValue}\n                value={form_value}\n                form_error={form_error}\n                set_currency\n                validate={generateValidationFunction(landing_company_shortcode, currencySelectorConfig)}\n                {...props}\n            />\n        </div>\n    );\n});\n\nexport default SetCurrency;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport classNames from 'classnames';\nimport { isMobile, getSignupFormFields } from '@deriv/shared';\nimport { Button, Icon, StaticUrl, Text } from '@deriv/components';\nimport { localize, Localize } from '@deriv/translations';\nimport { Chat } from '@deriv/utils';\n\nconst Heading = ({ code }) => {\n    switch (code) {\n        case 'DuplicateAccount':\n            return (\n                <Text as='h1' align='center' weight='bold'>\n                    <Localize i18n_default_text='Account already exists' />\n                </Text>\n            );\n        case 'InvalidAccount':\n            return (\n                <Text as='h2' size={isMobile() ? 'xs' : 's'} align='center' weight='bold' line_height='xxl'>\n                    <Localize i18n_default_text='You can’t add another real account' />\n                </Text>\n            );\n        case 'InputValidationFailed':\n        case 'PoBoxInAddress':\n        case 'InvalidPhone':\n            return (\n                <Text as='h1' align='center' weight='bold' line_height='xxl'>\n                    <Localize i18n_default_text='Invalid inputs' />\n                </Text>\n            );\n\n        default:\n            return (\n                <Text as='h1' align='center' weight='bold'>\n                    <Localize i18n_default_text='Something’s not right' />\n                </Text>\n            );\n    }\n};\n\nconst Message = ({ code, message, details }) => {\n    if (code === 'PoBoxInAddress') {\n        details.error_details = { address_line_1: message };\n    } else if (code === 'InvalidPhone') {\n        details.error_details = { phone: message };\n    }\n    switch (code) {\n        case 'DuplicateAccount':\n            return (\n                <p>\n                    <Localize\n                        i18n_default_text='Your details match an existing account. If you need help, contact us via <0>live chat</0>.'\n                        components={[<span className='chat-inline' key={0} onClick={Chat.open} />]}\n                    />\n                </p>\n            );\n        case 'InvalidAccount':\n            return (\n                <Text size={isMobile() ? 'xxs' : 'xs'} align='center'>\n                    {message}\n                </Text>\n            );\n        case 'InputValidationFailed':\n        case 'PoBoxInAddress':\n        case 'InvalidPhone':\n            return (\n                <div className='input_validation_failed'>\n                    <Text align='center' weight='normal' line_height='xxl'>\n                        <Localize i18n_default_text='We don’t accept the following inputs for:' />\n                    </Text>\n                    {Object.keys(details?.error_details).map(item => (\n                        <div key={item} className='invalid_fields_input'>\n                            <Text size='xs' weight='bold'>\n                                {getSignupFormFields()[item]}\n                            </Text>\n                            <Text size='xs' weight='bold'>\n                                {' : '}\n                            </Text>\n                            <Text size='xs'>{details[item]}</Text>\n                        </div>\n                    ))}\n                </div>\n            );\n\n        default:\n            return <p>{message}</p>;\n    }\n};\n\nconst TryAgain = ({ text, onConfirm, ...rest }) => (\n    <Button primary onClick={onConfirm} large {...rest}>\n        {text}\n    </Button>\n);\n\nconst ErrorCTA = ({ code, onConfirm }) => {\n    switch (code) {\n        case 'DuplicateCurrency':\n        case 'CurrencyTypeNotAllowed':\n            return <TryAgain text={localize('Try a different currency')} onConfirm={onConfirm} />;\n        case 'DuplicateAccount':\n            return <TryAgain text={localize('Go to live chat')} onConfirm={() => Chat.open()} />;\n        case 'InputValidationFailed':\n        case 'PoBoxInAddress':\n        case 'InvalidPhone':\n            return <TryAgain text={localize('Let’s try again')} onConfirm={onConfirm} />;\n        case 'InvalidAccount':\n            return <TryAgain text={localize('OK')} onConfirm={onConfirm} />;\n\n        default:\n            return (\n                <StaticUrl\n                    href={`help-centre/${code === 'InvalidAccount' ? 'account#who-can-open-an-account' : ''}`}\n                    type='button'\n                    className='dc-btn dc-btn--primary'\n                >\n                    <Text weight='bold' color='white' size='xxs'>\n                        <Localize i18n_default_text='OK' />\n                    </Text>\n                </StaticUrl>\n            );\n    }\n};\n\nconst SignupErrorContent = ({ message, code, onConfirm, className, error_field = {} }) => {\n    const is_invalid_field_error = ['InputValidationFailed', 'PoBoxInAddress', 'InvalidPhone'].includes(code);\n    const getIconSize = () => {\n        if (is_invalid_field_error) return '64';\n        else if (code === 'InvalidAccount') return '96';\n        return '115';\n    };\n    return (\n        <div\n            className={classNames('account-wizard--error', {\n                [`account-wizard--error__${className}`]: className,\n            })}\n        >\n            <Icon icon={is_invalid_field_error ? 'IcInvalidError' : 'IcAccountError'} size={getIconSize()} />\n            <Heading code={code} />\n            <Message code={code} message={message} details={error_field} />\n            <div className='account-wizard--error__cta'>\n                <ErrorCTA code={code} onConfirm={onConfirm} />\n            </div>\n        </div>\n    );\n};\n\nSignupErrorContent.propTypes = {\n    code: PropTypes.string,\n    error_field: PropTypes.object,\n    message: PropTypes.string,\n    onConfirm: PropTypes.func,\n    className: PropTypes.string,\n};\n\nexport default SignupErrorContent;\n","import React from 'react';\nimport { Text } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\n\nexport const DialogHeading = () => (\n    <Text as='h2' align='center' className='status-dialog__message-header' weight='bold'>\n        <Localize i18n_default_text='Your account is ready' />\n    </Text>\n);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Text } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport { EXPERIAN } from './constants';\n\n/**\n *\n * @param {String} landing_company_shortcode\n * @param {EXPERIAN} status\n */\nexport const DialogMessage = ({ is_fully_authenticated, landing_company_shortcode, status = EXPERIAN.SUCCESS }) => {\n    let message = '';\n    if (landing_company_shortcode === 'maltainvest') {\n        if (is_fully_authenticated) {\n            message = [\n                <Localize key={0} i18n_default_text='You have added a Deriv Financial account.' />,\n                <Localize key={1} i18n_default_text='Make a deposit now to start trading.' />,\n            ];\n        } else {\n            message = (\n                <Localize i18n_default_text='We need proof of your identity and address before you can start trading.' />\n            );\n        }\n    } else {\n        switch (status) {\n            case EXPERIAN.WARN:\n                message = <Localize i18n_default_text='To get trading, please confirm where you live.' />;\n                break;\n            case EXPERIAN.DANGER:\n                message = (\n                    <Localize i18n_default_text='To get trading, please confirm who you are, and where you live.' />\n                );\n                break;\n            case EXPERIAN.PENDING:\n                message = (\n                    <Localize i18n_default_text=\"You'll be able to get trading as soon as verification is complete.\" />\n                );\n                break;\n            default:\n                message = <Localize i18n_default_text='Fund your account to start trading.' />;\n        }\n    }\n\n    return Array.isArray(message) ? (\n        <>\n            {message.map((text, index) => (\n                <Text\n                    key={index}\n                    as='p'\n                    align='center'\n                    className='status-dialog__message-text'\n                    color='general'\n                    size='xs'\n                >\n                    {text}\n                </Text>\n            ))}\n        </>\n    ) : (\n        <Text as='p' align='center' className='status-dialog__message-text' color='general' size='xs'>\n            {message}\n        </Text>\n    );\n};\n\nDialogMessage.propTypes = {\n    is_fully_authenticated: PropTypes.bool,\n    landing_company_shortcode: PropTypes.string,\n    status: PropTypes.number,\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Button } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { EXPERIAN } from './constants';\n\nconst getActionButton = ({\n    landing_company_shortcode,\n    is_fully_authenticated,\n    closeModalAndOpenCashier,\n    closeModalAndOpenPOI,\n}) => {\n    switch (landing_company_shortcode) {\n        case 'maltainvest':\n            if (is_fully_authenticated) {\n                return {\n                    label: localize('Deposit'),\n                    action: closeModalAndOpenCashier,\n                };\n            }\n            return {\n                label: localize('Submit proof'),\n                action: closeModalAndOpenPOI,\n            };\n        case 'svg':\n        default:\n            return {\n                label: localize('Deposit'),\n                action: closeModalAndOpenCashier,\n            };\n    }\n};\nconst DialogPrimaryButton = ({\n    status,\n    landing_company_shortcode,\n    closeModal,\n    closeModalAndOpenCashier,\n    closeModalAndOpenPOI,\n    closeModalAndOpenPOA,\n    is_fully_authenticated,\n}) => {\n    // Check if the button is necessary\n    // Fetch proper action from store based on status + landing_company_shortcode\n    const { label, action } = getActionButton({\n        status,\n        landing_company_shortcode,\n        is_fully_authenticated,\n        closeModal,\n        closeModalAndOpenCashier,\n        closeModalAndOpenPOI,\n        closeModalAndOpenPOA,\n    });\n\n    return <Button primary text={label} onClick={action} />;\n};\nconst DialogDismissButton = ({ closeModal, is_bypassed }) => {\n    if (is_bypassed) return null;\n\n    return <Button secondary text={localize('Maybe later')} onClick={closeModal} />;\n};\n\nexport const DialogButtons = ({\n    status,\n    landing_company_shortcode,\n    is_fully_authenticated,\n    closeModal,\n    closeModalAndOpenCashier,\n    closeModalAndOpenPOA,\n    closeModalAndOpenPOI,\n}) => {\n    return (\n        <div className='status-dialog__footer'>\n            <DialogDismissButton closeModal={closeModal} is_bypassed={status === EXPERIAN.PENDING} />\n            <DialogPrimaryButton\n                status={status}\n                landing_company_shortcode={landing_company_shortcode}\n                closeModal={closeModal}\n                closeModalAndOpenCashier={closeModalAndOpenCashier}\n                closeModalAndOpenPOI={closeModalAndOpenPOI}\n                closeModalAndOpenPOA={closeModalAndOpenPOA}\n                is_fully_authenticated={is_fully_authenticated}\n            />\n        </div>\n    );\n};\n\nDialogButtons.propTypes = {\n    status: PropTypes.number,\n    landing_company_shortcode: PropTypes.string,\n    is_fully_authenticated: PropTypes.bool,\n    closeModal: PropTypes.func,\n    closeModalAndOpenCashier: PropTypes.func,\n    closeModalAndOpenPOA: PropTypes.func,\n    closeModalAndOpenPOI: PropTypes.func,\n};\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { useDevice } from '@deriv-com/ui';\nimport { Div100vhContainer, Icon } from '@deriv/components';\nimport { routes } from '@deriv/shared';\nimport { EXPERIAN, getExperianResult } from './helpers/constants';\nimport { DialogHeading } from './helpers/dialog-heading.jsx';\nimport { DialogMessage } from './helpers/dialog-message.jsx';\nimport { DialogButtons } from './helpers/dialog-buttons.jsx';\nimport { observer, useStore } from '@deriv/stores';\n\nconst MainIcon = ({ currency }) => <Icon icon={`IcCurrency-${currency.toLowerCase()}`} size={120} />;\nconst Checkmark = ({ className }) => <Icon className={className} icon='IcCheckmarkCircle' color='green' size={24} />;\nconst Warning = ({ className }) => <Icon className={className} icon='IcAlertDanger' size={24} />;\nconst Danger = ({ className }) => <Icon className={className} icon='IcCrossCircle' size={24} color='red' />;\nconst CloseIcon = ({ closeModal }) => (\n    <div onClick={closeModal} className='status-dialog__close'>\n        <Icon icon='IcCross' />\n    </div>\n);\n\nconst StatusDialogContainer = observer(({ closeModal, currency, history, icon_size }) => {\n    const { isDesktop } = useDevice();\n    const { client } = useStore();\n    const { landing_company_shortcode, is_fully_authenticated } = client;\n    const closeModalAndOpenCashier = () => {\n        closeModal();\n        history.push(routes.cashier_deposit);\n    };\n\n    const closeModalAndOpenPOI = () => {\n        closeModal();\n        history.push(routes.proof_of_identity);\n    };\n\n    const closeModalAndOpenPOA = () => {\n        closeModal();\n        history.push(routes.proof_of_address);\n    };\n\n    /**\n     * Get the status for the current account\n     *\n     * @readonly\n     * @return {EXPERIAN} status\n     */\n    const getStatus = () =>\n        getExperianResult({\n            landing_company_shortcode,\n        });\n\n    return (\n        <Div100vhContainer className='status-dialog' is_disabled={isDesktop} height_offset='40px'>\n            {isDesktop && <CloseIcon closeModal={closeModal} />}\n            <div\n                className={classNames('status-dialog__header', {\n                    'status-dialog__header--large': icon_size === 'large',\n                    'status-dialog__header--xlarge': icon_size === 'xlarge',\n                })}\n            >\n                <MainIcon currency={currency} />\n                {getStatus() === EXPERIAN.SUCCESS && <Checkmark className='bottom-right-overlay' />}\n                {getStatus() === EXPERIAN.WARN && <Warning className='bottom-right-overlay' />}\n                {getStatus() === EXPERIAN.DANGER && <Danger className='bottom-right-overlay' />}\n            </div>\n            <div\n                className={classNames('status-dialog__body', {\n                    'status-dialog__body--no-grow': !isDesktop,\n                })}\n            >\n                <DialogHeading />\n                <DialogMessage\n                    is_fully_authenticated={is_fully_authenticated}\n                    landing_company_shortcode={landing_company_shortcode}\n                    status={getStatus()}\n                />\n            </div>\n            <DialogButtons\n                closeModal={closeModal}\n                closeModalAndOpenPOI={closeModalAndOpenPOI}\n                closeModalAndOpenPOA={closeModalAndOpenPOA}\n                closeModalAndOpenCashier={closeModalAndOpenCashier}\n                is_fully_authenticated={is_fully_authenticated}\n                landing_company_shortcode={landing_company_shortcode}\n                status={getStatus()}\n            />\n        </Div100vhContainer>\n    );\n});\n\nStatusDialogContainer.defaultProps = {\n    icon_size: 'large',\n};\n\nStatusDialogContainer.propTypes = {\n    closeModal: PropTypes.func,\n    currency: PropTypes.string,\n    history: PropTypes.object,\n    icon: PropTypes.object,\n    icon_size: PropTypes.string,\n};\n\nexport default withRouter(StatusDialogContainer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { useDevice } from '@deriv-com/ui';\nimport { localize, Localize } from '@deriv/translations';\nimport { Div100vhContainer, Icon, Button, Text } from '@deriv/components';\nimport { observer, useStore } from '@deriv/stores';\nimport { EXPERIAN, getExperianResult } from './helpers/constants';\nimport './new-status-dialog-container.scss';\n\nconst StatusIcon = ({ icon, color }) => (\n    <Icon className='status-container__body-status-icon' icon={icon} color={color} size={32} />\n);\n\nconst NewStatusDialogContainer = observer(({ closeModal, currency }) => {\n    const { isDesktop } = useDevice();\n    const { client, ui } = useStore();\n    const { landing_company_shortcode } = client;\n    const { setShouldShowOneTimeDepositModal } = ui;\n\n    const onOpenDepositModal = () => {\n        closeModal();\n        setShouldShowOneTimeDepositModal(true);\n    };\n\n    /**\n     * Get the status for the current account\n     *\n     * @readonly\n     * @return {EXPERIAN} status\n     */\n    const getStatus = () =>\n        getExperianResult({\n            landing_company_shortcode,\n        });\n\n    return (\n        <Div100vhContainer className='status-container' is_disabled={isDesktop} height_offset='40px'>\n            {isDesktop && (\n                <div onClick={closeModal} className='status-container__header'>\n                    <Icon icon='IcCross' />\n                </div>\n            )}\n\n            <div className='status-container__body'>\n                <div className='status-container__body-icon'>\n                    <Icon icon={`IcCurrency-${currency.toLowerCase()}`} size={96} />\n                    {getStatus() === EXPERIAN.SUCCESS && <StatusIcon icon='IcCheckmarkCircle' color='green' />}\n                    {getStatus() === EXPERIAN.WARN && <StatusIcon icon='IcAlertDanger' />}\n                    {getStatus() === EXPERIAN.DANGER && <StatusIcon icon='IcCrossCircle' color='red' />}\n                </div>\n\n                <Text\n                    className='status-container__body-text'\n                    as='h2'\n                    align='center'\n                    weight='bold'\n                    size='s'\n                    line_height='m'\n                >\n                    <Localize i18n_default_text='Deposit now to start trading' />\n                </Text>\n\n                <Text as='p' align='center' size='xs' line_height='sm'>\n                    <Localize i18n_default_text='Your {{ currency }} account is ready.' values={{ currency }} />\n                </Text>\n            </div>\n\n            <div className='status-container__footer'>\n                {getStatus() !== EXPERIAN.PENDING && (\n                    <Button secondary text={localize('Maybe later')} wide={!isDesktop} onClick={closeModal} />\n                )}\n                <Button\n                    className='status-container__button'\n                    primary\n                    text={localize('Deposit')}\n                    onClick={onOpenDepositModal}\n                    wide={!isDesktop}\n                />\n            </div>\n        </Div100vhContainer>\n    );\n});\n\nNewStatusDialogContainer.propTypes = {\n    closeModal: PropTypes.func,\n    currency: PropTypes.string,\n    closeModalAndOpenDeposit: PropTypes.func,\n};\n\nexport default withRouter(NewStatusDialogContainer);\n","/* eslint-disable react/display-name */\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { useDevice } from '@deriv-com/ui';\nimport { RiskToleranceWarningModal, TestWarningModal } from '@deriv/account';\nimport { Button, MobileDialog, Modal, Text, UILoader } from '@deriv/components';\nimport { WS, moduleLoader, routes } from '@deriv/shared';\nimport { Localize, localize } from '@deriv/translations';\nimport { observer, useStore } from '@deriv/stores';\nimport AddCurrency from './add-currency.jsx';\nimport AddOrManageAccounts from './add-or-manage-accounts.jsx';\nimport ChooseCurrency from './choose-currency.jsx';\nimport FinishedAddCurrency from './finished-add-currency.jsx';\nimport FinishedSetCurrency from './finished-set-currency.jsx';\nimport SetCurrency from './set-currency.jsx';\nimport SignupErrorContent from './signup-error-content.jsx';\nimport StatusDialogContainer from './status-dialog-container.jsx';\nimport NewStatusDialogContainer from './new-status-dialog-container.jsx';\nimport { Analytics } from '@deriv-com/analytics';\nimport 'Sass/account-wizard.scss';\n\nconst AccountWizard = React.lazy(() =>\n    moduleLoader(() => import(/* webpackChunkName: \"account-wizard-modal\" */ './account-wizard.jsx'))\n);\n\nconst modal_pages_indices = {\n    account_wizard: 0,\n    add_or_manage_account: 1,\n    finished_set_currency: 2,\n    status_dialog: 3,\n    new_status_dialog: 11,\n    set_currency: 4,\n    signup_error: 5,\n    choose_crypto_currency: 6,\n    add_currency: 7,\n    finished_add_currency: 8,\n    restricted_country_signup_error: 9,\n    invalid_input_error: 10,\n};\nlet active_modal_index_no = 0;\n\nconst WizardHeading = ({ currency, real_account_signup_target }) => {\n    const maltainvest_signup = real_account_signup_target === 'maltainvest';\n    const deposit_cash_signup = real_account_signup_target === 'deposit_cash';\n\n    if ((!maltainvest_signup && !currency) || active_modal_index_no === modal_pages_indices.set_currency) {\n        return <Localize i18n_default_text='Set a currency for your real account' />;\n    }\n\n    if (deposit_cash_signup) {\n        return <Localize i18n_default_text='Add a Deriv Gaming account' />;\n    }\n\n    switch (real_account_signup_target) {\n        case 'maltainvest':\n            return <Localize i18n_default_text='Setup your account' />;\n        default:\n            return <Localize i18n_default_text='Add a Deriv account' />;\n    }\n};\n\nconst RealAccountSignup = observer(({ history, state_index, is_trading_experience_incomplete }) => {\n    const { isDesktop } = useDevice();\n    const { ui, client, traders_hub, modules } = useStore();\n    const {\n        available_crypto_currencies,\n        currency,\n        fetchAccountSettings,\n        has_fiat,\n        has_active_real_account: has_real_account,\n        is_from_restricted_country,\n        realAccountSignup,\n        redirectToLegacyPlatform,\n    } = client;\n    const {\n        closeRealAccountSignup,\n        deposit_real_account_signup_target,\n        is_real_acc_signup_on,\n        real_account_signup_target,\n        setIsTradingAssessmentForNewUserEnabled,\n        setIsClosingCreateRealAccountModal,\n        setRealAccountSignupParams: setParams,\n        setShouldShowAppropriatenessWarningModal,\n        setShouldShowRiskWarningModal,\n        should_show_appropriateness_warning_modal,\n        should_show_risk_warning_modal,\n        setShouldShowOneTimeDepositModal,\n        toggleAccountSuccessModal,\n        real_account_signup: state_value,\n        is_trading_assessment_for_new_user_enabled,\n    } = ui;\n    const { show_eu_related_content } = traders_hub;\n    const { deposit_target, setDepositTarget } = modules.cashier.general_store;\n    const setIsDeposit = modules.cashier.general_store.setIsDeposit;\n    const should_show_all_available_currencies = modules.cashier.general_store.should_show_all_available_currencies;\n    const [current_action, setCurrentAction] = React.useState(null);\n    const [is_loading, setIsLoading] = React.useState(false);\n    const [error, setError] = React.useState(null);\n    const [is_risk_warning_visible, setIsRiskWarningVisible] = React.useState(false);\n    const [real_account_form_data, setRealAccountFormData] = React.useState({});\n    const [risk_warning_title, setRiskWarningTitle] = React.useState('');\n    const [modal_content] = React.useState([\n        {\n            action: 'signup',\n            body: local_props => (\n                <React.Suspense fallback={<UILoader />}>\n                    <AccountWizard\n                        setIsRiskWarningVisible={setIsRiskWarningVisible}\n                        onFinishSuccess={showStatusDialog}\n                        onNewFinishSuccess={showNewStatusDialog}\n                        onOpenDepositModal={closeModalthenOpenDepositModal}\n                        onOpenWelcomeModal={closeModalthenOpenWelcomeModal}\n                        is_loading={local_props.is_loading}\n                        setLoading={setLoading}\n                        onError={showErrorModal}\n                        onClose={closeModal}\n                        realAccountSignup={realAccountSignup}\n                        setRealAccountFormData={setRealAccountFormData}\n                    />\n                </React.Suspense>\n            ),\n            title: WizardHeading,\n        },\n        {\n            action: 'multi',\n            body: local_props => (\n                <AddOrManageAccounts\n                    onSuccessSetAccountCurrency={showSetCurrencySuccess}\n                    is_loading={local_props.is_loading}\n                    setLoading={setLoading}\n                    onError={showErrorModal}\n                    is_add_crypto={local_props.real_account_signup_target === 'add_crypto'}\n                    is_add_fiat={local_props.real_account_signup_target === 'add_fiat'}\n                    is_add_currency={local_props.real_account_signup_target === 'add_currency'}\n                    deposit_target={local_props.deposit_target}\n                    onClose={closeModal}\n                />\n            ),\n            title: local_props => {\n                if (local_props.real_account_signup_target === 'add_crypto') {\n                    return localize('Create a cryptocurrency account');\n                } else if (local_props.real_account_signup_target === 'add_fiat') {\n                    return localize('Add a Deriv real account');\n                } else if (local_props.real_account_signup_target === 'add_currency') {\n                    return localize('Create a new account');\n                } else if (local_props.has_fiat && local_props.available_crypto_currencies?.length === 0) {\n                    return localize('Manage account');\n                }\n                return localize('Add or manage account');\n            },\n        },\n        {\n            body: local_props => (\n                <FinishedSetCurrency\n                    prev={local_props.state_value.previous_currency}\n                    current={local_props.state_value.current_currency}\n                    onCancel={closeSetCurrencySuccessModal}\n                    onSubmit={closeModalThenOpenCashier}\n                    deposit_real_account_signup_target={local_props.deposit_real_account_signup_target}\n                    deposit_target={local_props.deposit_target}\n                    closeRealAccountSignup={closeRealAccountSignup}\n                    setIsDeposit={setIsDeposit}\n                    history={history}\n                />\n            ),\n            title: local_props =>\n                local_props.has_fiat && local_props.available_crypto_currencies?.length === 0\n                    ? localize('Manage account')\n                    : localize('Add or manage account'),\n        },\n        {\n            body: local_props => (\n                <StatusDialogContainer\n                    currency={local_props.state_value.currency}\n                    closeModal={closeSetCurrencySuccessModal}\n                />\n            ),\n        },\n        {\n            body: local_props => (\n                <SetCurrency\n                    is_loading={local_props.is_loading}\n                    setLoading={setLoading}\n                    onError={showErrorModal}\n                    onClose={closeModal}\n                    onSuccessSetAccountCurrency={showSetCurrencySuccess}\n                />\n            ),\n            title: WizardHeading,\n        },\n        {\n            body: local_props => (\n                <SignupErrorContent\n                    message={\n                        local_props.state_value.error_message || local_props.state_value.error_code?.message_to_client\n                    }\n                    code={local_props.state_value.error_code}\n                    onConfirm={() => onErrorConfirm(local_props.state_value.error_code)}\n                />\n            ),\n            title: local_props => {\n                if (local_props?.real_account_signup_target === 'add_crypto') {\n                    return localize('Create a cryptocurrency account');\n                } else if (local_props?.real_account_signup_target === 'add_fiat') {\n                    return localize('Add a Deriv real account');\n                } else if (local_props?.real_account_signup_target === 'add_currency') {\n                    return localize('Create a new account');\n                } else if (local_props?.has_fiat && local_props?.available_crypto_currencies?.length === 0) {\n                    return localize('Manage account');\n                } else if (signup_error) {\n                    return null;\n                }\n                return localize('Add or manage account');\n            },\n        },\n        {\n            body: () => <ChooseCurrency className='account-wizard__body' onError={showErrorModal} />,\n            title: local_props =>\n                local_props.should_show_all_available_currencies\n                    ? localize('Choose an account')\n                    : localize('Choose a cryptocurrency account'),\n        },\n        {\n            body: () => <AddCurrency className='account-wizard__body' onError={showErrorModal} />,\n            title: () => localize('Create a new account'),\n        },\n        {\n            body: local_props => (\n                <FinishedAddCurrency\n                    redirectToLegacyPlatform={redirectToLegacyPlatform}\n                    prev={local_props.state_value.previous_currency}\n                    current={local_props.state_value.current_currency}\n                    onSubmit={closeModalThenOpenCashier}\n                    deposit_real_account_signup_target={local_props.deposit_real_account_signup_target}\n                    deposit_target={local_props.deposit_target}\n                    closeRealAccountSignup={closeRealAccountSignup}\n                    setIsDeposit={setIsDeposit}\n                    history={history}\n                />\n            ),\n        },\n        {\n            body: local_props => (\n                <SignupErrorContent\n                    message={\n                        local_props.state_value.error_message || local_props.state_value.error_code?.message_to_client\n                    }\n                    code={local_props.state_value.error_code}\n                    onConfirm={closeRealAccountSignup}\n                    className='restricted-country-error'\n                />\n            ),\n        },\n        {\n            body: local_props => (\n                <SignupErrorContent\n                    message={\n                        local_props.state_value.error_message || local_props.state_value.error_code?.message_to_client\n                    }\n                    code={local_props.state_value.error_code}\n                    onConfirm={onErrorConfirm}\n                    error_field={local_props.state_value}\n                    className='invalid-input-error'\n                />\n            ),\n        },\n        {\n            body: local_props => (\n                <NewStatusDialogContainer\n                    currency={local_props.state_value.currency}\n                    closeModal={closeSetCurrencySuccessModal}\n                />\n            ),\n        },\n    ]);\n\n    const [assessment_decline, setAssessmentDecline] = React.useState(false);\n\n    const trackEvent = React.useCallback(\n        payload => {\n            if (real_account_signup_target === 'maltainvest') return;\n\n            Analytics.trackEvent('ce_real_account_signup_form', {\n                form_source: document.referrer,\n                form_name: 'real_account_signup_form',\n                landing_company: real_account_signup_target,\n                ...payload,\n            });\n        },\n        [real_account_signup_target]\n    );\n\n    React.useEffect(() => {\n        if (is_real_acc_signup_on && real_account_signup_target === 'svg') {\n            trackEvent({ action: 'open' });\n        }\n    }, [is_real_acc_signup_on, real_account_signup_target, trackEvent]);\n\n    const getModalHeight = () => {\n        if (is_from_restricted_country) return '304px';\n        else if ([invalid_input_error, status_dialog, new_status_dialog, signup_error].includes(getActiveModalIndex()))\n            return 'auto';\n        if (!currency || getActiveModalIndex() === modal_pages_indices.set_currency) return '688px'; // Set currency modal\n        if (has_real_account && currency) {\n            if (show_eu_related_content && getActiveModalIndex() === modal_pages_indices.add_or_manage_account) {\n                // Manage account\n                return '420px'; // Since crypto is disabled for EU clients, lower the height of modal\n            }\n            if (\n                [modal_pages_indices.finished_set_currency, modal_pages_indices.finished_add_currency].includes(\n                    getActiveModalIndex()\n                )\n            ) {\n                return 'auto';\n            }\n        }\n        return '740px'; // Account wizard modal\n    };\n    const getModalWidth = () => {\n        if (\n            is_from_restricted_country ||\n            [modal_pages_indices.invalid_input_error, modal_pages_indices.signup_error].includes(getActiveModalIndex())\n        )\n            return '440px';\n        return !has_close_icon ? 'auto' : '955px';\n    };\n\n    const closeModalthenOpenDepositModal = () => {\n        closeRealAccountSignup();\n        if (!client.is_mf_account) {\n            setShouldShowOneTimeDepositModal(true);\n        } else {\n            toggleAccountSuccessModal();\n        }\n    };\n\n    const showStatusDialog = curr => {\n        setParams({\n            active_modal_index: modal_pages_indices.status_dialog,\n            currency: curr,\n        });\n    };\n\n    const showNewStatusDialog = curr => {\n        setParams({\n            active_modal_index: modal_pages_indices.new_status_dialog,\n            currency: curr,\n        });\n    };\n\n    const closeModalthenOpenWelcomeModal = curr => {\n        closeRealAccountSignup();\n        setParams({\n            currency: curr,\n        });\n    };\n\n    const closeModalThenOpenCashier = () => {\n        closeRealAccountSignup();\n        history.push(routes.cashier_deposit);\n    };\n\n    const showSetCurrencySuccess = (previous_currency, current_currency, target) => {\n        setParams({\n            previous_currency,\n            current_currency,\n            active_modal_index: target\n                ? modal_pages_indices.finished_add_currency\n                : modal_pages_indices.finished_set_currency,\n        });\n    };\n\n    const setLoading = is_loading_val => {\n        setIsLoading(is_loading_val);\n    };\n\n    const cacheFormValues = payload => {\n        localStorage.setItem(\n            'real_account_signup_wizard',\n            JSON.stringify(\n                payload.map(item => {\n                    if (typeof item.form_value === 'object') {\n                        return item.form_value;\n                    }\n                    return false;\n                })\n            )\n        );\n    };\n\n    const showErrorModal = (err, payload) => {\n        if (payload) {\n            cacheFormValues(payload);\n        }\n\n        setCurrentAction(modal_content[getActiveModalIndex()]?.action);\n        setError(err);\n\n        trackEvent({\n            action: 'other_error',\n            real_signup_error_message: err,\n        });\n    };\n\n    React.useEffect(() => {\n        setRiskWarningTitle(localize('Risk Tolerance Warning'));\n        return () => setIsTradingAssessmentForNewUserEnabled(is_trading_experience_incomplete);\n    }, []);\n\n    // setCurrentAction callback useEffect to set error details\n    React.useEffect(() => {\n        if (!error) return;\n        setParams({\n            active_modal_index: ['InputValidationFailed', 'PoBoxInAddress', 'InvalidPhone'].includes(error.code)\n                ? modal_pages_indices.invalid_input_error\n                : modal_pages_indices.signup_error,\n            error_message: error.message,\n            error_code: error.code,\n            ...(error.code === 'InputValidationFailed' && { error_details: error.details }),\n        });\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [error]);\n\n    React.useEffect(() => {\n        if (!is_from_restricted_country) return;\n        setParams({\n            active_modal_index: modal_pages_indices.restricted_country_signup_error,\n            error_message: localize('Adding more real accounts has been restricted for your country.'),\n            error_code: 'InvalidAccount',\n        });\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [is_from_restricted_country, is_real_acc_signup_on]);\n\n    const closeSetCurrencySuccessModal = e => {\n        // Do not close modal on external link and popover click event\n        if (\n            e?.target.getAttribute('rel') === 'noopener noreferrer' ||\n            e?.target.closest('.redirect-notice') ||\n            e?.target.closest('.dc-popover__bubble')\n        ) {\n            return;\n        }\n        if (\n            getActiveModalIndex() !== modal_pages_indices.status_dialog ||\n            getActiveModalIndex() !== modal_pages_indices.new_status_dialog\n        ) {\n            sessionStorage.removeItem('post_real_account_signup');\n            localStorage.removeItem('real_account_signup_wizard');\n        }\n        closeRealAccountSignup();\n    };\n\n    const closeModal = e => {\n        // Do not close modal on external link and popover click event\n        if (\n            !e ||\n            e?.target.getAttribute('rel') === 'noopener noreferrer' ||\n            e?.target.closest('.redirect-notice') ||\n            e?.target.closest('.dc-popover__bubble')\n        ) {\n            return;\n        }\n        if (\n            getActiveModalIndex() !== modal_pages_indices.status_dialog ||\n            getActiveModalIndex() !== modal_pages_indices.new_status_dialog\n        ) {\n            sessionStorage.removeItem('post_real_account_signup');\n            localStorage.removeItem('real_account_signup_wizard');\n        }\n\n        if (deposit_target === routes.cashier_onramp) setDepositTarget('');\n\n        if (modal_content[getActiveModalIndex()].action === 'signup') {\n            setIsClosingCreateRealAccountModal(true);\n\n            return;\n        }\n        closeRealAccountSignup();\n        redirectToLegacyPlatform();\n    };\n\n    const onErrorConfirm = err_code => {\n        const addOrManageAccountErrorType = ['CurrencyTypeNotAllowed', 'DuplicateCurrency'];\n        setLoading(true);\n        setParams({\n            active_modal_index:\n                current_action === 'multi' || addOrManageAccountErrorType.includes(err_code)\n                    ? modal_pages_indices.add_or_manage_account\n                    : modal_pages_indices.account_wizard,\n        });\n    };\n\n    const getIsManageTarget = () => {\n        return real_account_signup_target === 'manage';\n    };\n\n    const getActiveModalIndex = () => {\n        if (real_account_signup_target === 'choose') {\n            active_modal_index_no = modal_pages_indices.choose_crypto_currency;\n            return active_modal_index_no;\n        }\n        if (['add_crypto', 'add_fiat', 'add_currency'].includes(real_account_signup_target)) {\n            active_modal_index_no = modal_pages_indices.add_or_manage_account;\n            return active_modal_index_no;\n        }\n        if (state_value.active_modal_index === -1) {\n            if (has_real_account && currency && getIsManageTarget()) {\n                active_modal_index_no = modal_pages_indices.add_or_manage_account;\n            } else {\n                active_modal_index_no =\n                    real_account_signup_target === 'set_currency'\n                        ? modal_pages_indices.set_currency\n                        : modal_pages_indices.account_wizard;\n            }\n        } else {\n            active_modal_index_no = state_value.active_modal_index;\n        }\n        return active_modal_index_no;\n    };\n\n    // set title and body of the modal\n    const { title: Title, body: ModalContent } = modal_content[getActiveModalIndex()];\n    const {\n        account_wizard,\n        add_or_manage_account,\n        finished_set_currency,\n        status_dialog,\n        new_status_dialog,\n        set_currency,\n        signup_error,\n        restricted_country_signup_error,\n        invalid_input_error,\n    } = modal_pages_indices;\n\n    const has_close_icon = [account_wizard, add_or_manage_account, set_currency, signup_error].includes(\n        getActiveModalIndex()\n    );\n\n    const handleOnAccept = async () => {\n        setLoading(true);\n        try {\n            const response = await realAccountSignup({ ...real_account_form_data, accept_risk: 1 });\n            WS.authorized.getAccountStatus().then(status => {\n                const { get_account_status } = status;\n                setShouldShowAppropriatenessWarningModal(false);\n\n                if (\n                    real_account_signup_target === 'maltainvest' &&\n                    !get_account_status?.status?.includes('cashier_locked')\n                ) {\n                    closeModalthenOpenDepositModal();\n                } else {\n                    showStatusDialog(response?.new_account_maltainvest?.currency.toLowerCase());\n                    showNewStatusDialog(response?.new_account_maltainvest?.currency.toLowerCase());\n                }\n            });\n        } catch (sign_up_error) {\n            // TODO: Handle Error\n        } finally {\n            fetchAccountSettings();\n            setLoading(false);\n        }\n    };\n\n    const handleOnDecline = async () => {\n        setLoading(true);\n        setAssessmentDecline(true);\n        try {\n            await realAccountSignup({ ...real_account_form_data, accept_risk: 0 });\n        } catch (sign_up_error) {\n            setRiskWarningTitle(localize('24-hour Cool Down Warning'));\n            if (sign_up_error.code === 'AppropriatenessTestFailed') {\n                setShouldShowAppropriatenessWarningModal(false);\n                setShouldShowRiskWarningModal(true);\n            }\n            // TODO: Handle Error case\n        } finally {\n            fetchAccountSettings();\n            setLoading(false);\n        }\n    };\n\n    const handleRiskAcceptance = () => {\n        closeRealAccountSignup();\n        setShouldShowRiskWarningModal(false);\n        setAssessmentDecline(false);\n    };\n\n    if (assessment_decline) {\n        return (\n            <RiskToleranceWarningModal\n                show_risk_modal={assessment_decline}\n                title={risk_warning_title}\n                handleAcceptRisk={handleRiskAcceptance}\n                body_content={\n                    <Localize\n                        i18n_default_text='CFDs and other financial instruments come with a high risk of losing money rapidly due to leverage. You should consider whether you understand how CFDs and other financial instruments work and whether you can afford to take the risk of losing your money. <0/><0/>\n                        As you have declined our previous warning, you would need to wait 24 hours before you can proceed further.'\n                        components={[<br key={0} />]}\n                    />\n                }\n            />\n        );\n    } else if (is_trading_assessment_for_new_user_enabled && should_show_risk_warning_modal) {\n        return (\n            <RiskToleranceWarningModal\n                show_risk_modal={should_show_risk_warning_modal}\n                title={risk_warning_title}\n                handleAcceptRisk={handleRiskAcceptance}\n                body_content={\n                    <Localize\n                        i18n_default_text='CFDs and other financial instruments come with a high risk of losing money rapidly due to leverage. You should consider whether you understand how CFDs and other financial instruments work and whether you can afford to take the high risk of losing your money. <0/><0/> To continue, kindly note that you would need to wait 24 hours before you can proceed further.'\n                        components={[<br key={0} />]}\n                    />\n                }\n            />\n        );\n    } else if (should_show_appropriateness_warning_modal) {\n        return (\n            <TestWarningModal\n                show_risk_modal={should_show_appropriateness_warning_modal}\n                body_content={\n                    <Text as='p' size='xs'>\n                        <Localize\n                            i18n_default_text='In providing our services to you, we are required to ask you for some information to assess if a given product or service is appropriate for you and whether you have the experience and knowledge to understand the risks involved.<0/><0/>'\n                            components={[<br key={0} />]}\n                        />\n                        <Localize\n                            i18n_default_text='On the basis of the information provided in relation to your knowledge and experience, we consider that the investments available via this website are not appropriate for you.<0/><0/>'\n                            components={[<br key={0} />]}\n                        />\n                        <Localize i18n_default_text='By clicking ‘Accept’ and proceeding with the account opening, you should note that you may be exposing yourself to risks. These risks, which may be significant, include the risk of losing the entire sum invested, and you may not have the knowledge and experience to properly assess or mitigate them.' />\n                    </Text>\n                }\n                footer_content={\n                    <React.Fragment>\n                        <Button type='button' large text={localize('Decline')} secondary onClick={handleOnDecline} />\n                        <Button\n                            type='button'\n                            large\n                            text={localize('Accept')}\n                            primary\n                            onClick={handleOnAccept}\n                            is_loading={is_loading}\n                        />\n                    </React.Fragment>\n                }\n            />\n        );\n    }\n\n    return (\n        <React.Fragment>\n            {is_real_acc_signup_on && (\n                <React.Fragment>\n                    {isDesktop ? (\n                        <Modal\n                            id='real_account_signup_modal'\n                            className={classNames('real-account-signup-modal', {\n                                'dc-modal__container_real-account-signup-modal--error': [\n                                    signup_error,\n                                    restricted_country_signup_error,\n                                    invalid_input_error,\n                                ].includes(getActiveModalIndex()),\n                                'dc-modal__container_real-account-signup-modal--success': [\n                                    finished_set_currency,\n                                    status_dialog,\n                                ].includes(getActiveModalIndex()),\n                            })}\n                            is_open={is_real_acc_signup_on}\n                            is_risk_warning_visible={is_risk_warning_visible}\n                            has_close_icon={real_account_signup_target !== 'samoa'}\n                            is_title_centered={real_account_signup_target === 'samoa'}\n                            renderTitle={() => {\n                                if (Title && ![finished_set_currency, status_dialog].includes(getActiveModalIndex())) {\n                                    return (\n                                        <Title\n                                            available_crypto_currencies={available_crypto_currencies}\n                                            currency={currency}\n                                            has_fiat={has_fiat}\n                                            is_eu={show_eu_related_content}\n                                            real_account_signup_target={real_account_signup_target}\n                                            should_show_all_available_currencies={should_show_all_available_currencies}\n                                        />\n                                    );\n                                }\n\n                                return null;\n                            }}\n                            toggleModal={closeModal}\n                            height={getModalHeight()}\n                            width={getModalWidth()}\n                            elements_to_ignore={[document.querySelector('.modal-root')]}\n                        >\n                            <ModalContent\n                                state_value={state_value}\n                                passthrough={state_index}\n                                is_loading={is_loading}\n                                real_account_signup_target={real_account_signup_target}\n                                deposit_real_account_signup_target={deposit_real_account_signup_target}\n                                deposit_target={deposit_target}\n                            />\n                        </Modal>\n                    ) : (\n                        <MobileDialog\n                            portal_element_id='modal_root'\n                            wrapper_classname='account-signup-mobile-dialog'\n                            visible={is_real_acc_signup_on}\n                            onClose={closeModal}\n                            has_full_height={getActiveModalIndex() === modal_pages_indices.signup_error}\n                            renderTitle={() => {\n                                if (Title) {\n                                    return (\n                                        <Title\n                                            currency={currency}\n                                            real_account_signup_target={real_account_signup_target}\n                                            should_show_all_available_currencies={should_show_all_available_currencies}\n                                        />\n                                    );\n                                }\n\n                                return null;\n                            }}\n                        >\n                            <ModalContent\n                                state_value={state_value}\n                                passthrough={state_index}\n                                is_loading={is_loading}\n                                real_account_signup_target={real_account_signup_target}\n                                deposit_real_account_signup_target={deposit_real_account_signup_target}\n                                deposit_target={deposit_target}\n                            />\n                        </MobileDialog>\n                    )}\n                </React.Fragment>\n            )}\n        </React.Fragment>\n    );\n});\n\nexport default withRouter(RealAccountSignup);\n","import RealAccountSignup from './real-account-signup.jsx';\n\nexport default RealAccountSignup;\n","import React from 'react';\nimport { Loading } from '@deriv/components';\n\nconst LoadingModal = props => (\n    <div className='account-signup-loader'>\n        <Loading {...props} is_fullscreen={false} />\n    </div>\n);\n\nexport default LoadingModal;\n","import { useFetch } from '@deriv/api';\nimport { useStore } from '@deriv/stores';\n\nconst usePaymentAgentList = (currency?: string) => {\n    const { client } = useStore();\n    const { residence } = client;\n\n    const { data, ...rest } = useFetch('paymentagent_list', {\n        payload: { paymentagent_list: residence, currency },\n        options: { enabled: Boolean(residence) },\n    });\n\n    return {\n        data: data?.paymentagent_list?.list,\n        ...rest,\n    };\n};\n\nexport default usePaymentAgentList;\n"],"names":["e","self","module","exports","r","Object","getOwnPropertySymbols","t","prototype","hasOwnProperty","n","propertyIsEnumerable","assign","String","getOwnPropertyNames","fromCharCode","map","join","split","forEach","keys","o","c","s","i","TypeError","a","arguments","length","l","call","u","Symbol","for","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","key","ref","__self","__source","defaultProps","$$typeof","type","props","_owner","current","jsx","jsxs","react","d","defineProperty","enumerable","get","Array","isArray","default","children","label","className","is_title_enabled","is_fiat","item_count","description","__esModule","j","f","m","p","_","v","id","test","Localize","i18n_default_text","components","Popover","alignment","disable_message_icon","icon","is_bubble_hover_enabled","message","zIndex","field","name","value","onChange","onBlur","second_line_label","onClick","Fragment","checked","disabled","selected","htmlFor","Icon","toLowerCase","getCurrencyDisplayCode","currency","supported_in","default_value","rules","localize","real_account_signup_target","header","active_title","title","body","form_value","getDefaultFields","validate","generateValidationFunction","passthrough","Y","globalThis","window","g","Function","useLayoutEffect","useEffect","defaultValue","initializeWithValue","matchMedia","matches","useState","addListener","addEventListener","removeListener","removeEventListener","isDesktop","isMobile","isTablet","isTabletPortrait","isMobileOrTabletLandscape","show_risk_modal","handleAcceptRisk","button_text","body_content","has_sub_header","useTranslations","Modal","width","height","is_open","toggleModal","has_close_icon","Body","size","Text","as","align","line_height","Footer","Button","large","text","primary","MobileDialog","visible","portal_element_id","weight","_ref","popover_message","_jsx","_objectWithoutProperties","_excluded","_jsxs","React","_objectSpread","clsx","USTPopover","Hr","observer","getCurrentStep","goToNextStep","goToStep","onSubmit","onSave","onCancel","goToPreviousStep","set_currency","has_cancel","has_wallet_account","client","ui","useStore","has_active_real_account","has_real_account","upgradeable_currencies","legal_allowed_currencies","available_crypto_currencies","has_fiat","accounts","has_currency","Boolean","real_account_signup","resetRealAccountSignupParams","useDevice","crypto","filter","selected_currency","CURRENCY_TYPE","CRYPTO","fiat","FIAT","is_bypass_step","setIsBypassStep","should_disable_fiat","values","item","landing_company_shortcode","error_code","error_details","route_to_address_details","getAddressDetailsFields","includes","Formik","initialValues","actions","setSubmitting","current_step","errors","splitValidationResultTypes","_ref2","handleSubmit","AutoHeightWrapper","default_height","_ref3","_reorderCurrencies","_reorderCurrencies2","setRef","Div100vhContainer","height_offset","is_disabled","ThemedScrollbars","RadioButtonGroup","reorderCurrencies","avbl_currency","Field","component","RadioButton","_available_crypto_cur","crypto_data","has_separator","is_bypassed","FormSubmitButton","is_center","is_absolute","cancel_label","handleCancel","warnings","EXPERIAN","SUCCESS","WARN","DANGER","PENDING","getAccountTitle","getExperianResult","status","platform","ramp","currenciesPaymentAgentAvailability","all_payment_agent_list","account_list","result","push","has_payment_agent","agent","currencies","some","account","color","subheading","heading","FIAT_CURRENCY_TYPE","CRYPTO_CURRENCY_TYPE","AddCryptoCurrency","is_add_fiat","should_show_crypto_only","should_show_fiat_only","hasNoAvailableCrypto","modules","should_show_cancel","cashier","getReorderedFiatCurrencies","canAddCrypto","isSubmitting","messages","canAddFiat","CurrencyRadioButtonGroup","touched","website_name","getReorderedCryptoCurrencies","CurrencyRadioButton","deposit_target","form_error","cancel_icon","PropTypes","string","onClickBack","func","bool","setShouldShowAllAvailableCurrencies","openRealAccountSignup","data","isLoading","is_loading","usePaymentAgentList","getReorderedCurrencies","allowed_currencies_payment_agent_availability","Loading","is_fullscreen","AddCrypto","is_add_crypto","autohide","classNames","AddFiat","current_currency_type","current_fiat_currency","closeRealAccountSignup","can_change_fiat_currency","Chat","non_fiat_mesage","fiat_currency","preventDefault","disabled_message","error","ChangeAccountCurrency","propTypes","AddOrManageAccounts","is_add_currency","onError","onSuccessSetAccountCurrency","setLoading","onClose","traders_hub","setAccountCurrency","setCurrency","createCryptoAccount","is_low_risk","loginid","show_eu_related_content","manage_real_account_tab_index","setShouldShowCancel","resetRealAccountSignupTarget","setIsDeposit","general_store","initial_active_index","active_index","setActiveIndex","async","WS","mt5LoginList","fetchMt5LoginList","setCurrencyOrAddCryptoAccount","currency_object","entries","then","response","previous_currency","echo_req","set_account_currency","catch","finally","LoadingModal","fiat_section","closeModal","AddCurrency","is_mf_active","startsWith","Tabs","onTabItemClick","index","top","header_fit_content","switchAccount","continueRouteAfterChooseCrypto","should_show_all_available_currencies","hasAllCryptos","addNewCryptoAccount","allowed_currencies_onramp_availability","currenciesOnRampAvailability","currencies_to_filter","filtered_currencies","_currencies_to_filter","can_add_onramp_supported_crypto_account","shouldShowAddButton","getReorderCryptoCurrencies","reordered_crypto_currencies","doSwitch","target_account","obj","currency_title","memoized_reordered_crypto_currencies","ChooseCurrency","FinishedAddCurrency","redirectToLegacyPlatform","deposit_real_account_signup_target","history","IconNextCurrency","IconWon","secondary","closeModalThenOpenCashier","routes","cashier_deposit","SuccessMessage","prev","FinishedSetCurrency","IconPrevCurrency","IconArrow","noCryptoAvailable","error_message","updateValue","Heading","code","Message","details","address_line_1","phone","open","getSignupFormFields","TryAgain","onConfirm","rest","ErrorCTA","_ref4","StaticUrl","href","SignupErrorContent","_ref5","error_field","is_invalid_field_error","DialogHeading","DialogMessage","is_fully_authenticated","_Fragment","DialogPrimaryButton","closeModalAndOpenCashier","closeModalAndOpenPOI","closeModalAndOpenPOA","action","getActionButton","DialogDismissButton","DialogButtons","MainIcon","Checkmark","Warning","Danger","CloseIcon","StatusDialogContainer","_ref6","icon_size","getStatus","proof_of_identity","proof_of_address","withRouter","StatusIcon","NewStatusDialogContainer","setShouldShowOneTimeDepositModal","wide","onOpenDepositModal","closeModalAndOpenDeposit","signup_error","choose_crypto_currency","add_currency","finished_add_currency","restricted_country_signup_error","invalid_input_error","active_modal_index_no","maltainvest_signup","state_index","fetchAccountSettings","is_from_restricted_country","realAccountSignup","is_real_acc_signup_on","setIsTradingAssessmentForNewUserEnabled","setIsClosingCreateRealAccountModal","setRealAccountSignupParams","setShouldShowAppropriatenessWarningModal","setShouldShowRiskWarningModal","should_show_appropriateness_warning_modal","should_show_risk_warning_modal","toggleAccountSuccessModal","state_value","is_trading_assessment_for_new_user_enabled","setDepositTarget","setError","real_account_form_data","risk_warning_title","setRiskWarningTitle","Suspense","fallback","AccountWizard","setIsRiskWarningVisible","onFinishSuccess","showStatusDialog","onNewFinishSuccess","showNewStatusDialog","onOpenWelcomeModal","closeModalthenOpenWelcomeModal","local_props","setRealAccountFormData","WizardHeading","_local_props$availabl","showErrorModal","_local_props$state_va","_local_props$availabl3","_local_props$state_va2","_local_props$state_va3","closeSetCurrencySuccessModal","Analytics","trackEvent","form_source","payload","getModalHeight","setParams","active_modal_index","modal_pages_indices","curr","showSetCurrencySuccess","current_currency","is_loading_val","setIsLoading","localStorage","JSON","real_signup_error_message","_modal_content$getAct","setCurrentAction","sessionStorage","removeItem","cashier_onramp","onErrorConfirm","getIsManageTarget","getActiveModalIndex","modal_content","status_dialog","new_status_dialog","handleOnAccept","getAccountStatus","_get_account_status$s","closeModalthenOpenDepositModal","_response$new_account","handleOnDecline","setAssessmentDecline","assessment_decline","handleRiskAcceptance","is_risk_warning_visible","is_title_centered","renderTitle","finished_set_currency","wrapper_classname","has_full_height","_data$paymentagent_li","residence","_useFetch","useFetch","paymentagent_list","options","enabled","list"],"sourceRoot":""}