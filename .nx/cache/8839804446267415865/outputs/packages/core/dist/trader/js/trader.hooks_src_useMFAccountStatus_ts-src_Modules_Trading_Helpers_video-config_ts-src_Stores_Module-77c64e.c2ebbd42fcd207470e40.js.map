{"version":3,"file":"trader/js/trader.hooks_src_useMFAccountStatus_ts-src_Modules_Trading_Helpers_video-config_ts-src_Stores_Module-77c64e.c2ebbd42fcd207470e40.js","mappings":"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","sources":["webpack://@deriv/trader/../hooks/src/useHasMaltaInvestAccount.ts","webpack://@deriv/trader/../hooks/src/useGetMFAccountStatus.ts","webpack://@deriv/trader/../hooks/src/useMFAccountStatus.ts","webpack://@deriv/trader/./src/Modules/Trading/Helpers/video-config.ts","webpack://@deriv/trader/./src/Stores/Modules/Trading/Helpers/allow-equals.ts"],"sourcesContent":["import { useStore } from '@deriv/stores';\n\nconst useHasMaltaInvestAccount = () => {\n    const { client } = useStore();\n    const { active_accounts } = client;\n    const has_malta_invest_account = active_accounts.some(\n        account => account.landing_company_shortcode === 'maltainvest'\n    );\n\n    return has_malta_invest_account;\n};\n\nexport default useHasMaltaInvestAccount;\n","import { useEffect } from 'react';\nimport { useStore } from '@deriv/stores';\nimport { ACCOUNT_BADGE_STATUS } from '@deriv/shared';\n\nconst useGetMFAccountStatus = () => {\n    const { client } = useStore();\n    const { account_status, updateAccountStatus } = client || {};\n\n    useEffect(() => {\n        async function fetchData() {\n            await updateAccountStatus();\n        }\n        fetchData();\n    }, []);\n    const authentication = account_status?.authentication;\n    const poi_status = authentication?.identity?.status;\n    const onfido_status = authentication?.identity?.services?.onfido?.status;\n    const manual_status = authentication?.identity?.services?.manual?.status;\n    const poa_status = authentication?.document?.status;\n\n    const STATUS = {\n        NONE: 'none',\n        VERIFIED: 'verified',\n        PENDING: 'pending',\n        REJECTED: 'rejected',\n        EXPIRED: 'expired',\n        SUSPECTED: 'suspected',\n    } as const;\n    const failed_cases = [STATUS.REJECTED, STATUS.EXPIRED, STATUS.SUSPECTED];\n\n    //@ts-expect-error we can ignore this error since we are checking the status and returning true or false\n    const need_poa_resubmission = poa_status && failed_cases.includes(poa_status);\n    const poa_pending = poa_status === STATUS.PENDING;\n    const poa_not_submitted = poa_status === STATUS.NONE;\n\n    const poi_verified_by_onfido_or_manual = [onfido_status, manual_status].includes(STATUS.VERIFIED);\n    const poi_pending_by_onfido_or_manual =\n        [onfido_status, manual_status].includes(STATUS.PENDING) && !poi_verified_by_onfido_or_manual;\n\n    const poi_not_submitted_by_onfido_or_manual = [onfido_status, manual_status].every(\n        status => status === STATUS.NONE\n    );\n    const need_poi_submission = !poi_pending_by_onfido_or_manual && !poi_verified_by_onfido_or_manual;\n\n    const need_poi_resubmission = !poi_not_submitted_by_onfido_or_manual && need_poi_submission;\n    const is_verified = poi_status === STATUS.VERIFIED && poa_status === STATUS.VERIFIED;\n\n    const getMFAccountStatus = () => {\n        if (poa_status && onfido_status && manual_status) {\n            if (need_poi_resubmission || need_poa_resubmission) {\n                return ACCOUNT_BADGE_STATUS.FAILED;\n            } else if (poi_not_submitted_by_onfido_or_manual || poa_not_submitted) {\n                return ACCOUNT_BADGE_STATUS.NEEDS_VERIFICATION;\n            } else if (poi_pending_by_onfido_or_manual || poa_pending) {\n                return ACCOUNT_BADGE_STATUS.PENDING;\n            }\n            return null;\n        }\n        return null;\n    };\n    const getVerificationStatus = () => (!is_verified ? { poi_status, poa_status, valid_tin: 1, required_tin: 1 } : {});\n\n    return {\n        mf_account_status: getMFAccountStatus(),\n        kyc_status: getVerificationStatus(),\n    };\n};\n\nexport default useGetMFAccountStatus;\n","import { ACCOUNT_BADGE_STATUS } from '@deriv/shared';\nimport useHasMaltaInvestAccount from './useHasMaltaInvestAccount';\nimport useGetMFAccountStatus from './useGetMFAccountStatus';\nimport { useStore } from '@deriv/stores';\n\nconst useMFAccountStatus = () => {\n    const {\n        client: { is_eu },\n    } = useStore();\n    const has_malta_invest_account = useHasMaltaInvestAccount();\n    const { mf_account_status } = useGetMFAccountStatus();\n\n    const should_show_status_for_multipliers_account =\n        is_eu &&\n        has_malta_invest_account &&\n        mf_account_status &&\n        [ACCOUNT_BADGE_STATUS.PENDING, ACCOUNT_BADGE_STATUS.FAILED, ACCOUNT_BADGE_STATUS.NEEDS_VERIFICATION].includes(\n            mf_account_status\n        );\n    return should_show_status_for_multipliers_account ? mf_account_status : null;\n};\n\nexport default useMFAccountStatus;\n","type TDtraderVideoUrl = {\n    [key: string]: TVideoVariants;\n};\n\ntype TVideoVariants = {\n    dark: string;\n    light: string;\n};\n\n/* The video upload feature is not available yet. The following video ids are taken from CF Stream account.\nIf considered necessary later, the current approach can be replaced with HTTP-request to fetch videos by their file names. */\nexport const DESCRIPTION_VIDEO_ID: TDtraderVideoUrl = {\n    accumulator: {\n        light: 'c1d64d5ffaf449e3326d387a70621a4c',\n        dark: '9657e4adcfd9274d41a042b7b6c42d60',\n    },\n    even_odd: {\n        light: 'a3930b0a535c4f23daea5cf98a718941',\n        dark: 'e311e25dd68761d6ab73e8158ec83ea4',\n    },\n    high_low: {\n        light: 'f528c662c377601908a741ae2aedaec6',\n        dark: '4c05445e1bd28f3f9f95b0ab566c4f9b',\n    },\n    turbos: {\n        light: '63f8b8f93e83e98481f20aa971ef7723',\n        dark: 'ce0158579fcee186de1ddeb97646f892',\n    },\n    match_diff: {\n        light: '8693a02397d284ffcf0608e4fda702d9',\n        dark: '2e56ad7ea67bf3f9a869de6336df1796',\n    },\n    multiplier: {\n        light: 'bca032791da88023e81ebf7341226f83',\n        dark: '3d10e25e2e0eaaf96d1874aae257029f',\n    },\n    over_under: {\n        light: '9e2be907cba9b38352890e52cfd8cbaf',\n\n        dark: '4b31fc188c2f365faa310f7e34715af7',\n    },\n    rise_fall: {\n        light: '7719c7e5436f58e59ab47510445108ba',\n        dark: 'b72ef7ec914afe3dbb2a1601cad3a76f',\n    },\n    touch: {\n        light: 'c781a6844f37a3308fe8774b4450dfc9',\n        dark: 'c91f2b9859dc95ce8eecf7df327aaf00',\n    },\n    vanilla: {\n        light: '9b8b6ae67d3a720e4aee2665889d17fb',\n        dark: '8f04e9d768b8e08a1d87830c95c6b9c8',\n    },\n    trade_type_selection: {\n        light: 'ffd6ce15fe1d47014262a00f562f5d7b',\n        dark: '194a02d2924a27fdbc7420da44d392cc',\n    },\n};\n\n// The ids here won't have dark and light theme\nexport const UNIFIED_MODE_VIDEO_ID = {\n    accumulator_stats: '26d1401d2e3f6ae16913a21ec0579fc1',\n};\n\nexport const getDescriptionVideoId = (contract_type = '', is_dark_theme = false) =>\n    DESCRIPTION_VIDEO_ID[contract_type]?.[is_dark_theme ? 'dark' : 'light'];\n","import { isEmptyObject, getPropertyValue, TRADE_TYPES } from '@deriv/shared';\nimport { ContractType } from 'Stores/Modules/Trading/Helpers/contract-type';\nimport { TTradeStore } from 'Types';\n\ntype THasDurationForCallPutEqual = {\n    contract_type_list: TTradeStore['contract_types_list'];\n    duration_unit: TTradeStore['duration_unit'];\n    contract_start_type: string;\n};\n\nexport const hasCallPutEqual = (contract_type_list: THasDurationForCallPutEqual['contract_type_list']) => {\n    if (isEmptyObject(contract_type_list)) return false;\n\n    return !!getPropertyValue(contract_type_list, 'Ups & Downs')?.categories?.some(\n        (contract: THasDurationForCallPutEqual['contract_type_list']['Ups & Downs']['categories'][0]) =>\n            contract.value === TRADE_TYPES.RISE_FALL_EQUAL\n    );\n};\n\nexport const hasDurationForCallPutEqual = (\n    contract_type_list: THasDurationForCallPutEqual['contract_type_list'],\n    duration_unit: THasDurationForCallPutEqual['duration_unit'],\n    contract_start_type: THasDurationForCallPutEqual['contract_start_type']\n) => {\n    if (!contract_type_list || !duration_unit || !contract_start_type) return false;\n\n    const contract_list = Object.keys(contract_type_list || {}).reduce<string[]>((key, list) => {\n        const item: THasDurationForCallPutEqual['contract_type_list']['Ups & Downs'] = contract_type_list[list];\n        return [...key, ...item.categories.map(contract => contract.value)];\n    }, []);\n\n    const contract_duration_list = contract_list.map(list => ({\n        [list]: getPropertyValue(ContractType.getFullContractTypes(), [\n            list,\n            'config',\n            'durations',\n            'units_display',\n            contract_start_type,\n        ]),\n    }));\n\n    // Check whether rise fall equal is exists and has the current store duration unit\n    if (hasCallPutEqual(contract_type_list)) {\n        const found = contract_duration_list.filter(contract => contract?.rise_fall_equal);\n        if (found.length > 0) {\n            return found[0].rise_fall_equal.some((duration: { value: string }) => duration.value === duration_unit);\n        }\n    }\n\n    return false;\n};\n\nexport const isRiseFallEqual = (contract_type: string) => /^(rise_fall|rise_fall_equal)$/.test(contract_type);\n"],"names":["useStore","client","active_accounts","some","account","landing_company_shortcode","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","_authentication$ident","_authentication$ident2","_authentication$ident3","_authentication$ident4","_authentication$ident5","_authentication$ident6","_authentication$ident7","_authentication$docum","_ref","account_status","updateAccountStatus","useEffect","_fetchData","_callee","_context","arguments","apply","_next","_throw","fetchData","authentication","poi_status","identity","status","onfido_status","services","onfido","manual_status","manual","poa_status","document","STATUS","need_poa_resubmission","includes","poa_pending","poa_not_submitted","poi_verified_by_onfido_or_manual","poi_pending_by_onfido_or_manual","poi_not_submitted_by_onfido_or_manual","every","is_verified","mf_account_status","ACCOUNT_BADGE_STATUS","FAILED","NEEDS_VERIFICATION","PENDING","kyc_status","valid_tin","required_tin","is_eu","has_malta_invest_account","useHasMaltaInvestAccount","useGetMFAccountStatus","DESCRIPTION_VIDEO_ID","accumulator","light","dark","even_odd","high_low","turbos","match_diff","multiplier","over_under","rise_fall","touch","vanilla","trade_type_selection","UNIFIED_MODE_VIDEO_ID","accumulator_stats","getDescriptionVideoId","_DESCRIPTION_VIDEO_ID","is_dark_theme","undefined","hasCallPutEqual","contract_type_list","_getPropertyValue","_getPropertyValue$cat","isEmptyObject","getPropertyValue","categories","contract","TRADE_TYPES","RISE_FALL_EQUAL","hasDurationForCallPutEqual","duration_unit","contract_start_type","contract_duration_list","reduce","key","list","item","concat","_toConsumableArray","map","_defineProperty","ContractType","getFullContractTypes","found","filter","rise_fall_equal","duration","isRiseFallEqual","contract_type","test"],"sourceRoot":""}