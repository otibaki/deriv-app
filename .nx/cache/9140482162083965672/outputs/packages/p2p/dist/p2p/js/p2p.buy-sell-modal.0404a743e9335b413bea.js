/*! For license information please see p2p.buy-sell-modal.0404a743e9335b413bea.js.LICENSE.txt */
(self.webpackChunk_deriv_p2p=self.webpackChunk_deriv_p2p||[]).push([[3234],{36518:(n,e,r)=>{"use strict";r.r(e),r.d(e,{default:()=>l});var t=r(9372),a=r.n(t),o=r(40935),i=r.n(o)()(a());i.push([n.id,".buy-sell-modal-error{padding:0 2.4rem;margin-bottom:1.6rem;width:-moz-fit-content;width:fit-content}","",{version:3,sources:["webpack://./src/components/modal-manager/modals/buy-sell-modal/buy-sell-modal-error/buy-sell-modal-error.scss"],names:[],mappings:"AAysBA,sBACI,gBAAA,CACA,oBAAA,CACA,sBAAA,CAAA,iBAAA",sourcesContent:["/*------------------------------------*\n *  # Constants\n *------------------------------------*/\n\n/*RTL Language Mixin*/\n\n@mixin rtl {\n    [dir='rtl'] & {\n        @content;\n    }\n}\n\n/* stylelint-disable color-no-hex */\n\n/* COLOR PALETTE */\n\n/* colors */\n$color-black: #0e0e0e;\n$color-black-1: #333333;\n$color-black-3: #151717;\n$color-black-4: #1d1f20;\n$color-black-5: #242828;\n$color-black-6: #3e3e3e;\n$color-black-7: #000000;\n$color-black-8: #323738;\n$color-black-9: #5c5c5c;\n$color-black-10: #181c25;\n$color-blue: #377cfc;\n$color-blue-1: #0dc2e7;\n$color-blue-2: #2a3052;\n$color-blue-3: #0796e0;\n$color-blue-4: #0677af;\n$color-blue-5: #dfeaff;\n$color-blue-6: #92b8ff;\n$color-blue-7: #182130;\n$color-blue-8: #e6f5ff;\n$color-blue-9: #00426a;\n$color-brown: #664407;\n$color-green: #85acb0;\n$color-green-1: #4bb4b3;\n$color-green-2: #3d9494;\n$color-green-3: #00a79e;\n$color-green-4: #008079;\n$color-green-5: #4bb4b329;\n$color-green-6: #17eabd;\n$color-green-7: #e8fdf8;\n$color-green-8: #cedddf;\n$color-grey: #c2c2c2;\n$color-grey-1: #999999;\n$color-grey-2: #f2f3f4;\n$color-grey-3: #eaeced;\n$color-grey-4: #e6e9e9;\n$color-grey-5: #d6dadb;\n$color-grey-6: #d6d6d6;\n$color-grey-7: #6e6e6e;\n$color-grey-8: #d7d7d7;\n$color_grey-9: #868686;\n$color-grey-10: #919191;\n$color-grey-11: #fafafa;\n$color-grey-12: #f5f7fa;\n$color-grey-13: #2e2e2e;\n$color-grey-14: #e2e5e7;\n$color-grey-15: #f3f4f5;\n$color-orange: #ff6444;\n$color-orange-2: #ff9c13;\n$color-purple: #722fe4;\n$color-red: #ff444f;\n$color-red-1: #ec3f3f;\n$color-red-2: #cc2e3d;\n$color-red-3: #a32430;\n$color-red-4: #d33636;\n$color-red-5: #eb3e48;\n$color-red-6: #ec3f3f29;\n$color-red-7: #ffe1e3;\n$color-red-8: #661b20;\n$color-red-9: #b33037;\n$color-red-10: #ff444f;\n$color-red-11: #fce3e3;\n$color-red-12: #c40000;\n$color-violet: #4a3871;\n$color-white: #ffffff;\n$color-yellow: #ffad3a;\n$color-yellow-1: #b3760d;\n$color-yellow-2: #ffa912;\n$color-yellow-3: rgba(255, 173, 58, 0.16);\n$color-yellow-4: #fff7e6;\n$color-yellow-5: #6a4800;\n$color-yellow-6: #ffeabf;\n\n/* status colors */\n$color-status-warning: rgba(255, 173, 58, 0.16);\n$color-status-information: rgba(55, 124, 252, 0.16);\n$color-status-announcement: rgba(75, 180, 179, 0.16);\n$color-status-error: rgba(236, 63, 63, 0.16);\n$color-status-verified: rgba(0, 122, 34);\n$color-status-danger: rgba(196, 0, 0);\n\n/* alpha colors */\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\n$alpha-color-black-2: transparentize($color-black, 0.04);\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\n$alpha-color-black-7: transparentize($color-black, 0.5);\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\n$alpha-color-white-1: transparentize($color-white, 0.04);\n$alpha-color-white-2: transparentize($color-white, 0.84);\n$alpha-color-white-3: transparentize($color-white, 0.92);\n$alpha-color-white-4: transparentize($color-white, 0.3);\n$alpha-color-red-1: transparentize($color-red, 0.92);\n$alpha-color-red-2: transparentize($color-red, 0.84);\n$alpha-color-red-3: transparentize($color-red, 0.76);\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\n\n/* gradient colors */\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\n\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\n\n/* Preserve legacy variables */\n/* Primary */\n\n$COLOR_BLACK: #000000;\n$COLOR_BLACK_2: #1d1f20;\n$COLOR_BLACK_3: #0e0e0e;\n$COLOR_GREEN_1: #39b19d;\n$COLOR_GREEN_2: #2d9f93;\n$COLOR_GREEN_3: #21ce99;\n$COLOR_GREEN_4: #00a79e;\n$COLOR_GREEN_5: #4bb4b3;\n$COLOR_ORANGE: #ff9933;\n$COLOR_DARK_ORANGE: #ff8802;\n$COLOR_PURPLE: #4f60ae;\n$COLOR_RED: #e31c4b;\n$COLOR_RED_2: #cc2e3d;\n$COLOR_RED_3: #ec3f3f;\n$COLOR_CORAL_RED: #ff444f;\n$COLOR_SKY_BLUE: #2196f3;\n$COLOR_WHITE: #ffffff;\n$COLOR_BLUE: #1c5ae3;\n\n// Light theme\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\n$COLOR_LIGHT_GRAY_1: #999cac;\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\n$COLOR_LIGHT_GRAY_3: #eaeced;\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\n// Dark theme\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\n$COLOR_DARK_BLUE_1: #0b0e18;\n$COLOR_DARK_BLUE_2: #101320;\n$COLOR_DARK_BLUE_3: #191c31;\n$COLOR_DARK_BLUE_4: #202641;\n$COLOR_DARK_BLUE_5: #2a3052;\n$COLOR_DARK_BLUE_6: #555975;\n$COLOR_DARK_BLUE_7: #7f8397;\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\n$COLOR_DARK_GRAY_1: #282a37;\n$COLOR_DARK_GRAY_2: #303342;\n$COLOR_DARK_GRAY_3: #555975;\n$COLOR_DARK_GRAY_4: #999999;\n/* stylelint-enable color-no-hex */\n\n$BORDER_RADIUS: 4px;\n$BORDER_RADIUS_2: 8px;\n\n$MAX_CONTAINER_WIDTH: 1440px;\n\n$POSITIONS_DRAWER_WIDTH: 240px;\n$POSITIONS_DRAWER_MARGIN: 8px;\n\n$HEADER_HEIGHT: 48px;\n$FOOTER_HEIGHT: 36px;\n\n$MOBILE_HEADER_HEIGHT: 40px;\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\n\n$SIDEBAR_WIDTH: 240px;\n\n/* Wallet gradient background */\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\n\n/* App Cards gradient background */\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\n\n/* Wallets */\n$ready-banner-bg-color: #e2f3f3;\n$ready-banner-tick-bg-color: #4ab4b3;\n$wallet-demo-bg-color: #fff8f9;\n$wallet-dark-demo-bg-color: #140506;\n$wallet-demo-divider-color: #fff0f1;\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\n\n/*------------------------------------*\n *  # SASS Mixins and Functions\n *------------------------------------*/\n\n/*\n * SASS interpolation\n */\n// Requires the calc-interpolation function which can also be used independently\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\n    $b: $min-value - $a * $min-screen;\n\n    $sign: '+';\n    @if ($b < 0) {\n        $sign: '-';\n        $b: abs($b);\n    }\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\n}\n\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\n    & {\n        @each $property in $properties {\n            #{$property}: $min-value;\n        }\n        @media screen and (min-width: $min-screen) {\n            @each $property in $properties {\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\n            }\n        }\n        @media screen and (min-width: $max-screen) {\n            @each $property in $properties {\n                #{$property}: $max-value;\n            }\n        }\n    }\n}\n\n/*\n * PX to EM\n * @param $px - px value to be converted\n * @param $base - base font size (in `em`)\n * Note: 'em' values are calculate based on the element font-size\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\n * Usage example:\n    padding: em(16px, 1.6em); // font-size in 'em'\n */\n@function em($px, $base: $BASE_FONT_SIZE) {\n    $list: ();\n    @if length($px) != 1 {\n        @for $i from 1 through length($px) {\n            $val_em: (nth($px, $i) / $base) * 1em;\n            $list: append($list, $val_em, space);\n        }\n        @return $list;\n    } @else {\n        @return ($px / $base) * 1em;\n    }\n}\n\n/*\n * Set property by passing a property name, and values.\n * @param $property name - padding, margin etc.\n * @param $values        - values in `px` (space separated for multiple values)\n * @param $font-size     - base font-size in `em`\n * Usage example:\n   @include toEm(padding, 8px 16px 8px, 1.6em);\n */\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\n    #{$property}: em($values, $font-size);\n}\n\n/*\n * Generate typefaces key-value pair of variable name and config\n * Example:\n   --paragraph-center-bold-black: (14px, center, bold, black)\n */\n@function generate-typefaces() {\n    $typeface_list: ();\n    @each $fontsize_name, $size in $FONT_SIZES {\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\n            @each $color_name, $color in $FONT_COLORS {\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\n                    $val: ($size, $text_align, $weight, $color);\n                    $typeface: (\n                        $key: $val,\n                    );\n                    $typeface_list: map-merge($typeface_list, $typeface);\n                }\n            }\n        }\n    }\n    // @debug $typeface_list; /* uncomment to debug */\n    @return $typeface_list;\n}\n\n/*\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\n * Usage example:\n   @include setTypeface(16px, bold, black, uppercase);\n */\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\n    @if $size {\n        font-size: $size;\n    }\n    @if $colour {\n        color: $colour;\n    }\n    @if $weight {\n        font-weight: $weight;\n    }\n    @if $tt {\n        text-transform: $tt;\n    }\n    @if $align {\n        text-align: $align;\n    }\n    @if $size == 1.6rem {\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\n    } @else if $size == 1.4rem {\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\n    } @else if $size == 1.2rem {\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\n    } @else if $size == 1rem {\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\n    } @else {\n        line-height: unset;\n    }\n}\n\n/*\n * Set typefaces by passing a typeface variable name\n * @param $var   - typeface variable\n * @param $tt    - text-transform property\n * @param $align - text-align property\n * Usage example:\n   @include typeface(--paragraph-bold-black, uppercase, center);\n */\n@mixin typeface($var, $tt: none) {\n    $typeface_config: map-get(\n        $map: $TYPEFACES_LIST,\n        $key: $var,\n    );\n\n    $size: nth($typeface_config, 1); // font-size\n    $align: nth($typeface_config, 2); // text-align\n    $weight: nth($typeface_config, 3); // font-weight\n    $color: nth($typeface_config, 4); // color\n    @include setTypeface($size, $align, $weight, $color, $tt);\n}\n\n/*\n * Range Slider Thumb styling is set here\n */\n@mixin thumbStyle() {\n    appearance: none;\n    width: 1em;\n    height: 1em;\n    border-radius: 100%;\n    border: 0;\n    cursor: pointer;\n    transition: box-shadow 0.2s;\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\n\n    &:hover {\n        box-shadow: 0 0 0 0.5em var(--state-hover);\n    }\n}\n\n/*\n * SVG icons colors\n */\n@mixin colorIcon($colors...) {\n    @for $i from 1 through length($colors) {\n        /* postcss-bem-linter: ignore */\n        .color#{$i}-fill {\n            fill: nth($colors, $i);\n        }\n        /* postcss-bem-linter: ignore */\n        .color#{$i}-stroke {\n            stroke: nth($colors, $i);\n        }\n    }\n}\n\n/*\n * Bar Spinner Animation\n * @param $count    - number of bars\n * @param $duration - duration of animation\n * @param $phase    - each bar phase change delay\n * Usage example:\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\n */\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\n    animation: sk-stretchdelay $duration infinite ease-in-out;\n\n    @for $i from 1 through $count {\n        &--#{$i} {\n            animation-delay: -$duration + (($i - 1) * $phase);\n        }\n    }\n}\n\n/*\n * Tooltip colors\n * @param $color - color property\n * Usage example:\n   @include tooltipColor($COLOR_RED);\n */\n@mixin tooltipColor($color) {\n    &:before {\n        background: $color;\n    }\n    &:after,\n    &[data-tooltip-pos='top']:after {\n        border-top-color: $color;\n    }\n    &[data-tooltip-pos='right']:after {\n        border-top-color: transparent;\n        border-right-color: $color;\n    }\n    &[data-tooltip-pos='left']:after {\n        border-top-color: transparent;\n        border-left-color: $color;\n    }\n    &[data-tooltip-pos='bottom']:after {\n        border-top-color: transparent;\n        border-bottom-color: $color;\n    }\n}\n\n/*\n * Convert Tooltip colors\n * @param $color - css color property\n * Usage example:\n   @include convertTooltipColor(var(--status-default));\n */\n@mixin convertTooltipColor($color) {\n    &:before {\n        background: $color;\n    }\n    &:after,\n    &[data-tooltip-pos='top']:after {\n        border-top-color: $color;\n    }\n    &[data-tooltip-pos='right']:after {\n        border-top-color: transparent;\n        border-right-color: $color;\n    }\n    &[data-tooltip-pos='left']:after {\n        border-top-color: transparent;\n        border-left-color: $color;\n    }\n    &[data-tooltip-pos='bottom']:after {\n        border-top-color: transparent;\n        border-bottom-color: $color;\n    }\n}\n\n/*\n    Constants\n*/\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\n$BASE_FONT_SIZE: 10px;\n\n/*\n    Variables\n*/\n$FONT_SIZES: (\n    'xheading' 3.2rem,\n    'heading' 3rem,\n    'large' 2.8rem,\n    'title' 1.6rem,\n    'paragraph' 1.4rem,\n    'small' 1.2rem,\n    'xsmall' 1rem,\n    'xxsmall' 0.8rem,\n    'xxxsmall' 0.6rem\n);\n\n$FONT_COLORS: (\n    'active' var(--text-colored-background),\n    'prominent' var(--text-prominent),\n    'black' var(--text-general),\n    'grey' var(--text-less-prominent),\n    'disabled' var(--text-disabled),\n    'green' var(--text-profit-success),\n    'red' var(--text-loss-danger)\n);\n\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\n\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\n\n$LINEHEIGHTS: (\n    'large': 1.75,\n    'medium': 1.5,\n    'small': 1.25,\n    'xsmall': 1.4,\n);\n\n/*\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\n    Variables name example: --title-center-semibold-red\n */\n$TYPEFACES_LIST: generate-typefaces();\n\n/*\n    to use styles without modifier class on .inline-icon\n    use @extend\n\n    e.g. style icon on parent hover:\n        a:hover .inline-icon {\n            @extend %inline-icon-active;\n        }\n*/\n\n%inline-icon {\n    @include colorIcon(var(--text-general), none);\n\n    &.active,\n    &-active {\n        @include colorIcon(var(--text-prominent), none);\n    }\n    &.disabled,\n    &-disabled {\n        @include colorIcon(var(--text-disabled), none);\n    }\n    &.white,\n    &-white {\n        @include colorIcon(var(--text-prominent));\n    }\n    &.border_hover_color,\n    &-border_hover_color {\n        @include colorIcon(var(--text-prominent));\n    }\n    &.secondary,\n    &-secondary {\n        @include colorIcon(var(--text-less-prominent));\n    }\n}\n\n/**\n * Define Breakpoints here.\n */\n$mobile-width: 320px;\n$tablet-width: 768px;\n$desktop-width: 1024px;\n\n@mixin tablet {\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\n        @content;\n    }\n}\n\n@mixin desktop {\n    @media (min-width: #{$desktop-width}) {\n        @content;\n    }\n}\n\n@mixin tablet-down {\n    @media (max-width: #{$tablet-width}) {\n        @content;\n    }\n}\n\n@mixin tablet-up {\n    @media (min-width: #{$tablet-width}) {\n        @content;\n    }\n}\n\n@mixin mobile-up {\n    @media (min-width: #{$mobile-width}) {\n        @content;\n    }\n}\n\n@mixin mobile {\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\n        @content;\n    }\n}\n\n@mixin mobile-landscape {\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\n        @content;\n    }\n}\n\n@mixin touch-device {\n    // add css interaction media query to detect touch devices\n    // refer to: https://caniuse.com/#feat=css-media-interaction\n    @media (pointer: coarse) {\n        @content;\n    }\n}\n\n@mixin mobile-tablet-mix {\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\n        @content;\n    }\n}\n\n/** Need to add new breakpoints for mixins */\n$max-mobile-width: 600px;\n$min-desktop-width: 1280px;\n\n@mixin mobile-screen {\n    @media (max-width: #{$max-mobile-width}) {\n        @content;\n    }\n}\n\n@mixin tablet-screen {\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\n        @content;\n    }\n}\n\n@mixin desktop-screen {\n    @media (min-width: #{$min-desktop-width}) {\n        @content;\n    }\n}\n\n@mixin mobile-or-tablet-screen {\n    @media (max-width: #{$min-desktop-width - 1}) {\n        @content;\n    }\n}\n\n@mixin tablet-or-desktop-screen {\n    @media (min-width: #{$max-mobile-width + 1}) {\n        @content;\n    }\n}\n\n@mixin tablet-portrait-screen {\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\n        @content;\n    }\n}\n\n@mixin mobile-or-tablet-landscape {\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\n        @content;\n    }\n}\n\n.buy-sell-modal-error {\n    padding: 0 2.4rem;\n    margin-bottom: 1.6rem;\n    width: fit-content;\n}\n"],sourceRoot:""}]);const l=i},58248:(n,e,r)=>{"use strict";r.r(e),r.d(e,{default:()=>l});var t=r(9372),a=r.n(t),o=r(40935),i=r.n(o)()(a());i.push([n.id,"@media(max-width: 1279px){.buy-sell-modal-footer{border-top:2px solid var(--general-section-1);display:flex;flex-direction:row;justify-content:flex-end;margin-top:auto;padding:1.6rem}}","",{version:3,sources:["webpack://./src/components/modal-manager/modals/buy-sell-modal/buy-sell-modal-footer/buy-sell-modal-footer.scss"],names:[],mappings:"AAkrBI,0BAuBJ,uBAEQ,6CAAA,CACA,YAAA,CACA,kBAAA,CACA,wBAAA,CACA,eAAA,CACA,cAAA,CAAA",sourcesContent:["/*------------------------------------*\n *  # Constants\n *------------------------------------*/\n\n/*RTL Language Mixin*/\n\n@mixin rtl {\n    [dir='rtl'] & {\n        @content;\n    }\n}\n\n/* stylelint-disable color-no-hex */\n\n/* COLOR PALETTE */\n\n/* colors */\n$color-black: #0e0e0e;\n$color-black-1: #333333;\n$color-black-3: #151717;\n$color-black-4: #1d1f20;\n$color-black-5: #242828;\n$color-black-6: #3e3e3e;\n$color-black-7: #000000;\n$color-black-8: #323738;\n$color-black-9: #5c5c5c;\n$color-black-10: #181c25;\n$color-blue: #377cfc;\n$color-blue-1: #0dc2e7;\n$color-blue-2: #2a3052;\n$color-blue-3: #0796e0;\n$color-blue-4: #0677af;\n$color-blue-5: #dfeaff;\n$color-blue-6: #92b8ff;\n$color-blue-7: #182130;\n$color-blue-8: #e6f5ff;\n$color-blue-9: #00426a;\n$color-brown: #664407;\n$color-green: #85acb0;\n$color-green-1: #4bb4b3;\n$color-green-2: #3d9494;\n$color-green-3: #00a79e;\n$color-green-4: #008079;\n$color-green-5: #4bb4b329;\n$color-green-6: #17eabd;\n$color-green-7: #e8fdf8;\n$color-green-8: #cedddf;\n$color-grey: #c2c2c2;\n$color-grey-1: #999999;\n$color-grey-2: #f2f3f4;\n$color-grey-3: #eaeced;\n$color-grey-4: #e6e9e9;\n$color-grey-5: #d6dadb;\n$color-grey-6: #d6d6d6;\n$color-grey-7: #6e6e6e;\n$color-grey-8: #d7d7d7;\n$color_grey-9: #868686;\n$color-grey-10: #919191;\n$color-grey-11: #fafafa;\n$color-grey-12: #f5f7fa;\n$color-grey-13: #2e2e2e;\n$color-grey-14: #e2e5e7;\n$color-grey-15: #f3f4f5;\n$color-orange: #ff6444;\n$color-orange-2: #ff9c13;\n$color-purple: #722fe4;\n$color-red: #ff444f;\n$color-red-1: #ec3f3f;\n$color-red-2: #cc2e3d;\n$color-red-3: #a32430;\n$color-red-4: #d33636;\n$color-red-5: #eb3e48;\n$color-red-6: #ec3f3f29;\n$color-red-7: #ffe1e3;\n$color-red-8: #661b20;\n$color-red-9: #b33037;\n$color-red-10: #ff444f;\n$color-red-11: #fce3e3;\n$color-red-12: #c40000;\n$color-violet: #4a3871;\n$color-white: #ffffff;\n$color-yellow: #ffad3a;\n$color-yellow-1: #b3760d;\n$color-yellow-2: #ffa912;\n$color-yellow-3: rgba(255, 173, 58, 0.16);\n$color-yellow-4: #fff7e6;\n$color-yellow-5: #6a4800;\n$color-yellow-6: #ffeabf;\n\n/* status colors */\n$color-status-warning: rgba(255, 173, 58, 0.16);\n$color-status-information: rgba(55, 124, 252, 0.16);\n$color-status-announcement: rgba(75, 180, 179, 0.16);\n$color-status-error: rgba(236, 63, 63, 0.16);\n$color-status-verified: rgba(0, 122, 34);\n$color-status-danger: rgba(196, 0, 0);\n\n/* alpha colors */\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\n$alpha-color-black-2: transparentize($color-black, 0.04);\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\n$alpha-color-black-7: transparentize($color-black, 0.5);\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\n$alpha-color-white-1: transparentize($color-white, 0.04);\n$alpha-color-white-2: transparentize($color-white, 0.84);\n$alpha-color-white-3: transparentize($color-white, 0.92);\n$alpha-color-white-4: transparentize($color-white, 0.3);\n$alpha-color-red-1: transparentize($color-red, 0.92);\n$alpha-color-red-2: transparentize($color-red, 0.84);\n$alpha-color-red-3: transparentize($color-red, 0.76);\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\n\n/* gradient colors */\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\n\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\n\n/* Preserve legacy variables */\n/* Primary */\n\n$COLOR_BLACK: #000000;\n$COLOR_BLACK_2: #1d1f20;\n$COLOR_BLACK_3: #0e0e0e;\n$COLOR_GREEN_1: #39b19d;\n$COLOR_GREEN_2: #2d9f93;\n$COLOR_GREEN_3: #21ce99;\n$COLOR_GREEN_4: #00a79e;\n$COLOR_GREEN_5: #4bb4b3;\n$COLOR_ORANGE: #ff9933;\n$COLOR_DARK_ORANGE: #ff8802;\n$COLOR_PURPLE: #4f60ae;\n$COLOR_RED: #e31c4b;\n$COLOR_RED_2: #cc2e3d;\n$COLOR_RED_3: #ec3f3f;\n$COLOR_CORAL_RED: #ff444f;\n$COLOR_SKY_BLUE: #2196f3;\n$COLOR_WHITE: #ffffff;\n$COLOR_BLUE: #1c5ae3;\n\n// Light theme\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\n$COLOR_LIGHT_GRAY_1: #999cac;\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\n$COLOR_LIGHT_GRAY_3: #eaeced;\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\n// Dark theme\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\n$COLOR_DARK_BLUE_1: #0b0e18;\n$COLOR_DARK_BLUE_2: #101320;\n$COLOR_DARK_BLUE_3: #191c31;\n$COLOR_DARK_BLUE_4: #202641;\n$COLOR_DARK_BLUE_5: #2a3052;\n$COLOR_DARK_BLUE_6: #555975;\n$COLOR_DARK_BLUE_7: #7f8397;\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\n$COLOR_DARK_GRAY_1: #282a37;\n$COLOR_DARK_GRAY_2: #303342;\n$COLOR_DARK_GRAY_3: #555975;\n$COLOR_DARK_GRAY_4: #999999;\n/* stylelint-enable color-no-hex */\n\n$BORDER_RADIUS: 4px;\n$BORDER_RADIUS_2: 8px;\n\n$MAX_CONTAINER_WIDTH: 1440px;\n\n$POSITIONS_DRAWER_WIDTH: 240px;\n$POSITIONS_DRAWER_MARGIN: 8px;\n\n$HEADER_HEIGHT: 48px;\n$FOOTER_HEIGHT: 36px;\n\n$MOBILE_HEADER_HEIGHT: 40px;\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\n\n$SIDEBAR_WIDTH: 240px;\n\n/* Wallet gradient background */\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\n\n/* App Cards gradient background */\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\n\n/* Wallets */\n$ready-banner-bg-color: #e2f3f3;\n$ready-banner-tick-bg-color: #4ab4b3;\n$wallet-demo-bg-color: #fff8f9;\n$wallet-dark-demo-bg-color: #140506;\n$wallet-demo-divider-color: #fff0f1;\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\n\n/*------------------------------------*\n *  # SASS Mixins and Functions\n *------------------------------------*/\n\n/*\n * SASS interpolation\n */\n// Requires the calc-interpolation function which can also be used independently\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\n    $b: $min-value - $a * $min-screen;\n\n    $sign: '+';\n    @if ($b < 0) {\n        $sign: '-';\n        $b: abs($b);\n    }\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\n}\n\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\n    & {\n        @each $property in $properties {\n            #{$property}: $min-value;\n        }\n        @media screen and (min-width: $min-screen) {\n            @each $property in $properties {\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\n            }\n        }\n        @media screen and (min-width: $max-screen) {\n            @each $property in $properties {\n                #{$property}: $max-value;\n            }\n        }\n    }\n}\n\n/*\n * PX to EM\n * @param $px - px value to be converted\n * @param $base - base font size (in `em`)\n * Note: 'em' values are calculate based on the element font-size\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\n * Usage example:\n    padding: em(16px, 1.6em); // font-size in 'em'\n */\n@function em($px, $base: $BASE_FONT_SIZE) {\n    $list: ();\n    @if length($px) != 1 {\n        @for $i from 1 through length($px) {\n            $val_em: (nth($px, $i) / $base) * 1em;\n            $list: append($list, $val_em, space);\n        }\n        @return $list;\n    } @else {\n        @return ($px / $base) * 1em;\n    }\n}\n\n/*\n * Set property by passing a property name, and values.\n * @param $property name - padding, margin etc.\n * @param $values        - values in `px` (space separated for multiple values)\n * @param $font-size     - base font-size in `em`\n * Usage example:\n   @include toEm(padding, 8px 16px 8px, 1.6em);\n */\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\n    #{$property}: em($values, $font-size);\n}\n\n/*\n * Generate typefaces key-value pair of variable name and config\n * Example:\n   --paragraph-center-bold-black: (14px, center, bold, black)\n */\n@function generate-typefaces() {\n    $typeface_list: ();\n    @each $fontsize_name, $size in $FONT_SIZES {\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\n            @each $color_name, $color in $FONT_COLORS {\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\n                    $val: ($size, $text_align, $weight, $color);\n                    $typeface: (\n                        $key: $val,\n                    );\n                    $typeface_list: map-merge($typeface_list, $typeface);\n                }\n            }\n        }\n    }\n    // @debug $typeface_list; /* uncomment to debug */\n    @return $typeface_list;\n}\n\n/*\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\n * Usage example:\n   @include setTypeface(16px, bold, black, uppercase);\n */\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\n    @if $size {\n        font-size: $size;\n    }\n    @if $colour {\n        color: $colour;\n    }\n    @if $weight {\n        font-weight: $weight;\n    }\n    @if $tt {\n        text-transform: $tt;\n    }\n    @if $align {\n        text-align: $align;\n    }\n    @if $size == 1.6rem {\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\n    } @else if $size == 1.4rem {\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\n    } @else if $size == 1.2rem {\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\n    } @else if $size == 1rem {\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\n    } @else {\n        line-height: unset;\n    }\n}\n\n/*\n * Set typefaces by passing a typeface variable name\n * @param $var   - typeface variable\n * @param $tt    - text-transform property\n * @param $align - text-align property\n * Usage example:\n   @include typeface(--paragraph-bold-black, uppercase, center);\n */\n@mixin typeface($var, $tt: none) {\n    $typeface_config: map-get(\n        $map: $TYPEFACES_LIST,\n        $key: $var,\n    );\n\n    $size: nth($typeface_config, 1); // font-size\n    $align: nth($typeface_config, 2); // text-align\n    $weight: nth($typeface_config, 3); // font-weight\n    $color: nth($typeface_config, 4); // color\n    @include setTypeface($size, $align, $weight, $color, $tt);\n}\n\n/*\n * Range Slider Thumb styling is set here\n */\n@mixin thumbStyle() {\n    appearance: none;\n    width: 1em;\n    height: 1em;\n    border-radius: 100%;\n    border: 0;\n    cursor: pointer;\n    transition: box-shadow 0.2s;\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\n\n    &:hover {\n        box-shadow: 0 0 0 0.5em var(--state-hover);\n    }\n}\n\n/*\n * SVG icons colors\n */\n@mixin colorIcon($colors...) {\n    @for $i from 1 through length($colors) {\n        /* postcss-bem-linter: ignore */\n        .color#{$i}-fill {\n            fill: nth($colors, $i);\n        }\n        /* postcss-bem-linter: ignore */\n        .color#{$i}-stroke {\n            stroke: nth($colors, $i);\n        }\n    }\n}\n\n/*\n * Bar Spinner Animation\n * @param $count    - number of bars\n * @param $duration - duration of animation\n * @param $phase    - each bar phase change delay\n * Usage example:\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\n */\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\n    animation: sk-stretchdelay $duration infinite ease-in-out;\n\n    @for $i from 1 through $count {\n        &--#{$i} {\n            animation-delay: -$duration + (($i - 1) * $phase);\n        }\n    }\n}\n\n/*\n * Tooltip colors\n * @param $color - color property\n * Usage example:\n   @include tooltipColor($COLOR_RED);\n */\n@mixin tooltipColor($color) {\n    &:before {\n        background: $color;\n    }\n    &:after,\n    &[data-tooltip-pos='top']:after {\n        border-top-color: $color;\n    }\n    &[data-tooltip-pos='right']:after {\n        border-top-color: transparent;\n        border-right-color: $color;\n    }\n    &[data-tooltip-pos='left']:after {\n        border-top-color: transparent;\n        border-left-color: $color;\n    }\n    &[data-tooltip-pos='bottom']:after {\n        border-top-color: transparent;\n        border-bottom-color: $color;\n    }\n}\n\n/*\n * Convert Tooltip colors\n * @param $color - css color property\n * Usage example:\n   @include convertTooltipColor(var(--status-default));\n */\n@mixin convertTooltipColor($color) {\n    &:before {\n        background: $color;\n    }\n    &:after,\n    &[data-tooltip-pos='top']:after {\n        border-top-color: $color;\n    }\n    &[data-tooltip-pos='right']:after {\n        border-top-color: transparent;\n        border-right-color: $color;\n    }\n    &[data-tooltip-pos='left']:after {\n        border-top-color: transparent;\n        border-left-color: $color;\n    }\n    &[data-tooltip-pos='bottom']:after {\n        border-top-color: transparent;\n        border-bottom-color: $color;\n    }\n}\n\n/*\n    Constants\n*/\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\n$BASE_FONT_SIZE: 10px;\n\n/*\n    Variables\n*/\n$FONT_SIZES: (\n    'xheading' 3.2rem,\n    'heading' 3rem,\n    'large' 2.8rem,\n    'title' 1.6rem,\n    'paragraph' 1.4rem,\n    'small' 1.2rem,\n    'xsmall' 1rem,\n    'xxsmall' 0.8rem,\n    'xxxsmall' 0.6rem\n);\n\n$FONT_COLORS: (\n    'active' var(--text-colored-background),\n    'prominent' var(--text-prominent),\n    'black' var(--text-general),\n    'grey' var(--text-less-prominent),\n    'disabled' var(--text-disabled),\n    'green' var(--text-profit-success),\n    'red' var(--text-loss-danger)\n);\n\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\n\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\n\n$LINEHEIGHTS: (\n    'large': 1.75,\n    'medium': 1.5,\n    'small': 1.25,\n    'xsmall': 1.4,\n);\n\n/*\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\n    Variables name example: --title-center-semibold-red\n */\n$TYPEFACES_LIST: generate-typefaces();\n\n/*\n    to use styles without modifier class on .inline-icon\n    use @extend\n\n    e.g. style icon on parent hover:\n        a:hover .inline-icon {\n            @extend %inline-icon-active;\n        }\n*/\n\n%inline-icon {\n    @include colorIcon(var(--text-general), none);\n\n    &.active,\n    &-active {\n        @include colorIcon(var(--text-prominent), none);\n    }\n    &.disabled,\n    &-disabled {\n        @include colorIcon(var(--text-disabled), none);\n    }\n    &.white,\n    &-white {\n        @include colorIcon(var(--text-prominent));\n    }\n    &.border_hover_color,\n    &-border_hover_color {\n        @include colorIcon(var(--text-prominent));\n    }\n    &.secondary,\n    &-secondary {\n        @include colorIcon(var(--text-less-prominent));\n    }\n}\n\n/**\n * Define Breakpoints here.\n */\n$mobile-width: 320px;\n$tablet-width: 768px;\n$desktop-width: 1024px;\n\n@mixin tablet {\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\n        @content;\n    }\n}\n\n@mixin desktop {\n    @media (min-width: #{$desktop-width}) {\n        @content;\n    }\n}\n\n@mixin tablet-down {\n    @media (max-width: #{$tablet-width}) {\n        @content;\n    }\n}\n\n@mixin tablet-up {\n    @media (min-width: #{$tablet-width}) {\n        @content;\n    }\n}\n\n@mixin mobile-up {\n    @media (min-width: #{$mobile-width}) {\n        @content;\n    }\n}\n\n@mixin mobile {\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\n        @content;\n    }\n}\n\n@mixin mobile-landscape {\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\n        @content;\n    }\n}\n\n@mixin touch-device {\n    // add css interaction media query to detect touch devices\n    // refer to: https://caniuse.com/#feat=css-media-interaction\n    @media (pointer: coarse) {\n        @content;\n    }\n}\n\n@mixin mobile-tablet-mix {\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\n        @content;\n    }\n}\n\n/** Need to add new breakpoints for mixins */\n$max-mobile-width: 600px;\n$min-desktop-width: 1280px;\n\n@mixin mobile-screen {\n    @media (max-width: #{$max-mobile-width}) {\n        @content;\n    }\n}\n\n@mixin tablet-screen {\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\n        @content;\n    }\n}\n\n@mixin desktop-screen {\n    @media (min-width: #{$min-desktop-width}) {\n        @content;\n    }\n}\n\n@mixin mobile-or-tablet-screen {\n    @media (max-width: #{$min-desktop-width - 1}) {\n        @content;\n    }\n}\n\n@mixin tablet-or-desktop-screen {\n    @media (min-width: #{$max-mobile-width + 1}) {\n        @content;\n    }\n}\n\n@mixin tablet-portrait-screen {\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\n        @content;\n    }\n}\n\n@mixin mobile-or-tablet-landscape {\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\n        @content;\n    }\n}\n\n.buy-sell-modal-footer {\n    @include mobile-or-tablet-screen {\n        border-top: 2px solid var(--general-section-1);\n        display: flex;\n        flex-direction: row;\n        justify-content: flex-end;\n        margin-top: auto;\n        padding: 1.6rem;\n    }\n}\n"],sourceRoot:""}]);const l=i},80398:(n,e,r)=>{"use strict";r.r(e),r.d(e,{default:()=>l});var t=r(9372),a=r.n(t),o=r(40935),i=r.n(o)()(a());i.push([n.id,".buy-sell-modal-title{display:flex;align-items:center}.buy-sell-modal-title__icon{margin-right:.8rem}","",{version:3,sources:["webpack://./src/components/modal-manager/modals/buy-sell-modal/buy-sell-modal-title/buy-sell-modal-title.scss"],names:[],mappings:"AAysBA,sBACI,YAAA,CACA,kBAAA,CAEA,4BACI,kBAAA",sourcesContent:["/*------------------------------------*\n *  # Constants\n *------------------------------------*/\n\n/*RTL Language Mixin*/\n\n@mixin rtl {\n    [dir='rtl'] & {\n        @content;\n    }\n}\n\n/* stylelint-disable color-no-hex */\n\n/* COLOR PALETTE */\n\n/* colors */\n$color-black: #0e0e0e;\n$color-black-1: #333333;\n$color-black-3: #151717;\n$color-black-4: #1d1f20;\n$color-black-5: #242828;\n$color-black-6: #3e3e3e;\n$color-black-7: #000000;\n$color-black-8: #323738;\n$color-black-9: #5c5c5c;\n$color-black-10: #181c25;\n$color-blue: #377cfc;\n$color-blue-1: #0dc2e7;\n$color-blue-2: #2a3052;\n$color-blue-3: #0796e0;\n$color-blue-4: #0677af;\n$color-blue-5: #dfeaff;\n$color-blue-6: #92b8ff;\n$color-blue-7: #182130;\n$color-blue-8: #e6f5ff;\n$color-blue-9: #00426a;\n$color-brown: #664407;\n$color-green: #85acb0;\n$color-green-1: #4bb4b3;\n$color-green-2: #3d9494;\n$color-green-3: #00a79e;\n$color-green-4: #008079;\n$color-green-5: #4bb4b329;\n$color-green-6: #17eabd;\n$color-green-7: #e8fdf8;\n$color-green-8: #cedddf;\n$color-grey: #c2c2c2;\n$color-grey-1: #999999;\n$color-grey-2: #f2f3f4;\n$color-grey-3: #eaeced;\n$color-grey-4: #e6e9e9;\n$color-grey-5: #d6dadb;\n$color-grey-6: #d6d6d6;\n$color-grey-7: #6e6e6e;\n$color-grey-8: #d7d7d7;\n$color_grey-9: #868686;\n$color-grey-10: #919191;\n$color-grey-11: #fafafa;\n$color-grey-12: #f5f7fa;\n$color-grey-13: #2e2e2e;\n$color-grey-14: #e2e5e7;\n$color-grey-15: #f3f4f5;\n$color-orange: #ff6444;\n$color-orange-2: #ff9c13;\n$color-purple: #722fe4;\n$color-red: #ff444f;\n$color-red-1: #ec3f3f;\n$color-red-2: #cc2e3d;\n$color-red-3: #a32430;\n$color-red-4: #d33636;\n$color-red-5: #eb3e48;\n$color-red-6: #ec3f3f29;\n$color-red-7: #ffe1e3;\n$color-red-8: #661b20;\n$color-red-9: #b33037;\n$color-red-10: #ff444f;\n$color-red-11: #fce3e3;\n$color-red-12: #c40000;\n$color-violet: #4a3871;\n$color-white: #ffffff;\n$color-yellow: #ffad3a;\n$color-yellow-1: #b3760d;\n$color-yellow-2: #ffa912;\n$color-yellow-3: rgba(255, 173, 58, 0.16);\n$color-yellow-4: #fff7e6;\n$color-yellow-5: #6a4800;\n$color-yellow-6: #ffeabf;\n\n/* status colors */\n$color-status-warning: rgba(255, 173, 58, 0.16);\n$color-status-information: rgba(55, 124, 252, 0.16);\n$color-status-announcement: rgba(75, 180, 179, 0.16);\n$color-status-error: rgba(236, 63, 63, 0.16);\n$color-status-verified: rgba(0, 122, 34);\n$color-status-danger: rgba(196, 0, 0);\n\n/* alpha colors */\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\n$alpha-color-black-2: transparentize($color-black, 0.04);\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\n$alpha-color-black-7: transparentize($color-black, 0.5);\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\n$alpha-color-white-1: transparentize($color-white, 0.04);\n$alpha-color-white-2: transparentize($color-white, 0.84);\n$alpha-color-white-3: transparentize($color-white, 0.92);\n$alpha-color-white-4: transparentize($color-white, 0.3);\n$alpha-color-red-1: transparentize($color-red, 0.92);\n$alpha-color-red-2: transparentize($color-red, 0.84);\n$alpha-color-red-3: transparentize($color-red, 0.76);\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\n\n/* gradient colors */\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\n\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\n\n/* Preserve legacy variables */\n/* Primary */\n\n$COLOR_BLACK: #000000;\n$COLOR_BLACK_2: #1d1f20;\n$COLOR_BLACK_3: #0e0e0e;\n$COLOR_GREEN_1: #39b19d;\n$COLOR_GREEN_2: #2d9f93;\n$COLOR_GREEN_3: #21ce99;\n$COLOR_GREEN_4: #00a79e;\n$COLOR_GREEN_5: #4bb4b3;\n$COLOR_ORANGE: #ff9933;\n$COLOR_DARK_ORANGE: #ff8802;\n$COLOR_PURPLE: #4f60ae;\n$COLOR_RED: #e31c4b;\n$COLOR_RED_2: #cc2e3d;\n$COLOR_RED_3: #ec3f3f;\n$COLOR_CORAL_RED: #ff444f;\n$COLOR_SKY_BLUE: #2196f3;\n$COLOR_WHITE: #ffffff;\n$COLOR_BLUE: #1c5ae3;\n\n// Light theme\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\n$COLOR_LIGHT_GRAY_1: #999cac;\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\n$COLOR_LIGHT_GRAY_3: #eaeced;\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\n// Dark theme\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\n$COLOR_DARK_BLUE_1: #0b0e18;\n$COLOR_DARK_BLUE_2: #101320;\n$COLOR_DARK_BLUE_3: #191c31;\n$COLOR_DARK_BLUE_4: #202641;\n$COLOR_DARK_BLUE_5: #2a3052;\n$COLOR_DARK_BLUE_6: #555975;\n$COLOR_DARK_BLUE_7: #7f8397;\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\n$COLOR_DARK_GRAY_1: #282a37;\n$COLOR_DARK_GRAY_2: #303342;\n$COLOR_DARK_GRAY_3: #555975;\n$COLOR_DARK_GRAY_4: #999999;\n/* stylelint-enable color-no-hex */\n\n$BORDER_RADIUS: 4px;\n$BORDER_RADIUS_2: 8px;\n\n$MAX_CONTAINER_WIDTH: 1440px;\n\n$POSITIONS_DRAWER_WIDTH: 240px;\n$POSITIONS_DRAWER_MARGIN: 8px;\n\n$HEADER_HEIGHT: 48px;\n$FOOTER_HEIGHT: 36px;\n\n$MOBILE_HEADER_HEIGHT: 40px;\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\n\n$SIDEBAR_WIDTH: 240px;\n\n/* Wallet gradient background */\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\n\n/* App Cards gradient background */\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\n\n/* Wallets */\n$ready-banner-bg-color: #e2f3f3;\n$ready-banner-tick-bg-color: #4ab4b3;\n$wallet-demo-bg-color: #fff8f9;\n$wallet-dark-demo-bg-color: #140506;\n$wallet-demo-divider-color: #fff0f1;\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\n\n/*------------------------------------*\n *  # SASS Mixins and Functions\n *------------------------------------*/\n\n/*\n * SASS interpolation\n */\n// Requires the calc-interpolation function which can also be used independently\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\n    $b: $min-value - $a * $min-screen;\n\n    $sign: '+';\n    @if ($b < 0) {\n        $sign: '-';\n        $b: abs($b);\n    }\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\n}\n\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\n    & {\n        @each $property in $properties {\n            #{$property}: $min-value;\n        }\n        @media screen and (min-width: $min-screen) {\n            @each $property in $properties {\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\n            }\n        }\n        @media screen and (min-width: $max-screen) {\n            @each $property in $properties {\n                #{$property}: $max-value;\n            }\n        }\n    }\n}\n\n/*\n * PX to EM\n * @param $px - px value to be converted\n * @param $base - base font size (in `em`)\n * Note: 'em' values are calculate based on the element font-size\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\n * Usage example:\n    padding: em(16px, 1.6em); // font-size in 'em'\n */\n@function em($px, $base: $BASE_FONT_SIZE) {\n    $list: ();\n    @if length($px) != 1 {\n        @for $i from 1 through length($px) {\n            $val_em: (nth($px, $i) / $base) * 1em;\n            $list: append($list, $val_em, space);\n        }\n        @return $list;\n    } @else {\n        @return ($px / $base) * 1em;\n    }\n}\n\n/*\n * Set property by passing a property name, and values.\n * @param $property name - padding, margin etc.\n * @param $values        - values in `px` (space separated for multiple values)\n * @param $font-size     - base font-size in `em`\n * Usage example:\n   @include toEm(padding, 8px 16px 8px, 1.6em);\n */\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\n    #{$property}: em($values, $font-size);\n}\n\n/*\n * Generate typefaces key-value pair of variable name and config\n * Example:\n   --paragraph-center-bold-black: (14px, center, bold, black)\n */\n@function generate-typefaces() {\n    $typeface_list: ();\n    @each $fontsize_name, $size in $FONT_SIZES {\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\n            @each $color_name, $color in $FONT_COLORS {\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\n                    $val: ($size, $text_align, $weight, $color);\n                    $typeface: (\n                        $key: $val,\n                    );\n                    $typeface_list: map-merge($typeface_list, $typeface);\n                }\n            }\n        }\n    }\n    // @debug $typeface_list; /* uncomment to debug */\n    @return $typeface_list;\n}\n\n/*\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\n * Usage example:\n   @include setTypeface(16px, bold, black, uppercase);\n */\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\n    @if $size {\n        font-size: $size;\n    }\n    @if $colour {\n        color: $colour;\n    }\n    @if $weight {\n        font-weight: $weight;\n    }\n    @if $tt {\n        text-transform: $tt;\n    }\n    @if $align {\n        text-align: $align;\n    }\n    @if $size == 1.6rem {\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\n    } @else if $size == 1.4rem {\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\n    } @else if $size == 1.2rem {\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\n    } @else if $size == 1rem {\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\n    } @else {\n        line-height: unset;\n    }\n}\n\n/*\n * Set typefaces by passing a typeface variable name\n * @param $var   - typeface variable\n * @param $tt    - text-transform property\n * @param $align - text-align property\n * Usage example:\n   @include typeface(--paragraph-bold-black, uppercase, center);\n */\n@mixin typeface($var, $tt: none) {\n    $typeface_config: map-get(\n        $map: $TYPEFACES_LIST,\n        $key: $var,\n    );\n\n    $size: nth($typeface_config, 1); // font-size\n    $align: nth($typeface_config, 2); // text-align\n    $weight: nth($typeface_config, 3); // font-weight\n    $color: nth($typeface_config, 4); // color\n    @include setTypeface($size, $align, $weight, $color, $tt);\n}\n\n/*\n * Range Slider Thumb styling is set here\n */\n@mixin thumbStyle() {\n    appearance: none;\n    width: 1em;\n    height: 1em;\n    border-radius: 100%;\n    border: 0;\n    cursor: pointer;\n    transition: box-shadow 0.2s;\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\n\n    &:hover {\n        box-shadow: 0 0 0 0.5em var(--state-hover);\n    }\n}\n\n/*\n * SVG icons colors\n */\n@mixin colorIcon($colors...) {\n    @for $i from 1 through length($colors) {\n        /* postcss-bem-linter: ignore */\n        .color#{$i}-fill {\n            fill: nth($colors, $i);\n        }\n        /* postcss-bem-linter: ignore */\n        .color#{$i}-stroke {\n            stroke: nth($colors, $i);\n        }\n    }\n}\n\n/*\n * Bar Spinner Animation\n * @param $count    - number of bars\n * @param $duration - duration of animation\n * @param $phase    - each bar phase change delay\n * Usage example:\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\n */\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\n    animation: sk-stretchdelay $duration infinite ease-in-out;\n\n    @for $i from 1 through $count {\n        &--#{$i} {\n            animation-delay: -$duration + (($i - 1) * $phase);\n        }\n    }\n}\n\n/*\n * Tooltip colors\n * @param $color - color property\n * Usage example:\n   @include tooltipColor($COLOR_RED);\n */\n@mixin tooltipColor($color) {\n    &:before {\n        background: $color;\n    }\n    &:after,\n    &[data-tooltip-pos='top']:after {\n        border-top-color: $color;\n    }\n    &[data-tooltip-pos='right']:after {\n        border-top-color: transparent;\n        border-right-color: $color;\n    }\n    &[data-tooltip-pos='left']:after {\n        border-top-color: transparent;\n        border-left-color: $color;\n    }\n    &[data-tooltip-pos='bottom']:after {\n        border-top-color: transparent;\n        border-bottom-color: $color;\n    }\n}\n\n/*\n * Convert Tooltip colors\n * @param $color - css color property\n * Usage example:\n   @include convertTooltipColor(var(--status-default));\n */\n@mixin convertTooltipColor($color) {\n    &:before {\n        background: $color;\n    }\n    &:after,\n    &[data-tooltip-pos='top']:after {\n        border-top-color: $color;\n    }\n    &[data-tooltip-pos='right']:after {\n        border-top-color: transparent;\n        border-right-color: $color;\n    }\n    &[data-tooltip-pos='left']:after {\n        border-top-color: transparent;\n        border-left-color: $color;\n    }\n    &[data-tooltip-pos='bottom']:after {\n        border-top-color: transparent;\n        border-bottom-color: $color;\n    }\n}\n\n/*\n    Constants\n*/\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\n$BASE_FONT_SIZE: 10px;\n\n/*\n    Variables\n*/\n$FONT_SIZES: (\n    'xheading' 3.2rem,\n    'heading' 3rem,\n    'large' 2.8rem,\n    'title' 1.6rem,\n    'paragraph' 1.4rem,\n    'small' 1.2rem,\n    'xsmall' 1rem,\n    'xxsmall' 0.8rem,\n    'xxxsmall' 0.6rem\n);\n\n$FONT_COLORS: (\n    'active' var(--text-colored-background),\n    'prominent' var(--text-prominent),\n    'black' var(--text-general),\n    'grey' var(--text-less-prominent),\n    'disabled' var(--text-disabled),\n    'green' var(--text-profit-success),\n    'red' var(--text-loss-danger)\n);\n\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\n\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\n\n$LINEHEIGHTS: (\n    'large': 1.75,\n    'medium': 1.5,\n    'small': 1.25,\n    'xsmall': 1.4,\n);\n\n/*\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\n    Variables name example: --title-center-semibold-red\n */\n$TYPEFACES_LIST: generate-typefaces();\n\n/*\n    to use styles without modifier class on .inline-icon\n    use @extend\n\n    e.g. style icon on parent hover:\n        a:hover .inline-icon {\n            @extend %inline-icon-active;\n        }\n*/\n\n%inline-icon {\n    @include colorIcon(var(--text-general), none);\n\n    &.active,\n    &-active {\n        @include colorIcon(var(--text-prominent), none);\n    }\n    &.disabled,\n    &-disabled {\n        @include colorIcon(var(--text-disabled), none);\n    }\n    &.white,\n    &-white {\n        @include colorIcon(var(--text-prominent));\n    }\n    &.border_hover_color,\n    &-border_hover_color {\n        @include colorIcon(var(--text-prominent));\n    }\n    &.secondary,\n    &-secondary {\n        @include colorIcon(var(--text-less-prominent));\n    }\n}\n\n/**\n * Define Breakpoints here.\n */\n$mobile-width: 320px;\n$tablet-width: 768px;\n$desktop-width: 1024px;\n\n@mixin tablet {\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\n        @content;\n    }\n}\n\n@mixin desktop {\n    @media (min-width: #{$desktop-width}) {\n        @content;\n    }\n}\n\n@mixin tablet-down {\n    @media (max-width: #{$tablet-width}) {\n        @content;\n    }\n}\n\n@mixin tablet-up {\n    @media (min-width: #{$tablet-width}) {\n        @content;\n    }\n}\n\n@mixin mobile-up {\n    @media (min-width: #{$mobile-width}) {\n        @content;\n    }\n}\n\n@mixin mobile {\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\n        @content;\n    }\n}\n\n@mixin mobile-landscape {\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\n        @content;\n    }\n}\n\n@mixin touch-device {\n    // add css interaction media query to detect touch devices\n    // refer to: https://caniuse.com/#feat=css-media-interaction\n    @media (pointer: coarse) {\n        @content;\n    }\n}\n\n@mixin mobile-tablet-mix {\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\n        @content;\n    }\n}\n\n/** Need to add new breakpoints for mixins */\n$max-mobile-width: 600px;\n$min-desktop-width: 1280px;\n\n@mixin mobile-screen {\n    @media (max-width: #{$max-mobile-width}) {\n        @content;\n    }\n}\n\n@mixin tablet-screen {\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\n        @content;\n    }\n}\n\n@mixin desktop-screen {\n    @media (min-width: #{$min-desktop-width}) {\n        @content;\n    }\n}\n\n@mixin mobile-or-tablet-screen {\n    @media (max-width: #{$min-desktop-width - 1}) {\n        @content;\n    }\n}\n\n@mixin tablet-or-desktop-screen {\n    @media (min-width: #{$max-mobile-width + 1}) {\n        @content;\n    }\n}\n\n@mixin tablet-portrait-screen {\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\n        @content;\n    }\n}\n\n@mixin mobile-or-tablet-landscape {\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\n        @content;\n    }\n}\n\n.buy-sell-modal-title {\n    display: flex;\n    align-items: center;\n\n    &__icon {\n        margin-right: 0.8rem;\n    }\n}\n"],sourceRoot:""}]);const l=i},32642:(n,e,r)=>{"use strict";r.r(e),r.d(e,{default:()=>l});var t=r(9372),a=r.n(t),o=r(40935),i=r.n(o)()(a());i.push([n.id,".buy-sell-modal{opacity:1 !important}@media(max-width: 1279px){.buy-sell-modal .dc-mobile-full-page-modal__header--border-bottom{border-bottom:2px solid var(--general-section-1)}}.buy-sell-modal__body{position:relative;display:block;padding-top:2.4rem}@media(max-width: 1279px){.buy-sell-modal__body>form{height:-moz-fit-content !important;height:fit-content !important}}@media(max-width: 1279px){.buy-sell-modal__footer{border-top:2px solid var(--general-section-1);display:flex;flex-direction:row;justify-content:flex-end;margin-top:auto;padding:1.6rem}}.buy-sell-modal__layout{padding:0;padding:initial}.buy-sell-modal-field{margin-bottom:0 !important}.buy-sell-modal-field{flex:1;height:-moz-fit-content;height:fit-content}.buy-sell-modal-field .dc-input__container{width:91%;padding:.5rem 1rem .5rem 1.2rem}.buy-sell-modal-field--disable{opacity:.32}.buy-sell-modal-field--textarea{border-top:1px solid var(--general-section-5);margin-bottom:3.5rem;padding:1.8rem 2.4rem 0}.buy-sell-modal-field--textarea .dc-input__container{height:9.7rem}.buy-sell-modal-field--textarea .dc-input__field{height:100% !important}.buy-sell-modal-field-wrapper{display:flex;margin:-2.4rem 0 1.6rem -2.4rem;padding:0 2.4rem;word-break:break-word}.buy-sell-modal-field-wrapper>*{margin:2.4rem 0 0 2.4rem}@media(max-width: 1279px){.buy-sell-modal-field-wrapper{flex-direction:column}.buy-sell-modal-field-wrapper .dc-input__wrapper{margin-top:2.5rem;width:90vw}}.buy-sell-modal-field-wrapper>.dc-input{margin-top:1rem}.buy-sell-modal__form{height:-moz-fit-content !important;height:fit-content !important}.buy-sell-modal-hintbox{margin:-0.5rem 0 2.4rem;padding:0 2.4rem}.buy-sell-modal-hintbox .dc-hint-box__icon{align-self:flex-start}.buy-sell-modal__icon{margin-right:.8rem}.buy-sell-modal-line{border-top:1px solid var(--general-section-5);margin:1.6rem 0;width:100%}.buy-sell-modal-payment-method{padding:0 2.4rem}.buy-sell-modal-payment-method--container{align-self:center;display:flex;flex-direction:column;margin-bottom:1.6rem;padding:0 2.4rem}.buy-sell-modal-payment-method--icon{border-radius:2px;margin-right:.8rem}.buy-sell-modal-payment-method--row{align-items:center;display:flex;flex-direction:row;margin-bottom:.8rem}.buy-sell-modal-payment-method--title{margin-bottom:.8rem}.buy-sell-modal--input{display:flex;gap:2rem;flex-direction:column;padding:0 2.4rem 2rem;margin-bottom:2rem}.buy-sell-modal--input .dc-input__wrapper{margin-right:.2rem;margin-bottom:0;margin-bottom:initial}@media(min-width: 1280px){.buy-sell-modal--input-field{display:flex}}@media(max-width: 1279px){.buy-sell-modal--input .dc-input__container{width:100%;padding:.5rem 1rem .5rem 1.2rem}.buy-sell-modal--input .dc-input__wrapper{margin:.8rem .2rem 1.4rem 0}}.buy-sell-modal--sell-payment-methods{display:flex;flex-wrap:wrap;gap:.8rem;margin:1.6rem 0 2.4rem}.buy-sell-modal--sell-payment-methods .payment-method-card{margin:0;margin:initial}@media(max-width: 1279px){.buy-sell-modal--sell-payment-methods .payment-method-card{min-height:8.8rem;min-width:0;min-width:initial;width:13.6rem}}.buy-sell-modal--sell-payment-methods .payment-method-card--add{margin:0;margin:initial}@media(max-width: 1279px){.buy-sell-modal--sell-payment-methods .payment-method-card--add{min-height:8.8rem;width:13.6rem}}.buy-sell-modal--sell-payment-methods .payment-method-card__body{margin-top:.8rem}@media(max-width: 1279px){.buy-sell-modal--sell-payment-methods .payment-method-card__body{margin-top:0}}.buy-sell-modal--sell-payment-methods--disable{opacity:.32}.buy-sell-modal__content .dc-input{margin-bottom:0;margin-bottom:initial}.dc-modal__container_buy-sell-modal .dc-modal-header--buy-sell-modal{border-bottom:2px solid var(--general-section-5)}.dc-modal__container_buy-sell-modal .dc-modal-footer--separator{margin-top:1rem;border-top:2px solid var(--general-section-5)}@media(min-width: 1280px){.notification-messages{z-index:9999}}","",{version:3,sources:["webpack://./src/components/modal-manager/modals/buy-sell-modal/buy-sell-modal.scss"],names:[],mappings:"AAysBA,gBACI,oBAAA,CAxBA,0BA2BI,kEACI,gDAAA,CAAA,CAIR,sBACI,iBAAA,CACA,aAAA,CACA,kBAAA,CAnCJ,0BAsCQ,2BACI,kCAAA,CAAA,6BAAA,CAAA,CAvCZ,0BA4CA,wBAEQ,6CAAA,CACA,YAAA,CACA,kBAAA,CACA,wBAAA,CACA,eAAA,CACA,cAAA,CAAA,CAIR,wBACI,SAAA,CAAA,eAAA,CAGJ,sBACI,0BAEA,CAHJ,sBAEI,MAAA,CACA,uBAAA,CAAA,kBAAA,CAEA,2CACI,SAAA,CACA,+BAAA,CAGJ,+BACI,WAAA,CAGJ,gCACI,6CAAA,CACA,oBAAA,CACA,uBAAA,CAGI,qDACI,aAAA,CAEJ,iDACI,sBAAA,CAKZ,8BAEI,YAAA,CACA,+BAAA,CACA,gBAAA,CACA,qBAAA,CAEA,gCACI,wBAAA,CAhGZ,0BAwFI,8BAYQ,qBAAA,CAEA,iDACI,iBAAA,CACA,UAAA,CAAA,CAIR,wCACI,eAAA,CAKZ,sBACI,kCAAA,CAAA,6BAAA,CAGJ,wBACI,uBAAA,CACA,gBAAA,CAGI,2CACI,qBAAA,CAKZ,sBACI,kBAAA,CAGJ,qBACI,6CAAA,CACA,eAAA,CACA,UAAA,CAGJ,+BACI,gBAAA,CACA,0CACI,iBAAA,CACA,YAAA,CACA,qBAAA,CACA,oBAAA,CACA,gBAAA,CAGJ,qCACI,iBAAA,CACA,kBAAA,CAGJ,oCACI,kBAAA,CACA,YAAA,CACA,kBAAA,CACA,mBAAA,CAGJ,sCACI,mBAAA,CAIR,uBACI,YAAA,CACA,QAAA,CACA,qBAAA,CACA,qBAAA,CACA,kBAAA,CACA,0CACI,kBAAA,CACA,eAAA,CAAA,qBAAA,CApLR,0BAuLI,6BAEQ,YAAA,CAAA,CAnLZ,0BAwLY,4CACI,UAAA,CACA,+BAAA,CAEJ,0CACI,2BAAA,CAAA,CAMhB,sCACI,YAAA,CACA,cAAA,CACA,SAAA,CACA,sBAAA,CAEA,2DACI,QAAA,CAAA,cAAA,CA1MR,0BAyMI,2DAIQ,iBAAA,CACA,WAAA,CAAA,iBAAA,CACA,aAAA,CAAA,CAGJ,gEACI,QAAA,CAAA,cAAA,CAnNZ,0BAkNQ,gEAIQ,iBAAA,CACA,aAAA,CAAA,CAGR,iEACI,gBAAA,CA3NZ,0BA0NQ,iEAIQ,YAAA,CAAA,CAKZ,+CACI,WAAA,CAMR,mCACI,eAAA,CAAA,qBAAA,CAIJ,qEACI,gDAAA,CAGJ,gEACI,eAAA,CACA,6CAAA,CA3PJ,0BA+PJ,uBAEQ,YAAA,CAAA",sourcesContent:["/*------------------------------------*\n *  # Constants\n *------------------------------------*/\n\n/*RTL Language Mixin*/\n\n@mixin rtl {\n    [dir='rtl'] & {\n        @content;\n    }\n}\n\n/* stylelint-disable color-no-hex */\n\n/* COLOR PALETTE */\n\n/* colors */\n$color-black: #0e0e0e;\n$color-black-1: #333333;\n$color-black-3: #151717;\n$color-black-4: #1d1f20;\n$color-black-5: #242828;\n$color-black-6: #3e3e3e;\n$color-black-7: #000000;\n$color-black-8: #323738;\n$color-black-9: #5c5c5c;\n$color-black-10: #181c25;\n$color-blue: #377cfc;\n$color-blue-1: #0dc2e7;\n$color-blue-2: #2a3052;\n$color-blue-3: #0796e0;\n$color-blue-4: #0677af;\n$color-blue-5: #dfeaff;\n$color-blue-6: #92b8ff;\n$color-blue-7: #182130;\n$color-blue-8: #e6f5ff;\n$color-blue-9: #00426a;\n$color-brown: #664407;\n$color-green: #85acb0;\n$color-green-1: #4bb4b3;\n$color-green-2: #3d9494;\n$color-green-3: #00a79e;\n$color-green-4: #008079;\n$color-green-5: #4bb4b329;\n$color-green-6: #17eabd;\n$color-green-7: #e8fdf8;\n$color-green-8: #cedddf;\n$color-grey: #c2c2c2;\n$color-grey-1: #999999;\n$color-grey-2: #f2f3f4;\n$color-grey-3: #eaeced;\n$color-grey-4: #e6e9e9;\n$color-grey-5: #d6dadb;\n$color-grey-6: #d6d6d6;\n$color-grey-7: #6e6e6e;\n$color-grey-8: #d7d7d7;\n$color_grey-9: #868686;\n$color-grey-10: #919191;\n$color-grey-11: #fafafa;\n$color-grey-12: #f5f7fa;\n$color-grey-13: #2e2e2e;\n$color-grey-14: #e2e5e7;\n$color-grey-15: #f3f4f5;\n$color-orange: #ff6444;\n$color-orange-2: #ff9c13;\n$color-purple: #722fe4;\n$color-red: #ff444f;\n$color-red-1: #ec3f3f;\n$color-red-2: #cc2e3d;\n$color-red-3: #a32430;\n$color-red-4: #d33636;\n$color-red-5: #eb3e48;\n$color-red-6: #ec3f3f29;\n$color-red-7: #ffe1e3;\n$color-red-8: #661b20;\n$color-red-9: #b33037;\n$color-red-10: #ff444f;\n$color-red-11: #fce3e3;\n$color-red-12: #c40000;\n$color-violet: #4a3871;\n$color-white: #ffffff;\n$color-yellow: #ffad3a;\n$color-yellow-1: #b3760d;\n$color-yellow-2: #ffa912;\n$color-yellow-3: rgba(255, 173, 58, 0.16);\n$color-yellow-4: #fff7e6;\n$color-yellow-5: #6a4800;\n$color-yellow-6: #ffeabf;\n\n/* status colors */\n$color-status-warning: rgba(255, 173, 58, 0.16);\n$color-status-information: rgba(55, 124, 252, 0.16);\n$color-status-announcement: rgba(75, 180, 179, 0.16);\n$color-status-error: rgba(236, 63, 63, 0.16);\n$color-status-verified: rgba(0, 122, 34);\n$color-status-danger: rgba(196, 0, 0);\n\n/* alpha colors */\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\n$alpha-color-black-2: transparentize($color-black, 0.04);\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\n$alpha-color-black-7: transparentize($color-black, 0.5);\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\n$alpha-color-white-1: transparentize($color-white, 0.04);\n$alpha-color-white-2: transparentize($color-white, 0.84);\n$alpha-color-white-3: transparentize($color-white, 0.92);\n$alpha-color-white-4: transparentize($color-white, 0.3);\n$alpha-color-red-1: transparentize($color-red, 0.92);\n$alpha-color-red-2: transparentize($color-red, 0.84);\n$alpha-color-red-3: transparentize($color-red, 0.76);\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\n\n/* gradient colors */\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\n\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\n\n/* Preserve legacy variables */\n/* Primary */\n\n$COLOR_BLACK: #000000;\n$COLOR_BLACK_2: #1d1f20;\n$COLOR_BLACK_3: #0e0e0e;\n$COLOR_GREEN_1: #39b19d;\n$COLOR_GREEN_2: #2d9f93;\n$COLOR_GREEN_3: #21ce99;\n$COLOR_GREEN_4: #00a79e;\n$COLOR_GREEN_5: #4bb4b3;\n$COLOR_ORANGE: #ff9933;\n$COLOR_DARK_ORANGE: #ff8802;\n$COLOR_PURPLE: #4f60ae;\n$COLOR_RED: #e31c4b;\n$COLOR_RED_2: #cc2e3d;\n$COLOR_RED_3: #ec3f3f;\n$COLOR_CORAL_RED: #ff444f;\n$COLOR_SKY_BLUE: #2196f3;\n$COLOR_WHITE: #ffffff;\n$COLOR_BLUE: #1c5ae3;\n\n// Light theme\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\n$COLOR_LIGHT_GRAY_1: #999cac;\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\n$COLOR_LIGHT_GRAY_3: #eaeced;\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\n// Dark theme\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\n$COLOR_DARK_BLUE_1: #0b0e18;\n$COLOR_DARK_BLUE_2: #101320;\n$COLOR_DARK_BLUE_3: #191c31;\n$COLOR_DARK_BLUE_4: #202641;\n$COLOR_DARK_BLUE_5: #2a3052;\n$COLOR_DARK_BLUE_6: #555975;\n$COLOR_DARK_BLUE_7: #7f8397;\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\n$COLOR_DARK_GRAY_1: #282a37;\n$COLOR_DARK_GRAY_2: #303342;\n$COLOR_DARK_GRAY_3: #555975;\n$COLOR_DARK_GRAY_4: #999999;\n/* stylelint-enable color-no-hex */\n\n$BORDER_RADIUS: 4px;\n$BORDER_RADIUS_2: 8px;\n\n$MAX_CONTAINER_WIDTH: 1440px;\n\n$POSITIONS_DRAWER_WIDTH: 240px;\n$POSITIONS_DRAWER_MARGIN: 8px;\n\n$HEADER_HEIGHT: 48px;\n$FOOTER_HEIGHT: 36px;\n\n$MOBILE_HEADER_HEIGHT: 40px;\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\n\n$SIDEBAR_WIDTH: 240px;\n\n/* Wallet gradient background */\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\n\n/* App Cards gradient background */\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\n\n/* Wallets */\n$ready-banner-bg-color: #e2f3f3;\n$ready-banner-tick-bg-color: #4ab4b3;\n$wallet-demo-bg-color: #fff8f9;\n$wallet-dark-demo-bg-color: #140506;\n$wallet-demo-divider-color: #fff0f1;\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\n\n/*------------------------------------*\n *  # SASS Mixins and Functions\n *------------------------------------*/\n\n/*\n * SASS interpolation\n */\n// Requires the calc-interpolation function which can also be used independently\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\n    $b: $min-value - $a * $min-screen;\n\n    $sign: '+';\n    @if ($b < 0) {\n        $sign: '-';\n        $b: abs($b);\n    }\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\n}\n\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\n    & {\n        @each $property in $properties {\n            #{$property}: $min-value;\n        }\n        @media screen and (min-width: $min-screen) {\n            @each $property in $properties {\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\n            }\n        }\n        @media screen and (min-width: $max-screen) {\n            @each $property in $properties {\n                #{$property}: $max-value;\n            }\n        }\n    }\n}\n\n/*\n * PX to EM\n * @param $px - px value to be converted\n * @param $base - base font size (in `em`)\n * Note: 'em' values are calculate based on the element font-size\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\n * Usage example:\n    padding: em(16px, 1.6em); // font-size in 'em'\n */\n@function em($px, $base: $BASE_FONT_SIZE) {\n    $list: ();\n    @if length($px) != 1 {\n        @for $i from 1 through length($px) {\n            $val_em: (nth($px, $i) / $base) * 1em;\n            $list: append($list, $val_em, space);\n        }\n        @return $list;\n    } @else {\n        @return ($px / $base) * 1em;\n    }\n}\n\n/*\n * Set property by passing a property name, and values.\n * @param $property name - padding, margin etc.\n * @param $values        - values in `px` (space separated for multiple values)\n * @param $font-size     - base font-size in `em`\n * Usage example:\n   @include toEm(padding, 8px 16px 8px, 1.6em);\n */\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\n    #{$property}: em($values, $font-size);\n}\n\n/*\n * Generate typefaces key-value pair of variable name and config\n * Example:\n   --paragraph-center-bold-black: (14px, center, bold, black)\n */\n@function generate-typefaces() {\n    $typeface_list: ();\n    @each $fontsize_name, $size in $FONT_SIZES {\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\n            @each $color_name, $color in $FONT_COLORS {\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\n                    $val: ($size, $text_align, $weight, $color);\n                    $typeface: (\n                        $key: $val,\n                    );\n                    $typeface_list: map-merge($typeface_list, $typeface);\n                }\n            }\n        }\n    }\n    // @debug $typeface_list; /* uncomment to debug */\n    @return $typeface_list;\n}\n\n/*\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\n * Usage example:\n   @include setTypeface(16px, bold, black, uppercase);\n */\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\n    @if $size {\n        font-size: $size;\n    }\n    @if $colour {\n        color: $colour;\n    }\n    @if $weight {\n        font-weight: $weight;\n    }\n    @if $tt {\n        text-transform: $tt;\n    }\n    @if $align {\n        text-align: $align;\n    }\n    @if $size == 1.6rem {\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\n    } @else if $size == 1.4rem {\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\n    } @else if $size == 1.2rem {\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\n    } @else if $size == 1rem {\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\n    } @else {\n        line-height: unset;\n    }\n}\n\n/*\n * Set typefaces by passing a typeface variable name\n * @param $var   - typeface variable\n * @param $tt    - text-transform property\n * @param $align - text-align property\n * Usage example:\n   @include typeface(--paragraph-bold-black, uppercase, center);\n */\n@mixin typeface($var, $tt: none) {\n    $typeface_config: map-get(\n        $map: $TYPEFACES_LIST,\n        $key: $var,\n    );\n\n    $size: nth($typeface_config, 1); // font-size\n    $align: nth($typeface_config, 2); // text-align\n    $weight: nth($typeface_config, 3); // font-weight\n    $color: nth($typeface_config, 4); // color\n    @include setTypeface($size, $align, $weight, $color, $tt);\n}\n\n/*\n * Range Slider Thumb styling is set here\n */\n@mixin thumbStyle() {\n    appearance: none;\n    width: 1em;\n    height: 1em;\n    border-radius: 100%;\n    border: 0;\n    cursor: pointer;\n    transition: box-shadow 0.2s;\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\n\n    &:hover {\n        box-shadow: 0 0 0 0.5em var(--state-hover);\n    }\n}\n\n/*\n * SVG icons colors\n */\n@mixin colorIcon($colors...) {\n    @for $i from 1 through length($colors) {\n        /* postcss-bem-linter: ignore */\n        .color#{$i}-fill {\n            fill: nth($colors, $i);\n        }\n        /* postcss-bem-linter: ignore */\n        .color#{$i}-stroke {\n            stroke: nth($colors, $i);\n        }\n    }\n}\n\n/*\n * Bar Spinner Animation\n * @param $count    - number of bars\n * @param $duration - duration of animation\n * @param $phase    - each bar phase change delay\n * Usage example:\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\n */\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\n    animation: sk-stretchdelay $duration infinite ease-in-out;\n\n    @for $i from 1 through $count {\n        &--#{$i} {\n            animation-delay: -$duration + (($i - 1) * $phase);\n        }\n    }\n}\n\n/*\n * Tooltip colors\n * @param $color - color property\n * Usage example:\n   @include tooltipColor($COLOR_RED);\n */\n@mixin tooltipColor($color) {\n    &:before {\n        background: $color;\n    }\n    &:after,\n    &[data-tooltip-pos='top']:after {\n        border-top-color: $color;\n    }\n    &[data-tooltip-pos='right']:after {\n        border-top-color: transparent;\n        border-right-color: $color;\n    }\n    &[data-tooltip-pos='left']:after {\n        border-top-color: transparent;\n        border-left-color: $color;\n    }\n    &[data-tooltip-pos='bottom']:after {\n        border-top-color: transparent;\n        border-bottom-color: $color;\n    }\n}\n\n/*\n * Convert Tooltip colors\n * @param $color - css color property\n * Usage example:\n   @include convertTooltipColor(var(--status-default));\n */\n@mixin convertTooltipColor($color) {\n    &:before {\n        background: $color;\n    }\n    &:after,\n    &[data-tooltip-pos='top']:after {\n        border-top-color: $color;\n    }\n    &[data-tooltip-pos='right']:after {\n        border-top-color: transparent;\n        border-right-color: $color;\n    }\n    &[data-tooltip-pos='left']:after {\n        border-top-color: transparent;\n        border-left-color: $color;\n    }\n    &[data-tooltip-pos='bottom']:after {\n        border-top-color: transparent;\n        border-bottom-color: $color;\n    }\n}\n\n/*\n    Constants\n*/\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\n$BASE_FONT_SIZE: 10px;\n\n/*\n    Variables\n*/\n$FONT_SIZES: (\n    'xheading' 3.2rem,\n    'heading' 3rem,\n    'large' 2.8rem,\n    'title' 1.6rem,\n    'paragraph' 1.4rem,\n    'small' 1.2rem,\n    'xsmall' 1rem,\n    'xxsmall' 0.8rem,\n    'xxxsmall' 0.6rem\n);\n\n$FONT_COLORS: (\n    'active' var(--text-colored-background),\n    'prominent' var(--text-prominent),\n    'black' var(--text-general),\n    'grey' var(--text-less-prominent),\n    'disabled' var(--text-disabled),\n    'green' var(--text-profit-success),\n    'red' var(--text-loss-danger)\n);\n\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\n\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\n\n$LINEHEIGHTS: (\n    'large': 1.75,\n    'medium': 1.5,\n    'small': 1.25,\n    'xsmall': 1.4,\n);\n\n/*\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\n    Variables name example: --title-center-semibold-red\n */\n$TYPEFACES_LIST: generate-typefaces();\n\n/*\n    to use styles without modifier class on .inline-icon\n    use @extend\n\n    e.g. style icon on parent hover:\n        a:hover .inline-icon {\n            @extend %inline-icon-active;\n        }\n*/\n\n%inline-icon {\n    @include colorIcon(var(--text-general), none);\n\n    &.active,\n    &-active {\n        @include colorIcon(var(--text-prominent), none);\n    }\n    &.disabled,\n    &-disabled {\n        @include colorIcon(var(--text-disabled), none);\n    }\n    &.white,\n    &-white {\n        @include colorIcon(var(--text-prominent));\n    }\n    &.border_hover_color,\n    &-border_hover_color {\n        @include colorIcon(var(--text-prominent));\n    }\n    &.secondary,\n    &-secondary {\n        @include colorIcon(var(--text-less-prominent));\n    }\n}\n\n/**\n * Define Breakpoints here.\n */\n$mobile-width: 320px;\n$tablet-width: 768px;\n$desktop-width: 1024px;\n\n@mixin tablet {\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\n        @content;\n    }\n}\n\n@mixin desktop {\n    @media (min-width: #{$desktop-width}) {\n        @content;\n    }\n}\n\n@mixin tablet-down {\n    @media (max-width: #{$tablet-width}) {\n        @content;\n    }\n}\n\n@mixin tablet-up {\n    @media (min-width: #{$tablet-width}) {\n        @content;\n    }\n}\n\n@mixin mobile-up {\n    @media (min-width: #{$mobile-width}) {\n        @content;\n    }\n}\n\n@mixin mobile {\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\n        @content;\n    }\n}\n\n@mixin mobile-landscape {\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\n        @content;\n    }\n}\n\n@mixin touch-device {\n    // add css interaction media query to detect touch devices\n    // refer to: https://caniuse.com/#feat=css-media-interaction\n    @media (pointer: coarse) {\n        @content;\n    }\n}\n\n@mixin mobile-tablet-mix {\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\n        @content;\n    }\n}\n\n/** Need to add new breakpoints for mixins */\n$max-mobile-width: 600px;\n$min-desktop-width: 1280px;\n\n@mixin mobile-screen {\n    @media (max-width: #{$max-mobile-width}) {\n        @content;\n    }\n}\n\n@mixin tablet-screen {\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\n        @content;\n    }\n}\n\n@mixin desktop-screen {\n    @media (min-width: #{$min-desktop-width}) {\n        @content;\n    }\n}\n\n@mixin mobile-or-tablet-screen {\n    @media (max-width: #{$min-desktop-width - 1}) {\n        @content;\n    }\n}\n\n@mixin tablet-or-desktop-screen {\n    @media (min-width: #{$max-mobile-width + 1}) {\n        @content;\n    }\n}\n\n@mixin tablet-portrait-screen {\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\n        @content;\n    }\n}\n\n@mixin mobile-or-tablet-landscape {\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\n        @content;\n    }\n}\n\n.buy-sell-modal {\n    opacity: 1 !important;\n\n    @include mobile-or-tablet-screen {\n        .dc-mobile-full-page-modal__header--border-bottom {\n            border-bottom: 2px solid var(--general-section-1);\n        }\n    }\n\n    &__body {\n        position: relative;\n        display: block;\n        padding-top: 2.4rem;\n\n        @include mobile-or-tablet-screen {\n            & > form {\n                height: fit-content !important;\n            }\n        }\n    }\n\n    &__footer {\n        @include mobile-or-tablet-screen {\n            border-top: 2px solid var(--general-section-1);\n            display: flex;\n            flex-direction: row;\n            justify-content: flex-end;\n            margin-top: auto;\n            padding: 1.6rem;\n        }\n    }\n\n    &__layout {\n        padding: unset;\n    }\n\n    &-field {\n        margin-bottom: 0 !important;\n        flex: 1;\n        height: fit-content;\n\n        .dc-input__container {\n            width: 91%;\n            padding: 0.5rem 1rem 0.5rem 1.2rem;\n        }\n\n        &--disable {\n            opacity: 0.32;\n        }\n\n        &--textarea {\n            border-top: 1px solid var(--general-section-5);\n            margin-bottom: 3.5rem;\n            padding: 1.8rem 2.4rem 0;\n\n            .dc-input {\n                &__container {\n                    height: 9.7rem;\n                }\n                &__field {\n                    height: 100% !important;\n                }\n            }\n        }\n\n        &-wrapper {\n            $gap: 2.4rem;\n            display: flex;\n            margin: -#{$gap} 0 1.6rem -#{$gap};\n            padding: 0 2.4rem;\n            word-break: break-word;\n\n            & > * {\n                margin: $gap 0 0 $gap;\n            }\n\n            @include mobile-or-tablet-screen {\n                flex-direction: column;\n\n                .dc-input__wrapper {\n                    margin-top: 2.5rem;\n                    width: 90vw;\n                }\n            }\n\n            > .dc-input {\n                margin-top: 1rem; // Compensate for label.\n            }\n        }\n    }\n\n    &__form {\n        height: fit-content !important;\n    }\n\n    &-hintbox {\n        margin: -0.5rem 0 2.4rem;\n        padding: 0 2.4rem;\n\n        .dc-hint-box {\n            &__icon {\n                align-self: flex-start;\n            }\n        }\n    }\n\n    &__icon {\n        margin-right: 0.8rem;\n    }\n\n    &-line {\n        border-top: 1px solid var(--general-section-5);\n        margin: 1.6rem 0;\n        width: 100%;\n    }\n\n    &-payment-method {\n        padding: 0 2.4rem;\n        &--container {\n            align-self: center;\n            display: flex;\n            flex-direction: column;\n            margin-bottom: 1.6rem;\n            padding: 0 2.4rem;\n        }\n\n        &--icon {\n            border-radius: 2px;\n            margin-right: 0.8rem;\n        }\n\n        &--row {\n            align-items: center;\n            display: flex;\n            flex-direction: row;\n            margin-bottom: 0.8rem;\n        }\n\n        &--title {\n            margin-bottom: 0.8rem;\n        }\n    }\n\n    &--input {\n        display: flex;\n        gap: 2rem;\n        flex-direction: column;\n        padding: 0 2.4rem 2rem;\n        margin-bottom: 2rem;\n        .dc-input__wrapper {\n            margin-right: 0.2rem;\n            margin-bottom: unset;\n        }\n\n        &-field {\n            @include desktop-screen {\n                display: flex;\n            }\n        }\n        @include mobile-or-tablet-screen {\n            .dc-input {\n                &__container {\n                    width: 100%;\n                    padding: 0.5rem 1rem 0.5rem 1.2rem;\n                }\n                &__wrapper {\n                    margin: 0.8rem 0.2rem 1.4rem 0;\n                }\n            }\n        }\n    }\n\n    &--sell-payment-methods {\n        display: flex;\n        flex-wrap: wrap;\n        gap: 0.8rem;\n        margin: 1.6rem 0 2.4rem;\n\n        .payment-method-card {\n            margin: unset;\n\n            @include mobile-or-tablet-screen {\n                min-height: 8.8rem;\n                min-width: unset;\n                width: 13.6rem;\n            }\n\n            &--add {\n                margin: unset;\n\n                @include mobile-or-tablet-screen {\n                    min-height: 8.8rem;\n                    width: 13.6rem;\n                }\n            }\n            &__body {\n                margin-top: 0.8rem;\n\n                @include mobile-or-tablet-screen {\n                    margin-top: 0;\n                }\n            }\n        }\n\n        &--disable {\n            opacity: 0.32;\n        }\n    }\n}\n\n.buy-sell-modal__content {\n    .dc-input {\n        margin-bottom: unset;\n    }\n}\n.dc-modal__container_buy-sell-modal {\n    .dc-modal-header--buy-sell-modal {\n        border-bottom: 2px solid var(--general-section-5);\n    }\n\n    .dc-modal-footer--separator {\n        margin-top: 1rem;\n        border-top: 2px solid var(--general-section-5);\n    }\n}\n\n.notification-messages {\n    @include desktop-screen {\n        z-index: 9999;\n    }\n}\n"],sourceRoot:""}]);const l=i},8557:(n,e,r)=>{"use strict";r.r(e),r.d(e,{default:()=>l});var t=r(9372),a=r.n(t),o=r(40935),i=r.n(o)()(a());i.push([n.id,"@media(max-width: 1279px){.buy-sell-form-receive-amount{border-top:1px solid var(--general-section-2);padding:.8rem 1.6rem;background-color:var(--general-main-1)}}","",{version:3,sources:["webpack://./src/pages/buy-sell/buy-sell-form-receive-amount.scss"],names:[],mappings:"AAkrBI,0BAuBJ,8BAEQ,6CAAA,CACA,oBAAA,CACA,sCAAA,CAAA",sourcesContent:["/*------------------------------------*\n *  # Constants\n *------------------------------------*/\n\n/*RTL Language Mixin*/\n\n@mixin rtl {\n    [dir='rtl'] & {\n        @content;\n    }\n}\n\n/* stylelint-disable color-no-hex */\n\n/* COLOR PALETTE */\n\n/* colors */\n$color-black: #0e0e0e;\n$color-black-1: #333333;\n$color-black-3: #151717;\n$color-black-4: #1d1f20;\n$color-black-5: #242828;\n$color-black-6: #3e3e3e;\n$color-black-7: #000000;\n$color-black-8: #323738;\n$color-black-9: #5c5c5c;\n$color-black-10: #181c25;\n$color-blue: #377cfc;\n$color-blue-1: #0dc2e7;\n$color-blue-2: #2a3052;\n$color-blue-3: #0796e0;\n$color-blue-4: #0677af;\n$color-blue-5: #dfeaff;\n$color-blue-6: #92b8ff;\n$color-blue-7: #182130;\n$color-blue-8: #e6f5ff;\n$color-blue-9: #00426a;\n$color-brown: #664407;\n$color-green: #85acb0;\n$color-green-1: #4bb4b3;\n$color-green-2: #3d9494;\n$color-green-3: #00a79e;\n$color-green-4: #008079;\n$color-green-5: #4bb4b329;\n$color-green-6: #17eabd;\n$color-green-7: #e8fdf8;\n$color-green-8: #cedddf;\n$color-grey: #c2c2c2;\n$color-grey-1: #999999;\n$color-grey-2: #f2f3f4;\n$color-grey-3: #eaeced;\n$color-grey-4: #e6e9e9;\n$color-grey-5: #d6dadb;\n$color-grey-6: #d6d6d6;\n$color-grey-7: #6e6e6e;\n$color-grey-8: #d7d7d7;\n$color_grey-9: #868686;\n$color-grey-10: #919191;\n$color-grey-11: #fafafa;\n$color-grey-12: #f5f7fa;\n$color-grey-13: #2e2e2e;\n$color-grey-14: #e2e5e7;\n$color-grey-15: #f3f4f5;\n$color-orange: #ff6444;\n$color-orange-2: #ff9c13;\n$color-purple: #722fe4;\n$color-red: #ff444f;\n$color-red-1: #ec3f3f;\n$color-red-2: #cc2e3d;\n$color-red-3: #a32430;\n$color-red-4: #d33636;\n$color-red-5: #eb3e48;\n$color-red-6: #ec3f3f29;\n$color-red-7: #ffe1e3;\n$color-red-8: #661b20;\n$color-red-9: #b33037;\n$color-red-10: #ff444f;\n$color-red-11: #fce3e3;\n$color-red-12: #c40000;\n$color-violet: #4a3871;\n$color-white: #ffffff;\n$color-yellow: #ffad3a;\n$color-yellow-1: #b3760d;\n$color-yellow-2: #ffa912;\n$color-yellow-3: rgba(255, 173, 58, 0.16);\n$color-yellow-4: #fff7e6;\n$color-yellow-5: #6a4800;\n$color-yellow-6: #ffeabf;\n\n/* status colors */\n$color-status-warning: rgba(255, 173, 58, 0.16);\n$color-status-information: rgba(55, 124, 252, 0.16);\n$color-status-announcement: rgba(75, 180, 179, 0.16);\n$color-status-error: rgba(236, 63, 63, 0.16);\n$color-status-verified: rgba(0, 122, 34);\n$color-status-danger: rgba(196, 0, 0);\n\n/* alpha colors */\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\n$alpha-color-black-2: transparentize($color-black, 0.04);\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\n$alpha-color-black-7: transparentize($color-black, 0.5);\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\n$alpha-color-white-1: transparentize($color-white, 0.04);\n$alpha-color-white-2: transparentize($color-white, 0.84);\n$alpha-color-white-3: transparentize($color-white, 0.92);\n$alpha-color-white-4: transparentize($color-white, 0.3);\n$alpha-color-red-1: transparentize($color-red, 0.92);\n$alpha-color-red-2: transparentize($color-red, 0.84);\n$alpha-color-red-3: transparentize($color-red, 0.76);\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\n\n/* gradient colors */\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\n\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\n\n/* Preserve legacy variables */\n/* Primary */\n\n$COLOR_BLACK: #000000;\n$COLOR_BLACK_2: #1d1f20;\n$COLOR_BLACK_3: #0e0e0e;\n$COLOR_GREEN_1: #39b19d;\n$COLOR_GREEN_2: #2d9f93;\n$COLOR_GREEN_3: #21ce99;\n$COLOR_GREEN_4: #00a79e;\n$COLOR_GREEN_5: #4bb4b3;\n$COLOR_ORANGE: #ff9933;\n$COLOR_DARK_ORANGE: #ff8802;\n$COLOR_PURPLE: #4f60ae;\n$COLOR_RED: #e31c4b;\n$COLOR_RED_2: #cc2e3d;\n$COLOR_RED_3: #ec3f3f;\n$COLOR_CORAL_RED: #ff444f;\n$COLOR_SKY_BLUE: #2196f3;\n$COLOR_WHITE: #ffffff;\n$COLOR_BLUE: #1c5ae3;\n\n// Light theme\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\n$COLOR_LIGHT_GRAY_1: #999cac;\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\n$COLOR_LIGHT_GRAY_3: #eaeced;\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\n// Dark theme\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\n$COLOR_DARK_BLUE_1: #0b0e18;\n$COLOR_DARK_BLUE_2: #101320;\n$COLOR_DARK_BLUE_3: #191c31;\n$COLOR_DARK_BLUE_4: #202641;\n$COLOR_DARK_BLUE_5: #2a3052;\n$COLOR_DARK_BLUE_6: #555975;\n$COLOR_DARK_BLUE_7: #7f8397;\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\n$COLOR_DARK_GRAY_1: #282a37;\n$COLOR_DARK_GRAY_2: #303342;\n$COLOR_DARK_GRAY_3: #555975;\n$COLOR_DARK_GRAY_4: #999999;\n/* stylelint-enable color-no-hex */\n\n$BORDER_RADIUS: 4px;\n$BORDER_RADIUS_2: 8px;\n\n$MAX_CONTAINER_WIDTH: 1440px;\n\n$POSITIONS_DRAWER_WIDTH: 240px;\n$POSITIONS_DRAWER_MARGIN: 8px;\n\n$HEADER_HEIGHT: 48px;\n$FOOTER_HEIGHT: 36px;\n\n$MOBILE_HEADER_HEIGHT: 40px;\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\n\n$SIDEBAR_WIDTH: 240px;\n\n/* Wallet gradient background */\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\n\n/* App Cards gradient background */\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\n\n/* Wallets */\n$ready-banner-bg-color: #e2f3f3;\n$ready-banner-tick-bg-color: #4ab4b3;\n$wallet-demo-bg-color: #fff8f9;\n$wallet-dark-demo-bg-color: #140506;\n$wallet-demo-divider-color: #fff0f1;\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\n\n/*------------------------------------*\n *  # SASS Mixins and Functions\n *------------------------------------*/\n\n/*\n * SASS interpolation\n */\n// Requires the calc-interpolation function which can also be used independently\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\n    $b: $min-value - $a * $min-screen;\n\n    $sign: '+';\n    @if ($b < 0) {\n        $sign: '-';\n        $b: abs($b);\n    }\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\n}\n\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\n    & {\n        @each $property in $properties {\n            #{$property}: $min-value;\n        }\n        @media screen and (min-width: $min-screen) {\n            @each $property in $properties {\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\n            }\n        }\n        @media screen and (min-width: $max-screen) {\n            @each $property in $properties {\n                #{$property}: $max-value;\n            }\n        }\n    }\n}\n\n/*\n * PX to EM\n * @param $px - px value to be converted\n * @param $base - base font size (in `em`)\n * Note: 'em' values are calculate based on the element font-size\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\n * Usage example:\n    padding: em(16px, 1.6em); // font-size in 'em'\n */\n@function em($px, $base: $BASE_FONT_SIZE) {\n    $list: ();\n    @if length($px) != 1 {\n        @for $i from 1 through length($px) {\n            $val_em: (nth($px, $i) / $base) * 1em;\n            $list: append($list, $val_em, space);\n        }\n        @return $list;\n    } @else {\n        @return ($px / $base) * 1em;\n    }\n}\n\n/*\n * Set property by passing a property name, and values.\n * @param $property name - padding, margin etc.\n * @param $values        - values in `px` (space separated for multiple values)\n * @param $font-size     - base font-size in `em`\n * Usage example:\n   @include toEm(padding, 8px 16px 8px, 1.6em);\n */\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\n    #{$property}: em($values, $font-size);\n}\n\n/*\n * Generate typefaces key-value pair of variable name and config\n * Example:\n   --paragraph-center-bold-black: (14px, center, bold, black)\n */\n@function generate-typefaces() {\n    $typeface_list: ();\n    @each $fontsize_name, $size in $FONT_SIZES {\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\n            @each $color_name, $color in $FONT_COLORS {\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\n                    $val: ($size, $text_align, $weight, $color);\n                    $typeface: (\n                        $key: $val,\n                    );\n                    $typeface_list: map-merge($typeface_list, $typeface);\n                }\n            }\n        }\n    }\n    // @debug $typeface_list; /* uncomment to debug */\n    @return $typeface_list;\n}\n\n/*\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\n * Usage example:\n   @include setTypeface(16px, bold, black, uppercase);\n */\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\n    @if $size {\n        font-size: $size;\n    }\n    @if $colour {\n        color: $colour;\n    }\n    @if $weight {\n        font-weight: $weight;\n    }\n    @if $tt {\n        text-transform: $tt;\n    }\n    @if $align {\n        text-align: $align;\n    }\n    @if $size == 1.6rem {\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\n    } @else if $size == 1.4rem {\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\n    } @else if $size == 1.2rem {\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\n    } @else if $size == 1rem {\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\n    } @else {\n        line-height: unset;\n    }\n}\n\n/*\n * Set typefaces by passing a typeface variable name\n * @param $var   - typeface variable\n * @param $tt    - text-transform property\n * @param $align - text-align property\n * Usage example:\n   @include typeface(--paragraph-bold-black, uppercase, center);\n */\n@mixin typeface($var, $tt: none) {\n    $typeface_config: map-get(\n        $map: $TYPEFACES_LIST,\n        $key: $var,\n    );\n\n    $size: nth($typeface_config, 1); // font-size\n    $align: nth($typeface_config, 2); // text-align\n    $weight: nth($typeface_config, 3); // font-weight\n    $color: nth($typeface_config, 4); // color\n    @include setTypeface($size, $align, $weight, $color, $tt);\n}\n\n/*\n * Range Slider Thumb styling is set here\n */\n@mixin thumbStyle() {\n    appearance: none;\n    width: 1em;\n    height: 1em;\n    border-radius: 100%;\n    border: 0;\n    cursor: pointer;\n    transition: box-shadow 0.2s;\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\n\n    &:hover {\n        box-shadow: 0 0 0 0.5em var(--state-hover);\n    }\n}\n\n/*\n * SVG icons colors\n */\n@mixin colorIcon($colors...) {\n    @for $i from 1 through length($colors) {\n        /* postcss-bem-linter: ignore */\n        .color#{$i}-fill {\n            fill: nth($colors, $i);\n        }\n        /* postcss-bem-linter: ignore */\n        .color#{$i}-stroke {\n            stroke: nth($colors, $i);\n        }\n    }\n}\n\n/*\n * Bar Spinner Animation\n * @param $count    - number of bars\n * @param $duration - duration of animation\n * @param $phase    - each bar phase change delay\n * Usage example:\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\n */\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\n    animation: sk-stretchdelay $duration infinite ease-in-out;\n\n    @for $i from 1 through $count {\n        &--#{$i} {\n            animation-delay: -$duration + (($i - 1) * $phase);\n        }\n    }\n}\n\n/*\n * Tooltip colors\n * @param $color - color property\n * Usage example:\n   @include tooltipColor($COLOR_RED);\n */\n@mixin tooltipColor($color) {\n    &:before {\n        background: $color;\n    }\n    &:after,\n    &[data-tooltip-pos='top']:after {\n        border-top-color: $color;\n    }\n    &[data-tooltip-pos='right']:after {\n        border-top-color: transparent;\n        border-right-color: $color;\n    }\n    &[data-tooltip-pos='left']:after {\n        border-top-color: transparent;\n        border-left-color: $color;\n    }\n    &[data-tooltip-pos='bottom']:after {\n        border-top-color: transparent;\n        border-bottom-color: $color;\n    }\n}\n\n/*\n * Convert Tooltip colors\n * @param $color - css color property\n * Usage example:\n   @include convertTooltipColor(var(--status-default));\n */\n@mixin convertTooltipColor($color) {\n    &:before {\n        background: $color;\n    }\n    &:after,\n    &[data-tooltip-pos='top']:after {\n        border-top-color: $color;\n    }\n    &[data-tooltip-pos='right']:after {\n        border-top-color: transparent;\n        border-right-color: $color;\n    }\n    &[data-tooltip-pos='left']:after {\n        border-top-color: transparent;\n        border-left-color: $color;\n    }\n    &[data-tooltip-pos='bottom']:after {\n        border-top-color: transparent;\n        border-bottom-color: $color;\n    }\n}\n\n/*\n    Constants\n*/\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\n$BASE_FONT_SIZE: 10px;\n\n/*\n    Variables\n*/\n$FONT_SIZES: (\n    'xheading' 3.2rem,\n    'heading' 3rem,\n    'large' 2.8rem,\n    'title' 1.6rem,\n    'paragraph' 1.4rem,\n    'small' 1.2rem,\n    'xsmall' 1rem,\n    'xxsmall' 0.8rem,\n    'xxxsmall' 0.6rem\n);\n\n$FONT_COLORS: (\n    'active' var(--text-colored-background),\n    'prominent' var(--text-prominent),\n    'black' var(--text-general),\n    'grey' var(--text-less-prominent),\n    'disabled' var(--text-disabled),\n    'green' var(--text-profit-success),\n    'red' var(--text-loss-danger)\n);\n\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\n\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\n\n$LINEHEIGHTS: (\n    'large': 1.75,\n    'medium': 1.5,\n    'small': 1.25,\n    'xsmall': 1.4,\n);\n\n/*\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\n    Variables name example: --title-center-semibold-red\n */\n$TYPEFACES_LIST: generate-typefaces();\n\n/*\n    to use styles without modifier class on .inline-icon\n    use @extend\n\n    e.g. style icon on parent hover:\n        a:hover .inline-icon {\n            @extend %inline-icon-active;\n        }\n*/\n\n%inline-icon {\n    @include colorIcon(var(--text-general), none);\n\n    &.active,\n    &-active {\n        @include colorIcon(var(--text-prominent), none);\n    }\n    &.disabled,\n    &-disabled {\n        @include colorIcon(var(--text-disabled), none);\n    }\n    &.white,\n    &-white {\n        @include colorIcon(var(--text-prominent));\n    }\n    &.border_hover_color,\n    &-border_hover_color {\n        @include colorIcon(var(--text-prominent));\n    }\n    &.secondary,\n    &-secondary {\n        @include colorIcon(var(--text-less-prominent));\n    }\n}\n\n/**\n * Define Breakpoints here.\n */\n$mobile-width: 320px;\n$tablet-width: 768px;\n$desktop-width: 1024px;\n\n@mixin tablet {\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\n        @content;\n    }\n}\n\n@mixin desktop {\n    @media (min-width: #{$desktop-width}) {\n        @content;\n    }\n}\n\n@mixin tablet-down {\n    @media (max-width: #{$tablet-width}) {\n        @content;\n    }\n}\n\n@mixin tablet-up {\n    @media (min-width: #{$tablet-width}) {\n        @content;\n    }\n}\n\n@mixin mobile-up {\n    @media (min-width: #{$mobile-width}) {\n        @content;\n    }\n}\n\n@mixin mobile {\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\n        @content;\n    }\n}\n\n@mixin mobile-landscape {\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\n        @content;\n    }\n}\n\n@mixin touch-device {\n    // add css interaction media query to detect touch devices\n    // refer to: https://caniuse.com/#feat=css-media-interaction\n    @media (pointer: coarse) {\n        @content;\n    }\n}\n\n@mixin mobile-tablet-mix {\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\n        @content;\n    }\n}\n\n/** Need to add new breakpoints for mixins */\n$max-mobile-width: 600px;\n$min-desktop-width: 1280px;\n\n@mixin mobile-screen {\n    @media (max-width: #{$max-mobile-width}) {\n        @content;\n    }\n}\n\n@mixin tablet-screen {\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\n        @content;\n    }\n}\n\n@mixin desktop-screen {\n    @media (min-width: #{$min-desktop-width}) {\n        @content;\n    }\n}\n\n@mixin mobile-or-tablet-screen {\n    @media (max-width: #{$min-desktop-width - 1}) {\n        @content;\n    }\n}\n\n@mixin tablet-or-desktop-screen {\n    @media (min-width: #{$max-mobile-width + 1}) {\n        @content;\n    }\n}\n\n@mixin tablet-portrait-screen {\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\n        @content;\n    }\n}\n\n@mixin mobile-or-tablet-landscape {\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\n        @content;\n    }\n}\n\n.buy-sell-form-receive-amount {\n    @include mobile-or-tablet-screen {\n        border-top: 1px solid var(--general-section-2);\n        padding: 0.8rem 1.6rem;\n        background-color: var(--general-main-1);\n    }\n}\n"],sourceRoot:""}]);const l=i},5218:(n,e,r)=>{"use strict";r.r(e),r.d(e,{default:()=>l});var t=r(9372),a=r.n(t),o=r(40935),i=r.n(o)()(a());i.push([n.id,'.buy-sell-form{opacity:1 !important}@media(max-width: 1279px){.buy-sell-form .dc-mobile-full-page-modal__header--border-bottom{border-bottom:2px solid var(--general-section-1)}}.buy-sell-form__content .dc-input{margin-bottom:0;margin-bottom:initial}.buy-sell-form__field{margin-bottom:0 !important}.buy-sell-form__field{flex:1;min-height:4rem}.buy-sell-form__field .dc-input__container{width:91%;padding:.5rem 1rem .5rem 1.2rem}.buy-sell-form__field--disable{opacity:.32}.buy-sell-form__field--floating{margin-top:2.2rem}.buy-sell-form__field--textarea{border-top:1px solid var(--general-section-5);margin-bottom:3.5rem;padding:1.8rem 2.4rem 0}.buy-sell-form__field--textarea .dc-input__container{height:9.7rem}.buy-sell-form__field--textarea .dc-input__field{padding-top:1rem;padding-bottom:1rem}.buy-sell-form__field-rate{display:flex;align-items:center;gap:.5rem}.buy-sell-form__field-rate--floating{position:absolute}@media(min-width: 1280px){.buy-sell-form__field-rate--floating:hover{position:fixed}}.buy-sell-form__field-rate .dc-tooltip[data-tooltip]:before{background:var(--general-active);color:var(--text-prominent);width:17rem;border-radius:.8rem;left:9rem;text-align:center}.buy-sell-form__field-rate .dc-tooltip[data-tooltip]:after{border-top-color:var(--general-active);left:10rem}.buy-sell-form__field-rate--float{color:#1789e1;background:rgba(44,154,255,.08);padding:.2rem .4rem;border-radius:.4rem;cursor:pointer}.buy-sell-form__field-wrapper{display:flex;margin:-2.4rem 0 1.6rem -2.4rem;padding:0 2.4rem;word-break:break-word}.buy-sell-form__field-wrapper>*{margin:2.4rem 0 0 2.4rem}@media(max-width: 1279px){.buy-sell-form__field-wrapper{flex-direction:column}.buy-sell-form__field-wrapper .dc-input__wrapper{margin-top:2.5rem;width:90vw}}.buy-sell-form__field-wrapper>.dc-input{margin-top:1rem}.buy-sell-form-body{position:relative;display:block;padding-top:2.4rem}@media(max-width: 1279px){.buy-sell-form-body>form{height:-moz-fit-content !important;height:fit-content !important}}.buy-sell-form-danger{margin-bottom:1.6rem;width:-moz-fit-content;width:fit-content;align-items:flex-start}.buy-sell-form-form{height:-moz-fit-content !important;height:fit-content !important}@media(max-width: 1279px){.buy-sell-form-footer{border-top:2px solid var(--general-section-1);display:flex;flex-direction:row;justify-content:flex-end;margin-top:auto;padding:1.6rem}}.buy-sell-form--input{display:flex;gap:2rem;flex-direction:column;padding:0 2.4rem 2rem;margin-bottom:2rem}.buy-sell-form--input .dc-input__wrapper{margin-right:.2rem;margin-bottom:0;margin-bottom:initial}@media(min-width: 1280px){.buy-sell-form--input-field{display:flex}}@media(max-width: 1279px){.buy-sell-form--input .dc-input__container{width:100%;padding:.5rem 1rem .5rem 1.2rem}.buy-sell-form--input .dc-input__wrapper{margin:.8rem .2rem 1.4rem 0}}.buy-sell-form__inline-message{margin-bottom:2.4rem;padding:0 2.4rem}.buy-sell-form-icon{margin-right:.8rem}.buy-sell-form-line{border-top:1px solid var(--general-section-5);margin:1.6rem 0;width:100%}.buy-sell-form-payment-method{padding:0 2.4rem}.buy-sell-form-payment-method--container{align-self:center;display:flex;flex-direction:column;margin-bottom:1.6rem;padding:0 2.4rem}[dir="ltr"] .buy-sell-form-payment-method--icon{margin-right:.8rem}[dir="rtl"] .buy-sell-form-payment-method--icon{margin-left:.8rem}.buy-sell-form-payment-method--icon{border-radius:2px}.buy-sell-form-payment-method--row{align-items:center;display:flex;flex-direction:row;margin-bottom:.8rem}.buy-sell-form-payment-method--title{margin-bottom:.8rem}@media(max-width: 1279px){.buy-sell-form-receive-amount{border-top:1px solid var(--general-section-2);padding:.8rem 1.6rem;background-color:var(--general-main-1)}}.buy-sell-form--sell-payment-methods{display:flex;flex-wrap:wrap;gap:.8rem;margin:1.6rem 0 2.4rem}.buy-sell-form--sell-payment-methods .payment-method-card{margin:0;margin:initial}@media(max-width: 1279px){.buy-sell-form--sell-payment-methods .payment-method-card{min-height:8.8rem;min-width:0;min-width:initial;width:13.6rem}}.buy-sell-form--sell-payment-methods .payment-method-card--add{margin:0;margin:initial}@media(max-width: 1279px){.buy-sell-form--sell-payment-methods .payment-method-card--add{min-height:8.8rem;width:13.6rem}}.buy-sell-form--sell-payment-methods .payment-method-card__body{margin-top:.8rem}@media(max-width: 1279px){.buy-sell-form--sell-payment-methods .payment-method-card__body{margin-top:0}}.buy-sell-form--sell-payment-methods--disable{opacity:.32}.buy-sell-form--layout{padding:0;padding:initial}.buy-sell-form--error-message{padding:0 2.4rem}.dc-modal__container_buy-sell-form .dc-modal-header--buy-sell-form{border-bottom:2px solid var(--general-section-5)}.dc-modal__container_buy-sell-form .dc-modal-footer--separator{margin-top:1rem;border-top:2px solid var(--general-section-5)}',"",{version:3,sources:["webpack://./src/pages/buy-sell/buy-sell-form.scss"],names:[],mappings:"AAysBA,eACI,oBAAA,CAxBA,0BA2BI,iEACI,gDAAA,CAAA,CAKJ,kCACI,eAAA,CAAA,qBAAA,CAIR,sBACI,0BAEA,CAHJ,sBAEI,MAAA,CACA,eAAA,CAEA,2CACI,SAAA,CACA,+BAAA,CAGJ,+BACI,WAAA,CAGJ,gCACI,iBAAA,CAGJ,gCACI,6CAAA,CACA,oBAAA,CACA,uBAAA,CAGI,qDACI,aAAA,CAGJ,iDACI,gBAAA,CAAA,mBAAA,CAKZ,2BACI,YAAA,CACA,kBAAA,CACA,SAAA,CAEA,qCACI,iBAAA,CApFZ,0BAsFY,2CAEQ,cAAA,CAAA,CAKZ,4DACI,gCAAA,CACA,2BAAA,CACA,WAAA,CACA,mBAAA,CACA,SAAA,CACA,iBAAA,CAGJ,2DACI,sCAAA,CACA,UAAA,CAGJ,kCACI,aAAA,CACA,+BAAA,CACA,mBAAA,CACA,mBAAA,CACA,cAAA,CAIR,8BAEI,YAAA,CACA,+BAAA,CACA,gBAAA,CACA,qBAAA,CAEA,gCACI,wBAAA,CAtHZ,0BA8GI,8BAYQ,qBAAA,CAEA,iDACI,iBAAA,CACA,UAAA,CAAA,CAIR,wCACI,eAAA,CAKZ,oBACI,iBAAA,CACA,aAAA,CACA,kBAAA,CA3IJ,0BA8IQ,yBACI,kCAAA,CAAA,6BAAA,CAAA,CAKZ,sBACI,oBAAA,CACA,sBAAA,CAAA,iBAAA,CACA,sBAAA,CAGJ,oBACI,kCAAA,CAAA,6BAAA,CA3JJ,0BA8JA,sBAEQ,6CAAA,CACA,YAAA,CACA,kBAAA,CACA,wBAAA,CACA,eAAA,CACA,cAAA,CAAA,CAIR,sBACI,YAAA,CACA,QAAA,CACA,qBAAA,CACA,qBAAA,CACA,kBAAA,CACA,yCACI,kBAAA,CACA,eAAA,CAAA,qBAAA,CAvLR,0BA0LI,4BAEQ,YAAA,CAAA,CAtLZ,0BA2LY,2CACI,UAAA,CACA,+BAAA,CAEJ,yCACI,2BAAA,CAAA,CAMhB,+BACI,oBAAA,CACA,gBAAA,CAGJ,oBACI,kBAAA,CAGJ,oBACI,6CAAA,CACA,eAAA,CACA,UAAA,CAGJ,8BACI,gBAAA,CACA,yCACI,iBAAA,CACA,YAAA,CACA,qBAAA,CACA,oBAAA,CACA,gBAAA,CAGJ,gDAEI,kBAAA,CAFJ,gDAEI,iBAAA,CAFJ,oCACI,iBACA,CAGJ,mCACI,kBAAA,CACA,YAAA,CACA,kBAAA,CACA,mBAAA,CAGJ,qCACI,mBAAA,CA5OR,0BAgPA,8BAEQ,6CAAA,CACA,oBAAA,CACA,sCAAA,CAAA,CAIR,qCACI,YAAA,CACA,cAAA,CACA,SAAA,CACA,sBAAA,CAEA,0DACI,QAAA,CAAA,cAAA,CA/PR,0BA8PI,0DAIQ,iBAAA,CACA,WAAA,CAAA,iBAAA,CACA,aAAA,CAAA,CAGJ,+DACI,QAAA,CAAA,cAAA,CAxQZ,0BAuQQ,+DAIQ,iBAAA,CACA,aAAA,CAAA,CAGR,gEACI,gBAAA,CAhRZ,0BA+QQ,gEAIQ,YAAA,CAAA,CAKZ,8CACI,WAAA,CAIR,uBACI,SAAA,CAAA,eAAA,CAGJ,8BACI,gBAAA,CAKJ,mEACI,gDAAA,CAGJ,+DACI,eAAA,CACA,6CAAA",sourcesContent:["/*------------------------------------*\n *  # Constants\n *------------------------------------*/\n\n/*RTL Language Mixin*/\n\n@mixin rtl {\n    [dir='rtl'] & {\n        @content;\n    }\n}\n\n/* stylelint-disable color-no-hex */\n\n/* COLOR PALETTE */\n\n/* colors */\n$color-black: #0e0e0e;\n$color-black-1: #333333;\n$color-black-3: #151717;\n$color-black-4: #1d1f20;\n$color-black-5: #242828;\n$color-black-6: #3e3e3e;\n$color-black-7: #000000;\n$color-black-8: #323738;\n$color-black-9: #5c5c5c;\n$color-black-10: #181c25;\n$color-blue: #377cfc;\n$color-blue-1: #0dc2e7;\n$color-blue-2: #2a3052;\n$color-blue-3: #0796e0;\n$color-blue-4: #0677af;\n$color-blue-5: #dfeaff;\n$color-blue-6: #92b8ff;\n$color-blue-7: #182130;\n$color-blue-8: #e6f5ff;\n$color-blue-9: #00426a;\n$color-brown: #664407;\n$color-green: #85acb0;\n$color-green-1: #4bb4b3;\n$color-green-2: #3d9494;\n$color-green-3: #00a79e;\n$color-green-4: #008079;\n$color-green-5: #4bb4b329;\n$color-green-6: #17eabd;\n$color-green-7: #e8fdf8;\n$color-green-8: #cedddf;\n$color-grey: #c2c2c2;\n$color-grey-1: #999999;\n$color-grey-2: #f2f3f4;\n$color-grey-3: #eaeced;\n$color-grey-4: #e6e9e9;\n$color-grey-5: #d6dadb;\n$color-grey-6: #d6d6d6;\n$color-grey-7: #6e6e6e;\n$color-grey-8: #d7d7d7;\n$color_grey-9: #868686;\n$color-grey-10: #919191;\n$color-grey-11: #fafafa;\n$color-grey-12: #f5f7fa;\n$color-grey-13: #2e2e2e;\n$color-grey-14: #e2e5e7;\n$color-grey-15: #f3f4f5;\n$color-orange: #ff6444;\n$color-orange-2: #ff9c13;\n$color-purple: #722fe4;\n$color-red: #ff444f;\n$color-red-1: #ec3f3f;\n$color-red-2: #cc2e3d;\n$color-red-3: #a32430;\n$color-red-4: #d33636;\n$color-red-5: #eb3e48;\n$color-red-6: #ec3f3f29;\n$color-red-7: #ffe1e3;\n$color-red-8: #661b20;\n$color-red-9: #b33037;\n$color-red-10: #ff444f;\n$color-red-11: #fce3e3;\n$color-red-12: #c40000;\n$color-violet: #4a3871;\n$color-white: #ffffff;\n$color-yellow: #ffad3a;\n$color-yellow-1: #b3760d;\n$color-yellow-2: #ffa912;\n$color-yellow-3: rgba(255, 173, 58, 0.16);\n$color-yellow-4: #fff7e6;\n$color-yellow-5: #6a4800;\n$color-yellow-6: #ffeabf;\n\n/* status colors */\n$color-status-warning: rgba(255, 173, 58, 0.16);\n$color-status-information: rgba(55, 124, 252, 0.16);\n$color-status-announcement: rgba(75, 180, 179, 0.16);\n$color-status-error: rgba(236, 63, 63, 0.16);\n$color-status-verified: rgba(0, 122, 34);\n$color-status-danger: rgba(196, 0, 0);\n\n/* alpha colors */\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\n$alpha-color-black-2: transparentize($color-black, 0.04);\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\n$alpha-color-black-7: transparentize($color-black, 0.5);\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\n$alpha-color-white-1: transparentize($color-white, 0.04);\n$alpha-color-white-2: transparentize($color-white, 0.84);\n$alpha-color-white-3: transparentize($color-white, 0.92);\n$alpha-color-white-4: transparentize($color-white, 0.3);\n$alpha-color-red-1: transparentize($color-red, 0.92);\n$alpha-color-red-2: transparentize($color-red, 0.84);\n$alpha-color-red-3: transparentize($color-red, 0.76);\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\n\n/* gradient colors */\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\n\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\n\n/* Preserve legacy variables */\n/* Primary */\n\n$COLOR_BLACK: #000000;\n$COLOR_BLACK_2: #1d1f20;\n$COLOR_BLACK_3: #0e0e0e;\n$COLOR_GREEN_1: #39b19d;\n$COLOR_GREEN_2: #2d9f93;\n$COLOR_GREEN_3: #21ce99;\n$COLOR_GREEN_4: #00a79e;\n$COLOR_GREEN_5: #4bb4b3;\n$COLOR_ORANGE: #ff9933;\n$COLOR_DARK_ORANGE: #ff8802;\n$COLOR_PURPLE: #4f60ae;\n$COLOR_RED: #e31c4b;\n$COLOR_RED_2: #cc2e3d;\n$COLOR_RED_3: #ec3f3f;\n$COLOR_CORAL_RED: #ff444f;\n$COLOR_SKY_BLUE: #2196f3;\n$COLOR_WHITE: #ffffff;\n$COLOR_BLUE: #1c5ae3;\n\n// Light theme\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\n$COLOR_LIGHT_GRAY_1: #999cac;\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\n$COLOR_LIGHT_GRAY_3: #eaeced;\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\n// Dark theme\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\n$COLOR_DARK_BLUE_1: #0b0e18;\n$COLOR_DARK_BLUE_2: #101320;\n$COLOR_DARK_BLUE_3: #191c31;\n$COLOR_DARK_BLUE_4: #202641;\n$COLOR_DARK_BLUE_5: #2a3052;\n$COLOR_DARK_BLUE_6: #555975;\n$COLOR_DARK_BLUE_7: #7f8397;\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\n$COLOR_DARK_GRAY_1: #282a37;\n$COLOR_DARK_GRAY_2: #303342;\n$COLOR_DARK_GRAY_3: #555975;\n$COLOR_DARK_GRAY_4: #999999;\n/* stylelint-enable color-no-hex */\n\n$BORDER_RADIUS: 4px;\n$BORDER_RADIUS_2: 8px;\n\n$MAX_CONTAINER_WIDTH: 1440px;\n\n$POSITIONS_DRAWER_WIDTH: 240px;\n$POSITIONS_DRAWER_MARGIN: 8px;\n\n$HEADER_HEIGHT: 48px;\n$FOOTER_HEIGHT: 36px;\n\n$MOBILE_HEADER_HEIGHT: 40px;\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\n\n$SIDEBAR_WIDTH: 240px;\n\n/* Wallet gradient background */\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\n\n/* App Cards gradient background */\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\n\n/* Wallets */\n$ready-banner-bg-color: #e2f3f3;\n$ready-banner-tick-bg-color: #4ab4b3;\n$wallet-demo-bg-color: #fff8f9;\n$wallet-dark-demo-bg-color: #140506;\n$wallet-demo-divider-color: #fff0f1;\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\n\n/*------------------------------------*\n *  # SASS Mixins and Functions\n *------------------------------------*/\n\n/*\n * SASS interpolation\n */\n// Requires the calc-interpolation function which can also be used independently\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\n    $b: $min-value - $a * $min-screen;\n\n    $sign: '+';\n    @if ($b < 0) {\n        $sign: '-';\n        $b: abs($b);\n    }\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\n}\n\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\n    & {\n        @each $property in $properties {\n            #{$property}: $min-value;\n        }\n        @media screen and (min-width: $min-screen) {\n            @each $property in $properties {\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\n            }\n        }\n        @media screen and (min-width: $max-screen) {\n            @each $property in $properties {\n                #{$property}: $max-value;\n            }\n        }\n    }\n}\n\n/*\n * PX to EM\n * @param $px - px value to be converted\n * @param $base - base font size (in `em`)\n * Note: 'em' values are calculate based on the element font-size\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\n * Usage example:\n    padding: em(16px, 1.6em); // font-size in 'em'\n */\n@function em($px, $base: $BASE_FONT_SIZE) {\n    $list: ();\n    @if length($px) != 1 {\n        @for $i from 1 through length($px) {\n            $val_em: (nth($px, $i) / $base) * 1em;\n            $list: append($list, $val_em, space);\n        }\n        @return $list;\n    } @else {\n        @return ($px / $base) * 1em;\n    }\n}\n\n/*\n * Set property by passing a property name, and values.\n * @param $property name - padding, margin etc.\n * @param $values        - values in `px` (space separated for multiple values)\n * @param $font-size     - base font-size in `em`\n * Usage example:\n   @include toEm(padding, 8px 16px 8px, 1.6em);\n */\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\n    #{$property}: em($values, $font-size);\n}\n\n/*\n * Generate typefaces key-value pair of variable name and config\n * Example:\n   --paragraph-center-bold-black: (14px, center, bold, black)\n */\n@function generate-typefaces() {\n    $typeface_list: ();\n    @each $fontsize_name, $size in $FONT_SIZES {\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\n            @each $color_name, $color in $FONT_COLORS {\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\n                    $val: ($size, $text_align, $weight, $color);\n                    $typeface: (\n                        $key: $val,\n                    );\n                    $typeface_list: map-merge($typeface_list, $typeface);\n                }\n            }\n        }\n    }\n    // @debug $typeface_list; /* uncomment to debug */\n    @return $typeface_list;\n}\n\n/*\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\n * Usage example:\n   @include setTypeface(16px, bold, black, uppercase);\n */\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\n    @if $size {\n        font-size: $size;\n    }\n    @if $colour {\n        color: $colour;\n    }\n    @if $weight {\n        font-weight: $weight;\n    }\n    @if $tt {\n        text-transform: $tt;\n    }\n    @if $align {\n        text-align: $align;\n    }\n    @if $size == 1.6rem {\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\n    } @else if $size == 1.4rem {\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\n    } @else if $size == 1.2rem {\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\n    } @else if $size == 1rem {\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\n    } @else {\n        line-height: unset;\n    }\n}\n\n/*\n * Set typefaces by passing a typeface variable name\n * @param $var   - typeface variable\n * @param $tt    - text-transform property\n * @param $align - text-align property\n * Usage example:\n   @include typeface(--paragraph-bold-black, uppercase, center);\n */\n@mixin typeface($var, $tt: none) {\n    $typeface_config: map-get(\n        $map: $TYPEFACES_LIST,\n        $key: $var,\n    );\n\n    $size: nth($typeface_config, 1); // font-size\n    $align: nth($typeface_config, 2); // text-align\n    $weight: nth($typeface_config, 3); // font-weight\n    $color: nth($typeface_config, 4); // color\n    @include setTypeface($size, $align, $weight, $color, $tt);\n}\n\n/*\n * Range Slider Thumb styling is set here\n */\n@mixin thumbStyle() {\n    appearance: none;\n    width: 1em;\n    height: 1em;\n    border-radius: 100%;\n    border: 0;\n    cursor: pointer;\n    transition: box-shadow 0.2s;\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\n\n    &:hover {\n        box-shadow: 0 0 0 0.5em var(--state-hover);\n    }\n}\n\n/*\n * SVG icons colors\n */\n@mixin colorIcon($colors...) {\n    @for $i from 1 through length($colors) {\n        /* postcss-bem-linter: ignore */\n        .color#{$i}-fill {\n            fill: nth($colors, $i);\n        }\n        /* postcss-bem-linter: ignore */\n        .color#{$i}-stroke {\n            stroke: nth($colors, $i);\n        }\n    }\n}\n\n/*\n * Bar Spinner Animation\n * @param $count    - number of bars\n * @param $duration - duration of animation\n * @param $phase    - each bar phase change delay\n * Usage example:\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\n */\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\n    animation: sk-stretchdelay $duration infinite ease-in-out;\n\n    @for $i from 1 through $count {\n        &--#{$i} {\n            animation-delay: -$duration + (($i - 1) * $phase);\n        }\n    }\n}\n\n/*\n * Tooltip colors\n * @param $color - color property\n * Usage example:\n   @include tooltipColor($COLOR_RED);\n */\n@mixin tooltipColor($color) {\n    &:before {\n        background: $color;\n    }\n    &:after,\n    &[data-tooltip-pos='top']:after {\n        border-top-color: $color;\n    }\n    &[data-tooltip-pos='right']:after {\n        border-top-color: transparent;\n        border-right-color: $color;\n    }\n    &[data-tooltip-pos='left']:after {\n        border-top-color: transparent;\n        border-left-color: $color;\n    }\n    &[data-tooltip-pos='bottom']:after {\n        border-top-color: transparent;\n        border-bottom-color: $color;\n    }\n}\n\n/*\n * Convert Tooltip colors\n * @param $color - css color property\n * Usage example:\n   @include convertTooltipColor(var(--status-default));\n */\n@mixin convertTooltipColor($color) {\n    &:before {\n        background: $color;\n    }\n    &:after,\n    &[data-tooltip-pos='top']:after {\n        border-top-color: $color;\n    }\n    &[data-tooltip-pos='right']:after {\n        border-top-color: transparent;\n        border-right-color: $color;\n    }\n    &[data-tooltip-pos='left']:after {\n        border-top-color: transparent;\n        border-left-color: $color;\n    }\n    &[data-tooltip-pos='bottom']:after {\n        border-top-color: transparent;\n        border-bottom-color: $color;\n    }\n}\n\n/*\n    Constants\n*/\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\n$BASE_FONT_SIZE: 10px;\n\n/*\n    Variables\n*/\n$FONT_SIZES: (\n    'xheading' 3.2rem,\n    'heading' 3rem,\n    'large' 2.8rem,\n    'title' 1.6rem,\n    'paragraph' 1.4rem,\n    'small' 1.2rem,\n    'xsmall' 1rem,\n    'xxsmall' 0.8rem,\n    'xxxsmall' 0.6rem\n);\n\n$FONT_COLORS: (\n    'active' var(--text-colored-background),\n    'prominent' var(--text-prominent),\n    'black' var(--text-general),\n    'grey' var(--text-less-prominent),\n    'disabled' var(--text-disabled),\n    'green' var(--text-profit-success),\n    'red' var(--text-loss-danger)\n);\n\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\n\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\n\n$LINEHEIGHTS: (\n    'large': 1.75,\n    'medium': 1.5,\n    'small': 1.25,\n    'xsmall': 1.4,\n);\n\n/*\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\n    Variables name example: --title-center-semibold-red\n */\n$TYPEFACES_LIST: generate-typefaces();\n\n/*\n    to use styles without modifier class on .inline-icon\n    use @extend\n\n    e.g. style icon on parent hover:\n        a:hover .inline-icon {\n            @extend %inline-icon-active;\n        }\n*/\n\n%inline-icon {\n    @include colorIcon(var(--text-general), none);\n\n    &.active,\n    &-active {\n        @include colorIcon(var(--text-prominent), none);\n    }\n    &.disabled,\n    &-disabled {\n        @include colorIcon(var(--text-disabled), none);\n    }\n    &.white,\n    &-white {\n        @include colorIcon(var(--text-prominent));\n    }\n    &.border_hover_color,\n    &-border_hover_color {\n        @include colorIcon(var(--text-prominent));\n    }\n    &.secondary,\n    &-secondary {\n        @include colorIcon(var(--text-less-prominent));\n    }\n}\n\n/**\n * Define Breakpoints here.\n */\n$mobile-width: 320px;\n$tablet-width: 768px;\n$desktop-width: 1024px;\n\n@mixin tablet {\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\n        @content;\n    }\n}\n\n@mixin desktop {\n    @media (min-width: #{$desktop-width}) {\n        @content;\n    }\n}\n\n@mixin tablet-down {\n    @media (max-width: #{$tablet-width}) {\n        @content;\n    }\n}\n\n@mixin tablet-up {\n    @media (min-width: #{$tablet-width}) {\n        @content;\n    }\n}\n\n@mixin mobile-up {\n    @media (min-width: #{$mobile-width}) {\n        @content;\n    }\n}\n\n@mixin mobile {\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\n        @content;\n    }\n}\n\n@mixin mobile-landscape {\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\n        @content;\n    }\n}\n\n@mixin touch-device {\n    // add css interaction media query to detect touch devices\n    // refer to: https://caniuse.com/#feat=css-media-interaction\n    @media (pointer: coarse) {\n        @content;\n    }\n}\n\n@mixin mobile-tablet-mix {\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\n        @content;\n    }\n}\n\n/** Need to add new breakpoints for mixins */\n$max-mobile-width: 600px;\n$min-desktop-width: 1280px;\n\n@mixin mobile-screen {\n    @media (max-width: #{$max-mobile-width}) {\n        @content;\n    }\n}\n\n@mixin tablet-screen {\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\n        @content;\n    }\n}\n\n@mixin desktop-screen {\n    @media (min-width: #{$min-desktop-width}) {\n        @content;\n    }\n}\n\n@mixin mobile-or-tablet-screen {\n    @media (max-width: #{$min-desktop-width - 1}) {\n        @content;\n    }\n}\n\n@mixin tablet-or-desktop-screen {\n    @media (min-width: #{$max-mobile-width + 1}) {\n        @content;\n    }\n}\n\n@mixin tablet-portrait-screen {\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\n        @content;\n    }\n}\n\n@mixin mobile-or-tablet-landscape {\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\n        @content;\n    }\n}\n\n.buy-sell-form {\n    opacity: 1 !important;\n\n    @include mobile-or-tablet-screen {\n        .dc-mobile-full-page-modal__header--border-bottom {\n            border-bottom: 2px solid var(--general-section-1);\n        }\n    }\n\n    &__content {\n        .dc-input {\n            margin-bottom: unset;\n        }\n    }\n\n    &__field {\n        margin-bottom: 0 !important;\n        flex: 1;\n        min-height: 4rem;\n\n        .dc-input__container {\n            width: 91%;\n            padding: 0.5rem 1rem 0.5rem 1.2rem;\n        }\n\n        &--disable {\n            opacity: 0.32;\n        }\n\n        &--floating {\n            margin-top: 2.2rem;\n        }\n\n        &--textarea {\n            border-top: 1px solid var(--general-section-5);\n            margin-bottom: 3.5rem;\n            padding: 1.8rem 2.4rem 0;\n\n            .dc-input {\n                &__container {\n                    height: 9.7rem;\n                }\n\n                &__field {\n                    padding-block: 1rem;\n                }\n            }\n        }\n\n        &-rate {\n            display: flex;\n            align-items: center;\n            gap: 0.5rem;\n\n            &--floating {\n                position: absolute;\n\n                &:hover {\n                    @include desktop-screen {\n                        position: fixed;\n                    }\n                }\n            }\n\n            .dc-tooltip[data-tooltip]:before {\n                background: var(--general-active);\n                color: var(--text-prominent);\n                width: 17rem;\n                border-radius: 0.8rem;\n                left: 9rem;\n                text-align: center;\n            }\n\n            .dc-tooltip[data-tooltip]:after {\n                border-top-color: var(--general-active);\n                left: 10rem;\n            }\n\n            &--float {\n                color: #1789e1;\n                background: rgba(44, 154, 255, 0.08);\n                padding: 0.2rem 0.4rem;\n                border-radius: 0.4rem;\n                cursor: pointer;\n            }\n        }\n\n        &-wrapper {\n            $gap: 2.4rem;\n            display: flex;\n            margin: -#{$gap} 0 1.6rem -#{$gap};\n            padding: 0 2.4rem;\n            word-break: break-word;\n\n            & > * {\n                margin: $gap 0 0 $gap;\n            }\n\n            @include mobile-or-tablet-screen {\n                flex-direction: column;\n\n                .dc-input__wrapper {\n                    margin-top: 2.5rem;\n                    width: 90vw;\n                }\n            }\n\n            > .dc-input {\n                margin-top: 1rem; // Compensate for label.\n            }\n        }\n    }\n\n    &-body {\n        position: relative;\n        display: block;\n        padding-top: 2.4rem;\n\n        @include mobile-or-tablet-screen {\n            & > form {\n                height: fit-content !important;\n            }\n        }\n    }\n\n    &-danger {\n        margin-bottom: 1.6rem;\n        width: fit-content;\n        align-items: flex-start;\n    }\n\n    &-form {\n        height: fit-content !important;\n    }\n\n    &-footer {\n        @include mobile-or-tablet-screen {\n            border-top: 2px solid var(--general-section-1);\n            display: flex;\n            flex-direction: row;\n            justify-content: flex-end;\n            margin-top: auto;\n            padding: 1.6rem;\n        }\n    }\n\n    &--input {\n        display: flex;\n        gap: 2rem;\n        flex-direction: column;\n        padding: 0 2.4rem 2rem;\n        margin-bottom: 2rem;\n        .dc-input__wrapper {\n            margin-right: 0.2rem;\n            margin-bottom: unset;\n        }\n\n        &-field {\n            @include desktop-screen {\n                display: flex;\n            }\n        }\n        @include mobile-or-tablet-screen {\n            .dc-input {\n                &__container {\n                    width: 100%;\n                    padding: 0.5rem 1rem 0.5rem 1.2rem;\n                }\n                &__wrapper {\n                    margin: 0.8rem 0.2rem 1.4rem 0;\n                }\n            }\n        }\n    }\n\n    &__inline-message {\n        margin-bottom: 2.4rem;\n        padding: 0 2.4rem;\n    }\n\n    &-icon {\n        margin-right: 0.8rem;\n    }\n\n    &-line {\n        border-top: 1px solid var(--general-section-5);\n        margin: 1.6rem 0;\n        width: 100%;\n    }\n\n    &-payment-method {\n        padding: 0 2.4rem;\n        &--container {\n            align-self: center;\n            display: flex;\n            flex-direction: column;\n            margin-bottom: 1.6rem;\n            padding: 0 2.4rem;\n        }\n\n        &--icon {\n            border-radius: 2px;\n            margin-inline-end: 0.8rem;\n        }\n\n        &--row {\n            align-items: center;\n            display: flex;\n            flex-direction: row;\n            margin-bottom: 0.8rem;\n        }\n\n        &--title {\n            margin-bottom: 0.8rem;\n        }\n    }\n\n    &-receive-amount {\n        @include mobile-or-tablet-screen {\n            border-top: 1px solid var(--general-section-2);\n            padding: 0.8rem 1.6rem;\n            background-color: var(--general-main-1);\n        }\n    }\n\n    &--sell-payment-methods {\n        display: flex;\n        flex-wrap: wrap;\n        gap: 0.8rem;\n        margin: 1.6rem 0 2.4rem;\n\n        .payment-method-card {\n            margin: unset;\n\n            @include mobile-or-tablet-screen {\n                min-height: 8.8rem;\n                min-width: unset;\n                width: 13.6rem;\n            }\n\n            &--add {\n                margin: unset;\n\n                @include mobile-or-tablet-screen {\n                    min-height: 8.8rem;\n                    width: 13.6rem;\n                }\n            }\n            &__body {\n                margin-top: 0.8rem;\n\n                @include mobile-or-tablet-screen {\n                    margin-top: 0;\n                }\n            }\n        }\n\n        &--disable {\n            opacity: 0.32;\n        }\n    }\n\n    &--layout {\n        padding: unset;\n    }\n\n    &--error-message {\n        padding: 0 2.4rem;\n    }\n}\n\n.dc-modal__container_buy-sell-form {\n    .dc-modal-header--buy-sell-form {\n        border-bottom: 2px solid var(--general-section-5);\n    }\n\n    .dc-modal-footer--separator {\n        margin-top: 1rem;\n        border-top: 2px solid var(--general-section-5);\n    }\n}\n"],sourceRoot:""}]);const l=i},25688:(n,e,r)=>{var t=r(72591),a=r(36518);"string"==typeof(a=a.__esModule?a.default:a)&&(a=[[n.id,a,""]]);var o={insert:"head",singleton:!1};t(a,o);n.exports=a.locals||{}},22482:(n,e,r)=>{var t=r(72591),a=r(58248);"string"==typeof(a=a.__esModule?a.default:a)&&(a=[[n.id,a,""]]);var o={insert:"head",singleton:!1};t(a,o);n.exports=a.locals||{}},71152:(n,e,r)=>{var t=r(72591),a=r(80398);"string"==typeof(a=a.__esModule?a.default:a)&&(a=[[n.id,a,""]]);var o={insert:"head",singleton:!1};t(a,o);n.exports=a.locals||{}},69520:(n,e,r)=>{var t=r(72591),a=r(32642);"string"==typeof(a=a.__esModule?a.default:a)&&(a=[[n.id,a,""]]);var o={insert:"head",singleton:!1};t(a,o);n.exports=a.locals||{}},16155:(n,e,r)=>{var t=r(72591),a=r(8557);"string"==typeof(a=a.__esModule?a.default:a)&&(a=[[n.id,a,""]]);var o={insert:"head",singleton:!1};t(a,o);n.exports=a.locals||{}},91120:(n,e,r)=>{var t=r(72591),a=r(5218);"string"==typeof(a=a.__esModule?a.default:a)&&(a=[[n.id,a,""]]);var o={insert:"head",singleton:!1};t(a,o);n.exports=a.locals||{}},56811:(n,e,r)=>{"use strict";r.r(e),r.d(e,{default:()=>nn});var t=r(39155),a=r(53373),o=r.n(a),i=r(85314),l=r(4442),c=r(82707),d=r(53877),s=r(36464),m=r(55119),$=r(82021),p=r(22814),g=r(36501),f=r(92437),b=r(81949),A=r.n(b),_=r(27106),u=r(45299),h=r(28767),x=r(17492),y=r(44193),C=r(92622);r(16155);const O=(0,m.observer)((function(){var n,e=(0,y.g)().buy_sell_store;return t.createElement("div",{className:"buy-sell-form-receive-amount"},t.createElement(d.Text,{as:"p",color:"less-prominent",size:"xxs"},null!=e&&e.is_sell_advert?t.createElement(p.we,{i18n_default_text:"You'll receive"}):t.createElement(p.we,{i18n_default_text:"You'll send"})),t.createElement(d.Text,{as:"p",size:"xs",weight:"bold"},(0,s.getFormattedText)((0,C.RR)(null==e?void 0:e.receive_amount),null==e||null===(n=e.advert)||void 0===n?void 0:n.local_currency)))}));var E=r(7575),w=r(53253),R=r(97012),v=r(26412),L=r(6308);r(91120);function I(n){return I="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},I(n)}function T(){return T=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var r=arguments[e];for(var t in r)({}).hasOwnProperty.call(r,t)&&(n[t]=r[t])}return n},T.apply(null,arguments)}function k(){k=function(){return e};var n,e={},r=Object.prototype,t=r.hasOwnProperty,a=Object.defineProperty||function(n,e,r){n[e]=r.value},o="function"==typeof Symbol?Symbol:{},i=o.iterator||"@@iterator",l=o.asyncIterator||"@@asyncIterator",c=o.toStringTag||"@@toStringTag";function d(n,e,r){return Object.defineProperty(n,e,{value:r,enumerable:!0,configurable:!0,writable:!0}),n[e]}try{d({},"")}catch(n){d=function(n,e,r){return n[e]=r}}function s(n,e,r,t){var o=e&&e.prototype instanceof A?e:A,i=Object.create(o.prototype),l=new T(t||[]);return a(i,"_invoke",{value:w(n,r,l)}),i}function m(n,e,r){try{return{type:"normal",arg:n.call(e,r)}}catch(n){return{type:"throw",arg:n}}}e.wrap=s;var $="suspendedStart",p="suspendedYield",g="executing",f="completed",b={};function A(){}function _(){}function u(){}var h={};d(h,i,(function(){return this}));var x=Object.getPrototypeOf,y=x&&x(x(B([])));y&&y!==r&&t.call(y,i)&&(h=y);var C=u.prototype=A.prototype=Object.create(h);function O(n){["next","throw","return"].forEach((function(e){d(n,e,(function(n){return this._invoke(e,n)}))}))}function E(n,e){function r(a,o,i,l){var c=m(n[a],n,o);if("throw"!==c.type){var d=c.arg,s=d.value;return s&&"object"==I(s)&&t.call(s,"__await")?e.resolve(s.__await).then((function(n){r("next",n,i,l)}),(function(n){r("throw",n,i,l)})):e.resolve(s).then((function(n){d.value=n,i(d)}),(function(n){return r("throw",n,i,l)}))}l(c.arg)}var o;a(this,"_invoke",{value:function(n,t){function a(){return new e((function(e,a){r(n,t,e,a)}))}return o=o?o.then(a,a):a()}})}function w(e,r,t){var a=$;return function(o,i){if(a===g)throw Error("Generator is already running");if(a===f){if("throw"===o)throw i;return{value:n,done:!0}}for(t.method=o,t.arg=i;;){var l=t.delegate;if(l){var c=R(l,t);if(c){if(c===b)continue;return c}}if("next"===t.method)t.sent=t._sent=t.arg;else if("throw"===t.method){if(a===$)throw a=f,t.arg;t.dispatchException(t.arg)}else"return"===t.method&&t.abrupt("return",t.arg);a=g;var d=m(e,r,t);if("normal"===d.type){if(a=t.done?f:p,d.arg===b)continue;return{value:d.arg,done:t.done}}"throw"===d.type&&(a=f,t.method="throw",t.arg=d.arg)}}}function R(e,r){var t=r.method,a=e.iterator[t];if(a===n)return r.delegate=null,"throw"===t&&e.iterator.return&&(r.method="return",r.arg=n,R(e,r),"throw"===r.method)||"return"!==t&&(r.method="throw",r.arg=new TypeError("The iterator does not provide a '"+t+"' method")),b;var o=m(a,e.iterator,r.arg);if("throw"===o.type)return r.method="throw",r.arg=o.arg,r.delegate=null,b;var i=o.arg;return i?i.done?(r[e.resultName]=i.value,r.next=e.nextLoc,"return"!==r.method&&(r.method="next",r.arg=n),r.delegate=null,b):i:(r.method="throw",r.arg=new TypeError("iterator result is not an object"),r.delegate=null,b)}function v(n){var e={tryLoc:n[0]};1 in n&&(e.catchLoc=n[1]),2 in n&&(e.finallyLoc=n[2],e.afterLoc=n[3]),this.tryEntries.push(e)}function L(n){var e=n.completion||{};e.type="normal",delete e.arg,n.completion=e}function T(n){this.tryEntries=[{tryLoc:"root"}],n.forEach(v,this),this.reset(!0)}function B(e){if(e||""===e){var r=e[i];if(r)return r.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var a=-1,o=function r(){for(;++a<e.length;)if(t.call(e,a))return r.value=e[a],r.done=!1,r;return r.value=n,r.done=!0,r};return o.next=o}}throw new TypeError(I(e)+" is not iterable")}return _.prototype=u,a(C,"constructor",{value:u,configurable:!0}),a(u,"constructor",{value:_,configurable:!0}),_.displayName=d(u,c,"GeneratorFunction"),e.isGeneratorFunction=function(n){var e="function"==typeof n&&n.constructor;return!!e&&(e===_||"GeneratorFunction"===(e.displayName||e.name))},e.mark=function(n){return Object.setPrototypeOf?Object.setPrototypeOf(n,u):(n.__proto__=u,d(n,c,"GeneratorFunction")),n.prototype=Object.create(C),n},e.awrap=function(n){return{__await:n}},O(E.prototype),d(E.prototype,l,(function(){return this})),e.AsyncIterator=E,e.async=function(n,r,t,a,o){void 0===o&&(o=Promise);var i=new E(s(n,r,t,a),o);return e.isGeneratorFunction(r)?i:i.next().then((function(n){return n.done?n.value:i.next()}))},O(C),d(C,c,"Generator"),d(C,i,(function(){return this})),d(C,"toString",(function(){return"[object Generator]"})),e.keys=function(n){var e=Object(n),r=[];for(var t in e)r.push(t);return r.reverse(),function n(){for(;r.length;){var t=r.pop();if(t in e)return n.value=t,n.done=!1,n}return n.done=!0,n}},e.values=B,T.prototype={constructor:T,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=n,this.done=!1,this.delegate=null,this.method="next",this.arg=n,this.tryEntries.forEach(L),!e)for(var r in this)"t"===r.charAt(0)&&t.call(this,r)&&!isNaN(+r.slice(1))&&(this[r]=n)},stop:function(){this.done=!0;var n=this.tryEntries[0].completion;if("throw"===n.type)throw n.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var r=this;function a(t,a){return l.type="throw",l.arg=e,r.next=t,a&&(r.method="next",r.arg=n),!!a}for(var o=this.tryEntries.length-1;o>=0;--o){var i=this.tryEntries[o],l=i.completion;if("root"===i.tryLoc)return a("end");if(i.tryLoc<=this.prev){var c=t.call(i,"catchLoc"),d=t.call(i,"finallyLoc");if(c&&d){if(this.prev<i.catchLoc)return a(i.catchLoc,!0);if(this.prev<i.finallyLoc)return a(i.finallyLoc)}else if(c){if(this.prev<i.catchLoc)return a(i.catchLoc,!0)}else{if(!d)throw Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return a(i.finallyLoc)}}}},abrupt:function(n,e){for(var r=this.tryEntries.length-1;r>=0;--r){var a=this.tryEntries[r];if(a.tryLoc<=this.prev&&t.call(a,"finallyLoc")&&this.prev<a.finallyLoc){var o=a;break}}o&&("break"===n||"continue"===n)&&o.tryLoc<=e&&e<=o.finallyLoc&&(o=null);var i=o?o.completion:{};return i.type=n,i.arg=e,o?(this.method="next",this.next=o.finallyLoc,b):this.complete(i)},complete:function(n,e){if("throw"===n.type)throw n.arg;return"break"===n.type||"continue"===n.type?this.next=n.arg:"return"===n.type?(this.rval=this.arg=n.arg,this.method="return",this.next="end"):"normal"===n.type&&e&&(this.next=e),b},finish:function(n){for(var e=this.tryEntries.length-1;e>=0;--e){var r=this.tryEntries[e];if(r.finallyLoc===n)return this.complete(r.completion,r.afterLoc),L(r),b}},catch:function(n){for(var e=this.tryEntries.length-1;e>=0;--e){var r=this.tryEntries[e];if(r.tryLoc===n){var t=r.completion;if("throw"===t.type){var a=t.arg;L(r)}return a}}throw Error("illegal catch attempt")},delegateYield:function(e,r,t){return this.delegate={iterator:B(e),resultName:r,nextLoc:t},"next"===this.method&&(this.arg=n),b}},e}function B(n,e,r,t,a,o,i){try{var l=n[o](i),c=l.value}catch(n){return void r(n)}l.done?e(c):Promise.resolve(c).then(t,a)}function G(n){return function(){var e=this,r=arguments;return new Promise((function(t,a){var o=n.apply(e,r);function i(n){B(o,t,a,i,l,"next",n)}function l(n){B(o,t,a,i,l,"throw",n)}i(void 0)}))}}function S(n){return function(n){if(Array.isArray(n))return F(n)}(n)||function(n){if("undefined"!=typeof Symbol&&null!=n[Symbol.iterator]||null!=n["@@iterator"])return Array.from(n)}(n)||K(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function D(n,e){var r=Object.keys(n);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(n);e&&(t=t.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),r.push.apply(r,t)}return r}function H(n){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?D(Object(r),!0).forEach((function(e){z(n,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(r)):D(Object(r)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(r,e))}))}return n}function z(n,e,r){return(e=function(n){var e=function(n,e){if("object"!=I(n)||!n)return n;var r=n[Symbol.toPrimitive];if(void 0!==r){var t=r.call(n,e||"default");if("object"!=I(t))return t;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===e?String:Number)(n)}(n,"string");return"symbol"==I(e)?e:e+""}(e))in n?Object.defineProperty(n,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):n[e]=r,n}function N(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){var r=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=r){var t,a,o,i,l=[],c=!0,d=!1;try{if(o=(r=r.call(n)).next,0===e){if(Object(r)!==r)return;c=!1}else for(;!(c=(t=o.call(r)).done)&&(l.push(t.value),l.length!==e);c=!0);}catch(n){d=!0,a=n}finally{try{if(!c&&null!=r.return&&(i=r.return(),Object(i)!==i))return}finally{if(d)throw a}}return l}}(n,e)||K(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function K(n,e){if(n){if("string"==typeof n)return F(n,e);var r={}.toString.call(n).slice(8,-1);return"Object"===r&&n.constructor&&(r=n.constructor.name),"Map"===r||"Set"===r?Array.from(n):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?F(n,e):void 0}}function F(n,e){(null==e||e>n.length)&&(e=n.length);for(var r=0,t=Array(e);r<e;r++)t[r]=n[r];return t}var P=function(n){var e=(0,$.Y)().isDesktop,r=(0,y.g)(),a=r.advertiser_page_store,l=r.buy_sell_store,c=r.general_store,m=r.my_profile_store,f=N(t.useState([]),2),b=f[0],A=f[1],I=(0,h.useP2PAdvertiserPaymentMethods)().data,B=(0,g.v)().stacked_modal,D=n.advert,z=n.has_rate_changed,K=n.setHasRateChanged,F=n.setPageFooterParent,P=D||{},U=P.advertiser_details,M=P.description,Y=P.effective_rate,W=P.local_currency,Z=P.max_order_amount_limit_display,j=P.min_order_amount_limit,J=P.min_order_amount_limit_display,q=P.order_expiry_period,X=P.payment_method_names,V=P.price,Q=P.rate,nn=P.rate_type,en=(0,h.useP2PExchangeRate)(W),rn=q/60,tn=N(t.useState(j),2),an=tn[0],on=tn[1],ln=N(t.useState(0),2),cn=ln[0],dn=ln[1],sn=N(t.useState(void 0),2),mn=sn[0],$n=sn[1];t.useEffect((function(){l.setFormProps(H(H({},n),{},{input_amount:an}))}),[n,l,an]);var pn=(0,C.N6)({price:V,rate_type:nn,rate:Q,local_currency:W,exchange_rate:en,market_rate:Y}),gn=pn.effective_rate,fn=pn.display_effective_rate,bn=c.advertiser_buy_limit,An=c.advertiser_sell_limit,_n=c.balance,un=!l.is_buy_advert&&(0===parseFloat(_n)||parseFloat(_n)<j),hn={borderColor:"var(--brand-secondary)",borderWidth:"2px",cursor:un?"not-allowed":"pointer"},xn=(0,C.KM)((0,C.RR)(gn,(0,C.e7)(gn,6))),yn=nn===x.H.FLOAT;t.useEffect((function(){m.setShouldShowAddPaymentMethodForm(!1),m.setSelectedPaymentMethod(""),m.setSelectedPaymentMethodDisplayName(""),l.setHasPaymentMethods(!!X),dn(gn);var n=(0,i.reaction)((function(){return l.receive_amount}),(function(){e||"function"!=typeof F||F(t.createElement(O,null))}));return m.advertiser_has_payment_methods||(m.getPaymentMethodsList(),m.getAdvertiserPaymentMethods()),a.setFormErrorMessage(""),l.setInitialReceiveAmount(xn),function(){n()}}),[]),t.useEffect((function(){var n=an*xn;l.setReceiveAmount(n)}),[an,xn]),t.useEffect((function(){!e&&z&&cn!==gn&&"MarketRateChangeErrorModal"!==(null==B?void 0:B.key)&&$n(gn)}),[cn,gn,z,B]),t.useEffect((function(){cn!==gn&&0!==cn&&K(!0)}),[cn,gn,K]);var Cn=null!=mn?mn:gn,On=function(n){un||(l.payment_method_ids.includes(n.id)?(l.payment_method_ids=l.payment_method_ids.filter((function(e){return e!==n.id})),A(b.filter((function(e){return e!==n.id})))):l.payment_method_ids.length<3&&(l.payment_method_ids.push(n.id),A([].concat(S(b),[n.id]))))},En=(0,_.useFormik)({enableReinitialize:!0,validate:l.validatePopup,validateOnMount:!un,initialValues:{amount:j,contact_info:l.temp_contact_info||c.contact_info,payment_info:l.temp_payment_info||c.payment_info,rate:yn?Cn:null},initialErrors:l.is_sell_advert?{contact_info:!0}:{},onSubmit:function(){return l.handleSubmit.apply(l,arguments)}}),wn=En.errors,Rn=En.getFieldProps,vn=En.isSubmitting,Ln=En.isValid,In=En.validateForm,Tn=En.setFieldValue,kn=En.submitForm,Bn=En.touched;return t.useEffect((function(){l.form_props.setIsSubmitDisabled(!Ln||vn||l.is_sell_advert&&X&&b.length<1)}),[Ln,vn,b.length,l.is_sell_advert,X,l.form_props]),t.useEffect((function(){l.setSubmitForm(kn)}),[kn]),t.createElement(t.Fragment,null,t.createElement("form",{noValidate:!0,onSubmit:kn},t.createElement("div",{className:"buy-sell-form__content"},t.createElement("div",{className:"buy-sell-form__field-wrapper"},t.createElement("div",{className:"buy-sell-form__field"},t.createElement(d.Text,{as:"p",color:"less-prominent",size:"xxs"},l.is_buy_advert?t.createElement(p.we,{i18n_default_text:"Seller"}):t.createElement(p.we,{i18n_default_text:"Buyer"})),t.createElement(d.Text,{as:"p",size:"xs"},null==U?void 0:U.name)),t.createElement("div",{className:"buy-sell-form__field"},t.createElement("div",{className:o()("buy-sell-form__field-rate",{"buy-sell-form__field-rate--floating":yn})},t.createElement(d.Text,{as:"p",color:"less-prominent",size:"xxs"},t.createElement(p.we,{i18n_default_text:"Rate (1 {{ currency }})",values:{currency:l.account_currency}})),yn&&t.createElement(d.Tooltip,{alignment:"top",message:(0,p.kg)("Floating exchange rate shifts with market fluctuations.")},t.createElement(d.Text,{as:"p",className:"buy-sell-form__field-rate--float",size:"xxs"},t.createElement(p.we,{i18n_default_text:"Floating"})))),t.createElement(d.Text,{as:"p",className:o()({"buy-sell-form__field--floating":yn}),size:"xs"},fn," ",W))),t.createElement("div",{className:"buy-sell-form-payment-method--container"},X&&t.createElement(d.Text,{as:"p",className:"buy-sell-form-payment-method--title",color:"less-prominent",size:"xxs"},t.createElement(p.we,{i18n_default_text:"Payment methods"})),X&&X.map((function(n,e){return t.createElement("div",{className:"buy-sell-form-payment-method--row",key:e},t.createElement(L.A,{className:"buy-sell-form-payment-method--icon",display_name:n}),t.createElement(d.Text,{as:"p",size:"xs"},n))}))),t.createElement("div",{className:"buy-sell-form__field-wrapper"},t.createElement("div",{className:"buy-sell-form__field"},t.createElement(d.Text,{as:"p",color:"less-prominent",size:"xxs"},l.is_buy_advert?t.createElement(p.we,{i18n_default_text:"Seller's instructions"}):t.createElement(p.we,{i18n_default_text:"Buyer's instructions"})),M&&M.trim().replace(/([\r\n]){2,}/g,"\n\n").split("\n").map((function(n,e){return t.createElement(d.Text,{key:e,as:"p",size:"xs"},n||"-")})))),t.createElement("div",{className:"buy-sell-form__field-wrapper"},t.createElement("div",{className:"buy-sell-form-field"},t.createElement(d.Text,{as:"p",color:"less-prominent",size:"xxs"},t.createElement(p.we,{i18n_default_text:"Orders must be completed in"})),t.createElement(d.Text,{as:"p",color:"general",size:"xs"},(0,v.fU)(rn)))),t.createElement("div",{className:"buy-sell-form-line"}),l.is_sell_advert&&X&&t.createElement(t.Fragment,null,t.createElement("div",{className:"buy-sell-form-payment-method"},t.createElement(d.Text,{as:"p",className:"buy-sell-form-payment-method--title",color:"less-prominent",size:"xxs"},t.createElement(p.we,{i18n_default_text:"Receive payment to"})),t.createElement(d.Text,{as:"p",color:"prominent",size:"xxs"},m.advertiser_has_payment_methods?t.createElement(p.we,{i18n_default_text:"You may choose up to 3."}):t.createElement(p.we,{i18n_default_text:"To place an order, add one of the advertiser's preferred payment methods:"})),t.createElement(u.Observer,null,(function(){return t.createElement("div",{className:o()("buy-sell-form--sell-payment-methods",{"buy-sell-form--sell-payment-methods--disable":un})},null==X?void 0:X.map((function(n,e){var r=m.setSelectedPaymentMethodDisplayName,a=m.setShouldShowAddPaymentMethodForm,o=null==I?void 0:I.filter((function(e){return e.display_name===n}));return(null==o?void 0:o.length)>0?o.map((function(n){return t.createElement(E.A,{is_vertical_ellipsis_visible:!1,key:e,medium:!0,onClick:G(k().mark((function e(){return k().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return On(n),e.next=3,In();case 3:case"end":return e.stop()}}),e)}))),payment_method:n,style:b.includes(n.id)?hn:{},disabled:un})})):t.createElement(E.A,{add_payment_method:n,is_add:!0,key:e,medium:!0,onClickAdd:function(){un||(r(n),a(!0))},disabled:un,style:{cursor:un?"not-allowed":"pointer"}})})).sort((function(n){var e;return!Array.isArray(n)||null!==(e=n[0].props)&&void 0!==e&&e.is_add?1:-1})))}))),t.createElement("div",{className:"buy-sell-form-line"})),t.createElement("div",{className:"buy-sell-form--input"},t.createElement(d.Text,{color:"less-prominent",size:"xxs"},(0,p.kg)("Enter {{transaction_type}} amount",{transaction_type:l.is_buy_advert?"buy":"sell"})),t.createElement("section",{className:"buy-sell-form--input-field"},t.createElement(d.Input,T({},Rn("amount"),{"data-lpignore":"true",type:"number",error:wn.amount,label:(0,p.kg)("{{ad_type}}",{ad_type:l.is_buy_advert?"Buy amount":"Sell amount"}),hint:t.createElement(p.we,{i18n_default_text:"Limit: {{min}}–{{max}} {{currency}}",values:{min:J,max:function(){if(l.is_buy_advert){if(bn<Z)return(0,C.RR)(bn)}else if(An<Z)return(0,C.RR)(An);return Z}(),currency:l.account_currency}}),is_relative_hint:!0,className:"buy-sell-form__field",trailing_icon:t.createElement(d.Text,{color:"less-prominent",size:"xs"},l.account_currency),onKeyDown:function(n){(0,w.fq)(n.key)||n.preventDefault()},onChange:function(n){var e=n.target.value;(0,R.F)(e)>(0,s.getDecimalPlaces)(l.account_currency)?Tn("amount",parseFloat(an)):(Tn("amount",parseFloat(e)),on(e))},required:!0,value:an,disabled:un})),e&&t.createElement("div",{className:o()("buy-sell-form__field",{"buy-sell-form__field--disable":un})},t.createElement(O,null)))),l.is_sell_advert&&t.createElement(t.Fragment,null,!X&&t.createElement("div",{className:"buy-sell-form__field--textarea"},t.createElement(d.Input,T({},Rn("payment_info"),{"data-lpignore":"true",type:"textarea",error:Bn.payment_info&&wn.payment_info,hint:(0,p.kg)("Bank name, account number, beneficiary name"),is_relative_hint:!0,label:(0,p.kg)("Your bank details"),required:!0,has_character_counter:!0,initial_character_count:c.payment_info.length,max_characters:300,disabled:un,onChange:function(n){return l.setTempPaymentInfo(n.target.value)}}))),t.createElement("div",{className:"buy-sell-form__field--textarea"},t.createElement(d.Input,T({},Rn("contact_info"),{"data-lpignore":"true",type:"textarea",error:Bn.contact_info&&wn.contact_info,label:(0,p.kg)("Your contact details"),required:!0,has_character_counter:!0,initial_character_count:c.contact_info.length,max_characters:300,disabled:un,onChange:function(n){return l.setTempContactInfo(n.target.value)}})))))))};P.propTypes={advert:A().object,contact_info:A().string,form_props:A().object,has_rate_changed:A().bool,setIsSubmitDisabled:A().func,setPageFooterParent:A().func,has_payment_info:A().bool,is_buy_advert:A().bool,is_sell_advert:A().bool,payment_info:A().string,receive_amount:A().number,setFormProps:A().func,setHasRateChanged:A().func,setInitialReceiveAmount:A().func,setReceiveAmount:A().func,validatePopup:A().func};const U=(0,u.observer)(P);var M=r(76771);const Y=function(n){var e=n.is_submit_disabled,r=n.onCancel,a=n.onSubmit,o=(0,y.g)().my_profile_store;return t.createElement("div",{className:o.should_show_add_payment_method_form?"add-payment-method__footer":"buy-sell-modal-footer"},t.createElement(d.Button.Group,null,t.createElement(d.Button,{secondary:!0,onClick:r,large:!0},(0,p.kg)("Cancel")),t.createElement(d.Button,{is_disabled:e,primary:!0,large:!0,onClick:a},(0,p.kg)("Confirm"))))};r(22482);const W=Y;const Z=(0,m.observer)((function(n){var e=n.is_buy,r=void 0!==e&&e,a=n.onReturn,o=(0,$.Y)().isDesktop,i=(0,y.g)(),l=i.buy_sell_store,c=i.my_profile_store,s=l.selected_ad_state.account_currency;return t.createElement(d.Text,{as:"p",color:"prominent",weight:"bold"},c.should_show_add_payment_method_form?o?t.createElement("div",{className:"buy-sell-modal-title"},t.createElement(d.Icon,{icon:"IcArrowLeftBold",data_testid:"dt_buy_sell_modal_back_icon",onClick:a,className:"buy-sell-modal-title__icon"}),t.createElement(p.we,{i18n_default_text:"Add payment method"})):t.createElement(p.we,{i18n_default_text:"Add payment method"}):r?t.createElement(p.we,{i18n_default_text:"Buy {{ currency }}",values:{currency:s}}):t.createElement(p.we,{i18n_default_text:"Sell {{ currency }}",values:{currency:s}}))}));r(71152);const j=Z;const J=function(n){var e=n.error_message,r=n.show_low_balance_message,a=(0,$.Y)().isMobile;return e||r?t.createElement("div",{className:"buy-sell-modal-error"},t.createElement(d.InlineMessage,{message:r?(0,p.kg)("Your Deriv P2P balance isn't enough. Please increase your balance before trying again."):e,size:(0,M.UT)("sm","xs",a),type:"error"})):null};r(25688);const q=J;function X(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){var r=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=r){var t,a,o,i,l=[],c=!0,d=!1;try{if(o=(r=r.call(n)).next,0===e){if(Object(r)!==r)return;c=!1}else for(;!(c=(t=o.call(r)).done)&&(l.push(t.value),l.length!==e);c=!0);}catch(n){d=!0,a=n}finally{try{if(!c&&null!=r.return&&(i=r.return(),Object(i)!==i))return}finally{if(d)throw a}}return l}}(n,e)||function(n,e){if(n){if("string"==typeof n)return V(n,e);var r={}.toString.call(n).slice(8,-1);return"Object"===r&&n.constructor&&(r=n.constructor.name),"Map"===r||"Set"===r?Array.from(n):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?V(n,e):void 0}}(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function V(n,e){(null==e||e>n.length)&&(e=n.length);for(var r=0,t=Array(e);r<e;r++)t[r]=n[r];return t}const Q=(0,m.observer)((function(){var n=(0,$.Y)(),e=n.isDesktop,r=n.isMobile,a=(0,g.v)(),m=a.hideModal,b=a.is_modal_open,A=a.showModal,_=(0,y.g)(),u=_.buy_sell_store,h=_.general_store,x=_.my_profile_store,C=_.order_store,E=u.is_buy_advert,w=u.selected_ad_state,R=u.submitForm,v=w.account_currency,L=h.balance,I=x.should_show_add_payment_method_form,T=(0,c.useInvalidateQuery)(),k=(0,l.useHistory)(),B=(0,l.useLocation)(),G=t.useRef(null),S=X(t.useState(""),2),D=S[0],H=S[1],z=X(t.useState(!1),2),N=z[0],K=z[1],F=X(t.useState(!1),2),P=F[0],Y=F[1],Z=X(t.useState(!1),2),J=Z[0],V=Z[1],Q=X(t.useState(!1),2),nn=Q[0],en=Q[1],rn=!E&&P,tn=function(){I?h.is_form_modified?A({key:"CancelAddPaymentMethodModal",props:{}}):x.hideAddPaymentMethodForm():(m({should_hide_all_modals:!0}),u.fetchAdvertiserAdverts(),u.unsubscribeAdvertInfo(),u.setTempContactInfo(null),u.setTempPaymentInfo(null),u.payment_method_ids=[])},an=function(n){var e=new URLSearchParams(B.search);e.append("order",n.id),h.redirectTo("orders",{nav:{location:"buy_sell"}}),k.replace({pathname:s.routes.p2p_orders,search:e.toString(),hash:B.hash}),C.setOrderId(n.id),m(),u.fetchAdvertiserAdverts(),u.setShowAdvertiserPage(!1)},on=function(){h.is_form_modified?A({key:"CancelAddPaymentMethodModal",props:{}}):x.setShouldShowAddPaymentMethodForm(!1)},ln=function(){var n;J?A({key:"MarketRateChangeErrorModal",props:{submitForm:R,values:{currency:u.account_currency,input_amount:Number(u.form_props.input_amount).toFixed(2),local_currency:null==u||null===(n=u.advert)||void 0===n?void 0:n.local_currency,received_amount:null==u?void 0:u.receive_amount.toFixed(2)}}}):(R(),m({should_hide_all_modals:!0}))};return t.useEffect((function(){var n,e=0===parseFloat(L)||parseFloat(L)<(null===(n=u.advert)||void 0===n?void 0:n.min_order_amount_limit);Y(e),b||H(""),h.counterparty_advert_id&&h.setCounterpartyAdvertId("")}),[b]),t.useEffect((function(){(D||rn)&&G.current&&G.current.scrollTo({top:0,behavior:"smooth"})}),[D,rn]),t.useEffect((function(){var n=(0,i.reaction)((function(){return u.advert}),(function(n,e){var t=(null==e?void 0:e.rate)!==n.rate,a=(null==e?void 0:e.id)===n.id;t&&a&&!nn&&(A({key:"ErrorModal",props:{error_modal_button_text:(0,p.kg)("Try again"),error_message:(0,p.kg)("The advertiser changed the rate before you confirmed the order."),text_size:(0,M.xY)("xxs","xs",r),onClose:function(){A({key:"BuySellModal",props:{}})}}}),u.setFormErrorCode(""),T("p2p_advert_list"))}),{fireImmediately:!0});return function(){n()}}),[nn]),e?t.createElement(d.Modal,{className:o()("buy-sell-modal",{"buy-sell-modal__form":I}),has_return_icon:I,height:E?"auto":"649px",is_open:b,onReturn:on,portalId:"modal_root",title:I?(0,p.kg)("Add payment method"):E?(0,p.kg)("Buy {{ currency }}",{currency:v}):(0,p.kg)("Sell {{ currency }}",{currency:v}),toggleModal:tn,width:"456px"},t.createElement(d.ThemedScrollbars,{height:E?"100%":"calc(100% - 5.8rem - 7.4rem)",refSetter:G},t.createElement(d.Modal.Body,{className:"buy-sell-modal__layout"},t.createElement(q,{error_message:D,show_low_balance_message:rn}),I?t.createElement(f.A,{should_show_separated_footer:!0}):t.createElement(U,{advert:w,has_rate_changed:J,handleClose:tn,handleConfirm:an,setIsSubmitDisabled:K,setErrorMessage:H,setHasRateChanged:V,setIsMarketRateErrorModalOpen:en}))),!I&&t.createElement(d.Modal.Footer,{has_separator:!0},t.createElement(W,{is_submit_disabled:!!N,onCancel:tn,onSubmit:ln}))):t.createElement(d.MobileFullPageModal,{body_className:"buy-sell-modal__body",className:"buy-sell-modal",height_offset:"80px",is_flex:!0,is_modal_open:b,page_header_className:"buy-sell-modal__header",renderPageHeaderElement:t.createElement(j,{is_buy:E,onReturn:on}),pageHeaderReturnFn:tn},t.createElement(d.ThemedScrollbars,{refSetter:G},t.createElement(q,{error_message:D,show_low_balance_message:rn}),I?t.createElement(f.A,{should_show_separated_footer:!0}):t.createElement(t.Fragment,null,t.createElement(U,{advert:w,has_rate_changed:J,handleClose:tn,handleConfirm:an,setIsSubmitDisabled:K,setErrorMessage:H,setHasRateChanged:V,setIsMarketRateErrorModalOpen:en}),t.createElement(O,null),t.createElement(W,{is_submit_disabled:!!N,onCancel:tn,onSubmit:ln}))))}));r(69520);const nn=Q}}]);
//# sourceMappingURL=p2p.buy-sell-modal.0404a743e9335b413bea.js.map