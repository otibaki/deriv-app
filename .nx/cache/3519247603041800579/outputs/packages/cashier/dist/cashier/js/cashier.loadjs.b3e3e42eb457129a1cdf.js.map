{"version":3,"file":"cashier/js/cashier.loadjs.b3e3e42eb457129a1cdf.js","mappings":"wJAAA,UAEI,EAAO,QAAW,0BAAP,EAMP,WAMR,IAAIA,EAAU,WAAY,EACtBC,EAAgB,CAAC,EACjBC,EAAoB,CAAC,EACrBC,EAAsB,CAAC,EAQ3B,SAASC,EAAUC,EAAWC,GAE5BD,EAAYA,EAAUE,KAAOF,EAAY,CAACA,GAE1C,IAGIG,EACAC,EACAC,EALAC,EAAe,GACfC,EAAIP,EAAUQ,OACdC,EAAaF,EAejB,IARAJ,EAAK,SAAUC,EAAUM,GACnBA,EAAcF,QAAQF,EAAaJ,KAAKE,KAE5CK,GACiBR,EAAWK,EAC9B,EAGOC,KACLH,EAAWJ,EAAUO,IAGrBF,EAAIR,EAAkBO,IAEpBD,EAAGC,EAAUC,IAKXP,EAAoBM,GAAYN,EAAoBM,IAAa,IACnEF,KAAKC,EAEX,CAQA,SAASQ,EAAQP,EAAUM,GAEzB,GAAKN,EAAL,CAEA,IAAIQ,EAAId,EAAoBM,GAM5B,GAHAP,EAAkBO,GAAYM,EAGzBE,EAGL,KAAOA,EAAEJ,QACPI,EAAE,GAAGR,EAAUM,GACfE,EAAEC,OAAO,EAAG,EAbO,CAevB,CAQA,SAASC,EAAiBC,EAAMT,GAE1BS,EAAKC,OAAMD,EAAO,CAACE,QAASF,IAG5BT,EAAaE,QAASO,EAAKG,OAASvB,GAASW,IAC3CS,EAAKE,SAAWtB,GAASoB,EACjC,CAQA,SAASI,EAASC,EAAMnB,EAAYc,EAAMM,GACxC,IAMIC,EACAC,EACAC,EARAC,EAAMC,SACNC,EAAQZ,EAAKY,MACbC,GAAYb,EAAKc,YAAc,GAAK,EACpCC,EAAmBf,EAAKgB,QAAUpC,EAClCqC,EAAWZ,EAAKa,QAAQ,YAAa,IACrCC,EAAed,EAAKa,QAAQ,8BAA+B,IAO/D,GAFAZ,EAAWA,GAAY,EAEnB,iBAAiBc,KAAKH,IAExBR,EAAIC,EAAIW,cAAc,SACpBC,IAAM,aACRb,EAAEc,KAAOJ,GAGTZ,EAAgB,cAAeE,IAGVA,EAAEe,UACrBjB,EAAgB,EAChBE,EAAEa,IAAM,UACRb,EAAEgB,GAAK,cAEJ,GAAI,oCAAoCL,KAAKH,IAElDR,EAAIC,EAAIW,cAAc,QACpBK,IAAMP,OAeR,IAZAV,EAAIC,EAAIW,cAAc,WACpBK,IAAMP,EACRV,EAAEG,WAAkBe,IAAVf,GAA6BA,EASvCJ,EAAmB,aAAcC,EAC7B,WAAWW,KAAKH,GAAW,CAC7B,IAAKT,EAAkB,OAAOtB,EAAWmB,EAAM,KAC/CI,EAAEmB,KAAO,QACX,MAAO,GAAI,aAAaR,KAAKH,IAAaT,EAAkB,OAAOtB,EAAWmB,EAAM,KAGtFI,EAAEoB,OAASpB,EAAEqB,QAAUrB,EAAEsB,aAAe,SAAUC,GAChD,IAAIC,EAASD,EAAGJ,KAAK,GAIrB,GAAIrB,EACF,IACOE,EAAEyB,MAAMC,QAAQ1C,SAAQwC,EAAS,IACxC,CAAE,MAAOG,GAGO,IAAVA,EAAEC,OAAYJ,EAAS,IAC7B,CAIF,GAAc,KAAVA,GAKF,IAHA3B,GAAY,GAGGO,EACb,OAAOT,EAASC,EAAMnB,EAAYc,EAAMM,QAErC,GAAa,WAATG,EAAEa,KAA4B,SAARb,EAAEgB,GAEjC,OAAOhB,EAAEa,IAAM,aAIjBpC,EAAWmB,EAAM4B,EAAQD,EAAGM,iBAC9B,GAGkC,IAA9BvB,EAAiBV,EAAMI,IAAcC,EAAI6B,KAAKC,YAAY/B,EAChE,CAQA,SAASgC,EAAUC,EAAOxD,EAAYc,GAIpC,IAGIZ,EACAI,EAJAE,GAFJgD,EAAQA,EAAMvD,KAAOuD,EAAQ,CAACA,IAEPjD,OACnB2C,EAAI1C,EACJC,EAAgB,GAqBpB,IAhBAP,EAAK,SAASiB,EAAM4B,EAAQK,GAM1B,GAJc,KAAVL,GAAetC,EAAcR,KAAKkB,GAIxB,KAAV4B,EAAe,CACjB,IAAIK,EACC,OADiB3C,EAAcR,KAAKkB,EAE3C,GAEAX,GACiBR,EAAWS,EAC9B,EAGKH,EAAE,EAAGA,EAAI4C,EAAG5C,IAAKY,EAASsC,EAAMlD,GAAIJ,EAAIY,EAC/C,CAYA,SAAS2C,EAAOD,EAAOE,EAAMC,GAC3B,IAAIxD,EACAW,EASJ,GANI4C,GAAQA,EAAKE,OAAMzD,EAAWuD,GAGlC5C,GAAQX,EAAWwD,EAAOD,IAAS,CAAC,EAGhCvD,EAAU,CACZ,GAAIA,KAAYR,EACd,KAAM,SAENA,EAAcQ,IAAY,CAE9B,CAEA,SAAS0D,EAAOC,EAASC,GACvBR,EAAUC,GAAO,SAAU/C,GAEzBI,EAAiBC,EAAML,GAGnBqD,GACFjD,EAAiB,CAACG,QAAS8C,EAAS7C,MAAO8C,GAAStD,GAItDC,EAAQP,EAAUM,EACpB,GAAGK,EACL,CAEA,GAAIA,EAAKkD,cAAe,OAAO,IAAIC,QAAQJ,GACtCA,GACP,CAgDA,OAxCAJ,EAAOS,MAAQ,SAAeC,EAAMrD,GAOlC,OALAhB,EAAUqE,GAAM,SAAU9D,GAExBQ,EAAiBC,EAAMT,EACzB,IAEOoD,CACT,EAOAA,EAAOW,KAAO,SAAcjE,GAC1BO,EAAQP,EAAU,GACpB,EAMAsD,EAAOY,MAAQ,WACb1E,EAAgB,CAAC,EACjBC,EAAoB,CAAC,EACrBC,EAAsB,CAAC,CACzB,EAOA4D,EAAOa,UAAY,SAAmBnE,GACpC,OAAOA,KAAYR,CACrB,EAIO8D,CAEP,GAvUsB,8B","sources":["webpack://@deriv/cashier/../../../node_modules/loadjs/dist/loadjs.umd.js"],"sourcesContent":["(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.loadjs = factory();\n  }\n}(this, function() {\n/**\n * Global dependencies.\n * @global {Object} document - DOM\n */\n\nvar devnull = function() {},\n    bundleIdCache = {},\n    bundleResultCache = {},\n    bundleCallbackQueue = {};\n\n\n/**\n * Subscribe to bundle load event.\n * @param {string[]} bundleIds - Bundle ids\n * @param {Function} callbackFn - The callback function\n */\nfunction subscribe(bundleIds, callbackFn) {\n  // listify\n  bundleIds = bundleIds.push ? bundleIds : [bundleIds];\n\n  var depsNotFound = [],\n      i = bundleIds.length,\n      numWaiting = i,\n      fn,\n      bundleId,\n      r,\n      q;\n\n  // define callback function\n  fn = function (bundleId, pathsNotFound) {\n    if (pathsNotFound.length) depsNotFound.push(bundleId);\n\n    numWaiting--;\n    if (!numWaiting) callbackFn(depsNotFound);\n  };\n\n  // register callback\n  while (i--) {\n    bundleId = bundleIds[i];\n\n    // execute callback if in result cache\n    r = bundleResultCache[bundleId];\n    if (r) {\n      fn(bundleId, r);\n      continue;\n    }\n\n    // add to callback queue\n    q = bundleCallbackQueue[bundleId] = bundleCallbackQueue[bundleId] || [];\n    q.push(fn);\n  }\n}\n\n\n/**\n * Publish bundle load event.\n * @param {string} bundleId - Bundle id\n * @param {string[]} pathsNotFound - List of files not found\n */\nfunction publish(bundleId, pathsNotFound) {\n  // exit if id isn't defined\n  if (!bundleId) return;\n\n  var q = bundleCallbackQueue[bundleId];\n\n  // cache result\n  bundleResultCache[bundleId] = pathsNotFound;\n\n  // exit if queue is empty\n  if (!q) return;\n\n  // empty callback queue\n  while (q.length) {\n    q[0](bundleId, pathsNotFound);\n    q.splice(0, 1);\n  }\n}\n\n\n/**\n * Execute callbacks.\n * @param {Object or Function} args - The callback args\n * @param {string[]} depsNotFound - List of dependencies not found\n */\nfunction executeCallbacks(args, depsNotFound) {\n  // accept function as argument\n  if (args.call) args = {success: args};\n\n  // success and error callbacks\n  if (depsNotFound.length) (args.error || devnull)(depsNotFound);\n  else (args.success || devnull)(args);\n}\n\n\n/**\n * Load individual file.\n * @param {string} path - The file path\n * @param {Function} callbackFn - The callback function\n */\nfunction loadFile(path, callbackFn, args, numTries) {\n  var doc = document,\n      async = args.async,\n      maxTries = (args.numRetries || 0) + 1,\n      beforeCallbackFn = args.before || devnull,\n      pathname = path.replace(/[\\?|#].*$/, ''),\n      pathStripped = path.replace(/^(css|img|module|nomodule)!/, ''),\n      isLegacyIECss,\n      hasModuleSupport,\n      e;\n\n  numTries = numTries || 0;\n\n  if (/(^css!|\\.css$)/.test(pathname)) {\n    // css\n    e = doc.createElement('link');\n    e.rel = 'stylesheet';\n    e.href = pathStripped;\n\n    // tag IE9+\n    isLegacyIECss = 'hideFocus' in e;\n\n    // use preload in IE Edge (to detect load errors)\n    if (isLegacyIECss && e.relList) {\n      isLegacyIECss = 0;\n      e.rel = 'preload';\n      e.as = 'style';\n    }\n  } else if (/(^img!|\\.(png|gif|jpg|svg|webp)$)/.test(pathname)) {\n    // image\n    e = doc.createElement('img');\n    e.src = pathStripped;    \n  } else {\n    // javascript\n    e = doc.createElement('script');\n    e.src = pathStripped;\n    e.async = async === undefined ? true : async;\n\n    // handle es modules\n    // modern browsers:\n    //   module: add to dom with type=\"module\"\n    //   nomodule: call success() callback without adding to dom\n    // legacy browsers:\n    //   module: call success() callback without adding to dom\n    //   nomodule: add to dom with default type (\"text/javascript\")\n    hasModuleSupport = 'noModule' in e;\n    if (/^module!/.test(pathname)) {\n      if (!hasModuleSupport) return callbackFn(path, 'l');\n      e.type = \"module\";\n    } else if (/^nomodule!/.test(pathname) && hasModuleSupport) return callbackFn(path, 'l');\n  }\n\n  e.onload = e.onerror = e.onbeforeload = function (ev) {\n    var result = ev.type[0];\n\n    // treat empty stylesheets as failures to get around lack of onerror\n    // support in IE9-11\n    if (isLegacyIECss) {\n      try {\n        if (!e.sheet.cssText.length) result = 'e';\n      } catch (x) {\n        // sheets objects created from load errors don't allow access to\n        // `cssText` (unless error is Code:18 SecurityError)\n        if (x.code != 18) result = 'e';\n      }\n    }\n\n    // handle retries in case of load failure\n    if (result == 'e') {\n      // increment counter\n      numTries += 1;\n\n      // exit function and try again\n      if (numTries < maxTries) {\n        return loadFile(path, callbackFn, args, numTries);\n      }\n    } else if (e.rel == 'preload' && e.as == 'style') {\n      // activate preloaded stylesheets\n      return e.rel = 'stylesheet'; // jshint ignore:line\n    }\n    \n    // execute callback\n    callbackFn(path, result, ev.defaultPrevented);\n  };\n\n  // add to document (unless callback returns `false`)\n  if (beforeCallbackFn(path, e) !== false) doc.head.appendChild(e);\n}\n\n\n/**\n * Load multiple files.\n * @param {string[]} paths - The file paths\n * @param {Function} callbackFn - The callback function\n */\nfunction loadFiles(paths, callbackFn, args) {\n  // listify paths\n  paths = paths.push ? paths : [paths];\n\n  var numWaiting = paths.length,\n      x = numWaiting,\n      pathsNotFound = [],\n      fn,\n      i;\n\n  // define callback function\n  fn = function(path, result, defaultPrevented) {\n    // handle error\n    if (result == 'e') pathsNotFound.push(path);\n\n    // handle beforeload event. If defaultPrevented then that means the load\n    // will be blocked (ex. Ghostery/ABP on Safari)\n    if (result == 'b') {\n      if (defaultPrevented) pathsNotFound.push(path);\n      else return;\n    }\n\n    numWaiting--;\n    if (!numWaiting) callbackFn(pathsNotFound);\n  };\n\n  // load scripts\n  for (i=0; i < x; i++) loadFile(paths[i], fn, args);\n}\n\n\n/**\n * Initiate script load and register bundle.\n * @param {(string|string[])} paths - The file paths\n * @param {(string|Function|Object)} [arg1] - The (1) bundleId or (2) success\n *   callback or (3) object literal with success/error arguments, numRetries,\n *   etc.\n * @param {(Function|Object)} [arg2] - The (1) success callback or (2) object\n *   literal with success/error arguments, numRetries, etc.\n */\nfunction loadjs(paths, arg1, arg2) {\n  var bundleId,\n      args;\n\n  // bundleId (if string)\n  if (arg1 && arg1.trim) bundleId = arg1;\n\n  // args (default is {})\n  args = (bundleId ? arg2 : arg1) || {};\n\n  // throw error if bundle is already defined\n  if (bundleId) {\n    if (bundleId in bundleIdCache) {\n      throw \"LoadJS\";\n    } else {\n      bundleIdCache[bundleId] = true;\n    }\n  }\n\n  function loadFn(resolve, reject) {\n    loadFiles(paths, function (pathsNotFound) {\n      // execute callbacks\n      executeCallbacks(args, pathsNotFound);\n      \n      // resolve Promise\n      if (resolve) {\n        executeCallbacks({success: resolve, error: reject}, pathsNotFound);\n      }\n\n      // publish bundle load event\n      publish(bundleId, pathsNotFound);\n    }, args);\n  }\n  \n  if (args.returnPromise) return new Promise(loadFn);\n  else loadFn();\n}\n\n\n/**\n * Execute callbacks when dependencies have been satisfied.\n * @param {(string|string[])} deps - List of bundle ids\n * @param {Object} args - success/error arguments\n */\nloadjs.ready = function ready(deps, args) {\n  // subscribe to bundle load event\n  subscribe(deps, function (depsNotFound) {\n    // execute callbacks\n    executeCallbacks(args, depsNotFound);\n  });\n\n  return loadjs;\n};\n\n\n/**\n * Manually satisfy bundle dependencies.\n * @param {string} bundleId - The bundle id\n */\nloadjs.done = function done(bundleId) {\n  publish(bundleId, []);\n};\n\n\n/**\n * Reset loadjs dependencies statuses\n */\nloadjs.reset = function reset() {\n  bundleIdCache = {};\n  bundleResultCache = {};\n  bundleCallbackQueue = {};\n};\n\n\n/**\n * Determine if bundle has already been defined\n * @param String} bundleId - The bundle id\n */\nloadjs.isDefined = function isDefined(bundleId) {\n  return bundleId in bundleIdCache;\n};\n\n\n// export\nreturn loadjs;\n\n}));\n"],"names":["devnull","bundleIdCache","bundleResultCache","bundleCallbackQueue","subscribe","bundleIds","callbackFn","push","fn","bundleId","r","depsNotFound","i","length","numWaiting","pathsNotFound","publish","q","splice","executeCallbacks","args","call","success","error","loadFile","path","numTries","isLegacyIECss","hasModuleSupport","e","doc","document","async","maxTries","numRetries","beforeCallbackFn","before","pathname","replace","pathStripped","test","createElement","rel","href","relList","as","src","undefined","type","onload","onerror","onbeforeload","ev","result","sheet","cssText","x","code","defaultPrevented","head","appendChild","loadFiles","paths","loadjs","arg1","arg2","trim","loadFn","resolve","reject","returnPromise","Promise","ready","deps","done","reset","isDefined"],"sourceRoot":""}