{"version":3,"file":"wallets/js/wallets.wallets-app.ed922ef896c7519820e4.js","mappings":"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","sources":["webpack://@deriv/wallets/./src/hooks/useLanguage.ts","webpack://@deriv/wallets/./src/components/Page404/Page404.tsx","webpack://@deriv/wallets/./src/routes/Router.tsx","webpack://@deriv/wallets/./src/AppContent.tsx","webpack://@deriv/wallets/./src/AuthProvider.tsx","webpack://@deriv/wallets/./src/App.tsx","webpack://@deriv/wallets/./src/components/ModalProvider/ModalProvider.tsx","webpack://@deriv/wallets/./src/hooks/useAllBalanceSubscription.ts","webpack://@deriv/wallets/./src/utils/observable.ts","webpack://@deriv/wallets/./src/utils/utils.ts","webpack://@deriv/wallets/./src/AppContent.scss","webpack://@deriv/wallets/./src/components/Page404/Page404.scss","webpack://@deriv/wallets/./src/index.scss","webpack://@deriv/wallets/./src/styles/fonts.scss","webpack://@deriv/wallets/./src/AppContent.scss?074a","webpack://@deriv/wallets/./src/components/Page404/Page404.scss?88db","webpack://@deriv/wallets/./src/index.scss?e81c","webpack://@deriv/wallets/./src/styles/fonts.scss?27c1"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport { getInitialLanguage } from '@deriv-com/translations';\nimport { TLanguageType } from '../types';\n\nconst useLanguage = (preferredLanguage: TLanguageType | null) => {\n    const [language, setLanguage] = useState<TLanguageType>(() => {\n        return preferredLanguage ?? 'EN';\n    });\n    const initialLang = getInitialLanguage() as TLanguageType;\n    const isFirstRender = useRef(true);\n\n    useEffect(() => {\n        if (preferredLanguage) {\n            if (isFirstRender.current) {\n                setLanguage(preferredLanguage);\n                isFirstRender.current = false;\n            } else {\n                setLanguage(initialLang);\n            }\n        }\n    }, [initialLang, preferredLanguage]);\n\n    return language;\n};\n\nexport default useLanguage;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Localize, useTranslations } from '@deriv-com/translations';\nimport { ActionScreen, Button, Text, useDevice } from '@deriv-com/ui';\nimport './Page404.scss';\n\nconst Page404 = () => {\n    const { isMobile } = useDevice();\n    const { localize } = useTranslations();\n    const titleSize = isMobile ? 'md' : '2xl';\n    const descriptionSize = isMobile ? 'sm' : 'md';\n    const buttonSize = isMobile ? 'lg' : 'md';\n    const buttonTextSize = isMobile ? 'md' : 'sm';\n\n    const history = useHistory();\n\n    const errorImage = isMobile ? (\n        <img alt={'404'} height='200px' loading='lazy' src={'/public/images/common/404.png'} width='328px' />\n    ) : (\n        <img alt={'404'} height='366px' loading='lazy' src={'/public/images/common/404.png'} width='607px' />\n    );\n\n    return (\n        <div className='wallets-page-404'>\n            <ActionScreen\n                actionButtons={\n                    <Button\n                        onClick={() => {\n                            history.push('/');\n                        }}\n                        size={buttonSize}\n                    >\n                        <Text color='white' size={buttonTextSize} weight='bold'>\n                            <Localize i18n_default_text=\"Return to Trader's Hub\" />\n                        </Text>\n                    </Button>\n                }\n                description={localize('You may have followed a broken link, or the page has moved to a new address.')}\n                descriptionSize={descriptionSize}\n                icon={errorImage}\n                title={localize(\"We couldn't find that page\")}\n                titleSize={titleSize}\n            />\n        </div>\n    );\n};\n\nexport default Page404;\n","import React, { lazy } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { Loader } from '@deriv-com/ui';\nimport { Page404 } from '../components/Page404';\n\nconst LazyWalletsListingRoute = lazy(\n    () => import(/* webpackChunkName: \"wallets-listing-route\" */ './WalletsListingRoute/WalletsListingRoute')\n);\nconst LazyCashierModalRoute = lazy(\n    () => import(/* webpackChunkName: \"cashier-modal-route\" */ './CashierModalRoute/CashierModalRoute')\n);\nconst LazyCompareAccountsRoute = lazy(\n    () => import(/* webpackChunkName: \"compare-accounts-route\" */ './CompareAccountsRoute/CompareAccountsRoute')\n);\n\ntype TWalletsRoute =\n    | '/'\n    | '/compare-accounts'\n    | '/wallet'\n    | '/wallet/account-transfer'\n    | '/wallet/deposit'\n    | '/wallet/on-ramp'\n    | '/wallet/reset-balance'\n    | '/wallet/transactions'\n    | '/wallet/withdrawal';\n\nexport type TRoute = '/endpoint' | `?${string}` | `${TWalletsRoute}`;\n\n// wallets routes which have their states\ninterface WalletsRouteState {\n    '/': { accountsActiveTabIndex: number };\n    '/wallet/account-transfer': {\n        accountsActiveTabIndex: number;\n        shouldSelectDefaultWallet: boolean;\n        toAccountLoginId: string;\n    };\n    '/wallet/deposit': { accountsActiveTabIndex: number };\n    '/wallet/reset-balance': { accountsActiveTabIndex: number };\n    '/wallet/transactions': {\n        accountsActiveTabIndex: number;\n        showPending: boolean;\n        transactionType: 'deposit' | 'withdrawal';\n    };\n    '/wallet/withdrawal': { accountsActiveTabIndex: number };\n}\n\ntype TStatefulRoute = TRoute & `${keyof WalletsRouteState}`;\n\ntype TRouteState = {\n    [T in TStatefulRoute]: T extends `${infer R extends keyof WalletsRouteState}`\n        ? Partial<WalletsRouteState[R]>\n        : never;\n};\n\ntype TLocationInfo = {\n    [T in TRoute]: {\n        pathname: T;\n        state?: T extends TStatefulRoute ? TRouteState[T] : never;\n    };\n}[TRoute];\n\ndeclare module 'react-router-dom' {\n    export function useHistory(): {\n        location: TLocationInfo & {\n            hash: string;\n            search: string;\n        };\n        push: <T extends TRoute>(path: T, ...state: T extends TStatefulRoute ? [TRouteState[T]?] : []) => void;\n    };\n\n    export function useRouteMatch(path: TRoute): boolean;\n}\n\nconst Router: React.FC = () => {\n    return (\n        <Switch>\n            <Route\n                exact\n                path={'/compare-accounts'}\n                render={() => (\n                    <React.Suspense fallback={<Loader />}>\n                        <LazyCompareAccountsRoute />\n                    </React.Suspense>\n                )}\n            />\n            <Route\n                path={'/wallet'}\n                render={() => (\n                    <React.Suspense fallback={<Loader />}>\n                        <LazyCashierModalRoute />\n                    </React.Suspense>\n                )}\n            />\n            <Route\n                exact\n                path={'/'}\n                render={() => (\n                    <React.Suspense fallback={<Loader />}>\n                        <LazyWalletsListingRoute />\n                    </React.Suspense>\n                )}\n            />\n            <Route render={() => <Page404 />} />\n        </Switch>\n    );\n};\n\nexport default Router;\n","import React, { useEffect, useRef } from 'react';\nimport classNames from 'classnames';\nimport { useActiveWalletAccount, useDerivAccountsList, useIsEuRegion, useSettings } from '@deriv/api-v2';\nimport { Analytics } from '@deriv-com/analytics';\nimport useAllBalanceSubscription from './hooks/useAllBalanceSubscription';\nimport { defineViewportHeight } from './utils/utils';\nimport { Router } from './routes';\nimport { TLanguageType } from './types';\nimport './AppContent.scss';\n\ntype AppContentProps = {\n    isWalletsOnboardingTourGuideVisible: boolean;\n    setPreferredLanguage: (language: TLanguageType | null) => void;\n};\n\nconst AppContent: React.FC<AppContentProps> = ({ isWalletsOnboardingTourGuideVisible, setPreferredLanguage }) => {\n    const { isSubscribed, subscribeToAllBalance, unsubscribeFromAllBalance } = useAllBalanceSubscription();\n    const { data: derivAccountList } = useDerivAccountsList();\n    const previousDerivAccountListLengthRef = useRef(0);\n    const appRef = useRef<HTMLDivElement>(null);\n    const { data: isEuRegion } = useIsEuRegion();\n    const { data: activeWallet } = useActiveWalletAccount();\n    const {\n        data: { preferred_language: preferredLanguage },\n    } = useSettings();\n\n    useEffect(() => {\n        if (preferredLanguage) {\n            setPreferredLanguage(preferredLanguage as TLanguageType);\n        } else {\n            setPreferredLanguage(null);\n        }\n    }, [preferredLanguage, setPreferredLanguage]);\n\n    useEffect(() => {\n        if (!derivAccountList?.length) return;\n        if (previousDerivAccountListLengthRef.current !== derivAccountList.length || !isSubscribed) {\n            subscribeToAllBalance();\n            previousDerivAccountListLengthRef.current = derivAccountList.length;\n        }\n        return () => {\n            if (isSubscribed) {\n                unsubscribeFromAllBalance();\n            }\n        };\n    }, [derivAccountList?.length, isSubscribed, subscribeToAllBalance, unsubscribeFromAllBalance]);\n\n    useEffect(() => {\n        defineViewportHeight();\n    }, []);\n\n    useEffect(() => {\n        Analytics.trackEvent('ce_wallets_homepage_form', {\n            action: 'open',\n            form_name: 'ce_wallets_homepage_form',\n        });\n    }, []);\n\n    // Scroll to top when the onboarding tour guide is not visible\n    useEffect(() => {\n        if (!isWalletsOnboardingTourGuideVisible) {\n            appRef.current?.scrollTo({\n                behavior: 'smooth',\n                top: 0,\n            });\n        }\n    }, [isWalletsOnboardingTourGuideVisible]);\n\n    return (\n        <div\n            className={classNames('wallets-app', {\n                'wallets-app--with-banner': isEuRegion && !activeWallet?.is_virtual,\n            })}\n            ref={appRef}\n        >\n            <div className='wallets-modal-show-header-root' id='wallets_modal_show_header_root' />\n            <Router />\n        </div>\n    );\n};\n\nexport default AppContent;\n","import React, { ComponentProps } from 'react';\nimport { AuthProvider } from '@deriv/api-v2';\n\nconst WALLETS_LOGINID_LOCALSTORAGE_KEY = 'active_wallet_loginid';\n\nconst WalletsAuthProvider = ({ children, ...rest }: Omit<ComponentProps<typeof AuthProvider>, 'loginIDKey'>) => (\n    <AuthProvider\n        {...rest}\n        loginIDKey={WALLETS_LOGINID_LOCALSTORAGE_KEY}\n        selectDefaultAccount={accountsObject => {\n            const loginIds = Object.keys(accountsObject);\n            const defaultFiatWallet = loginIds.filter((loginId: string) => {\n                const {\n                    account_category: accountCategory,\n                    account_type: accountType,\n                    is_disabled: isDisabled,\n                } = accountsObject[loginId];\n                const isWallet = accountCategory == 'wallet';\n                const isFiat = accountType == 'doughflow';\n                return isWallet && isFiat && !isDisabled;\n            })[0];\n\n            if (!defaultFiatWallet) {\n                const defaultWallet = loginIds.filter((loginId: string) => {\n                    const { account_category: accountCategory, is_disabled: isDisabled } = accountsObject[loginId];\n                    const isWallet = accountCategory == 'wallet';\n                    return isWallet && !isDisabled;\n                })[0];\n                return defaultWallet;\n            }\n            return defaultFiatWallet;\n        }}\n    >\n        {children}\n    </AuthProvider>\n);\n\nexport default WalletsAuthProvider;\n","import React, { lazy, useMemo, useState } from 'react';\nimport { APIProvider } from '@deriv/api-v2';\nimport { initializeI18n, TranslationProvider } from '@deriv-com/translations';\nimport { Loader } from '@deriv-com/ui';\nimport { ModalProvider } from './components/ModalProvider';\nimport useLanguage from './hooks/useLanguage';\nimport AppContent from './AppContent';\nimport WalletsAuthProvider from './AuthProvider';\nimport { TLanguageType } from './types';\nimport './styles/fonts.scss';\nimport './index.scss';\n\ntype TProps = {\n    isWalletsOnboardingTourGuideVisible: boolean;\n    logout: () => Promise<void>;\n    notificationMessagesUi: (props?: {\n        is_mt5?: boolean;\n        is_notification_loaded?: boolean;\n        show_trade_notifications?: boolean;\n        stopNotificationLoading?: VoidFunction;\n    }) => JSX.Element;\n    onWalletsOnboardingTourGuideCloseHandler: VoidFunction;\n};\n\nconst LazyWalletTourGuide = lazy(() => import('./components/WalletTourGuide/WalletTourGuide'));\n\nconst App: React.FC<TProps> = ({\n    isWalletsOnboardingTourGuideVisible,\n    logout,\n    notificationMessagesUi: Notifications,\n    onWalletsOnboardingTourGuideCloseHandler,\n}) => {\n    const [preferredLanguage, setPreferredLanguage] = useState<TLanguageType | null>(null);\n    const language = useLanguage(preferredLanguage);\n\n    const i18nInstance = useMemo(\n        () =>\n            initializeI18n({\n                cdnUrl: `${process.env.CROWDIN_URL}/${process.env.WALLETS_TRANSLATION_PATH}`, // 'https://translations.deriv.com/deriv-app-wallets/staging'\n            }),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [language]\n    );\n    const defaultLanguage = preferredLanguage ?? language;\n\n    return (\n        <APIProvider platform='wallets' standalone>\n            <WalletsAuthProvider logout={logout}>\n                <TranslationProvider defaultLang={defaultLanguage} i18nInstance={i18nInstance}>\n                    <React.Suspense fallback={<Loader />}>\n                        <ModalProvider>\n                            {!isWalletsOnboardingTourGuideVisible && Notifications && <Notifications />}\n                            <AppContent\n                                isWalletsOnboardingTourGuideVisible={isWalletsOnboardingTourGuideVisible}\n                                setPreferredLanguage={setPreferredLanguage}\n                            />\n                        </ModalProvider>\n                    </React.Suspense>\n                    {isWalletsOnboardingTourGuideVisible && (\n                        <React.Suspense fallback={<Loader />}>\n                            <LazyWalletTourGuide\n                                onWalletsOnboardingTourGuideCloseHandler={onWalletsOnboardingTourGuideCloseHandler}\n                            />\n                        </React.Suspense>\n                    )}\n                </TranslationProvider>\n            </WalletsAuthProvider>\n        </APIProvider>\n    );\n};\n\nexport default App;\n","import React, { createContext, useContext, useEffect, useMemo, useRef, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { useHistory } from 'react-router-dom';\nimport { useOnClickOutside } from 'usehooks-ts';\nimport { useDevice } from '@deriv-com/ui';\nimport { THooks, TMarketTypes, TPlatforms } from '../../types';\n\ntype TModalState = {\n    accountId?: string;\n    marketType?: TMarketTypes.All;\n    platform?: TPlatforms.All;\n    selectedJurisdiction?: THooks.AvailableMT5Accounts['shortcode'];\n};\n\ntype TModalContext = {\n    getModalState: <T extends keyof TModalState>(key: T) => TModalState[T];\n    hide: () => void;\n    isOpen: boolean;\n    modalState?: Map<keyof TModalState, TModalState[keyof TModalState]>;\n    setModalOptions: React.Dispatch<React.SetStateAction<TModalOptions>>;\n    setModalState: <T extends keyof TModalState>(key: T, value: TModalState[T]) => void;\n    show: (ModalContent: React.ReactNode, options?: TModalOptions) => void;\n};\n\ntype TModalOptions = {\n    defaultRootId?: 'wallets_modal_root' | 'wallets_modal_show_header_root';\n    rootRef?: React.RefObject<HTMLElement>;\n    shouldCloseOnClickOutside?: boolean;\n    shouldHideDerivAppHeader?: boolean;\n};\n\nconst ModalContext = createContext<TModalContext | null>(null);\n\nexport const useModal = () => {\n    const context = useContext(ModalContext);\n\n    if (!context) throw new Error('useModal() must be called within a component wrapped in ModalProvider.');\n\n    return context;\n};\n\nconst ModalProvider = ({ children }: React.PropsWithChildren<unknown>) => {\n    const modalRef = useRef<HTMLDivElement>(null);\n    const [content, setContent] = useState<React.ReactNode | null>();\n    const [modalOptions, setModalOptions] = useState<TModalOptions>({});\n    const [modalState, setModalState] = useState<Map<keyof TModalState, TModalState[keyof TModalState]>>(new Map());\n    const { isDesktop } = useDevice();\n    const history = useHistory();\n\n    const rootRef = useRef<HTMLElement>(document.getElementById('wallets_modal_root'));\n    const rootHeaderRef = useRef<HTMLElement | null>(document.getElementById('wallets_modal_show_header_root'));\n\n    const getModalState = <T extends keyof TModalState>(key: T): TModalState[T] => {\n        return modalState.get(key) as TModalState[T];\n    };\n\n    const updateModalState = <T extends keyof TModalState>(key: T, value: TModalState[T]) => {\n        setModalState(new Map(modalState.set(key, value)));\n    };\n\n    const show = (ModalContent: React.ReactNode, options?: TModalOptions) => {\n        setContent(ModalContent);\n        setModalOptions(prevModalOptions => ({\n            ...prevModalOptions,\n            ...options,\n        }));\n        history.push('?modal-open=true');\n    };\n\n    useEffect(() => {\n        if (!rootHeaderRef.current) {\n            rootHeaderRef.current = document.getElementById('wallets_modal_show_header_root');\n        }\n    }, []);\n\n    const hide = () => {\n        setContent(null);\n        const url = new URL(window.location.href);\n        url.searchParams.delete('modal-open');\n        window.history.replaceState({}, document.title, url.toString());\n        // Remove rootref to change back to default root\n        setModalOptions(prevModalOptions => ({\n            ...prevModalOptions,\n            rootRef: undefined,\n        }));\n    };\n\n    const onClickOutsideHandler = () =>\n        modalOptions?.shouldCloseOnClickOutside === false || !isDesktop ? () => undefined : hide;\n\n    useOnClickOutside(modalRef, onClickOutsideHandler);\n\n    const modalRootRef = useMemo(() => {\n        // if they specify their own root, prioritize this first\n        if (modalOptions?.rootRef?.current) return modalOptions?.rootRef;\n        // if user specifically specify they want to show on root or hide the Deriv.app header\n        if (modalOptions?.shouldHideDerivAppHeader || modalOptions?.defaultRootId === 'wallets_modal_root')\n            return rootRef;\n        // otherwise do the default behaviour, show Deriv.app header if on responsive\n        if (modalOptions?.defaultRootId === 'wallets_modal_show_header_root' || !isDesktop) return rootHeaderRef;\n        return rootRef;\n    }, [modalOptions?.rootRef, modalOptions?.shouldHideDerivAppHeader, modalOptions?.defaultRootId, isDesktop]);\n\n    return (\n        <ModalContext.Provider\n            value={{\n                getModalState,\n                hide,\n                isOpen: content !== null,\n                modalState,\n                setModalOptions,\n                setModalState: updateModalState,\n                show,\n            }}\n        >\n            {children}\n            {modalRootRef?.current &&\n                content &&\n                createPortal(<div ref={modalRef}>{content}</div>, modalRootRef.current)}\n        </ModalContext.Provider>\n    );\n};\n\nexport default ModalProvider;\n","import { useCallback, useEffect, useState } from 'react';\nimport { useAuthorize, useBalanceSubscription } from '@deriv/api-v2';\nimport Observable from '../utils/observable';\n\ntype TBalance = ReturnType<typeof useBalanceSubscription>['data']['accounts'];\n\nconst balanceStore = new Observable<TBalance | undefined>(undefined);\n\n/**\n * Custom hook that manages subscription to balance changes from `balanceStore`.\n * Retrieves initial balance and subscribes to future updates.\n * @returns An object containing the current balance and a function to update it.\n * @example const { data: balanceData, subscribeToAllBalance } = useAllBalanceSubscription();\n */\nconst useAllBalanceSubscription = () => {\n    const [balance, setBalance] = useState(balanceStore.get());\n    const {\n        data: balanceData,\n        isLoading: isBalanceLoading,\n        isSubscribed,\n        subscribe,\n        unsubscribe,\n    } = useBalanceSubscription();\n    const { isSuccess: isAuthorizeSuccess } = useAuthorize();\n    useEffect(() => {\n        return balanceStore.subscribe(setBalance); // subscribe setBalance to the balance store and return the cleanup function\n    }, []);\n\n    const subscribeToAllBalance = useCallback(() => {\n        if (!isAuthorizeSuccess) return;\n        subscribe({\n            account: 'all',\n        });\n    }, [isAuthorizeSuccess, subscribe]);\n\n    useEffect(() => {\n        if (!isAuthorizeSuccess || isBalanceLoading || Object.entries(balanceData).length === 0) return; // don't update the balance if the user is not authorized, the balance is loading, or the balance data is empty (i.e. before the call to subscribe is made).\n        const oldBalance = balanceStore.get();\n        let newBalance = balanceData.accounts;\n        if (!balanceData.accounts && balanceData.balance !== undefined && balanceData.loginid && balanceData.currency) {\n            const { balance, currency, loginid } = balanceData;\n            newBalance = {\n                ...oldBalance,\n                [loginid]: {\n                    balance,\n                    converted_amount: balance,\n                    currency,\n                    demo_account: oldBalance?.[loginid]?.demo_account ?? 0,\n                    status: oldBalance?.[loginid]?.status ?? 0,\n                    type: oldBalance?.[loginid]?.type ?? 'deriv',\n                },\n            };\n        }\n        balanceStore.set(newBalance);\n    }, [balanceData, isBalanceLoading, isAuthorizeSuccess]);\n\n    return {\n        data: balance,\n        isLoading: !balance,\n        isSubscribed,\n        subscribeToAllBalance,\n        unsubscribeFromAllBalance: unsubscribe,\n    };\n};\n\nexport default useAllBalanceSubscription;\n","type Subscriber<T> = (value: T) => void;\n\nclass Observable<T> {\n    private subscribers = new Set<Subscriber<T>>();\n\n    constructor(private value: T) {\n        this.value = value;\n    }\n\n    get(): T {\n        return this.value;\n    }\n\n    set(newValue: T): void {\n        this.value = newValue;\n\n        this.subscribers.forEach(listener => listener(this.value)); // notify all subscribers\n    }\n\n    /**\n     * @description Subscribes to the observable\n     * @param subscriber the observer function\n     * @returns cleanup function to unsubscribe the subscriber when the component unmounts.\n     */\n    subscribe(subscriber: Subscriber<T>): () => void {\n        this.subscribers.add(subscriber);\n\n        return () => this.unsubscribe(subscriber); // cleanup function to unsubscribe the subscriber when the component unmounts\n    }\n\n    unsubscribe(subscriber: Subscriber<T>): void {\n        this.subscribers.delete(subscriber);\n    }\n}\n\nexport { type Subscriber };\n\nexport default Observable;\n","import { TAddedMT5Account, TAvailableMT5Account, TWalletsMFAccountStatus } from '../types';\n\ntype TServerError = {\n    code: string;\n    details?: { [key: string]: string };\n    fields?: string[];\n    message: string;\n};\n\nexport const isServerError = (error: unknown): error is TServerError =>\n    typeof error === 'object' && error !== null && 'code' in error;\n\nexport const defineViewportHeight = () => {\n    const viewportHeight = window.innerHeight * 0.01;\n    document.documentElement.style.setProperty('--wallets-vh', `${viewportHeight}px`);\n};\n\nexport const defineSwitcherWidth = (realWidth: number, demoWidth: number) => {\n    document.documentElement.style.setProperty('--wallets-real-width', `${realWidth}px`);\n    document.documentElement.style.setProperty('--wallets-demo-width', `${demoWidth}px`);\n    document.documentElement.style.setProperty('--wallets-switcher-width', `${demoWidth + realWidth + 16}px`);\n};\n\nconst requiredDocumentStatuses = ['expired', 'none', 'rejected', 'suspected'];\n\nexport const getClientVerification = (account: TAddedMT5Account | TAvailableMT5Account | TWalletsMFAccountStatus) => {\n    const hasClientKycStatus = 'client_kyc_status' in account;\n    const documentStatuses = account.client_kyc_status;\n\n    const hasPoiStatus = hasClientKycStatus && 'poi_status' in documentStatuses;\n    const hasPoaStatus = hasClientKycStatus && 'poa_status' in documentStatuses;\n    const hasTinStatus = hasClientKycStatus && 'valid_tin' in documentStatuses;\n    const hasRequiredTin = hasClientKycStatus && 'required_tin' in documentStatuses;\n\n    const isPoiRequired = hasPoiStatus && requiredDocumentStatuses.includes(documentStatuses.poi_status);\n    const isPoaRequired = hasPoaStatus && requiredDocumentStatuses.includes(documentStatuses.poa_status);\n    const isTinRequired =\n        hasRequiredTin && hasTinStatus && Boolean(documentStatuses.required_tin) && !documentStatuses.valid_tin;\n\n    return {\n        hasClientKycStatus,\n        hasPoaStatus,\n        hasPoiStatus,\n        isPoaRequired,\n        isPoiRequired,\n        isTinRequired,\n        isVerificationRequired: isPoiRequired || isPoaRequired || isTinRequired,\n        statuses: documentStatuses,\n    };\n};\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-app{overflow-y:auto !important}.wallets-app{display:flex;flex-direction:column;align-items:center;gap:2.4rem;width:100%;align-self:stretch;background-color:#ffffff;background-color:var(--general-main-1, #ffffff);height:calc(100vh - 8.4rem)}@media(min-width: 1280px){.wallets-app--with-banner{height:100vh}}@media(max-width: 1279px){.wallets-app{height:calc(1vh*100 - 4rem);height:calc(var(--wallets-vh, 1vh)*100 - 4rem);min-height:calc(1vh*100 - 8.4rem);min-height:calc(var(--wallets-vh, 1vh)*100 - 8.4rem)}}.wallets-app .wallets-modal-show-header-root{position:absolute;top:0;right:0;bottom:0;left:0;z-index:10;display:none}.wallets-app .wallets-modal-show-header-root:not(:empty){display:flex}\", \"\",{\"version\":3,\"sources\":[\"webpack://./AppContent.scss\"],\"names\":[],\"mappings\":\"AAiuBA,aAUI,0BAAA,CAVJ,aACI,YAAA,CACA,qBAAA,CACA,kBAAA,CACA,UAAA,CACA,UAAA,CACA,kBAAA,CACA,wBAAA,CAAA,+CAAA,CACA,2BAEA,CA/DA,0BAgEA,0BAEQ,YAAA,CAAA,CA5DR,0BA+CJ,aAiBQ,2BAAA,CAAA,8CAAA,CACA,iCAAA,CAAA,oDAAA,CAAA,CAGJ,6CACI,iBAAA,CACA,KAAA,CAAA,OAAA,CAAA,QAAA,CAAA,MAAA,CACA,UAAA,CACA,YAAA,CAEA,yDACI,YAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-app {\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    gap: 2.4rem;\\n    width: 100%;\\n    align-self: stretch;\\n    background-color: var(--general-main-1, #ffffff);\\n    height: calc(100vh - 8.4rem); // 100vh - (4.8rem header + 3.6rem footer)\\n    /* stylelint-disable-next-line declaration-no-important */\\n    overflow-y: auto !important; //override overflow: initial from core app content\\n    &--with-banner {\\n        @include desktop-screen {\\n            height: 100vh;\\n        }\\n    }\\n    @include mobile-or-tablet-screen {\\n        height: calc(var(--wallets-vh, 1vh) * 100 - 4rem); // 100vh - 4rem (header)\\n        min-height: calc(var(--wallets-vh, 1vh) * 100 - 8.4rem); // 100vh - (4.8rem header + 3.6rem footer)\\n    }\\n\\n    .wallets-modal-show-header-root {\\n        position: absolute;\\n        inset: 0;\\n        z-index: 10;\\n        display: none;\\n\\n        &:not(:empty) {\\n            display: flex;\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-page-404{display:flex;align-items:center;height:calc(100vh - 8.4rem)}\", \"\",{\"version\":3,\"sources\":[\"webpack://./Page404.scss\"],\"names\":[],\"mappings\":\"AAiuBA,kBACI,YAAA,CACA,kBAAA,CACA,2BAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-page-404 {\\n    display: flex;\\n    align-items: center;\\n    height: calc(100vh - 8.4rem);\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"@keyframes popup{0%{transform:scale(0.7)}100%{transform:scale(1)}}@keyframes fadein{0%{transform:translate(0px, 100px);opacity:0}100%{transform:translate(0px, 0);opacity:1}}\", \"\",{\"version\":3,\"sources\":[\"webpack://./styles/animations.scss\"],\"names\":[],\"mappings\":\"AAAA,iBACI,GACI,oBAAA,CAEJ,KACI,kBAAA,CAAA,CAIR,kBACI,GACI,+BAAA,CACA,SAAA,CAEJ,KACI,2BAAA,CACA,SAAA,CAAA\",\"sourcesContent\":[\"@keyframes popup {\\n    0% {\\n        transform: scale(0.7);\\n    }\\n    100% {\\n        transform: scale(1);\\n    }\\n}\\n\\n@keyframes fadein {\\n    0% {\\n        transform: translate(0px, 100px);\\n        opacity: 0;\\n    }\\n    100% {\\n        transform: translate(0px, 0);\\n        opacity: 1;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n___CSS_LOADER_EXPORT___.push([module.id, \"@import url(https://fonts.googleapis.com/css2?family=IBM+Plex+Sans:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;1,100;1,200;1,300;1,400;1,500;1,600;1,700&display=swap);\"]);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"body .wallets-app{font-family:\\\"IBM Plex Sans\\\" sans-serif;font-size:1rem}\", \"\",{\"version\":3,\"sources\":[\"webpack://./fonts.scss\"],\"names\":[],\"mappings\":\"AAmuBA,kBACI,sCAAA,CACA,cAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/*RTL Language Mixin*/\\n\\n@mixin rtl {\\n    [dir='rtl'] & {\\n        @content;\\n    }\\n}\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-black-10: #181c25;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-blue-9: #00426a;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-green-8: #cedddf;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-grey-14: #e2e5e7;\\n$color-grey-15: #f3f4f5;\\n$color-orange: #ff6444;\\n$color-orange-2: #ff9c13;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-red-11: #fce3e3;\\n$color-red-12: #c40000;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n$color-yellow-4: #fff7e6;\\n$color-yellow-5: #6a4800;\\n$color-yellow-6: #ffeabf;\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n$color-status-verified: rgba(0, 122, 34);\\n$color-status-danger: rgba(196, 0, 0);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/** Need to add new breakpoints for mixins */\\n$max-mobile-width: 600px;\\n$min-desktop-width: 1280px;\\n\\n@mixin mobile-screen {\\n    @media (max-width: #{$max-mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop-screen {\\n    @media (min-width: #{$min-desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-screen {\\n    @media (max-width: #{$min-desktop-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-or-desktop-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-portrait-screen {\\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-or-tablet-landscape {\\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@import url('https://fonts.googleapis.com/css2?family=IBM+Plex+Sans:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;1,100;1,200;1,300;1,400;1,500;1,600;1,700&display=swap');\\n\\nbody .wallets-app {\\n    font-family: 'IBM Plex Sans' sans-serif;\\n    font-size: 1rem;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../node_modules/sass-loader/dist/cjs.js!../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./AppContent.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./Page404.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../node_modules/sass-loader/dist/cjs.js!../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./index.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../node_modules/sass-loader/dist/cjs.js!../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./fonts.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};"],"names":["preferredLanguage","_useState2","_slicedToArray","useState","language","setLanguage","initialLang","getInitialLanguage","isFirstRender","useRef","useEffect","current","isMobile","useDevice","localize","useTranslations","titleSize","descriptionSize","buttonSize","buttonTextSize","history","useHistory","errorImage","React","alt","height","loading","src","width","className","ActionScreen","actionButtons","Button","onClick","push","size","Text","color","weight","Localize","i18n_default_text","description","icon","title","LazyWalletsListingRoute","lazy","LazyCashierModalRoute","LazyCompareAccountsRoute","Switch","Route","exact","path","render","fallback","Loader","Page404","_ref","isWalletsOnboardingTourGuideVisible","setPreferredLanguage","_useAllBalanceSubscri","useAllBalanceSubscription","isSubscribed","subscribeToAllBalance","unsubscribeFromAllBalance","derivAccountList","useDerivAccountsList","data","previousDerivAccountListLengthRef","appRef","isEuRegion","useIsEuRegion","activeWallet","useActiveWalletAccount","useSettings","preferred_language","length","defineViewportHeight","Analytics","trackEvent","action","form_name","_appRef$current","scrollTo","behavior","top","classNames","is_virtual","ref","id","Router","children","rest","_objectWithoutProperties","_excluded","AuthProvider","_extends","loginIDKey","selectDefaultAccount","accountsObject","loginIds","Object","keys","defaultFiatWallet","filter","loginId","_accountsObject$login","accountCategory","account_category","accountType","account_type","isDisabled","is_disabled","_accountsObject$login2","LazyWalletTourGuide","logout","Notifications","notificationMessagesUi","onWalletsOnboardingTourGuideCloseHandler","useLanguage","i18nInstance","useMemo","initializeI18n","cdnUrl","concat","process","defaultLanguage","APIProvider","platform","standalone","WalletsAuthProvider","TranslationProvider","defaultLang","ModalProvider","AppContent","ModalContext","createContext","useModal","context","useContext","Error","modalRef","content","setContent","_useState4","modalOptions","setModalOptions","_useState6","Map","modalState","setModalState","isDesktop","rootRef","document","getElementById","rootHeaderRef","hide","url","URL","window","location","href","searchParams","replaceState","toString","prevModalOptions","_objectSpread","undefined","useOnClickOutside","shouldCloseOnClickOutside","modalRootRef","_modalOptions$rootRef","shouldHideDerivAppHeader","defaultRootId","Provider","value","getModalState","key","get","isOpen","set","show","ModalContent","options","createPortal","balanceStore","Observable","_classCallCheck","subscribers","Set","this","newValue","_this","forEach","listener","subscriber","_this2","add","unsubscribe","balance","setBalance","_useBalanceSubscripti","useBalanceSubscription","balanceData","isBalanceLoading","isLoading","subscribe","isAuthorizeSuccess","useAuthorize","isSuccess","useCallback","account","entries","oldBalance","newBalance","accounts","loginid","currency","_oldBalance$loginid$d","_oldBalance$loginid","_oldBalance$loginid$s","_oldBalance$loginid2","_oldBalance$loginid$t","_oldBalance$loginid3","_defineProperty","converted_amount","demo_account","status","type","isServerError","error","_typeof","viewportHeight","innerHeight","documentElement","style","setProperty","defineSwitcherWidth","realWidth","demoWidth","requiredDocumentStatuses","getClientVerification","hasClientKycStatus","documentStatuses","client_kyc_status","hasPoiStatus","hasPoaStatus","hasTinStatus","hasRequiredTin","isPoiRequired","includes","poi_status","isPoaRequired","poa_status","isTinRequired","Boolean","required_tin","valid_tin","isVerificationRequired","statuses","___CSS_LOADER_EXPORT___","module","api","__esModule","default","exports","locals"],"sourceRoot":""}