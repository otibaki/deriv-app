{"version":3,"file":"js/core.one-time-deposit-modal.eebb511ba03a004c4fc5.js","mappings":"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","sources":["webpack:///./App/Containers/Modals/deposit-now-or-later-modal/deposit-now-or-later-modal.tsx","webpack:///./App/Containers/Modals/deposit-now-or-later-modal/index.ts","webpack:///../../cashier/src/components/error-state/error-state.tsx","webpack:///../../cashier/src/modules/deposit-fiat/components/deposit-fiat-iframe/deposit-fiat-iframe.tsx","webpack:///../../../node_modules/qrcode.react/lib/esm/index.js","webpack:///../../cashier/src/modules/deposit-crypto/components/deposit-crypto-disclaimers/deposit-crypto-disclaimers.tsx","webpack:///../../cashier/src/modules/deposit-crypto/components/deposit-crypto-wallet-address/deposit-crypto-wallet-address.tsx","webpack:///./App/Containers/OneTimeDepositModal/one-time-deposit-modal-content.tsx","webpack:///./App/Containers/OneTimeDepositModal/one-time-deposit-modal.tsx","webpack:///./App/Containers/OneTimeDepositModal/index.ts","webpack:///../../hooks/src/useCryptoConfig.ts","webpack:///../../hooks/src/useCryptoTransactions.ts","webpack:///../../hooks/src/useCurrencyConfig.ts","webpack:///../../hooks/src/useCurrentCurrencyConfig.ts","webpack:///../../hooks/src/useDepositCryptoAddress.ts","webpack:///../../hooks/src/useDepositFiatAddress.ts"],"sourcesContent":["import React from 'react';\nimport { Analytics } from '@deriv-com/analytics';\nimport { useDevice } from '@deriv-com/ui';\nimport { Dialog, Text } from '@deriv/components';\nimport { Localize, localize } from '@deriv/translations';\nimport { useStore, observer } from '@deriv/stores';\nimport './deposit-now-or-later-modal.scss';\n\nconst DepositNowOrLaterModal = observer(() => {\n    const { isMobile } = useDevice();\n    const { ui } = useStore();\n    const {\n        should_show_deposit_now_or_later_modal,\n        setShouldShowDepositNowOrLaterModal,\n        setShouldShowOneTimeDepositModal,\n    } = ui;\n\n    const onConfirmModal = () => {\n        Analytics.trackEvent('ce_tradershub_popup', {\n            // @ts-expect-error 'click_download' property is changed to 'click_cta'\n            action: 'click_cta',\n            form_name: 'traders_hub_default',\n            account_mode: 'real',\n            popup_name: 'deposit_now_or_later',\n            popup_type: 'with_cta',\n            // 'cta_name' property type will be added later\n            cta_name: 'deposit_now',\n        });\n\n        setShouldShowDepositNowOrLaterModal(false);\n    };\n\n    const onClose = (is_click_on_cancel_button = false) => {\n        if (is_click_on_cancel_button)\n            Analytics.trackEvent('ce_tradershub_popup', {\n                // @ts-expect-error 'click_download' property is changed to 'click_cta'\n                action: 'click_cta',\n                form_name: 'traders_hub_default',\n                account_mode: 'real',\n                popup_name: 'deposit_now_or_later',\n                popup_type: 'with_cta',\n                // 'cta_name' property type will be added later\n                cta_name: 'deposit_later',\n            });\n        else\n            Analytics.trackEvent('ce_tradershub_popup', {\n                action: 'close',\n                form_name: 'traders_hub_default',\n                account_mode: 'real',\n                popup_name: 'deposit_now_or_later',\n                popup_type: 'with_cta',\n            });\n\n        setShouldShowDepositNowOrLaterModal(false);\n\n        if (is_click_on_cancel_button) {\n            setShouldShowOneTimeDepositModal(false);\n        }\n    };\n\n    React.useEffect(() => {\n        if (should_show_deposit_now_or_later_modal) {\n            Analytics.trackEvent('ce_tradershub_popup', {\n                action: 'open',\n                form_name: 'traders_hub_default',\n                account_mode: 'real',\n                popup_name: 'deposit_now_or_later',\n                popup_type: 'with_cta',\n            });\n        }\n    }, [should_show_deposit_now_or_later_modal]);\n\n    return (\n        <Dialog\n            className='deposit-now-or-later-modal'\n            title={<Localize i18n_default_text='Add funds and start trading' />}\n            confirm_button_text={localize('Deposit now')}\n            onConfirm={onConfirmModal}\n            cancel_button_text={localize('Deposit later')}\n            onCancel={() => onClose(true)}\n            onClose={onClose}\n            is_visible={should_show_deposit_now_or_later_modal}\n            has_close_icon\n            is_closed_on_cancel={false}\n        >\n            <Text align='center' size={isMobile ? 'xxs' : 'xs'}>\n                <Localize i18n_default_text=\"Make a deposit to trade the world's markets!\" />\n            </Text>\n        </Dialog>\n    );\n});\n\nexport default DepositNowOrLaterModal;\n","import DepositNowOrLaterModal from './deposit-now-or-later-modal';\n\nexport default DepositNowOrLaterModal;\n","import React from 'react';\nimport { localize } from '@deriv/translations';\nimport { EmptyState } from '@deriv/components';\n\ntype TProps = {\n    error: unknown;\n};\n\nconst ErrorState: React.FC<TProps> = ({ error }) => {\n    let message = localize('Please refresh the page and try again.');\n\n    if (error && typeof error === 'object' && 'message' in error && typeof error.message === 'string') {\n        message = error.message;\n    }\n\n    return (\n        <EmptyState\n            icon='IcTriangleExclamationXl'\n            title={localize('Something went wrong')}\n            description={message}\n            action={{\n                label: localize('Refresh page'),\n                onClick: () => window.location.reload(),\n                tertiary: true,\n            }}\n        />\n    );\n};\n\nexport default ErrorState;\n","import React, { useEffect, useState } from 'react';\nimport { Loading } from '@deriv/components';\nimport { useDepositFiatAddress } from '@deriv/hooks';\nimport { observer } from '@deriv/stores';\nimport { setPerformanceValue } from '@deriv/shared';\nimport { ErrorState } from '../../../../components/error-state';\nimport './deposit-fiat-iframe.scss';\n\nconst DepositFiatIframe: React.FC = observer(() => {\n    const { data: iframe_url, error } = useDepositFiatAddress();\n    const [is_loading, setIsLoading] = useState(true);\n\n    // To show loading state when switching theme\n    useEffect(() => {\n        setIsLoading(true);\n    }, [iframe_url]);\n\n    if (!is_loading) setPerformanceValue('load_fiat_deposit_cashier_time');\n\n    if (error) return <ErrorState error={error} />;\n\n    return (\n        <React.Fragment>\n            {is_loading && <Loading is_fullscreen={false} />}\n            {iframe_url && (\n                <iframe\n                    key={iframe_url}\n                    className='deposit-fiat-iframe__iframe'\n                    onLoad={() => setIsLoading(false)}\n                    src={iframe_url}\n                    style={{ display: is_loading ? 'none' : 'block' }}\n                    data-testid='dt_deposit_fiat_iframe_iframe'\n                />\n            )}\n        </React.Fragment>\n    );\n});\n\nexport default DepositFiatIframe;\n","var __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\n\n// src/index.tsx\nimport React from \"react\";\n\n// src/third-party/qrcodegen/index.ts\n/**\n * @license QR Code generator library (TypeScript)\n * Copyright (c) Project Nayuki.\n * SPDX-License-Identifier: MIT\n */\nvar qrcodegen;\n((qrcodegen2) => {\n  const _QrCode = class {\n    constructor(version, errorCorrectionLevel, dataCodewords, msk) {\n      this.version = version;\n      this.errorCorrectionLevel = errorCorrectionLevel;\n      this.modules = [];\n      this.isFunction = [];\n      if (version < _QrCode.MIN_VERSION || version > _QrCode.MAX_VERSION)\n        throw new RangeError(\"Version value out of range\");\n      if (msk < -1 || msk > 7)\n        throw new RangeError(\"Mask value out of range\");\n      this.size = version * 4 + 17;\n      let row = [];\n      for (let i = 0; i < this.size; i++)\n        row.push(false);\n      for (let i = 0; i < this.size; i++) {\n        this.modules.push(row.slice());\n        this.isFunction.push(row.slice());\n      }\n      this.drawFunctionPatterns();\n      const allCodewords = this.addEccAndInterleave(dataCodewords);\n      this.drawCodewords(allCodewords);\n      if (msk == -1) {\n        let minPenalty = 1e9;\n        for (let i = 0; i < 8; i++) {\n          this.applyMask(i);\n          this.drawFormatBits(i);\n          const penalty = this.getPenaltyScore();\n          if (penalty < minPenalty) {\n            msk = i;\n            minPenalty = penalty;\n          }\n          this.applyMask(i);\n        }\n      }\n      assert(0 <= msk && msk <= 7);\n      this.mask = msk;\n      this.applyMask(msk);\n      this.drawFormatBits(msk);\n      this.isFunction = [];\n    }\n    static encodeText(text, ecl) {\n      const segs = qrcodegen2.QrSegment.makeSegments(text);\n      return _QrCode.encodeSegments(segs, ecl);\n    }\n    static encodeBinary(data, ecl) {\n      const seg = qrcodegen2.QrSegment.makeBytes(data);\n      return _QrCode.encodeSegments([seg], ecl);\n    }\n    static encodeSegments(segs, ecl, minVersion = 1, maxVersion = 40, mask = -1, boostEcl = true) {\n      if (!(_QrCode.MIN_VERSION <= minVersion && minVersion <= maxVersion && maxVersion <= _QrCode.MAX_VERSION) || mask < -1 || mask > 7)\n        throw new RangeError(\"Invalid value\");\n      let version;\n      let dataUsedBits;\n      for (version = minVersion; ; version++) {\n        const dataCapacityBits2 = _QrCode.getNumDataCodewords(version, ecl) * 8;\n        const usedBits = QrSegment.getTotalBits(segs, version);\n        if (usedBits <= dataCapacityBits2) {\n          dataUsedBits = usedBits;\n          break;\n        }\n        if (version >= maxVersion)\n          throw new RangeError(\"Data too long\");\n      }\n      for (const newEcl of [_QrCode.Ecc.MEDIUM, _QrCode.Ecc.QUARTILE, _QrCode.Ecc.HIGH]) {\n        if (boostEcl && dataUsedBits <= _QrCode.getNumDataCodewords(version, newEcl) * 8)\n          ecl = newEcl;\n      }\n      let bb = [];\n      for (const seg of segs) {\n        appendBits(seg.mode.modeBits, 4, bb);\n        appendBits(seg.numChars, seg.mode.numCharCountBits(version), bb);\n        for (const b of seg.getData())\n          bb.push(b);\n      }\n      assert(bb.length == dataUsedBits);\n      const dataCapacityBits = _QrCode.getNumDataCodewords(version, ecl) * 8;\n      assert(bb.length <= dataCapacityBits);\n      appendBits(0, Math.min(4, dataCapacityBits - bb.length), bb);\n      appendBits(0, (8 - bb.length % 8) % 8, bb);\n      assert(bb.length % 8 == 0);\n      for (let padByte = 236; bb.length < dataCapacityBits; padByte ^= 236 ^ 17)\n        appendBits(padByte, 8, bb);\n      let dataCodewords = [];\n      while (dataCodewords.length * 8 < bb.length)\n        dataCodewords.push(0);\n      bb.forEach((b, i) => dataCodewords[i >>> 3] |= b << 7 - (i & 7));\n      return new _QrCode(version, ecl, dataCodewords, mask);\n    }\n    getModule(x, y) {\n      return 0 <= x && x < this.size && 0 <= y && y < this.size && this.modules[y][x];\n    }\n    getModules() {\n      return this.modules;\n    }\n    drawFunctionPatterns() {\n      for (let i = 0; i < this.size; i++) {\n        this.setFunctionModule(6, i, i % 2 == 0);\n        this.setFunctionModule(i, 6, i % 2 == 0);\n      }\n      this.drawFinderPattern(3, 3);\n      this.drawFinderPattern(this.size - 4, 3);\n      this.drawFinderPattern(3, this.size - 4);\n      const alignPatPos = this.getAlignmentPatternPositions();\n      const numAlign = alignPatPos.length;\n      for (let i = 0; i < numAlign; i++) {\n        for (let j = 0; j < numAlign; j++) {\n          if (!(i == 0 && j == 0 || i == 0 && j == numAlign - 1 || i == numAlign - 1 && j == 0))\n            this.drawAlignmentPattern(alignPatPos[i], alignPatPos[j]);\n        }\n      }\n      this.drawFormatBits(0);\n      this.drawVersion();\n    }\n    drawFormatBits(mask) {\n      const data = this.errorCorrectionLevel.formatBits << 3 | mask;\n      let rem = data;\n      for (let i = 0; i < 10; i++)\n        rem = rem << 1 ^ (rem >>> 9) * 1335;\n      const bits = (data << 10 | rem) ^ 21522;\n      assert(bits >>> 15 == 0);\n      for (let i = 0; i <= 5; i++)\n        this.setFunctionModule(8, i, getBit(bits, i));\n      this.setFunctionModule(8, 7, getBit(bits, 6));\n      this.setFunctionModule(8, 8, getBit(bits, 7));\n      this.setFunctionModule(7, 8, getBit(bits, 8));\n      for (let i = 9; i < 15; i++)\n        this.setFunctionModule(14 - i, 8, getBit(bits, i));\n      for (let i = 0; i < 8; i++)\n        this.setFunctionModule(this.size - 1 - i, 8, getBit(bits, i));\n      for (let i = 8; i < 15; i++)\n        this.setFunctionModule(8, this.size - 15 + i, getBit(bits, i));\n      this.setFunctionModule(8, this.size - 8, true);\n    }\n    drawVersion() {\n      if (this.version < 7)\n        return;\n      let rem = this.version;\n      for (let i = 0; i < 12; i++)\n        rem = rem << 1 ^ (rem >>> 11) * 7973;\n      const bits = this.version << 12 | rem;\n      assert(bits >>> 18 == 0);\n      for (let i = 0; i < 18; i++) {\n        const color = getBit(bits, i);\n        const a = this.size - 11 + i % 3;\n        const b = Math.floor(i / 3);\n        this.setFunctionModule(a, b, color);\n        this.setFunctionModule(b, a, color);\n      }\n    }\n    drawFinderPattern(x, y) {\n      for (let dy = -4; dy <= 4; dy++) {\n        for (let dx = -4; dx <= 4; dx++) {\n          const dist = Math.max(Math.abs(dx), Math.abs(dy));\n          const xx = x + dx;\n          const yy = y + dy;\n          if (0 <= xx && xx < this.size && 0 <= yy && yy < this.size)\n            this.setFunctionModule(xx, yy, dist != 2 && dist != 4);\n        }\n      }\n    }\n    drawAlignmentPattern(x, y) {\n      for (let dy = -2; dy <= 2; dy++) {\n        for (let dx = -2; dx <= 2; dx++)\n          this.setFunctionModule(x + dx, y + dy, Math.max(Math.abs(dx), Math.abs(dy)) != 1);\n      }\n    }\n    setFunctionModule(x, y, isDark) {\n      this.modules[y][x] = isDark;\n      this.isFunction[y][x] = true;\n    }\n    addEccAndInterleave(data) {\n      const ver = this.version;\n      const ecl = this.errorCorrectionLevel;\n      if (data.length != _QrCode.getNumDataCodewords(ver, ecl))\n        throw new RangeError(\"Invalid argument\");\n      const numBlocks = _QrCode.NUM_ERROR_CORRECTION_BLOCKS[ecl.ordinal][ver];\n      const blockEccLen = _QrCode.ECC_CODEWORDS_PER_BLOCK[ecl.ordinal][ver];\n      const rawCodewords = Math.floor(_QrCode.getNumRawDataModules(ver) / 8);\n      const numShortBlocks = numBlocks - rawCodewords % numBlocks;\n      const shortBlockLen = Math.floor(rawCodewords / numBlocks);\n      let blocks = [];\n      const rsDiv = _QrCode.reedSolomonComputeDivisor(blockEccLen);\n      for (let i = 0, k = 0; i < numBlocks; i++) {\n        let dat = data.slice(k, k + shortBlockLen - blockEccLen + (i < numShortBlocks ? 0 : 1));\n        k += dat.length;\n        const ecc = _QrCode.reedSolomonComputeRemainder(dat, rsDiv);\n        if (i < numShortBlocks)\n          dat.push(0);\n        blocks.push(dat.concat(ecc));\n      }\n      let result = [];\n      for (let i = 0; i < blocks[0].length; i++) {\n        blocks.forEach((block, j) => {\n          if (i != shortBlockLen - blockEccLen || j >= numShortBlocks)\n            result.push(block[i]);\n        });\n      }\n      assert(result.length == rawCodewords);\n      return result;\n    }\n    drawCodewords(data) {\n      if (data.length != Math.floor(_QrCode.getNumRawDataModules(this.version) / 8))\n        throw new RangeError(\"Invalid argument\");\n      let i = 0;\n      for (let right = this.size - 1; right >= 1; right -= 2) {\n        if (right == 6)\n          right = 5;\n        for (let vert = 0; vert < this.size; vert++) {\n          for (let j = 0; j < 2; j++) {\n            const x = right - j;\n            const upward = (right + 1 & 2) == 0;\n            const y = upward ? this.size - 1 - vert : vert;\n            if (!this.isFunction[y][x] && i < data.length * 8) {\n              this.modules[y][x] = getBit(data[i >>> 3], 7 - (i & 7));\n              i++;\n            }\n          }\n        }\n      }\n      assert(i == data.length * 8);\n    }\n    applyMask(mask) {\n      if (mask < 0 || mask > 7)\n        throw new RangeError(\"Mask value out of range\");\n      for (let y = 0; y < this.size; y++) {\n        for (let x = 0; x < this.size; x++) {\n          let invert;\n          switch (mask) {\n            case 0:\n              invert = (x + y) % 2 == 0;\n              break;\n            case 1:\n              invert = y % 2 == 0;\n              break;\n            case 2:\n              invert = x % 3 == 0;\n              break;\n            case 3:\n              invert = (x + y) % 3 == 0;\n              break;\n            case 4:\n              invert = (Math.floor(x / 3) + Math.floor(y / 2)) % 2 == 0;\n              break;\n            case 5:\n              invert = x * y % 2 + x * y % 3 == 0;\n              break;\n            case 6:\n              invert = (x * y % 2 + x * y % 3) % 2 == 0;\n              break;\n            case 7:\n              invert = ((x + y) % 2 + x * y % 3) % 2 == 0;\n              break;\n            default:\n              throw new Error(\"Unreachable\");\n          }\n          if (!this.isFunction[y][x] && invert)\n            this.modules[y][x] = !this.modules[y][x];\n        }\n      }\n    }\n    getPenaltyScore() {\n      let result = 0;\n      for (let y = 0; y < this.size; y++) {\n        let runColor = false;\n        let runX = 0;\n        let runHistory = [0, 0, 0, 0, 0, 0, 0];\n        for (let x = 0; x < this.size; x++) {\n          if (this.modules[y][x] == runColor) {\n            runX++;\n            if (runX == 5)\n              result += _QrCode.PENALTY_N1;\n            else if (runX > 5)\n              result++;\n          } else {\n            this.finderPenaltyAddHistory(runX, runHistory);\n            if (!runColor)\n              result += this.finderPenaltyCountPatterns(runHistory) * _QrCode.PENALTY_N3;\n            runColor = this.modules[y][x];\n            runX = 1;\n          }\n        }\n        result += this.finderPenaltyTerminateAndCount(runColor, runX, runHistory) * _QrCode.PENALTY_N3;\n      }\n      for (let x = 0; x < this.size; x++) {\n        let runColor = false;\n        let runY = 0;\n        let runHistory = [0, 0, 0, 0, 0, 0, 0];\n        for (let y = 0; y < this.size; y++) {\n          if (this.modules[y][x] == runColor) {\n            runY++;\n            if (runY == 5)\n              result += _QrCode.PENALTY_N1;\n            else if (runY > 5)\n              result++;\n          } else {\n            this.finderPenaltyAddHistory(runY, runHistory);\n            if (!runColor)\n              result += this.finderPenaltyCountPatterns(runHistory) * _QrCode.PENALTY_N3;\n            runColor = this.modules[y][x];\n            runY = 1;\n          }\n        }\n        result += this.finderPenaltyTerminateAndCount(runColor, runY, runHistory) * _QrCode.PENALTY_N3;\n      }\n      for (let y = 0; y < this.size - 1; y++) {\n        for (let x = 0; x < this.size - 1; x++) {\n          const color = this.modules[y][x];\n          if (color == this.modules[y][x + 1] && color == this.modules[y + 1][x] && color == this.modules[y + 1][x + 1])\n            result += _QrCode.PENALTY_N2;\n        }\n      }\n      let dark = 0;\n      for (const row of this.modules)\n        dark = row.reduce((sum, color) => sum + (color ? 1 : 0), dark);\n      const total = this.size * this.size;\n      const k = Math.ceil(Math.abs(dark * 20 - total * 10) / total) - 1;\n      assert(0 <= k && k <= 9);\n      result += k * _QrCode.PENALTY_N4;\n      assert(0 <= result && result <= 2568888);\n      return result;\n    }\n    getAlignmentPatternPositions() {\n      if (this.version == 1)\n        return [];\n      else {\n        const numAlign = Math.floor(this.version / 7) + 2;\n        const step = this.version == 32 ? 26 : Math.ceil((this.version * 4 + 4) / (numAlign * 2 - 2)) * 2;\n        let result = [6];\n        for (let pos = this.size - 7; result.length < numAlign; pos -= step)\n          result.splice(1, 0, pos);\n        return result;\n      }\n    }\n    static getNumRawDataModules(ver) {\n      if (ver < _QrCode.MIN_VERSION || ver > _QrCode.MAX_VERSION)\n        throw new RangeError(\"Version number out of range\");\n      let result = (16 * ver + 128) * ver + 64;\n      if (ver >= 2) {\n        const numAlign = Math.floor(ver / 7) + 2;\n        result -= (25 * numAlign - 10) * numAlign - 55;\n        if (ver >= 7)\n          result -= 36;\n      }\n      assert(208 <= result && result <= 29648);\n      return result;\n    }\n    static getNumDataCodewords(ver, ecl) {\n      return Math.floor(_QrCode.getNumRawDataModules(ver) / 8) - _QrCode.ECC_CODEWORDS_PER_BLOCK[ecl.ordinal][ver] * _QrCode.NUM_ERROR_CORRECTION_BLOCKS[ecl.ordinal][ver];\n    }\n    static reedSolomonComputeDivisor(degree) {\n      if (degree < 1 || degree > 255)\n        throw new RangeError(\"Degree out of range\");\n      let result = [];\n      for (let i = 0; i < degree - 1; i++)\n        result.push(0);\n      result.push(1);\n      let root = 1;\n      for (let i = 0; i < degree; i++) {\n        for (let j = 0; j < result.length; j++) {\n          result[j] = _QrCode.reedSolomonMultiply(result[j], root);\n          if (j + 1 < result.length)\n            result[j] ^= result[j + 1];\n        }\n        root = _QrCode.reedSolomonMultiply(root, 2);\n      }\n      return result;\n    }\n    static reedSolomonComputeRemainder(data, divisor) {\n      let result = divisor.map((_) => 0);\n      for (const b of data) {\n        const factor = b ^ result.shift();\n        result.push(0);\n        divisor.forEach((coef, i) => result[i] ^= _QrCode.reedSolomonMultiply(coef, factor));\n      }\n      return result;\n    }\n    static reedSolomonMultiply(x, y) {\n      if (x >>> 8 != 0 || y >>> 8 != 0)\n        throw new RangeError(\"Byte out of range\");\n      let z = 0;\n      for (let i = 7; i >= 0; i--) {\n        z = z << 1 ^ (z >>> 7) * 285;\n        z ^= (y >>> i & 1) * x;\n      }\n      assert(z >>> 8 == 0);\n      return z;\n    }\n    finderPenaltyCountPatterns(runHistory) {\n      const n = runHistory[1];\n      assert(n <= this.size * 3);\n      const core = n > 0 && runHistory[2] == n && runHistory[3] == n * 3 && runHistory[4] == n && runHistory[5] == n;\n      return (core && runHistory[0] >= n * 4 && runHistory[6] >= n ? 1 : 0) + (core && runHistory[6] >= n * 4 && runHistory[0] >= n ? 1 : 0);\n    }\n    finderPenaltyTerminateAndCount(currentRunColor, currentRunLength, runHistory) {\n      if (currentRunColor) {\n        this.finderPenaltyAddHistory(currentRunLength, runHistory);\n        currentRunLength = 0;\n      }\n      currentRunLength += this.size;\n      this.finderPenaltyAddHistory(currentRunLength, runHistory);\n      return this.finderPenaltyCountPatterns(runHistory);\n    }\n    finderPenaltyAddHistory(currentRunLength, runHistory) {\n      if (runHistory[0] == 0)\n        currentRunLength += this.size;\n      runHistory.pop();\n      runHistory.unshift(currentRunLength);\n    }\n  };\n  let QrCode = _QrCode;\n  QrCode.MIN_VERSION = 1;\n  QrCode.MAX_VERSION = 40;\n  QrCode.PENALTY_N1 = 3;\n  QrCode.PENALTY_N2 = 3;\n  QrCode.PENALTY_N3 = 40;\n  QrCode.PENALTY_N4 = 10;\n  QrCode.ECC_CODEWORDS_PER_BLOCK = [\n    [-1, 7, 10, 15, 20, 26, 18, 20, 24, 30, 18, 20, 24, 26, 30, 22, 24, 28, 30, 28, 28, 28, 28, 30, 30, 26, 28, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30],\n    [-1, 10, 16, 26, 18, 24, 16, 18, 22, 22, 26, 30, 22, 22, 24, 24, 28, 28, 26, 26, 26, 26, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28],\n    [-1, 13, 22, 18, 26, 18, 24, 18, 22, 20, 24, 28, 26, 24, 20, 30, 24, 28, 28, 26, 30, 28, 30, 30, 30, 30, 28, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30],\n    [-1, 17, 28, 22, 16, 22, 28, 26, 26, 24, 28, 24, 28, 22, 24, 24, 30, 28, 28, 26, 28, 30, 24, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30]\n  ];\n  QrCode.NUM_ERROR_CORRECTION_BLOCKS = [\n    [-1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 4, 4, 4, 4, 4, 6, 6, 6, 6, 7, 8, 8, 9, 9, 10, 12, 12, 12, 13, 14, 15, 16, 17, 18, 19, 19, 20, 21, 22, 24, 25],\n    [-1, 1, 1, 1, 2, 2, 4, 4, 4, 5, 5, 5, 8, 9, 9, 10, 10, 11, 13, 14, 16, 17, 17, 18, 20, 21, 23, 25, 26, 28, 29, 31, 33, 35, 37, 38, 40, 43, 45, 47, 49],\n    [-1, 1, 1, 2, 2, 4, 4, 6, 6, 8, 8, 8, 10, 12, 16, 12, 17, 16, 18, 21, 20, 23, 23, 25, 27, 29, 34, 34, 35, 38, 40, 43, 45, 48, 51, 53, 56, 59, 62, 65, 68],\n    [-1, 1, 1, 2, 4, 4, 4, 5, 6, 8, 8, 11, 11, 16, 16, 18, 16, 19, 21, 25, 25, 25, 34, 30, 32, 35, 37, 40, 42, 45, 48, 51, 54, 57, 60, 63, 66, 70, 74, 77, 81]\n  ];\n  qrcodegen2.QrCode = QrCode;\n  function appendBits(val, len, bb) {\n    if (len < 0 || len > 31 || val >>> len != 0)\n      throw new RangeError(\"Value out of range\");\n    for (let i = len - 1; i >= 0; i--)\n      bb.push(val >>> i & 1);\n  }\n  function getBit(x, i) {\n    return (x >>> i & 1) != 0;\n  }\n  function assert(cond) {\n    if (!cond)\n      throw new Error(\"Assertion error\");\n  }\n  const _QrSegment = class {\n    constructor(mode, numChars, bitData) {\n      this.mode = mode;\n      this.numChars = numChars;\n      this.bitData = bitData;\n      if (numChars < 0)\n        throw new RangeError(\"Invalid argument\");\n      this.bitData = bitData.slice();\n    }\n    static makeBytes(data) {\n      let bb = [];\n      for (const b of data)\n        appendBits(b, 8, bb);\n      return new _QrSegment(_QrSegment.Mode.BYTE, data.length, bb);\n    }\n    static makeNumeric(digits) {\n      if (!_QrSegment.isNumeric(digits))\n        throw new RangeError(\"String contains non-numeric characters\");\n      let bb = [];\n      for (let i = 0; i < digits.length; ) {\n        const n = Math.min(digits.length - i, 3);\n        appendBits(parseInt(digits.substr(i, n), 10), n * 3 + 1, bb);\n        i += n;\n      }\n      return new _QrSegment(_QrSegment.Mode.NUMERIC, digits.length, bb);\n    }\n    static makeAlphanumeric(text) {\n      if (!_QrSegment.isAlphanumeric(text))\n        throw new RangeError(\"String contains unencodable characters in alphanumeric mode\");\n      let bb = [];\n      let i;\n      for (i = 0; i + 2 <= text.length; i += 2) {\n        let temp = _QrSegment.ALPHANUMERIC_CHARSET.indexOf(text.charAt(i)) * 45;\n        temp += _QrSegment.ALPHANUMERIC_CHARSET.indexOf(text.charAt(i + 1));\n        appendBits(temp, 11, bb);\n      }\n      if (i < text.length)\n        appendBits(_QrSegment.ALPHANUMERIC_CHARSET.indexOf(text.charAt(i)), 6, bb);\n      return new _QrSegment(_QrSegment.Mode.ALPHANUMERIC, text.length, bb);\n    }\n    static makeSegments(text) {\n      if (text == \"\")\n        return [];\n      else if (_QrSegment.isNumeric(text))\n        return [_QrSegment.makeNumeric(text)];\n      else if (_QrSegment.isAlphanumeric(text))\n        return [_QrSegment.makeAlphanumeric(text)];\n      else\n        return [_QrSegment.makeBytes(_QrSegment.toUtf8ByteArray(text))];\n    }\n    static makeEci(assignVal) {\n      let bb = [];\n      if (assignVal < 0)\n        throw new RangeError(\"ECI assignment value out of range\");\n      else if (assignVal < 1 << 7)\n        appendBits(assignVal, 8, bb);\n      else if (assignVal < 1 << 14) {\n        appendBits(2, 2, bb);\n        appendBits(assignVal, 14, bb);\n      } else if (assignVal < 1e6) {\n        appendBits(6, 3, bb);\n        appendBits(assignVal, 21, bb);\n      } else\n        throw new RangeError(\"ECI assignment value out of range\");\n      return new _QrSegment(_QrSegment.Mode.ECI, 0, bb);\n    }\n    static isNumeric(text) {\n      return _QrSegment.NUMERIC_REGEX.test(text);\n    }\n    static isAlphanumeric(text) {\n      return _QrSegment.ALPHANUMERIC_REGEX.test(text);\n    }\n    getData() {\n      return this.bitData.slice();\n    }\n    static getTotalBits(segs, version) {\n      let result = 0;\n      for (const seg of segs) {\n        const ccbits = seg.mode.numCharCountBits(version);\n        if (seg.numChars >= 1 << ccbits)\n          return Infinity;\n        result += 4 + ccbits + seg.bitData.length;\n      }\n      return result;\n    }\n    static toUtf8ByteArray(str) {\n      str = encodeURI(str);\n      let result = [];\n      for (let i = 0; i < str.length; i++) {\n        if (str.charAt(i) != \"%\")\n          result.push(str.charCodeAt(i));\n        else {\n          result.push(parseInt(str.substr(i + 1, 2), 16));\n          i += 2;\n        }\n      }\n      return result;\n    }\n  };\n  let QrSegment = _QrSegment;\n  QrSegment.NUMERIC_REGEX = /^[0-9]*$/;\n  QrSegment.ALPHANUMERIC_REGEX = /^[A-Z0-9 $%*+.\\/:-]*$/;\n  QrSegment.ALPHANUMERIC_CHARSET = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ $%*+-./:\";\n  qrcodegen2.QrSegment = QrSegment;\n})(qrcodegen || (qrcodegen = {}));\n((qrcodegen2) => {\n  let QrCode;\n  ((QrCode2) => {\n    const _Ecc = class {\n      constructor(ordinal, formatBits) {\n        this.ordinal = ordinal;\n        this.formatBits = formatBits;\n      }\n    };\n    let Ecc = _Ecc;\n    Ecc.LOW = new _Ecc(0, 1);\n    Ecc.MEDIUM = new _Ecc(1, 0);\n    Ecc.QUARTILE = new _Ecc(2, 3);\n    Ecc.HIGH = new _Ecc(3, 2);\n    QrCode2.Ecc = Ecc;\n  })(QrCode = qrcodegen2.QrCode || (qrcodegen2.QrCode = {}));\n})(qrcodegen || (qrcodegen = {}));\n((qrcodegen2) => {\n  let QrSegment;\n  ((QrSegment2) => {\n    const _Mode = class {\n      constructor(modeBits, numBitsCharCount) {\n        this.modeBits = modeBits;\n        this.numBitsCharCount = numBitsCharCount;\n      }\n      numCharCountBits(ver) {\n        return this.numBitsCharCount[Math.floor((ver + 7) / 17)];\n      }\n    };\n    let Mode = _Mode;\n    Mode.NUMERIC = new _Mode(1, [10, 12, 14]);\n    Mode.ALPHANUMERIC = new _Mode(2, [9, 11, 13]);\n    Mode.BYTE = new _Mode(4, [8, 16, 16]);\n    Mode.KANJI = new _Mode(8, [8, 10, 12]);\n    Mode.ECI = new _Mode(7, [0, 0, 0]);\n    QrSegment2.Mode = Mode;\n  })(QrSegment = qrcodegen2.QrSegment || (qrcodegen2.QrSegment = {}));\n})(qrcodegen || (qrcodegen = {}));\nvar qrcodegen_default = qrcodegen;\n\n// src/index.tsx\n/**\n * @license qrcode.react\n * Copyright (c) Paul O'Shannessy\n * SPDX-License-Identifier: ISC\n */\nvar ERROR_LEVEL_MAP = {\n  L: qrcodegen_default.QrCode.Ecc.LOW,\n  M: qrcodegen_default.QrCode.Ecc.MEDIUM,\n  Q: qrcodegen_default.QrCode.Ecc.QUARTILE,\n  H: qrcodegen_default.QrCode.Ecc.HIGH\n};\nvar DEFAULT_SIZE = 128;\nvar DEFAULT_LEVEL = \"L\";\nvar DEFAULT_BGCOLOR = \"#FFFFFF\";\nvar DEFAULT_FGCOLOR = \"#000000\";\nvar DEFAULT_INCLUDEMARGIN = false;\nvar MARGIN_SIZE = 4;\nvar DEFAULT_IMG_SCALE = 0.1;\nfunction generatePath(modules, margin = 0) {\n  const ops = [];\n  modules.forEach(function(row, y) {\n    let start = null;\n    row.forEach(function(cell, x) {\n      if (!cell && start !== null) {\n        ops.push(`M${start + margin} ${y + margin}h${x - start}v1H${start + margin}z`);\n        start = null;\n        return;\n      }\n      if (x === row.length - 1) {\n        if (!cell) {\n          return;\n        }\n        if (start === null) {\n          ops.push(`M${x + margin},${y + margin} h1v1H${x + margin}z`);\n        } else {\n          ops.push(`M${start + margin},${y + margin} h${x + 1 - start}v1H${start + margin}z`);\n        }\n        return;\n      }\n      if (cell && start === null) {\n        start = x;\n      }\n    });\n  });\n  return ops.join(\"\");\n}\nfunction excavateModules(modules, excavation) {\n  return modules.slice().map((row, y) => {\n    if (y < excavation.y || y >= excavation.y + excavation.h) {\n      return row;\n    }\n    return row.map((cell, x) => {\n      if (x < excavation.x || x >= excavation.x + excavation.w) {\n        return cell;\n      }\n      return false;\n    });\n  });\n}\nfunction getImageSettings(cells, size, includeMargin, imageSettings) {\n  if (imageSettings == null) {\n    return null;\n  }\n  const margin = includeMargin ? MARGIN_SIZE : 0;\n  const numCells = cells.length + margin * 2;\n  const defaultSize = Math.floor(size * DEFAULT_IMG_SCALE);\n  const scale = numCells / size;\n  const w = (imageSettings.width || defaultSize) * scale;\n  const h = (imageSettings.height || defaultSize) * scale;\n  const x = imageSettings.x == null ? cells.length / 2 - w / 2 : imageSettings.x * scale;\n  const y = imageSettings.y == null ? cells.length / 2 - h / 2 : imageSettings.y * scale;\n  let excavation = null;\n  if (imageSettings.excavate) {\n    let floorX = Math.floor(x);\n    let floorY = Math.floor(y);\n    let ceilW = Math.ceil(w + x - floorX);\n    let ceilH = Math.ceil(h + y - floorY);\n    excavation = { x: floorX, y: floorY, w: ceilW, h: ceilH };\n  }\n  return { x, y, h, w, excavation };\n}\nvar SUPPORTS_PATH2D = function() {\n  try {\n    new Path2D().addPath(new Path2D());\n  } catch (e) {\n    return false;\n  }\n  return true;\n}();\nfunction QRCodeCanvas(props) {\n  const _a = props, {\n    value,\n    size = DEFAULT_SIZE,\n    level = DEFAULT_LEVEL,\n    bgColor = DEFAULT_BGCOLOR,\n    fgColor = DEFAULT_FGCOLOR,\n    includeMargin = DEFAULT_INCLUDEMARGIN,\n    style,\n    imageSettings\n  } = _a, otherProps = __objRest(_a, [\n    \"value\",\n    \"size\",\n    \"level\",\n    \"bgColor\",\n    \"fgColor\",\n    \"includeMargin\",\n    \"style\",\n    \"imageSettings\"\n  ]);\n  const imgSrc = imageSettings == null ? void 0 : imageSettings.src;\n  const _canvas = React.useRef(null);\n  const _image = React.useRef(null);\n  const [isImgLoaded, setIsImageLoaded] = React.useState(false);\n  React.useEffect(() => {\n    if (_canvas.current != null) {\n      const canvas = _canvas.current;\n      const ctx = canvas.getContext(\"2d\");\n      if (!ctx) {\n        return;\n      }\n      let cells = qrcodegen_default.QrCode.encodeText(value, ERROR_LEVEL_MAP[level]).getModules();\n      const margin = includeMargin ? MARGIN_SIZE : 0;\n      const numCells = cells.length + margin * 2;\n      const calculatedImageSettings = getImageSettings(cells, size, includeMargin, imageSettings);\n      const image = _image.current;\n      const haveImageToRender = calculatedImageSettings != null && image !== null && image.complete && image.naturalHeight !== 0 && image.naturalWidth !== 0;\n      if (haveImageToRender) {\n        if (calculatedImageSettings.excavation != null) {\n          cells = excavateModules(cells, calculatedImageSettings.excavation);\n        }\n      }\n      const pixelRatio = window.devicePixelRatio || 1;\n      canvas.height = canvas.width = size * pixelRatio;\n      const scale = size / numCells * pixelRatio;\n      ctx.scale(scale, scale);\n      ctx.fillStyle = bgColor;\n      ctx.fillRect(0, 0, numCells, numCells);\n      ctx.fillStyle = fgColor;\n      if (SUPPORTS_PATH2D) {\n        ctx.fill(new Path2D(generatePath(cells, margin)));\n      } else {\n        cells.forEach(function(row, rdx) {\n          row.forEach(function(cell, cdx) {\n            if (cell) {\n              ctx.fillRect(cdx + margin, rdx + margin, 1, 1);\n            }\n          });\n        });\n      }\n      if (haveImageToRender) {\n        ctx.drawImage(image, calculatedImageSettings.x + margin, calculatedImageSettings.y + margin, calculatedImageSettings.w, calculatedImageSettings.h);\n      }\n    }\n  });\n  React.useEffect(() => {\n    setIsImageLoaded(false);\n  }, [imgSrc]);\n  const canvasStyle = __spreadValues({ height: size, width: size }, style);\n  let img = null;\n  if (imgSrc != null) {\n    img = /* @__PURE__ */ React.createElement(\"img\", {\n      src: imgSrc,\n      key: imgSrc,\n      style: { display: \"none\" },\n      onLoad: () => {\n        setIsImageLoaded(true);\n      },\n      ref: _image\n    });\n  }\n  return /* @__PURE__ */ React.createElement(React.Fragment, null, /* @__PURE__ */ React.createElement(\"canvas\", __spreadValues({\n    style: canvasStyle,\n    height: size,\n    width: size,\n    ref: _canvas\n  }, otherProps)), img);\n}\nfunction QRCodeSVG(props) {\n  const _a = props, {\n    value,\n    size = DEFAULT_SIZE,\n    level = DEFAULT_LEVEL,\n    bgColor = DEFAULT_BGCOLOR,\n    fgColor = DEFAULT_FGCOLOR,\n    includeMargin = DEFAULT_INCLUDEMARGIN,\n    imageSettings\n  } = _a, otherProps = __objRest(_a, [\n    \"value\",\n    \"size\",\n    \"level\",\n    \"bgColor\",\n    \"fgColor\",\n    \"includeMargin\",\n    \"imageSettings\"\n  ]);\n  let cells = qrcodegen_default.QrCode.encodeText(value, ERROR_LEVEL_MAP[level]).getModules();\n  const margin = includeMargin ? MARGIN_SIZE : 0;\n  const numCells = cells.length + margin * 2;\n  const calculatedImageSettings = getImageSettings(cells, size, includeMargin, imageSettings);\n  let image = null;\n  if (imageSettings != null && calculatedImageSettings != null) {\n    if (calculatedImageSettings.excavation != null) {\n      cells = excavateModules(cells, calculatedImageSettings.excavation);\n    }\n    image = /* @__PURE__ */ React.createElement(\"image\", {\n      xlinkHref: imageSettings.src,\n      height: calculatedImageSettings.h,\n      width: calculatedImageSettings.w,\n      x: calculatedImageSettings.x + margin,\n      y: calculatedImageSettings.y + margin,\n      preserveAspectRatio: \"none\"\n    });\n  }\n  const fgPath = generatePath(cells, margin);\n  return /* @__PURE__ */ React.createElement(\"svg\", __spreadValues({\n    height: size,\n    width: size,\n    viewBox: `0 0 ${numCells} ${numCells}`\n  }, otherProps), /* @__PURE__ */ React.createElement(\"path\", {\n    fill: bgColor,\n    d: `M0,0 h${numCells}v${numCells}H0z`,\n    shapeRendering: \"crispEdges\"\n  }), /* @__PURE__ */ React.createElement(\"path\", {\n    fill: fgColor,\n    d: fgPath,\n    shapeRendering: \"crispEdges\"\n  }), image);\n}\nvar QRCode = (props) => {\n  const _a = props, { renderAs } = _a, otherProps = __objRest(_a, [\"renderAs\"]);\n  if (renderAs === \"svg\") {\n    return /* @__PURE__ */ React.createElement(QRCodeSVG, __spreadValues({}, otherProps));\n  }\n  return /* @__PURE__ */ React.createElement(QRCodeCanvas, __spreadValues({}, otherProps));\n};\nexport {\n  QRCodeCanvas,\n  QRCodeSVG,\n  QRCode as default\n};\n","import React from 'react';\nimport { InlineMessage, Text } from '@deriv/components';\nimport { useCryptoConfig, useCurrentCurrencyConfig } from '@deriv/hooks';\nimport { formatMoney } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { Localize, localize } from '@deriv/translations';\nimport { useDevice } from '@deriv-com/ui';\nimport './deposit-crypto-disclaimers.scss';\n\n// Check with BE to see if we can get the network name from the API.\nconst crypto_currency_to_network_mapper: Record<string, string> = {\n    BTC: 'Bitcoin (BTC)',\n    ETH: 'Ethereum (ETH)',\n    LTC: 'Litecoin (LTC)',\n    UST: 'Omnicore',\n    USDC: 'Ethereum (ERC20)',\n    eUSDT: 'Ethereum (ERC20) ',\n    tUSDT: 'Tron (TRC20) ',\n};\n\nconst DepositCryptoDisclaimers: React.FC = observer(() => {\n    const { client } = useStore();\n    const { currency } = client;\n    const { isMobile } = useDevice();\n    const { data: crypto_config } = useCryptoConfig(currency);\n\n    const currency_config = useCurrentCurrencyConfig();\n\n    const minimum_deposit_disclaimer = currency_config?.is_tUSDT ? (\n        <Localize\n            i18n_default_text='A minimum deposit value of <0>{{minimum_deposit}}</0> {{currency}} is required. Otherwise, a fee is applied.'\n            values={{\n                minimum_deposit: formatMoney(currency_config.code, crypto_config?.minimum_deposit ?? 0, true),\n                currency: currency_config.display_code,\n            }}\n            components={[<strong key={0} />]}\n        />\n    ) : (\n        <Localize\n            i18n_default_text='A minimum deposit value of <0>{{minimum_deposit}}</0> {{currency}} is required. Otherwise, the funds will be lost and cannot be recovered.'\n            values={{\n                minimum_deposit: formatMoney(currency_config?.code, crypto_config?.minimum_deposit ?? 0, true),\n                currency: currency_config?.display_code,\n            }}\n            components={[<strong key={0} />]}\n        />\n    );\n\n    return (\n        <div className='deposit-crypto-disclaimers'>\n            <InlineMessage title={localize('To avoid loss of funds:')}>\n                <br />\n                <ul className='deposit-crypto-disclaimers__list'>\n                    {crypto_config?.minimum_deposit && <li>{minimum_deposit_disclaimer}</li>}\n                    <li>\n                        <Localize\n                            i18n_default_text='Only send {{currency_name}} ({{currency_code}}) to this address.'\n                            values={{\n                                currency_name: currency_config?.name || '',\n                                currency_code: currency_config?.display_code || '',\n                            }}\n                        />\n                    </li>\n                    <li>\n                        <Localize\n                            i18n_default_text='Make sure to copy the Deriv {{currency}} account address above and paste it into your crypto wallet.'\n                            values={{ currency }}\n                        />\n                    </li>\n                    <li>\n                        <Localize\n                            i18n_default_text='In your crypto wallet, select the <0>{{network_name}} network</0> when transferring to Deriv. Incorrect transfers may result in the loss of funds.'\n                            values={{ network_name: crypto_currency_to_network_mapper[currency_config?.code] }}\n                            components={[<strong key={0} />]}\n                        />\n                    </li>\n                </ul>\n            </InlineMessage>\n            <Text align='center' size={isMobile ? 'xxxs' : 'xxs'}>\n                <Localize\n                    i18n_default_text='<0>Note:</0> You’ll receive an email when your deposit starts being processed.'\n                    components={[<Text key={0} size={isMobile ? 'xxxs' : 'xxs'} weight='bold' />]}\n                />\n            </Text>\n        </div>\n    );\n});\n\nexport default DepositCryptoDisclaimers;\n","import React from 'react';\nimport { Analytics } from '@deriv-com/analytics';\nimport { Button, Clipboard, InlineMessage, Loading, Text } from '@deriv/components';\nimport { useDepositCryptoAddress } from '@deriv/hooks';\nimport { observer, useStore } from '@deriv/stores';\nimport { localize } from '@deriv/translations';\nimport { setPerformanceValue } from '@deriv/shared';\nimport { useDevice } from '@deriv-com/ui';\nimport QRCode from 'qrcode.react';\nimport { DepositCryptoDisclaimers } from '../deposit-crypto-disclaimers';\nimport './deposit-crypto-wallet-address.scss';\n\nconst DepositCryptoWalletAddress: React.FC = observer(() => {\n    const { client } = useStore();\n    const { currency, loginid } = client;\n    const { isMobile } = useDevice();\n    const { data: deposit_crypto_address, isLoading, error, resend } = useDepositCryptoAddress();\n\n    if (isLoading) return <Loading is_fullscreen={false} />;\n\n    setPerformanceValue('load_crypto_deposit_cashier_time');\n\n    const onClickHandler = () => {\n        Analytics.trackEvent('ce_cashier_deposit_onboarding_form', {\n            action: 'click_copy_crypto_address',\n            form_name: 'ce_cashier_deposit_onboarding_form',\n            currency,\n            login_id: loginid,\n        });\n    };\n\n    if (error) {\n        return (\n            <div className='deposit-crypto-wallet-address__error'>\n                <InlineMessage\n                    type='warning'\n                    message={localize(\n                        \"Unfortunately, we couldn't get the address since our server was down. Please click Refresh to reload the address or try again later.\"\n                    )}\n                />\n                <Button text={localize('Refresh')} onClick={() => resend()} secondary small />\n            </div>\n        );\n    }\n\n    return (\n        <>\n            <QRCode\n                value={deposit_crypto_address || ''}\n                size={isMobile ? 128 : 160}\n                className='deposit-crypto-wallet-address__qrcode-container'\n            />\n            <div className='deposit-crypto-wallet-address__address-container'>\n                <div className='deposit-crypto-wallet-address__hash-container'>\n                    <Text size={isMobile ? 'xxs' : 'xs'} weight='bold'>\n                        {deposit_crypto_address}\n                    </Text>\n                </div>\n                <div className='deposit-crypto-wallet-address__action-container'>\n                    <Clipboard\n                        text_copy={deposit_crypto_address || ''}\n                        info_message={isMobile ? undefined : localize('copy')}\n                        success_message={localize('copied!')}\n                        onClickHandler={onClickHandler}\n                        popoverAlignment={isMobile ? 'left' : 'bottom'}\n                    />\n                </div>\n            </div>\n            <DepositCryptoDisclaimers />\n        </>\n    );\n});\n\nexport default DepositCryptoWalletAddress;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { useDevice } from '@deriv-com/ui';\nimport { Text } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport DepositFiatIframe from '@deriv/cashier/src/modules/deposit-fiat/components/deposit-fiat-iframe/deposit-fiat-iframe';\nimport DepositCrypto from '@deriv/cashier/src/modules/deposit-crypto/components/deposit-crypto-wallet-address/deposit-crypto-wallet-address';\nimport { Chat } from '@deriv/utils';\n\nexport const OneTimeDepositModalContent = ({ is_crypto_provider = false }: { is_crypto_provider?: boolean }) => {\n    const { isDesktop } = useDevice();\n\n    const onLiveChatClick = () => Chat.open();\n\n    return (\n        <div\n            className={classNames('one-time-deposit-modal__content', {\n                'one-time-deposit-modal__content-crypto': is_crypto_provider,\n            })}\n        >\n            <div className='one-time-deposit-modal__title'>\n                <Text as='h1' size={!isDesktop ? 'm' : 'l'} weight='bold'>\n                    <Localize i18n_default_text='Deposit' />\n                </Text>\n                <Text size={!isDesktop ? 'xs' : 's'} align='center'>\n                    {is_crypto_provider ? (\n                        <Localize\n                            i18n_default_text='Need help? Contact us via <0>live chat</0>'\n                            components={[\n                                <Text\n                                    key={0}\n                                    className='one-time-deposit-modal__livechat'\n                                    size={!isDesktop ? 'xs' : 's'}\n                                    color='loss-danger'\n                                    onClick={onLiveChatClick}\n                                    data-testid='dt_live_chat'\n                                />,\n                            ]}\n                        />\n                    ) : (\n                        <Localize\n                            i18n_default_text='Select a payment method to make a deposit into your account.<0 />Need help? Contact us via <1>live chat</1>'\n                            components={[\n                                <br key={0} />,\n                                <Text\n                                    key={1}\n                                    className='one-time-deposit-modal__livechat'\n                                    size={!isDesktop ? 'xs' : 's'}\n                                    color='loss-danger'\n                                    onClick={onLiveChatClick}\n                                    data-testid='dt_live_chat'\n                                />,\n                            ]}\n                        />\n                    )}\n                </Text>\n            </div>\n            {is_crypto_provider ? <DepositCrypto /> : <DepositFiatIframe />}\n        </div>\n    );\n};\n","import React from 'react';\nimport { Analytics } from '@deriv-com/analytics';\nimport { useDevice } from '@deriv-com/ui';\nimport { MobileFullPageModal, Modal } from '@deriv/components';\nimport { useCryptoTransactions, useCurrentCurrencyConfig } from '@deriv/hooks';\nimport { observer, useStore } from '@deriv/stores';\nimport DepositNowOrLaterModal from '../Modals/deposit-now-or-later-modal';\nimport { OneTimeDepositModalContent } from './one-time-deposit-modal-content';\nimport CryptoTransactionProcessingModal from '../Modals/crypto-transaction-processing-modal';\nimport './one-time-deposit-modal.scss';\n\nconst OneTimeDepositModal = observer(() => {\n    const { isDesktop } = useDevice();\n    const { client, ui } = useStore();\n    const { is_cr_account, is_logged_in, balance, currency, updateAccountStatus } = client;\n    const {\n        should_show_one_time_deposit_modal,\n        setShouldShowOneTimeDepositModal,\n        setShouldShowDepositNowOrLaterModal,\n        setShouldShowCryptoTransactionProcessingModal,\n    } = ui;\n\n    const currency_config = useCurrentCurrencyConfig();\n    const is_crypto_provider = currency_config?.platform.cashier.includes('crypto');\n    const { data: crypto_transactions, has_transactions } = useCryptoTransactions(is_logged_in && is_crypto_provider);\n    const [is_account_deposited, setIsAccountDeposited] = React.useState(false);\n\n    const onCloseModal = () => {\n        if (is_account_deposited) setShouldShowOneTimeDepositModal(false);\n        else setShouldShowDepositNowOrLaterModal(true);\n    };\n\n    // check the user already made a deposit\n    React.useEffect(() => {\n        if (balance && Number(balance) > 0) {\n            setIsAccountDeposited(true);\n        }\n\n        // check crypto transactions\n        if (is_crypto_provider && crypto_transactions && has_transactions) {\n            if (crypto_transactions?.some(tx => tx.is_deposit)) {\n                setIsAccountDeposited(true);\n            }\n\n            if (crypto_transactions?.some(tx => tx.is_deposit && tx.status_code === 'PENDING')) {\n                setShouldShowOneTimeDepositModal(false);\n                setShouldShowCryptoTransactionProcessingModal(true);\n            }\n        }\n    }, [\n        balance,\n        crypto_transactions,\n        currency_config,\n        is_crypto_provider,\n        has_transactions,\n        setIsAccountDeposited,\n        setShouldShowOneTimeDepositModal,\n        setShouldShowCryptoTransactionProcessingModal,\n    ]);\n\n    React.useEffect(() => {\n        if (should_show_one_time_deposit_modal) {\n            Analytics.trackEvent('ce_tradershub_popup', {\n                action: 'open',\n                form_name: 'traders_hub_default',\n                account_mode: 'real',\n                popup_name: 'direct_deposit',\n                // @ts-expect-error currency propery will be added later\n                currency,\n            });\n\n            return () => {\n                updateAccountStatus();\n            };\n        }\n    }, [should_show_one_time_deposit_modal]);\n\n    return (\n        <React.Fragment>\n            {isDesktop ? (\n                <Modal\n                    className='one-time-deposit-modal'\n                    is_open={should_show_one_time_deposit_modal}\n                    title=' '\n                    toggleModal={onCloseModal}\n                    height='auto'\n                    has_close_icon\n                    should_header_stick_body={false}\n                >\n                    <Modal.Body className='one-time-deposit-modal__body'>\n                        <OneTimeDepositModalContent is_crypto_provider={is_crypto_provider} />\n                    </Modal.Body>\n                </Modal>\n            ) : (\n                <MobileFullPageModal\n                    className='one-time-deposit-modal'\n                    body_className='one-time-deposit-modal__body'\n                    header=' '\n                    height_offset='80px'\n                    is_modal_open={should_show_one_time_deposit_modal}\n                    onClickClose={onCloseModal}\n                >\n                    <OneTimeDepositModalContent is_crypto_provider={is_crypto_provider} />\n                </MobileFullPageModal>\n            )}\n            <DepositNowOrLaterModal />\n            <CryptoTransactionProcessingModal />\n        </React.Fragment>\n    );\n});\n\nexport default OneTimeDepositModal;\n","import OneTimeDepositModal from './one-time-deposit-modal';\n\nexport default OneTimeDepositModal;\n","import { useQuery } from '@deriv/api';\n\nconst useCryptoConfig = (currency: string) => {\n    const { data, ...rest } = useQuery('crypto_config', { payload: { currency_code: currency } });\n\n    const cryptoConfig = data?.crypto_config?.currencies_config[currency];\n\n    return {\n        /** Available cryptocurrencies config for authorized account*/\n        data: cryptoConfig,\n        ...rest,\n    };\n};\n\nexport default useCryptoConfig;\n","import { useEffect, useMemo, useState } from 'react';\nimport { useSubscription } from '@deriv/api';\n\ntype TTransaction = NonNullable<\n    NonNullable<ReturnType<typeof useSubscription<'cashier_payments'>>['data']>['cashier_payments']\n>['crypto'][number];\n\ntype TStatus = TTransaction['status_code'];\n\ntype TDepositStatus = 'PENDING' | 'CONFIRMED' | 'ERROR';\n\ntype TWithdrawalStatus = Exclude<TStatus, TDepositStatus>;\n\n// Since BE sends the `status_code` for both `deposit` and `withdrawal` in the same field,\n// Here we modify the BE type to make `status_code` type more specific to the `transaction_type` field.\nexport type TModifiedTransaction = Omit<TTransaction, 'status_code' | 'transaction_type'> &\n    (\n        | { transaction_type: 'deposit'; status_code: TDepositStatus }\n        | { transaction_type: 'withdrawal'; status_code: TWithdrawalStatus }\n    );\n\n/** A custom hook that returns the list of pending crypto transactions for the current user. */\nconst useCryptoTransactions = (allowToMakeSubscription = true) => {\n    const { subscribe, data, ...rest } = useSubscription('cashier_payments');\n    const [transactions, setTransactions] = useState<TModifiedTransaction[]>();\n\n    useEffect(() => {\n        allowToMakeSubscription && subscribe();\n    }, [subscribe, allowToMakeSubscription]);\n\n    useEffect(() => {\n        setTransactions(old_transactions => {\n            // Get the list of the crypto transactions.\n            const new_transactions = data?.cashier_payments?.crypto as TModifiedTransaction[] | undefined;\n\n            // If there are no new transactions, return the old transactions.\n            if (!new_transactions) return old_transactions;\n\n            // If there are no old transactions, return the new transactions.\n            if (!old_transactions) return new_transactions;\n\n            // Make a copy of the old transactions.\n            const updated_transactions = [...old_transactions];\n\n            // For each new transaction, check if it exists in the old transactions.\n            new_transactions.forEach(new_transaction => {\n                // Find the index of the new transaction in the old transactions if exists.\n                const index = updated_transactions.findIndex(\n                    old_transaction => old_transaction.id === new_transaction.id\n                );\n\n                // If the new transaction does not exist in the old transactions, add it, otherwise update it.\n                if (index === -1) {\n                    updated_transactions.push(new_transaction);\n                } else {\n                    updated_transactions[index] = new_transaction;\n                }\n            });\n\n            // Return the updated transactions.\n            return updated_transactions;\n        });\n    }, [data?.cashier_payments?.crypto]);\n\n    // Add additional information to each transaction.\n    const modified_transactions = useMemo(\n        () =>\n            transactions?.map(transaction => ({\n                ...transaction,\n                /** Determine if the transaction is a deposit or not. */\n                is_deposit: transaction.transaction_type === 'deposit',\n                /** Determine if the transaction is a withdrawal or not. */\n                is_withdrawal: transaction.transaction_type === 'withdrawal',\n            })),\n        [transactions]\n    );\n\n    // Sort transactions by submit time.\n    const sorted_transactions = useMemo(\n        () => modified_transactions?.sort((a, b) => b.submit_date - a.submit_date),\n        [modified_transactions]\n    );\n\n    // Determine if the user has any transactions or not.\n    const has_transactions = modified_transactions && modified_transactions.length > 0;\n\n    // Get the last transaction if exists.\n    const last_transaction = modified_transactions?.[0];\n\n    return {\n        /** List of user transactions sorted by submit time. */\n        data: sorted_transactions,\n        /** Returns the last transaction if exists. */\n        last_transaction,\n        /** Determine is the user has any transactions or not. */\n        has_transactions,\n        subscribe,\n        ...rest,\n    };\n};\n\nexport default useCryptoTransactions;\n","import { useCallback, useMemo } from 'react';\nimport { useFetch } from '@deriv/api';\n\ntype TPlatform = {\n    cashier: ('doughflow' | 'crypto')[];\n    ramp: string[] | [];\n};\n\n/** @deprecated Use `useCurrencyConfig` from `@deriv/api` package instead. */\nconst useCurrencyConfig = () => {\n    const { data: website_status_data, ...rest } = useFetch('website_status');\n\n    const currencies_config = useMemo(() => {\n        if (!website_status_data?.website_status?.currencies_config) return undefined;\n\n        const website_status_currencies_config = website_status_data.website_status.currencies_config;\n\n        const modified_currencies_config = Object.keys(website_status_currencies_config).map(currency => {\n            const currency_config = website_status_currencies_config[currency];\n\n            return {\n                ...currency_config,\n                /** determine if the currency is a `crypto` currency */\n                is_crypto: currency_config?.type === 'crypto',\n                /** determine if the currency is a `fiat` currency */\n                is_fiat: currency_config?.type === 'fiat',\n                /** determine if the currency is `Australian Dollar` */\n                is_AUD: currency === 'AUD',\n                /** determine if the currency is `US Dollar` */\n                is_USD: currency === 'USD',\n                /** determine if the currency is `Euro` */\n                is_EUR: currency === 'EUR',\n                /** determine if the currency is `Pound Sterling` */\n                is_GBP: currency === 'GBP',\n                /** determine if the currency is `Bitcoin` */\n                is_BTC: currency === 'BTC',\n                /** determine if the currency is `Ethereum` */\n                is_ETH: currency === 'ETH',\n                /** determine if the currency is `Litecoin` */\n                is_LTC: currency === 'LTC',\n                /** determine if the currency is `Multi-Collateral DAI` */\n                is_DAI: currency === 'DAI',\n                /** determine if the currency is `IDK` */\n                is_IDK: currency === 'IDK',\n                /** determine if the currency is `Paxos Standard` */\n                is_PAX: currency === 'PAX',\n                /** determine if the currency is `Binary Coin` */\n                is_USB: currency === 'USB',\n                /** determine if the currency is `Tether Omni` */\n                is_USDT: currency === 'UST',\n                /** determine if the currency is `True USD` */\n                is_TUSD: currency === 'TUSD',\n                /** determine if the currency is `Binance USD` */\n                is_BUSD: currency === 'BUSD',\n                /** determine if the currency is `STATIS Euro` */\n                is_EURS: currency === 'EURS',\n                /** determine if the currency is `Tether ERC20` */\n                is_eUSDT: currency === 'eUSDT',\n                /** determine if the currency is `Tether TRC20` */\n                is_tUSDT: currency === 'tUSDT',\n                /** determine if the currency is `USD Coin` */\n                is_USDC: currency === 'USDC',\n                /** determine if the currency is `USDK` */\n                is_USDK: currency === 'USDK',\n                /** Currency code */\n                code: currency,\n                /** Currency display code */\n                display_code: currency === 'UST' ? 'USDT' : currency,\n                /** Local asset name for the currency icon. ex: `IcCurrencyUsd` for `USD` */\n                icon: `IcCurrency${currency[0].toUpperCase() + currency.slice(1).toLowerCase()}`,\n                /** Platforms with providers */\n                //TODO: Remove `as TPlatform` after updating `@deriv/api-types` library\n                //@ts-expect-error need to update `@deriv/api-types` library to the latest version\n                platform: currency_config?.platform as TPlatform,\n            };\n        });\n\n        return modified_currencies_config.reduce<Record<string, typeof modified_currencies_config[number]>>(\n            (previous, current) => ({ ...previous, [current.code]: current }),\n            {}\n        );\n    }, [website_status_data?.website_status?.currencies_config]);\n\n    const getConfig = useCallback((currency: string) => currencies_config?.[currency], [currencies_config]);\n\n    return {\n        /** Returns the currency config object for the given currency */\n        getConfig,\n        /** Available currencies and their information */\n        currencies_config,\n        ...rest,\n    };\n};\n\nexport default useCurrencyConfig;\n","import { useStore } from '@deriv/stores';\nimport useCurrencyConfig from './useCurrencyConfig';\n\n/** A custom hook to get the currency config information for the user's current currency. */\nconst useCurrentCurrencyConfig = () => {\n    const { client } = useStore();\n    const { currency } = client;\n    const { getConfig } = useCurrencyConfig();\n    const currency_config = getConfig(currency);\n\n    // Safe to do null assertion here because the user's currency is always\n    // available in the currency config object so it can't be null.\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return currency_config!;\n};\n\nexport default useCurrentCurrencyConfig;\n","import { useCallback, useEffect } from 'react';\nimport { useRequest } from '@deriv/api';\n\nconst useDepositCryptoAddress = () => {\n    const { data, mutate, ...rest } = useRequest('cashier');\n    const deposit_address = typeof data?.cashier !== 'string' ? data?.cashier?.deposit?.address : undefined;\n\n    const send = useCallback(\n        () => mutate({ payload: { cashier: 'deposit', provider: 'crypto', type: 'api' } }),\n        [mutate]\n    );\n\n    useEffect(() => {\n        send();\n    }, [send]);\n\n    return {\n        ...rest,\n        resend: send,\n        data: deposit_address,\n    };\n};\n\nexport default useDepositCryptoAddress;\n","import { useCallback, useEffect } from 'react';\nimport { useRequest } from '@deriv/api';\nimport { useStore } from '@deriv/stores';\n\nconst useDepositFiatAddress = () => {\n    const { ui } = useStore();\n    const { is_dark_mode_on } = ui;\n    const { data, mutate, ...rest } = useRequest('cashier');\n    const dark_mode = is_dark_mode_on ? 'on' : 'off';\n    const urlObject = new URL(window.location.href);\n    const lang = urlObject.searchParams.get('lang')?.toLowerCase();\n\n    let deposit_iframe_url;\n    if (typeof data?.cashier === 'string') {\n        const cashierUrl = new URL(data.cashier);\n        cashierUrl.searchParams.set('DarkMode', dark_mode);\n        lang && cashierUrl.searchParams.set('Lang', lang);\n        deposit_iframe_url = cashierUrl.toString();\n    }\n\n    const send = useCallback(() => mutate({ payload: { cashier: 'deposit', provider: 'doughflow' } }), [mutate]);\n\n    useEffect(() => {\n        send();\n    }, [send]);\n\n    return {\n        ...rest,\n        resend: send,\n        data: deposit_iframe_url,\n    };\n};\n\nexport default useDepositFiatAddress;\n"],"names":["observer","isMobile","useDevice","ui","useStore","should_show_deposit_now_or_later_modal","setShouldShowDepositNowOrLaterModal","setShouldShowOneTimeDepositModal","onClose","is_click_on_cancel_button","arguments","length","undefined","Analytics","trackEvent","action","form_name","account_mode","popup_name","popup_type","cta_name","React","_jsx","Dialog","className","title","Localize","i18n_default_text","confirm_button_text","localize","onConfirm","onConfirmModal","cancel_button_text","onCancel","is_visible","has_close_icon","is_closed_on_cancel","children","Text","align","size","_ref","error","message","EmptyState","icon","description","label","onClick","window","location","reload","tertiary","data","iframe_url","useDepositFiatAddress","is_loading","setIsLoading","useState","useEffect","setPerformanceValue","ErrorState","_jsxs","Loading","is_fullscreen","onLoad","src","style","display","qrcodegen","__defProp","Object","defineProperty","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__objRest","source","exclude","target","indexOf","qrcodegen2","_QrCode","constructor","version","errorCorrectionLevel","dataCodewords","msk","this","modules","isFunction","MIN_VERSION","MAX_VERSION","RangeError","row","i","push","slice","drawFunctionPatterns","allCodewords","addEccAndInterleave","drawCodewords","minPenalty","applyMask","drawFormatBits","penalty","getPenaltyScore","assert","mask","encodeText","text","ecl","segs","QrSegment","makeSegments","encodeSegments","encodeBinary","seg","makeBytes","minVersion","maxVersion","boostEcl","dataUsedBits","dataCapacityBits2","getNumDataCodewords","usedBits","getTotalBits","newEcl","Ecc","MEDIUM","QUARTILE","HIGH","bb","appendBits","mode","modeBits","numChars","numCharCountBits","getData","dataCapacityBits","Math","min","padByte","forEach","getModule","x","y","getModules","setFunctionModule","drawFinderPattern","alignPatPos","getAlignmentPatternPositions","numAlign","j","drawAlignmentPattern","drawVersion","formatBits","rem","bits","getBit","color","floor","dy","dx","dist","max","abs","xx","yy","isDark","ver","numBlocks","NUM_ERROR_CORRECTION_BLOCKS","ordinal","blockEccLen","ECC_CODEWORDS_PER_BLOCK","rawCodewords","getNumRawDataModules","numShortBlocks","shortBlockLen","blocks","rsDiv","reedSolomonComputeDivisor","k","dat","ecc","reedSolomonComputeRemainder","concat","result","block","right","vert","invert","Error","runColor","runX","runHistory","PENALTY_N1","finderPenaltyAddHistory","finderPenaltyCountPatterns","PENALTY_N3","finderPenaltyTerminateAndCount","runY","PENALTY_N2","dark","reduce","sum","total","ceil","PENALTY_N4","step","pos","splice","degree","root","reedSolomonMultiply","divisor","map","_","factor","shift","coef","z","n","core","currentRunColor","currentRunLength","pop","unshift","QrCode","val","len","cond","_QrSegment","bitData","Mode","BYTE","makeNumeric","digits","isNumeric","parseInt","substr","NUMERIC","makeAlphanumeric","isAlphanumeric","temp","ALPHANUMERIC_CHARSET","charAt","ALPHANUMERIC","toUtf8ByteArray","makeEci","assignVal","ECI","NUMERIC_REGEX","test","ALPHANUMERIC_REGEX","ccbits","Infinity","str","encodeURI","charCodeAt","QrCode2","_Ecc","LOW","QrSegment2","_Mode","numBitsCharCount","KANJI","qrcodegen_default","ERROR_LEVEL_MAP","L","M","Q","H","DEFAULT_SIZE","DEFAULT_LEVEL","DEFAULT_BGCOLOR","DEFAULT_FGCOLOR","DEFAULT_INCLUDEMARGIN","generatePath","margin","ops","start","cell","join","excavateModules","excavation","h","w","getImageSettings","cells","includeMargin","imageSettings","numCells","defaultSize","scale","width","height","excavate","floorX","floorY","SUPPORTS_PATH2D","Path2D","addPath","e","QRCodeCanvas","props","_a","level","bgColor","fgColor","otherProps","imgSrc","_canvas","_image","isImgLoaded","setIsImageLoaded","current","canvas","ctx","getContext","calculatedImageSettings","image","haveImageToRender","complete","naturalHeight","naturalWidth","pixelRatio","devicePixelRatio","fillStyle","fillRect","fill","rdx","cdx","drawImage","canvasStyle","img","ref","QRCodeSVG","xlinkHref","preserveAspectRatio","fgPath","viewBox","d","shapeRendering","QRCode","renderAs","crypto_currency_to_network_mapper","BTC","ETH","LTC","UST","USDC","eUSDT","tUSDT","_crypto_config$minimu","_crypto_config$minimu2","client","currency","crypto_config","useCryptoConfig","currency_config","useCurrentCurrencyConfig","minimum_deposit_disclaimer","is_tUSDT","values","minimum_deposit","formatMoney","code","display_code","components","InlineMessage","currency_name","name","currency_code","network_name","weight","loginid","deposit_crypto_address","isLoading","resend","useDepositCryptoAddress","type","Button","secondary","small","_Fragment","Clipboard","text_copy","info_message","success_message","onClickHandler","login_id","popoverAlignment","DepositCryptoDisclaimers","OneTimeDepositModalContent","is_crypto_provider","isDesktop","onLiveChatClick","Chat","open","classNames","as","DepositCrypto","DepositFiatIframe","is_cr_account","is_logged_in","balance","updateAccountStatus","should_show_one_time_deposit_modal","setShouldShowCryptoTransactionProcessingModal","platform","cashier","includes","crypto_transactions","has_transactions","useCryptoTransactions","is_account_deposited","setIsAccountDeposited","onCloseModal","Number","some","tx","is_deposit","status_code","Modal","is_open","toggleModal","should_header_stick_body","Body","MobileFullPageModal","body_className","header","height_offset","is_modal_open","onClickClose","DepositNowOrLaterModal","CryptoTransactionProcessingModal","_data$crypto_config","_useQuery","useQuery","payload","rest","_objectWithoutProperties","_excluded","_objectSpread","currencies_config","_data$cashier_payment2","allowToMakeSubscription","_useSubscription","useSubscription","subscribe","transactions","setTransactions","old_transactions","_data$cashier_payment","new_transactions","cashier_payments","crypto","updated_transactions","new_transaction","index","findIndex","old_transaction","id","modified_transactions","useMemo","transaction","transaction_type","is_withdrawal","sorted_transactions","sort","submit_date","last_transaction","useCurrencyConfig","_website_status_data$2","_useFetch","useFetch","website_status_data","_website_status_data$","website_status","website_status_currencies_config","keys","is_crypto","is_fiat","is_AUD","is_USD","is_EUR","is_GBP","is_BTC","is_ETH","is_LTC","is_DAI","is_IDK","is_PAX","is_USB","is_USDT","is_TUSD","is_BUSD","is_EURS","is_eUSDT","is_USDC","is_USDK","toUpperCase","toLowerCase","previous","getConfig","useCallback","_data$cashier","_useRequest","useRequest","mutate","deposit_address","deposit","address","send","provider","_urlObject$searchPara","is_dark_mode_on","dark_mode","lang","URL","href","searchParams","get","deposit_iframe_url","cashierUrl","set","toString"],"sourceRoot":""}