{"version":3,"file":"js/core.core_set-account-currency-info.6722a22bd4aaec6a8007.js","mappings":"uMAOA,MCLA,GDKgCA,EAAAA,EAAAA,WAAS,KACrC,MAAM,OAAEC,EAAM,GAAEC,IAAOC,EAAAA,EAAAA,MACjB,WAAEC,GAAeH,GAEnBI,8BAA+BC,EAC/BC,sBAAuBC,EACvBC,uBAAwBC,GACxBR,EACES,GAAmBC,EAAAA,EAAAA,KAEzB,OACIC,EAAAA,EAAAA,MAACC,EAAAA,MAAK,CACFC,GAAG,gCACHC,gBAAgB,EAChBC,QAASX,EACTY,OAAK,EACLR,YAAaA,EACbS,MACKR,GAEKS,EAAAA,EAAAA,UAAS,0CADTA,EAAAA,EAAAA,UAAS,wCAElBC,SAAA,EAEDC,EAAAA,EAAAA,KAACR,EAAAA,MAAMS,KAAI,CAAAF,UACND,EAAAA,EAAAA,UAAS,4FAEdE,EAAAA,EAAAA,KAACR,EAAAA,MAAMU,OAAM,CAAAH,SACPjB,GAiBEkB,EAAAA,EAAAA,KAACG,EAAAA,OAAM,CAACC,YAAU,EAACC,MAAMP,EAAAA,EAAAA,UAAS,MAAOQ,QAASlB,EAAamB,SAAO,KAhBtEhB,EAAAA,EAAAA,MAAAiB,EAAAA,SAAA,CAAAT,SAAA,EACIC,EAAAA,EAAAA,KAACG,EAAAA,OAAM,CAACC,YAAU,EAACC,MAAMP,EAAAA,EAAAA,UAAS,UAAWQ,QAASlB,EAAaqB,WAAS,KAC5ET,EAAAA,EAAAA,KAACG,EAAAA,OAAM,CACHC,YAAU,EACVC,MAAMP,EAAAA,EAAAA,UAAS,gBACfQ,QAASA,KACLlB,IAEAsB,YAAW,KACPxB,EAAY,eAAe,GAC5B,IAAI,EAEXqB,SAAO,WAOnB,G,oDEpDhB,MASA,EATgCI,KAC5B,MAAM,OAAEhC,IAAWE,EAAAA,EAAAA,MACb,gBAAE+B,GAAoBjC,EAI5B,OAFgCiC,EAAgBC,MAAKC,GAAkC,IAAvBA,EAAQhC,YAE1C,C,gECLlC,MAcA,EAd0BQ,KACtB,MAAM,OAAEX,IAAWE,EAAAA,EAAAA,MACb,aAAEkC,GAAiBpC,EACnBqC,GAA0BL,EAAAA,EAAAA,KAQhC,OANyBI,EACpBE,QAAOH,IAAYA,EAAQhC,aAC3B+B,MAAKC,GAA6B,SAAlBA,EAAQjB,OAAsC,eAAlBiB,EAAQjB,UAEXmB,CAEvB,C","sources":["webpack:///./App/Containers/SetAccountCurrencyModal/set-currency-modal.jsx","webpack:///./App/Containers/SetAccountCurrencyModal/index.js","webpack:///../../hooks/src/useHasActiveRealAccount.ts","webpack:///../../hooks/src/useHasSetCurrency.ts"],"sourcesContent":["import React from 'react';\nimport { Button, Modal } from '@deriv/components';\nimport { useHasSetCurrency } from '@deriv/hooks';\nimport { localize } from '@deriv/translations';\nimport { observer, useStore } from '@deriv/stores';\nimport 'Sass/set-currency-modal.scss';\n\nconst SetAccountCurrencyModal = observer(() => {\n    const { client, ui } = useStore();\n    const { is_virtual } = client;\n    const {\n        is_set_currency_modal_visible: is_visible,\n        openRealAccountSignup: setCurrency,\n        toggleSetCurrencyModal: toggleModal,\n    } = ui;\n    const has_set_currency = useHasSetCurrency();\n\n    return (\n        <Modal\n            id='dt_set_account_currency_modal'\n            has_close_icon={false}\n            is_open={is_visible}\n            small\n            toggleModal={toggleModal}\n            title={\n                !has_set_currency\n                    ? localize('No currency assigned to your account')\n                    : localize('You have an account that needs action')\n            }\n        >\n            <Modal.Body>\n                {localize('Please set a currency for your existing real account before creating another account.')}\n            </Modal.Body>\n            <Modal.Footer>\n                {!is_virtual ? (\n                    <>\n                        <Button has_effect text={localize('Cancel')} onClick={toggleModal} secondary />\n                        <Button\n                            has_effect\n                            text={localize('Set currency')}\n                            onClick={() => {\n                                toggleModal();\n                                // timeout is to ensure no jumpy animation when modals are overlapping enter/exit transitions\n                                setTimeout(() => {\n                                    setCurrency('set_currency');\n                                }, 250);\n                            }}\n                            primary\n                        />\n                    </>\n                ) : (\n                    <Button has_effect text={localize('OK')} onClick={toggleModal} primary />\n                )}\n            </Modal.Footer>\n        </Modal>\n    );\n});\n\nexport default SetAccountCurrencyModal;\n","import SetAccountCurrencyModal from './set-currency-modal.jsx';\n\nexport default SetAccountCurrencyModal;\n","import { useStore } from '@deriv/stores';\n\nconst useHasActiveRealAccount = () => {\n    const { client } = useStore();\n    const { active_accounts } = client;\n\n    const has_active_real_account = active_accounts.some(account => account.is_virtual === 0);\n\n    return has_active_real_account;\n};\n\nexport default useHasActiveRealAccount;\n","import { useStore } from '@deriv/stores';\nimport useHasActiveRealAccount from './useHasActiveRealAccount';\n\nconst useHasSetCurrency = () => {\n    const { client } = useStore();\n    const { account_list } = client;\n    const has_active_real_account = useHasActiveRealAccount();\n\n    const has_real_account = account_list\n        .filter(account => !account.is_virtual)\n        .some(account => account.title !== 'Real' && account.title !== 'Investment');\n\n    const has_set_currency = has_real_account || !has_active_real_account;\n\n    return has_set_currency;\n};\n\nexport default useHasSetCurrency;\n"],"names":["observer","client","ui","useStore","is_virtual","is_set_currency_modal_visible","is_visible","openRealAccountSignup","setCurrency","toggleSetCurrencyModal","toggleModal","has_set_currency","useHasSetCurrency","_jsxs","Modal","id","has_close_icon","is_open","small","title","localize","children","_jsx","Body","Footer","Button","has_effect","text","onClick","primary","_Fragment","secondary","setTimeout","useHasActiveRealAccount","active_accounts","some","account","account_list","has_active_real_account","filter"],"sourceRoot":""}