{"version":3,"file":"js/core.update-email-modal.5e137ede9f1caf33f568.js","mappings":"sNAOA,MCLA,GDKyBA,EAAAA,EAAAA,WAAS,KAC9B,MAAM,GAAEC,EAAE,OAAEC,IAAWC,EAAAA,EAAAA,MACfC,OAAQC,EAAY,aAAEC,GAAiBJ,GACvCK,8BAA+BC,EAAU,uBAAEC,GAA2BR,EACxES,EAAYR,EAAOQ,UAAUC,oBAC7BC,EAAoBV,EAAOU,kBAAkBD,qBAE5CE,EAAkBC,GAAqBC,EAAAA,UAAe,IACtDC,EAAoBC,GAAyBF,EAAAA,SAAe,MAc7DG,EAAc,CAChBC,aAAc,SACdT,YACAE,qBAGEQ,EAAkBA,KACpBC,EAAAA,GAAGC,YAAYJ,GAAaK,MAAKC,IAC7BV,GAAkB,GACdU,EAASC,QACTR,EAAsBO,EAASC,MAAMC,SACrCrB,IACJ,GACF,EAcN,OAXAU,EAAAA,WAAgB,KACRT,EACAe,EAAAA,GAAGM,KAAK,aAAaJ,MAAK,KACtBH,GAAiB,IAIzBA,GAAiB,GAElB,KAGCQ,EAAAA,EAAAA,KAACC,EAAAA,MAAK,CACFC,QAAStB,EACTuB,gBAAgB,EAChBC,YAAavB,EACbwB,MAAM,QACNC,UAAU,QAAOC,SAEhBtB,GACGuB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sBAAqBF,SAAA,EAC9BnB,IACEY,EAAAA,EAAAA,KAACU,EAAAA,KAAI,CAACD,UAAU,kCAAkCE,KAAM,kBAAmBC,KAAM,OAErFZ,EAAAA,EAAAA,KAACa,EAAAA,KAAI,CAACJ,UAAU,mCAAmCK,OAAO,OAAOF,KAAK,IAAGL,SACpEnB,GACGY,EAAAA,EAAAA,KAACe,EAAAA,SAAQ,CAACC,kBAAkB,YAE5BhB,EAAAA,EAAAA,KAACe,EAAAA,SAAQ,CAACC,kBAAkB,gBAGpChB,EAAAA,EAAAA,KAACa,EAAAA,KAAI,CAACJ,UAAU,yCAAyCG,KAAK,KAAIL,SAC7DnB,QAAAA,GACGY,EAAAA,EAAAA,KAACe,EAAAA,SAAQ,CACLC,kBAAkB,8EAClBC,WAAY,EAACjB,EAAAA,EAAAA,KAAA,QAAS,SAIlCA,EAAAA,EAAAA,KAACC,EAAAA,MAAMiB,OAAM,CAACT,UAAU,8BAA6BF,UACjDP,EAAAA,EAAAA,KAACmB,EAAAA,OAAM,CAACC,QApENC,KAClBxC,GAAuB,IACvByC,EAAAA,EAAAA,mBAAkB,uBACd5C,EACAD,IAAekB,MAAK,MAChB4B,EAAAA,EAAAA,kBAAgB,GAAOC,EAAAA,EAAAA,gBAAe,EAAM,KAGhDD,EAAAA,EAAAA,kBAAgB,GAAOC,EAAAA,EAAAA,gBAAe,EAC1C,EA2DgDC,YAAU,EAACC,MAAMC,EAAAA,EAAAA,UAAS,UAAWC,SAAO,EAACC,OAAK,UAI1F7B,EAAAA,EAAAA,KAAC8B,EAAAA,QAAO,CAACC,eAAe,KAExB,G","sources":["webpack:///./App/Containers/UpdateEmailModal/update-email-modal.jsx","webpack:///./App/Containers/UpdateEmailModal/index.js"],"sourcesContent":["import React from 'react';\nimport { Button, Modal, Text, Icon, Loading } from '@deriv/components';\nimport { localize, Localize, getLanguage } from '@deriv/translations';\nimport { redirectToLogin, removeActionParam } from '@deriv/shared';\nimport { WS } from 'Services';\nimport { observer, useStore } from '@deriv/stores';\n\nconst UpdateEmailModal = observer(() => {\n    const { ui, client } = useStore();\n    const { logout: logoutClient, is_logged_in } = client;\n    const { is_update_email_modal_visible: is_visible, toggleUpdateEmailModal } = ui;\n    const new_email = client.new_email.system_email_change;\n    const verification_code = client.verification_code.system_email_change;\n\n    const [is_email_updated, setIsEmailUpdated] = React.useState(false);\n    const [update_email_error, setUpdateEmailMessage] = React.useState(null);\n\n    const onClickButton = () => {\n        toggleUpdateEmailModal(false);\n        removeActionParam('system_email_change');\n        if (is_logged_in) {\n            logoutClient().then(() => {\n                redirectToLogin(false, getLanguage(), false);\n            });\n        } else {\n            redirectToLogin(false, getLanguage(), false);\n        }\n    };\n\n    const api_request = {\n        change_email: 'update',\n        new_email,\n        verification_code,\n    };\n\n    const sendUpdateEmail = () => {\n        WS.changeEmail(api_request).then(response => {\n            setIsEmailUpdated(true);\n            if (response.error) {\n                setUpdateEmailMessage(response.error.message);\n                logoutClient();\n            }\n        });\n    };\n\n    React.useEffect(() => {\n        if (is_logged_in) {\n            WS.wait('authorize').then(() => {\n                sendUpdateEmail();\n            });\n            return;\n        }\n        sendUpdateEmail();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return (\n        <Modal\n            is_open={is_visible}\n            has_close_icon={false}\n            toggleModal={toggleUpdateEmailModal}\n            width='440px'\n            minHeight='400px'\n        >\n            {is_email_updated ? (\n                <div className='change-email-update'>\n                    {!update_email_error && (\n                        <Icon className='change-email-update__modal-icon' icon={'IcEmailVerified'} size={128} />\n                    )}\n                    <Text className='change-email-update__modal-title' weight='bold' size='s'>\n                        {update_email_error ? (\n                            <Localize i18n_default_text='Failed' />\n                        ) : (\n                            <Localize i18n_default_text='Success!' />\n                        )}\n                    </Text>\n                    <Text className='change-email-update__modal-description' size='xs'>\n                        {update_email_error ?? (\n                            <Localize\n                                i18n_default_text='Your email address has changed.<0/>Now, log in with your new email address.'\n                                components={[<br key={0} />]}\n                            />\n                        )}\n                    </Text>\n                    <Modal.Footer className='change-email-update__footer'>\n                        <Button onClick={onClickButton} has_effect text={localize('Log in')} primary large />\n                    </Modal.Footer>\n                </div>\n            ) : (\n                <Loading is_fullscreen={false} />\n            )}\n        </Modal>\n    );\n});\n\nexport default UpdateEmailModal;\n","import UpdateEmailModal from './update-email-modal.jsx';\n\nexport default UpdateEmailModal;\n"],"names":["observer","ui","client","useStore","logout","logoutClient","is_logged_in","is_update_email_modal_visible","is_visible","toggleUpdateEmailModal","new_email","system_email_change","verification_code","is_email_updated","setIsEmailUpdated","React","update_email_error","setUpdateEmailMessage","api_request","change_email","sendUpdateEmail","WS","changeEmail","then","response","error","message","wait","_jsx","Modal","is_open","has_close_icon","toggleModal","width","minHeight","children","_jsxs","className","Icon","icon","size","Text","weight","Localize","i18n_default_text","components","Footer","Button","onClick","onClickButton","removeActionParam","redirectToLogin","getLanguage","has_effect","text","localize","primary","large","Loading","is_fullscreen"],"sourceRoot":""}