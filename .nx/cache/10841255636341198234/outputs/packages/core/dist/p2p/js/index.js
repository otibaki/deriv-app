!function(e,n){"object"==typeof exports&&"object"==typeof module?module.exports=n(require("react"),require("@deriv/shared"),require("@deriv/components"),require("react-router-dom"),require("mobx"),require("@deriv-com/analytics"),require("@deriv/hooks"),require("@deriv/stores"),require("@deriv/translations"),require("mobx-react-lite"),require("react-dom"),require("prop-types"),require("react-router"),require("formik"),require("@deriv/api"),require("lodash.debounce")):"function"==typeof define&&define.amd?define(["react","@deriv/shared","@deriv/components","react-router-dom","mobx","@deriv-com/analytics","@deriv/hooks","@deriv/stores","@deriv/translations","mobx-react-lite","react-dom","prop-types","react-router","formik","@deriv/api","lodash.debounce"],n):"object"==typeof exports?exports["@deriv/p2p"]=n(require("react"),require("@deriv/shared"),require("@deriv/components"),require("react-router-dom"),require("mobx"),require("@deriv-com/analytics"),require("@deriv/hooks"),require("@deriv/stores"),require("@deriv/translations"),require("mobx-react-lite"),require("react-dom"),require("prop-types"),require("react-router"),require("formik"),require("@deriv/api"),require("lodash.debounce")):e["@deriv/p2p"]=n(e.react,e["@deriv/shared"],e["@deriv/components"],e["react-router-dom"],e.mobx,e["@deriv-com/analytics"],e["@deriv/hooks"],e["@deriv/stores"],e["@deriv/translations"],e["mobx-react-lite"],e["react-dom"],e["prop-types"],e["react-router"],e.formik,e["@deriv/api"],e["lodash.debounce"])}(self,((e,n,r,a,o,t,i,l,c,d,s,p,$,f,m,b)=>(()=>{var g,u,h={82022:(e,n,r)=>{"use strict";r.r(n),r.d(n,{default:()=>l});var a=r(9372),o=r.n(a),t=r(40935),i=r.n(t)()(o());i.push([e.id,".p2p-app-loader{height:80vh;width:100%}","",{version:3,sources:["webpack://./src/pages/index.scss"],names:[],mappings:"AAysBA,gBACI,WAAA,CACA,UAAA",sourcesContent:["/*------------------------------------*\n *  # Constants\n *------------------------------------*/\n\n/*RTL Language Mixin*/\n\n@mixin rtl {\n    [dir='rtl'] & {\n        @content;\n    }\n}\n\n/* stylelint-disable color-no-hex */\n\n/* COLOR PALETTE */\n\n/* colors */\n$color-black: #0e0e0e;\n$color-black-1: #333333;\n$color-black-3: #151717;\n$color-black-4: #1d1f20;\n$color-black-5: #242828;\n$color-black-6: #3e3e3e;\n$color-black-7: #000000;\n$color-black-8: #323738;\n$color-black-9: #5c5c5c;\n$color-black-10: #181c25;\n$color-blue: #377cfc;\n$color-blue-1: #0dc2e7;\n$color-blue-2: #2a3052;\n$color-blue-3: #0796e0;\n$color-blue-4: #0677af;\n$color-blue-5: #dfeaff;\n$color-blue-6: #92b8ff;\n$color-blue-7: #182130;\n$color-blue-8: #e6f5ff;\n$color-blue-9: #00426a;\n$color-brown: #664407;\n$color-green: #85acb0;\n$color-green-1: #4bb4b3;\n$color-green-2: #3d9494;\n$color-green-3: #00a79e;\n$color-green-4: #008079;\n$color-green-5: #4bb4b329;\n$color-green-6: #17eabd;\n$color-green-7: #e8fdf8;\n$color-green-8: #cedddf;\n$color-grey: #c2c2c2;\n$color-grey-1: #999999;\n$color-grey-2: #f2f3f4;\n$color-grey-3: #eaeced;\n$color-grey-4: #e6e9e9;\n$color-grey-5: #d6dadb;\n$color-grey-6: #d6d6d6;\n$color-grey-7: #6e6e6e;\n$color-grey-8: #d7d7d7;\n$color_grey-9: #868686;\n$color-grey-10: #919191;\n$color-grey-11: #fafafa;\n$color-grey-12: #f5f7fa;\n$color-grey-13: #2e2e2e;\n$color-grey-14: #e2e5e7;\n$color-grey-15: #f3f4f5;\n$color-orange: #ff6444;\n$color-orange-2: #ff9c13;\n$color-purple: #722fe4;\n$color-red: #ff444f;\n$color-red-1: #ec3f3f;\n$color-red-2: #cc2e3d;\n$color-red-3: #a32430;\n$color-red-4: #d33636;\n$color-red-5: #eb3e48;\n$color-red-6: #ec3f3f29;\n$color-red-7: #ffe1e3;\n$color-red-8: #661b20;\n$color-red-9: #b33037;\n$color-red-10: #ff444f;\n$color-red-11: #fce3e3;\n$color-red-12: #c40000;\n$color-violet: #4a3871;\n$color-white: #ffffff;\n$color-yellow: #ffad3a;\n$color-yellow-1: #b3760d;\n$color-yellow-2: #ffa912;\n$color-yellow-3: rgba(255, 173, 58, 0.16);\n$color-yellow-4: #fff7e6;\n$color-yellow-5: #6a4800;\n$color-yellow-6: #ffeabf;\n\n/* status colors */\n$color-status-warning: rgba(255, 173, 58, 0.16);\n$color-status-information: rgba(55, 124, 252, 0.16);\n$color-status-announcement: rgba(75, 180, 179, 0.16);\n$color-status-error: rgba(236, 63, 63, 0.16);\n$color-status-verified: rgba(0, 122, 34);\n$color-status-danger: rgba(196, 0, 0);\n\n/* alpha colors */\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\n$alpha-color-black-2: transparentize($color-black, 0.04);\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\n$alpha-color-black-7: transparentize($color-black, 0.5);\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\n$alpha-color-white-1: transparentize($color-white, 0.04);\n$alpha-color-white-2: transparentize($color-white, 0.84);\n$alpha-color-white-3: transparentize($color-white, 0.92);\n$alpha-color-white-4: transparentize($color-white, 0.3);\n$alpha-color-red-1: transparentize($color-red, 0.92);\n$alpha-color-red-2: transparentize($color-red, 0.84);\n$alpha-color-red-3: transparentize($color-red, 0.76);\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\n$alpha-color-green-3: transparentize($color-green-3, 0.84);\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\n\n/* gradient colors */\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\n\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\n\n/* Preserve legacy variables */\n/* Primary */\n\n$COLOR_BLACK: #000000;\n$COLOR_BLACK_2: #1d1f20;\n$COLOR_BLACK_3: #0e0e0e;\n$COLOR_GREEN_1: #39b19d;\n$COLOR_GREEN_2: #2d9f93;\n$COLOR_GREEN_3: #21ce99;\n$COLOR_GREEN_4: #00a79e;\n$COLOR_GREEN_5: #4bb4b3;\n$COLOR_ORANGE: #ff9933;\n$COLOR_DARK_ORANGE: #ff8802;\n$COLOR_PURPLE: #4f60ae;\n$COLOR_RED: #e31c4b;\n$COLOR_RED_2: #cc2e3d;\n$COLOR_RED_3: #ec3f3f;\n$COLOR_CORAL_RED: #ff444f;\n$COLOR_SKY_BLUE: #2196f3;\n$COLOR_WHITE: #ffffff;\n$COLOR_BLUE: #1c5ae3;\n\n// Light theme\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\n$COLOR_LIGHT_GRAY_1: #999cac;\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\n$COLOR_LIGHT_GRAY_3: #eaeced;\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\n// Dark theme\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\n$COLOR_DARK_BLUE_1: #0b0e18;\n$COLOR_DARK_BLUE_2: #101320;\n$COLOR_DARK_BLUE_3: #191c31;\n$COLOR_DARK_BLUE_4: #202641;\n$COLOR_DARK_BLUE_5: #2a3052;\n$COLOR_DARK_BLUE_6: #555975;\n$COLOR_DARK_BLUE_7: #7f8397;\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\n$COLOR_DARK_GRAY_1: #282a37;\n$COLOR_DARK_GRAY_2: #303342;\n$COLOR_DARK_GRAY_3: #555975;\n$COLOR_DARK_GRAY_4: #999999;\n/* stylelint-enable color-no-hex */\n\n$BORDER_RADIUS: 4px;\n$BORDER_RADIUS_2: 8px;\n\n$MAX_CONTAINER_WIDTH: 1440px;\n\n$POSITIONS_DRAWER_WIDTH: 240px;\n$POSITIONS_DRAWER_MARGIN: 8px;\n\n$HEADER_HEIGHT: 48px;\n$FOOTER_HEIGHT: 36px;\n\n$MOBILE_HEADER_HEIGHT: 40px;\n$MOBILE_HEADER_DTRADER_V2_HEIGHT: 40px;\n$MOBILE_HEADER_DTRADER_V2_WITH_BANNER_HEIGHT: 128px;\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\n\n$SIDEBAR_WIDTH: 240px;\n\n/* Wallet gradient background */\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\n\n/* App Cards gradient background */\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\n\n/* Wallets */\n$ready-banner-bg-color: #e2f3f3;\n$ready-banner-tick-bg-color: #4ab4b3;\n$wallet-demo-bg-color: #fff8f9;\n$wallet-dark-demo-bg-color: #140506;\n$wallet-demo-divider-color: #fff0f1;\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\n\n/*------------------------------------*\n *  # SASS Mixins and Functions\n *------------------------------------*/\n\n/*\n * SASS interpolation\n */\n// Requires the calc-interpolation function which can also be used independently\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\n    $b: $min-value - $a * $min-screen;\n\n    $sign: '+';\n    @if ($b < 0) {\n        $sign: '-';\n        $b: abs($b);\n    }\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\n}\n\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\n    & {\n        @each $property in $properties {\n            #{$property}: $min-value;\n        }\n        @media screen and (min-width: $min-screen) {\n            @each $property in $properties {\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\n            }\n        }\n        @media screen and (min-width: $max-screen) {\n            @each $property in $properties {\n                #{$property}: $max-value;\n            }\n        }\n    }\n}\n\n/*\n * PX to EM\n * @param $px - px value to be converted\n * @param $base - base font size (in `em`)\n * Note: 'em' values are calculate based on the element font-size\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\n * Usage example:\n    padding: em(16px, 1.6em); // font-size in 'em'\n */\n@function em($px, $base: $BASE_FONT_SIZE) {\n    $list: ();\n    @if length($px) != 1 {\n        @for $i from 1 through length($px) {\n            $val_em: (nth($px, $i) / $base) * 1em;\n            $list: append($list, $val_em, space);\n        }\n        @return $list;\n    } @else {\n        @return ($px / $base) * 1em;\n    }\n}\n\n/*\n * Set property by passing a property name, and values.\n * @param $property name - padding, margin etc.\n * @param $values        - values in `px` (space separated for multiple values)\n * @param $font-size     - base font-size in `em`\n * Usage example:\n   @include toEm(padding, 8px 16px 8px, 1.6em);\n */\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\n    #{$property}: em($values, $font-size);\n}\n\n/*\n * Generate typefaces key-value pair of variable name and config\n * Example:\n   --paragraph-center-bold-black: (14px, center, bold, black)\n */\n@function generate-typefaces() {\n    $typeface_list: ();\n    @each $fontsize_name, $size in $FONT_SIZES {\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\n            @each $color_name, $color in $FONT_COLORS {\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\n                    $val: ($size, $text_align, $weight, $color);\n                    $typeface: (\n                        $key: $val,\n                    );\n                    $typeface_list: map-merge($typeface_list, $typeface);\n                }\n            }\n        }\n    }\n    // @debug $typeface_list; /* uncomment to debug */\n    @return $typeface_list;\n}\n\n/*\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\n * Usage example:\n   @include setTypeface(16px, bold, black, uppercase);\n */\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\n    @if $size {\n        font-size: $size;\n    }\n    @if $colour {\n        color: $colour;\n    }\n    @if $weight {\n        font-weight: $weight;\n    }\n    @if $tt {\n        text-transform: $tt;\n    }\n    @if $align {\n        text-align: $align;\n    }\n    @if $size == 1.6rem {\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\n    } @else if $size == 1.4rem {\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\n    } @else if $size == 1.2rem {\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\n    } @else if $size == 1rem {\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\n    } @else {\n        line-height: unset;\n    }\n}\n\n/*\n * Set typefaces by passing a typeface variable name\n * @param $var   - typeface variable\n * @param $tt    - text-transform property\n * @param $align - text-align property\n * Usage example:\n   @include typeface(--paragraph-bold-black, uppercase, center);\n */\n@mixin typeface($var, $tt: none) {\n    $typeface_config: map-get(\n        $map: $TYPEFACES_LIST,\n        $key: $var,\n    );\n\n    $size: nth($typeface_config, 1); // font-size\n    $align: nth($typeface_config, 2); // text-align\n    $weight: nth($typeface_config, 3); // font-weight\n    $color: nth($typeface_config, 4); // color\n    @include setTypeface($size, $align, $weight, $color, $tt);\n}\n\n/*\n * Range Slider Thumb styling is set here\n */\n@mixin thumbStyle() {\n    appearance: none;\n    width: 1em;\n    height: 1em;\n    border-radius: 100%;\n    border: 0;\n    cursor: pointer;\n    transition: box-shadow 0.2s;\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\n\n    &:hover {\n        box-shadow: 0 0 0 0.5em var(--state-hover);\n    }\n}\n\n/*\n * SVG icons colors\n */\n@mixin colorIcon($colors...) {\n    @for $i from 1 through length($colors) {\n        /* postcss-bem-linter: ignore */\n        .color#{$i}-fill {\n            fill: nth($colors, $i);\n        }\n        /* postcss-bem-linter: ignore */\n        .color#{$i}-stroke {\n            stroke: nth($colors, $i);\n        }\n    }\n}\n\n/*\n * Bar Spinner Animation\n * @param $count    - number of bars\n * @param $duration - duration of animation\n * @param $phase    - each bar phase change delay\n * Usage example:\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\n */\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\n    animation: sk-stretchdelay $duration infinite ease-in-out;\n\n    @for $i from 1 through $count {\n        &--#{$i} {\n            animation-delay: -$duration + (($i - 1) * $phase);\n        }\n    }\n}\n\n/*\n * Tooltip colors\n * @param $color - color property\n * Usage example:\n   @include tooltipColor($COLOR_RED);\n */\n@mixin tooltipColor($color) {\n    &:before {\n        background: $color;\n    }\n    &:after,\n    &[data-tooltip-pos='top']:after {\n        border-top-color: $color;\n    }\n    &[data-tooltip-pos='right']:after {\n        border-top-color: transparent;\n        border-right-color: $color;\n    }\n    &[data-tooltip-pos='left']:after {\n        border-top-color: transparent;\n        border-left-color: $color;\n    }\n    &[data-tooltip-pos='bottom']:after {\n        border-top-color: transparent;\n        border-bottom-color: $color;\n    }\n}\n\n/*\n * Convert Tooltip colors\n * @param $color - css color property\n * Usage example:\n   @include convertTooltipColor(var(--status-default));\n */\n@mixin convertTooltipColor($color) {\n    &:before {\n        background: $color;\n    }\n    &:after,\n    &[data-tooltip-pos='top']:after {\n        border-top-color: $color;\n    }\n    &[data-tooltip-pos='right']:after {\n        border-top-color: transparent;\n        border-right-color: $color;\n    }\n    &[data-tooltip-pos='left']:after {\n        border-top-color: transparent;\n        border-left-color: $color;\n    }\n    &[data-tooltip-pos='bottom']:after {\n        border-top-color: transparent;\n        border-bottom-color: $color;\n    }\n}\n\n/*\n    Constants\n*/\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\n$BASE_FONT_SIZE: 10px;\n\n/*\n    Variables\n*/\n$FONT_SIZES: (\n    'xheading' 3.2rem,\n    'heading' 3rem,\n    'large' 2.8rem,\n    'title' 1.6rem,\n    'paragraph' 1.4rem,\n    'small' 1.2rem,\n    'xsmall' 1rem,\n    'xxsmall' 0.8rem,\n    'xxxsmall' 0.6rem\n);\n\n$FONT_COLORS: (\n    'active' var(--text-colored-background),\n    'prominent' var(--text-prominent),\n    'black' var(--text-general),\n    'grey' var(--text-less-prominent),\n    'disabled' var(--text-disabled),\n    'green' var(--text-profit-success),\n    'red' var(--text-loss-danger)\n);\n\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\n\n$TEXT_ALIGN: ('center' center, 'left' start, 'right' end);\n\n$LINEHEIGHTS: (\n    'large': 1.75,\n    'medium': 1.5,\n    'small': 1.25,\n    'xsmall': 1.4,\n);\n\n/*\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\n    Variables name example: --title-center-semibold-red\n */\n$TYPEFACES_LIST: generate-typefaces();\n\n/*\n    to use styles without modifier class on .inline-icon\n    use @extend\n\n    e.g. style icon on parent hover:\n        a:hover .inline-icon {\n            @extend %inline-icon-active;\n        }\n*/\n\n%inline-icon {\n    @include colorIcon(var(--text-general), none);\n\n    &.active,\n    &-active {\n        @include colorIcon(var(--text-prominent), none);\n    }\n    &.disabled,\n    &-disabled {\n        @include colorIcon(var(--text-disabled), none);\n    }\n    &.white,\n    &-white {\n        @include colorIcon(var(--text-prominent));\n    }\n    &.border_hover_color,\n    &-border_hover_color {\n        @include colorIcon(var(--text-prominent));\n    }\n    &.secondary,\n    &-secondary {\n        @include colorIcon(var(--text-less-prominent));\n    }\n}\n\n/**\n * Define Breakpoints here.\n */\n$mobile-width: 320px;\n$tablet-width: 768px;\n$desktop-width: 1024px;\n\n@mixin tablet {\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\n        @content;\n    }\n}\n\n@mixin desktop {\n    @media (min-width: #{$desktop-width}) {\n        @content;\n    }\n}\n\n@mixin tablet-down {\n    @media (max-width: #{$tablet-width}) {\n        @content;\n    }\n}\n\n@mixin tablet-up {\n    @media (min-width: #{$tablet-width}) {\n        @content;\n    }\n}\n\n@mixin mobile-up {\n    @media (min-width: #{$mobile-width}) {\n        @content;\n    }\n}\n\n@mixin mobile {\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\n        @content;\n    }\n}\n\n@mixin mobile-landscape {\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\n        @content;\n    }\n}\n\n@mixin touch-device {\n    // add css interaction media query to detect touch devices\n    // refer to: https://caniuse.com/#feat=css-media-interaction\n    @media (pointer: coarse) {\n        @content;\n    }\n}\n\n@mixin mobile-tablet-mix {\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\n        @content;\n    }\n}\n\n/** Need to add new breakpoints for mixins */\n$max-mobile-width: 600px;\n$min-desktop-width: 1280px;\n\n@mixin mobile-screen {\n    @media (max-width: #{$max-mobile-width}) {\n        @content;\n    }\n}\n\n@mixin tablet-screen {\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) {\n        @content;\n    }\n}\n\n@mixin desktop-screen {\n    @media (min-width: #{$min-desktop-width}) {\n        @content;\n    }\n}\n\n@mixin mobile-or-tablet-screen {\n    @media (max-width: #{$min-desktop-width - 1}) {\n        @content;\n    }\n}\n\n@mixin tablet-or-desktop-screen {\n    @media (min-width: #{$max-mobile-width + 1}) {\n        @content;\n    }\n}\n\n@mixin tablet-portrait-screen {\n    @media (min-width: #{$max-mobile-width + 1}) and (max-width: #{$min-desktop-width - 1}) and (orientation: portrait) {\n        @content;\n    }\n}\n\n@mixin mobile-or-tablet-landscape {\n    @media only screen and (max-width: #{$min-desktop-width - 1}) and (orientation: landscape) {\n        @content;\n    }\n}\n\n.p2p-app-loader {\n    height: 80vh;\n    width: 100%;\n}\n"],sourceRoot:""}]);const l=i},40935:e=>{"use strict";e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var r=e(n);return n[2]?"@media ".concat(n[2]," {").concat(r,"}"):r})).join("")},n.i=function(e,r,a){"string"==typeof e&&(e=[[null,e,""]]);var o={};if(a)for(var t=0;t<this.length;t++){var i=this[t][0];null!=i&&(o[i]=!0)}for(var l=0;l<e.length;l++){var c=[].concat(e[l]);a&&o[c[0]]||(r&&(c[2]?c[2]="".concat(r," and ").concat(c[2]):c[2]=r),n.push(c))}},n}},9372:e=>{"use strict";function n(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var r=e&&("undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"]);if(null!=r){var a,o,t=[],i=!0,l=!1;try{for(r=r.call(e);!(i=(a=r.next()).done)&&(t.push(a.value),!n||t.length!==n);i=!0);}catch(e){l=!0,o=e}finally{try{i||null==r.return||r.return()}finally{if(l)throw o}}return t}}(e,n)||function(e,n){if(e){if("string"==typeof e)return r(e,n);var a=Object.prototype.toString.call(e).slice(8,-1);return"Object"===a&&e.constructor&&(a=e.constructor.name),"Map"===a||"Set"===a?Array.from(e):"Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a)?r(e,n):void 0}}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function r(e,n){(null==n||n>e.length)&&(n=e.length);for(var r=0,a=new Array(n);r<n;r++)a[r]=e[r];return a}e.exports=function(e){var r=n(e,4),a=r[1],o=r[3];if(!o)return a;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(o)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),l="/*# ".concat(i," */"),c=o.sources.map((function(e){return"/*# sourceURL=".concat(o.sourceRoot||"").concat(e," */")}));return[a].concat(c).concat([l]).join("\n")}return[a].join("\n")}},40132:(e,n,r)=>{var a=r(72591),o=r(82022);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.id,o,""]]);a(o,{insert:"head",singleton:!1}),e.exports=o.locals||{}},72591:(e,n,r)=>{"use strict";var a,o=function(){var e={};return function(n){if(void 0===e[n]){var r=document.querySelector(n);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(e){r=null}e[n]=r}return e[n]}}(),t=[];function i(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function l(e,n){for(var r={},a=[],o=0;o<e.length;o++){var l=e[o],c=n.base?l[0]+n.base:l[0],d=r[c]||0,s="".concat(c," ").concat(d);r[c]=d+1;var p=i(s),$={css:l[1],media:l[2],sourceMap:l[3]};-1!==p?(t[p].references++,t[p].updater($)):t.push({identifier:s,updater:b($,n),references:1}),a.push(s)}return a}function c(e){var n=document.createElement("style"),a=e.attributes||{};if(void 0===a.nonce){var t=r.nc;t&&(a.nonce=t)}if(Object.keys(a).forEach((function(e){n.setAttribute(e,a[e])})),"function"==typeof e.insert)e.insert(n);else{var i=o(e.insert||"head");if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(n)}return n}var d,s=(d=[],function(e,n){return d[e]=n,d.filter(Boolean).join("\n")});function p(e,n,r,a){var o=r?"":a.media?"@media ".concat(a.media," {").concat(a.css,"}"):a.css;if(e.styleSheet)e.styleSheet.cssText=s(n,o);else{var t=document.createTextNode(o),i=e.childNodes;i[n]&&e.removeChild(i[n]),i.length?e.insertBefore(t,i[n]):e.appendChild(t)}}function $(e,n,r){var a=r.css,o=r.media,t=r.sourceMap;if(o?e.setAttribute("media",o):e.removeAttribute("media"),t&&"undefined"!=typeof btoa&&(a+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(t))))," */")),e.styleSheet)e.styleSheet.cssText=a;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(a))}}var f=null,m=0;function b(e,n){var r,a,o;if(n.singleton){var t=m++;r=f||(f=c(n)),a=p.bind(null,r,t,!1),o=p.bind(null,r,t,!0)}else r=c(n),a=$.bind(null,r,n),o=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(r)};return a(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap)return;a(e=n)}else o()}}e.exports=function(e,n){(n=n||{}).singleton||"boolean"==typeof n.singleton||(n.singleton=(void 0===a&&(a=Boolean(window&&document&&document.all&&!window.atob)),a));var r=l(e=e||[],n);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var a=0;a<r.length;a++){var o=i(r[a]);t[o].references--}for(var c=l(e,n),d=0;d<r.length;d++){var s=i(r[d]);0===t[s].references&&(t[s].updater(),t.splice(s,1))}r=c}}}},76228:(e,n,r)=>{"use strict";r.d(n,{default:()=>i});var a=r(39155),o=r(36464),t=r(53877);r(40132);const i=(0,o.makeLazyLoader)((function(){return(0,o.moduleLoader)((function(){return Promise.all([r.e(8976),r.e(9212),r.e(1808),r.e(4196),r.e(2283),r.e(5879)]).then(r.bind(r,89579))}))}),(function(){return a.createElement(t.Loading,{className:"p2p-app-loader"})}))()},48191:e=>{"use strict";e.exports=t},82707:e=>{"use strict";e.exports=m},53877:e=>{"use strict";e.exports=r},28767:e=>{"use strict";e.exports=i},36464:e=>{"use strict";e.exports=n},55119:e=>{"use strict";e.exports=l},32641:e=>{"use strict";e.exports=c},27106:e=>{"use strict";e.exports=f},73706:e=>{"use strict";e.exports=b},85314:e=>{"use strict";e.exports=o},45299:e=>{"use strict";e.exports=d},81949:e=>{"use strict";e.exports=p},39155:n=>{"use strict";n.exports=e},69514:e=>{"use strict";e.exports=s},12707:e=>{"use strict";e.exports=$},4442:e=>{"use strict";e.exports=a}},_={};function x(e){var n=_[e];if(void 0!==n)return n.exports;var r=_[e]={id:e,loaded:!1,exports:{}};return h[e].call(r.exports,r,r.exports,x),r.loaded=!0,r.exports}x.m=h,x.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return x.d(n,{a:n}),n},x.d=(e,n)=>{for(var r in n)x.o(n,r)&&!x.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},x.f={},x.e=e=>Promise.all(Object.keys(x.f).reduce(((n,r)=>(x.f[r](e,n),n)),[])),x.u=e=>"p2p/js/p2p."+({102:"edit-ad-cancel-modal",247:"ad-create-edit-error-modal",264:"daily-limit-modal",738:"my-profile-balance-modal",765:"filter-modal",775:"ad-created-modal",877:"block-user-filter-modal",1035:"order-details-cancel-modal",1627:"ad-error-tooltip-modal",1808:"p2p-app-e96e9bea",2070:"delete-payment-method-error-modal",2283:"p2p-app-ef7d455c",2389:"404",2583:"email-link-verified-modal",2848:"business-hour-modal",3234:"buy-sell-modal",3258:"block-user-modal",3423:"copy-advert-modal",3432:"my-ads-delete-modal",3848:"cancel-add-payment-method-modal",3858:"share-my-ads-modal",3863:"ad-cancel-modal",4128:"currency-selector-modal",4196:"p2p-app-7c36387c",4732:"recommended-modal",4928:"rating-modal",5156:"add-payment-method-error-modal",5173:"my-ads-delete-error-modal",5291:"delete-payment-method-confirmation-modal",5379:"order-time-tooltip-modal",5791:"error-modal",5879:"p2p-app-389e2277",6017:"invalid-verification-link-modal",6213:"two-month-picker",6323:"my-ads-floating-rate-switch-modal",6975:"preferred-countries-modal",7134:"email-link-expired-modal",7803:"nickname-modal",7807:"cancel-edit-payment-method-modal",8093:"loading-modal",8112:"confirm-delete-payment-method-modal",8175:"email-verification-modal",8548:"ad-visibility-error-modal",8652:"leave-page-modal",8939:"order-details-confirm-modal",9090:"market-rate-change-error-modal",9212:"p2p-app-d67df2f3",9558:"create-ad-add-payment-method-modal",9878:"quick-add-modal"}[e]||e)+"."+{102:"1ce9aed3c39e286dab92",247:"73d9be0e9d5ef0f53aee",264:"57be22313cb9cb23a1cc",738:"10ec15c1d4a3318120f0",765:"273c0c9fd2ba1395ddca",775:"755bdde16246cc91fbe3",877:"b698609c8799bd6b8f66",1035:"6b94d712a61013b5dead",1627:"4003b732a134287f7dae",1808:"05ef6dc77d7e028bdc41",2070:"44a9eb875a4d3beacf5f",2121:"7a6ff18ee0c3b2465363",2283:"3a637c8ebccf0044deb8",2308:"24903c01725e0da670a2",2389:"17820614720ed885dbbd",2583:"bcb1f0e7f475c9b9bfd0",2721:"fe65d8024cf1cd6c5d71",2848:"37fb24877830c63fc746",3234:"0404a743e9335b413bea",3258:"e233d379212213991336",3423:"5a0c43a15dcb6699b25b",3432:"6652666cc023e49b3c93",3848:"3f7ef808867ed3a1dac6",3858:"9f0a2ce2a38d10f2656d",3863:"50feb56e8e1ff9b8e4b9",4128:"95f55ddea44c1ee8c705",4196:"5b12b48c89e884e575dd",4732:"1175681f100cd042d55f",4928:"7e964ade7fd4ed381812",5156:"40ac5af5712a765d47e7",5173:"0308d46ee9b6d9a8573c",5291:"68606a044b8f0862be42",5379:"bc1305e759a7f10b46d2",5749:"8805afb818b476cece2f",5751:"6298efa9b32602d96b2f",5791:"cadd7d07690bdc4a246c",5879:"3d548454909c2452f78b",6017:"e23e32e49804d5be821d",6213:"29738ea13115126feb6d",6323:"0a9a02c58fa74731f19c",6499:"8c11434da5cd01088764",6975:"842ea30b2ee50ca90f7b",7134:"f57daa1c04435724d4ef",7803:"8a23f9d8005d234dc0ff",7807:"1290a6943842f98baf7e",8093:"922a25bbc251a38cdfcf",8112:"dfe53e0ee72d373d084c",8175:"fe4304a35202be9dadca",8548:"69da152a0632a96313d4",8652:"cb624df4d9594a14959d",8939:"35af5cc21ed26b1e6c35",8976:"eb1ead0abdba1db039dc",9090:"cbfe08ab4eba7bf24509",9212:"9c3ac091192f38f04f5b",9558:"582abe7980374d4d673a",9878:"a65b81354f1b366c7759"}[e]+".js",x.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),g={},u="@deriv/p2p:",x.l=(e,n,r,a)=>{if(g[e])g[e].push(n);else{var o,t;if(void 0!==r)for(var i=document.getElementsByTagName("script"),l=0;l<i.length;l++){var c=i[l];if(c.getAttribute("src")==e||c.getAttribute("data-webpack")==u+r){o=c;break}}o||(t=!0,(o=document.createElement("script")).charset="utf-8",o.timeout=120,x.nc&&o.setAttribute("nonce",x.nc),o.setAttribute("data-webpack",u+r),o.src=e),g[e]=[n];var d=(n,r)=>{o.onerror=o.onload=null,clearTimeout(s);var a=g[e];if(delete g[e],o.parentNode&&o.parentNode.removeChild(o),a&&a.forEach((e=>e(r))),n)return n(r)},s=setTimeout(d.bind(null,void 0,{type:"timeout",target:o}),12e4);o.onerror=d.bind(null,o.onerror),o.onload=d.bind(null,o.onload),t&&document.head.appendChild(o)}},x.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},x.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),x.p="/",(()=>{var e={3057:0};x.f.j=(n,r)=>{var a=x.o(e,n)?e[n]:void 0;if(0!==a)if(a)r.push(a[2]);else{var o=new Promise(((r,o)=>a=e[n]=[r,o]));r.push(a[2]=o);var t=x.p+x.u(n),i=new Error;x.l(t,(r=>{if(x.o(e,n)&&(0!==(a=e[n])&&(e[n]=void 0),a)){var o=r&&("load"===r.type?"missing":r.type),t=r&&r.target&&r.target.src;i.message="Loading chunk "+n+" failed.\n("+o+": "+t+")",i.name="ChunkLoadError",i.type=o,i.request=t,a[1](i)}}),"chunk-"+n,n)}};var n=(n,r)=>{var a,o,[t,i,l]=r,c=0;if(t.some((n=>0!==e[n]))){for(a in i)x.o(i,a)&&(x.m[a]=i[a]);l&&l(x)}for(n&&n(r);c<t.length;c++)o=t[c],x.o(e,o)&&e[o]&&e[o][0](),e[o]=0},r=self.webpackChunk_deriv_p2p=self.webpackChunk_deriv_p2p||[];r.forEach(n.bind(null,0)),r.push=n.bind(null,r.push.bind(r))})(),x.nc=void 0;var v=x(76228);return v.default})()));