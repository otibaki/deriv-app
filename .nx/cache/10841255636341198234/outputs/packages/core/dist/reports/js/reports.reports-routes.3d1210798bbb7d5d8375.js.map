{"version":3,"file":"reports/js/reports.reports-routes.3d1210798bbb7d5d8375.js","mappings":"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","sources":["webpack://@deriv/reports/../../node_modules/@deriv-com/ui/dist/_commonjsHelpers-BkfeUUK-.js","webpack://@deriv/reports/../../node_modules/@deriv-com/ui/dist/index-EY1gwl5O.js","webpack://@deriv/reports/../../node_modules/@deriv-com/ui/dist/hooks/useDevice.js","webpack://@deriv/reports/./src/Containers/progress-slider-stream.tsx","webpack://@deriv/reports/./src/Helpers/profit-loss.ts","webpack://@deriv/reports/./src/Components/indicative-cell.tsx","webpack://@deriv/reports/./src/Components/market-symbol-icon-row.tsx","webpack://@deriv/reports/./src/Components/profit-loss-cell.tsx","webpack://@deriv/reports/./src/Components/currency-wrapper.tsx","webpack://@deriv/reports/./src/Constants/data-table-constants.tsx","webpack://@deriv/reports/../../node_modules/react-content-loader/dist/react-content-loader.es.js","webpack://@deriv/reports/./src/Components/Elements/ContentLoader/reports-table-row.tsx","webpack://@deriv/reports/./src/Components/empty-trade-history-message.tsx","webpack://@deriv/reports/./src/_common/components/loading.tsx","webpack://@deriv/reports/./src/Components/placeholder-component.tsx","webpack://@deriv/reports/./src/Containers/open-positions-table.tsx","webpack://@deriv/reports/./src/Containers/mobile-row-renderer.tsx","webpack://@deriv/reports/./src/Containers/open-positions.tsx","webpack://@deriv/reports/./src/Components/Form/CompositeCalendar/composite-calendar-mobile.tsx","webpack://@deriv/reports/./src/Components/Form/CompositeCalendar/list-item.tsx","webpack://@deriv/reports/./src/Components/Form/CompositeCalendar/side-list.tsx","webpack://@deriv/reports/./src/Components/Form/CompositeCalendar/calendar-icon.tsx","webpack://@deriv/reports/./src/Components/Form/CompositeCalendar/composite-calendar.tsx","webpack://@deriv/reports/./src/Components/Form/CompositeCalendar/index.ts","webpack://@deriv/reports/./src/Components/reports-meta.tsx","webpack://@deriv/reports/./src/Containers/profit-table.tsx","webpack://@deriv/reports/./src/Components/filter-component.tsx","webpack://@deriv/reports/./src/Containers/statement.tsx","webpack://@deriv/reports/./src/Containers/reports.tsx","webpack://@deriv/reports/./src/Containers/index.ts","webpack://@deriv/reports/../../node_modules/classnames/index.js"],"sourcesContent":["var u = typeof globalThis < \"u\" ? globalThis : typeof window < \"u\" ? window : typeof global < \"u\" ? global : typeof self < \"u\" ? self : {};\nfunction f(e) {\n  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, \"default\") ? e.default : e;\n}\nfunction l(e) {\n  if (e.__esModule) return e;\n  var r = e.default;\n  if (typeof r == \"function\") {\n    var t = function o() {\n      return this instanceof o ? Reflect.construct(r, arguments, this.constructor) : r.apply(this, arguments);\n    };\n    t.prototype = r.prototype;\n  } else t = {};\n  return Object.defineProperty(t, \"__esModule\", { value: !0 }), Object.keys(e).forEach(function(o) {\n    var n = Object.getOwnPropertyDescriptor(e, o);\n    Object.defineProperty(t, o, n.get ? n : {\n      enumerable: !0,\n      get: function() {\n        return e[o];\n      }\n    });\n  }), t;\n}\nexport {\n  l as a,\n  u as c,\n  f as g\n};\n","import { useState as d, useLayoutEffect as m, useEffect as u, useRef as l } from \"react\";\nimport { c as a } from \"./_commonjsHelpers-BkfeUUK-.js\";\nvar v = typeof a == \"object\" && a && a.Object === Object && a, E = typeof self == \"object\" && self && self.Object === Object && self;\nv || E || Function(\"return this\")();\nvar f = typeof window < \"u\" ? m : u;\nfunction L(t, s, o, i) {\n  const c = l(s);\n  f(() => {\n    c.current = s;\n  }, [s]), u(() => {\n    const n = window;\n    if (!(n && n.addEventListener))\n      return;\n    const r = (e) => {\n      c.current(e);\n    };\n    return n.addEventListener(t, r, i), () => {\n      n.removeEventListener(t, r, i);\n    };\n  }, [t, o, i]);\n}\nvar h = typeof window > \"u\";\nfunction O(t, {\n  defaultValue: s = !1,\n  initializeWithValue: o = !0\n} = {}) {\n  const i = (e) => h ? s : window.matchMedia(e).matches, [c, n] = d(() => o ? i(t) : s);\n  function r() {\n    n(i(t));\n  }\n  return f(() => {\n    const e = window.matchMedia(t);\n    return r(), e.addListener ? e.addListener(r) : e.addEventListener(\"change\", r), () => {\n      e.removeListener ? e.removeListener(r) : e.removeEventListener(\"change\", r);\n    };\n  }, [t]), c;\n}\nfunction g(t, s, o = \"mousedown\", i = {}) {\n  L(\n    o,\n    (c) => {\n      const n = c.target;\n      if (!n || !n.isConnected)\n        return;\n      (Array.isArray(t) ? t.filter((e) => !!e.current).every((e) => e.current && !e.current.contains(n)) : t.current && !t.current.contains(n)) && s(c);\n    },\n    void 0,\n    i\n  );\n}\nexport {\n  g as a,\n  O as u\n};\n","import { u as t } from \"../index-EY1gwl5O.js\";\nconst d = () => {\n  const i = t(\"(min-width: 1280px)\"), a = t(\"(max-width: 600px)\"), n = t(\n    \"(min-width: 601px) and (max-width: 1279px)\"\n  ), e = t(\n    \"(min-width: 601px) and (max-width: 1279px) and (orientation: portrait)\"\n  ), o = t(\n    \"(max-width: 1279px) and (orientation: landscape)\"\n  );\n  return {\n    /** returns Larger screen tablets [min-width: 1280px] */\n    isDesktop: i,\n    /**  returns Smaller screen tablets [max-width: 600px] */\n    isMobile: a,\n    /** returns Larger screen phones and smaller screen desktop [min-width: 601px and max-width: 1279px] */\n    isTablet: n,\n    /** returns tablet screen with portrait orientation [min-width: 601px and max-width: 1279px and orientation: portrait] */\n    isTabletPortrait: e,\n    /** returns mobile or medium screens in landscape orientation [max-width: 1279px and orientation: landscape] */\n    isMobileOrTabletLandscape: o\n  };\n};\nexport {\n  d as useDevice\n};\n","import React from 'react';\nimport { ProgressSlider } from '@deriv/components';\nimport { getCurrentTick, TContractInfo, getCardLabels } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\n\ntype TProgressSliderStream = {\n    contract_info: Required<TContractInfo>;\n};\n\nconst ProgressSliderStream = observer(({ contract_info }: TProgressSliderStream) => {\n    const { common, portfolio } = useStore();\n    const { server_time } = common;\n    const { is_loading } = portfolio;\n\n    if (!contract_info) {\n        return <div />;\n    }\n    const current_tick = contract_info.tick_count && getCurrentTick(contract_info);\n\n    if (!server_time) return null;\n\n    return (\n        <ProgressSlider\n            current_tick={current_tick}\n            expiry_time={contract_info.date_expiry}\n            getCardLabels={getCardLabels}\n            is_loading={is_loading}\n            server_time={server_time}\n            start_time={contract_info.date_start}\n            ticks_count={contract_info.tick_count}\n        />\n    );\n});\n\nexport default ProgressSliderStream;\n","export const getProfitOrLoss = (value: string) => (+value.replace(/,/g, '') >= 0 ? 'profit' : 'loss');\n","import React from 'react';\nimport classNames from 'classnames';\nimport { ArrowIndicator, Money, ContractCard } from '@deriv/components';\nimport { getCardLabels, TContractInfo } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { useDevice } from '@deriv-com/ui';\n\ntype TIndicativeCell = {\n    amount: number;\n    contract_info: TContractInfo;\n    currency: string;\n    is_footer: boolean;\n    is_sell_requested: boolean;\n    profit: string;\n    status?: string;\n};\n\nconst IndicativeCell = observer((props: TIndicativeCell) => {\n    const { amount, contract_info, currency, is_footer, is_sell_requested, profit } = props;\n    const { portfolio } = useStore();\n    const { isDesktop } = useDevice();\n    const { onClickSell } = portfolio;\n\n    return (\n        <div className='open-positions__indicative'>\n            <div className='open-positions__indicative--amount'>\n                <div\n                    className={classNames({\n                        'dc-contract-card--profit': Number(profit) > 0,\n                        'dc-contract-card--loss': Number(profit) < 0,\n                    })}\n                    data-testid='dt_amount_container'\n                >\n                    <Money amount={Math.abs(amount)} currency={currency} />\n                </div>\n                <ArrowIndicator value={amount} data-testid='dt_arrow_indicator' />\n            </div>\n            {!is_footer && isDesktop && (\n                <ContractCard.Sell\n                    contract_info={contract_info}\n                    is_sell_requested={is_sell_requested}\n                    getCardLabels={getCardLabels}\n                    onClickSell={contract_id => {\n                        if (contract_id) onClickSell(contract_id);\n                    }}\n                />\n            )}\n        </div>\n    );\n});\n\nexport default IndicativeCell;\n","import React from 'react';\nimport { TContractInfo, extractInfoFromShortcode, getMarketName, getTradeTypeName, isHighLow } from '@deriv/shared';\nimport { Icon, Popover, IconTradeTypes } from '@deriv/components';\nimport classNames from 'classnames';\nimport { formatStatementTransaction } from 'Stores/Modules/Statement/Helpers/format-response';\n\ntype TStatementData = ReturnType<typeof formatStatementTransaction>;\n\ntype TMarketSymbolIconRow = {\n    has_full_contract_title?: boolean;\n    icon?: string | null;\n    payload: Partial<TContractInfo | TStatementData>;\n    should_show_multiplier?: boolean;\n    should_show_accumulator?: boolean;\n};\n\nconst MarketSymbolIconRow = ({\n    has_full_contract_title,\n    icon,\n    payload,\n    should_show_accumulator = true,\n    should_show_multiplier = true,\n}: TMarketSymbolIconRow) => {\n    const should_show_category_icon = typeof (payload as TContractInfo).shortcode === 'string';\n    const info_from_shortcode = extractInfoFromShortcode((payload as TContractInfo).shortcode ?? '');\n    const is_high_low = isHighLow({ shortcode_info: info_from_shortcode });\n    const category_label = getTradeTypeName(info_from_shortcode.category, {\n        isHighLow: is_high_low,\n        showButtonName: has_full_contract_title,\n    });\n    const hover_message = `${getTradeTypeName(info_from_shortcode.category, {\n        isHighLow: is_high_low,\n        showMainTitle: true,\n    })} ${category_label}`.trim();\n\n    if (should_show_category_icon && info_from_shortcode) {\n        return (\n            <div\n                className={classNames('market-symbol-icon', {\n                    'market-symbol-icon__full-title': has_full_contract_title,\n                })}\n            >\n                <div className='market-symbol-icon-name'>\n                    <Popover\n                        classNameTarget='market-symbol-icon__popover'\n                        classNameBubble='market-symbol-icon__popover-bubble'\n                        alignment='top'\n                        message={getMarketName(info_from_shortcode.underlying as string)}\n                        is_bubble_hover_enabled\n                        disable_target_icon\n                    >\n                        <Icon\n                            icon={\n                                info_from_shortcode.underlying\n                                    ? `IcUnderlying${info_from_shortcode.underlying}`\n                                    : 'IcUnknown'\n                            }\n                            size={32}\n                        />\n                    </Popover>\n                    {has_full_contract_title && (payload as TContractInfo).display_name}\n                </div>\n\n                <div className='market-symbol-icon-category'>\n                    <Popover\n                        classNameTarget='category-type-icon__popover'\n                        classNameBubble='category-type-icon__popover-bubble'\n                        alignment='top'\n                        message={hover_message}\n                        is_bubble_hover_enabled\n                        disable_target_icon\n                    >\n                        <IconTradeTypes\n                            type={\n                                is_high_low\n                                    ? `${(info_from_shortcode.category as string).toLowerCase()}_barrier`\n                                    : (info_from_shortcode.category as string).toLowerCase()\n                            }\n                            color='brand'\n                        />\n                    </Popover>\n                    {has_full_contract_title && category_label}\n                </div>\n                {should_show_multiplier && info_from_shortcode.multiplier && (\n                    <div className='market-symbol-icon__multiplier'>x{info_from_shortcode.multiplier}</div>\n                )}\n                {should_show_accumulator && info_from_shortcode.growth_rate && (\n                    <div className='market-symbol-icon__multiplier'>{+info_from_shortcode.growth_rate * 100}%</div>\n                )}\n            </div>\n        );\n    } else if (\n        'action_type' in payload &&\n        ['deposit', 'hold', 'release', 'withdrawal', 'transfer'].includes(payload.action_type ?? '')\n    ) {\n        return (\n            <div className='market-symbol-icon'>\n                {payload.action_type === 'deposit' && <Icon icon={icon || 'IcCashierDeposit'} size={32} />}\n                {payload.action_type === 'withdrawal' && <Icon icon='IcCashierWithdrawal' size={32} />}\n                {payload.action_type === 'transfer' && <Icon icon='IcAccountTransferColored' size={32} />}\n                {(payload.action_type === 'hold' || payload.action_type === 'release') && (\n                    <Icon icon='IcCashierDp2p' size={32} />\n                )}\n            </div>\n        );\n    } else if (['adjustment'].includes((payload as TStatementData).action_type ?? '')) {\n        return (\n            <div className='market-symbol-icon'>\n                <Icon icon='IcAdjustment' size={32} />\n            </div>\n        );\n    }\n\n    return (\n        <svg width='32' height='32' className='unknown-icon' data-testid='dt_unknown_icon'>\n            <rect width='32' height='32' />\n        </svg>\n    );\n};\n\nexport default MarketSymbolIconRow;\n","import React from 'react';\nimport { getProfitOrLoss } from '../Helpers/profit-loss';\n\ntype TProfitLossCell = {\n    value: string;\n    children: React.ReactNode;\n};\n\nconst ProfitLossCell = ({ value, children }: TProfitLossCell) => {\n    const status = getProfitOrLoss(value);\n\n    return <span className={`amount--${status}`}>{children}</span>;\n};\n\nexport default ProfitLossCell;\n","import React from 'react';\nimport { Text } from '@deriv/components';\n\ntype TCurrencyWrapper = {\n    currency: string;\n};\n\nconst CurrencyWrapper = ({ currency }: TCurrencyWrapper) => (\n    <div className='currency__wrapper'>\n        <Text color='colored-background' weight='bold' size='xxxs'>\n            {currency}\n        </Text>\n    </div>\n);\n\nexport default CurrencyWrapper;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { ArrowIndicator, Label, Money, ContractCard, ContractCardSell, Popover } from '@deriv/components';\nimport { getCurrencyDisplayCode, getTotalProfit, getGrowthRatePercentage, getCardLabels } from '@deriv/shared';\nimport { localize, Localize } from '@deriv/translations';\nimport ProgressSliderStream from '../Containers/progress-slider-stream';\nimport { TCellContentProps, THeaderProps } from 'Types';\nimport { getProfitOrLoss } from '../Helpers/profit-loss';\nimport IndicativeCell from '../Components/indicative-cell';\nimport MarketSymbolIconRow from '../Components/market-symbol-icon-row';\nimport ProfitLossCell from '../Components/profit-loss-cell';\nimport CurrencyWrapper from '../Components/currency-wrapper';\nimport { useStore } from '@deriv/stores';\nimport moment from 'moment';\n\ntype TPortfolioStore = ReturnType<typeof useStore>['portfolio'];\n\nconst map = {\n    buy: 'success',\n    deposit: 'success',\n    hold: 'warn',\n    release: 'success',\n    sell: 'danger',\n    withdrawal: 'info',\n    default: 'default',\n    adjustment: 'adjustment',\n    transfer: 'transfer',\n} as const;\n\nexport type TKeys = string;\n\nconst getModeFromValue = (key: string) => map[key as keyof typeof map] || map.default;\n\ntype TAccumulatorOpenPositionstemplateProps = Omit<\n    TMultiplierOpenPositionstemplateProps,\n    'onClickCancel' | 'server_time'\n> & {\n    isDesktop: boolean;\n};\n\ntype TMultiplierOpenPositionstemplateProps = Pick<\n    TPortfolioStore,\n    'getPositionById' | 'onClickCancel' | 'onClickSell'\n> & {\n    currency: string;\n    server_time: moment.Moment;\n    isDesktop: boolean;\n};\n\n/* eslint-disable react/display-name, react/prop-types */\nexport const getStatementTableColumnsTemplate = (currency: string, isDesktop: boolean) => [\n    {\n        key: 'icon',\n        title: isDesktop ? localize('Type') : '',\n        col_index: 'icon',\n        renderCellContent: ({ passthrough, row_obj }: TCellContentProps) => {\n            const icon = passthrough.isTopUp(row_obj) ? 'icCashierTopUp' : null;\n            return <MarketSymbolIconRow icon={icon} key={row_obj.transaction_id} payload={row_obj} />;\n        },\n    },\n    {\n        title: localize('Ref. ID'),\n        col_index: 'refid',\n        renderCellContent: ({ cell_value, row_obj }: TCellContentProps) => {\n            return (\n                <Popover\n                    alignment={'top'}\n                    message={localize('Transaction performed by (App ID: {{app_id}})', { app_id: row_obj.app_id })}\n                >\n                    {cell_value}\n                </Popover>\n            );\n        },\n    },\n    {\n        title: localize('Currency'),\n        col_index: 'currency',\n        renderCellContent: () => <CurrencyWrapper currency={getCurrencyDisplayCode(currency)} />,\n    },\n    {\n        title: localize('Transaction time'),\n        col_index: 'date',\n        renderCellContent: ({ cell_value }: TCellContentProps) => {\n            return <span>{cell_value} GMT</span>;\n        },\n    },\n    {\n        key: 'mode',\n        title: localize('Transaction'),\n        col_index: 'action_type',\n        renderCellContent: ({ cell_value, passthrough, row_obj }: TCellContentProps) => (\n            <Label mode={getModeFromValue(cell_value)}>\n                {(passthrough.isTopUp(row_obj) && localize('Top up')) || row_obj.action}\n            </Label>\n        ),\n    },\n    {\n        title: localize('Credit/Debit'),\n        col_index: 'amount',\n        renderCellContent: ({ cell_value }: TCellContentProps) => (\n            <div className={`amount--${getProfitOrLoss(cell_value)}`}>\n                <Money has_sign amount={cell_value.replace(/[,]+/g, '')} currency={currency} />\n            </div>\n        ),\n    },\n    {\n        title: localize('Balance'),\n        col_index: 'balance',\n        renderCellContent: ({ cell_value }: TCellContentProps) => (\n            <Money amount={cell_value.replace(/[,]+/g, '')} currency={currency} />\n        ),\n    },\n];\nexport const getProfitTableColumnsTemplate = (currency: string, items_count: number, isDesktop: boolean) => [\n    {\n        key: 'icon',\n        title: isDesktop ? localize('Type') : '',\n        col_index: 'action_type',\n        renderCellContent: ({ row_obj, is_footer }: TCellContentProps) => {\n            if (is_footer) {\n                return localize('Profit/loss on the last {{item_count}} contracts', { item_count: items_count });\n            }\n            return <MarketSymbolIconRow key={row_obj.transaction_id} payload={row_obj} />;\n        },\n    },\n    {\n        title: localize('Ref. ID'),\n        col_index: 'transaction_id',\n    },\n    {\n        title: localize('Currency'),\n        col_index: 'currency',\n        renderCellContent: ({ is_footer }: TCellContentProps) =>\n            is_footer ? '' : <CurrencyWrapper currency={getCurrencyDisplayCode(currency)} />,\n    },\n    {\n        title: localize('Buy time'),\n        col_index: 'purchase_time',\n        renderCellContent: ({ cell_value, is_footer }: TCellContentProps) => {\n            if (is_footer) return '';\n            return <span>{cell_value} GMT</span>;\n        },\n    },\n    {\n        title: localize('Stake'),\n        col_index: 'buy_price',\n        renderCellContent: ({ cell_value, is_footer }: TCellContentProps) => {\n            if (is_footer) return '';\n\n            return <Money amount={cell_value} currency={currency} />;\n        },\n    },\n    {\n        title: localize('Sell time'),\n        col_index: 'sell_time',\n        renderHeader: ({ title }: THeaderProps) => <span>{title}</span>,\n        renderCellContent: ({ cell_value, is_footer }: TCellContentProps) => {\n            if (is_footer) return '';\n            return <span>{cell_value} GMT</span>;\n        },\n    },\n    {\n        title: localize('Contract value'),\n        col_index: 'sell_price',\n        renderCellContent: ({ cell_value, is_footer }: TCellContentProps) => {\n            if (is_footer) return '';\n\n            return <Money amount={cell_value} currency={currency} />;\n        },\n    },\n    {\n        title: localize('Total profit/loss'),\n        col_index: 'profit_loss',\n        renderCellContent: ({ cell_value }: TCellContentProps) => (\n            <ProfitLossCell value={cell_value}>\n                <Money has_sign amount={cell_value.replace(/[,]+/g, '')} currency={currency} />\n            </ProfitLossCell>\n        ),\n    },\n];\nexport const getOpenPositionsColumnsTemplate = (currency: string, isDesktop: boolean) => [\n    {\n        key: 'icon',\n        title: isDesktop ? localize('Type') : '',\n        col_index: 'type',\n        renderCellContent: ({ row_obj, is_footer, is_vanilla, is_turbos }: TCellContentProps) => {\n            if (is_footer) return localize('Total');\n\n            return (\n                <MarketSymbolIconRow\n                    key={row_obj.id}\n                    payload={row_obj.contract_info}\n                    has_full_contract_title={is_vanilla || is_turbos}\n                />\n            );\n        },\n    },\n    {\n        title: localize('Ref. ID'),\n        col_index: 'reference',\n    },\n    {\n        title: localize('Currency'),\n        col_index: 'currency',\n        renderCellContent: ({ row_obj }: TCellContentProps) => (\n            <CurrencyWrapper currency={getCurrencyDisplayCode(row_obj.contract_info?.currency)} />\n        ),\n    },\n    {\n        title: localize('Stake'),\n        col_index: 'purchase',\n        renderCellContent: ({ cell_value }: TCellContentProps) => <Money amount={cell_value} currency={currency} />,\n    },\n    {\n        title: localize('Potential payout'),\n        col_index: 'payout',\n        renderHeader: ({ title, is_vanilla }: THeaderProps) => <span>{is_vanilla ? localize('Strike') : title}</span>,\n        renderCellContent: ({ cell_value, row_obj, is_vanilla }: TCellContentProps) => {\n            const non_vanilla_payout = cell_value ? <Money amount={cell_value} currency={currency} /> : <span>-</span>;\n            return is_vanilla ? row_obj.barrier?.toFixed(2) : non_vanilla_payout;\n        },\n    },\n    {\n        title: localize('Total profit/loss'),\n        col_index: 'profit',\n        renderCellContent: ({ row_obj }: TCellContentProps) => {\n            const { profit_loss, contract_info } = row_obj ?? {};\n            if (!profit_loss && profit_loss !== 0 && !contract_info?.profit && contract_info?.profit !== 0) return;\n            const profit = profit_loss ?? contract_info.profit;\n            // eslint-disable-next-line consistent-return\n            return (\n                <div\n                    className={classNames('open-positions__profit-loss', {\n                        'open-positions__profit-loss--negative': profit < 0,\n                        'open-positions__profit-loss--positive': profit > 0,\n                    })}\n                >\n                    <Money amount={Math.abs(profit)} currency={currency} />\n                    <ArrowIndicator className='open-positions__profit-loss--movement' value={profit} />\n                </div>\n            );\n        },\n    },\n    {\n        title: localize('Contract value'),\n        col_index: 'indicative',\n        renderCellContent: ({ cell_value, row_obj, is_footer }: TCellContentProps) => {\n            const { profit_loss, contract_info } = row_obj ?? {};\n            const profit = profit_loss ?? contract_info.profit;\n\n            return (\n                <IndicativeCell\n                    amount={+cell_value}\n                    currency={currency}\n                    contract_info={row_obj.contract_info}\n                    is_sell_requested={row_obj.is_sell_requested}\n                    is_footer={is_footer}\n                    profit={profit}\n                />\n            );\n        },\n    },\n    {\n        title: localize('Remaining time'),\n        col_index: 'id',\n        renderCellContent: ({ row_obj }: TCellContentProps) => (\n            <ProgressSliderStream contract_info={row_obj.contract_info} />\n        ),\n    },\n];\n\nexport const getMultiplierOpenPositionsColumnsTemplate = ({\n    currency,\n    onClickCancel,\n    onClickSell,\n    getPositionById,\n    server_time,\n    isDesktop,\n}: TMultiplierOpenPositionstemplateProps) => [\n    {\n        title: isDesktop ? localize('Type') : '',\n        col_index: 'type',\n        renderCellContent: ({ row_obj, is_footer }: TCellContentProps) => {\n            if (is_footer) return localize('Total');\n\n            return (\n                <MarketSymbolIconRow key={row_obj.id} payload={row_obj.contract_info} should_show_multiplier={false} />\n            );\n        },\n    },\n    {\n        title: localize('Multiplier'),\n        col_index: 'multiplier',\n        renderCellContent: ({ row_obj }: TCellContentProps) =>\n            row_obj.contract_info && row_obj.contract_info.multiplier ? `x${row_obj.contract_info.multiplier}` : '',\n    },\n    {\n        title: localize('Currency'),\n        col_index: 'currency',\n        renderCellContent: ({ row_obj }: TCellContentProps) => (\n            <CurrencyWrapper currency={getCurrencyDisplayCode(row_obj.contract_info?.currency)} />\n        ),\n    },\n    {\n        title: localize('Contract cost'),\n        col_index: 'buy_price',\n        renderCellContent: ({ row_obj }: TCellContentProps) => {\n            if (row_obj.contract_info) {\n                const { ask_price: cancellation_price = 0 } = row_obj.contract_info.cancellation || {};\n                return <Money amount={row_obj.contract_info.buy_price - cancellation_price} currency={currency} />;\n            }\n            return '';\n        },\n    },\n    {\n        title: localize('Deal cancel. fee'),\n        col_index: 'cancellation',\n        renderCellContent: ({ row_obj }: TCellContentProps) => {\n            if (!row_obj.contract_info || !row_obj.contract_info.underlying) return '-';\n            if (row_obj.contract_info.cancellation) {\n                return <Money amount={row_obj.contract_info.cancellation.ask_price} currency={currency} />;\n            }\n            return '-';\n        },\n    },\n    {\n        title: <Localize i18n_default_text='Stake' />,\n        col_index: 'purchase',\n        renderCellContent: ({ cell_value }: TCellContentProps) => <Money amount={cell_value} currency={currency} />,\n    },\n    {\n        title: <Localize i18n_default_text='Take profit<0 />Stop loss' components={[<br key={0} />]} />,\n        col_index: 'limit_order',\n        renderCellContent: ({ row_obj, is_footer }: TCellContentProps) => {\n            if (is_footer) {\n                return '';\n            }\n\n            const { take_profit, stop_loss } = row_obj.contract_info?.limit_order || {};\n            return (\n                <React.Fragment>\n                    <div>\n                        {take_profit?.order_amount ? (\n                            <Money has_sign amount={take_profit.order_amount} currency={currency} />\n                        ) : (\n                            '-'\n                        )}\n                    </div>\n                    <div>\n                        {stop_loss?.order_amount ? (\n                            <Money has_sign amount={stop_loss.order_amount} currency={currency} />\n                        ) : (\n                            '-'\n                        )}\n                    </div>\n                </React.Fragment>\n            );\n        },\n    },\n    {\n        title: localize('Contract value'),\n        col_index: 'bid_price',\n        renderCellContent: ({ row_obj, is_footer }: TCellContentProps) => {\n            if (is_footer) {\n                return '';\n            }\n\n            if (!row_obj.contract_info || !row_obj.contract_info.bid_price) return '-';\n\n            const total_profit = getTotalProfit(row_obj.contract_info);\n            return (\n                <div\n                    className={classNames('open-positions__bid_price', {\n                        'open-positions__bid_price--negative': total_profit < 0,\n                        'open-positions__bid_price--positive': total_profit > 0,\n                    })}\n                >\n                    <Money amount={row_obj.contract_info.bid_price} currency={currency} />\n                    <ArrowIndicator className='open-positions__bid_price--movement' value={total_profit} />\n                </div>\n            );\n        },\n    },\n    {\n        title: isDesktop ? (\n            <Localize i18n_default_text='Total<0 />profit/loss' components={[<br key={0} />]} />\n        ) : (\n            <Localize i18n_default_text='Total profit/loss' />\n        ),\n        col_index: 'profit',\n        renderCellContent: ({ row_obj }: TCellContentProps) => {\n            if (!row_obj.contract_info || !row_obj.contract_info.profit) return null;\n            const total_profit = getTotalProfit(row_obj.contract_info);\n            // eslint-disable-next-line consistent-return\n            return (\n                <div\n                    className={classNames('open-positions__profit-loss', {\n                        'open-positions__profit-loss--negative': total_profit < 0,\n                        'open-positions__profit-loss--positive': total_profit > 0,\n                    })}\n                >\n                    <Money amount={Math.abs(total_profit)} currency={currency} />\n                    <ArrowIndicator className='open-positions__profit-loss--movement' value={total_profit} />\n                </div>\n            );\n        },\n    },\n    {\n        title: localize('Action'),\n        col_index: 'action',\n        renderCellContent: ({ row_obj, is_footer }: TCellContentProps) => {\n            if (is_footer) {\n                return <div className='open-positions__row-action' />;\n            }\n\n            const { contract_info } = row_obj;\n            const position = getPositionById(contract_info.contract_id);\n            const { is_sell_requested } = position || {};\n\n            return (\n                <div className='open-positions__row-action'>\n                    <ContractCard.MultiplierCloseActions\n                        contract_info={contract_info}\n                        getCardLabels={getCardLabels}\n                        is_sell_requested={is_sell_requested}\n                        onClickCancel={onClickCancel}\n                        onClickSell={onClickSell}\n                        server_time={server_time}\n                    />\n                </div>\n            );\n        },\n    },\n];\n\nexport const getAccumulatorOpenPositionsColumnsTemplate = ({\n    currency,\n    onClickSell,\n    getPositionById,\n    isDesktop,\n}: TAccumulatorOpenPositionstemplateProps) => [\n    {\n        title: isDesktop ? localize('Type') : '',\n        col_index: 'type',\n        renderCellContent: ({ row_obj, is_footer }: TCellContentProps) => {\n            if (is_footer) return localize('Total');\n\n            return (\n                <MarketSymbolIconRow\n                    key={row_obj.id}\n                    payload={row_obj.contract_info}\n                    should_show_multiplier={false}\n                    should_show_accumulator={false}\n                />\n            );\n        },\n    },\n    {\n        title: localize('Growth rate'),\n        col_index: 'growth_rate',\n        renderCellContent: ({ row_obj }: TCellContentProps) =>\n            row_obj.contract_info && row_obj.contract_info.growth_rate\n                ? `${getGrowthRatePercentage(row_obj.contract_info.growth_rate)}%`\n                : '',\n    },\n    {\n        title: localize('Currency'),\n        col_index: 'currency',\n        renderCellContent: ({ row_obj }: TCellContentProps) => (\n            <CurrencyWrapper currency={getCurrencyDisplayCode(row_obj.contract_info?.currency)} />\n        ),\n    },\n    {\n        title: localize('Stake'),\n        col_index: isDesktop ? 'buy_price' : 'purchase',\n        renderCellContent: ({ row_obj }: TCellContentProps) => {\n            if (row_obj.contract_info) {\n                return <Money amount={row_obj.contract_info.buy_price} currency={currency} />;\n            }\n            return '';\n        },\n    },\n    {\n        title: localize('Take profit'),\n        col_index: 'limit_order',\n        renderCellContent: ({ row_obj }: TCellContentProps) => {\n            const { take_profit } = row_obj.contract_info?.limit_order || {};\n            return (\n                <div>\n                    {take_profit?.order_amount ? (\n                        <Money has_sign amount={take_profit.order_amount} currency={currency} />\n                    ) : (\n                        '-'\n                    )}\n                </div>\n            );\n        },\n    },\n    {\n        title: localize('Contract value'),\n        col_index: 'bid_price',\n        renderCellContent: ({ row_obj }: TCellContentProps) => {\n            if (!row_obj.contract_info || !row_obj.contract_info.bid_price) return '-';\n\n            const total_profit = getTotalProfit(row_obj.contract_info);\n            return (\n                <div\n                    className={classNames('open-positions__bid_price', {\n                        'open-positions__bid_price--negative': total_profit < 0,\n                        'open-positions__bid_price--positive': total_profit > 0,\n                    })}\n                >\n                    <Money amount={row_obj.contract_info.bid_price} currency={currency} />\n                    <ArrowIndicator className='open-positions__bid_price--movement' value={total_profit} />\n                </div>\n            );\n        },\n    },\n    {\n        title: localize('Total profit/loss'),\n        col_index: 'profit',\n        renderCellContent: ({ row_obj }: TCellContentProps) => {\n            if (!row_obj.contract_info || !row_obj.contract_info.profit) return null;\n            const total_profit = getTotalProfit(row_obj.contract_info);\n            // eslint-disable-next-line consistent-return\n            return (\n                <div\n                    className={classNames('open-positions__profit-loss', {\n                        'open-positions__profit-loss--negative': total_profit < 0,\n                        'open-positions__profit-loss--positive': total_profit > 0,\n                    })}\n                >\n                    <Money amount={Math.abs(total_profit)} currency={currency} />\n                    <ArrowIndicator className='open-positions__profit-loss--movement' value={total_profit} />\n                </div>\n            );\n        },\n    },\n    {\n        title: localize('Action'),\n        col_index: 'action',\n        renderCellContent: ({ row_obj, is_footer }: TCellContentProps) => {\n            if (is_footer) {\n                return <div className='open-positions__row-action' />;\n            }\n\n            const { contract_info } = row_obj;\n            const position = getPositionById(contract_info.contract_id);\n            const { is_sell_requested } = position || {};\n\n            return (\n                <div className='open-positions__row-action'>\n                    <ContractCardSell\n                        contract_info={contract_info}\n                        is_sell_requested={is_sell_requested}\n                        getCardLabels={getCardLabels}\n                        onClickSell={onClickSell}\n                    />\n                </div>\n            );\n        },\n    },\n];\n","import { createElement, isValidElement } from 'react';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\nvar uid = (function () {\r\n    return Math.random()\r\n        .toString(36)\r\n        .substring(6);\r\n});\n\nvar SVG = function (_a) {\r\n    var _b = _a.animate, animate = _b === void 0 ? true : _b, animateBegin = _a.animateBegin, _c = _a.backgroundColor, backgroundColor = _c === void 0 ? '#f5f6f7' : _c, _d = _a.backgroundOpacity, backgroundOpacity = _d === void 0 ? 1 : _d, _e = _a.baseUrl, baseUrl = _e === void 0 ? '' : _e, children = _a.children, _f = _a.foregroundColor, foregroundColor = _f === void 0 ? '#eee' : _f, _g = _a.foregroundOpacity, foregroundOpacity = _g === void 0 ? 1 : _g, _h = _a.gradientRatio, gradientRatio = _h === void 0 ? 2 : _h, _j = _a.gradientDirection, gradientDirection = _j === void 0 ? 'left-right' : _j, uniqueKey = _a.uniqueKey, _k = _a.interval, interval = _k === void 0 ? 0.25 : _k, _l = _a.rtl, rtl = _l === void 0 ? false : _l, _m = _a.speed, speed = _m === void 0 ? 1.2 : _m, _o = _a.style, style = _o === void 0 ? {} : _o, _p = _a.title, title = _p === void 0 ? 'Loading...' : _p, _q = _a.beforeMask, beforeMask = _q === void 0 ? null : _q, props = __rest(_a, [\"animate\", \"animateBegin\", \"backgroundColor\", \"backgroundOpacity\", \"baseUrl\", \"children\", \"foregroundColor\", \"foregroundOpacity\", \"gradientRatio\", \"gradientDirection\", \"uniqueKey\", \"interval\", \"rtl\", \"speed\", \"style\", \"title\", \"beforeMask\"]);\r\n    var fixedId = uniqueKey || uid();\r\n    var idClip = fixedId + \"-diff\";\r\n    var idGradient = fixedId + \"-animated-diff\";\r\n    var idAria = fixedId + \"-aria\";\r\n    var rtlStyle = rtl ? { transform: 'scaleX(-1)' } : null;\r\n    var keyTimes = \"0; \" + interval + \"; 1\";\r\n    var dur = speed + \"s\";\r\n    var gradientTransform = gradientDirection === 'top-bottom' ? 'rotate(90)' : undefined;\r\n    return (createElement(\"svg\", __assign({ \"aria-labelledby\": idAria, role: \"img\", style: __assign(__assign({}, style), rtlStyle) }, props),\r\n        title ? createElement(\"title\", { id: idAria }, title) : null,\r\n        beforeMask && isValidElement(beforeMask) ? beforeMask : null,\r\n        createElement(\"rect\", { role: \"presentation\", x: \"0\", y: \"0\", width: \"100%\", height: \"100%\", clipPath: \"url(\" + baseUrl + \"#\" + idClip + \")\", style: { fill: \"url(\" + baseUrl + \"#\" + idGradient + \")\" } }),\r\n        createElement(\"defs\", null,\r\n            createElement(\"clipPath\", { id: idClip }, children),\r\n            createElement(\"linearGradient\", { id: idGradient, gradientTransform: gradientTransform },\r\n                createElement(\"stop\", { offset: \"0%\", stopColor: backgroundColor, stopOpacity: backgroundOpacity }, animate && (createElement(\"animate\", { attributeName: \"offset\", values: -gradientRatio + \"; \" + -gradientRatio + \"; 1\", keyTimes: keyTimes, dur: dur, repeatCount: \"indefinite\", begin: animateBegin }))),\r\n                createElement(\"stop\", { offset: \"50%\", stopColor: foregroundColor, stopOpacity: foregroundOpacity }, animate && (createElement(\"animate\", { attributeName: \"offset\", values: -gradientRatio / 2 + \"; \" + -gradientRatio / 2 + \"; \" + (1 +\r\n                        gradientRatio / 2), keyTimes: keyTimes, dur: dur, repeatCount: \"indefinite\", begin: animateBegin }))),\r\n                createElement(\"stop\", { offset: \"100%\", stopColor: backgroundColor, stopOpacity: backgroundOpacity }, animate && (createElement(\"animate\", { attributeName: \"offset\", values: \"0; 0; \" + (1 + gradientRatio), keyTimes: keyTimes, dur: dur, repeatCount: \"indefinite\", begin: animateBegin })))))));\r\n};\n\nvar ContentLoader = function (props) {\r\n    return props.children ? createElement(SVG, __assign({}, props)) : createElement(ReactContentLoaderFacebook, __assign({}, props));\r\n};\n\nvar ReactContentLoaderFacebook = function (props) { return (createElement(ContentLoader, __assign({ viewBox: \"0 0 476 124\" }, props),\r\n    createElement(\"rect\", { x: \"48\", y: \"8\", width: \"88\", height: \"6\", rx: \"3\" }),\r\n    createElement(\"rect\", { x: \"48\", y: \"26\", width: \"52\", height: \"6\", rx: \"3\" }),\r\n    createElement(\"rect\", { x: \"0\", y: \"56\", width: \"410\", height: \"6\", rx: \"3\" }),\r\n    createElement(\"rect\", { x: \"0\", y: \"72\", width: \"380\", height: \"6\", rx: \"3\" }),\r\n    createElement(\"rect\", { x: \"0\", y: \"88\", width: \"178\", height: \"6\", rx: \"3\" }),\r\n    createElement(\"circle\", { cx: \"20\", cy: \"20\", r: \"20\" }))); };\n\nvar ReactContentLoaderInstagram = function (props) { return (createElement(ContentLoader, __assign({ viewBox: \"0 0 400 460\" }, props),\r\n    createElement(\"circle\", { cx: \"31\", cy: \"31\", r: \"15\" }),\r\n    createElement(\"rect\", { x: \"58\", y: \"18\", rx: \"2\", ry: \"2\", width: \"140\", height: \"10\" }),\r\n    createElement(\"rect\", { x: \"58\", y: \"34\", rx: \"2\", ry: \"2\", width: \"140\", height: \"10\" }),\r\n    createElement(\"rect\", { x: \"0\", y: \"60\", rx: \"2\", ry: \"2\", width: \"400\", height: \"400\" }))); };\n\nvar ReactContentLoaderCode = function (props) { return (createElement(ContentLoader, __assign({ viewBox: \"0 0 340 84\" }, props),\r\n    createElement(\"rect\", { x: \"0\", y: \"0\", width: \"67\", height: \"11\", rx: \"3\" }),\r\n    createElement(\"rect\", { x: \"76\", y: \"0\", width: \"140\", height: \"11\", rx: \"3\" }),\r\n    createElement(\"rect\", { x: \"127\", y: \"48\", width: \"53\", height: \"11\", rx: \"3\" }),\r\n    createElement(\"rect\", { x: \"187\", y: \"48\", width: \"72\", height: \"11\", rx: \"3\" }),\r\n    createElement(\"rect\", { x: \"18\", y: \"48\", width: \"100\", height: \"11\", rx: \"3\" }),\r\n    createElement(\"rect\", { x: \"0\", y: \"71\", width: \"37\", height: \"11\", rx: \"3\" }),\r\n    createElement(\"rect\", { x: \"18\", y: \"23\", width: \"140\", height: \"11\", rx: \"3\" }),\r\n    createElement(\"rect\", { x: \"166\", y: \"23\", width: \"173\", height: \"11\", rx: \"3\" }))); };\n\nvar ReactContentLoaderListStyle = function (props) { return (createElement(ContentLoader, __assign({ viewBox: \"0 0 400 110\" }, props),\r\n    createElement(\"rect\", { x: \"0\", y: \"0\", rx: \"3\", ry: \"3\", width: \"250\", height: \"10\" }),\r\n    createElement(\"rect\", { x: \"20\", y: \"20\", rx: \"3\", ry: \"3\", width: \"220\", height: \"10\" }),\r\n    createElement(\"rect\", { x: \"20\", y: \"40\", rx: \"3\", ry: \"3\", width: \"170\", height: \"10\" }),\r\n    createElement(\"rect\", { x: \"0\", y: \"60\", rx: \"3\", ry: \"3\", width: \"250\", height: \"10\" }),\r\n    createElement(\"rect\", { x: \"20\", y: \"80\", rx: \"3\", ry: \"3\", width: \"200\", height: \"10\" }),\r\n    createElement(\"rect\", { x: \"20\", y: \"100\", rx: \"3\", ry: \"3\", width: \"80\", height: \"10\" }))); };\n\nvar ReactContentLoaderBulletList = function (props) { return (createElement(ContentLoader, __assign({ viewBox: \"0 0 245 125\" }, props),\r\n    createElement(\"circle\", { cx: \"10\", cy: \"20\", r: \"8\" }),\r\n    createElement(\"rect\", { x: \"25\", y: \"15\", rx: \"5\", ry: \"5\", width: \"220\", height: \"10\" }),\r\n    createElement(\"circle\", { cx: \"10\", cy: \"50\", r: \"8\" }),\r\n    createElement(\"rect\", { x: \"25\", y: \"45\", rx: \"5\", ry: \"5\", width: \"220\", height: \"10\" }),\r\n    createElement(\"circle\", { cx: \"10\", cy: \"80\", r: \"8\" }),\r\n    createElement(\"rect\", { x: \"25\", y: \"75\", rx: \"5\", ry: \"5\", width: \"220\", height: \"10\" }),\r\n    createElement(\"circle\", { cx: \"10\", cy: \"110\", r: \"8\" }),\r\n    createElement(\"rect\", { x: \"25\", y: \"105\", rx: \"5\", ry: \"5\", width: \"220\", height: \"10\" }))); };\n\nexport default ContentLoader;\nexport { ReactContentLoaderBulletList as BulletList, ReactContentLoaderCode as Code, ReactContentLoaderFacebook as Facebook, ReactContentLoaderInstagram as Instagram, ReactContentLoaderListStyle as List };\n//# sourceMappingURL=react-content-loader.es.js.map\n","import ContentLoader from 'react-content-loader';\nimport React from 'react';\n\ntype TReportsTableRowLoader = {\n    speed?: number;\n};\n\nconst ReportsTableRowLoader = ({ speed }: TReportsTableRowLoader) => (\n    <ContentLoader\n        height={64}\n        width={992}\n        speed={speed}\n        backgroundColor={'var(--general-hover)'}\n        foregroundColor={'var(--general-active)'}\n    >\n        <rect x='16' y='16' rx='4' ry='4' width='32' height='32' />\n        <rect x='52' y='16' rx='4' ry='4' width='32' height='32' />\n        <rect x='132' y='28' rx='4' ry='4' width='101' height='8' />\n        <rect x='273' y='28' rx='4' ry='4' width='120' height='8' />\n        <rect x='460' y='28' rx='4' ry='4' width='46' height='8' />\n        <rect x='593' y='28' rx='4' ry='4' width='46' height='8' />\n        <rect x='726' y='28' rx='4' ry='4' width='64' height='8' />\n        <rect x='906' y='28' rx='4' ry='4' width='64' height='8' />\n    </ContentLoader>\n);\n\nexport { ReportsTableRowLoader };\n","import React from 'react';\nimport { Icon, Text } from '@deriv/components';\n\ntype TEmptyTradeHistoryMessage = {\n    component_icon: string;\n    has_selected_date: boolean;\n    localized_message: React.ReactNode;\n    localized_period_message: React.ReactNode;\n};\n\nconst EmptyTradeHistoryMessage = ({\n    has_selected_date,\n    component_icon,\n    localized_message,\n    localized_period_message,\n}: TEmptyTradeHistoryMessage) => (\n    <React.Fragment>\n        <div className='empty-trade-history'>\n            <Icon\n                data_testid='dt_empty_trade_history_icon'\n                icon={component_icon}\n                className='empty-trade-history__icon'\n                color='disabled'\n                size={96}\n            />\n            <Text size='xs' align='center' color='disabled' className='empty-trade-history__text'>\n                {!has_selected_date ? localized_message : localized_period_message}\n            </Text>\n        </div>\n    </React.Fragment>\n);\n\nexport default EmptyTradeHistoryMessage;\n","import classNames from 'classnames';\nimport React from 'react';\n\ntype TLoading = {\n    className?: string;\n    is_invisible?: boolean;\n    theme?: string;\n    id?: string;\n    data_testid?: string;\n};\n\nconst Loading = ({ className, is_invisible, theme, id, data_testid }: TLoading) => (\n    <div\n        id={id}\n        data-testid={data_testid}\n        className={classNames('barspinner', `barspinner--${theme || 'dark'}`, { invisible: is_invisible }, className)}\n    >\n        {Array.from(new Array(5)).map((x, inx) => (\n            <div key={inx} className={`barspinner__rect barspinner__rect--${inx + 1} rect${inx + 1}`} />\n        ))}\n    </div>\n);\n\nexport default Loading;\n","import React from 'react';\nimport Loading from '_common/components/loading';\n\ntype TPlaceholderComponent = {\n    component_icon?: string;\n    empty_message_component?: React.ElementType;\n    has_selected_date?: boolean;\n    is_empty?: boolean;\n    is_loading?: boolean;\n    localized_message?: React.ReactNode;\n    localized_period_message?: React.ReactNode;\n};\n\nconst PlaceholderComponent = ({\n    component_icon,\n    empty_message_component,\n    has_selected_date,\n    is_empty,\n    is_loading,\n    localized_message,\n    localized_period_message,\n}: TPlaceholderComponent) => {\n    const EmptyMessageComponent = empty_message_component;\n    return (\n        <React.Fragment>\n            {is_empty && EmptyMessageComponent && (\n                <EmptyMessageComponent\n                    component_icon={component_icon}\n                    has_selected_date={has_selected_date}\n                    localized_message={localized_message}\n                    localized_period_message={localized_period_message}\n                />\n            )}\n            {is_loading && <Loading data_testid='dt_loading_component' />}\n        </React.Fragment>\n    );\n};\n\nexport default PlaceholderComponent;\n","import React from 'react';\nimport { DataList, DataTable } from '@deriv/components';\nimport { getUnsupportedContracts, getContractPath, hasContractStarted } from '@deriv/shared';\nimport { Localize } from '@deriv/translations';\nimport { Analytics } from '@deriv-com/analytics';\nimport { useDevice } from '@deriv-com/ui';\nimport { ReportsTableRowLoader } from '../Components/Elements/ContentLoader';\nimport EmptyTradeHistoryMessage from '../Components/empty-trade-history-message';\nimport PlaceholderComponent from '../Components/placeholder-component';\nimport { TUnsupportedContractType } from 'Types';\nimport { TMobileRowRenderer } from './mobile-row-renderer';\nimport { TTotals } from './open-positions';\nimport { TPortfolioPosition } from '@deriv/stores/types';\n\ntype TEmptyPlaceholderWrapper = React.PropsWithChildren<{\n    is_empty: boolean;\n    component_icon: string;\n}>;\n\ntype TOpenPositionsTable = {\n    accumulator_rate: string;\n    active_positions: TPortfolioPosition[];\n    className: string;\n    columns: Record<string, unknown>[];\n    component_icon: string;\n    contract_type_value: string;\n    currency: string;\n    is_empty: boolean;\n    is_loading: boolean;\n    mobileRowRenderer: React.ComponentProps<typeof DataList>['rowRenderer'];\n    row_size: number;\n    totals: TTotals;\n};\n\nconst EmptyPlaceholderWrapper = ({ is_empty, component_icon, children }: TEmptyPlaceholderWrapper) => (\n    <React.Fragment>\n        {is_empty ? (\n            <PlaceholderComponent\n                is_empty={is_empty}\n                empty_message_component={EmptyTradeHistoryMessage}\n                component_icon={component_icon}\n                localized_message={<Localize i18n_default_text='You have no open positions yet.' />}\n            />\n        ) : (\n            children\n        )}\n    </React.Fragment>\n);\n\n/*\n * purchase property in contract positions object can be NaN or undefined in the first few responses.\n * So we set it to true in these case to show a preloader for the data-table-row until the correct value is set.\n */\nexport const isPurchaseMissing = (item: { purchase?: number }) => isNaN(Number(item.purchase)) || !item.purchase;\n\nexport const getRowAction = (row_obj: NonNullable<TMobileRowRenderer['row']> = {}) => {\n    let action: string | { component?: React.ReactElement } = {};\n    const unsupportedContractConfig = getUnsupportedContracts()[row_obj.type as TUnsupportedContractType];\n\n    if (row_obj.contract_info && !hasContractStarted(row_obj.contract_info)) {\n        action = {\n            component: <Localize i18n_default_text=\"You'll see these details once the contract starts.\" />,\n        };\n    } else if (unsupportedContractConfig || row_obj.id) {\n        action = unsupportedContractConfig\n            ? {\n                  component: (\n                      <Localize\n                          i18n_default_text=\"The {{trade_type_name}} contract details aren't currently available. We're working on making them available soon.\"\n                          values={{\n                              trade_type_name: unsupportedContractConfig?.name,\n                          }}\n                      />\n                  ),\n              }\n            : getContractPath(row_obj.id);\n    }\n\n    return action;\n};\n\nexport const OpenPositionsTable = ({\n    accumulator_rate,\n    active_positions,\n    className,\n    columns,\n    component_icon,\n    contract_type_value,\n    currency,\n    is_empty,\n    is_loading,\n    mobileRowRenderer,\n    row_size,\n    totals,\n}: TOpenPositionsTable) => {\n    const { isDesktop } = useDevice();\n    React.useEffect(() => {\n        Analytics.trackEvent('ce_reports_form', {\n            action: 'choose_report_type',\n            form_name: 'default',\n            subform_name: 'open_positions_form',\n            trade_type_filter: contract_type_value,\n            growth_type_filter: accumulator_rate,\n        });\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return (\n        <React.Fragment>\n            {is_loading ? (\n                <PlaceholderComponent\n                    is_loading={is_loading}\n                    empty_message_component={EmptyTradeHistoryMessage}\n                    component_icon={component_icon}\n                    localized_message={<Localize i18n_default_text='You have no open positions yet.' />}\n                />\n            ) : (\n                currency && (\n                    <div className='reports__content'>\n                        <EmptyPlaceholderWrapper component_icon={component_icon} is_empty={is_empty}>\n                            {isDesktop ? (\n                                <DataTable\n                                    className={className}\n                                    columns={columns}\n                                    preloaderCheck={isPurchaseMissing}\n                                    footer={totals}\n                                    data_source={active_positions}\n                                    getRowAction={getRowAction}\n                                    getRowSize={() => row_size}\n                                    content_loader={ReportsTableRowLoader}\n                                >\n                                    <PlaceholderComponent />\n                                </DataTable>\n                            ) : (\n                                <DataList\n                                    className={className}\n                                    data_source={active_positions}\n                                    footer={totals}\n                                    rowRenderer={mobileRowRenderer}\n                                    getRowAction={getRowAction}\n                                    row_gap={8}\n                                    keyMapper={item => item?.id}\n                                >\n                                    <PlaceholderComponent />\n                                </DataList>\n                            )}\n                        </EmptyPlaceholderWrapper>\n                    </div>\n                )\n            )}\n        </React.Fragment>\n    );\n};\n","import React from 'react';\nimport { ProgressBar, ProgressSliderMobile, DataList, ContractCard, PositionsDrawerCard } from '@deriv/components';\nimport {\n    isAccumulatorContract,\n    isMultiplierContract,\n    isVanillaContract,\n    isTurbosContract,\n    getContractDurationType,\n    getTimePercentage,\n    getCurrentTick,\n    getDurationPeriod,\n    getDurationUnitText,\n    getCardLabels,\n    toMoment,\n} from '@deriv/shared';\nimport { useStore } from '@deriv/stores';\nimport { TColIndex } from 'Types';\nimport moment from 'moment';\n\ntype TRangeFloatZeroToOne = React.ComponentProps<typeof ProgressBar>['value'];\ntype TPortfolioStore = ReturnType<typeof useStore>['portfolio'];\ntype TDataList = React.ComponentProps<typeof DataList>;\ntype TDataListCell = React.ComponentProps<typeof DataList.Cell>;\ntype TUiStore = Pick<\n    ReturnType<typeof useStore>['ui'],\n    | 'addToast'\n    | 'current_focus'\n    | 'removeToast'\n    | 'setCurrentFocus'\n    | 'should_show_cancellation_warning'\n    | 'toggleCancellationWarning'\n>;\n\nexport type TMobileRowRenderer = TUiStore & {\n    row?: TDataList['data_source'][0];\n    is_footer?: boolean;\n    columns_map: Record<TColIndex, TDataListCell['column']>;\n    getContractById: ReturnType<typeof useStore>['contract_trade']['getContractById'];\n    server_time: moment.Moment;\n    onClickCancel: (contract_id?: number) => void;\n    onClickRemove: TPortfolioStore['removePositionById'];\n    onClickSell: (contract_id?: number) => void;\n    measure?: () => void;\n};\n\nexport const MobileRowRenderer = ({\n    row = {},\n    is_footer,\n    columns_map = {},\n    server_time = toMoment(),\n    onClickCancel,\n    onClickSell,\n    measure,\n    ...props\n}: TMobileRowRenderer) => {\n    React.useEffect(() => {\n        if (!is_footer) {\n            measure?.();\n        }\n    }, [row.contract_info?.underlying, measure, is_footer]);\n\n    if (is_footer) {\n        return (\n            <div className='open-positions__data-list-footer--content'>\n                <div>\n                    <DataList.Cell row={row} column={columns_map.purchase} />\n                    <DataList.Cell row={row} column={columns_map.payout} />\n                </div>\n                <div>\n                    <DataList.Cell className='data-list__row-cell--amount' row={row} column={columns_map.indicative} />\n                    <DataList.Cell className='data-list__row-cell--amount' row={row} column={columns_map.profit} />\n                </div>\n            </div>\n        );\n    }\n\n    const { contract_info, contract_update, type, is_sell_requested } = row as TPortfolioStore['active_positions'][0];\n    const { currency, date_expiry, date_start, tick_count, purchase_time } = contract_info;\n    const current_tick = tick_count ? getCurrentTick(contract_info) : null;\n    const turbos_duration_unit = tick_count ? 'ticks' : getDurationUnitText(getDurationPeriod(contract_info), true);\n    const duration_type = getContractDurationType(\n        (isTurbosContract(contract_info.contract_type) ? turbos_duration_unit : contract_info.longcode) || ''\n    );\n    const progress_value = (getTimePercentage(server_time, date_start ?? 0, date_expiry ?? 0) /\n        100) as TRangeFloatZeroToOne;\n\n    if (isMultiplierContract(type) || isAccumulatorContract(type)) {\n        return (\n            <PositionsDrawerCard\n                contract_info={contract_info}\n                contract_update={contract_update}\n                currency={currency ?? ''}\n                is_link_disabled\n                onClickCancel={onClickCancel}\n                onClickSell={onClickSell}\n                server_time={server_time}\n                {...props}\n            />\n        );\n    }\n\n    return (\n        <>\n            <div className='data-list__row'>\n                <DataList.Cell row={row} column={columns_map.type} />\n                {isVanillaContract(type) || (isTurbosContract(type) && !tick_count) ? (\n                    <ProgressSliderMobile\n                        current_tick={current_tick}\n                        className='data-list__row--timer'\n                        expiry_time={date_expiry}\n                        getCardLabels={getCardLabels}\n                        is_loading={false}\n                        server_time={server_time}\n                        start_time={purchase_time}\n                        ticks_count={tick_count}\n                    />\n                ) : (\n                    <ProgressBar label={duration_type ?? ''} value={progress_value} />\n                )}\n            </div>\n            <div className='data-list__row'>\n                <DataList.Cell row={row} column={columns_map.reference} />\n                <DataList.Cell className='data-list__row-cell--amount' row={row} column={columns_map.currency} />\n            </div>\n            <div className='data-list__row'>\n                <DataList.Cell row={row} column={columns_map.purchase} />\n                <DataList.Cell className='data-list__row-cell--amount' row={row} column={columns_map.indicative} />\n            </div>\n            <div className='data-list__row'>\n                <DataList.Cell row={row} column={columns_map.payout} />\n                <DataList.Cell className='data-list__row-cell--amount' row={row} column={columns_map.profit} />\n            </div>\n            <div className='data-list__row-divider' />\n            <div className='data-list__row'>\n                <ContractCard.Sell\n                    contract_info={contract_info}\n                    is_sell_requested={is_sell_requested}\n                    getCardLabels={getCardLabels}\n                    onClickSell={onClickSell}\n                />\n            </div>\n        </>\n    );\n};\n","import React from 'react';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\nimport { DataList, usePrevious, SelectNative, Dropdown } from '@deriv/components';\nimport { useDevice } from '@deriv-com/ui';\nimport {\n    isAccumulatorContract,\n    isMultiplierContract,\n    getTotalProfit,\n    getGrowthRatePercentage,\n    toMoment,\n} from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport { Analytics } from '@deriv-com/analytics';\nimport {\n    getOpenPositionsColumnsTemplate,\n    getAccumulatorOpenPositionsColumnsTemplate,\n    getMultiplierOpenPositionsColumnsTemplate,\n} from 'Constants/data-table-constants';\nimport { observer, useStore } from '@deriv/stores';\nimport { TColIndex } from 'Types';\nimport { OpenPositionsTable } from './open-positions-table';\nimport { MobileRowRenderer } from './mobile-row-renderer';\n\ntype TPortfolioStore = ReturnType<typeof useStore>['portfolio'];\ntype TDataListCell = React.ComponentProps<typeof DataList.Cell>;\ntype TRowRenderer = React.ComponentProps<typeof DataList>['rowRenderer'];\n\nexport type TTotals = {\n    contract_info?: {\n        profit?: number;\n        buy_price?: number;\n        bid_price?: number;\n        cancellation?: {\n            ask_price?: number;\n        };\n        limit_order?: {\n            take_profit?: {\n                order_amount?: number | null;\n            };\n        };\n    };\n    indicative?: number;\n    purchase?: number;\n    profit_loss?: number;\n    payout?: number | null;\n};\n\ntype TOpenPositions = RouteComponentProps & {\n    component_icon: string;\n};\n\nconst getOpenPositionsTotals = (\n    active_positions_filtered: TPortfolioStore['active_positions'],\n    is_multiplier_selected: boolean,\n    is_accumulator_selected: boolean\n) => {\n    let totals: TTotals;\n\n    if (is_multiplier_selected) {\n        let ask_price = 0;\n        let profit = 0;\n        let buy_price = 0;\n        let bid_price = 0;\n        let purchase = 0;\n\n        active_positions_filtered.forEach(portfolio_pos => {\n            buy_price += Number(portfolio_pos.contract_info.buy_price);\n            bid_price += Number(portfolio_pos.contract_info.bid_price);\n            purchase += Number(portfolio_pos.purchase);\n            if (portfolio_pos.contract_info) {\n                const prices = {\n                    bid_price: portfolio_pos.contract_info.bid_price ?? 0,\n                    buy_price: portfolio_pos.contract_info.buy_price ?? 0,\n                };\n                profit += getTotalProfit(prices);\n\n                if (portfolio_pos.contract_info.cancellation) {\n                    ask_price += portfolio_pos.contract_info.cancellation.ask_price || 0;\n                }\n            }\n        });\n        totals = {\n            contract_info: {\n                profit,\n                buy_price,\n                bid_price,\n            },\n            purchase,\n        };\n\n        if (ask_price > 0) {\n            if (totals.contract_info)\n                totals.contract_info.cancellation = {\n                    ask_price,\n                };\n        }\n    } else if (is_accumulator_selected) {\n        let buy_price = 0;\n        let bid_price = 0;\n        let take_profit = 0;\n        let profit = 0;\n\n        active_positions_filtered?.forEach(({ contract_info }) => {\n            buy_price += Number(contract_info.buy_price);\n            bid_price += Number(contract_info.bid_price);\n            if (contract_info.limit_order?.take_profit?.order_amount)\n                take_profit += contract_info.limit_order.take_profit.order_amount;\n            if (contract_info) {\n                profit += getTotalProfit(contract_info);\n            }\n        });\n        totals = {\n            contract_info: {\n                buy_price,\n                bid_price,\n                profit,\n                limit_order: {\n                    take_profit: {\n                        order_amount: take_profit,\n                    },\n                },\n            },\n            purchase: buy_price,\n        };\n    } else {\n        let indicative = 0;\n        let purchase = 0;\n        let profit_loss = 0;\n        let payout = 0;\n\n        active_positions_filtered?.forEach(portfolio_pos => {\n            indicative += +portfolio_pos.indicative;\n            purchase += Number(portfolio_pos.purchase);\n            profit_loss += Number(portfolio_pos.profit_loss);\n            payout += Number(portfolio_pos.payout);\n        });\n        totals = {\n            indicative,\n            purchase,\n            profit_loss,\n            payout,\n        };\n    }\n    return totals;\n};\n\nconst OpenPositions = observer(({ component_icon, ...props }: TOpenPositions) => {\n    const { portfolio, client, ui, common, contract_trade } = useStore();\n    const {\n        active_positions,\n        error,\n        getPositionById,\n        is_accumulator,\n        is_loading,\n        is_multiplier,\n        onClickCancel,\n        onClickSell,\n        onMount,\n        removePositionById: onClickRemove,\n    } = portfolio;\n    const { currency, is_eu: hide_accu_in_dropdown } = client;\n    const {\n        notification_messages_ui: NotificationMessages,\n        addToast,\n        current_focus,\n        is_mobile,\n        removeToast,\n        setCurrentFocus,\n        should_show_cancellation_warning,\n        toggleCancellationWarning,\n    } = ui;\n    const { server_time } = common;\n    const { getContractById } = contract_trade;\n\n    const store_props = {\n        onClickRemove,\n        NotificationMessages,\n        addToast,\n        current_focus,\n        is_mobile,\n        removeToast,\n        setCurrentFocus,\n        should_show_cancellation_warning,\n        toggleCancellationWarning,\n        getContractById,\n    };\n\n    const [has_accumulator_contract, setHasAccumulatorContract] = React.useState(false);\n    const [has_multiplier_contract, setHasMultiplierContract] = React.useState(false);\n    const { isDesktop } = useDevice();\n    const previous_active_positions = usePrevious(active_positions);\n\n    const generateContractTypes = () => {\n        const queryParams = new URLSearchParams(location.search);\n\n        const contract_type_bot = queryParams.get('contract_type_bots');\n\n        if (!contract_type_bot) {\n            return [\n                { text: localize('Options'), value: 'options', is_default: !is_multiplier && !is_accumulator },\n                { text: localize('Multipliers'), value: 'multipliers', is_default: is_multiplier },\n                { text: localize('Accumulators'), value: 'accumulators', is_default: is_accumulator },\n            ];\n        }\n\n        const is_multiplier_bot = contract_type_bot === 'trade_definition_multiplier';\n        const is_accumulator_bot = contract_type_bot === 'trade_definition_accumulator';\n\n        const contract_types = [\n            { text: localize('Options'), value: 'options', is_default: !is_multiplier_bot && !is_accumulator_bot },\n            { text: localize('Multipliers'), value: 'multipliers', is_default: is_multiplier_bot },\n            { text: localize('Accumulators'), value: 'accumulators', is_default: is_accumulator_bot },\n        ];\n        return contract_types;\n    };\n\n    const contract_types = generateContractTypes();\n\n    const [contract_type_value, setContractTypeValue] = React.useState(\n        contract_types.find(type => type.is_default)?.value || 'options'\n    );\n    const prev_contract_type_value = usePrevious(contract_type_value);\n    const accumulator_rates = [\n        { text: localize('All growth rates'), value: 'all growth rates' },\n        { text: '1%', value: '1%' },\n        { text: '2%', value: '2%' },\n        { text: '3%', value: '3%' },\n        { text: '4%', value: '4%' },\n        { text: '5%', value: '5%' },\n    ];\n    const [accumulator_rate, setAccumulatorRate] = React.useState(accumulator_rates[0].value);\n    const prev_accumulator_rate = usePrevious(accumulator_rate);\n    const is_accumulator_selected = contract_type_value === contract_types[2].value;\n    const is_multiplier_selected = contract_type_value === contract_types[1].value;\n    const contract_types_list = contract_types\n        .filter(contract_type => contract_type.value !== 'accumulators' || !hide_accu_in_dropdown)\n        .map(({ text, value }) => ({ text, value }));\n    const active_positions_filtered = active_positions?.filter(({ contract_info }) => {\n        if (contract_info) {\n            if (is_multiplier_selected) return isMultiplierContract(contract_info.contract_type || '');\n            if (is_accumulator_selected)\n                return (\n                    isAccumulatorContract(contract_info.contract_type) &&\n                    (`${getGrowthRatePercentage(Number(contract_info.growth_rate))}%` === accumulator_rate ||\n                        !accumulator_rate.includes('%'))\n                );\n            return (\n                !isMultiplierContract(contract_info.contract_type || '') &&\n                !isAccumulatorContract(contract_info.contract_type)\n            );\n        }\n        return true;\n    });\n    const active_positions_filtered_totals = getOpenPositionsTotals(\n        active_positions_filtered,\n        is_multiplier_selected,\n        is_accumulator_selected\n    );\n\n    React.useEffect(() => {\n        /*\n         * For mobile, we show portfolio stepper in header even for reports pages.\n         * `onMount` in portfolio store will be invoked from portfolio stepper component in `trade-header-extensions.jsx`\n         */\n\n        onMount();\n        checkForAccuAndMultContracts();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    React.useEffect(() => {\n        checkForAccuAndMultContracts(previous_active_positions);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [previous_active_positions]);\n\n    React.useEffect(() => {\n        if (prev_contract_type_value) {\n            Analytics.trackEvent('ce_reports_form', {\n                action: 'filter_trade_type',\n                form_name: 'default',\n                subform_name: 'open_positions_form',\n                trade_type_filter: contract_type_value,\n            });\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [contract_type_value]);\n\n    React.useEffect(() => {\n        if (prev_accumulator_rate) {\n            Analytics.trackEvent('ce_reports_form', {\n                action: 'filter_growth_rate',\n                form_name: 'default',\n                subform_name: 'open_positions_form',\n                growth_type_filter: accumulator_rate,\n            });\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [accumulator_rate]);\n\n    const checkForAccuAndMultContracts = (prev_active_positions: TPortfolioStore['active_positions'] = []) => {\n        if (active_positions === prev_active_positions) return;\n        if (!has_accumulator_contract) {\n            setHasAccumulatorContract(\n                active_positions.some(({ contract_info }) => isAccumulatorContract(contract_info?.contract_type))\n            );\n        }\n        if (!has_multiplier_contract) {\n            setHasMultiplierContract(\n                active_positions.some(({ contract_info }) => isMultiplierContract(contract_info?.contract_type || ''))\n            );\n        }\n    };\n\n    if (error) return <p>{error}</p>;\n\n    const getColumns = () => {\n        if (is_multiplier_selected && server_time) {\n            return getMultiplierOpenPositionsColumnsTemplate({\n                currency,\n                onClickCancel,\n                onClickSell,\n                getPositionById,\n                server_time,\n                isDesktop,\n            });\n        }\n        if (is_accumulator_selected) {\n            return getAccumulatorOpenPositionsColumnsTemplate({\n                currency,\n                onClickSell,\n                getPositionById,\n                isDesktop,\n            });\n        }\n        return getOpenPositionsColumnsTemplate(currency, isDesktop);\n    };\n\n    const columns = getColumns();\n\n    const columns_map = {} as Record<TColIndex, TDataListCell['column']>;\n    columns.forEach(e => {\n        columns_map[e.col_index as TColIndex] = e as TDataListCell['column'];\n    });\n\n    const mobileRowRenderer: TRowRenderer = args => (\n        <MobileRowRenderer\n            {...args}\n            columns_map={columns_map}\n            server_time={server_time || toMoment()}\n            onClickCancel={onClickCancel}\n            onClickSell={onClickSell}\n            {...props}\n            {...store_props}\n        />\n    );\n\n    const shared_props = {\n        accumulator_rate,\n        active_positions: active_positions_filtered,\n        component_icon,\n        contract_type_value,\n        currency,\n        is_loading,\n        mobileRowRenderer,\n        totals: active_positions_filtered_totals,\n    };\n\n    const getOpenPositionsTable = () => {\n        let classname = 'open-positions';\n        let row_size = isDesktop ? 63 : 5;\n\n        if (is_accumulator_selected) {\n            classname = 'open-positions-accumulator open-positions';\n            row_size = isDesktop ? 68 : 3;\n        } else if (is_multiplier_selected) {\n            classname = 'open-positions-multiplier open-positions';\n            row_size = isDesktop ? 68 : 3;\n        }\n\n        return (\n            <OpenPositionsTable\n                className={classname}\n                columns={columns}\n                is_empty={active_positions_filtered.length === 0}\n                row_size={row_size}\n                {...shared_props}\n            />\n        );\n    };\n\n    return (\n        <React.Fragment>\n            <NotificationMessages />\n            {active_positions.length !== 0 &&\n                (isDesktop ? (\n                    <div\n                        className={\n                            is_accumulator_selected\n                                ? 'open-positions__accumulator-container'\n                                : 'open-positions__contract-types-selector-container'\n                        }\n                    >\n                        <div className='open-positions__accumulator-container__contract-dropdown'>\n                            <Dropdown\n                                is_align_text_left\n                                name='contract_types'\n                                list={contract_types_list}\n                                value={contract_type_value}\n                                onChange={e => setContractTypeValue(e.target.value)}\n                            />\n                        </div>\n                        {is_accumulator_selected && !hide_accu_in_dropdown && (\n                            <div className='open-positions__accumulator-container__rates-dropdown'>\n                                <Dropdown\n                                    is_align_text_left\n                                    name='accumulator_rates'\n                                    list={accumulator_rates}\n                                    value={accumulator_rate}\n                                    onChange={e => setAccumulatorRate(e.target.value)}\n                                />\n                            </div>\n                        )}\n                    </div>\n                ) : (\n                    <div\n                        className={\n                            is_accumulator_selected\n                                ? 'open-positions__accumulator-container--mobile'\n                                : 'open-positions__contract-types-selector-container--mobile'\n                        }\n                    >\n                        <SelectNative\n                            className='open-positions__accumulator-container-mobile__contract-dropdown'\n                            list_items={contract_types_list}\n                            value={contract_type_value}\n                            should_show_empty_option={false}\n                            onChange={(e: React.ChangeEvent<HTMLSelectElement> & { target: { value: string } }) =>\n                                setContractTypeValue(e.target.value)\n                            }\n                        />\n                        {is_accumulator_selected && !hide_accu_in_dropdown && (\n                            <SelectNative\n                                className='open-positions__accumulator-container--mobile__rates-dropdown'\n                                list_items={accumulator_rates}\n                                value={accumulator_rate}\n                                should_show_empty_option={false}\n                                onChange={(e: React.ChangeEvent<HTMLSelectElement> & { target: { value: string } }) =>\n                                    setAccumulatorRate(e.target.value)\n                                }\n                            />\n                        )}\n                    </div>\n                ))}\n            {getOpenPositionsTable()}\n        </React.Fragment>\n    );\n});\n\nexport default withRouter(OpenPositions);\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Button, DatePicker, Icon, InputField, MobileDialog, Text } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { toMoment } from '@deriv/shared';\nimport { TInputDateRange } from 'Types';\n\ntype TDatePickerOnChangeParams = Parameters<React.ComponentProps<typeof DatePicker>['onChange']>[0];\n\ntype TRadioButton = {\n    id: string;\n    className?: string;\n    selected_value?: string;\n    value?: string;\n    label?: string;\n    onChange: (value: { label?: string; value?: string }) => void;\n};\n\nexport const RadioButton = ({ id, className, selected_value, value, label, onChange }: TRadioButton) => {\n    return (\n        <label\n            htmlFor={id}\n            className={classNames('composite-calendar-modal__radio', className, {\n                'composite-calendar-modal__radio--selected': selected_value === value,\n            })}\n            onClick={() => onChange({ label, value })}\n        >\n            <input className='composite-calendar-modal__radio-input' id={id} type='radio' value={value} />\n            <span\n                className={classNames('composite-calendar-modal__radio-circle', {\n                    'composite-calendar-modal__radio-circle--selected': selected_value === value,\n                })}\n            />\n            <Text\n                as='p'\n                color='prominent'\n                size='xs'\n                line_height='unset'\n                weight={selected_value === value ? 'bold' : 'normal'}\n            >\n                {label}\n            </Text>\n        </label>\n    );\n};\nconst CUSTOM_KEY = 'custom';\n\ntype TCompositeCalendarMobile = {\n    input_date_range?: TInputDateRange;\n    current_focus?: string | null;\n    duration_list?: Array<TInputDateRange>;\n    onChange: (\n        value: { from?: moment.Moment; to?: moment.Moment; is_batch?: boolean },\n        extra_data?: { date_range: TInputDateRange }\n    ) => void;\n    setCurrentFocus: (focus: string | null) => void;\n    from: number;\n    to: number;\n};\n\nconst CompositeCalendarMobile = React.memo(\n    ({\n        input_date_range,\n        current_focus,\n        duration_list,\n        onChange,\n        setCurrentFocus,\n        from,\n        to,\n    }: TCompositeCalendarMobile) => {\n        const date_range = input_date_range || duration_list?.find(range => range.value === 'all_time');\n\n        const [from_date, setFrom] = React.useState(from ? toMoment(from).format('YYYY-MM-DD') : undefined);\n        const [to_date, setTo] = React.useState(to ? toMoment(to).format('YYYY-MM-DD') : undefined);\n        const [is_open, setIsOpen] = React.useState(false);\n\n        const [applied_date_range, setAppliedDateRange] = React.useState(date_range);\n        const [selected_date_range, setSelectedDateRange] = React.useState(date_range);\n        const today = toMoment().format('YYYY-MM-DD');\n\n        const selectDateRange = (_selected_date_range: TInputDateRange, is_today?: boolean) => {\n            const new_from = _selected_date_range.duration;\n            onChange(\n                {\n                    from:\n                        is_today || new_from\n                            ? toMoment().startOf('day').subtract(new_from, 'day').add(1, 's')\n                            : undefined,\n                    to: toMoment().endOf('day'),\n                    is_batch: true,\n                },\n                {\n                    date_range: _selected_date_range,\n                }\n            );\n        };\n\n        const selectCustomDateRange = () => {\n            const new_from = from_date || to_date || today;\n            const new_to = to_date || today;\n\n            const new_date_range = Object.assign(selected_date_range as TInputDateRange, {\n                label: `${toMoment(new_from).format('DD MMM YYYY')} - ${toMoment(new_to).format('DD MMM YYYY')}`,\n            });\n\n            onChange(\n                {\n                    from: toMoment(new_from).startOf('day').add(1, 's'),\n                    to: toMoment(new_to).endOf('day'),\n                    is_batch: true,\n                },\n                {\n                    date_range: new_date_range,\n                }\n            );\n        };\n\n        const applyDateRange = () => {\n            if (selected_date_range?.onClick) {\n                selectDateRange(selected_date_range);\n            } else if (selected_date_range?.value === CUSTOM_KEY) {\n                selectCustomDateRange();\n            }\n            setAppliedDateRange(selected_date_range);\n            setIsOpen(false);\n        };\n\n        const selectToday = () => {\n            const new_date_range = {\n                duration: 0,\n                label: localize('Today'),\n            };\n            selectDateRange(new_date_range, true);\n            setAppliedDateRange(new_date_range);\n            setSelectedDateRange(new_date_range);\n            setIsOpen(false);\n        };\n\n        const selectDate = (e: TDatePickerOnChangeParams, key: string) => {\n            setSelectedDateRange({ value: CUSTOM_KEY });\n\n            if (key === 'from') setFrom(e.target?.value as string);\n            if (key === 'to') setTo(e.target?.value as string);\n        };\n\n        const getMobileFooter = () => {\n            return (\n                <div className='composite-calendar-modal__actions'>\n                    <Button\n                        className='composite-calendar-modal__actions__cancel'\n                        text={localize('Cancel')}\n                        onClick={() => setIsOpen(false)}\n                        has_effect\n                        secondary\n                        large\n                    />\n                    <Button\n                        className='composite-calendar-modal__actions__ok'\n                        text={localize('OK')}\n                        onClick={applyDateRange}\n                        has_effect\n                        primary\n                        large\n                    />\n                </div>\n            );\n        };\n\n        const onDateRangeChange = (_date_range: TInputDateRange) => {\n            setSelectedDateRange(\n                duration_list?.find(range => _date_range && range.value === _date_range.value) || _date_range\n            );\n        };\n\n        const openDialog = () => {\n            setSelectedDateRange(applied_date_range);\n            setIsOpen(true);\n        };\n\n        return (\n            <React.Fragment>\n                <div className='composite-calendar__input-fields composite-calendar__input-fields--fill'>\n                    <InputField\n                        id='dt_calendar_input'\n                        current_focus={current_focus ?? ''}\n                        is_read_only={true}\n                        icon={() => <Icon icon='IcCalendarDatefrom' className='inline-icon' />}\n                        onClick={openDialog}\n                        setCurrentFocus={setCurrentFocus}\n                        value={applied_date_range?.label ?? ''}\n                    />\n                </div>\n                <MobileDialog\n                    portal_element_id='modal_root'\n                    title={localize('Please select duration')}\n                    visible={is_open}\n                    has_content_scroll\n                    onClose={() => setIsOpen(false)}\n                    content_height_offset='94px'\n                    footer={getMobileFooter()}\n                >\n                    <div className='composite-calendar-modal'>\n                        <div className='composite-calendar-modal__radio-group'>\n                            {duration_list?.map(duration => (\n                                <RadioButton\n                                    id={`composite-calendar-modal__radio__${duration.value}`}\n                                    key={duration.value}\n                                    value={duration.value}\n                                    label={duration.label}\n                                    selected_value={selected_date_range?.value}\n                                    onChange={onDateRangeChange}\n                                />\n                            ))}\n                        </div>\n                        <div className='composite-calendar-modal__custom'>\n                            <RadioButton\n                                id={'composite-calendar-modal__custom-radio'}\n                                className='composite-calendar-modal__custom-radio'\n                                value={CUSTOM_KEY}\n                                label={localize('Custom')}\n                                selected_value={selected_date_range?.value}\n                                onChange={onDateRangeChange}\n                            />\n\n                            <div className='composite-calendar-modal__custom-date-range'>\n                                <DatePicker\n                                    className='composite-calendar-modal__custom-date-range-start-date'\n                                    placeholder={localize('Start date')}\n                                    value={from_date ?? ''}\n                                    max_date={to_date || today}\n                                    onChange={(e: TDatePickerOnChangeParams) => selectDate(e, 'from')}\n                                />\n                                <DatePicker\n                                    className='composite-calendar-modal__custom-date-range-end-date'\n                                    placeholder={localize('End date')}\n                                    value={to_date ?? ''}\n                                    max_date={today}\n                                    min_date={from_date}\n                                    onChange={(e: TDatePickerOnChangeParams) => selectDate(e, 'to')}\n                                />\n                            </div>\n                        </div>\n                        <Button\n                            className='composite-calendar-modal__actions-today'\n                            text={localize('Back to today')}\n                            onClick={selectToday}\n                            has_effect\n                            tertiary\n                            large\n                        />\n                    </div>\n                </MobileDialog>\n            </React.Fragment>\n        );\n    }\n);\n\nCompositeCalendarMobile.displayName = 'CompositeCalendarMobile';\nexport default CompositeCalendarMobile;\n","import classNames from 'classnames';\nimport React from 'react';\n\ntype TListItem = {\n    label: string | React.ReactElement | Array<string>;\n    is_active: boolean;\n    onClick: () => void;\n};\n\nconst ListItem = ({ onClick, is_active, label }: TListItem) => (\n    <li\n        className={classNames({\n            'composite-calendar__prepopulated-list--is-active': is_active,\n        })}\n        onClick={onClick}\n    >\n        {label}\n    </li>\n);\n\nexport default ListItem;\n","import React from 'react';\nimport { toMoment } from '@deriv/shared';\nimport ListItem from './list-item';\n\ntype TItem = {\n    value: string;\n    label: string;\n    onClick: () => void;\n    duration: number;\n};\n\ntype TSideList = {\n    from: number | null;\n    items: Array<TItem>;\n    to: number;\n};\n\nconst isActive = (from: number | null, to: number, flag: number) => {\n    if (flag === 0) {\n        return toMoment().endOf('day').unix() === to && from === null;\n    }\n    return Math.ceil(to / 86400) - Math.ceil(Number(from) / 86400) === flag;\n};\n\nconst SideList = ({ items, from, to }: TSideList) => (\n    <ul className='composite-calendar__prepopulated-list'>\n        {items.map(item => {\n            const { duration, label, onClick } = item;\n            const is_active = isActive(from, to, duration);\n            return <ListItem key={duration} is_active={is_active} label={label} onClick={onClick} />;\n        })}\n    </ul>\n);\n\nexport default SideList;\n","import React from 'react';\nimport { Icon } from '@deriv/components';\n\ntype TCalendarIcon = {\n    onClick: () => void;\n};\n\nconst CalendarIcon = ({ onClick }: TCalendarIcon) => (\n    <Icon onClick={onClick} icon='IcCalendarDatefrom' className='inline-icon' data_testid='dt_calendar_icon' />\n);\n\nexport default CalendarIcon;\n","import React from 'react';\nimport Loadable from 'react-loadable';\nimport { useDevice } from '@deriv-com/ui';\nimport { InputField, useOnClickOutside } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { daysFromTodayTo, toMoment } from '@deriv/shared';\nimport CompositeCalendarMobile from './composite-calendar-mobile';\nimport SideList from './side-list';\nimport CalendarIcon from './calendar-icon';\nimport TwoMonthPicker from './two-month-picker';\nimport moment from 'moment';\nimport { observer, useStore } from '@deriv/stores';\n\ntype TCompositeCalendar = {\n    onChange: (values: { to?: moment.Moment; from?: moment.Moment; is_batch?: boolean }) => void;\n    to: number;\n    from: number;\n};\n\ntype TTwoMonthPickerLoadable = {\n    onChange: (date: moment.Moment) => void;\n    isPeriodDisabled: (date: moment.Moment) => boolean;\n    value: number;\n};\n\nconst TwoMonthPickerLoadable = Loadable<TTwoMonthPickerLoadable, typeof TwoMonthPicker>({\n    loader: () => import(/* webpackChunkName: \"two-month-picker\" */ './two-month-picker'),\n    loading: () => null,\n    render(loaded, props) {\n        const Component = loaded.default;\n        return <Component {...props} />;\n    },\n});\n\nconst CompositeCalendar = observer((props: TCompositeCalendar) => {\n    const { ui } = useStore();\n    const { current_focus, setCurrentFocus } = ui;\n    const { onChange, to, from } = props;\n    const { isDesktop } = useDevice();\n    const [show_to, setShowTo] = React.useState(false);\n    const [show_from, setShowFrom] = React.useState(false);\n    const [list] = React.useState([\n        {\n            value: 'all_time',\n            label: localize('All time'),\n            onClick: () => selectDateRange(),\n            duration: 0,\n        },\n        {\n            value: 'last_7_days',\n            label: localize('Last 7 days'),\n            onClick: () => selectDateRange(7),\n            duration: 7,\n        },\n        {\n            value: 'last_30_days',\n            label: localize('Last 30 days'),\n            onClick: () => selectDateRange(30),\n            duration: 30,\n        },\n        {\n            value: 'last_60_days',\n            label: localize('Last 60 days'),\n            onClick: () => selectDateRange(60),\n            duration: 60,\n        },\n        {\n            value: 'last_quarter',\n            label: localize('Last quarter'),\n            onClick: () => selectDateRange(90),\n            duration: 90,\n        },\n    ]);\n\n    const wrapper_ref = React.useRef<HTMLInputElement>(null);\n\n    const validateClickOutside = (event: MouseEvent) => !wrapper_ref.current?.contains(event.target as Node);\n\n    const selectDateRange = (new_from?: number) => {\n        hideCalendar();\n        onChange({\n            from: new_from ? toMoment().startOf('day').subtract(new_from, 'day').add(1, 's') : undefined,\n            to: toMoment().endOf('day'),\n            is_batch: true,\n        });\n    };\n\n    const getToDateLabel = () => {\n        const date = toMoment(to);\n        return daysFromTodayTo(date) === 0 ? localize('Today') : date.format('MMM, DD YYYY');\n    };\n\n    const getFromDateLabel = () => {\n        const date = toMoment(from);\n        return from ? date.format('MMM, DD YYYY') : '';\n    };\n\n    const hideCalendar = () => {\n        setShowFrom(false);\n        setShowTo(false);\n    };\n\n    const showCalendar = (e: string) => {\n        if (e === 'from') {\n            setShowFrom(true);\n        }\n        if (e === 'to') {\n            setShowTo(true);\n        }\n    };\n\n    useOnClickOutside(\n        wrapper_ref,\n        (event: React.MouseEvent) => {\n            event?.stopPropagation();\n            event?.preventDefault();\n            hideCalendar();\n        },\n        validateClickOutside\n    );\n\n    const setToDate = (date: moment.Moment) => {\n        onChange({ to: toMoment(date).endOf('day') });\n    };\n\n    const setFromDate = (date: moment.Moment) => {\n        onChange({ from: toMoment(date) });\n        hideCalendar();\n    };\n\n    const isPeriodDisabledTo = (date: moment.Moment) => {\n        return date.unix() < from || date.unix() > toMoment().endOf('day').unix();\n    };\n\n    const isPeriodDisabledFrom = (date: moment.Moment) => date.unix() > to;\n\n    if (isDesktop) {\n        return (\n            <React.Fragment>\n                <div id='dt_composite_calendar_inputs' className='composite-calendar__input-fields'>\n                    <InputField\n                        id='dt_calendar_input_from'\n                        current_focus={current_focus}\n                        is_read_only\n                        placeholder={localize('Date from')}\n                        icon={CalendarIcon}\n                        onClick={() => showCalendar('from')}\n                        setCurrentFocus={setCurrentFocus}\n                        value={getFromDateLabel()}\n                    />\n                    <InputField\n                        id='dt_calendar_input_to'\n                        current_focus={current_focus}\n                        is_read_only\n                        placeholder={localize('Date to')}\n                        icon={CalendarIcon}\n                        onClick={() => showCalendar('to')}\n                        setCurrentFocus={setCurrentFocus}\n                        value={getToDateLabel()}\n                    />\n                </div>\n                {show_to && (\n                    <div className='composite-calendar' ref={wrapper_ref}>\n                        <SideList from={from} to={to} items={list} />\n                        <TwoMonthPickerLoadable value={to} onChange={setToDate} isPeriodDisabled={isPeriodDisabledTo} />\n                    </div>\n                )}\n                {show_from && (\n                    <div className='composite-calendar' ref={wrapper_ref}>\n                        <SideList from={from} to={to} items={list} />\n                        <TwoMonthPickerLoadable\n                            value={from}\n                            onChange={setFromDate}\n                            isPeriodDisabled={isPeriodDisabledFrom}\n                        />\n                    </div>\n                )}\n            </React.Fragment>\n        );\n    }\n\n    return (\n        <CompositeCalendarMobile\n            duration_list={list}\n            setCurrentFocus={setCurrentFocus}\n            current_focus={current_focus}\n            {...props}\n        />\n    );\n});\n\nCompositeCalendar.displayName = 'CompositeCalendar';\n\nexport default React.memo(CompositeCalendar);\n","import CompositeCalendar from './composite-calendar';\n\nexport default CompositeCalendar;\n","import classNames from 'classnames';\nimport React from 'react';\n\ntype TReportsMeta = {\n    filter_component: React.ReactNode;\n    className?: string;\n    is_statement?: boolean;\n};\n\nconst ReportsMeta = ({ filter_component, className, is_statement }: TReportsMeta) => {\n    return (\n        <div className={classNames('reports__meta', className)} data-testid='dt_reports_meta_wrapper'>\n            {filter_component && (\n                <div\n                    className={classNames('reports__meta-filter', {\n                        'reports__meta-filter--statement': is_statement,\n                    })}\n                >\n                    {filter_component}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport { ReportsMeta };\n","import classNames from 'classnames';\nimport React from 'react';\nimport { withRouter } from 'react-router';\nimport { DataList, DataTable, usePrevious } from '@deriv/components';\nimport { extractInfoFromShortcode, formatDate, getContractPath, getUnsupportedContracts } from '@deriv/shared';\nimport { localize, Localize } from '@deriv/translations';\nimport { Analytics } from '@deriv-com/analytics';\nimport { ReportsTableRowLoader } from '../Components/Elements/ContentLoader';\nimport CompositeCalendar from '../Components/Form/CompositeCalendar';\nimport { TUnsupportedContractType } from 'Types';\nimport EmptyTradeHistoryMessage from '../Components/empty-trade-history-message';\nimport PlaceholderComponent from '../Components/placeholder-component';\nimport { ReportsMeta } from '../Components/reports-meta';\nimport { getProfitTableColumnsTemplate } from 'Constants/data-table-constants';\nimport { observer, useStore } from '@deriv/stores';\nimport { useReportsStore } from 'Stores/useReportsStores';\nimport { useDevice } from '@deriv-com/ui';\n\ntype TProfitTable = {\n    component_icon: string;\n};\n\ntype TDataListCell = React.ComponentProps<typeof DataList.Cell>;\n\ntype TGetProfitTableColumnsTemplate = ReturnType<typeof getProfitTableColumnsTemplate>;\n\nexport const getRowAction = (row_obj: { [key: string]: unknown }) => {\n    const contract_type = extractInfoFromShortcode(row_obj?.shortcode as string)\n        ?.category?.toString()\n        .toUpperCase();\n    return getUnsupportedContracts()[contract_type as TUnsupportedContractType]\n        ? {\n              component: (\n                  <Localize\n                      i18n_default_text=\"The {{trade_type_name}} contract details aren't currently available. We're working on making them available soon.\"\n                      values={{\n                          trade_type_name: getUnsupportedContracts()[contract_type as TUnsupportedContractType]?.name,\n                      }}\n                  />\n              ),\n          }\n        : getContractPath(Number(row_obj.contract_id));\n};\n\nconst ProfitTable = observer(({ component_icon }: TProfitTable) => {\n    const { client } = useStore();\n    const { profit_table } = useReportsStore();\n    const { currency, is_switching } = client;\n    const {\n        data,\n        date_from,\n        date_to,\n        error,\n        is_empty,\n        is_loading,\n        handleDateChange,\n        handleScroll,\n        has_selected_date,\n        onMount,\n        onUnmount,\n        totals,\n    } = profit_table;\n    const prev_date_from = usePrevious(date_from);\n    const prev_date_to = usePrevious(date_to);\n    const { isDesktop } = useDevice();\n\n    React.useEffect(() => {\n        onMount();\n        Analytics.trackEvent('ce_reports_form', {\n            action: 'choose_report_type',\n            form_name: 'default',\n            subform_name: 'trade_table_form',\n            start_date_filter: formatDate(date_from, 'DD/MM/YYYY', false),\n            end_date_filter: formatDate(date_to, 'DD/MM/YYYY', false),\n        });\n        return () => {\n            onUnmount();\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    React.useEffect(() => {\n        if (prev_date_from !== undefined && prev_date_to !== undefined) {\n            Analytics.trackEvent('ce_reports_form', {\n                action: 'filter_dates',\n                form_name: 'default',\n                subform_name: 'trade_table_form',\n                start_date_filter: formatDate(date_from, 'DD/MM/YYYY', false),\n                end_date_filter: formatDate(date_to, 'DD/MM/YYYY', false),\n            });\n        }\n    }, [date_to, date_from]);\n\n    if (error) return <p>{error}</p>;\n\n    const filter_component = <CompositeCalendar onChange={handleDateChange} from={date_from} to={date_to} />;\n\n    const columns: TGetProfitTableColumnsTemplate = getProfitTableColumnsTemplate(currency, data.length, isDesktop);\n\n    const columns_map = Object.fromEntries(columns.map(column => [column.col_index, column])) as Record<\n        TGetProfitTableColumnsTemplate[number]['col_index'],\n        TGetProfitTableColumnsTemplate[number]\n    >;\n\n    const mobileRowRenderer: React.ComponentProps<typeof DataList>['rowRenderer'] = ({ row, is_footer }) => {\n        const duration_type = row?.duration_type;\n        const formatted_duration_type = duration_type ? duration_type[0].toUpperCase() + duration_type.slice(1) : '';\n        const duration_classname = duration_type ? `duration-type__${duration_type.toLowerCase()}` : '';\n\n        if (is_footer) {\n            return (\n                <div className='data-list__row'>\n                    <DataList.Cell\n                        row={row}\n                        column={columns_map.action_type as TDataListCell['column']}\n                        is_footer={is_footer}\n                    />\n                    <DataList.Cell\n                        className='data-list__row-cell--amount'\n                        row={row}\n                        column={columns_map.profit_loss as TDataListCell['column']}\n                        is_footer={is_footer}\n                    />\n                </div>\n            );\n        }\n\n        return (\n            <>\n                <div className='data-list__row'>\n                    <DataList.Cell row={row} column={columns_map.action_type as TDataListCell['column']} />\n                    <div className={classNames('duration-type', duration_classname)}>\n                        <div className={classNames('duration-type__background', `${duration_classname}__background`)} />\n                        <span className={`${duration_classname}__label`}>{formatted_duration_type}</span>\n                    </div>\n                </div>\n                <div className='data-list__row'>\n                    <DataList.Cell row={row} column={columns_map.transaction_id as TDataListCell['column']} />\n                    <DataList.Cell\n                        className='data-list__row-cell--amount'\n                        row={row}\n                        column={columns_map.currency as TDataListCell['column']}\n                    />\n                </div>\n                <div className='data-list__row'>\n                    <DataList.Cell row={row} column={columns_map.purchase_time as TDataListCell['column']} />\n                    <DataList.Cell\n                        className='data-list__row-cell--amount'\n                        row={row}\n                        column={columns_map.buy_price as TDataListCell['column']}\n                    />\n                </div>\n                <div className='data-list__row'>\n                    <DataList.Cell row={row} column={columns_map.sell_time as TDataListCell['column']} />\n                    <DataList.Cell\n                        className='data-list__row-cell--amount'\n                        row={row}\n                        column={columns_map.sell_price as TDataListCell['column']}\n                    />\n                </div>\n                <div className='data-list__row'>\n                    <DataList.Cell row={row} column={columns_map.profit_loss as TDataListCell['column']} />\n                </div>\n            </>\n        );\n    };\n\n    return (\n        <React.Fragment>\n            <ReportsMeta filter_component={filter_component} className='profit-table__filter' />\n            {is_switching ? (\n                <PlaceholderComponent is_loading />\n            ) : (\n                <React.Fragment>\n                    {data.length === 0 || is_empty ? (\n                        <PlaceholderComponent\n                            is_loading={is_loading}\n                            has_selected_date={has_selected_date}\n                            is_empty={is_empty}\n                            empty_message_component={EmptyTradeHistoryMessage}\n                            component_icon={component_icon}\n                            localized_message={localize('You have no trading activity yet.')}\n                            localized_period_message={localize(\n                                \"You've made no transactions of this type during this period.\"\n                            )}\n                        />\n                    ) : (\n                        <div className='reports__content'>\n                            {isDesktop ? (\n                                <DataTable\n                                    className='profit-table'\n                                    data_source={data}\n                                    columns={columns}\n                                    onScroll={handleScroll}\n                                    footer={totals}\n                                    getRowAction={getRowAction}\n                                    getRowSize={() => 63}\n                                    content_loader={ReportsTableRowLoader}\n                                >\n                                    <PlaceholderComponent is_loading={is_loading} />\n                                </DataTable>\n                            ) : (\n                                <DataList\n                                    className='profit-table'\n                                    data_source={data}\n                                    rowRenderer={mobileRowRenderer}\n                                    getRowAction={getRowAction}\n                                    onScroll={handleScroll}\n                                    footer={totals}\n                                    row_gap={8}\n                                >\n                                    <PlaceholderComponent is_loading={is_loading} />\n                                </DataList>\n                            )}\n                        </div>\n                    )}\n                </React.Fragment>\n            )}\n        </React.Fragment>\n    );\n});\n\nexport default withRouter(ProfitTable);\n","import React from 'react';\nimport { FilterDropdown } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport CompositeCalendar from './Form/CompositeCalendar';\nimport { observer } from '@deriv/stores';\nimport { useReportsStore } from 'Stores/useReportsStores';\n\nconst FilterComponent = observer(() => {\n    const { statement } = useReportsStore();\n    const { action_type, date_from, date_to, handleFilterChange, handleDateChange } = statement;\n\n    const filter_list = [\n        {\n            text: localize('All transactions'),\n            value: 'all',\n        },\n        {\n            text: localize('Buy'),\n            value: 'buy',\n        },\n        {\n            text: localize('Sell'),\n            value: 'sell',\n        },\n        {\n            text: localize('Deposit'),\n            value: 'deposit',\n        },\n        {\n            text: localize('Withdrawal'),\n            value: 'withdrawal',\n        },\n        {\n            text: localize('Transfer'),\n            value: 'transfer',\n        },\n    ];\n\n    return (\n        <React.Fragment>\n            <CompositeCalendar onChange={handleDateChange} from={date_from} to={date_to} />\n            <FilterDropdown\n                dropdown_display_className='dc-dropdown__display--has-suffix-icon'\n                filter_list={filter_list}\n                handleFilterChange={handleFilterChange}\n                initial_selected_filter={action_type}\n            />\n        </React.Fragment>\n    );\n});\n\nexport default FilterComponent;\n","import React from 'react';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\nimport { useDevice } from '@deriv-com/ui';\nimport { DataList, DataTable, Text, Clipboard, usePrevious } from '@deriv/components';\nimport {\n    capitalizeFirstLetter,\n    extractInfoFromShortcode,\n    formatDate,\n    getContractPath,\n    getUnsupportedContracts,\n    isForwardStarting,\n    hasForwardContractStarted,\n} from '@deriv/shared';\nimport { localize, Localize } from '@deriv/translations';\nimport { Analytics } from '@deriv-com/analytics';\nimport { ReportsTableRowLoader } from '../Components/Elements/ContentLoader';\nimport { getStatementTableColumnsTemplate } from '../Constants/data-table-constants';\nimport PlaceholderComponent from '../Components/placeholder-component';\nimport FilterComponent from '../Components/filter-component';\nimport { ReportsMeta } from '../Components/reports-meta';\nimport EmptyTradeHistoryMessage from '../Components/empty-trade-history-message';\nimport { observer, useStore } from '@deriv/stores';\nimport { useReportsStore } from 'Stores/useReportsStores';\nimport { TUnsupportedContractType } from 'Types';\nimport { TSource } from '@deriv/components/src/components/data-table/table-row';\nimport { TRow } from '@deriv/components/src/components/types/common.types';\n\ntype TGetStatementTableColumnsTemplate = ReturnType<typeof getStatementTableColumnsTemplate>;\ntype TColIndex = 'icon' | 'refid' | 'currency' | 'date' | 'action_type' | 'amount' | 'balance';\n\ntype TAction =\n    | {\n          message?: string;\n          component?: React.ReactElement;\n      }\n    | string;\n\ntype TStatement = RouteComponentProps & {\n    component_icon: string;\n};\n\ntype TDetailsComponent = {\n    message: string;\n    action_type: string;\n};\n\ntype TDataList = React.ComponentProps<typeof DataList>;\ntype TDataListCell = React.ComponentProps<typeof DataList.Cell>;\n\nconst DetailsComponent = ({ message = '', action_type = '' }: TDetailsComponent) => {\n    const address_hash_match = /:\\s([0-9a-zA-Z]+.{25,28})/gm.exec(message.split(/,\\s/)[0]);\n    const address_hash = address_hash_match?.[1];\n    const blockchain_hash_match = /:\\s([0-9a-zA-Z]+.{25,34})/gm.exec(message.split(/,\\s/)[1]);\n    const blockchain_hash = blockchain_hash_match?.[1];\n\n    let messages = [message];\n\n    if (address_hash || blockchain_hash) {\n        const lines = message.split(/,\\s/);\n        messages = lines.map((text, index) => {\n            return capitalizeFirstLetter(index !== lines.length - 1 ? `${text}, ` : text);\n        });\n    }\n\n    return (\n        <Text as='div' size='xs' className='statement__row--detail-text' align='center'>\n            {messages.map((text, index) => {\n                return (\n                    <div key={text}>\n                        {text}\n                        {blockchain_hash && index === messages.length - 1 && (\n                            <Clipboard text_copy={blockchain_hash} popoverAlignment='top' />\n                        )}\n                        {address_hash && action_type === 'withdrawal' && index === messages.length - 1 && (\n                            <Clipboard text_copy={address_hash} popoverAlignment='top' />\n                        )}\n                    </div>\n                );\n            })}\n        </Text>\n    );\n};\n\nexport const getRowAction = (row_obj: TSource | TRow): TAction => {\n    let action: TAction = {};\n    const { action_type, desc, id, is_sold, longcode, purchase_time, shortcode, transaction_time, withdrawal_details } =\n        row_obj;\n    if (id && ['buy', 'sell'].includes(action_type)) {\n        const contract_type = extractInfoFromShortcode(shortcode)?.category?.toUpperCase();\n        const unsupportedContractConfig = getUnsupportedContracts()[contract_type as TUnsupportedContractType];\n        const shouldShowForwardStartingNotification =\n            isForwardStarting(shortcode, purchase_time || transaction_time) &&\n            !hasForwardContractStarted(shortcode) &&\n            action_type !== 'sell' &&\n            !is_sold;\n        action = unsupportedContractConfig\n            ? {\n                  message: '',\n                  component: (\n                      <Localize\n                          i18n_default_text=\"The {{trade_type_name}} contract details aren't currently available. We're working on making them available soon.\"\n                          values={{\n                              trade_type_name: unsupportedContractConfig?.name,\n                          }}\n                      />\n                  ),\n              }\n            : getContractPath(id);\n        if (shouldShowForwardStartingNotification)\n            action = {\n                message: '',\n                component: <Localize i18n_default_text=\"You'll see these details once the contract starts.\" />,\n            };\n    } else if (action_type === 'withdrawal') {\n        if (withdrawal_details && longcode) {\n            action = {\n                message: `${withdrawal_details} ${longcode}`,\n            };\n        } else {\n            action = {\n                message: desc,\n            };\n        }\n    } else if (desc && ['deposit', 'transfer', 'adjustment', 'hold', 'release'].includes(action_type)) {\n        action = {\n            message: desc,\n        };\n    }\n\n    // add typeof check because action can be object or string\n    if (typeof action === 'object' && action?.message) {\n        action.component = <DetailsComponent message={action.message} action_type={action_type} />;\n    }\n\n    return action;\n};\n\nconst Statement = observer(({ component_icon }: TStatement) => {\n    const { client, common } = useStore();\n    const { current_language } = common;\n    const { statement } = useReportsStore();\n    const { currency, is_switching, is_virtual } = client;\n    const {\n        action_type,\n        data,\n        date_from,\n        date_to,\n        error,\n        handleScroll,\n        has_selected_date,\n        is_empty,\n        is_loading,\n        onMount,\n        onUnmount,\n    } = statement;\n    const prev_action_type = usePrevious(action_type);\n    const prev_date_from = usePrevious(date_from);\n    const prev_date_to = usePrevious(date_to);\n    const { isDesktop } = useDevice();\n\n    React.useEffect(() => {\n        onMount();\n        Analytics.trackEvent('ce_reports_form', {\n            action: 'choose_report_type',\n            form_name: 'default',\n            subform_name: 'statement_form',\n            transaction_type_filter: action_type,\n            start_date_filter: formatDate(date_from, 'DD/MM/YYYY', false),\n            end_date_filter: formatDate(date_to, 'DD/MM/YYYY', false),\n        });\n        return () => {\n            onUnmount();\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    React.useEffect(() => {\n        if (prev_action_type) {\n            Analytics.trackEvent('ce_reports_form', {\n                action: 'filter_transaction_type',\n                form_name: 'default',\n                subform_name: 'statement_form',\n                transaction_type_filter: action_type,\n            });\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [action_type]);\n\n    React.useEffect(() => {\n        if (prev_date_from !== undefined && prev_date_to !== undefined) {\n            Analytics.trackEvent('ce_reports_form', {\n                action: 'filter_dates',\n                form_name: 'default',\n                subform_name: 'statement_form',\n                start_date_filter: formatDate(date_from, 'DD/MM/YYYY', false),\n                end_date_filter: formatDate(date_to, 'DD/MM/YYYY', false),\n            });\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [date_to, date_from]);\n\n    if (error) return <p>{error}</p>;\n\n    const columns: TGetStatementTableColumnsTemplate = getStatementTableColumnsTemplate(currency, isDesktop);\n    const columns_map = columns.reduce((map, item) => {\n        map[item.col_index as TColIndex] = item;\n        return map;\n    }, {} as Record<TColIndex, typeof columns[number]>);\n\n    const mobileRowRenderer = ({\n        row,\n        passthrough,\n    }: Pick<Parameters<TDataList['rowRenderer']>[0], 'row' | 'passthrough'>) => (\n        <React.Fragment>\n            <div className='data-list__row'>\n                <DataList.Cell\n                    row={row}\n                    column={columns_map.icon as TDataListCell['column']}\n                    passthrough={passthrough}\n                />\n                <DataList.Cell\n                    row={row}\n                    column={columns_map.action_type as TDataListCell['column']}\n                    passthrough={passthrough}\n                />\n            </div>\n            <div className='data-list__row'>\n                <DataList.Cell row={row} column={columns_map.refid as TDataListCell['column']} />\n                <DataList.Cell\n                    className='data-list__row-cell--amount'\n                    row={row}\n                    column={columns_map.currency as TDataListCell['column']}\n                />\n            </div>\n            <div className='data-list__row'>\n                <DataList.Cell row={row} column={columns_map.date as TDataListCell['column']} />\n                <DataList.Cell\n                    className='data-list__row-cell--amount'\n                    row={row}\n                    column={columns_map.amount as TDataListCell['column']}\n                />\n            </div>\n            <div className='data-list__row'>\n                <DataList.Cell row={row} column={columns_map.balance as TDataListCell['column']} />\n            </div>\n        </React.Fragment>\n    );\n\n    return (\n        <React.Fragment>\n            <ReportsMeta\n                className='reports__meta--statement'\n                filter_component={<FilterComponent />}\n                is_statement\n                // key param is needed to force rerendering of the ReportsMeta component on language change\n                key={current_language}\n            />\n            {is_switching ? (\n                <PlaceholderComponent is_loading />\n            ) : (\n                <React.Fragment>\n                    {data?.length === 0 || is_empty ? (\n                        <PlaceholderComponent\n                            is_loading={is_loading}\n                            has_selected_date={has_selected_date}\n                            is_empty={is_empty}\n                            empty_message_component={EmptyTradeHistoryMessage}\n                            component_icon={component_icon}\n                            localized_message={localize('You have no transactions yet.')}\n                            localized_period_message={localize(\n                                \"You've made no transactions of this type during this period.\"\n                            )}\n                        />\n                    ) : (\n                        <div className='reports__content'>\n                            {isDesktop ? (\n                                <DataTable\n                                    className='statement'\n                                    columns={columns}\n                                    content_loader={ReportsTableRowLoader}\n                                    data_source={data}\n                                    getRowAction={getRowAction}\n                                    onScroll={handleScroll}\n                                    passthrough={{\n                                        isTopUp: (item: { action?: string }) => is_virtual && item.action === 'Deposit',\n                                    }}\n                                >\n                                    <PlaceholderComponent is_loading={is_loading} />\n                                </DataTable>\n                            ) : (\n                                <DataList\n                                    className='statement'\n                                    data_source={data}\n                                    getRowAction={getRowAction}\n                                    onScroll={handleScroll}\n                                    rowRenderer={mobileRowRenderer}\n                                    row_gap={8}\n                                    passthrough={{\n                                        isTopUp: (item: { action?: string }) => is_virtual && item.action === 'Deposit',\n                                    }}\n                                >\n                                    <PlaceholderComponent is_loading={is_loading} />\n                                </DataList>\n                            )}\n                        </div>\n                    )}\n                </React.Fragment>\n            )}\n        </React.Fragment>\n    );\n});\n\nexport default withRouter(Statement);\n","import React from 'react';\nimport { Redirect, RouteComponentProps } from 'react-router-dom';\nimport { Div100vhContainer, FadeWrapper, Loading, PageOverlay, SelectNative, VerticalTab } from '@deriv/components';\nimport { getSelectedRoute } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport { observer, useStore } from '@deriv/stores';\nimport { Analytics } from '@deriv-com/analytics';\nimport { useDevice } from '@deriv-com/ui';\nimport { TRoute } from 'Types';\nimport 'Sass/app/modules/reports.scss';\n\ntype TList = {\n    value: React.ComponentType | typeof Redirect;\n    default?: boolean;\n    label: string;\n    icon?: string;\n    path?: string;\n};\n\ntype TReports = {\n    history: RouteComponentProps['history'];\n    location: RouteComponentProps['location'];\n    routes: TRoute[];\n};\n\nconst Reports = observer(({ history, location, routes }: TReports) => {\n    const { client, common, ui } = useStore();\n\n    const { is_logged_in, is_logging_in } = client;\n    const { is_from_derivgo, routeBackInApp } = common;\n    const { is_reports_visible, setReportsTabIndex, reports_route_tab_index, toggleReports } = ui;\n    const { isDesktop } = useDevice();\n\n    React.useEffect(() => {\n        Analytics.trackEvent('ce_reports_form', {\n            action: 'open',\n            form_name: 'default',\n            subform_name: history.location.pathname.split('/')[2],\n            form_source: 'deriv_trader',\n        });\n        toggleReports(true);\n        return () => {\n            toggleReports(false);\n            Analytics.trackEvent('ce_reports_form', {\n                action: 'close',\n                form_name: 'default',\n                subform_name: location.pathname.split('/')[2],\n            });\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const onClickClose = () => routeBackInApp(history);\n\n    const handleRouteChange = (e: React.ChangeEvent<HTMLSelectElement>) => history.push(e.target.value);\n\n    const menu_options = () => {\n        const options: TList[] = [];\n\n        routes.forEach(route => {\n            options.push({\n                default: route.default,\n                icon: route.icon_component,\n                label: route.getTitle(),\n                value: route.component,\n                path: route.path,\n            });\n        });\n\n        return options;\n    };\n\n    const selected_route = getSelectedRoute({ routes, pathname: location.pathname });\n\n    if (!is_logged_in && is_logging_in) {\n        return <Loading is_fullscreen />;\n    }\n\n    return (\n        <FadeWrapper is_visible={is_reports_visible} className='reports-page-wrapper' keyname='reports-page-wrapper'>\n            <div className='reports'>\n                <PageOverlay header={localize('Reports')} onClickClose={onClickClose} is_from_app={is_from_derivgo}>\n                    {isDesktop ? (\n                        <VerticalTab\n                            is_floating\n                            current_path={location.pathname}\n                            is_routed\n                            is_full_width\n                            setVerticalTabIndex={setReportsTabIndex}\n                            vertical_tab_index={selected_route.default ? 0 : reports_route_tab_index}\n                            list={menu_options()}\n                        />\n                    ) : (\n                        <Div100vhContainer className='reports__mobile-wrapper' height_offset='80px'>\n                            <SelectNative\n                                className='reports__route-selection'\n                                list_items={menu_options().map(option => ({\n                                    text: option.label,\n                                    value: option.path ?? '',\n                                }))}\n                                value={selected_route.path ?? ''}\n                                should_show_empty_option={false}\n                                onChange={handleRouteChange}\n                                label={''}\n                                hide_top_placeholder={false}\n                            />\n                            {selected_route?.component && (\n                                <selected_route.component icon_component={selected_route.icon_component} />\n                            )}\n                        </Div100vhContainer>\n                    )}\n                </PageOverlay>\n            </div>\n        </FadeWrapper>\n    );\n});\n\nexport default Reports;\n","import OpenPositions from './open-positions';\nimport ProfitTable from './profit-table';\nimport Statement from './statement';\nimport Reports from './reports';\n\nexport default {\n    OpenPositions,\n    ProfitTable,\n    Statement,\n    Reports,\n};\n","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = '';\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (arg) {\n\t\t\t\tclasses = appendClass(classes, parseValue(arg));\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction parseValue (arg) {\n\t\tif (typeof arg === 'string' || typeof arg === 'number') {\n\t\t\treturn arg;\n\t\t}\n\n\t\tif (typeof arg !== 'object') {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn classNames.apply(null, arg);\n\t\t}\n\n\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\treturn arg.toString();\n\t\t}\n\n\t\tvar classes = '';\n\n\t\tfor (var key in arg) {\n\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\tclasses = appendClass(classes, key);\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction appendClass (value, newClass) {\n\t\tif (!newClass) {\n\t\t\treturn value;\n\t\t}\n\t\n\t\tif (value) {\n\t\t\treturn value + ' ' + newClass;\n\t\t}\n\t\n\t\treturn value + newClass;\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n"],"names":["globalThis","window","global","self","v","Object","E","Function","h","O","t","defaultValue","s","initializeWithValue","o","i","e","matchMedia","matches","c","n","r","addListener","addEventListener","removeListener","removeEventListener","d","isDesktop","isMobile","isTablet","isTabletPortrait","isMobileOrTabletLandscape","observer","_ref","contract_info","_useStore","useStore","common","portfolio","server_time","is_loading","React","current_tick","tick_count","getCurrentTick","ProgressSlider","expiry_time","date_expiry","getCardLabels","start_time","date_start","ticks_count","getProfitOrLoss","value","replace","props","amount","currency","is_footer","is_sell_requested","profit","useDevice","onClickSell","className","classNames","Number","Money","Math","abs","ArrowIndicator","ContractCard","Sell","contract_id","_shortcode","_payload$action_type","_action_type","has_full_contract_title","icon","payload","_ref$should_show_accu","should_show_accumulator","_ref$should_show_mult","should_show_multiplier","should_show_category_icon","shortcode","info_from_shortcode","extractInfoFromShortcode","is_high_low","isHighLow","shortcode_info","category_label","getTradeTypeName","category","showButtonName","hover_message","concat","showMainTitle","trim","Popover","classNameTarget","classNameBubble","alignment","message","getMarketName","underlying","is_bubble_hover_enabled","disable_target_icon","Icon","size","display_name","IconTradeTypes","type","toLowerCase","color","multiplier","growth_rate","includes","action_type","width","height","children","status","Text","weight","map","buy","deposit","hold","release","sell","withdrawal","default","adjustment","transfer","__assign","assign","arguments","length","p","prototype","hasOwnProperty","call","apply","this","SVG","_a","_b","animate","animateBegin","_c","backgroundColor","_d","backgroundOpacity","_e","baseUrl","_f","foregroundColor","_g","foregroundOpacity","_h","gradientRatio","_j","gradientDirection","uniqueKey","_k","interval","_l","rtl","_m","speed","_o","style","_p","title","_q","beforeMask","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__rest","fixedId","random","toString","substring","idClip","idGradient","idAria","rtlStyle","transform","keyTimes","dur","gradientTransform","undefined","createElement","role","id","isValidElement","x","y","clipPath","fill","offset","stopColor","stopOpacity","attributeName","values","repeatCount","begin","ContentLoader","ReactContentLoaderFacebook","viewBox","rx","cx","cy","ReportsTableRowLoader","ry","has_selected_date","component_icon","localized_message","localized_period_message","data_testid","align","is_invisible","theme","invisible","Array","from","inx","key","empty_message_component","is_empty","EmptyMessageComponent","Loading","EmptyPlaceholderWrapper","PlaceholderComponent","EmptyTradeHistoryMessage","Localize","i18n_default_text","isPurchaseMissing","item","isNaN","purchase","getRowAction","row_obj","action","unsupportedContractConfig","getUnsupportedContracts","hasContractStarted","component","trade_type_name","name","getContractPath","OpenPositionsTable","_ref2","accumulator_rate","active_positions","columns","contract_type_value","mobileRowRenderer","row_size","totals","Analytics","trackEvent","form_name","subform_name","trade_type_filter","growth_type_filter","DataTable","preloaderCheck","footer","data_source","getRowSize","content_loader","DataList","rowRenderer","row_gap","keyMapper","MobileRowRenderer","_row$contract_info","_ref$row","row","_ref$columns_map","columns_map","_ref$server_time","toMoment","onClickCancel","measure","_objectWithoutProperties","_excluded","Cell","column","payout","indicative","contract_update","purchase_time","turbos_duration_unit","getDurationUnitText","getDurationPeriod","duration_type","getContractDurationType","isTurbosContract","contract_type","longcode","progress_value","getTimePercentage","isMultiplierContract","isAccumulatorContract","PositionsDrawerCard","_extends","is_link_disabled","isVanillaContract","ProgressSliderMobile","ProgressBar","label","reference","OpenPositions","_contract_types$find","client","ui","contract_trade","error","getPositionById","is_accumulator","is_multiplier","onMount","onClickRemove","removePositionById","hide_accu_in_dropdown","is_eu","NotificationMessages","notification_messages_ui","addToast","current_focus","is_mobile","removeToast","setCurrentFocus","should_show_cancellation_warning","toggleCancellationWarning","store_props","getContractById","_React$useState2","_slicedToArray","has_accumulator_contract","setHasAccumulatorContract","_React$useState4","has_multiplier_contract","setHasMultiplierContract","previous_active_positions","usePrevious","contract_types","contract_type_bot","URLSearchParams","location","search","get","text","localize","is_default","is_multiplier_bot","is_accumulator_bot","generateContractTypes","_React$useState6","find","setContractTypeValue","prev_contract_type_value","accumulator_rates","_React$useState8","setAccumulatorRate","prev_accumulator_rate","is_accumulator_selected","is_multiplier_selected","contract_types_list","filter","_ref3","active_positions_filtered","_ref4","getGrowthRatePercentage","active_positions_filtered_totals","ask_price","buy_price","bid_price","forEach","portfolio_pos","_portfolio_pos$contra","_portfolio_pos$contra2","prices","getTotalProfit","cancellation","take_profit","_contract_info$limit_","_contract_info$limit_2","limit_order","order_amount","profit_loss","getOpenPositionsTotals","checkForAccuAndMultContracts","some","_ref5","_ref6","_ref25","col_index","renderCellContent","_ref26","MarketSymbolIconRow","_ref27","_ref28","_row_obj$contract_inf2","CurrencyWrapper","getCurrencyDisplayCode","_ref29","_ref30$ask_price","cancellation_price","_ref31","_ref32","cell_value","components","_ref33","_row_obj$contract_inf3","_ref34","stop_loss","has_sign","_ref35","total_profit","_ref36","_ref37","MultiplierCloseActions","getMultiplierOpenPositionsColumnsTemplate","_ref39","_ref40","_ref41","_ref42","_row_obj$contract_inf4","_ref43","_ref44","_row_obj$contract_inf5","_ref46","_ref47","_ref48","ContractCardSell","getAccumulatorOpenPositionsColumnsTemplate","_ref15","is_vanilla","is_turbos","_ref16","_row_obj$contract_inf","_ref17","renderHeader","_ref18","_ref19","_row_obj$barrier","non_vanilla_payout","barrier","toFixed","_ref20","_ref21","_ref22","_ref23","IndicativeCell","_ref24","ProgressSliderStream","getOpenPositionsColumnsTemplate","classname","shared_props","args","Dropdown","is_align_text_left","list","onChange","target","SelectNative","list_items","should_show_empty_option","withRouter","RadioButton","selected_value","htmlFor","onClick","as","line_height","CUSTOM_KEY","CompositeCalendarMobile","_applied_date_range$l","input_date_range","duration_list","to","date_range","range","format","from_date","setFrom","to_date","setTo","is_open","setIsOpen","applied_date_range","setAppliedDateRange","_React$useState10","selected_date_range","setSelectedDateRange","today","selectDateRange","_selected_date_range","is_today","new_from","duration","startOf","subtract","add","endOf","is_batch","applyDateRange","new_to","new_date_range","selectDate","_e$target","_e$target2","onDateRangeChange","_date_range","InputField","is_read_only","MobileDialog","portal_element_id","visible","has_content_scroll","onClose","content_height_offset","Button","has_effect","secondary","large","primary","DatePicker","placeholder","max_date","min_date","tertiary","displayName","is_active","items","flag","unix","ceil","isActive","ListItem","TwoMonthPickerLoadable","Loadable","loader","loading","render","loaded","Component","CompositeCalendar","show_to","setShowTo","show_from","setShowFrom","wrapper_ref","hideCalendar","showCalendar","useOnClickOutside","event","stopPropagation","preventDefault","_wrapper_ref$current","current","contains","date","CalendarIcon","daysFromTodayTo","getToDateLabel","ref","SideList","isPeriodDisabled","ReportsMeta","filter_component","is_statement","_extractInfoFromShort","_extractInfoFromShort2","_getUnsupportedContra","toUpperCase","ProfitTable","profit_table","useReportsStore","is_switching","data","date_from","date_to","handleDateChange","handleScroll","onUnmount","prev_date_from","prev_date_to","start_date_filter","formatDate","end_date_filter","items_count","_ref7","item_count","transaction_id","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","ProfitLossCell","getProfitTableColumnsTemplate","fromEntries","onScroll","formatted_duration_type","slice","duration_classname","sell_time","sell_price","FilterComponent","statement","handleFilterChange","filter_list","FilterDropdown","dropdown_display_className","initial_selected_filter","DetailsComponent","_ref$message","_ref$action_type","address_hash_match","exec","split","address_hash","blockchain_hash_match","blockchain_hash","messages","lines","index","capitalizeFirstLetter","Clipboard","text_copy","popoverAlignment","_action","desc","is_sold","transaction_time","withdrawal_details","shouldShowForwardStartingNotification","isForwardStarting","hasForwardContractStarted","_typeof","Statement","current_language","is_virtual","prev_action_type","transaction_type_filter","passthrough","isTopUp","app_id","Label","mode","getStatementTableColumnsTemplate","reduce","refid","balance","Reports","_selected_route$path","history","routes","is_logged_in","is_logging_in","is_from_derivgo","routeBackInApp","is_reports_visible","setReportsTabIndex","reports_route_tab_index","toggleReports","pathname","form_source","menu_options","options","route","push","icon_component","getTitle","path","selected_route","getSelectedRoute","is_fullscreen","FadeWrapper","is_visible","keyname","PageOverlay","header","onClickClose","is_from_app","VerticalTab","is_floating","current_path","is_routed","is_full_width","setVerticalTabIndex","vertical_tab_index","Div100vhContainer","height_offset","option","_option$path","hide_top_placeholder","hasOwn","classes","arg","appendClass","parseValue","isArray","newClass","module","exports"],"sourceRoot":""}