{"version":3,"file":"reports/js/reports.reports-app.3956a17fcbd36b2e3e28.js","mappings":"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","sources":["webpack://@deriv/reports/./src/Stores/Modules/Profit/Helpers/format-request.ts","webpack://@deriv/reports/./src/Stores/base-store.js","webpack://@deriv/reports/./src/Stores/Modules/Profit/profit-store.js","webpack://@deriv/reports/./src/Stores/Modules/Profit/Helpers/format-response.ts","webpack://@deriv/reports/./src/Stores/Modules/Statement/Helpers/format-response.ts","webpack://@deriv/reports/./src/Stores/Modules/Statement/statement-store.js","webpack://@deriv/reports/./src/Stores/useReportsStores.tsx","webpack://@deriv/reports/./src/Constants/routes-config.tsx","webpack://@deriv/reports/./src/Components/Routes/route-with-sub-routes.tsx","webpack://@deriv/reports/./src/Components/Routes/binary-routes.tsx","webpack://@deriv/reports/./src/Components/Routes/index.ts","webpack://@deriv/reports/./src/Components/Errors/error-component.tsx","webpack://@deriv/reports/./src/Components/Errors/index.ts","webpack://@deriv/reports/./src/Containers/routes.tsx","webpack://@deriv/reports/../stores/src/stores/FeatureFlagsStore.ts","webpack://@deriv/reports/../stores/src/stores/BaseStore.ts","webpack://@deriv/reports/../stores/src/storeProvider.tsx","webpack://@deriv/reports/./src/reports-providers.tsx","webpack://@deriv/reports/./src/app.tsx","webpack://@deriv/reports/../stores/src/storeContext.ts","webpack://@deriv/reports/../stores/src/useStore.ts"],"sourcesContent":["import { epochToMoment, toMoment } from '@deriv/shared';\n\ntype TDateToOrFrom = number | null;\ntype TPartialFetchTime = boolean | number;\n\nconst getDateTo = (date_to: TDateToOrFrom) => {\n    const today = toMoment().startOf('day').unix();\n    if (date_to && today > date_to) {\n        return date_to;\n    }\n    return epochToMoment(today).add(1, 'd').subtract(1, 's').unix();\n};\n\nconst getDateFrom = (\n    should_load_partially: boolean,\n    partial_fetch_time: TPartialFetchTime,\n    date_from: TDateToOrFrom,\n    date_to: TDateToOrFrom\n) => {\n    const today = toMoment().startOf('day').unix();\n    if (date_to && today > date_to) {\n        return date_from;\n    }\n    return should_load_partially && partial_fetch_time ? partial_fetch_time : date_from;\n};\n\nconst shouldSendDateFrom = (\n    date_from: TDateToOrFrom,\n    should_load_partially: boolean,\n    partial_fetch_time: TPartialFetchTime,\n    date_to: TDateToOrFrom\n) => {\n    const today = toMoment().startOf('day').unix();\n    if (date_to && today > date_to) {\n        return !!date_from || should_load_partially;\n    }\n    return should_load_partially ? partial_fetch_time || date_from : !!date_from || false;\n};\n\nconst getDateBoundaries = (\n    date_from: TDateToOrFrom,\n    date_to: TDateToOrFrom,\n    partial_fetch_time: TPartialFetchTime,\n    should_load_partially = false\n) => ({\n    // eslint-disable-next-line max-len\n    ...(shouldSendDateFrom(date_from, should_load_partially, partial_fetch_time, date_to) && {\n        date_from: getDateFrom(should_load_partially, partial_fetch_time, date_from, date_to),\n    }),\n    ...((date_to || should_load_partially) && { date_to: getDateTo(date_to) }),\n});\n\nexport default getDateBoundaries;\n","import { action, intercept, makeObservable, observable, reaction, toJS, when } from 'mobx';\n\nimport { isEmptyObject, isProduction, Validator } from '@deriv/shared';\n\n/**\n * BaseStore class is the base class for all defined stores in the application. It handles some stuff such as:\n *  1. Creating snapshot object from the store.\n *  2. Saving the store's snapshot in local/session storage and keeping them in sync.\n */\nexport default class BaseStore {\n    /**\n     * An enum object to define LOCAL_STORAGE and SESSION_STORAGE\n     */\n    static STORAGES = Object.freeze({\n        LOCAL_STORAGE: Symbol('LOCAL_STORAGE'),\n        SESSION_STORAGE: Symbol('SESSION_STORAGE'),\n    });\n\n    validation_errors = {};\n\n    validation_rules = {};\n\n    preSwitchAccountDisposer = null;\n    pre_switch_account_listener = null;\n\n    switchAccountDisposer = null;\n    switch_account_listener = null;\n\n    logoutDisposer = null;\n    logout_listener = null;\n\n    clientInitDisposer = null;\n    client_init_listener = null;\n\n    networkStatusChangeDisposer = null;\n    network_status_change_listener = null;\n\n    themeChangeDisposer = null;\n    theme_change_listener = null;\n\n    realAccountSignupEndedDisposer = null;\n    real_account_signup_ended_listener = null;\n\n    partial_fetch_time = 0;\n\n    /**\n     * Constructor of the base class that gets properties' name of child which should be saved in storages\n     *\n     * @param {Object} options - An object that contains the following properties:\n     *     @property {Object}   root_store - An object that contains the root store of the app.\n     *     @property {String[]} local_storage_properties - A list of properties' names that should be kept in localStorage.\n     *     @property {String[]} session_storage_properties - A list of properties' names that should be kept in sessionStorage.\n     *     @property {Object}   validation_rules - An object that contains the validation rules for each property of the store.\n     *     @property {String}   store_name - Explicit store name for browser application storage (to bypass minification)\n     */\n    constructor(options = {}) {\n        makeObservable(this, {\n            validation_errors: observable,\n            validation_rules: observable,\n            partial_fetch_time: observable,\n            retrieveFromStorage: action,\n            setValidationErrorMessages: action,\n            setValidationRules: action,\n            addRule: action,\n            validateProperty: action,\n            validateAllProperties: action,\n            onSwitchAccount: action.bound,\n            onPreSwitchAccount: action.bound,\n            onLogout: action.bound,\n            onClientInit: action.bound,\n            onNetworkStatusChange: action.bound,\n            onThemeChange: action.bound,\n            onRealAccountSignupEnd: action.bound,\n            disposePreSwitchAccount: action.bound,\n            disposeSwitchAccount: action.bound,\n            disposeLogout: action.bound,\n            disposeClientInit: action.bound,\n            disposeNetworkStatusChange: action.bound,\n            disposeThemeChange: action.bound,\n            disposeRealAccountSignupEnd: action.bound,\n            onUnmount: action.bound,\n            assertHasValidCache: action.bound,\n        });\n\n        const { root_store, local_storage_properties, session_storage_properties, validation_rules, store_name } =\n            options;\n\n        Object.defineProperty(this, 'root_store', {\n            enumerable: false,\n            writable: true,\n        });\n        Object.defineProperty(this, 'local_storage_properties', {\n            enumerable: false,\n            writable: true,\n        });\n        Object.defineProperty(this, 'session_storage_properties', {\n            enumerable: false,\n            writable: true,\n        });\n\n        const has_local_or_session_storage =\n            (local_storage_properties && local_storage_properties.length) ||\n            (session_storage_properties && session_storage_properties.length);\n\n        if (has_local_or_session_storage) {\n            if (!store_name) {\n                throw new Error('store_name is required for local/session storage');\n            }\n\n            Object.defineProperty(this, 'store_name', {\n                value: store_name,\n                enumerable: false,\n                writable: false,\n            });\n        }\n\n        this.root_store = root_store;\n        this.local_storage_properties = local_storage_properties || [];\n        this.session_storage_properties = session_storage_properties || [];\n\n        setTimeout(() => {\n            this.setValidationRules(validation_rules);\n\n            this.setupReactionForLocalStorage();\n            this.setupReactionForSessionStorage();\n            this.retrieveFromStorage();\n        }, 0);\n    }\n\n    /**\n     * Returns an snapshot of the current store\n     *\n     * @param {String[]} properties - A list of properties' names that should be in the snapshot.\n     *\n     * @return {Object} Returns a cloned object of the store.\n     */\n    getSnapshot(properties) {\n        let snapshot = toJS(this);\n\n        if (!isEmptyObject(this.root_store)) {\n            snapshot.root_store = this.root_store;\n        }\n\n        if (properties && properties.length) {\n            snapshot = properties.reduce((result, p) => Object.assign(result, { [p]: snapshot[p] }), {});\n        }\n\n        return snapshot;\n    }\n\n    /**\n     * Sets up a reaction on properties which are mentioned in `local_storage_properties`\n     *  and invokes `saveToStorage` when there are any changes on them.\n     *\n     */\n    setupReactionForLocalStorage() {\n        if (this.local_storage_properties.length) {\n            reaction(\n                () => this.local_storage_properties.map(i => this[i]),\n                () => this.saveToStorage(this.local_storage_properties, BaseStore.STORAGES.LOCAL_STORAGE)\n            );\n        }\n    }\n\n    /**\n     * Sets up a reaction on properties which are mentioned in `session_storage_properties`\n     *  and invokes `saveToStorage` when there are any changes on them.\n     *\n     */\n    setupReactionForSessionStorage() {\n        if (this.session_storage_properties.length) {\n            reaction(\n                () => this.session_storage_properties.map(i => this[i]),\n                () => this.saveToStorage(this.session_storage_properties, BaseStore.STORAGES.SESSION_STORAGE)\n            );\n        }\n    }\n\n    /**\n     * Removes properties that are not passed from the snapshot of the store and saves it to the passed storage\n     *\n     * @param {String[]} properties - A list of the store's properties' names which should be saved in the storage.\n     * @param {Symbol}   storage    - A symbol object that defines the storage which the snapshot should be stored in it.\n     *\n     */\n    saveToStorage(properties, storage) {\n        const snapshot = JSON.stringify(this.getSnapshot(properties), (key, value) => {\n            if (value !== null) return value;\n            return undefined;\n        });\n\n        if (storage === BaseStore.STORAGES.LOCAL_STORAGE) {\n            localStorage.setItem(this.store_name, snapshot);\n        } else if (storage === BaseStore.STORAGES.SESSION_STORAGE) {\n            sessionStorage.setItem(this.store_name, snapshot);\n        }\n    }\n\n    /**\n     * Retrieves saved snapshot of the store and assigns to the current instance.\n     *\n     */\n    retrieveFromStorage() {\n        const local_storage_snapshot = JSON.parse(localStorage.getItem(this.store_name, {}));\n        const session_storage_snapshot = JSON.parse(sessionStorage.getItem(this.store_name, {}));\n\n        const snapshot = { ...local_storage_snapshot, ...session_storage_snapshot };\n\n        Object.keys(snapshot).forEach(k => (this[k] = snapshot[k]));\n    }\n\n    /**\n     * Sets validation error messages for an observable property of the store\n     *\n     * @param {String} propertyName - The observable property's name\n     * @param [{String}] messages - An array of strings that contains validation error messages for the particular property.\n     *\n     */\n    setValidationErrorMessages(propertyName, messages) {\n        const is_different = () =>\n            !!this.validation_errors[propertyName]\n                .filter(x => !messages.includes(x))\n                .concat(messages.filter(x => !this.validation_errors[propertyName].includes(x))).length;\n        if (!this.validation_errors[propertyName] || is_different()) {\n            this.validation_errors[propertyName] = messages;\n        }\n    }\n\n    /**\n     * Sets validation rules\n     *\n     * @param {object} rules\n     *\n     */\n    setValidationRules(rules = {}) {\n        Object.keys(rules).forEach(key => {\n            this.addRule(key, rules[key]);\n        });\n    }\n\n    /**\n     * Adds rules to the particular property\n     *\n     * @param {String} property\n     * @param {String} rules\n     *\n     */\n    addRule(property, rules) {\n        this.validation_rules[property] = rules;\n\n        intercept(this, property, change => {\n            this.validateProperty(property, change.newValue);\n            return change;\n        });\n    }\n\n    /**\n     * Validates a particular property of the store\n     *\n     * @param {String} property - The name of the property in the store\n     * @param {object} value    - The value of the property, it can be undefined.\n     *\n     */\n    validateProperty(property, value) {\n        const trigger = this.validation_rules[property].trigger;\n        const inputs = { [property]: value !== undefined ? value : this[property] };\n        const validation_rules = { [property]: this.validation_rules[property].rules || [] };\n\n        if (!!trigger && Object.hasOwnProperty.call(this, trigger)) {\n            inputs[trigger] = this[trigger];\n            validation_rules[trigger] = this.validation_rules[trigger].rules || [];\n        }\n\n        const validator = new Validator(inputs, validation_rules, this);\n\n        validator.isPassed();\n\n        Object.keys(inputs).forEach(key => {\n            this.setValidationErrorMessages(key, validator.errors.get(key));\n        });\n    }\n\n    /**\n     * Validates all properties which validation rule has been set for.\n     *\n     */\n    validateAllProperties() {\n        const validation_rules = Object.keys(this.validation_rules);\n        const validation_errors = Object.keys(this.validation_errors);\n\n        validation_rules.forEach(p => {\n            this.validateProperty(p, this[p]);\n        });\n\n        // Remove keys that are present in error, but not in rules:\n        validation_errors.forEach(error => {\n            if (!validation_rules.includes(error)) {\n                delete this.validation_errors[error];\n            }\n        });\n    }\n\n    onSwitchAccount(listener) {\n        if (listener) {\n            this.switch_account_listener = listener;\n\n            this.switchAccountDisposer = when(\n                () => this.root_store.client.switch_broadcast,\n                () => {\n                    try {\n                        const result = this.switch_account_listener();\n                        if (result && result.then && typeof result.then === 'function') {\n                            result.then(() => {\n                                this.root_store.client.switchEndSignal();\n                                this.onSwitchAccount(this.switch_account_listener);\n                            });\n                        } else {\n                            throw new Error('Switching account listeners are required to return a promise.');\n                        }\n                    } catch (error) {\n                        // there is no listener currently active. so we can just ignore the error raised from treating\n                        // a null object as a function. Although, in development mode, we throw a console error.\n                        if (!isProduction()) {\n                            console.error(error); // eslint-disable-line\n                        }\n                    }\n                }\n            );\n        }\n    }\n\n    onPreSwitchAccount(listener) {\n        if (listener) {\n            this.pre_switch_account_listener = listener;\n            this.preSwitchAccountDisposer = when(\n                () => this.root_store.client.pre_switch_broadcast,\n                () => {\n                    try {\n                        const result = this.pre_switch_account_listener?.();\n                        if (result && result.then && typeof result.then === 'function') {\n                            result.then(() => {\n                                this.root_store.client.setPreSwitchAccount(false);\n                                this.onPreSwitchAccount(this.pre_switch_account_listener);\n                            });\n                        } else {\n                            throw new Error('Pre-switch account listeners are required to return a promise.');\n                        }\n                    } catch (error) {\n                        // there is no listener currently active. so we can just ignore the error raised from treating\n                        // a null object as a function. Although, in development mode, we throw a console error.\n                        if (!isProduction()) {\n                            console.error(error); // eslint-disable-line\n                        }\n                    }\n                }\n            );\n        }\n    }\n\n    onLogout(listener) {\n        this.logoutDisposer = when(\n            () => this.root_store.client.has_logged_out,\n            async () => {\n                try {\n                    const result = this.logout_listener();\n                    if (result && result.then && typeof result.then === 'function') {\n                        result.then(() => {\n                            this.root_store.client.setLogout(false);\n                            this.onLogout(this.logout_listener);\n                        });\n                    } else {\n                        throw new Error('Logout listeners are required to return a promise.');\n                    }\n                } catch (error) {\n                    // there is no listener currently active. so we can just ignore the error raised from treating\n                    // a null object as a function. Although, in development mode, we throw a console error.\n                    if (!isProduction()) {\n                        console.error(error); // eslint-disable-line\n                    }\n                }\n            }\n        );\n        this.logout_listener = listener;\n    }\n\n    onClientInit(listener) {\n        this.clientInitDisposer = when(\n            () => this.root_store.client.initialized_broadcast,\n            async () => {\n                try {\n                    const result = this.client_init_listener();\n                    if (result && result.then && typeof result.then === 'function') {\n                        result.then(() => {\n                            this.root_store.client.setInitialized(false);\n                            this.onClientInit(this.client_init_listener);\n                        });\n                    } else {\n                        throw new Error('Client init listeners are required to return a promise.');\n                    }\n                } catch (error) {\n                    // there is no listener currently active. so we can just ignore the error raised from treating\n                    // a null object as a function. Although, in development mode, we throw a console error.\n                    if (!isProduction()) {\n                        console.error(error); // eslint-disable-line\n                    }\n                }\n            }\n        );\n        this.client_init_listener = listener;\n    }\n\n    onNetworkStatusChange(listener) {\n        this.networkStatusChangeDisposer = reaction(\n            () => this.root_store.common.is_network_online,\n            is_online => {\n                try {\n                    this.network_status_change_listener(is_online);\n                } catch (error) {\n                    // there is no listener currently active. so we can just ignore the error raised from treating\n                    // a null object as a function. Although, in development mode, we throw a console error.\n                    if (!isProduction()) {\n                        console.error(error); // eslint-disable-line\n                    }\n                }\n            }\n        );\n\n        this.network_status_change_listener = listener;\n    }\n\n    onThemeChange(listener) {\n        this.themeChangeDisposer = reaction(\n            () => this.root_store.ui.is_dark_mode_on,\n            is_dark_mode_on => {\n                try {\n                    this.theme_change_listener(is_dark_mode_on);\n                } catch (error) {\n                    // there is no listener currently active. so we can just ignore the error raised from treating\n                    // a null object as a function. Although, in development mode, we throw a console error.\n                    if (!isProduction()) {\n                        console.error(error); // eslint-disable-line\n                    }\n                }\n            }\n        );\n\n        this.theme_change_listener = listener;\n    }\n\n    onRealAccountSignupEnd(listener) {\n        this.realAccountSignupEndedDisposer = when(\n            () => this.root_store.ui.has_real_account_signup_ended,\n            () => {\n                try {\n                    const result = this.real_account_signup_ended_listener();\n                    if (result && result.then && typeof result.then === 'function') {\n                        result.then(() => {\n                            this.root_store.ui.setRealAccountSignupEnd(false);\n                            this.onRealAccountSignupEnd(this.real_account_signup_ended_listener);\n                        });\n                    } else {\n                        throw new Error('Real account signup listeners are required to return a promise.');\n                    }\n                } catch (error) {\n                    // there is no listener currently active. so we can just ignore the error raised from treating\n                    // a null object as a function. Although, in development mode, we throw a console error.\n                    if (!isProduction()) {\n                        console.error(error); // eslint-disable-line\n                    }\n                }\n            }\n        );\n\n        this.real_account_signup_ended_listener = listener;\n    }\n\n    disposePreSwitchAccount() {\n        if (typeof this.preSwitchAccountDisposer === 'function') {\n            this.preSwitchAccountDisposer();\n        }\n        this.pre_switch_account_listener = null;\n    }\n\n    disposeSwitchAccount() {\n        if (typeof this.switchAccountDisposer === 'function') {\n            this.switchAccountDisposer();\n        }\n        this.switch_account_listener = null;\n    }\n\n    disposeLogout() {\n        if (typeof this.logoutDisposer === 'function') {\n            this.logoutDisposer();\n        }\n        this.logout_listener = null;\n    }\n\n    disposeClientInit() {\n        if (typeof this.clientInitDisposer === 'function') {\n            this.clientInitDisposer();\n        }\n        this.client_init_listener = null;\n    }\n\n    disposeNetworkStatusChange() {\n        if (typeof this.networkStatusChangeDisposer === 'function') {\n            this.networkStatusChangeDisposer();\n        }\n        this.network_status_change_listener = null;\n    }\n\n    disposeThemeChange() {\n        if (typeof this.themeChangeDisposer === 'function') {\n            this.themeChangeDisposer();\n        }\n        this.theme_change_listener = null;\n    }\n\n    disposeRealAccountSignupEnd() {\n        if (typeof this.realAccountSignupEndedDisposer === 'function') {\n            this.realAccountSignupEndedDisposer();\n        }\n        this.real_account_signup_ended_listener = null;\n    }\n\n    onUnmount() {\n        this.disposePreSwitchAccount();\n        this.disposeSwitchAccount();\n        this.disposeLogout();\n        this.disposeClientInit();\n        this.disposeNetworkStatusChange();\n        this.disposeThemeChange();\n        this.disposeRealAccountSignupEnd();\n    }\n\n    assertHasValidCache(loginid, ...reactions) {\n        // account was changed when this was unmounted.\n        if (this.root_store.client.loginid !== loginid) {\n            reactions.forEach(act => act());\n            this.partial_fetch_time = false;\n        }\n    }\n}\n","import debounce from 'lodash.debounce';\nimport { action, computed, observable, makeObservable, override } from 'mobx';\nimport { filterDisabledPositions, toMoment, WS } from '@deriv/shared';\n\nimport getDateBoundaries from './Helpers/format-request';\nimport { formatProfitTableTransactions } from './Helpers/format-response';\nimport BaseStore from '../../base-store';\n\nconst batch_size = 50;\nconst delay_on_scroll_time = 150;\n\nexport default class ProfitTableStore extends BaseStore {\n    data = [];\n    date_from = null;\n    date_to = toMoment().startOf('day').add(1, 'd').subtract(1, 's').unix();\n    error = '';\n    has_loaded_all = false;\n    is_loading = true;\n    filtered_date_range;\n\n    // `client_loginid` is only used to detect if this is in sync with the client-store, don't rely on\n    // this for calculations. Use the client.currency instead.\n    client_loginid = '';\n\n    constructor({ root_store }) {\n        // TODO: [mobx-undecorate] verify the constructor arguments and the arguments of this automatically generated super call\n        super({ root_store });\n\n        makeObservable(this, {\n            data: observable,\n            date_from: observable,\n            date_to: observable,\n            error: observable,\n            has_loaded_all: observable,\n            is_loading: observable,\n            filtered_date_range: observable,\n            client_loginid: observable,\n            is_empty: computed,\n            has_selected_date: computed,\n            fetchNextBatch: action.bound,\n            profitTableResponseHandler: action.bound,\n            handleScroll: action.bound,\n            networkStatusChangeListener: action.bound,\n            onMount: action.bound,\n            onUnmount: override,\n            totals: computed,\n            accountSwitcherListener: action.bound,\n            clearTable: action.bound,\n            clearDateFilter: action.bound,\n            handleDateChange: action.bound,\n        });\n    }\n\n    get is_empty() {\n        return !this.is_loading && this.data.length === 0;\n    }\n\n    get has_selected_date() {\n        return !!(this.date_from || this.date_to);\n    }\n\n    shouldFetchNextBatch(is_mounting) {\n        return !!is_mounting || (!this.has_loaded_all && !this.is_loading);\n    }\n\n    async fetchNextBatch(shouldFilterContractTypes, isMounting) {\n        if (!this.shouldFetchNextBatch(isMounting)) return;\n        this.is_loading = true;\n        const dateParams = getDateBoundaries(this.date_from, this.date_to, 0, false);\n        const params = shouldFilterContractTypes\n            ? {\n                  ...getDateBoundaries(\n                      this.root_store.modules.positions?.dateFrom,\n                      this.root_store.modules.positions?.dateTo,\n                      0,\n                      false\n                  ),\n                  contract_type: this.root_store.modules.positions.filteredContractTypes,\n              }\n            : dateParams;\n\n        const response = await WS.profitTable(batch_size, this.data.length, params);\n\n        this.profitTableResponseHandler(response);\n    }\n\n    profitTableResponseHandler(response) {\n        if ('error' in response) {\n            this.error = response.error.message;\n            return;\n        }\n\n        const formatted_transactions = response.profit_table.transactions\n            .map(transaction =>\n                formatProfitTableTransactions(\n                    transaction,\n                    this.root_store.client.currency,\n                    this.root_store.active_symbols.active_symbols\n                )\n            )\n            .filter(filterDisabledPositions);\n\n        this.data = [...this.data, ...formatted_transactions];\n        this.has_loaded_all = formatted_transactions.length < batch_size;\n        this.is_loading = false;\n    }\n\n    fetchOnScroll = debounce((left, shouldFilterContractTypes) => {\n        if (left < 1500) {\n            this.fetchNextBatch(shouldFilterContractTypes);\n        }\n    }, delay_on_scroll_time);\n\n    handleScroll(event, shouldFilterContractTypes) {\n        const { scrollTop, scrollHeight, clientHeight } = event.target;\n        const left_to_scroll = scrollHeight - (scrollTop + clientHeight);\n        this.fetchOnScroll(left_to_scroll, shouldFilterContractTypes);\n    }\n\n    networkStatusChangeListener(is_online) {\n        this.is_loading = this.is_loading || !is_online;\n    }\n\n    async onMount(shouldFilterContractTypes) {\n        this.assertHasValidCache(this.client_loginid, this.clearDateFilter, WS.forgetAll.bind(null, 'proposal'));\n        this.client_loginid = this.root_store.client.loginid;\n        this.onSwitchAccount(this.accountSwitcherListener);\n        this.onNetworkStatusChange(this.networkStatusChangeListener);\n        await WS.wait('authorize');\n\n        /* Caching won't work for profit_table because date filtering happens based on `buy_time` of a contract.\n        If we already have a cache for a period and if we sell a contract that was purchased in that period\n        then the sold contract won't be there in profit_table when visited again unless we fetch it again.\n        Caching will only work if the date filtering happens based on `sell_time` of a contract in BE. */\n        this.fetchNextBatch(shouldFilterContractTypes, true);\n    }\n\n    /* DO NOT call clearDateFilter() upon unmounting the component, date filters should stay\n    as we change tab or click on any contract for later references as discussed with UI/UX and QA */\n    onUnmount() {\n        this.disposeSwitchAccount();\n        WS.forgetAll('proposal');\n    }\n\n    get totals() {\n        let profit_loss = 0;\n\n        this.data.forEach(transaction => {\n            profit_loss += parseFloat(transaction.profit_loss.replace(/,/g, ''));\n        });\n        return {\n            profit_loss: profit_loss.toString(),\n        };\n    }\n\n    accountSwitcherListener() {\n        return new Promise(resolve => {\n            this.clearTable();\n            this.clearDateFilter();\n            return resolve(this.fetchNextBatch());\n        });\n    }\n\n    clearTable() {\n        this.data = [];\n        this.has_loaded_all = false;\n        this.is_loading = false;\n    }\n\n    clearDateFilter() {\n        this.date_from = null;\n        this.date_to = toMoment().startOf('day').add(1, 'd').subtract(1, 's').unix();\n    }\n\n    handleDateChange(date_values, { date_range, shouldFilterContractTypes } = {}) {\n        const { from, to, is_batch } = date_values;\n\n        this.filtered_date_range = date_range;\n\n        if (from) {\n            this.date_from = toMoment(from).unix();\n        } else if (is_batch) {\n            this.date_from = null;\n        }\n\n        if (to) this.date_to = toMoment(to).unix();\n\n        if (shouldFilterContractTypes) {\n            this.root_store.modules.positions.setDateFrom(this.date_from);\n            this.root_store.modules.positions.setDateTo(this.date_to);\n        }\n\n        this.clearTable();\n        this.fetchNextBatch(shouldFilterContractTypes);\n    }\n}\n","import { formatMoney, toMoment, getSymbolDisplayName, getMarketInformation } from '@deriv/shared';\nimport { ActiveSymbols, ProfitTable } from '@deriv/api-types';\n\nexport type TTransaction = NonNullable<NonNullable<ProfitTable>['transactions']>[number];\n\nexport const formatProfitTableTransactions = (\n    transaction: TTransaction,\n    currency: string,\n    active_symbols: ActiveSymbols = []\n) => {\n    const format_string = 'DD MMM YYYY HH:mm:ss';\n    const purchase_time =\n        transaction.purchase_time && `${toMoment(Number(transaction.purchase_time)).format(format_string)}`;\n    const purchase_time_unix = transaction.purchase_time;\n    const sell_time = transaction.sell_time && `${toMoment(Number(transaction.sell_time)).format(format_string)}`;\n    const payout = transaction.payout ?? NaN;\n    const sell_price = transaction.sell_price ?? NaN;\n    const buy_price = transaction.buy_price ?? NaN;\n    const profit_loss = formatMoney(currency, Number(sell_price - buy_price), true);\n    const display_name = getSymbolDisplayName(\n        active_symbols,\n        getMarketInformation(transaction.shortcode ?? '').underlying\n    );\n\n    return {\n        ...transaction,\n        ...{\n            payout,\n            sell_price,\n            buy_price,\n            profit_loss,\n            sell_time,\n            purchase_time,\n            display_name,\n            purchase_time_unix,\n        },\n    };\n};\n","import { formatMoney, toTitleCase, toMoment, getMarketInformation, getSymbolDisplayName } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport { ActiveSymbols, Statement } from '@deriv/api-types';\n\nexport const formatStatementTransaction = (\n    transaction: NonNullable<Statement['transactions']>[number],\n    currency: string,\n    active_symbols: ActiveSymbols = []\n) => {\n    const { action_type, app_id, contract_id, longcode, purchase_time, withdrawal_details } = transaction;\n    const format_string = 'DD MMM YYYY HH:mm:ss';\n    const transaction_time = toMoment(transaction.transaction_time).format(format_string);\n    const payout = transaction.payout ?? NaN;\n    const amount = transaction.amount ?? NaN;\n    const balance = transaction.balance_after ?? NaN;\n    const should_exclude_currency = true;\n    const shortcode = ['buy', 'sell'].includes(action_type ?? '') ? transaction.shortcode : null;\n    const display_name = shortcode\n        ? getSymbolDisplayName(active_symbols, getMarketInformation(shortcode).underlying)\n        : '';\n\n    return {\n        action: localize(toTitleCase(action_type ?? '')), // 'Buy', 'Sell', 'Deposit', 'Withdrawal'\n        date: transaction_time,\n        display_name,\n        refid: transaction.transaction_id,\n        payout: isNaN(payout) ? '-' : formatMoney(currency, payout, should_exclude_currency),\n        amount: isNaN(amount) ? '-' : formatMoney(currency, amount, should_exclude_currency),\n        balance: isNaN(balance) ? '-' : formatMoney(currency, balance, should_exclude_currency),\n        desc: longcode?.replace(/\\n/g, '<br />'),\n        id: contract_id,\n        app_id,\n        shortcode,\n        action_type,\n        purchase_time,\n        transaction_time: transaction.transaction_time,\n        ...(withdrawal_details && {\n            withdrawal_details,\n            longcode,\n        }),\n    };\n};\n","import debounce from 'lodash.debounce';\nimport { action, computed, observable, makeObservable, override } from 'mobx';\nimport { filterDisabledPositions, toMoment, WS } from '@deriv/shared';\n\nimport { formatStatementTransaction } from './Helpers/format-response';\nimport getDateBoundaries from '../Profit/Helpers/format-request';\nimport BaseStore from '../../base-store';\n\nconst batch_size = 100; // request response limit\nconst delay_on_scroll_time = 150; // fetch debounce delay on scroll\n\nexport default class StatementStore extends BaseStore {\n    data = [];\n    is_loading = true;\n    has_loaded_all = false;\n    date_from = null;\n    date_to = toMoment().startOf('day').add(1, 'd').subtract(1, 's').unix();\n    error = '';\n    action_type = 'all';\n    filtered_date_range;\n\n    // `client_loginid` is only used to detect if this is in sync with the client-store, don't rely on\n    // this for calculations. Use the client.currency instead.\n    client_loginid = '';\n\n    account_statistics = {};\n\n    constructor({ root_store }) {\n        // TODO: [mobx-undecorate] verify the constructor arguments and the arguments of this automatically generated super call\n        super({ root_store });\n\n        makeObservable(this, {\n            data: observable,\n            is_loading: observable,\n            has_loaded_all: observable,\n            date_from: observable,\n            date_to: observable,\n            error: observable,\n            action_type: observable,\n            filtered_date_range: observable,\n            client_loginid: observable,\n            account_statistics: observable,\n            is_empty: computed,\n            has_selected_date: computed,\n            clearTable: action.bound,\n            clearDateFilter: action.bound,\n            fetchNextBatch: action.bound,\n            statementHandler: action.bound,\n            handleDateChange: action.bound,\n            handleFilterChange: action.bound,\n            handleScroll: action.bound,\n            accountSwitcherListener: action.bound,\n            networkStatusChangeListener: action.bound,\n            onMount: action.bound,\n            onUnmount: override,\n        });\n    }\n\n    get is_empty() {\n        return !this.is_loading && this.data.length === 0;\n    }\n\n    get has_selected_date() {\n        return !!(this.date_from || this.date_to);\n    }\n\n    clearTable() {\n        this.data = [];\n        this.has_loaded_all = false;\n        this.is_loading = false;\n    }\n\n    clearDateFilter() {\n        this.date_from = null;\n        this.date_to = toMoment().startOf('day').add(1, 'd').subtract(1, 's').unix();\n        this.partial_fetch_time = 0;\n    }\n\n    shouldFetchNextBatch(should_load_partially) {\n        if (!should_load_partially && (this.has_loaded_all || this.is_loading)) return false;\n        const today = toMoment().startOf('day').add(1, 'd').subtract(1, 's').unix();\n        if (this.date_to < today) return !should_load_partially && this.partial_fetch_time;\n        return true;\n    }\n\n    async fetchNextBatch(should_load_partially = false) {\n        if (!this.shouldFetchNextBatch(should_load_partially)) return;\n        this.is_loading = true;\n\n        const optional_arguments = getDateBoundaries(\n            this.date_from,\n            this.date_to,\n            this.partial_fetch_time,\n            should_load_partially\n        );\n\n        if (this.action_type !== 'all') {\n            optional_arguments.action_type = this.action_type;\n        }\n\n        const response = await WS.statement(\n            batch_size,\n            !should_load_partially ? this.data.length : undefined,\n            optional_arguments\n        );\n        this.statementHandler(response, should_load_partially);\n    }\n\n    statementHandler(response, should_load_partially) {\n        if ('error' in response) {\n            this.error = response.error.message;\n            return;\n        }\n\n        const formatted_transactions = response.statement.transactions\n            .map(transaction =>\n                formatStatementTransaction(\n                    transaction,\n                    this.root_store.client.currency,\n                    this.root_store.active_symbols.active_symbols\n                )\n            )\n            .filter(filterDisabledPositions);\n\n        if (should_load_partially) {\n            this.data = [...formatted_transactions, ...this.data];\n        } else {\n            this.data = [...this.data, ...formatted_transactions];\n        }\n        this.has_loaded_all = !should_load_partially && formatted_transactions.length < batch_size;\n        this.is_loading = false;\n        if (formatted_transactions.length > 0) {\n            this.partial_fetch_time = toMoment().unix();\n        }\n    }\n\n    handleDateChange(date_values, { date_range } = {}) {\n        const { from, to, is_batch } = date_values;\n\n        this.filtered_date_range = date_range;\n\n        if (from) {\n            this.date_from = toMoment(from).unix();\n        } else if (is_batch) {\n            this.date_from = null;\n        }\n\n        if (to) this.date_to = toMoment(to).unix();\n\n        this.clearTable();\n        this.fetchNextBatch();\n    }\n\n    handleFilterChange(filterValue = {}) {\n        this.action_type = filterValue;\n        this.clearTable();\n        this.fetchNextBatch();\n    }\n\n    fetchOnScroll = debounce(left => {\n        if (left < 1500) {\n            this.fetchNextBatch();\n        }\n    }, delay_on_scroll_time);\n\n    handleScroll(event) {\n        const { scrollTop, scrollHeight, clientHeight } = event.target;\n        const left_to_scroll = scrollHeight - (scrollTop + clientHeight);\n\n        this.fetchOnScroll(left_to_scroll);\n    }\n\n    accountSwitcherListener() {\n        return new Promise(resolve => {\n            this.clearTable();\n            this.clearDateFilter();\n            return resolve(this.fetchNextBatch());\n        });\n    }\n\n    networkStatusChangeListener(is_online) {\n        this.is_loading = this.is_loading || !is_online;\n    }\n\n    async onMount() {\n        this.assertHasValidCache(\n            this.client_loginid,\n            this.clearDateFilter,\n            this.client_loginid ? this.clearTable : () => null,\n            WS.forgetAll.bind(null, 'proposal')\n        );\n        this.client_loginid = this.root_store.client.loginid;\n        this.onSwitchAccount(this.accountSwitcherListener);\n        this.onNetworkStatusChange(this.networkStatusChangeListener);\n        await WS.wait('authorize');\n        this.fetchNextBatch(true);\n    }\n\n    /* DO NOT call clearDateFilter() upon unmounting the component, date filters should stay\n    as we change tab or click on any contract for later references as discussed with UI/UX and QA */\n    onUnmount() {\n        this.disposeSwitchAccount();\n        WS.forgetAll('proposal');\n    }\n}\n","import React from 'react';\nimport { useStore } from '@deriv/stores';\nimport ProfitStores from './Modules/Profit/profit-store';\nimport StatementStores from './Modules/Statement/statement-store';\nimport { formatProfitTableTransactions } from './Modules/Profit/Helpers/format-response';\n\ntype TOverrideProfitStore = Omit<ProfitStores, 'data' | 'date_from' | 'totals' | 'handleDateChange'> & {\n    date_from: number;\n    data: ReturnType<typeof formatProfitTableTransactions>[];\n    handleDateChange: (\n        values: { to?: moment.Moment; from?: moment.Moment; is_batch?: boolean },\n        otherParams?: {\n            date_range?: Record<string, string | number>;\n            shouldFilterContractTypes?: boolean;\n        }\n    ) => void;\n    totals: { [key: string]: unknown };\n};\n\ntype TOverrideStatementStore = Omit<\n    StatementStores,\n    | 'account_statistics'\n    | 'action_type'\n    | 'data'\n    | 'date_from'\n    | 'date_to'\n    | 'filtered_date_range'\n    | 'handleDateChange'\n    | 'handleFilterChange'\n    | 'handleScroll'\n    | 'suffix_icon'\n> & {\n    account_statistics: { total_deposits: number; total_withdrawals: number };\n    action_type: string;\n    data: { [key: string]: string }[];\n    date_from: number;\n    date_to: number;\n    filtered_date_range: {\n        duration: number;\n        label: string;\n        onClick?: () => void;\n        value?: string;\n    };\n    handleDateChange: () => void;\n    handleFilterChange: () => void;\n    handleScroll: React.UIEventHandler<HTMLDivElement>;\n    suffix_icon: string;\n};\n\nexport type TReportsStore = {\n    profit_table: TOverrideProfitStore;\n    statement: TOverrideStatementStore;\n};\n\nconst ReportsStoreContext = React.createContext<TReportsStore | null>(null);\n\nexport const ReportsStoreProvider = ({ children }: React.PropsWithChildren<unknown>) => {\n    const root_store = useStore();\n    const memoizedValue = React.useMemo(() => {\n        return {\n            profit_table: new ProfitStores({ root_store }),\n            statement: new StatementStores({ root_store }),\n        } as unknown as TReportsStore;\n    }, [root_store]);\n\n    return <ReportsStoreContext.Provider value={memoizedValue}>{children}</ReportsStoreContext.Provider>;\n};\n\nexport const useReportsStore = () => {\n    const store = React.useContext(ReportsStoreContext);\n\n    if (!store) {\n        throw new Error('useReportsStore must be used within ReportsStoreProvider');\n    }\n\n    return store;\n};\n","import React from 'react';\nimport { routes, makeLazyLoader, moduleLoader } from '@deriv/shared';\nimport { Loading } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport type { TRoute, TRouteConfig } from 'Types';\n\nconst Page404 = React.lazy(() => import(/* webpackChunkName: \"404\" */ 'Modules/Page404'));\n\nconst lazyLoadReportComponent = makeLazyLoader(\n    () => moduleLoader(() => import(/* webpackChunkName: \"reports-routes\" */ '../Containers')),\n    () => <Loading />\n);\n\n// Order matters\nconst initRoutesConfig = (): TRouteConfig[] => {\n    return [\n        {\n            path: routes.reports,\n            component: lazyLoadReportComponent('Reports'),\n            is_authenticated: true,\n            getTitle: () => localize('Reports'),\n            icon_component: 'IcReports',\n            routes: [\n                {\n                    path: routes.positions,\n                    component: lazyLoadReportComponent('OpenPositions'),\n                    getTitle: () => localize('Open positions'),\n                    icon_component: 'IcOpenPositions',\n                    default: true,\n                },\n                {\n                    path: routes.profit,\n                    component: lazyLoadReportComponent('ProfitTable'),\n                    getTitle: () => localize('Trade table'),\n                    icon_component: 'IcProfitTable',\n                },\n                {\n                    path: routes.statement,\n                    component: lazyLoadReportComponent('Statement'),\n                    getTitle: () => localize('Statement'),\n                    icon_component: 'IcStatement',\n                },\n            ],\n        },\n    ];\n};\n\nlet routesConfig: TRouteConfig[];\n\n// For default page route if page/path is not found, must be kept at the end of routes_config array\nconst route_default: TRoute = { component: Page404, getTitle: () => localize('Error 404') };\n\nconst getRoutesConfig = (): TRouteConfig[] => {\n    if (!routesConfig) {\n        routesConfig = initRoutesConfig();\n        routesConfig.push(route_default);\n    }\n    return routesConfig;\n};\n\nexport default getRoutesConfig;\n","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport { RouteComponentProps } from 'react-router';\nimport { redirectToLogin, isEmptyObject, routes, removeBranchName, default_title } from '@deriv/shared';\nimport { getLanguage } from '@deriv/translations';\nimport type { TBinaryRoutes, TRoute } from 'Types';\n\ntype TRouteWithSubRoutes = TRoute & TBinaryRoutes;\n\nconst RouteWithSubRoutes = (route: TRouteWithSubRoutes) => {\n    const renderFactory = (props: RouteComponentProps) => {\n        let result = null;\n        if (route.component === Redirect) {\n            let to = route.to;\n\n            // This if clause has been added just to remove '/index' from url in localhost env.\n            if (route.path === routes.index) {\n                const { location } = props;\n                to = location.pathname.toLowerCase().replace(route.path, '');\n            }\n            result = <Redirect to={to} />;\n        } else if (route.is_authenticated && !route.is_logging_in && !route.is_logged_in) {\n            redirectToLogin(route.is_logged_in, getLanguage());\n        } else {\n            const default_subroute = route.routes ? route.routes.find(r => r.default) : { path: '' };\n            const has_default_subroute = !isEmptyObject(default_subroute);\n            const pathname = removeBranchName(location.pathname);\n\n            const RouteComponent = route.component as React.ElementType;\n\n            result = (\n                <React.Fragment>\n                    {has_default_subroute && pathname === route.path && <Redirect to={default_subroute?.path} />}\n                    <RouteComponent {...props} routes={route.routes} />\n                </React.Fragment>\n            );\n        }\n\n        const title = route.getTitle?.() || '';\n        document.title = `${title} | ${default_title}`;\n        return result;\n    };\n\n    return <Route exact={route.exact} path={route.path} render={renderFactory} />;\n};\n\nexport default RouteWithSubRoutes;\n","import React from 'react';\nimport { Switch } from 'react-router-dom';\nimport { Localize } from '@deriv/translations';\nimport getRoutesConfig from '../../Constants/routes-config';\nimport RouteWithSubRoutes from './route-with-sub-routes';\nimport { TBinaryRoutes } from 'Types';\n\nconst BinaryRoutes = (props: TBinaryRoutes) => {\n    return (\n        <React.Suspense\n            fallback={\n                <div>\n                    <Localize i18n_default_text='Loading...' />\n                </div>\n            }\n        >\n            <Switch>\n                {getRoutesConfig().map((route, idx) => (\n                    <RouteWithSubRoutes key={route.path ?? idx} {...route} {...props} />\n                ))}\n            </Switch>\n        </React.Suspense>\n    );\n};\n\nexport default BinaryRoutes;\n","import BinaryLink from './binary-link';\nimport RouteWithSubRoutes from './route-with-sub-routes';\nimport BinaryRoutes from './binary-routes';\n\nexport * from './helpers';\nexport { BinaryLink, RouteWithSubRoutes };\nexport default BinaryRoutes;\n","import React from 'react';\nimport { Dialog, PageErrorContainer } from '@deriv/components';\nimport { routes } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport { TErrorComponent } from 'Types';\n\nconst ErrorComponent = ({\n    header,\n    message,\n    is_dialog,\n    redirect_label,\n    redirectOnClick,\n    should_show_refresh = true,\n}: Partial<TErrorComponent>) => {\n    const refresh_message = should_show_refresh ? localize('Please refresh this page to continue.') : '';\n\n    if (is_dialog) {\n        return (\n            <Dialog\n                title={header || localize('There was an error')}\n                is_visible\n                confirm_button_text={redirect_label || localize('Ok')}\n                onConfirm={redirectOnClick || (() => location.reload())}\n                has_close_icon={false}\n            >\n                {message || localize('Sorry, an error occured while processing your request.')}\n            </Dialog>\n        );\n    }\n    return (\n        <PageErrorContainer\n            error_header={header ?? ''}\n            error_messages={message ? [message, refresh_message] : []}\n            redirect_urls={[routes.trade]}\n            redirect_labels={[redirect_label || localize('Refresh')]}\n            buttonOnClick={redirectOnClick || (() => location.reload())}\n        />\n    );\n};\n\nexport default ErrorComponent;\n","import ErrorComponent from './error-component';\n\nexport default ErrorComponent;\n","import { observer, useStore } from '@deriv/stores';\nimport { RouteComponentProps, withRouter } from 'react-router';\nimport React from 'react';\nimport BinaryRoutes from 'Components/Routes';\nimport ErrorComponent from 'Components/Errors';\nimport { TRoutes } from 'Types';\n\nconst Routes = observer(({ passthrough }: TRoutes & RouteComponentProps) => {\n    const { client, common } = useStore();\n    const { is_logged_in, is_logging_in } = client;\n    const { error, has_error } = common;\n    if (has_error) {\n        return <ErrorComponent {...error} />;\n    }\n\n    return <BinaryRoutes is_logged_in={is_logged_in} is_logging_in={is_logging_in} passthrough={passthrough} />;\n});\n\nexport default withRouter(Routes);\n","import BaseStore from './BaseStore';\n\nconst FLAGS = {\n    dtrader_v2_mobile: false,\n    dtrader_v2_desktop: false,\n    next_qs: false,\n    sharkfin: false,\n    wallet: false,\n} satisfies Record<string, boolean>;\n\nexport default class FeatureFlagsStore extends BaseStore<{ [k in keyof typeof FLAGS]: boolean }> {\n    private static instance: FeatureFlagsStore | null = null;\n\n    constructor() {\n        if (FeatureFlagsStore.instance) {\n            FeatureFlagsStore.instance.cleanup();\n        }\n\n        super('FeatureFlagsStore', () => {\n            // Set the default values for the first time.\n            if (!this.data) this.update(FLAGS);\n            // Update the store data if a new flag was added or removed.\n            if (this.data && Object.keys(this.data).length !== Object.keys(FLAGS).length) {\n                this.update(old => {\n                    const data = FLAGS;\n\n                    Object.keys(FLAGS).forEach(flag => {\n                        // @ts-expect-error flag key is always present in the object, Hence can ignore the TS error.\n                        if (old[flag] !== undefined) data[flag] = old[flag];\n                    });\n\n                    return data;\n                });\n            }\n        });\n\n        this.data = FLAGS;\n        FeatureFlagsStore.instance = this;\n    }\n\n    cleanup() {\n        this.unmount();\n    }\n}\n","import { action, makeObservable, observable } from 'mobx';\nimport { makePersistable, stopPersisting } from 'mobx-persist-store';\n\nexport default class BaseStore<T> {\n    data: T | undefined = undefined;\n\n    constructor(name: string, onHydrationDone?: VoidFunction) {\n        makeObservable(this, {\n            data: observable,\n            update: action.bound,\n            unmount: action.bound,\n        });\n\n        makePersistable(this, { name, properties: ['data'], storage: window.localStorage }).then(() =>\n            onHydrationDone?.()\n        );\n    }\n\n    update(data: NonNullable<T> | ((previous?: T) => NonNullable<T>)) {\n        this.data = data instanceof Function ? data(this.data) : data;\n    }\n\n    unmount() {\n        stopPersisting(this);\n    }\n}\n","import React, { useEffect, useMemo } from 'react';\nimport StoreContext from './storeContext';\nimport { FeatureFlagsStore } from './stores';\nimport type { TCoreStores, TStores } from '../types';\n\nconst StoreProvider = ({ children, store }: React.PropsWithChildren<{ store: TCoreStores }>) => {\n    const memoizedValue: TStores = useMemo(() => {\n        // If the store is mocked for testing purposes, then return the mocked value.\n        if ('is_mock' in store && store.is_mock) return store as unknown as TStores;\n\n        // Otherwise, instantiate store and return it.\n        return {\n            ...store,\n            feature_flags: new FeatureFlagsStore(),\n        };\n    }, [store]);\n\n    useEffect(() => {\n        return () => {\n            Object.values(memoizedValue).forEach(value => {\n                if (typeof value === 'object' && 'unmount' in value) value.unmount();\n            });\n        };\n    }, [memoizedValue]);\n\n    return <StoreContext.Provider value={memoizedValue}>{children}</StoreContext.Provider>;\n};\n\nexport default StoreProvider;\n","import React from 'react';\nimport { StoreProvider } from '@deriv/stores';\nimport { ReportsStoreProvider } from 'Stores/useReportsStores';\nimport type { TCoreStores } from '@deriv/stores/types';\n\nexport const ReportsProviders = ({ children, store }: React.PropsWithChildren<{ store: TCoreStores }>) => {\n    return (\n        <StoreProvider store={store}>\n            <ReportsStoreProvider>{children}</ReportsStoreProvider>\n        </StoreProvider>\n    );\n};\n\nexport default ReportsProviders;\n","import React from 'react';\nimport Loadable from 'react-loadable';\nimport Routes from 'Containers/routes';\nimport ReportsProviders from './reports-providers';\nimport 'Sass/app.scss';\nimport type { TCoreStores } from '@deriv/stores/types';\n\ntype TAppProps = {\n    passthrough: {\n        root_store: TCoreStores;\n    };\n};\n\nconst TradeModals = Loadable({\n    loader: () => import(/* webpackChunkName: \"trade-modals\", webpackPrefetch: true */ './Components/Modals'),\n    loading: () => null,\n});\n\nconst App = ({ passthrough }: TAppProps) => {\n    return (\n        <ReportsProviders store={passthrough.root_store}>\n            <Routes />\n            <TradeModals />\n        </ReportsProviders>\n    );\n};\n\nexport default App;\n","import { createContext } from 'react';\nimport type { TStores } from '../types';\n\nconst StoreContext = createContext<TStores | null>(null);\n\nexport default StoreContext;\n","import { useContext } from 'react';\nimport StoreContext from './storeContext';\n\nconst useStore = () => {\n    const store = useContext(StoreContext);\n\n    if (!store) {\n        throw new Error('useStore must be used within StoreProvider');\n    }\n\n    return store;\n};\n\nexport default useStore;\n"],"names":["getDateTo","date_to","today","toMoment","startOf","unix","epochToMoment","add","subtract","getDateFrom","should_load_partially","partial_fetch_time","date_from","arguments","length","undefined","_objectSpread","shouldSendDateFrom","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","_asyncToGenerator","apply","_next","_throw","ownKeys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","_defineProperty","getOwnPropertyDescriptors","defineProperties","_toPropertyKey","_defineProperties","key","toPrimitive","String","Number","_toPrimitive","BaseStore","_this","options","_classCallCheck","validation_errors","validation_rules","preSwitchAccountDisposer","pre_switch_account_listener","switchAccountDisposer","switch_account_listener","logoutDisposer","logout_listener","clientInitDisposer","client_init_listener","networkStatusChangeDisposer","network_status_change_listener","themeChangeDisposer","theme_change_listener","realAccountSignupEndedDisposer","real_account_signup_ended_listener","makeObservable","this","observable","retrieveFromStorage","action","setValidationErrorMessages","setValidationRules","addRule","validateProperty","validateAllProperties","onSwitchAccount","bound","onPreSwitchAccount","onLogout","onClientInit","onNetworkStatusChange","onThemeChange","onRealAccountSignupEnd","disposePreSwitchAccount","disposeSwitchAccount","disposeLogout","disposeClientInit","disposeNetworkStatusChange","disposeThemeChange","disposeRealAccountSignupEnd","onUnmount","assertHasValidCache","root_store","local_storage_properties","session_storage_properties","store_name","setTimeout","setupReactionForLocalStorage","setupReactionForSessionStorage","properties","snapshot","toJS","isEmptyObject","reduce","result","assign","_this2","reaction","map","saveToStorage","STORAGES","LOCAL_STORAGE","_this3","SESSION_STORAGE","storage","JSON","stringify","getSnapshot","localStorage","setItem","sessionStorage","_this4","local_storage_snapshot","parse","getItem","session_storage_snapshot","k","propertyName","messages","_this5","x","includes","concat","_this6","rules","property","_this7","intercept","change","newValue","_this8","trigger","inputs","validator","Validator","isPassed","errors","get","_this9","error","listener","_this10","when","client","switch_broadcast","switchEndSignal","isProduction","console","_this11","pre_switch_broadcast","_this11$pre_switch_ac","setPreSwitchAccount","_this12","has_logged_out","_callee","_context","setLogout","t0","_this13","initialized_broadcast","_callee2","_context2","setInitialized","_this14","common","is_network_online","is_online","_this15","ui","is_dark_mode_on","_this16","has_real_account_signup_ended","setRealAccountSignupEnd","loginid","_len","reactions","Array","_key","act","_callSuper","_getPrototypeOf","ReferenceError","_assertThisInitialized","_possibleConstructorReturn","_isNativeReflectConstruct","Reflect","construct","Boolean","valueOf","bind","_setPrototypeOf","freeze","ProfitTableStore","_BaseStore","_ref","data","has_loaded_all","is_loading","filtered_date_range","client_loginid","fetchOnScroll","debounce","left","shouldFilterContractTypes","fetchNextBatch","is_empty","computed","has_selected_date","profitTableResponseHandler","handleScroll","networkStatusChangeListener","onMount","override","totals","accountSwitcherListener","clearTable","clearDateFilter","handleDateChange","_inherits","is_mounting","_fetchNextBatch","isMounting","_this$root_store$modu","_this$root_store$modu2","dateParams","params","response","shouldFetchNextBatch","getDateBoundaries","modules","positions","dateFrom","dateTo","contract_type","filteredContractTypes","WS","profitTable","_x","_x2","message","formatted_transactions","profit_table","transactions","transaction","currency","_transaction$payout","_transaction$sell_pri","_transaction$buy_pric","_transaction$shortcod","active_symbols","format_string","purchase_time","format","purchase_time_unix","sell_time","payout","NaN","sell_price","buy_price","profit_loss","formatMoney","display_name","getSymbolDisplayName","getMarketInformation","shortcode","underlying","formatProfitTableTransactions","filterDisabledPositions","_toConsumableArray","event","_event$target","target","scrollTop","left_to_scroll","scrollHeight","clientHeight","_onMount","forgetAll","wait","_x3","parseFloat","replace","toString","date_values","_ref2","date_range","from","to","is_batch","setDateFrom","setDateTo","formatStatementTransaction","_transaction$amount","_transaction$balance_","action_type","app_id","contract_id","longcode","withdrawal_details","transaction_time","amount","balance","balance_after","should_exclude_currency","localize","toTitleCase","date","refid","transaction_id","desc","id","StatementStore","account_statistics","statementHandler","handleFilterChange","optional_arguments","_args","statement","filterValue","ReportsStoreContext","React","ReportsStoreProvider","children","useStore","memoizedValue","ProfitStores","StatementStores","Provider","useReportsStore","store","routesConfig","Page404","lazyLoadReportComponent","makeLazyLoader","moduleLoader","Loading","route_default","component","getTitle","path","routes","reports","is_authenticated","icon_component","default","profit","route","Route","exact","render","props","_route$getTitle","Redirect","index","location","pathname","toLowerCase","is_logging_in","is_logged_in","default_subroute","find","has_default_subroute","removeBranchName","RouteComponent","_extends","redirectToLogin","getLanguage","title","document","default_title","fallback","Localize","i18n_default_text","Switch","getRoutesConfig","idx","_route$path","RouteWithSubRoutes","header","is_dialog","redirect_label","redirectOnClick","_ref$should_show_refr","should_show_refresh","refresh_message","Dialog","is_visible","confirm_button_text","onConfirm","reload","has_close_icon","PageErrorContainer","error_header","error_messages","redirect_urls","trade","redirect_labels","buttonOnClick","Routes","observer","passthrough","_useStore","has_error","ErrorComponent","BinaryRoutes","withRouter","FLAGS","dtrader_v2_mobile","dtrader_v2_desktop","next_qs","sharkfin","wallet","FeatureFlagsStore","instance","cleanup","update","old","flag","unmount","onHydrationDone","makePersistable","window","Function","stopPersisting","useMemo","is_mock","feature_flags","useEffect","StoreContext","StoreProvider","TradeModals","Loadable","loader","loading","ReportsProviders","createContext","useContext"],"sourceRoot":""}