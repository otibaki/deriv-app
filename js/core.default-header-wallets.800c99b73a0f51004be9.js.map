{"version":3,"file":"js/core.default-header-wallets.800c99b73a0f51004be9.js","mappings":"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","sources":["webpack:///./Assets/SvgComponents/header/deriv-logo-short.svg","webpack:///./App/Containers/Layout/header/default-header-wallets.tsx","webpack:///./App/Containers/SetAccountCurrencyModal/set-currency-modal.jsx","webpack:///./App/Containers/SetAccountCurrencyModal/index.js","webpack:///./App/Containers/new-version-notification.jsx","webpack:///../../hooks/src/useHasActiveRealAccount.ts","webpack:///../../hooks/src/useHasSetCurrency.ts"],"sourcesContent":["import React from \"react\";\nexport default ({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"none\" {...props}><path d=\"M0 9.33A9.33 9.33 0 019.33 0h5.34A9.33 9.33 0 0124 9.33v5.34A9.33 9.33 0 0114.67 24H9.33A9.33 9.33 0 010 14.67V9.33z\" fill=\"#FF444F\" /><path d=\"M15.06 4.97l-.78 4.4H11.6c-2.51 0-4.9 2.02-5.34 4.53l-.19 1.06c-.44 2.51 1.23 4.54 3.74 4.54h2.24a4.11 4.11 0 003.89-3.3L18 4.5l-2.94.47zm-1.91 10.81c-.1.57-.6 1.03-1.17 1.03h-1.36c-1.13 0-1.88-.92-1.69-2.05l.12-.66a2.55 2.55 0 012.4-2.04h2.36l-.66 3.72z\" fill=\"#fff\" /></svg>;","import React from 'react';\nimport classNames from 'classnames';\nimport { useHistory } from 'react-router-dom';\nimport { useDevice } from '@deriv-com/ui';\nimport { useStore } from '@deriv/stores';\nimport { StaticUrl } from '@deriv/components';\nimport { getDecimalPlaces, platforms, routes } from '@deriv/shared';\nimport { AccountActions, MenuLinks, PlatformSwitcher } from 'App/Components/Layout/Header';\nimport { AccountsInfoLoader } from 'App/Components/Layout/Header/Components/Preloader';\nimport NewVersionNotification from 'App/Containers/new-version-notification.jsx';\nimport RealAccountSignup from 'App/Containers/RealAccountSignup';\nimport SetAccountCurrencyModal from 'App/Containers/SetAccountCurrencyModal';\nimport ToggleMenuDrawer from 'App/Components/Layout/Header/toggle-menu-drawer.jsx';\nimport platform_config from 'App/Constants/platform-config';\nimport DerivBrandShortLogo from 'Assets/SvgComponents/header/deriv-logo-short.svg';\n\nconst DefaultHeaderWallets = () => {\n    const { client, common, ui, notifications, traders_hub } = useStore();\n    const {\n        account_switcher_disabled_message: acc_switcher_disabled_message,\n        disableApp,\n        enableApp,\n        header_extension,\n        is_account_switcher_disabled: is_acc_switcher_disabled,\n        is_accounts_switcher_on: is_acc_switcher_on,\n        is_app_disabled,\n        is_route_modal_on,\n        openRealAccountSignup,\n        toggleAccountsDialog,\n        is_trading_assessment_for_existing_user_enabled,\n        is_mobile,\n    } = ui;\n    const {\n        account_type,\n        balance,\n        currency,\n        is_bot_allowed,\n        is_eu,\n        is_logged_in,\n        is_logging_in,\n        is_mt5_allowed,\n        is_dxtrade_allowed,\n        is_virtual,\n        is_landing_company_loaded,\n        is_switching,\n    } = client;\n    const { current_language, platform, app_routing_history } = common;\n    const { setTogglePlatformType } = traders_hub;\n    const {\n        addNotificationMessage,\n        client_notifications,\n        is_notifications_visible,\n        notifications: { length: notifications_count },\n        removeNotificationMessage,\n        toggleNotificationsModal: toggleNotifications,\n    } = notifications;\n\n    const history = useHistory();\n\n    const { isDesktop } = useDevice();\n\n    const addUpdateNotification = () => addNotificationMessage(client_notifications.new_version_available);\n    const removeUpdateNotification = React.useCallback(\n        () => removeNotificationMessage({ key: 'new_version_available' }),\n        [removeNotificationMessage]\n    );\n\n    React.useEffect(() => {\n        document.addEventListener('IgnorePWAUpdate', removeUpdateNotification);\n        return () => document.removeEventListener('IgnorePWAUpdate', removeUpdateNotification);\n    }, [removeUpdateNotification]);\n\n    const onClickDeposit = () => history.push(routes.cashier_deposit);\n\n    const filterPlatformsForClients = (payload: typeof platform_config) =>\n        payload.filter(config => {\n            if (config.link_to === routes.mt5) {\n                return !is_logged_in || is_mt5_allowed;\n            }\n            if (config.link_to === routes.dxtrade) {\n                return is_dxtrade_allowed;\n            }\n            if (config.link_to === routes.bot || config.href === routes.smarttrader) {\n                return is_bot_allowed;\n            }\n            return true;\n        });\n\n    return (\n        <header\n            className={classNames('header', {\n                'header--is-disabled': is_app_disabled || is_route_modal_on,\n                'header--is-hidden': platforms[platform],\n            })}\n        >\n            <div className='header__menu-items'>\n                <div className='header__menu-left'>\n                    {isDesktop ? (\n                        <React.Fragment>\n                            <div className='header__menu-left-logo'>\n                                <StaticUrl href='/'>\n                                    <DerivBrandShortLogo />\n                                </StaticUrl>\n                            </div>\n                            <div className='header__menu-left-text-logo'>\n                                <StaticUrl href='/'>\n                                    <span className='header__menu-left-text'>binaryKe</span>\n                                </StaticUrl>\n                             </div>\n                            <PlatformSwitcher\n                                app_routing_history={app_routing_history}\n                                is_landing_company_loaded={is_landing_company_loaded}\n                                is_logged_in={is_logged_in}\n                                is_logging_in={is_logging_in}\n                                platform_config={filterPlatformsForClients(platform_config)}\n                                setTogglePlatformType={setTogglePlatformType}\n                                current_language={current_language}\n                            />\n                        </React.Fragment>\n                    ) : (\n                        <React.Fragment>\n                            <ToggleMenuDrawer platform_config={filterPlatformsForClients(platform_config)} />\n                            {header_extension && is_logged_in && (\n                                <div className='header__menu-left-extensions'>{header_extension}</div>\n                            )}\n                        </React.Fragment>\n                    )}\n                    <MenuLinks />\n                </div>\n                <div\n                    className={classNames('header__menu-right', {\n                        'header__menu-right--hidden': is_mobile && is_logging_in,\n                    })}\n                >\n                    {(is_logging_in || is_switching) && (\n                        <div\n                            id='dt_core_header_acc-info-preloader'\n                            className={classNames('acc-info__preloader', {\n                                'acc-info__preloader--no-currency': !currency,\n                                'acc-info__preloader--is-crypto': getDecimalPlaces(currency) > 2,\n                            })}\n                        >\n                            <AccountsInfoLoader is_logged_in={is_logged_in} is_mobile={is_mobile} speed={3} />\n                        </div>\n                    )}\n\n                    <div id={'dt_core_header_acc-info-container'} className='acc-info__container'>\n                        <AccountActions\n                            acc_switcher_disabled_message={acc_switcher_disabled_message}\n                            account_type={account_type}\n                            balance={balance}\n                            currency={currency}\n                            disableApp={disableApp}\n                            enableApp={enableApp}\n                            is_acc_switcher_on={is_acc_switcher_on}\n                            is_acc_switcher_disabled={is_acc_switcher_disabled}\n                            is_eu={is_eu}\n                            is_notifications_visible={is_notifications_visible}\n                            is_logged_in={is_logged_in}\n                            is_virtual={is_virtual}\n                            onClickDeposit={onClickDeposit}\n                            notifications_count={notifications_count}\n                            toggleAccountsDialog={toggleAccountsDialog}\n                            toggleNotifications={toggleNotifications}\n                            openRealAccountSignup={openRealAccountSignup}\n                        />\n                    </div>\n                </div>\n            </div>\n            {/*\n                Prevent the modals that are part of Real Account signup to get triggered when the corresponding store value changes by\n                removing the parent element from DOM\n            */}\n            {!is_trading_assessment_for_existing_user_enabled && <RealAccountSignup />}\n            <SetAccountCurrencyModal />\n            <NewVersionNotification onUpdate={addUpdateNotification} />\n        </header>\n    );\n};\n\nexport default DefaultHeaderWallets;\n","import React from 'react';\nimport { Button, Modal } from '@deriv/components';\nimport { useHasSetCurrency } from '@deriv/hooks';\nimport { localize } from '@deriv/translations';\nimport { observer, useStore } from '@deriv/stores';\nimport 'Sass/set-currency-modal.scss';\n\nconst SetAccountCurrencyModal = observer(() => {\n    const { client, ui } = useStore();\n    const { is_virtual } = client;\n    const {\n        is_set_currency_modal_visible: is_visible,\n        openRealAccountSignup: setCurrency,\n        toggleSetCurrencyModal: toggleModal,\n    } = ui;\n    const has_set_currency = useHasSetCurrency();\n\n    return (\n        <Modal\n            id='dt_set_account_currency_modal'\n            has_close_icon={false}\n            is_open={is_visible}\n            small\n            toggleModal={toggleModal}\n            title={\n                !has_set_currency\n                    ? localize('No currency assigned to your account')\n                    : localize('You have an account that needs action')\n            }\n        >\n            <Modal.Body>\n                {localize('Please set a currency for your existing real account before creating another account.')}\n            </Modal.Body>\n            <Modal.Footer>\n                {!is_virtual ? (\n                    <>\n                        <Button has_effect text={localize('Cancel')} onClick={toggleModal} secondary />\n                        <Button\n                            has_effect\n                            text={localize('Set currency')}\n                            onClick={() => {\n                                toggleModal();\n                                // timeout is to ensure no jumpy animation when modals are overlapping enter/exit transitions\n                                setTimeout(() => {\n                                    setCurrency('set_currency');\n                                }, 250);\n                            }}\n                            primary\n                        />\n                    </>\n                ) : (\n                    <Button has_effect text={localize('OK')} onClick={toggleModal} primary />\n                )}\n            </Modal.Footer>\n        </Modal>\n    );\n});\n\nexport default SetAccountCurrencyModal;\n","import SetAccountCurrencyModal from './set-currency-modal.jsx';\n\nexport default SetAccountCurrencyModal;\n","import React from 'react';\n\n/**\n * Listens on emitted events to show notification on available updates.\n *  - IgnorePWAUpdate event will prevent notification\n *  - ListenPWAUpdate event is usefull to re-assign notify on update behavior\n * @param onUpdate\n * @return {null}\n * @constructor\n */\nconst NewVersionNotification = ({ onUpdate }) => {\n    React.useEffect(() => {\n        const removeUpdateListener = () => {\n            document.removeEventListener('UpdateAvailable', onUpdate);\n        };\n\n        const addUpdateListener = () => {\n            document.addEventListener('UpdateAvailable', onUpdate);\n        };\n\n        document.addEventListener('UpdateAvailable', onUpdate);\n        document.addEventListener('IgnorePWAUpdate', removeUpdateListener);\n        document.addEventListener('ListenPWAUpdate', addUpdateListener);\n\n        return () => {\n            document.removeEventListener('IgnorePWAUpdate', removeUpdateListener);\n            document.removeEventListener('ListenPWAUpdate', addUpdateListener);\n            document.removeEventListener('UpdateAvailable', onUpdate);\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return null;\n};\n\nexport default NewVersionNotification;\n","import { useStore } from '@deriv/stores';\n\nconst useHasActiveRealAccount = () => {\n    const { client } = useStore();\n    const { active_accounts } = client;\n\n    const has_active_real_account = active_accounts.some(account => account.is_virtual === 0);\n\n    return has_active_real_account;\n};\n\nexport default useHasActiveRealAccount;\n","import { useStore } from '@deriv/stores';\nimport useHasActiveRealAccount from './useHasActiveRealAccount';\n\nconst useHasSetCurrency = () => {\n    const { client } = useStore();\n    const { account_list } = client;\n    const has_active_real_account = useHasActiveRealAccount();\n\n    const has_real_account = account_list\n        .filter(account => !account.is_virtual)\n        .some(account => account.title !== 'Real' && account.title !== 'Investment');\n\n    const has_set_currency = has_real_account || !has_active_real_account;\n\n    return has_set_currency;\n};\n\nexport default useHasSetCurrency;\n"],"names":["_ref","styles","props","_objectWithoutProperties","_excluded","_jsxs","_objectSpread","xmlns","width","height","fill","children","_jsx","d","DefaultHeaderWallets","client","common","ui","notifications","traders_hub","useStore","account_switcher_disabled_message","acc_switcher_disabled_message","disableApp","enableApp","header_extension","is_account_switcher_disabled","is_acc_switcher_disabled","is_accounts_switcher_on","is_acc_switcher_on","is_app_disabled","is_route_modal_on","openRealAccountSignup","toggleAccountsDialog","is_trading_assessment_for_existing_user_enabled","is_mobile","account_type","balance","currency","is_bot_allowed","is_eu","is_logged_in","is_logging_in","is_mt5_allowed","is_dxtrade_allowed","is_virtual","is_landing_company_loaded","is_switching","current_language","platform","app_routing_history","setTogglePlatformType","addNotificationMessage","client_notifications","is_notifications_visible","length","notifications_count","removeNotificationMessage","toggleNotificationsModal","toggleNotifications","history","useHistory","isDesktop","useDevice","removeUpdateNotification","React","key","document","addEventListener","removeEventListener","filterPlatformsForClients","payload","filter","config","link_to","routes","mt5","dxtrade","bot","href","smarttrader","className","classNames","platforms","StaticUrl","DerivBrandShortLogo","PlatformSwitcher","platform_config","ToggleMenuDrawer","MenuLinks","id","getDecimalPlaces","AccountsInfoLoader","speed","AccountActions","onClickDeposit","push","cashier_deposit","RealAccountSignup","SetAccountCurrencyModal","NewVersionNotification","onUpdate","addUpdateNotification","new_version_available","observer","is_set_currency_modal_visible","is_visible","setCurrency","toggleSetCurrencyModal","toggleModal","has_set_currency","useHasSetCurrency","Modal","has_close_icon","is_open","small","title","localize","Body","Footer","Button","has_effect","text","onClick","primary","_Fragment","secondary","setTimeout","removeUpdateListener","addUpdateListener","useHasActiveRealAccount","active_accounts","some","account","account_list","has_active_real_account"],"sourceRoot":""}