{"version":3,"file":"js/core.verification-modal.c513ddb0f21d20ba3a08.js","mappings":"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","sources":["webpack:///../../account/src/Components/form-body-section/form-body-section.tsx","webpack:///../../account/src/Components/form-body-section/index.ts","webpack:///../../account/src/Components/form-sub-header/form-sub-header.tsx","webpack:///../../account/src/Components/form-sub-header/index.ts","webpack:///../../account/src/Components/forms/form-fields/form-input-field.tsx","webpack:///../../account/src/Components/forms/form-fields/date-of-birth-field.tsx","webpack:///../../account/src/Constants/financial-information-list.ts","webpack:///../../account/src/Components/forms/form-fields/employment-status.tsx","webpack:///../../account/src/Components/forms/form-fields/tax-residence.tsx","webpack:///../../account/src/Components/forms/form-fields/tax-indentification-number.tsx","webpack:///../../account/src/Constants/external-urls.ts","webpack:///../../account/src/Components/forms/idv-form.tsx","webpack:///../../account/src/Components/forms/form-fields/account-opening-reason.tsx","webpack:///../../account/src/Components/forms/personal-details-form.jsx","webpack:///../../account/src/Components/icon-message-content/icon-message-content.tsx","webpack:///../../account/src/Components/icon-message-content/index.ts","webpack:///../../account/src/Components/inline-note-with-icon/inline-note-with-icon.tsx","webpack:///../../account/src/Components/inline-note-with-icon/index.ts","webpack:///../../account/src/Constants/onfido.js","webpack:///../../account/src/Configs/idv-document-config.ts","webpack:///../../account/src/Helpers/utils.tsx","webpack:///../../api/src/hooks/useResidenceList.ts","webpack:///../../account/src/Components/poa/status/expired/expired.tsx","webpack:///../../account/src/Components/poa/status/expired/index.ts","webpack:///../../account/src/Components/poa/status/not-required/index.ts","webpack:///../../account/src/Components/poa/status/not-required/not-required.tsx","webpack:///../../account/src/Components/load-error-message/load-error-message.tsx","webpack:///../../account/src/Components/load-error-message/index.ts","webpack:///../../account/src/Components/leave-confirm/leave-confirm.tsx","webpack:///../../account/src/Components/leave-confirm/index.ts","webpack:///../../account/src/Constants/api-error-codes.ts","webpack:///../../account/src/Components/file-uploader-container/file-uploader.tsx","webpack:///../../account/src/hooks/useKycAuthStatus.ts","webpack:///../../account/src/Constants/file-uploader.tsx","webpack:///../../account/src/Components/file-uploader-container/file-uploader-container.tsx","webpack:///../../account/src/Components/file-uploader-container/index.ts","webpack:///../../account/src/Components/file-uploader-container/files-descriptions.tsx","webpack:///../../account/src/Components/scrollbars-container/scrollbars-container.tsx","webpack:///../../account/src/Components/form-body/index.ts","webpack:///../../account/src/Components/form-body/form-body.tsx","webpack:///../../account/src/Components/form-footer/form-footer.tsx","webpack:///../../account/src/Components/form-footer/index.ts","webpack:///../../account/src/Components/poa/common-mistakes/common-mistake-examples.tsx","webpack:///../../account/src/Configs/poa-common-mistake-examples-config.tsx","webpack:///../../account/src/Sections/Verification/ProofOfAddress/poa-desktop-layout.tsx","webpack:///../../account/src/Sections/Verification/ProofOfAddress/poa-mobile-layout.tsx","webpack:///../../account/src/Sections/Verification/ProofOfAddress/proof-of-address-form.tsx","webpack:///../../account/src/Components/route-button/index.ts","webpack:///../../account/src/Components/route-button/route-button.tsx","webpack:///../../account/src/Components/poa/status/submitted/index.ts","webpack:///../../account/src/Components/poa/status/submitted/submitted.tsx","webpack:///../../account/src/Components/poa/status/unverified/index.ts","webpack:///../../account/src/Components/poa/status/unverified/unverified.tsx","webpack:///../../account/src/Components/poa/continue-trading-button/continue-trading-button.tsx","webpack:///../../account/src/Components/poi/poi-button/poi-button.tsx","webpack:///../../account/src/Components/poa/status/verified/verified.tsx","webpack:///../../account/src/Components/poa/status/verified/index.ts","webpack:///../../account/src/Sections/Verification/Helpers/verification.js","webpack:///../../account/src/Sections/Verification/ProofOfAddress/proof-of-address-container.tsx","webpack:///../../account/src/Sections/Verification/ProofOfIdentity/proof-of-identity-utils.ts","webpack:///../../account/src/Components/icon-with-message/index.ts","webpack:///../../account/src/Components/icon-with-message/icon-with-message.tsx","webpack:///../../account/src/Components/demo-message/index.ts","webpack:///../../account/src/Components/demo-message/demo-message.tsx","webpack:///../../account/src/Components/error-component/index.ts","webpack:///../../account/src/Components/error-component/error-component.tsx","webpack:///../../account/src/Components/poi/status/expired/index.js","webpack:///../../account/src/Components/poi/status/expired/expired.tsx","webpack:///../../account/src/Components/poi/idv-status/idv-limited/idv-limited.tsx","webpack:///../../account/src/Components/poi/idv-status/idv-limited/index.ts","webpack:///../../account/src/Components/poa/poa-button/poa-button.tsx","webpack:///../../account/src/Components/poa/poa-button/index.ts","webpack:///../../account/src/Components/poi/idv-status/idv-submit-complete/idv-submit-complete.tsx","webpack:///../../account/src/Components/poi/idv-status/idv-submit-complete/index.js","webpack:///../../account/src/Components/poi/idv-status/idv-verified/idv-verified.tsx","webpack:///../../account/src/Components/poi/idv-status/idv-verified/index.js","webpack:///../../account/src/Sections/Verification/ProofOfIdentity/idv.jsx","webpack:///../../account/src/Components/poi/status/limited/limited.tsx","webpack:///../../account/src/Components/poi/status/limited/index.js","webpack:///../../account/src/Components/poi/status/not-required/index.ts","webpack:///../../account/src/Components/poi/status/not-required/not-required.tsx","webpack:///../../account/src/Components/poi/status/upload-complete/upload-complete.tsx","webpack:///../../account/src/Components/poi/status/upload-complete/index.ts","webpack:///../../account/src/Components/poa/continue-trading-button/index.ts","webpack:///../../account/src/Components/poi/status/verified/verified.tsx","webpack:///../../account/src/Components/poi/status/verified/index.ts","webpack:///../../account/src/Components/icon-message-list/list-item.tsx","webpack:///../../account/src/Components/icon-message-list/index.ts","webpack:///../../account/src/Components/icon-message-list/icon-message-list.tsx","webpack:///../../account/src/Components/poi/status/rejected-reasons/index.ts","webpack:///../../account/src/Components/poi/status/rejected-reasons/rejected-reasons.tsx","webpack:///../../account/src/Components/poi-manual-upload-failed/index.ts","webpack:///../../account/src/Components/poi-manual-upload-failed/poi-manual-upload-failed.tsx","webpack:///../../account/src/Components/file-uploader-container/upload-file.ts","webpack:///../../account/src/Components/poi/missing-personal-details/missing-personal-details.tsx","webpack:///../../account/src/Components/poi/missing-personal-details/index.js","webpack:///../../account/src/Configs/poi-error-config.tsx","webpack:///../../account/src/Components/poi/poi-confirm-with-example-form-container/poi-confirm-with-example-form-container.tsx","webpack:///../../account/src/Components/poi/poi-confirm-with-example-form-container/index.ts","webpack:///../../account/src/Sections/Verification/ProofOfIdentity/onfido-sdk-view.tsx","webpack:///../../account/src/Sections/Verification/ProofOfIdentity/onfido-sdk-view-container.tsx","webpack:///../../account/src/Components/poi/status/unsupported/constants.ts","webpack:///../../account/src/Components/poi/status/unsupported/card-details/input-field.tsx","webpack:///../../account/src/Components/poi/status/unsupported/card-details/uploader.tsx","webpack:///../../account/src/Components/poi/status/unsupported/card-details/utils.ts","webpack:///../../account/src/Components/poi/status/unsupported/card-details/documents-upload.tsx","webpack:///../../account/src/Components/poi/status/unsupported/card-details/selfie-upload.tsx","webpack:///../../account/src/Components/poi/status/unsupported/card-details/card-details.tsx","webpack:///../../account/src/Components/poi/status/unsupported/card-details/index.ts","webpack:///../../account/src/Components/poi/status/unsupported/detail-component.tsx","webpack:///../../account/src/Components/poi/status/unsupported/card-with-arrow.tsx","webpack:///../../account/src/Components/poi/status/unsupported/documents.tsx","webpack:///../../account/src/Components/poi/status/unsupported/unsupported.tsx","webpack:///../../account/src/Components/poi/status/unsupported/index.js","webpack:///../../account/src/Sections/Verification/ProofOfIdentity/onfido.jsx","webpack:///../../account/src/Components/poi/poi-country-selector/poi-country-selector.tsx","webpack:///../../account/src/Components/poi/poi-country-selector/index.ts","webpack:///../../account/src/Components/poi/idv-document-submit/idv-document-submit.tsx","webpack:///../../account/src/Components/poi/idv-document-submit/index.js","webpack:///../../account/src/Components/poi/idv-status/idv-failed/idv-failed.tsx","webpack:///../../account/src/Components/poi/idv-status/idv-failed/index.ts","webpack:///../../account/src/Sections/Verification/ProofOfIdentity/proof-of-identity-submission.jsx","webpack:///../../account/src/Sections/Verification/ProofOfIdentity/proof-of-identity-container.jsx","webpack:///./App/Containers/VerificationModal/verification-modal-content.tsx","webpack:///./App/Containers/VerificationModal/index.ts","webpack:///./App/Containers/VerificationModal/verification-modal.tsx","webpack:///../../hooks/src/useFileUploader.ts","webpack:///../../hooks/src/useNotificationEvent.ts","webpack:///../../hooks/src/useResidenceList.ts","webpack:///../../hooks/src/useServiceToken.ts"],"sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\n\nimport { Text } from '@deriv/components';\nimport { useDevice } from '@deriv-com/ui';\nimport { Localize } from '@deriv/translations';\n\nexport type TFormBodySection = {\n    /**\n     *  A boolean value indicating whether the section has a side note.\n     */\n    has_side_note?: boolean;\n    /**\n     * The side note to display next to the main content.\n     */\n    side_note?: string | React.ReactElement;\n    /**\n     * The position of the side note relative to the main content.\n     * @default 'left'\n     * */\n    side_note_position?: 'left' | 'right';\n    /**\n     * The type of the side note either it can be locaziled string (`localize or Localize`) component or image as JSX element.\n     * @default 'text'\n     * */\n    type?: 'text' | 'image';\n};\n\n/**\n *  A component that renders a form body section with an optional side note.\n *\n *  This component renders a section of a form body. It can optionally display a side note\n *  and allows reversing the order of the side note and the main content.\n *  @returns {JSX.Element} A React component that renders a form body section.\n */\nconst FormBodySection = ({\n    children,\n    has_side_note,\n    side_note,\n    side_note_position = 'left',\n    type = 'text',\n}: React.PropsWithChildren<TFormBodySection>): JSX.Element => {\n    const { isDesktop } = useDevice();\n    if (has_side_note) {\n        return (\n            <div\n                data-testid='dt_side_note_container'\n                className={clsx('account-form__section', {\n                    'account-form__section--reversed': side_note_position === 'right',\n                })}\n            >\n                <div\n                    className={clsx('account-form__section-side-note', {\n                        'account-form__section-side-note__example': type !== 'text',\n                    })}\n                >\n                    {type === 'text' ? (\n                        <Text color='less-prominent' size={isDesktop ? 'xs' : 'xxs'} data-testid='dt_side_note_text'>\n                            {side_note}\n                        </Text>\n                    ) : (\n                        <React.Fragment>\n                            <Text as='p' size={isDesktop ? 'xs' : 'xxs'} weight='bold'>\n                                <Localize i18n_default_text='Example :' />\n                            </Text>\n                            <div className='account-form__section-side-note__example-image'>{side_note}</div>\n                        </React.Fragment>\n                    )}\n                </div>\n                <div className='account-form__section-content'>{children}</div>\n            </div>\n        );\n    }\n    return children as JSX.Element;\n};\n\nexport default FormBodySection;\n","import FormBodySection from './form-body-section';\n\nexport default FormBodySection;\n","// [TODO] - To be removed once CFD is configured to use the new form-body component\nimport React, { Fragment } from 'react';\nimport clsx from 'clsx';\nimport { Text } from '@deriv/components';\n\nexport type TFormSubHeader = {\n    description?: string;\n    subtitle?: string;\n    title: string;\n    title_text_size?: string;\n};\n\nexport const FormSubHeader = ({ description, subtitle, title, title_text_size = 'xs' }: TFormSubHeader) => {\n    const title_as_class = title.replace(/\\s+/g, '-').toLowerCase();\n\n    return (\n        <Fragment>\n            <div\n                className={clsx('account-form__header', title_as_class, {\n                    'account-form__header--has-description': !!description,\n                })}\n                data-testid='form-sub-header'\n            >\n                <div className='account-form__header-section'>\n                    <Text\n                        as='h1'\n                        color='prominent'\n                        weight='bold'\n                        size={title_text_size}\n                        className='account-form__title'\n                    >\n                        {title}\n                    </Text>\n                    {subtitle && (\n                        <Text as='h2' size='xxxs' color='prominent' className='account-form__subtitle'>\n                            {subtitle}\n                        </Text>\n                    )}\n                </div>\n            </div>\n            {description && (\n                <Text as='p' className='account-form__description'>\n                    {description}\n                </Text>\n            )}\n        </Fragment>\n    );\n};\n","import { FormSubHeader } from './form-sub-header';\n\nexport default FormSubHeader;\n","import React from 'react';\nimport { FieldInputProps, FormikHelpers, FormikState, Field } from 'formik';\nimport { Input } from '@deriv/components';\n\ntype FormInputFieldProps = {\n    name: string;\n    optional?: boolean;\n    warn?: string;\n} & React.ComponentProps<typeof Input>;\n\ntype TFormInputFieldHelpers<T> = {\n    field: FieldInputProps<string>;\n    form: FormikHelpers<T> & FormikState<T>;\n};\n\n/**\n * FormInputField is a wrapper around Input that can be used with Formik.\n * @name FormInputField\n * @param name - Name of the field\n * @param [optional] - Whether the field is optional\n * @param [warn] - Display a warning message\n * @param [props] - Other props to pass to Input\n * @returns ReactNode\n */\nconst FormInputField = ({ name, warn, ...rest }: FormInputFieldProps) => (\n    <Field name={name}>\n        {({ field, form: { errors, touched, setFieldTouched } }: TFormInputFieldHelpers<Record<string, string>>) => {\n            return (\n                <Input\n                    {...field}\n                    {...rest}\n                    type='text'\n                    autoComplete='off'\n                    error={touched[field.name] && errors[field.name] ? errors[field.name] : undefined}\n                    warn={warn}\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        !touched[field.name] && setFieldTouched(field.name);\n                        field.onChange(e);\n                    }}\n                />\n            );\n        }}\n    </Field>\n);\n\nexport default FormInputField;\n","/* eslint-disable @typescript-eslint/ban-ts-comment */\n//@ts-nocheck [TODO] - Need to fix typescript errors\n// [TODO] - Remove React after CFD is configured with new JSX transformer\nimport React from 'react';\nimport { Field, FieldProps } from 'formik';\nimport { DateOfBirthPicker } from '@deriv/components';\nimport { toMoment } from '@deriv/shared';\n\ntype TDateOfBirthFieldProps = {\n    name: string;\n    portal_id: string;\n} & Omit<React.ComponentProps<typeof DateOfBirthPicker>, 'onBlur' | 'onChange' | 'error'>;\n\n/**\n * DateOfBirthField is a wrapper around DateOfBirthPicker that can be used with Formik.\n * @name DateOfBirthField\n * @param name - Name of the field\n * @param portal_id - Portal ID\n * @param [props] - Other props to pass to DateOfBirthPicker\n * @returns {ReactNode}\n */\nconst DateOfBirthField = ({ name, portal_id, ...rest }: TDateOfBirthFieldProps) => (\n    <Field name={name}>\n        {({ field, form: { setFieldValue }, meta: { error, touched } }: FieldProps<string | moment.Moment>) => (\n            <DateOfBirthPicker\n                {...rest}\n                {...field}\n                error={touched ? error : undefined}\n                name={name}\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                onChange={({ target }: any) =>\n                    setFieldValue(name, target?.value ? toMoment(target.value).format('YYYY-MM-DD') : '', true)\n                }\n                portal_id={portal_id}\n            />\n        )}\n    </Field>\n);\n\nexport default DateOfBirthField;\n","import { localize } from '@deriv-com/translations';\n\nexport const getIncomeSourceList = () => [\n    {\n        text: localize('Salaried Employee'),\n        value: 'Salaried Employee',\n    },\n    {\n        text: localize('Self-Employed'),\n        value: 'Self-Employed',\n    },\n    {\n        text: localize('Investments & Dividends'),\n        value: 'Investments & Dividends',\n    },\n    {\n        text: localize('Pension'),\n        value: 'Pension',\n    },\n    {\n        text: localize('State Benefits'),\n        value: 'State Benefits',\n    },\n    {\n        text: localize('Savings & Inheritance'),\n        value: 'Savings & Inheritance',\n    },\n];\n\nexport const getEmploymentStatusList = () => [\n    {\n        text: localize('Employed'),\n        value: 'Employed',\n    },\n    {\n        text: localize('Pensioner'),\n        value: 'Pensioner',\n    },\n    {\n        text: localize('Self-Employed'),\n        value: 'Self-Employed',\n    },\n    {\n        text: localize('Student'),\n        value: 'Student',\n    },\n    {\n        text: localize('Unemployed'),\n        value: 'Unemployed',\n    },\n];\n\nexport const getEmploymentIndustryList = () => [\n    {\n        text: localize('Construction'),\n        value: 'Construction',\n    },\n    {\n        text: localize('Education'),\n        value: 'Education',\n    },\n    {\n        text: localize('Finance'),\n        value: 'Finance',\n    },\n    {\n        text: localize('Health'),\n        value: 'Health',\n    },\n    {\n        text: localize('Tourism'),\n        value: 'Tourism',\n    },\n    {\n        text: localize('Information & Communications Technology'),\n        value: 'Information & Communications Technology',\n    },\n    {\n        text: localize('Science & Engineering'),\n        value: 'Science & Engineering',\n    },\n    {\n        text: localize('Legal'),\n        value: 'Legal',\n    },\n    {\n        text: localize('Social & Cultural'),\n        value: 'Social & Cultural',\n    },\n    {\n        text: localize('Agriculture'),\n        value: 'Agriculture',\n    },\n    {\n        text: localize('Real Estate'),\n        value: 'Real Estate',\n    },\n    {\n        text: localize('Food Services'),\n        value: 'Food Services',\n    },\n    {\n        text: localize('Manufacturing'),\n        value: 'Manufacturing',\n    },\n    {\n        text: localize('Unemployed'),\n        value: 'Unemployed',\n    },\n];\n\nexport const getOccupationList = () => [\n    {\n        text: localize('Chief Executives, Senior Officials and Legislators'),\n        value: 'Chief Executives, Senior Officials and Legislators',\n    },\n    {\n        text: localize('Managers'),\n        value: 'Managers',\n    },\n    {\n        text: localize('Professionals'),\n        value: 'Professionals',\n    },\n    {\n        text: localize('Clerks'),\n        value: 'Clerks',\n    },\n    {\n        text: localize('Personal Care, Sales and Service Workers'),\n        value: 'Personal Care, Sales and Service Workers',\n    },\n    {\n        text: localize('Agricultural, Forestry and Fishery Workers'),\n        value: 'Agricultural, Forestry and Fishery Workers',\n    },\n    {\n        text: localize('Craft, Metal, Electrical and Electronics Workers'),\n        value: 'Craft, Metal, Electrical and Electronics Workers',\n    },\n    {\n        text: localize('Plant and Machine Operators and Assemblers'),\n        value: 'Plant and Machine Operators and Assemblers',\n    },\n    {\n        text: localize('Cleaners and Helpers'),\n        value: 'Cleaners and Helpers',\n    },\n    {\n        text: localize('Mining, Construction, Manufacturing and Transport Workers'),\n        value: 'Mining, Construction, Manufacturing and Transport Workers',\n    },\n    {\n        text: localize('Armed Forces'),\n        value: 'Armed Forces',\n    },\n    {\n        text: localize('Government Officers'),\n        value: 'Government Officers',\n    },\n    {\n        text: localize('Students'),\n        value: 'Students',\n    },\n    {\n        text: localize('Unemployed'),\n        value: 'Unemployed',\n    },\n];\n\nexport const getSourceOfWealthList = () => [\n    {\n        text: localize('Accumulation of Income/Savings'),\n        value: 'Accumulation of Income/Savings',\n    },\n    {\n        text: localize('Cash Business'),\n        value: 'Cash Business',\n    },\n    {\n        text: localize('Company Ownership'),\n        value: 'Company Ownership',\n    },\n    {\n        text: localize('Divorce Settlement'),\n        value: 'Divorce Settlement',\n    },\n    {\n        text: localize('Inheritance'),\n        value: 'Inheritance',\n    },\n    {\n        text: localize('Investment Income'),\n        value: 'Investment Income',\n    },\n    {\n        text: localize('Sale of Property'),\n        value: 'Sale of Property',\n    },\n];\n\nexport const getEducationLevelList = () => [\n    {\n        text: localize('Primary'),\n        value: 'Primary',\n    },\n    {\n        text: localize('Secondary'),\n        value: 'Secondary',\n    },\n    {\n        text: localize('Tertiary'),\n        value: 'Tertiary',\n    },\n];\n\nexport const getNetIncomeList = () => [\n    {\n        text: localize('Less than $25,000'),\n        value: 'Less than $25,000',\n    },\n    {\n        text: localize('$25,000 - $50,000'),\n        value: '$25,000 - $50,000',\n    },\n    {\n        text: localize('$50,001 - $100,000'),\n        value: '$50,001 - $100,000',\n    },\n    {\n        text: localize('$100,001 - $500,000'),\n        value: '$100,001 - $500,000',\n    },\n    {\n        text: localize('Over $500,000'),\n        value: 'Over $500,000',\n    },\n];\n\nexport const getEstimatedWorthList = () => [\n    {\n        text: localize('Less than $100,000'),\n        value: 'Less than $100,000',\n    },\n    {\n        text: localize('$100,000 - $250,000'),\n        value: '$100,000 - $250,000',\n    },\n    {\n        text: localize('$250,001 - $500,000'),\n        value: '$250,001 - $500,000',\n    },\n    {\n        text: localize('$500,001 - $1,000,000'),\n        value: '$500,001 - $1,000,000',\n    },\n    {\n        text: localize('Over $1,000,000'),\n        value: 'Over $1,000,000',\n    },\n];\n\nexport const getAccountTurnoverList = () => {\n    return [...getNetIncomeList()];\n};\n\nexport const getBinaryOptionsTradingExperienceList = () => [\n    {\n        text: localize('0-1 year'),\n        value: '0-1 year',\n    },\n    {\n        text: localize('1-2 years'),\n        value: '1-2 years',\n    },\n    {\n        text: localize('Over 3 years'),\n        value: 'Over 3 years',\n    },\n];\n\nexport const getBinaryOptionsTradingFrequencyList = () => [\n    {\n        text: localize('0-5 transactions in the past 12 months'),\n        value: '0-5 transactions in the past 12 months',\n    },\n    {\n        text: localize('6-10 transactions in the past 12 months'),\n        value: '6-10 transactions in the past 12 months',\n    },\n    {\n        text: localize('11-39 transactions in the past 12 months'),\n        value: '11-39 transactions in the past 12 months',\n    },\n    {\n        text: localize('40 transactions or more in the past 12 months'),\n        value: '40 transactions or more in the past 12 months',\n    },\n];\n\nexport const getCfdTradingExperienceList = () => {\n    return [...getBinaryOptionsTradingExperienceList()];\n};\n\nexport const getCfdTradingFrequencyList = () => {\n    return [...getBinaryOptionsTradingFrequencyList()];\n};\n\nexport const getForexTradingExperienceList = () => {\n    return [...getBinaryOptionsTradingExperienceList()];\n};\n\nexport const getForexTradingFrequencyList = () => {\n    return [...getBinaryOptionsTradingFrequencyList()];\n};\n\nexport const getOtherInstrumentsTradingExperienceList = () => {\n    return [...getBinaryOptionsTradingExperienceList()];\n};\n\nexport const getOtherInstrumentsTradingFrequencyList = () => {\n    return [...getBinaryOptionsTradingFrequencyList()];\n};\n","import React from 'react';\nimport { Field, FieldProps } from 'formik';\nimport { Dropdown, SelectNative } from '@deriv/components';\nimport { useTranslations } from '@deriv-com/translations';\nimport { getEmploymentStatusList } from '../../../Constants/financial-information-list';\nimport { useDevice } from '@deriv-com/ui';\nimport clsx from 'clsx';\n\ntype TEmploymentStatusFieldProps = {\n    required: boolean;\n    is_disabled: boolean;\n    fieldFocused?: boolean;\n};\n\nconst EmploymentStatusField = ({ required, is_disabled, fieldFocused }: TEmploymentStatusFieldProps) => {\n    const { isDesktop } = useDevice();\n    const { localize } = useTranslations();\n\n    return (\n        <Field name='employment_status'>\n            {({ field, form: { setFieldValue, setFieldTouched, handleBlur, handleChange }, meta }: FieldProps) => (\n                <div className='employment-status-field'>\n                    {isDesktop ? (\n                        <Dropdown\n                            {...field}\n                            placeholder={required ? localize('Employment status*') : localize('Employment status')}\n                            is_align_text_left\n                            name={field.name}\n                            list={getEmploymentStatusList()}\n                            value={field.value}\n                            onChange={(e: { target: { name: string; value: string } }) => {\n                                setFieldValue('tin_skipped', 0, true);\n                                setFieldValue(field.name, e.target?.value, true);\n                                handleChange(e);\n                            }}\n                            handleBlur={handleBlur}\n                            error={meta.touched ? meta.error : undefined}\n                            disabled={is_disabled}\n                            className={clsx('dropdown-field', { 'focus-field': fieldFocused })}\n                        />\n                    ) : (\n                        <SelectNative\n                            {...field}\n                            placeholder={localize('Please select')}\n                            name={field.name}\n                            label={required ? localize('Employment status*') : localize('Employment status')}\n                            list_items={getEmploymentStatusList()}\n                            value={field.value}\n                            error={meta.touched ? meta.error : undefined}\n                            onChange={(e: React.ChangeEvent<HTMLSelectElement>) => {\n                                setFieldValue('tin_skipped', 0, true);\n                                setFieldTouched('employment_status', true);\n                                handleChange(e);\n                            }}\n                            disabled={is_disabled}\n                            className={clsx({ 'focus-field': fieldFocused })}\n                        />\n                    )}\n                </div>\n            )}\n        </Field>\n    );\n};\n\nexport default EmploymentStatusField;\n","/* eslint-disable @typescript-eslint/ban-ts-comment */\n//@ts-nocheck [TODO] - Need to fix typescript errors in Autocomplete & SelectNative components\n\nimport { ChangeEvent } from 'react';\nimport { Field, FieldProps } from 'formik';\nimport { ResidenceList } from '@deriv/api-types';\nimport { Autocomplete, SelectNative, Popover } from '@deriv/components';\nimport { useResidenceList } from '@deriv/hooks';\nimport { TItem } from '@deriv/components/src/components/dropdown-list';\nimport { useTranslations } from '@deriv-com/translations';\nimport { useDevice } from '@deriv-com/ui';\nimport clsx from 'clsx';\n\ntype TTaxResidenceFieldProps = {\n    required?: boolean;\n    setIsTaxResidencePopoverOpen: (is_open: boolean) => void;\n    setIsTinPopoverOpen: (is_open: boolean) => void;\n    is_tax_residence_popover_open: boolean;\n    disabled: boolean;\n    fieldFocused?: boolean;\n};\n\nconst TaxResidenceField = ({\n    required = false,\n    setIsTaxResidencePopoverOpen,\n    setIsTinPopoverOpen,\n    is_tax_residence_popover_open,\n    disabled,\n    fieldFocused,\n}: TTaxResidenceFieldProps) => {\n    const { data: residence_list } = useResidenceList();\n    const { isDesktop } = useDevice();\n    const { localize } = useTranslations();\n\n    return (\n        <Field name='tax_residence'>\n            {({ field, form: { setFieldValue }, meta }: FieldProps) => (\n                <div className='details-form__tax'>\n                    {isDesktop ? (\n                        <Autocomplete\n                            {...field}\n                            data-lpignore='true'\n                            autoComplete='off' // prevent chrome autocomplete\n                            label={required ? localize('Tax residence*') : localize('Tax residence')}\n                            error={meta.touched ? meta.error : undefined}\n                            list_items={residence_list}\n                            onItemSelection={(item: TItem) => {\n                                setFieldValue(\n                                    'tax_residence',\n                                    (item as ResidenceList[0]).value ? (item as ResidenceList[0]).text : '',\n                                    true\n                                );\n                            }}\n                            data-testid='tax_residence'\n                            disabled={disabled}\n                            required={required}\n                            className={clsx({ 'focus-field': fieldFocused })}\n                        />\n                    ) : (\n                        <SelectNative\n                            {...field}\n                            placeholder={required ? localize('Tax residence*') : localize('Tax residence')}\n                            name={field.name}\n                            label={required ? localize('Tax residence*') : localize('Tax residence')}\n                            list_items={residence_list}\n                            value={field.value}\n                            use_text\n                            error={meta.touched ? meta.error : ''}\n                            onChange={(e: ChangeEvent<HTMLSelectElement>) => {\n                                field.onChange(e);\n                                setFieldValue('tax_residence', e.target.value, true);\n                            }}\n                            required={required}\n                            data_testid='tax_residence_mobile'\n                            disabled={disabled}\n                            className={clsx({ 'focus-field': fieldFocused })}\n                        />\n                    )}\n                    <div\n                        data-testid='tax_residence_pop_over'\n                        onClick={e => {\n                            setIsTaxResidencePopoverOpen(true);\n                            setIsTinPopoverOpen(false);\n                            e.stopPropagation();\n                        }}\n                    >\n                        <Popover\n                            alignment={isDesktop ? 'right' : 'left'}\n                            icon='info'\n                            message={localize(\n                                'The country in which you meet the criteria for paying taxes. Usually the country in which you physically reside.'\n                            )}\n                            zIndex='9998'\n                            disable_message_icon\n                            is_open={is_tax_residence_popover_open}\n                        />\n                    </div>\n                </div>\n            )}\n        </Field>\n    );\n};\n\nexport default TaxResidenceField;\n","import { Localize, useTranslations } from '@deriv-com/translations';\nimport FormInputField from './form-input-field';\nimport { Popover } from '@deriv/components';\nimport { OECD_TIN_FORMAT_URL } from '../../../Constants/external-urls';\nimport { useDevice } from '@deriv-com/ui';\nimport clsx from 'clsx';\n\ntype TTaxIdentificationNumberFieldProps = {\n    required?: boolean;\n    disabled: boolean;\n    is_tin_popover_open: boolean;\n    setIsTinPopoverOpen: (is_open: boolean) => void;\n    setIsTaxResidencePopoverOpen: (is_open: boolean) => void;\n    fieldFocused?: boolean;\n};\n\nconst TaxIdentificationNumberField = ({\n    required = false,\n    is_tin_popover_open,\n    setIsTinPopoverOpen,\n    setIsTaxResidencePopoverOpen,\n    disabled,\n    fieldFocused,\n}: TTaxIdentificationNumberFieldProps) => {\n    const { localize } = useTranslations();\n\n    const { isDesktop } = useDevice();\n\n    return (\n        <div className='details-form__tax'>\n            <FormInputField\n                name='tax_identification_number'\n                label={required ? localize('Tax identification number*') : localize('Tax identification number')}\n                placeholder={localize('Tax identification number')}\n                data-testid='tax_identification_number'\n                disabled={disabled}\n                required={required}\n                className={clsx({ 'focus-field': fieldFocused })}\n            />\n            <div\n                data-testid='tax_identification_number_pop_over'\n                onClick={e => {\n                    setIsTaxResidencePopoverOpen(false);\n                    setIsTinPopoverOpen(true);\n                    if ((e.target as HTMLElement).tagName !== 'A') e.stopPropagation();\n                }}\n            >\n                <Popover\n                    alignment={isDesktop ? 'right' : 'left'}\n                    icon='info'\n                    is_open={is_tin_popover_open}\n                    message={\n                        <Localize\n                            i18n_default_text={\n                                \"Don't know your tax identification number? Click <0>here</0> to learn more.\"\n                            }\n                            components={[\n                                <a\n                                    key={0}\n                                    className='link link--red'\n                                    rel='noopener noreferrer'\n                                    target='_blank'\n                                    href={OECD_TIN_FORMAT_URL}\n                                />,\n                            ]}\n                        />\n                    }\n                    zIndex='9998'\n                    disable_message_icon\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default TaxIdentificationNumberField;\n","export const OECD_TIN_FORMAT_URL =\n    'https://www.oecd.org/tax/automatic-exchange/crs-implementation-and-assistance/tax-identification-numbers/';\n","/* eslint-disable @typescript-eslint/ban-ts-comment */\n//@ts-nocheck [TODO] - Need to fix typescript errors\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport { Field, FormikProps, FieldProps, useFormikContext } from 'formik';\nimport { ResidenceList } from '@deriv/api-types';\nimport { Autocomplete, Input, SelectNative } from '@deriv/components';\nimport { formatInput, getIDVNotApplicableOption } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport {\n    getDocumentData,\n    preventEmptyClipboardPaste,\n    generatePlaceholderText,\n    getExampleFormat,\n} from '../../Helpers/utils';\nimport { TDocument, TIDVFormValues } from '../../Types';\nimport { useDevice } from '@deriv-com/ui';\n\ntype TIDVFormProps = {\n    selected_country: ResidenceList[0];\n    hide_hint?: boolean;\n    class_name?: string;\n    is_for_real_account_signup_modal?: boolean;\n    is_for_mt5?: boolean;\n};\n\nconst IDVForm = ({\n    class_name,\n    selected_country,\n    hide_hint,\n    is_for_real_account_signup_modal = false,\n    is_for_mt5 = false,\n}: TIDVFormProps) => {\n    const [document_list, setDocumentList] = React.useState<Array<TDocument>>([]);\n    const [selected_doc, setSelectedDoc] = React.useState('');\n    const { isDesktop } = useDevice();\n\n    const { documents_supported: document_data } = selected_country?.identity?.services?.idv ?? {};\n\n    const { errors, touched, values, handleBlur, handleChange, setFieldValue }: FormikProps<TIDVFormValues> =\n        useFormikContext();\n    const default_document = {\n        id: '',\n        text: '',\n        value: '',\n        example_format: '',\n    };\n\n    const IDV_NOT_APPLICABLE_OPTION = React.useMemo(\n        () => getIDVNotApplicableOption(is_for_real_account_signup_modal),\n        [is_for_real_account_signup_modal]\n    );\n\n    React.useEffect(() => {\n        if (document_data && selected_country && selected_country.value) {\n            const document_types = Object.keys(document_data);\n            if (document_types.length === 0) return;\n\n            const new_document_list = document_types.map(key => {\n                const { display_name, format } = document_data[key];\n                const { new_display_name, example_format, additional_document_example_format } = getDocumentData(\n                    selected_country.value ?? '',\n                    key\n                );\n                const needs_additional_document = !!document_data[key].additional;\n\n                if (needs_additional_document) {\n                    return {\n                        id: key,\n                        text: display_name ?? new_display_name, // Display document name from API if available, else use the one from the helper function\n                        additional: {\n                            display_name: document_data[key].additional?.display_name,\n                            format: document_data[key].additional?.format,\n                            example_format: additional_document_example_format,\n                        },\n                        value: format,\n                        example_format,\n                    };\n                }\n                return {\n                    id: key,\n                    text: display_name ?? new_display_name, // Display document name from API if available, else use the one from the helper function\n                    value: format,\n                    example_format,\n                };\n            });\n\n            setDocumentList([...new_document_list, IDV_NOT_APPLICABLE_OPTION]);\n        }\n    }, [document_data, selected_country, IDV_NOT_APPLICABLE_OPTION, is_for_mt5]);\n\n    const resetDocumentItemSelected = () => {\n        setFieldValue('document_type', default_document, true);\n    };\n\n    const getDocument = (text: string) => {\n        return document_list.find(d => d.text === text) ?? default_document;\n    };\n\n    const onKeyUp = (e: { target: HTMLInputElement }, document_name: string) => {\n        const example_format =\n            document_name === 'document_number'\n                ? values?.document_type?.example_format\n                : values?.document_type?.additional?.example_format;\n        let current_input: string | null = null;\n        current_input = example_format?.includes('-')\n            ? formatInput(example_format, current_input ?? e.target.value, '-')\n            : e.target.value;\n        setFieldValue(document_name, current_input, true);\n    };\n\n    const bindDocumentData = (item: TDocument) => {\n        setFieldValue('document_type', item, true);\n        setSelectedDoc(item?.id);\n        if (item?.id === IDV_NOT_APPLICABLE_OPTION.id) {\n            setFieldValue('document_number', '', false);\n            setFieldValue('document_additional', '', false);\n        }\n    };\n    return (\n        <section className={clsx('idv-form', class_name)}>\n            <div className='details-form'>\n                <div className='poi-form-on-signup__fields'>\n                    <div\n                        className={clsx('proof-of-identity__container', {\n                            'proof-of-identity__container--idv': hide_hint,\n                        })}\n                    >\n                        <div className={clsx('proof-of-identity__inner-container')}>\n                            <div className='proof-of-identity__fieldset-container'>\n                                <fieldset className={clsx({ 'proof-of-identity__fieldset': !hide_hint })}>\n                                    <Field name='document_type'>\n                                        {({ field }: FieldProps) => (\n                                            <React.Fragment>\n                                                {isDesktop ? (\n                                                    <Autocomplete\n                                                        {...field}\n                                                        data-lpignore='true'\n                                                        error={touched.document_type && errors.document_type}\n                                                        autoComplete='off'\n                                                        type='text'\n                                                        label={localize('Choose the document type')}\n                                                        list_items={document_list}\n                                                        value={values.document_type.text}\n                                                        onBlur={(e: { target: HTMLInputElement }) => {\n                                                            handleBlur(e);\n                                                            if (!getDocument(e.target.value)) {\n                                                                resetDocumentItemSelected();\n                                                            }\n                                                        }}\n                                                        onChange={handleChange}\n                                                        onItemSelection={(item: TDocument) => {\n                                                            if (item.text === 'No results found' || !item.text) {\n                                                                setSelectedDoc('');\n                                                                resetDocumentItemSelected();\n                                                            } else {\n                                                                bindDocumentData(item);\n                                                            }\n                                                        }}\n                                                        required\n                                                    />\n                                                ) : (\n                                                    <SelectNative\n                                                        {...field}\n                                                        name='document_type'\n                                                        error={\n                                                            touched.document_type &&\n                                                            (errors.document_type as string | undefined)\n                                                        }\n                                                        label={localize('Choose the document type')}\n                                                        placeholder={localize('Please select')}\n                                                        list_items={document_list}\n                                                        value={values.document_type.text}\n                                                        onChange={e => {\n                                                            handleChange(e);\n                                                            const selected_document = getDocument(e.target.value);\n                                                            bindDocumentData(selected_document);\n                                                        }}\n                                                        use_text={true}\n                                                        required\n                                                    />\n                                                )}\n                                            </React.Fragment>\n                                        )}\n                                    </Field>\n                                </fieldset>\n                                {values?.document_type?.id !== IDV_NOT_APPLICABLE_OPTION.id && (\n                                    <React.Fragment>\n                                        <fieldset\n                                            className={clsx('additional-field', {\n                                                'proof-of-identity__fieldset-input': !hide_hint,\n                                            })}\n                                        >\n                                            <Field name='document_number'>\n                                                {({ field }: FieldProps) => (\n                                                    <Input\n                                                        {...field}\n                                                        name='document_number'\n                                                        bottom_label={\n                                                            values.document_type &&\n                                                            getExampleFormat(values.document_type.example_format ?? '')\n                                                        }\n                                                        disabled={!values.document_type.id}\n                                                        error={\n                                                            (values.document_type.id &&\n                                                                touched.document_number &&\n                                                                errors.document_number) ||\n                                                            errors.error_message\n                                                        }\n                                                        autoComplete='off'\n                                                        placeholder={generatePlaceholderText(selected_doc)}\n                                                        value={values.document_number}\n                                                        onPaste={preventEmptyClipboardPaste}\n                                                        onBlur={handleBlur}\n                                                        onChange={handleChange}\n                                                        onKeyUp={(e: { target: HTMLInputElement }) =>\n                                                            onKeyUp(e, 'document_number')\n                                                        }\n                                                        required\n                                                        label={\n                                                            values.document_type.id &&\n                                                            generatePlaceholderText(selected_doc)\n                                                        }\n                                                    />\n                                                )}\n                                            </Field>\n                                        </fieldset>\n                                        {values.document_type.additional?.display_name && (\n                                            <fieldset className='additional-field'>\n                                                <Field name='document_additional'>\n                                                    {({ field }: FieldProps) => {\n                                                        const additional_document_placeholder = localize(\n                                                            'Enter your {{document_name}}',\n                                                            {\n                                                                document_name:\n                                                                    values.document_type?.additional?.display_name?.toLowerCase() ??\n                                                                    localize('additional document number'),\n                                                            }\n                                                        );\n                                                        return (\n                                                            <Input\n                                                                {...field}\n                                                                name='document_additional'\n                                                                bottom_label={\n                                                                    values.document_type.additional &&\n                                                                    getExampleFormat(\n                                                                        values.document_type.additional?.example_format\n                                                                    )\n                                                                }\n                                                                disabled={!values.document_type.id}\n                                                                error={\n                                                                    (touched.document_additional &&\n                                                                        errors.document_additional) ||\n                                                                    errors.error_message\n                                                                }\n                                                                autoComplete='off'\n                                                                placeholder={additional_document_placeholder}\n                                                                value={values.document_additional}\n                                                                onPaste={preventEmptyClipboardPaste}\n                                                                onBlur={handleBlur}\n                                                                onChange={handleChange}\n                                                                onKeyUp={(e: { target: HTMLInputElement }) =>\n                                                                    onKeyUp(e, 'document_additional')\n                                                                }\n                                                                required\n                                                            />\n                                                        );\n                                                    }}\n                                                </Field>\n                                            </fieldset>\n                                        )}\n                                    </React.Fragment>\n                                )}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n    );\n};\n\nexport default IDVForm;\n","/* eslint-disable @typescript-eslint/ban-ts-comment */\n//@ts-nocheck [TODO] - Need to fix typescript errors in Autocomplete & SelectNative components\nimport React from 'react';\nimport { useDevice } from '@deriv-com/ui';\nimport { SelectNative, Dropdown } from '@deriv/components';\nimport { useTranslations } from '@deriv-com/translations';\nimport { Field, FieldProps } from 'formik';\nimport clsx from 'clsx';\n\ntype TAccountOpeningReasonFieldProps = {\n    required: boolean;\n    account_opening_reason_list: { text: string; value: string }[];\n    setFieldValue: (field: string, value: string, should_validate?: boolean) => void;\n    disabled: boolean;\n    fieldFocused?: boolean;\n    is_modal?: boolean;\n};\n\nconst AccountOpeningReasonField = ({\n    required,\n    account_opening_reason_list,\n    setFieldValue,\n    disabled,\n    fieldFocused,\n    is_modal,\n}: TAccountOpeningReasonFieldProps) => {\n    const { isDesktop } = useDevice();\n    const { localize } = useTranslations();\n\n    return (\n        <React.Fragment>\n            <Field name='account_opening_reason'>\n                {({ field, meta }: FieldProps) => (\n                    <div className='account-form__fieldset' id='account-opening-reason'>\n                        {isDesktop ? (\n                            <Dropdown\n                                placeholder={\n                                    required ? localize('Account opening reason*') : localize('Account opening reason')\n                                }\n                                {...field}\n                                disabled={disabled}\n                                is_align_text_left\n                                list={account_opening_reason_list}\n                                error={meta.touched && meta.error ? meta.error : ''}\n                                required\n                                className={clsx({ 'focus-field': fieldFocused })}\n                                list_portal_id={is_modal ? 'modal_root' : ''}\n                            />\n                        ) : (\n                            <SelectNative\n                                placeholder={localize('Please select')}\n                                {...field}\n                                label={\n                                    required ? localize('Account opening reason*') : localize('Account opening reason')\n                                }\n                                list_items={account_opening_reason_list}\n                                error={meta.touched && meta.error ? meta.error : ''}\n                                onChange={e => {\n                                    field.onChange(e);\n                                    setFieldValue('account_opening_reason', e.target.value, true);\n                                }}\n                                required\n                                data_testid='account_opening_reason_mobile'\n                                disabled={disabled}\n                                className={clsx({ 'focus-field': fieldFocused })}\n                            />\n                        )}\n                    </div>\n                )}\n            </Field>\n        </React.Fragment>\n    );\n};\n\nexport default AccountOpeningReasonField;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport clsx from 'clsx';\nimport { Field, useFormikContext } from 'formik';\nimport { Autocomplete, Checkbox, InlineMessage, RadioGroup, SelectNative, Text } from '@deriv/components';\nimport { routes, validPhone } from '@deriv/shared';\nimport { Localize, localize } from '@deriv/translations';\nimport { isFieldImmutable, verifyFields } from '../../Helpers/utils';\nimport FormBodySection from '../form-body-section';\nimport { DateOfBirthField, FormInputField } from './form-fields';\nimport FormSubHeader from '../form-sub-header';\nimport InlineNoteWithIcon from '../inline-note-with-icon';\nimport { useResidenceList } from '@deriv/hooks';\nimport { useDevice } from '@deriv-com/ui';\nimport AccountOpeningReasonField from './form-fields/account-opening-reason';\n\nconst PersonalDetailsForm = props => {\n    const { isDesktop } = useDevice();\n    const {\n        inline_note_text,\n        is_virtual,\n        is_eu_user,\n        is_svg,\n        is_rendered_for_idv,\n        editable_fields = [],\n        has_real_account,\n        is_fully_authenticated,\n        account_opening_reason_list,\n        closeRealAccountSignup,\n        salutation_list,\n        is_rendered_for_onfido,\n        is_qualified_for_poa,\n        class_name,\n        states_list,\n        side_note,\n        no_confirmation_needed,\n        mismatch_status,\n    } = props;\n    const autocomplete_value = 'none';\n    // need to put this check related to DIEL clients\n    const is_svg_only = is_svg && !is_eu_user;\n\n    const { errors, touched, values, setFieldValue, handleChange, handleBlur } = useFormikContext();\n\n    const { data: residence_list } = useResidenceList();\n\n    const getNameAndDobLabels = () => {\n        const is_asterisk_needed = is_svg || is_eu_user || is_rendered_for_onfido || is_rendered_for_idv;\n        const first_name_label = is_asterisk_needed ? localize('First name*') : localize('First name');\n        const last_name_label = is_asterisk_needed ? localize('Last name*') : localize('Last name');\n        const dob_label = is_asterisk_needed ? localize('Date of birth*') : localize('Date of birth');\n\n        return {\n            first_name_label,\n            last_name_label,\n            dob_label,\n        };\n    };\n\n    const is_rendered_for_idv_or_onfido = is_rendered_for_idv || is_rendered_for_onfido;\n\n    const getFieldHint = field_name =>\n        is_svg_only || is_rendered_for_idv_or_onfido ? (\n            <Localize\n                i18n_default_text={'Your {{ field_name }} as in your identity document'}\n                values={{ field_name }}\n            />\n        ) : (\n            <Localize\n                i18n_default_text={'Please enter your {{ field_name }} as in your official identity documents.'}\n                values={{ field_name }}\n            />\n        );\n\n    const handleSalutationSelection = event => {\n        if (event.target?.type === 'radio') {\n            setFieldValue('salutation', event.target?.value);\n        }\n    };\n\n    const poa_clarification_message = (\n        <Localize i18n_default_text='Use the same address that appears on your proof of address (utility bill, bank statement, etc.).' />\n    );\n\n    // need to disable the checkbox if the user has not filled in the name and dob fields initially\n    const is_confirmation_checkbox_disabled = verifyFields(mismatch_status).some(\n        field => !values[field] || errors[field]\n    );\n\n    return (\n        <React.Fragment>\n            <div\n                className={clsx(class_name, {\n                    'account-form__poi-confirm-example': is_rendered_for_idv,\n                })}\n            >\n                {(is_svg_only || is_rendered_for_idv_or_onfido) && (\n                    <div className='account-form__poi-inline-message'>\n                        <InlineMessage message={inline_note_text} size='md' />\n                    </div>\n                )}\n                {is_qualified_for_poa && (\n                    <InlineNoteWithIcon\n                        icon='IcAlertWarning'\n                        message={poa_clarification_message}\n                        font_size={isDesktop ? 'xs' : 'xxxs'}\n                    />\n                )}\n                <FormBodySection\n                    has_side_note={is_rendered_for_idv_or_onfido || is_svg_only}\n                    side_note={side_note}\n                    side_note_position='right'\n                    type='image'\n                >\n                    <fieldset className='account-form__fieldset'>\n                        {'salutation' in values && !is_eu_user && (\n                            <div>\n                                <Text size={isDesktop ? 'xxs' : 'xs'} align={!isDesktop && 'center'}>\n                                    {is_virtual ? (\n                                        localize(\n                                            'Please remember that it is your responsibility to keep your answers accurate and up to date. You can update your personal details at any time in your account settings.'\n                                        )\n                                    ) : (\n                                        <Localize\n                                            i18n_default_text='Please remember that it is your responsibility to keep your answers accurate and up to date. You can update your personal details at any time in your <0>account settings</0>.'\n                                            components={[\n                                                <Link\n                                                    to={routes.personal_details}\n                                                    key={0}\n                                                    className='link'\n                                                    onClick={closeRealAccountSignup}\n                                                />,\n                                            ]}\n                                        />\n                                    )}\n                                </Text>\n                            </div>\n                        )}\n                        {is_eu_user && !is_rendered_for_onfido && !is_qualified_for_poa && (\n                            <FormSubHeader\n                                title={'salutation' in values ? localize('Title and name') : localize('Name')}\n                            />\n                        )}\n                        {'salutation' in values && (\n                            <span onClick={handleSalutationSelection}>\n                                <RadioGroup\n                                    className='dc-radio__input'\n                                    name='salutation'\n                                    selected={values.salutation}\n                                    onToggle={e => {\n                                        e.persist();\n                                        setFieldValue('salutation', e.target.value);\n                                    }}\n                                    required\n                                >\n                                    {salutation_list.map(item => (\n                                        <RadioGroup.Item\n                                            key={item.value}\n                                            label={item.label}\n                                            value={item.value}\n                                            disabled={\n                                                !!values.salutation && isFieldImmutable('salutation', editable_fields)\n                                            }\n                                            has_error={!!(touched.salutation && errors.salutation)}\n                                        />\n                                    ))}\n                                </RadioGroup>\n                            </span>\n                        )}\n                        {'first_name' in values && (\n                            <FormInputField\n                                name='first_name'\n                                required={is_svg}\n                                label={getNameAndDobLabels().first_name_label}\n                                hint={getFieldHint(localize('first name'))}\n                                disabled={\n                                    isFieldImmutable('first_name', editable_fields) ||\n                                    (values?.first_name && has_real_account)\n                                }\n                                placeholder={localize('John')}\n                                data-testid='first_name'\n                            />\n                        )}\n                        {'last_name' in values && (\n                            <FormInputField\n                                name='last_name'\n                                required={is_svg}\n                                label={getNameAndDobLabels().last_name_label}\n                                hint={getFieldHint(localize('last name'))}\n                                disabled={\n                                    isFieldImmutable('last_name', editable_fields) ||\n                                    (values?.last_name && has_real_account)\n                                }\n                                placeholder={localize('Doe')}\n                                data-testid='last_name'\n                            />\n                        )}\n                        {is_eu_user && !is_qualified_for_poa && <FormSubHeader title={localize('Other details')} />}\n                        {'date_of_birth' in values && (\n                            <DateOfBirthField\n                                name='date_of_birth'\n                                required={is_svg}\n                                label={getNameAndDobLabels().dob_label}\n                                hint={getFieldHint(localize('date of birth'))}\n                                disabled={\n                                    isFieldImmutable('date_of_birth', editable_fields) ||\n                                    (values?.date_of_birth && has_real_account)\n                                }\n                                placeholder={localize('01-07-1999')}\n                                portal_id='modal_root'\n                                data_testid='date_of_birth'\n                            />\n                        )}\n                        {'address_line_1' in values && (\n                            <FormInputField\n                                name='address_line_1'\n                                label={localize('First line of address*')}\n                                disabled={isFieldImmutable('address_line_1', editable_fields)}\n                                data-testid='address_line_1'\n                                autoComplete='off'\n                                data-lpignore='true'\n                                type='text'\n                                maxLength={70}\n                                required\n                                onBlur={handleBlur}\n                                error={touched.address_line_1 && errors.address_line_1}\n                                value={values.address_line_1}\n                            />\n                        )}\n                        {'address_line_2' in values && (\n                            <FormInputField\n                                name='address_line_2'\n                                label={localize('Second line of address (optional)')}\n                                disabled={isFieldImmutable('address_line_2', editable_fields)}\n                                data-testid='address_line_2'\n                                autoComplete='off'\n                                data-lpignore='true'\n                                type='text'\n                                maxLength={70}\n                                onBlur={handleBlur}\n                                error={touched.address_line_2 && errors.address_line_2}\n                                value={values.address_line_2}\n                            />\n                        )}\n                        {'address_city' in values && (\n                            <FormInputField\n                                name='address_city'\n                                label={localize('Town/City*')}\n                                disabled={isFieldImmutable('address_city', editable_fields)}\n                                data-testid='address_city'\n                                autoComplete='off'\n                                data-lpignore='true'\n                                type='text'\n                                maxLength={70}\n                                required\n                                onBlur={handleBlur}\n                                error={touched.address_city && errors.address_city}\n                                value={values.address_city}\n                            />\n                        )}\n                        {'address_state' in values &&\n                            (states_list?.length ? (\n                                <React.Fragment>\n                                    {isDesktop ? (\n                                        <Field name='address_state'>\n                                            {({ field }) => (\n                                                <Autocomplete\n                                                    {...field}\n                                                    data-lpignore='true'\n                                                    autoComplete='new-password' // prevent chrome autocomplete\n                                                    type='text'\n                                                    label={localize('State/Province')}\n                                                    error={touched.address_state && errors.address_state}\n                                                    list_items={states_list}\n                                                    onItemSelection={({ value, text }) =>\n                                                        setFieldValue('address_state', value ? text : '', true)\n                                                    }\n                                                />\n                                            )}\n                                        </Field>\n                                    ) : (\n                                        <SelectNative\n                                            placeholder={localize('Please select')}\n                                            label={localize('State/Province')}\n                                            value={values.address_state}\n                                            list_items={states_list}\n                                            error={touched.address_state && errors.address_state}\n                                            use_text\n                                            onChange={e => setFieldValue('address_state', e.target.value, true)}\n                                        />\n                                    )}\n                                </React.Fragment>\n                            ) : (\n                                <FormInputField\n                                    data-lpignore='true'\n                                    autoComplete='off'\n                                    type='text'\n                                    name='address_state'\n                                    label={localize('State/Province')}\n                                    value={values.address_state}\n                                    error={touched.address_state && errors.address_state}\n                                    onBlur={handleBlur}\n                                />\n                            ))}\n                        {'address_postcode' in values && (\n                            <FormInputField\n                                name='address_postcode'\n                                label={localize('Postal/ZIP code')}\n                                disabled={isFieldImmutable('address_postcode', editable_fields)}\n                                data-testid='address_postcode'\n                                autoComplete='off'\n                                data-lpignore='true'\n                                type='text'\n                                maxLength={70}\n                                onBlur={handleBlur}\n                                error={touched.address_postcode && errors.address_postcode}\n                                value={values.address_postcode}\n                            />\n                        )}\n                        {!is_svg_only && 'place_of_birth' in values && (\n                            <PlaceOfBirthField\n                                handleChange={handleChange}\n                                setFieldValue={setFieldValue}\n                                disabled={isFieldImmutable('place_of_birth', editable_fields)}\n                                residence_list={residence_list}\n                                required\n                            />\n                        )}\n                        {'citizen' in values && (\n                            <Field name='citizen'>\n                                {({ field }) => (\n                                    <React.Fragment>\n                                        {isDesktop ? (\n                                            <Autocomplete\n                                                {...field}\n                                                data-lpignore='true'\n                                                autoComplete={autocomplete_value} // prevent chrome autocomplete\n                                                type='text'\n                                                label={is_eu_user ? localize('Citizenship*') : localize('Citizenship')}\n                                                error={touched.citizen && errors.citizen}\n                                                disabled={\n                                                    (values?.citizen && is_fully_authenticated) ||\n                                                    isFieldImmutable('citizen', editable_fields) ||\n                                                    (values?.citizen && has_real_account)\n                                                }\n                                                list_items={residence_list}\n                                                onItemSelection={({ value, text }) =>\n                                                    setFieldValue('citizen', value ? text : '', true)\n                                                }\n                                                list_portal_id='modal_root'\n                                                required\n                                                data-testid='citizenship'\n                                            />\n                                        ) : (\n                                            <SelectNative\n                                                placeholder={localize('Citizenship')}\n                                                name={field.name}\n                                                disabled={\n                                                    (values?.citizen && is_fully_authenticated) ||\n                                                    isFieldImmutable('citizen', editable_fields) ||\n                                                    (values?.citizen && has_real_account)\n                                                }\n                                                label={is_eu_user ? localize('Citizenship*') : localize('Citizenship')}\n                                                list_items={residence_list}\n                                                value={values.citizen}\n                                                use_text\n                                                error={touched.citizen && errors.citizen}\n                                                onChange={e => {\n                                                    handleChange(e);\n                                                    setFieldValue('citizen', e.target.value, true);\n                                                }}\n                                                {...field}\n                                                required\n                                                should_hide_disabled_options={false}\n                                                data_testid='citizenship_mobile'\n                                            />\n                                        )}\n                                    </React.Fragment>\n                                )}\n                            </Field>\n                        )}\n                        {!is_svg_only && 'phone' in values && (\n                            <PhoneField\n                                value={values.phone}\n                                editable_fields={editable_fields}\n                                has_real_account={has_real_account}\n                                required\n                            />\n                        )}\n                        {!is_svg_only && 'account_opening_reason' in values && (\n                            <AccountOpeningReasonField\n                                required\n                                account_opening_reason_list={account_opening_reason_list}\n                                setFieldValue={setFieldValue}\n                                disabled={\n                                    isFieldImmutable('account_opening_reason', editable_fields) ||\n                                    (values?.account_opening_reason && has_real_account)\n                                }\n                            />\n                        )}\n                    </fieldset>\n                </FormBodySection>\n                {!no_confirmation_needed && is_rendered_for_idv && (\n                    <Checkbox\n                        name='confirmation_checkbox'\n                        className='formik__confirmation-checkbox'\n                        value={values.confirmation_checkbox}\n                        label={\n                            <Localize i18n_default_text='I confirm that the name and date of birth above match my chosen identity document' />\n                        }\n                        label_font_size={isDesktop ? 'xs' : 'xxs'}\n                        disabled={is_confirmation_checkbox_disabled}\n                        onChange={handleChange}\n                        has_error={!!(touched.confirmation_checkbox && errors.confirmation_checkbox)}\n                    />\n                )}\n            </div>\n\n            {is_svg_only && (\n                <div className='account-form__poi-additional-information'>\n                    <FormSubHeader title={localize('Additional information')} />\n                    {'phone' in values && (\n                        <PhoneField\n                            value={values.phone}\n                            editable_fields={editable_fields}\n                            has_real_account={has_real_account}\n                            required\n                        />\n                    )}\n                    <React.Fragment>\n                        {'place_of_birth' in values && (\n                            <PlaceOfBirthField\n                                handleChange={handleChange}\n                                setFieldValue={setFieldValue}\n                                disabled={isFieldImmutable('place_of_birth', editable_fields)}\n                                residence_list={residence_list}\n                                required\n                            />\n                        )}\n                        {'account_opening_reason' in values && (\n                            <AccountOpeningReasonField\n                                account_opening_reason_list={account_opening_reason_list}\n                                setFieldValue={setFieldValue}\n                                disabled={\n                                    isFieldImmutable('account_opening_reason', editable_fields) ||\n                                    (values?.account_opening_reason && has_real_account)\n                                }\n                                required\n                                is_modal\n                            />\n                        )}\n                    </React.Fragment>\n                </div>\n            )}\n        </React.Fragment>\n    );\n};\n\nexport default PersonalDetailsForm;\n\nconst PhoneField = ({ value, editable_fields, has_real_account, required }) => (\n    <FormInputField\n        name='phone'\n        label={required ? localize('Phone number*') : localize('Phone number')}\n        placeholder={required ? localize('Phone number*') : localize('Phone number')}\n        disabled={\n            isFieldImmutable('phone', editable_fields) ||\n            (value && has_real_account && validPhone(value) && value?.length >= 9 && value?.length <= 35)\n        }\n        maxLength={50}\n        data-testid='phone'\n    />\n);\n\nconst PlaceOfBirthField = ({ handleChange, setFieldValue, disabled, residence_list, required }) => {\n    const { isDesktop } = useDevice();\n    return (\n        <Field name='place_of_birth'>\n            {({ field, meta }) => (\n                <React.Fragment>\n                    {isDesktop ? (\n                        <Autocomplete\n                            {...field}\n                            disabled={disabled}\n                            data-lpignore='true'\n                            autoComplete='none' // prevent chrome autocomplete\n                            type='text'\n                            label={required ? localize('Place of birth*') : localize('Place of birth')}\n                            error={meta.touched && meta.error}\n                            list_items={residence_list}\n                            onItemSelection={({ value, text }) =>\n                                setFieldValue('place_of_birth', value ? text : '', true)\n                            }\n                            required\n                            data-testid='place_of_birth'\n                        />\n                    ) : (\n                        <SelectNative\n                            placeholder={required ? localize('Place of birth') : localize('Place of birth')}\n                            name={field.name}\n                            disabled={disabled}\n                            label={required ? localize('Place of birth*') : localize('Place of birth')}\n                            list_items={residence_list}\n                            value={field.value}\n                            use_text\n                            error={meta.touched && meta.error}\n                            onChange={e => {\n                                handleChange(e);\n                                setFieldValue('place_of_birth', e.target.value, true);\n                            }}\n                            {...field}\n                            list_portal_id='modal_root'\n                            required\n                            should_hide_disabled_options={false}\n                            data_testid='place_of_birth_mobile'\n                        />\n                    )}\n                </React.Fragment>\n            )}\n        </Field>\n    );\n};\n","import React from 'react';\nimport clsx from 'clsx';\nimport { Div100vhContainer, Text } from '@deriv/components';\nimport { useDevice } from '@deriv-com/ui';\n\ntype TIconMessageContent = {\n    className?: string;\n    full_width?: boolean;\n    icon: React.ReactElement;\n    is_disabled_for_mobile?: boolean;\n    message: React.ReactNode;\n    text?: React.ReactNode;\n};\n\nconst IconMessageContent = ({\n    children,\n    className,\n    full_width,\n    icon,\n    is_disabled_for_mobile = false,\n    message,\n    text,\n}: React.PropsWithChildren<TIconMessageContent>) => {\n    const { isDesktop } = useDevice();\n\n    return (\n        <Div100vhContainer\n            className={clsx('account-management__message-wrapper', {\n                'account-management__message-wrapper-full-width': full_width,\n            })}\n            is_disabled={isDesktop || is_disabled_for_mobile}\n            height_offset='110px'\n        >\n            <div\n                className={clsx('account-management__message-content', {\n                    [`${className}__message-content`]: className,\n                })}\n            >\n                {icon && (\n                    <div\n                        className={clsx('account-management__message-icon', {\n                            [`${className}__message-icon`]: className,\n                        })}\n                    >\n                        {icon}\n                    </div>\n                )}\n                <Text\n                    as='div'\n                    color='general'\n                    weight='bold'\n                    align='center'\n                    className={clsx('account-management__message', {\n                        [`${className}__message`]: className,\n                    })}\n                >\n                    {message}\n                </Text>\n                {text && (\n                    <div className='account-management__text-container'>\n                        <Text\n                            className={clsx({\n                                [`${className}__text`]: className,\n                            })}\n                            as='p'\n                            size='xs'\n                            align='center'\n                        >\n                            {text}\n                        </Text>\n                    </div>\n                )}\n                {children}\n            </div>\n        </Div100vhContainer>\n    );\n};\n\nexport default IconMessageContent;\n","import IconMessageContent from './icon-message-content';\n\nexport default IconMessageContent;\n","import React from 'react';\nimport { Icon, Text } from '@deriv/components';\n\ntype TInlineNoteWithIconExtend = {\n    icon?: string;\n    font_size?: string;\n    message: React.ReactNode;\n    title: React.ReactNode;\n};\n\nconst InlineNoteWithIcon = ({ icon, message, font_size = 'xxxs', title }: TInlineNoteWithIconExtend) => {\n    return (\n        <div className='da-inline-note-with-icon'>\n            {icon && (\n                <div>\n                    <Icon icon={icon} size={16} />\n                </div>\n            )}\n            <Text as='p' size={font_size} line_height='s'>\n                {title && <strong> {title} </strong>}\n                {message}\n            </Text>\n        </div>\n    );\n};\n\nexport default InlineNoteWithIcon;\n","import InlineNoteWithIcon from './inline-note-with-icon';\nimport './inline-note-with-icon.scss';\n\nexport default InlineNoteWithIcon;\n","import { localize } from '@deriv/translations';\n\n//TODO: Check if these phrases are required;\nexport const getOnfidoPhrases = () => ({\n    country_select: {\n        alert_dropdown: {\n            country_not_found: localize('Country not found'),\n        },\n        alert: {\n            another_doc: localize(\n                'Documents from that country are not currently supported — <fallback>try another document type</fallback>'\n            ),\n        },\n        button_primary: localize('Submit document'),\n        search: {\n            accessibility: localize('Select country'),\n            input_placeholder: localize('e.g. United States'),\n            label: localize('Search for country'),\n        },\n        title: localize('Select issuing country'),\n    },\n    cross_device_checklist: {\n        button_primary: localize('Submit verification'),\n        info: localize('Tips'),\n        list_item_doc_multiple: localize('Documents uploaded'),\n        list_item_doc_one: localize('Document uploaded'),\n        list_item_selfie: localize('Selfie uploaded'),\n        subtitle: localize(\"We're now ready to verify your identity\"),\n        title: localize(\"Great, that's everything we need\"),\n    },\n    cross_device_error_desktop: {\n        subtitle: localize('The link only works on mobile devices'),\n        title: localize(\"Something's gone wrong\"),\n    },\n    cross_device_error_restart: {\n        subtitle: localize(\"You'll need to restart your verification on your computer\"),\n        title: localize(\"Something's gone wrong\"),\n    },\n    cross_device_intro: {\n        button_primary: localize('Get secure link'),\n        list_accessibility: localize('Steps required to continue verification on your mobile'),\n        list_item_finish: localize('Check back here to finish the submission'),\n        list_item_open_link: localize('Open the link and complete the tasks'),\n        list_item_send_phone: localize('Send a secure link to your phone'),\n        subtitle: localize(\"Here's how to do it:\"),\n        title: localize('Continue on your phone'),\n    },\n    cross_device_return: {\n        body: localize('Your computer may take a few seconds to update'),\n        subtitle: localize('You can now return to your computer to continue'),\n        title: localize('Uploads successful'),\n    },\n    doc_confirmation: {\n        alert: {\n            blur_detail: localize('Make sure everything is clear'),\n            blur_title: localize('Blurry photo detected'),\n            crop_detail: localize('Make sure full document is visible'),\n            crop_title: localize('Cut-off image detected'),\n            glare_detail: localize('Move away from direct light'),\n            glare_title: localize('Glare detected'),\n            no_doc_detail: localize('Make sure all of the document is in the photo'),\n            no_doc_title: localize('No document detected'),\n        },\n        body_id: localize('Make sure your card details are clear to read, with no blur or glare'),\n        body_image_medium: localize('It’ll take longer to verify you if we can’t read it'),\n        body_image_poor: localize('To smoothly verify you, we need a better photo'),\n        body_license: localize('Make sure your license details are clear to read, with no blur or glare'),\n        body_passport: localize('Make sure your passport details are clear to read, with no blur or glare'),\n        body_permit: localize('Make sure your permit details are clear to read, with no blur or glare'),\n        body_tax_letter: localize('Make sure details are clear to read, with no blur or glare'),\n        button_close: localize('Close'),\n        button_primary_redo: localize('Redo'),\n        button_primary_upload: localize('Confirm'),\n        button_primary_upload_anyway: localize('Upload anyway'),\n        button_secondary_redo: localize('Redo'),\n        button_zoom: localize('Enlarge image'),\n        image_accessibility: localize('Photo of your document'),\n        title: localize('Check your image'),\n    },\n    doc_select: {\n        button_id: localize('Identity card'),\n        button_id_detail: localize('Front and back'),\n        button_license: localize(\"Driver's license\"),\n        button_license_detail: localize('Front and back'),\n        button_passport: localize('Passport'),\n        button_passport_detail: localize('Face photo page'),\n        button_permit: localize('Residence permit'),\n        button_permit_detail: localize('Front and back'),\n        extra_no_mobile: localize('Sorry, no mobile phone bills'),\n        list_accessibility: localize('Documents you can use to verify your identity'),\n        subtitle: localize('It must be an official photo ID'),\n        subtitle_poa: localize('These are the documents most likely to show your current home address'),\n        title: localize('Choose document'),\n        title_poa: localize('Select a %{country} document'),\n    },\n    doc_submit: {\n        button_link_upload: localize('or upload photo – no scans or photocopies'),\n        button_primary: localize('Continue on phone'),\n        subtitle: localize('Take a photo with your phone'),\n        title_id_back: localize('Submit identity card (back)'),\n        title_id_front: localize('Submit identity card (front)'),\n        title_license_back: localize('Submit license (back)'),\n        title_license_front: localize('Submit license (front)'),\n        title_passport: localize('Submit passport photo pages'),\n        title_permit_back: localize('Submit residence permit (back)'),\n        title_permit_front: localize('Submit residence permit (front)'),\n    },\n    error_unsupported_browser: {\n        subtitle_android: localize('Restart the process on the latest version of Google Chrome'),\n        subtitle_ios: localize('Restart the process on the latest version of Safari'),\n        title_android: localize('Unsupported browser'),\n        title_ios: localize('Unsupported browser'),\n    },\n    generic: {\n        accessibility: {\n            close_sdk_screen: localize('Close identity verification screen'),\n            dismiss_alert: localize('Dismiss alert'),\n        },\n        back: localize('back'),\n        close: localize('close'),\n        errors: {\n            interrupted_flow_error: {\n                instruction: localize('Restart process on a different device'),\n                message: localize('Camera not detected'),\n            },\n            invalid_size: {\n                instruction: localize('Must be under 10MB.'),\n                message: localize('File size exceeded.'),\n            },\n            invalid_type: {\n                instruction: localize('Try using another file type.'),\n                message: localize('File not uploaded.'),\n            },\n            lazy_loading: {\n                message: localize('An error occurred while loading the component'),\n            },\n            multiple_faces: {\n                instruction: localize('Only your face can be in the selfie'),\n                message: localize('Multiple faces found'),\n            },\n            no_face: {\n                instruction: localize('Your face is needed in the selfie'),\n                message: localize('No face found'),\n            },\n            request_error: {\n                instruction: localize('Please try again'),\n                message: localize('Connection lost'),\n            },\n            sms_failed: {\n                instruction: localize('Copy the link to your phone'),\n                message: localize(\"Something's gone wrong\"),\n            },\n            sms_overuse: {\n                instruction: localize('Copy the link to your phone'),\n                message: localize('Too many failed attempts'),\n            },\n            unsupported_file: {\n                instruction: localize('Try using a JPG or PNG file'),\n                message: localize('File type not supported'),\n            },\n        },\n        lazy_load_placeholder: localize('Loading...'),\n        loading: localize('Loading'),\n    },\n    get_link: {\n        alert_wrong_number: localize('Check that your number is correct'),\n        button_copied: localize('Copied'),\n        button_copy: localize('Copy'),\n        button_submit: localize('Send link'),\n        info_qr_how: localize('How to scan a QR code'),\n        info_qr_how_list_item_camera: localize('Point your phone’s camera at the QR code'),\n        info_qr_how_list_item_download: localize(\n            'If it doesn’t work, download a QR code scanner from Google Play or the App Store'\n        ),\n        link_divider: localize('or'),\n        link_qr: localize('Scan QR code'),\n        link_sms: localize('Get link via SMS'),\n        link_url: localize('Copy link'),\n        loader_sending: localize('Sending'),\n        number_field_input_placeholder: localize('Enter mobile number'),\n        number_field_label: localize('Enter your mobile number:'),\n        subtitle_qr: localize('Scan the QR code with your phone'),\n        subtitle_sms: localize('Send this one-time link to your phone'),\n        subtitle_url: localize('Open the link on your mobile'),\n        title: localize('Get your secure link'),\n        url_field_label: localize('Copy the link to your mobile browser'),\n    },\n    linked_computer: {\n        button_primary: localize('Continue'),\n        info: localize('Make sure'),\n        list_item_desktop_open: localize('2. Your desktop window stays open'),\n        list_item_sent_by_you: localize('1. This link was sent by you'),\n        subtitle: localize('Continue with the verification'),\n        title: localize('Linked to your computer'),\n    },\n    mobilePhrases: {\n        photo_upload: {\n            body_id_back: localize('Take a photo of the back of your card'),\n            body_id_front: localize('Take a photo of the front of your card'),\n            body_license_back: localize('Take a photo of the back of your license'),\n            body_license_front: localize('Take a photo of the front of your license'),\n            body_passport: localize('Take a photo of your passport photo page'),\n            body_selfie: localize('Take a selfie showing your face'),\n        },\n        selfie_capture: {\n            alert: {\n                camera_inactive: {\n                    detail: localize('Take a photo using the <fallback>basic camera mode</fallback> instead'),\n                },\n                camera_not_working: {\n                    detail: localize('Take a photo using the <fallback>basic camera mode</fallback> instead'),\n                },\n            },\n        },\n        upload_guide: {\n            button_primary: localize('Take a photo'),\n            title: localize('Passport photo page'),\n        },\n    },\n    outro: {\n        body: localize('Thank you'),\n        title: localize('Verification complete'),\n    },\n    permission_recovery: {\n        button_primary: localize('Refresh'),\n        info: localize('Recovery'),\n        list_header_cam: localize('Follow these steps to recover camera access:'),\n        list_item_action_cam: localize('Refresh this page to restart the identity verification process'),\n        list_item_how_to_cam: localize('Grant access to your camera from your browser settings'),\n        subtitle_cam: localize('Recover camera access to continue face verification'),\n        title_cam: localize('Camera access is denied'),\n    },\n    permission: {\n        body_cam: localize('We cannot verify you without using your camera'),\n        button_primary_cam: localize('Enable camera'),\n        subtitle_cam: localize('When prompted, you must enable camera access to continue'),\n        title_cam: localize('Allow camera access'),\n    },\n    photo_upload: {\n        body_bank_statement: localize('Provide the whole document page for best results'),\n        body_benefits_letter: localize('Provide the whole document page for best results'),\n        body_bill: localize('Provide the whole document page for best results'),\n        body_government_letter: localize('Provide the whole document page for best results'),\n        body_id_back: localize('Upload back of card from your computer'),\n        body_id_front: localize('Upload front of card from your computer'),\n        body_license_back: localize('Upload back of license from your computer'),\n        body_license_front: localize('Upload front of license from your computer'),\n        body_passport: localize('Upload passport photo page from your computer'),\n        body_selfie: localize('Upload a selfie from your computer'),\n        body_tax_letter: localize('Provide the whole document page for best results'),\n        button_take_photo: localize('Take photo'),\n        button_upload: localize('Upload'),\n        title_selfie: localize('Selfie'),\n    },\n    selfie_capture: {\n        alert: {\n            camera_inactive: {\n                detail: localize(\n                    'Check that it is connected and functional. You can also <fallback>continue verification on your phone</fallback>'\n                ),\n                detail_no_fallback: localize('Make sure your device has a working camera'),\n                title: localize('Camera not working?'),\n            },\n            camera_not_working: {\n                detail: localize('It may be disconnected. <fallback>Try using your phone instead</fallback>.'),\n                detail_no_fallback: localize(\"Make sure your device's camera works\"),\n                title: localize('Camera not working'),\n            },\n            timeout: {\n                detail: localize(\"Remember to press stop when you're done. <fallback>Redo video actions</fallback>\"),\n                title: localize('Looks like you took too long'),\n            },\n        },\n        button_accessibility: localize('Take a photo'),\n        frame_accessibility: localize('View from camera'),\n        title: localize('Take a selfie'),\n    },\n    selfie_confirmation: {\n        image_accessibility: localize('Photo of your face'),\n        subtitle: localize('Make sure your selfie clearly shows your face'),\n        title: localize('Check selfie'),\n    },\n    selfie_intro: {\n        button_primary: localize('Continue'),\n        list_accessibility: localize('Tips to take a good selfie'),\n        list_item_face_forward: localize('Face forward and make sure your eyes are clearly visible'),\n        list_item_no_glasses: localize('Remove your glasses, if necessary'),\n        subtitle: localize(\"We'll compare it with your document\"),\n        title: localize('Take a selfie'),\n    },\n    sms_sent: {\n        info: localize('Tips'),\n        info_link_expire: localize('Your link will expire in one hour'),\n        info_link_window: localize('Keep this window open while using your mobile'),\n        link: localize('Resend link'),\n        subtitle: localize(\"We've sent a secure link to %{number}\"),\n        subtitle_minutes: localize('It may take a few minutes to arrive'),\n        title: localize('Check your mobile'),\n    },\n    switch_phone: {\n        info: localize('Tips'),\n        info_link_expire: localize('Your mobile link will expire in one hour'),\n        info_link_refresh: localize(\"Don't refresh this page\"),\n        info_link_window: localize('Keep this window open while using your mobile'),\n        link: localize('Cancel'),\n        subtitle: localize(\"Once you've finished we'll take you to the next step\"),\n        title: localize('Connected to your mobile'),\n    },\n    upload_guide: {\n        button_primary: localize('Upload photo'),\n        image_detail_blur_alt: localize('Example of a blurry document'),\n        image_detail_blur_label: localize('All details must be clear — nothing blurry'),\n        image_detail_cutoff_alt: localize('Example of a cut-off document'),\n        image_detail_cutoff_label: localize('Show all details — including the bottom 2 lines'),\n        image_detail_glare_alt: localize('Example of a document with glare'),\n        image_detail_glare_label: localize('Move away from direct light — no glare'),\n        image_detail_good_alt: localize('Document example'),\n        image_detail_good_label: localize('The photo should clearly show your document'),\n        subtitle: localize('Scans and photocopies are not accepted'),\n        title: localize('Upload passport photo page'),\n    },\n});\n\nexport const LANGUAGE_CODES = {\n    ID: 'id_ID',\n    EN: 'en_US',\n};\n","import { localize } from '@deriv/translations';\n\n// Note: Ensure that the object keys matches BE API's keys. This is simply a mapping for FE templates\n\nconst getIDVDocumentConfig = () => ({\n    ke: {\n        alien_card: {\n            new_display_name: '',\n            example_format: '123456',\n        },\n        national_id: {\n            new_display_name: '',\n            example_format: '12345678',\n        },\n        passport: {\n            new_display_name: '',\n            example_format: 'A12345678',\n        },\n    },\n    za: {\n        national_id: {\n            new_display_name: localize('National ID'),\n            example_format: '1234567890123',\n        },\n        national_id_no_photo: {\n            new_display_name: localize('National ID (No Photo)'),\n            example_format: '1234567890123',\n        },\n    },\n    ng: {\n        bvn: {\n            new_display_name: localize('Bank Verification Number'),\n            example_format: '12345678901',\n        },\n        cac: {\n            new_display_name: localize('Corporate Affairs Commission'),\n            example_format: '12345678',\n        },\n        drivers_license: {\n            new_display_name: '',\n            example_format: 'ABC123456789',\n        },\n        nin: {\n            new_display_name: localize('National Identity Number'),\n            example_format: '12345678901',\n        },\n        nin_slip: {\n            new_display_name: localize('National Identity Number Slip'),\n            example_format: '12345678901',\n        },\n        tin: {\n            new_display_name: localize('Taxpayer identification number'),\n            example_format: '12345678-1234',\n        },\n        voter_id: {\n            new_display_name: localize('Voter ID'),\n            example_format: '1234567890123456789',\n        },\n    },\n    gh: {\n        drivers_license: {\n            new_display_name: '',\n            example_format: 'B1234567',\n        },\n        national_id: {\n            new_display_name: localize('National ID'),\n            example_format: 'GHA-123456789-1',\n        },\n        passport: {\n            new_display_name: localize('Passport'),\n            example_format: 'G1234567',\n        },\n        ssnit: {\n            new_display_name: localize('Social Security and National Insurance Trust'),\n            example_format: 'C123456789012',\n        },\n        voter_id: {\n            new_display_name: localize('Voter ID'),\n            example_format: '01234567890',\n        },\n    },\n    br: {\n        cpf: {\n            new_display_name: localize('CPF'),\n            example_format: '123.456.789-12',\n        },\n    },\n    ug: {\n        national_id: {\n            new_display_name: localize('National ID'),\n            example_format: 'CM12345678PE1D',\n        },\n        national_id_no_photo: {\n            new_display_name: localize('National ID (No Photo)'),\n            example_format: 'CM12345678PE1D',\n            additional_document_example_format: '0123456789',\n        },\n    },\n    zw: {\n        national_id: {\n            new_display_name: localize('National ID'),\n            example_format: '081234567F53',\n        },\n    },\n    cl: {\n        national_id: {\n            example_format: '123456789',\n        },\n    },\n    ar: {\n        dni: {\n            example_format: '12345678',\n        },\n    },\n    mx: {\n        curp: {\n            example_format: 'ABCD123456HEFGIJ00',\n        },\n    },\n    id: {\n        nik: {\n            example_format: '1234567890123456',\n        },\n    },\n    in: {\n        aadhaar: {\n            example_format: '123456789012',\n            additional_document_example_format: 'ABCDE1234F',\n        },\n        drivers_license: {\n            example_format: 'AB1234567890123',\n        },\n        epic: {\n            example_format: 'ABC1234567',\n        },\n        pan: {\n            example_format: 'ABCDE1234F',\n        },\n        passport: {\n            example_format: 'A1234567',\n            additional_document_example_format: 'AB1234567890123',\n        },\n    },\n    pe: {\n        national_id: {\n            example_format: '12345678',\n        },\n    },\n    vn: {\n        national_id: {\n            example_format: '12345678901',\n        },\n    },\n});\n\nexport const getIDVDocuments = (country_code: string) => {\n    const IDV_DOCUMENT_DATA: { [key: string]: object } = getIDVDocumentConfig();\n    return IDV_DOCUMENT_DATA[country_code];\n};\n","import React from 'react';\nimport { FormikErrors, FormikValues } from 'formik';\nimport countries from 'i18n-iso-countries';\nimport { ResidenceList, GetAccountStatus } from '@deriv/api-types';\nimport {\n    filterObjProperties,\n    toMoment,\n    validLength,\n    validName,\n    getIDVNotApplicableOption,\n    IDV_ERROR_STATUS,\n    AUTH_STATUS_CODES,\n    VERIFICATION_SERVICES,\n} from '@deriv/shared';\nimport { localize } from '@deriv-com/translations';\nimport { getIDVDocuments } from '../Configs/idv-document-config';\nimport { TServerError } from '../Types';\nimport { LANGUAGE_CODES } from '../Constants/onfido';\n\nexport const documentAdditionalError = (\n    additional_document_value: string | undefined,\n    document_additional_config: FormikValues\n) => {\n    let error_message = null;\n    if (!additional_document_value) {\n        error_message = localize('Please enter your {{document_name}}. ', {\n            document_name: document_additional_config?.display_name?.toLowerCase() ?? localize('document number'),\n        });\n    } else {\n        const format_regex = getRegex(document_additional_config?.format);\n        if (!format_regex.test(additional_document_value)) {\n            error_message = localize('Please enter the correct format. ');\n        }\n    }\n\n    return error_message;\n};\n\n// Unsupported Regex List\nconst regex = [\n    {\n        regex_string: '^(?i)G[a-zA-Z0-9]{7,9}$',\n        value: '^G[a-zA-Z0-9]{7,9}$',\n        flags: 'i',\n    },\n];\n\nconst IDV_NOT_APPLICABLE_OPTION = getIDVNotApplicableOption();\n\ntype TIDVSupportCheck = {\n    residence_list: ResidenceList;\n    account_status: GetAccountStatus;\n    real_account_signup_target: string;\n    citizen: string;\n};\n\nexport const shouldShowIdentityInformation = ({\n    account_status,\n    citizen,\n    residence_list,\n    real_account_signup_target,\n}: TIDVSupportCheck) => {\n    const country = residence_list.find(item => item.value === citizen);\n    const maltainvest = real_account_signup_target === 'maltainvest';\n    const identity = account_status?.authentication?.identity;\n\n    const is_identity_verified = identity?.status === AUTH_STATUS_CODES.VERIFIED;\n    const should_skip_idv =\n        is_identity_verified || account_status?.status?.some((status: string) => status === 'skip_idv'); //status added by BE when idv should be skipped for the user\n    return Boolean(\n        !maltainvest && citizen && country?.identity?.services?.idv?.is_country_supported && !should_skip_idv\n    );\n};\n\nexport const getDocumentData = (country_code: string, document_type: string) => {\n    const DEFAULT_CONFIG = {\n        new_display_name: '',\n        example_format: '',\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const IDV_DOCUMENT_DATA: any = getIDVDocuments(country_code);\n    if (IDV_DOCUMENT_DATA) {\n        return IDV_DOCUMENT_DATA[document_type] ?? DEFAULT_CONFIG;\n    }\n    return DEFAULT_CONFIG;\n};\n\nexport const preventEmptyClipboardPaste = (e: React.ClipboardEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const clipboardData = (e.clipboardData ?? window.clipboardData).getData('text');\n    if (clipboardData.length === 0) {\n        e.preventDefault();\n    }\n};\n\nexport const getRegex = (target_regex: string) => {\n    const output_regex = regex.find(r => r.regex_string === target_regex);\n    if (output_regex) {\n        return new RegExp(output_regex.value, output_regex.flags);\n    }\n    return new RegExp(target_regex);\n};\n\n/**\n * @param {string} selected_doc  - Could be one of the following: 'drivers_license', 'ssnit', 'id_card', 'passport'\n * @returns {string} - Returns the placeholder text for the document number input\n */\nexport const generatePlaceholderText = (selected_doc: string): string => {\n    switch (selected_doc) {\n        case 'drivers_license':\n            return localize('Enter Driver License Reference number');\n        case 'ssnit':\n            return localize('Enter your SSNIT number');\n        case 'national_id_no_photo':\n            return localize('Enter your National Identification Number (NIN)');\n        default:\n            return localize('Enter your document number');\n    }\n};\n\nexport const isFieldImmutable = (field: string, mutable_fields: string[] = []) => !mutable_fields.includes(field);\n\nexport const makeSettingsRequest = (values: FormikValues, changeable_fields: string[]) => {\n    const request = filterObjProperties(values, changeable_fields);\n\n    if (request.first_name) {\n        request.first_name = request.first_name.trim();\n    }\n    if (request.last_name) {\n        request.last_name = request.last_name.trim();\n    }\n    if (request.date_of_birth) {\n        request.date_of_birth = toMoment(request.date_of_birth).format('YYYY-MM-DD');\n    }\n\n    return request;\n};\n\nexport const validateName = (name: string) => {\n    if (name) {\n        if (!validLength(name.trim(), { min: 1, max: 50 })) {\n            return localize('Enter no more than 50 characters.');\n        } else if (!validName(name)) {\n            return localize('Letters, spaces, periods, hyphens, apostrophes only.');\n        }\n    }\n    return '';\n};\n\nexport const getExampleFormat = (example_format?: string) =>\n    example_format ? localize('Example: ') + example_format : '';\n\nexport const isDocumentTypeValid = (document_type: FormikValues) => {\n    if (!document_type?.text) {\n        return localize('Please select a document type.');\n    }\n    return undefined;\n};\n\nexport const isAdditionalDocumentValid = (document_type: FormikValues, additional_document_value?: string) => {\n    const error_message = documentAdditionalError(additional_document_value, document_type?.additional);\n    if (error_message) {\n        return error_message + getExampleFormat(document_type?.additional?.example_format);\n    }\n    return undefined;\n};\n\nexport const isDocumentNumberValid = (document_number?: string, document_type?: FormikValues) => {\n    const is_document_number_invalid = document_number === document_type?.example_format;\n    if (!document_number && document_type?.text) {\n        let document_name = '';\n        const example_format = getExampleFormat(document_type.example_format);\n        switch (document_type.id) {\n            case 'drivers_license':\n                document_name = localize('Driver License Reference number');\n                break;\n            case 'ssnit':\n                document_name = localize('SSNIT number');\n                break;\n            case 'national_id_no_photo':\n                document_name = localize('NIN');\n                break;\n            default:\n                document_name = localize('document number');\n                break;\n        }\n        return localize('Please enter your {{document_name}}. {{example_format}}', { document_name, example_format });\n    } else if (is_document_number_invalid) {\n        return localize('Please enter a valid ID number.');\n    }\n    const format_regex = getRegex(document_type?.value);\n    if (document_number && !format_regex.test(document_number)) {\n        return localize('Please enter the correct format. ') + getExampleFormat(document_type?.example_format);\n    }\n    return undefined;\n};\n\nexport const shouldHideHelperImage = (document_id: string) => document_id === IDV_NOT_APPLICABLE_OPTION.id;\n\nexport const isServerError = (error: unknown): error is TServerError =>\n    typeof error === 'object' && error !== null && 'code' in error;\n\n/**\n *  Returns the alpha 3 code for a given country code\n * @name convertAlpha2toAlpha3\n * @param country_code  - country code\n * @returns alpha 3 code\n */\nexport const convertAlpha2toAlpha3 = (country_code: string) =>\n    country_code.length !== 3 ? countries.alpha2ToAlpha3(country_code.toUpperCase()) : country_code;\n\n/**\n * Returns the alpha 2 code for a given country code\n * @name convertAlpha3toAlpha2\n * @param country_code - country code\n * @returns alpha 2 code\n */\n\nexport const convertAlpha3toAlpha2 = (country_code: string) =>\n    country_code.length !== 2 ? countries.alpha3ToAlpha2(country_code.toUpperCase()) : country_code;\n\n/**\n * Generates a language code supported by Onfido\n * @name getOnfidoSupportedLocaleCode\n * @param language_code\n * @returns language code supported by Onfido\n */\nexport const getOnfidoSupportedLocaleCode = (language_code: string) => {\n    try {\n        const code = language_code.toLowerCase().split('_');\n        if (code[0] === 'id') {\n            return LANGUAGE_CODES.ID;\n        }\n        return code.length > 1 ? `${code[0]}_${code[1].toUpperCase()}` : code[0];\n    } catch (e) {\n        return LANGUAGE_CODES.EN;\n    }\n};\n\nexport const getIDVDocumentType = (\n    idv_latest_attempt: DeepRequired<GetAccountStatus>['authentication']['attempts']['latest'],\n    residence: ResidenceList[0]\n) => {\n    if (!idv_latest_attempt || !Object.keys(residence).length) return localize('identity document');\n    const { document_type } = idv_latest_attempt;\n    if (!document_type) return localize('identity document');\n    if (residence?.identity?.services?.idv?.documents_supported) {\n        const {\n            identity: {\n                services: {\n                    idv: { documents_supported },\n                },\n            },\n        } = residence;\n        return documents_supported[document_type as string].display_name;\n    }\n    return null;\n};\n\nexport const validate = <T,>(errors: FormikErrors<FormikValues>, values: T) => {\n    return (fn: (value: string) => string, arr: string[], err_msg: string) => {\n        arr.forEach(field => {\n            const value = values[field as keyof typeof values] as string;\n            if (!fn(value) && !errors[field]) errors[field] = err_msg;\n        });\n    };\n};\n\ntype TIDVErrorStatus = keyof typeof IDV_ERROR_STATUS;\nexport const verifyFields = (status: TIDVErrorStatus) => {\n    switch (status) {\n        case IDV_ERROR_STATUS.DobMismatch.code:\n            return ['date_of_birth'];\n        case IDV_ERROR_STATUS.NameMismatch.code:\n            return ['first_name', 'last_name'];\n        default:\n            return ['first_name', 'last_name', 'date_of_birth'];\n    }\n};\n\nexport const isSpecialPaymentMethod = (payment_method_icon: string) =>\n    ['IcOnlineNaira', 'IcAstroPayLight', 'IcAstroPayDark'].some(icon => icon === payment_method_icon);\n\nexport const convertPhoneTypeDisplay = (phone_verification_type: string) => {\n    if (phone_verification_type === VERIFICATION_SERVICES.SMS) return phone_verification_type.toUpperCase();\n\n    return 'WhatsApp';\n};\n","import { useMemo } from 'react';\n\nimport useQuery from '../useQuery';\n\n/** A custom hook that gets the residence list. */\nconst useResidenceList = () => {\n    const { data, ...residence_list_rest } = useQuery('residence_list');\n\n    /** Modify the residence list data. */\n    const modified_residence_list = useMemo(() => {\n        if (!data || !data.residence_list) return [];\n\n        return data.residence_list.map(residence => ({\n            ...residence,\n        }));\n    }, [data]);\n\n    return {\n        /** The residence list */\n        data: modified_residence_list,\n        ...residence_list_rest,\n    };\n};\n\nexport default useResidenceList;\n","import { Button, Icon, Text } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport React from 'react';\nimport IconMessageContent from '../../../icon-message-content';\n\ntype TExpired = {\n    onClick: () => void;\n};\n\nexport const Expired = ({ onClick }: TExpired) => (\n    <div className='account-management__container'>\n        <IconMessageContent\n            message={<Localize i18n_default_text='New proof of address is needed' />}\n            text={\n                <Localize\n                    i18n_default_text='Your document for proof of address is expired. <0/>Please submit again.'\n                    components={[<br key={0} />]}\n                />\n            }\n            icon={<Icon icon='IcPoaUpload' size={128} />}\n        >\n            <Button onClick={onClick} has_effect primary>\n                <Text className='dc-btn__text' size='xs' weight='bold' as='p'>\n                    <Localize i18n_default_text='Resubmit' />\n                </Text>\n            </Button>\n        </IconMessageContent>\n    </div>\n);\n","import { Expired as PoaExpired } from './expired';\n\nexport default PoaExpired;\n","import { NotRequired as PoaNotRequired } from './not-required';\n\nexport default PoaNotRequired;\n","import React from 'react';\nimport { Icon } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport IconMessageContent from '../../../icon-message-content';\n\nexport const NotRequired = () => (\n    <IconMessageContent\n        message={localize('Proof of address verification not required')}\n        text={localize(\n            'Your account does not need address verification at this time. We will inform you if address verification is required in the future.'\n        )}\n        icon={<Icon icon='IcPoaVerified' size={128} />}\n    />\n);\n","import { ReactNode } from 'react';\nimport { Icon } from '@deriv/components';\nimport IconMessageContent from '../icon-message-content';\n\ntype TLoadErrorMessage = {\n    error_message: ReactNode;\n};\n\nconst LoadErrorMessage = ({ error_message }: TLoadErrorMessage) => (\n    <IconMessageContent message={error_message} icon={<Icon icon='IcPoaLock' size={128} />} />\n);\n\nexport default LoadErrorMessage;\n","import LoadErrorMessage from './load-error-message';\n\nexport default LoadErrorMessage;\n","import React from 'react';\nimport { useHistory, useLocation, RouteComponentProps, withRouter } from 'react-router-dom';\nimport { FormikConsumer } from 'formik';\nimport { Button, Icon, Modal } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport IconMessageContent from '../icon-message-content';\nimport { useDevice } from '@deriv-com/ui';\n\ntype TLeaveConfirmMessage = {\n    back: () => void;\n    leave: () => void;\n};\ntype TTransitionBlocker = RouteComponentProps & {\n    dirty: boolean;\n    onDirty?: (prop: boolean) => void;\n};\n\nconst LeaveConfirmMessage = ({ back, leave }: TLeaveConfirmMessage) => {\n    const { isMobile } = useDevice();\n\n    return (\n        <IconMessageContent\n            className='leave-confirm'\n            message={localize('Unsaved changes')}\n            text={localize('You have unsaved changes. Are you sure you want to discard changes and leave this page?')}\n            icon={<Icon icon='IcUnsavedChanges' size={isMobile ? 93 : 128} data_testid='dt_unsaved_changes_icon' />}\n            is_disabled_for_mobile={true}\n        >\n            <div className='account-management-flex-wrapper account-management-leave-confirm'>\n                <Button type='button' has_effect onClick={back} text={localize('Cancel')} secondary large={isMobile} />\n                <Button\n                    type='button'\n                    has_effect\n                    onClick={leave}\n                    text={localize('Leave Settings')}\n                    primary\n                    large={isMobile}\n                />\n            </div>\n        </IconMessageContent>\n    );\n};\n/**\n *\\ Blocks routing if Formik form is dirty\n * Has to be a child of <Formik> for FormikConsumer to work\n */\nexport const TransitionBlocker = ({ dirty, onDirty }: TTransitionBlocker) => {\n    const history = useHistory();\n    const location = useLocation();\n    const { isMobile } = useDevice();\n    const [showModal, setShowModal] = React.useState(false);\n    const [nextLocation, setNextLocation] = React.useState(location.pathname);\n    React.useEffect(() => {\n        const unblock = history.block((location: Location) => {\n            if (dirty && !showModal) {\n                if (onDirty) onDirty(false);\n                setNextLocation(location.pathname);\n                setShowModal(true);\n                return false;\n            }\n            return true;\n        });\n        return () => unblock();\n    }, [dirty, showModal, history, onDirty]);\n    const leave = React.useCallback(() => {\n        if (nextLocation) {\n            setShowModal(false);\n            history.push(nextLocation);\n            if (onDirty) {\n                onDirty(false);\n            }\n        }\n    }, [nextLocation, history, onDirty]);\n    const back = () => {\n        setShowModal(false);\n        setNextLocation(location.pathname);\n        if (onDirty) {\n            onDirty(true);\n        }\n    };\n    return (\n        <>\n            {showModal && isMobile ? (\n                <LeaveConfirmMessage back={back} leave={leave} />\n            ) : (\n                <Modal is_open={showModal} small toggleModal={back}>\n                    <Modal.Body>\n                        <LeaveConfirmMessage back={back} leave={leave} />\n                    </Modal.Body>\n                </Modal>\n            )}\n        </>\n    );\n};\n\nexport const TransitionBlockerWithRouter = withRouter(TransitionBlocker);\nconst LeaveConfirm = ({ onDirty }: { onDirty?: (prop: boolean) => void }) => {\n    return (\n        <FormikConsumer>\n            {formik => (\n                <TransitionBlockerWithRouter onDirty={onDirty} dirty={formik.dirty && formik.submitCount === 0} />\n            )}\n        </FormikConsumer>\n    );\n};\nexport default LeaveConfirm;\n","import LeaveConfirm from './leave-confirm';\n\nexport default LeaveConfirm;\n","/**\n * Object containing error code strings returned by the API.\n */\nexport const API_ERROR_CODES = Object.freeze({\n    DUPLICATE_ACCOUNT: 'DuplicateAccount',\n    CLAIMED_DOCUMENT: 'ClaimedDocument',\n    DUPLICATE_DOCUMENT: 'DuplicateUpload',\n});\n","import React from 'react';\nimport clsx from 'clsx';\nimport { FileDropzone, Icon, Text } from '@deriv/components';\nimport { Localize, localize } from '@deriv/translations';\nimport { getSupportedFiles, max_document_size, supported_filetypes } from '@deriv/shared';\nimport { DropzoneOptions } from 'react-dropzone';\nimport { useDevice } from '@deriv-com/ui';\nimport { TFile } from '../../Types';\n\ntype THandleRejectedFiles = DropzoneOptions['onDropRejected'];\n\ntype TFileUploaderProps = {\n    onFileDrop: (files: File[]) => void;\n    onError?: (error_message: string) => void;\n};\n\nconst UploadMessage = () => {\n    const { isDesktop, isMobile } = useDevice();\n\n    return (\n        <React.Fragment>\n            <Icon icon='IcUpload' className='dc-file-dropzone__message-icon' size={30} />\n            <div className='dc-file-dropzone__message-subtitle'>\n                <Text size='xxs' align='center' weight='bold' color='less-prominent'>\n                    {isDesktop ? (\n                        <Localize i18n_default_text='Drag and drop a file or click to browse your files.' />\n                    ) : (\n                        <Localize i18n_default_text='Click here to browse your files.' />\n                    )}\n                </Text>\n                <Text size={isMobile ? 'xxxxs' : 'xxxs'} align='center' color='less-prominent'>\n                    <Localize i18n_default_text='Remember, selfies, pictures of houses, or non-related images will be rejected.' />\n                </Text>\n            </div>\n        </React.Fragment>\n    );\n};\n\nconst FileUploader = ({ onFileDrop, onError }: TFileUploaderProps) => {\n    const [document_files, setDocumentFiles] = React.useState<File[]>([]);\n    const [file_error, setFileError] = React.useState<string | null>(null);\n\n    React.useEffect(() => {\n        if (document_files) {\n            onFileDrop(document_files);\n            onError?.('');\n        }\n    }, [document_files, onFileDrop, onError]);\n\n    const handleAcceptedFiles = (files: File[]) => {\n        if (files.length > 0) {\n            setDocumentFiles(files);\n            setFileError(null);\n            onError?.('');\n        }\n    };\n\n    const handleRejectedFiles: THandleRejectedFiles = files => {\n        const is_file_too_large = files.length > 0 && files[0].file.size > max_document_size;\n        const supported_files = files.filter(each_file => getSupportedFiles(each_file.file.name));\n        const error_message =\n            is_file_too_large && supported_files.length > 0\n                ? localize('File size should be 8MB or less')\n                : localize('File uploaded is not supported');\n\n        setDocumentFiles([]);\n        onError?.(error_message);\n        setFileError(error_message);\n    };\n\n    const removeFile = () => {\n        setDocumentFiles([]);\n        setFileError(null);\n        onError?.('');\n    };\n\n    return (\n        <React.Fragment>\n            <FileDropzone\n                accept={supported_filetypes}\n                error_message={localize('Please upload supported file type.')}\n                filename_limit={26}\n                hover_message={localize('Drop files here..')}\n                max_size={max_document_size}\n                message={<UploadMessage />}\n                multiple={false}\n                onDropAccepted={handleAcceptedFiles}\n                onDropRejected={handleRejectedFiles}\n                validation_error_message={file_error}\n                value={document_files as TFile[]}\n            />\n            {((document_files && document_files?.length > 0) || file_error) && (\n                <div className='file-uploader__remove-btn-container'>\n                    <Icon\n                        icon='IcCloseCircle'\n                        className={clsx('file-uploader__remove-btn', {\n                            'file-uploader__remove-btn--error': file_error,\n                        })}\n                        onClick={removeFile}\n                        color='secondary'\n                        data_testid='dt_remove_file_icon'\n                    />\n                </div>\n            )}\n        </React.Fragment>\n    );\n};\n\nexport default FileUploader;\n","import { useQuery } from '@deriv/api';\nimport { TSocketRequestPayload } from '@deriv/api/types';\nimport { useStore } from '@deriv/stores';\n\ntype TKycAuthStatusPayload = TSocketRequestPayload<'kyc_auth_status'>['payload'];\n\n/** Custom hook that returns Proof of Identity (POI) and Proof of Address (POA) authentication status details. */\nexport const useKycAuthStatus = (payload?: TKycAuthStatusPayload) => {\n    const { client } = useStore();\n\n    const { is_authorize } = client;\n    const { data, ...kyc_auth_status_rest } = useQuery('kyc_auth_status', {\n        payload,\n        options: { enabled: is_authorize },\n    });\n    return {\n        /** The KYC auth status */\n        kyc_auth_status: data?.kyc_auth_status,\n        ...kyc_auth_status_rest,\n    };\n};\n","import React from 'react';\nimport { TFilesDescription, TListItem } from '../Types';\nimport { localize, Localize } from '@deriv-com/translations';\n\nexport const getFileUploaderDescriptions = (page: string, is_eu?: boolean): TFilesDescription => {\n    const proof_of_income_descriptions = {\n        title: <Localize i18n_default_text='The document must be recent and include your name and address:' />,\n        descriptions: [\n            {\n                id: 'signed_document',\n                value: (\n                    <Localize i18n_default_text='The document must be up-to-date and signed by the issuance authority.' />\n                ),\n            },\n            {\n                id: 'contains_letterhead',\n                value: <Localize i18n_default_text='The document must contain a letterhead.' />,\n            },\n            {\n                id: 'invalid_rejected',\n                value: <Localize i18n_default_text='Invalid or incomplete documents shall be rejected.' />,\n            },\n        ],\n    };\n    const proof_of_address_descriptions = {\n        title: (\n            <Localize\n                i18n_default_text='Upload an original (unaltered) document that clearly shows your name and address, issued within the past {{expiry_in_months}} months. We accept:'\n                values={{ expiry_in_months: is_eu ? 6 : 12 }}\n            />\n        ),\n        descriptions: [\n            {\n                id: 'utility_bill',\n                value: (\n                    <Localize\n                        i18n_default_text='<0>Utility bill:</0> Electricity, water, gas, or landline phone bill.'\n                        components={[<strong key={0} />]}\n                    />\n                ),\n            },\n            {\n                id: 'financial_legal_government_document',\n                value: (\n                    <Localize\n                        i18n_default_text='<0>Financial, legal, or government document:</0> Recent bank statement, affidavit, or government-issued letter.'\n                        components={[<strong key={0} />]}\n                    />\n                ),\n            },\n            {\n                id: 'tenancy_agreement',\n                value: (\n                    <Localize\n                        i18n_default_text='<0>Tenancy agreement:</0> Valid and current agreement.'\n                        components={[<strong key={0} />]}\n                    />\n                ),\n            },\n        ],\n    };\n\n    if (page === 'poinc') return proof_of_income_descriptions;\n    if (page === 'poa') return proof_of_address_descriptions;\n    return { title: '', descriptions: [] };\n};\n\nexport const getSupportedProofOfAddressDocuments = (): Required<TListItem>[] => {\n    return [\n        {\n            value: 'utility_bill',\n            text: localize('Utility bill (electricity, water, gas)'),\n        },\n        {\n            value: 'phone_bill',\n            text: localize('Landline phone bill'),\n        },\n        {\n            value: 'bank_statement',\n            text: localize('Bank statement'),\n        },\n        {\n            value: 'affidavit',\n            text: localize('Official residence declaration or affidavit'),\n        },\n        {\n            value: 'official_letter',\n            text: localize('Official letter issued by the government or solicitor'),\n        },\n        {\n            value: 'rental_agreement',\n            text: localize('Rental/tenancy agreement'),\n        },\n        {\n            text: localize('Others'),\n            value: 'poa_others',\n        },\n    ];\n};\n","/* eslint-disable @typescript-eslint/ban-ts-comment */\n//@ts-nocheck [TODO] - Need to fix typescript errors in this file\nimport React from 'react';\nimport { Autocomplete, Loading, Text } from '@deriv/components';\nimport { Localize, useTranslations } from '@deriv-com/translations';\nimport FileUploader from './file-uploader';\nimport { useDevice } from '@deriv-com/ui';\nimport { useKycAuthStatus } from '../../hooks';\nimport { getSupportedProofOfAddressDocuments } from '../../Constants/file-uploader';\nimport { TListItem } from 'Types';\nimport { Field, FieldProps } from 'formik';\n\ntype TFileUploaderContainer = {\n    onFileDrop: (files: File[]) => void;\n    country_of_residence?: string;\n    files_description?: React.ReactNode;\n    examples?: React.ReactNode;\n    onError?: (error_message: string) => void;\n    placeholder?: string;\n};\n\nconst FileUploaderContainer = ({\n    examples,\n    files_description,\n    country_of_residence,\n    onFileDrop,\n    onError,\n    placeholder,\n}: TFileUploaderContainer) => {\n    const { isMobile } = useDevice();\n    const { localize } = useTranslations();\n    const { kyc_auth_status, isLoading } = useKycAuthStatus({ country: country_of_residence });\n    const [document_list, setDocumentList] = React.useState<Required<TListItem>[]>([]);\n\n    React.useEffect(() => {\n        if (kyc_auth_status) {\n            const { address } = kyc_auth_status;\n            const { supported_documents } = address;\n            const doc_list = getSupportedProofOfAddressDocuments().filter(doc =>\n                supported_documents?.includes(doc.value)\n            );\n            setDocumentList(doc_list);\n        }\n    }, [kyc_auth_status]);\n\n    if (isLoading) {\n        return <Loading is_fullscreen={false} />;\n    }\n\n    return (\n        <div className='file-uploader__container' data-testid='dt_file_uploader_container'>\n            {files_description}\n            {examples}\n            {country_of_residence && (\n                <React.Fragment>\n                    <Text size={isMobile ? 'xxs' : 'xs'} as='div' className='file-uploader__file-title' weight='bold'>\n                        <Localize i18n_default_text='Select the type of document:' />\n                    </Text>\n                    <Field name='document_type'>\n                        {({ field, form: { setFieldValue } }: FieldProps<string>) => (\n                            <Autocomplete\n                                {...field}\n                                data-lpignore='true'\n                                autoComplete='off'\n                                list_items={document_list}\n                                type='text'\n                                value={field.value}\n                                label={placeholder}\n                                placeholder={placeholder ?? localize('Select a document')}\n                                onItemSelection={(item: TListItem) => {\n                                    setFieldValue('document_type', item.text, true);\n                                }}\n                                required\n                            />\n                        )}\n                    </Field>\n                </React.Fragment>\n            )}\n            <Text size={isMobile ? 'xxs' : 'xs'} as='div' className='file-uploader__file-title' weight='bold'>\n                <Localize i18n_default_text='Upload file' />\n            </Text>\n            <div className='file-uploader__file-dropzone-wrapper'>\n                <FileUploader onError={onError} onFileDrop={onFileDrop} />\n            </div>\n            <div className='file-uploader__file-supported-formats'>\n                <Text size={isMobile ? 'xxxs' : 'xxs'}>\n                    <Localize i18n_default_text='Supported formats: JPEG, JPG, PNG, PDF, and GIF only' />\n                </Text>\n                <Text size={isMobile ? 'xxxs' : 'xxs'}>\n                    <Localize i18n_default_text='Maximum size: 8MB' />\n                </Text>\n            </div>\n        </div>\n    );\n};\n\nexport default FileUploaderContainer;\n","import FileUploaderContainer from './file-uploader-container';\n\nexport default FileUploaderContainer;\n","import { Text } from '@deriv/components';\nimport React from 'react';\nimport { TFilesDescription } from '../../Types';\nimport { useDevice } from '@deriv-com/ui';\n\nconst FilesDescription = ({ descriptions, title }: TFilesDescription) => {\n    const { isMobile } = useDevice();\n\n    return (\n        <div className='files-description'>\n            <Text size={isMobile ? 'xxs' : 'xs'} as='div' className='files-description__title' weight='bold'>\n                {title}\n            </Text>\n            <ul>\n                {descriptions.map(item => (\n                    <li key={item.id}>\n                        <Text size={isMobile ? 'xxs' : 'xs'} line_height={isMobile ? 'l' : 'xl'}>\n                            {item.value}\n                        </Text>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default FilesDescription;\n","import clsx from 'clsx';\nimport React from 'react';\nimport { ThemedScrollbars } from '@deriv/components';\nimport { useDevice } from '@deriv-com/ui';\n\ntype TScrollbarsContainer = {\n    className?: string;\n    scroll_offset?: string;\n    isFullHeight?: boolean;\n};\n\nexport const ScrollbarsContainer = ({\n    children,\n    className,\n    scroll_offset,\n    isFullHeight = false,\n}: React.PropsWithChildren<TScrollbarsContainer>) => {\n    const { isDesktop } = useDevice();\n    const height_unit = isFullHeight ? '100vh' : '100%';\n    return (\n        <ThemedScrollbars\n            is_bypassed={!isDesktop}\n            height={scroll_offset ? `calc(${height_unit} - ${scroll_offset})` : '100%'}\n        >\n            <div className={clsx('account__scrollbars_container', className)} data-testid='dt_scrollbar_container_div'>\n                {children}\n            </div>\n        </ThemedScrollbars>\n    );\n};\n","import { FormBody } from './form-body';\n\nexport default FormBody;\n","// [TODO] - To be removed once CFD is configured to use the new form-body component\nimport React, { PropsWithChildren, Fragment } from 'react';\nimport { ScrollbarsContainer } from '../scrollbars-container/scrollbars-container';\nimport { Div100vhContainer } from '@deriv/components';\nimport { useDevice } from '@deriv-com/ui';\nimport clsx from 'clsx';\n\ntype TFormBody = {\n    scroll_offset?: string;\n    className?: string;\n    isFullHeight?: boolean;\n};\n\nexport const FormBody = ({ children, scroll_offset, className, isFullHeight }: PropsWithChildren<TFormBody>) => {\n    const { isDesktop } = useDevice();\n    return (\n        <Fragment>\n            {isDesktop ? (\n                <ScrollbarsContainer\n                    className={clsx('account__scrollbars_container--grid-layout', className)}\n                    scroll_offset={scroll_offset}\n                    isFullHeight={isFullHeight}\n                >\n                    {children}\n                </ScrollbarsContainer>\n            ) : (\n                <Div100vhContainer\n                    className={clsx('account__scrollbars_container--grid-layout', className)}\n                    height_offset={scroll_offset || '100%'}\n                >\n                    {children}\n                </Div100vhContainer>\n            )}\n        </Fragment>\n    );\n};\n","import React from 'react';\nimport clsx from 'clsx';\n\nexport type TFormFooter = {\n    className?: string;\n};\n\nconst FormFooter = ({ children, className }: React.PropsWithChildren<TFormFooter>) => (\n    <div className={clsx('account-form__footer', className)} data-testid='form-footer-container'>\n        {children}\n    </div>\n);\n\nexport default FormFooter;\n","import FormFooter from './form-footer';\n\nexport default FormFooter;\n","import React from 'react';\nimport { Text } from '@deriv/components';\nimport { useDevice } from '@deriv-com/ui';\nimport { Localize } from '@deriv/translations';\nimport { useStore } from '@deriv/stores';\nimport { getExampleImagesConfig } from '../../../Configs/poa-common-mistake-examples-config';\nimport { LegacyLossIcon } from '@deriv/quill-icons';\nimport './common-mistake-examples.scss';\n\ntype TCommonMistakeExamplePartialsProps = {\n    description: JSX.Element;\n    image: React.ReactElement;\n};\n\n/**\n * Wrapper for displaying the image and description of the mistake\n * @name CommonMistakeExamplePartials\n * @param description - description of the mistake\n * @param image - Sample image\n * @returns  React.ReactElement\n */\nconst CommonMistakeExamplePartials = ({ description, image }: TCommonMistakeExamplePartialsProps) => (\n    <div className='common-mistake-examples__content-layout'>\n        {image}\n        <div className='common-mistake-examples__content-description'>\n            <LegacyLossIcon iconSize='xs' />\n            <Text size='xxxs' line_height='s' role='document'>\n                {description}\n            </Text>\n        </div>\n    </div>\n);\n\n/**\n * Displays the image and description of the mistake\n * @returns React.ReactElement\n */\nconst CommonMistakeExamples = () => {\n    const { isDesktop } = useDevice();\n    const { client } = useStore();\n    const { is_eu } = client;\n    const example_images = getExampleImagesConfig(is_eu);\n    return (\n        <React.Fragment>\n            <Text as='div' weight='bold' size={isDesktop ? 'xs' : 'xxs'} className='common-mistake-examples__title'>\n                <Localize i18n_default_text='Common mistakes' />\n            </Text>\n            <div className='common-mistake-examples__content'>\n                {example_images.map(config => (\n                    <CommonMistakeExamplePartials\n                        key={config.ref}\n                        description={config.description}\n                        image={<config.image />}\n                    />\n                ))}\n            </div>\n        </React.Fragment>\n    );\n};\n\nexport default CommonMistakeExamples;\n","import React from 'react';\nimport { Localize } from '@deriv/translations';\nimport {\n    DerivLightIcBlurryDocumentIcon,\n    DerivLightIcCroppedDocumentIcon,\n    DerivLightIcDocumentAddressMismatchIcon,\n    DerivLightIcDocumentNameMismatchIcon,\n    DerivLightIcEnvelopeIcon,\n    DerivLightIcOldIssuedDocumentMoreThan12Icon,\n    DerivLightIcOldIssuedDocumentMoreThan6Icon,\n} from '@deriv/quill-icons';\n\ntype TExampleImageConfig = {\n    image: React.ComponentType<React.SVGAttributes<SVGElement>>;\n    description: JSX.Element;\n    ref: string;\n};\n/**\n * Returns a configuration containing images and descriptions for common POA document upload mistakes\n * @returns Array of objects containing image and description\n */\nexport const getExampleImagesConfig = (is_eu: boolean): Array<TExampleImageConfig> => [\n    {\n        image: DerivLightIcDocumentNameMismatchIcon,\n        description: <Localize i18n_default_text='Name in document doesn’t match your Deriv profile.' />,\n        ref: 'name_mismatch',\n    },\n    {\n        image: DerivLightIcDocumentAddressMismatchIcon,\n        description: <Localize i18n_default_text='Address in document doesn’t match address you entered above.' />,\n        ref: 'address_mismatch',\n    },\n    {\n        ...(is_eu\n            ? {\n                  image: DerivLightIcOldIssuedDocumentMoreThan6Icon,\n                  description: <Localize i18n_default_text='Document issued more than 6-months ago.' />,\n                  ref: 'old_6_month_issued_document',\n              }\n            : {\n                  image: DerivLightIcOldIssuedDocumentMoreThan12Icon,\n                  description: <Localize i18n_default_text='Document issued more than 12-months ago.' />,\n                  ref: 'old_12_month_issued_document',\n              }),\n    },\n    {\n        image: DerivLightIcBlurryDocumentIcon,\n        description: <Localize i18n_default_text='Blurry document. All information must be clear and visible.' />,\n        ref: 'blurry_document',\n    },\n    {\n        image: DerivLightIcCroppedDocumentIcon,\n        description: <Localize i18n_default_text='Cropped document. All information must be clear and visible.' />,\n        ref: 'cropped_document',\n    },\n    {\n        image: DerivLightIcEnvelopeIcon,\n        description: <Localize i18n_default_text='An envelope with your name and address.' />,\n        ref: 'envelope',\n    },\n];\n","// Need to import React since it is used in CFD\nimport React from 'react';\nimport { useDevice } from '@deriv-com/ui';\nimport { ThemedScrollbars, FormSubmitButton, Button, InlineMessage, Modal, Text } from '@deriv/components';\nimport { observer, useStore } from '@deriv/stores';\nimport FileUploaderContainer from '../../../Components/file-uploader-container';\nimport FilesDescription from '../../../Components/file-uploader-container/files-descriptions';\nimport FormBody from '../../../Components/form-body';\nimport FormBodySection from '../../../Components/form-body-section';\nimport FormFooter from '../../../Components/form-footer';\nimport FormSubHeader from '../../../Components/form-sub-header';\nimport CommonMistakeExamples from '../../../Components/poa/common-mistakes/common-mistake-examples';\nimport { Form, useFormikContext } from 'formik';\nimport PersonalDetailsForm from '../../../Components/forms/personal-details-form.jsx';\nimport { getFileUploaderDescriptions } from '../../../Constants/file-uploader';\nimport { TPOAFormState } from '../../../Types';\nimport { useTranslations, Localize } from '@deriv-com/translations';\n\ntype TPOADesktopLayout = {\n    className?: string;\n    setOffset: (status: { msg: string }) => string;\n    is_for_cfd_modal?: boolean;\n    is_resubmit?: boolean;\n    setDocumentFiles: (files: File[]) => void;\n    document_files: File[];\n    form_state: TPOAFormState;\n};\n\nconst POADesktopLayout = observer(\n    ({\n        className,\n        setOffset,\n        is_for_cfd_modal,\n        is_resubmit,\n        setDocumentFiles,\n        document_files,\n        form_state,\n    }: TPOADesktopLayout) => {\n        const { status, handleSubmit, isSubmitting, isValid } = useFormikContext();\n        const { isDesktop } = useDevice();\n        const { client } = useStore();\n        const [file_selection_error, setFileSelectionError] = React.useState<string | null>(null);\n        const { localize } = useTranslations();\n        const { states_list, account_settings, is_eu, getChangeableFields } = client;\n        const changeable_fields = getChangeableFields();\n        const poa_uploader_files_descriptions = React.useMemo(() => getFileUploaderDescriptions('poa', is_eu), []);\n\n        return (\n            <Form noValidate className='account-form account-form_poa' onSubmit={handleSubmit}>\n                <ThemedScrollbars height='572px' is_bypassed={!is_for_cfd_modal || !isDesktop} className={className}>\n                    <FormBody scroll_offset={setOffset(status)} isFullHeight={!isDesktop}>\n                        {(status?.msg || is_resubmit) && (\n                            <InlineMessage\n                                type='error'\n                                message={\n                                    <Text as='p' size='xs'>\n                                        {!status?.msg && is_resubmit && (\n                                            <Localize i18n_default_text='We were unable to verify your address with the details you provided. Please check and resubmit or choose a different document type.' />\n                                        )}\n                                        {status?.msg}\n                                    </Text>\n                                }\n                                id='dt_poa_submit-error'\n                            />\n                        )}\n                        <FormSubHeader title={localize('Enter your address')} title_text_size='s' />\n                        <PersonalDetailsForm\n                            /* eslint-disable @typescript-eslint/ban-ts-comment */\n                            // @ts-nocheck This needs to fixed in PersonalDetailsForm\n                            is_qualified_for_poa\n                            editable_fields={changeable_fields}\n                            states_list={states_list}\n                        />\n                        <FormSubHeader title={localize('Submit your document')} title_text_size='s' />\n                        <FormBodySection>\n                            <FileUploaderContainer\n                                onFileDrop={files => {\n                                    setDocumentFiles(files);\n                                }}\n                                onError={setFileSelectionError}\n                                files_description={\n                                    <FilesDescription\n                                        title={poa_uploader_files_descriptions.title}\n                                        descriptions={poa_uploader_files_descriptions.descriptions}\n                                    />\n                                }\n                                examples={<CommonMistakeExamples />}\n                                country_of_residence={account_settings?.country_code as string}\n                                placeholder={localize('Type of document')}\n                            />\n                        </FormBodySection>\n                    </FormBody>\n                </ThemedScrollbars>\n                {is_for_cfd_modal ? (\n                    <Modal.Footer has_separator>\n                        <FormSubmitButton\n                            is_disabled={\n                                isSubmitting ||\n                                !isValid ||\n                                (document_files && document_files.length < 1) ||\n                                !!file_selection_error\n                            }\n                            label={localize('Continue')}\n                            is_loading={isSubmitting}\n                        />\n                    </Modal.Footer>\n                ) : (\n                    <FormFooter className='account-form__footer-poa'>\n                        <Button\n                            className='account-form__footer-btn'\n                            type='submit'\n                            is_disabled={\n                                isSubmitting ||\n                                !isValid ||\n                                (document_files && document_files.length < 1) ||\n                                !!file_selection_error\n                            }\n                            has_effect\n                            is_loading={form_state.is_btn_loading}\n                            is_submit_success={form_state.is_submit_success}\n                            text={localize('Save and submit')}\n                            primary\n                        />\n                    </FormFooter>\n                )}\n            </Form>\n        );\n    }\n);\n\nexport default POADesktopLayout;\n","import React from 'react';\nimport { observer, useStore } from '@deriv/stores';\nimport { Text, InlineMessage, Button } from '@deriv/components';\nimport { Localize, useTranslations } from '@deriv-com/translations';\nimport clsx from 'clsx';\nimport { useFormikContext, Form } from 'formik';\nimport FormBody from '../../../Components/form-body';\nimport PersonalDetailsForm from '../../../Components/forms/personal-details-form.jsx';\nimport { TPOAFormState } from '../../../Types';\nimport FormFooter from '../../../Components/form-footer';\nimport FileUploaderContainer from '../../../Components/file-uploader-container';\nimport FilesDescription from '../../../Components/file-uploader-container/files-descriptions';\nimport CommonMistakeExamples from '../../../Components/poa/common-mistakes/common-mistake-examples';\nimport { getFileUploaderDescriptions } from '../../../Constants/file-uploader';\nimport { LabelPairedArrowLeftMdBoldIcon } from '@deriv/quill-icons';\nimport './poa-mobile-layout.scss';\n\ntype TPOAMobileLayout = {\n    className?: string;\n    setOffset: (status: { msg: string }) => string;\n    is_for_cfd_modal?: boolean;\n    is_resubmit?: boolean;\n    setDocumentFiles: (files: File[]) => void;\n    document_files: File[];\n    form_state: TPOAFormState;\n};\n\ntype TFormInitialValues = Record<\n    'address_line_1' | 'address_line_2' | 'address_city' | 'address_state' | 'address_postcode',\n    string\n> & {\n    document_type?: Record<'text' | 'value', string>;\n};\n\nconst ProgressBar = ({ is_active }: { is_active: boolean }) => (\n    <div className='progress-container'>\n        <div className={clsx('progress-bar', { 'progress-bar--animate': is_active })} />\n    </div>\n);\n\nconst POAMobileLayout = observer(\n    ({ setOffset, is_resubmit, form_state, document_files, setDocumentFiles, is_for_cfd_modal }: TPOAMobileLayout) => {\n        const { localize } = useTranslations();\n        const { status, handleSubmit, isSubmitting, isValid, values, errors } = useFormikContext<TFormInitialValues>();\n        const { client } = useStore();\n        const [file_selection_error, setFileSelectionError] = React.useState<string | null>(null);\n        const [step, setStep] = React.useState({ id: 1, text: localize('Enter your address') });\n\n        const { states_list, account_settings, is_eu, getChangeableFields } = client;\n\n        const changeable_fields = getChangeableFields();\n        const poa_uploader_files_descriptions = React.useMemo(() => getFileUploaderDescriptions('poa', is_eu), [is_eu]);\n\n        const isNextBtnDisabled = React.useMemo(() => {\n            if (step.id === 2) {\n                return false;\n            }\n            return (\n                !values.address_line_1 ||\n                !!errors.address_line_1 ||\n                !!errors.address_line_2 ||\n                !values.address_city ||\n                !!errors.address_city ||\n                !!errors.address_state ||\n                !!errors.address_postcode\n            );\n        }, [values, errors, step.id]);\n\n        return (\n            <div className='poa-mobile-layout'>\n                <div className={clsx('poa-header', { 'poa-header--non-modal': !is_for_cfd_modal })}>\n                    <div className='timeline'>\n                        {step.id === 2 && (\n                            <LabelPairedArrowLeftMdBoldIcon\n                                onClick={() => setStep({ id: 1, text: localize('Enter your address') })}\n                            />\n                        )}\n                        <Text as='p' size='xxs'>\n                            <Localize\n                                i18n_default_text='<0>Step {{step}}/2:&nbsp;</0> {{title}}'\n                                values={{ step: step.id, title: step.text }}\n                                components={[<strong key={0} />]}\n                            />\n                        </Text>\n                    </div>\n                    <div className='timeline-item'>\n                        <ProgressBar is_active={step.id <= 2} />\n                        <ProgressBar is_active={step.id === 2} />\n                    </div>\n                </div>\n                <Form noValidate className='account-form account-form_poa' onSubmit={handleSubmit}>\n                    <FormBody scroll_offset={setOffset(status)}>\n                        {(status?.msg || is_resubmit) && (\n                            <InlineMessage\n                                type='error'\n                                message={\n                                    <Text as='p' size='xxxs'>\n                                        {!status?.msg && is_resubmit && (\n                                            <Localize i18n_default_text='We were unable to verify your address with the details you provided. Please check and resubmit or choose a different document type.' />\n                                        )}\n                                        {status?.msg}\n                                    </Text>\n                                }\n                                className='poa-error-banner'\n                                id='dt_poa_submit-error'\n                            />\n                        )}\n                        {step.id === 1 && (\n                            <React.Fragment>\n                                <PersonalDetailsForm\n                                    /* eslint-disable @typescript-eslint/ban-ts-comment */\n                                    // @ts-nocheck This needs to fixed in PersonalDetailsForm\n                                    is_qualified_for_poa\n                                    editable_fields={changeable_fields}\n                                    states_list={states_list}\n                                />\n                                <FormFooter className='account-form__footer-poa'>\n                                    <Button\n                                        className='account-form__footer-btn'\n                                        type='button'\n                                        has_effect\n                                        text={localize('Next')}\n                                        primary\n                                        is_disabled={isNextBtnDisabled}\n                                        onClick={() =>\n                                            setStep(prev_step => ({\n                                                ...prev_step,\n                                                id: 2,\n                                                text: localize(' Document submission'),\n                                            }))\n                                        }\n                                    />\n                                </FormFooter>\n                            </React.Fragment>\n                        )}\n                        {step.id === 2 && (\n                            <React.Fragment>\n                                <FileUploaderContainer\n                                    onFileDrop={files => {\n                                        setDocumentFiles(files);\n                                    }}\n                                    onError={setFileSelectionError}\n                                    files_description={\n                                        <FilesDescription\n                                            title={poa_uploader_files_descriptions.title}\n                                            descriptions={poa_uploader_files_descriptions.descriptions}\n                                        />\n                                    }\n                                    examples={<CommonMistakeExamples />}\n                                    country_of_residence={account_settings?.country_code as string}\n                                    placeholder={localize('Type of document')}\n                                />\n                                <FormFooter className='account-form__footer-poa'>\n                                    <Button\n                                        className='account-form__footer-btn'\n                                        type='submit'\n                                        has_effect\n                                        text={localize('Submit')}\n                                        primary\n                                        is_disabled={\n                                            isSubmitting ||\n                                            !isValid ||\n                                            (document_files && document_files.length < 1) ||\n                                            !!file_selection_error\n                                        }\n                                        is_loading={form_state.is_btn_loading}\n                                        is_submit_success={form_state.is_submit_success}\n                                    />\n                                </FormFooter>\n                            </React.Fragment>\n                        )}\n                    </FormBody>\n                </Form>\n            </div>\n        );\n    }\n);\n\nexport default POAMobileLayout;\n","import React from 'react';\nimport { Formik, FormikErrors, FormikHelpers, FormikValues } from 'formik';\nimport { useDevice } from '@deriv-com/ui';\nimport { Loading } from '@deriv/components';\nimport { useFileUploader } from '@deriv/hooks';\nimport { validAddress, validPostCode, validLetterSymbol, validLength, getLocation, WS } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport LoadErrorMessage from '../../../Components/load-error-message';\nimport LeaveConfirm from '../../../Components/leave-confirm';\nimport { isServerError, validate } from '../../../Helpers/utils';\nimport { API_ERROR_CODES } from '../../../Constants/api-error-codes';\nimport { DocumentUploadRequest } from '@deriv/api-types';\nimport POADesktopLayout from './poa-desktop-layout';\nimport { TPOAFormState } from '../../../Types';\nimport { useTranslations } from '@deriv-com/translations';\nimport POAMobileLayout from './poa-mobile-layout';\nimport { getSupportedProofOfAddressDocuments } from '../../../Constants/file-uploader';\n\ntype TProofOfAddressForm = {\n    className: string;\n    is_resubmit: boolean;\n    is_for_cfd_modal: boolean;\n    onCancel: () => void;\n    onSubmit: (needs_poi: boolean, has_submitted_duplicate_poa?: boolean) => void;\n    onSubmitForCFDModal: (values: FormikValues, has_submitted_duplicate_poa?: boolean) => void;\n};\n\ntype TFormInitialValues = Record<\n    'address_line_1' | 'address_line_2' | 'address_city' | 'address_state' | 'address_postcode',\n    string\n> & {\n    document_type?: string;\n};\n\nconst ProofOfAddressForm = observer(\n    ({ is_resubmit, is_for_cfd_modal, onSubmit, onSubmitForCFDModal, className }: Partial<TProofOfAddressForm>) => {\n        const { isMobile, isDesktop } = useDevice();\n        const { client, notifications } = useStore();\n        const { account_settings, fetchResidenceList, fetchStatesList, states_list } = client;\n        const {\n            addNotificationMessageByKey: addNotificationByKey,\n            removeNotificationMessage,\n            removeNotificationByKey,\n        } = notifications;\n        const [document_files, setDocumentFiles] = React.useState<File[]>([]);\n        const [is_loading, setIsLoading] = React.useState(true);\n        const [form_values, setFormValues] = React.useState<TFormInitialValues>({\n            address_line_1: '',\n            address_line_2: '',\n            address_city: '',\n            address_state: '',\n            address_postcode: '',\n        });\n        const [api_initial_load_error, setAPIInitialLoadError] = React.useState(null);\n        const [form_state, setFormState] = React.useState<TPOAFormState>({\n            is_btn_loading: false,\n            is_submit_success: false,\n            should_allow_submit: true,\n            should_show_form: true,\n        });\n\n        const [should_scroll_to_top, setShouldScrollToTop] = React.useState(false);\n\n        const { upload } = useFileUploader();\n        const { localize } = useTranslations();\n\n        React.useEffect(() => {\n            fetchResidenceList?.().then(async () => {\n                Promise.all([fetchStatesList(), WS.wait('get_settings')]).then(() => {\n                    setFormValues({\n                        address_line_1: account_settings.address_line_1 ?? '',\n                        address_line_2: account_settings.address_line_2 ?? '',\n                        address_city: account_settings.address_city ?? '',\n                        address_state: account_settings.address_state ?? '',\n                        address_postcode: account_settings.address_postcode ?? '',\n                    });\n                    setIsLoading(false);\n                });\n            });\n        }, [account_settings, fetchResidenceList, fetchStatesList]);\n\n        React.useEffect(() => {\n            if (should_scroll_to_top) {\n                // Scroll to the top of the page\n                const el = document.querySelector('#dt_poa_submit-error') as HTMLInputElement;\n                const target_element = el?.parentElement ?? el;\n                if (typeof target_element?.scrollIntoView === 'function') {\n                    target_element?.scrollIntoView({ behavior: 'smooth', block: 'start' });\n                }\n\n                // Reset the condition\n                setShouldScrollToTop(false);\n            }\n        }, [should_scroll_to_top]);\n\n        const validateFields = (values: TFormInitialValues) => {\n            setFormState({ ...form_state, ...{ should_allow_submit: false } });\n            const errors: FormikErrors<TFormInitialValues> = {};\n            const validateValues = validate(errors, values);\n\n            const required_fields = ['address_line_1', 'address_city'];\n            validateValues(val => val, required_fields, localize('This field is required'));\n\n            const address_line_1_validation_result = validAddress(values.address_line_1, { is_required: true });\n            if (!address_line_1_validation_result.is_ok) {\n                errors.address_line_1 = address_line_1_validation_result.message;\n            }\n            const address_line_2_validation_result = validAddress(values.address_line_2);\n            if (!address_line_2_validation_result.is_ok) {\n                errors.address_line_2 = address_line_2_validation_result.message;\n            }\n\n            const validation_letter_symbol_message = localize(\n                'Only letters, space, hyphen, period, and apostrophe are allowed.'\n            );\n\n            if (values.address_city && !validLetterSymbol(values.address_city)) {\n                errors.address_city = validation_letter_symbol_message;\n            }\n\n            if (values.address_state && !validLetterSymbol(values.address_state) && states_list?.length < 1) {\n                errors.address_state = validation_letter_symbol_message;\n            }\n\n            if (values.address_postcode) {\n                if (!validLength(values.address_postcode, { min: 0, max: 20 })) {\n                    errors.address_postcode = localize(\n                        'Please enter a {{field_name}} under {{max_number}} characters.',\n                        {\n                            field_name: localize('Postal/ZIP code'),\n                            max_number: 20,\n                            interpolation: { escapeValue: false },\n                        }\n                    );\n                } else if (!validPostCode(values.address_postcode)) {\n                    errors.address_postcode = localize('Only letters, numbers, space, and hyphen are allowed.');\n                }\n            }\n\n            if (!values.document_type) {\n                errors.document_type = localize('Document type is required.');\n            }\n\n            return errors;\n        };\n\n        const showForm = (should_show_form: boolean) => {\n            setFormState({ ...form_state, ...{ should_show_form } });\n        };\n\n        const onSubmitValues = async (\n            values: TFormInitialValues,\n            { setStatus, setSubmitting }: FormikHelpers<TFormInitialValues>\n        ) => {\n            setStatus({ msg: '' });\n            setFormState({ ...form_state, ...{ is_btn_loading: true } });\n            const settings_values = { ...values };\n            if (values.address_state && states_list.length) {\n                settings_values.address_state = getLocation(states_list, values.address_state, 'value') || '';\n            }\n            delete settings_values?.document_type;\n\n            const data = await WS.setSettings(settings_values);\n\n            if (data.error) {\n                setStatus({ msg: data.error.message });\n                setFormState({ ...form_state, ...{ is_btn_loading: false } });\n                setSubmitting(false);\n                setShouldScrollToTop(true);\n                return;\n            }\n\n            const get_settings_response = await WS.authorized.storage.getSettings();\n\n            if (get_settings_response.error) {\n                setAPIInitialLoadError(get_settings_response.error.message);\n                setSubmitting(false);\n                return;\n            }\n            const get_settings = get_settings_response.get_settings;\n            const { address_line_1, address_line_2, address_city, address_state, address_postcode } = get_settings;\n\n            setFormValues({\n                address_line_1,\n                address_line_2,\n                address_city,\n                address_state,\n                address_postcode,\n            });\n\n            // upload files\n            try {\n                // This is required as AutoComplate displays only the selected value\n                const selected_doc_type = getSupportedProofOfAddressDocuments().find(\n                    doc => doc.text === values.document_type\n                );\n                const api_response = await upload(document_files, {\n                    document_type: selected_doc_type?.value as DocumentUploadRequest['document_type'],\n                });\n\n                if (api_response?.warning) {\n                    setFormState({ ...form_state, ...{ is_btn_loading: false } });\n\n                    if (api_response.warning === API_ERROR_CODES.DUPLICATE_DOCUMENT) {\n                        if (is_for_cfd_modal) {\n                            onSubmitForCFDModal?.(values, true);\n                        } else {\n                            onSubmit?.(false, true);\n                        }\n                    } else {\n                        setStatus({ msg: api_response?.message });\n                        setShouldScrollToTop(true);\n                    }\n                    return;\n                }\n\n                const get_account_status_response = await WS.authorized.getAccountStatus();\n\n                if (!get_account_status_response || get_account_status_response.error) {\n                    setAPIInitialLoadError(get_account_status_response.error.message);\n                    setSubmitting(false);\n                    return;\n                }\n                const get_account_status = get_account_status_response.get_account_status;\n\n                setFormState({\n                    ...form_state,\n                    ...{ is_submit_success: true, is_btn_loading: false },\n                });\n\n                const { needs_verification } = get_account_status.authentication;\n                const needs_poi = Boolean(needs_verification.length) && needs_verification.includes('identity');\n                onSubmit?.(needs_poi);\n\n                ['authenticate', 'needs_poa', 'poa_expired'].forEach(key => {\n                    removeNotificationMessage({ key });\n                    removeNotificationByKey({ key });\n                });\n\n                if (needs_poi) {\n                    addNotificationByKey('needs_poi');\n                }\n            } catch (error) {\n                if (isServerError(error)) {\n                    setStatus({ msg: error.message });\n                    setSubmitting(false);\n                    setFormState({ ...form_state, ...{ is_btn_loading: false } });\n                    setShouldScrollToTop(true);\n                }\n            }\n            if (is_for_cfd_modal) {\n                onSubmitForCFDModal?.(values);\n            }\n        };\n\n        const { address_line_1, address_line_2, address_city, address_state, address_postcode } = form_values;\n\n        const form_initial_values = {\n            address_line_1,\n            address_line_2,\n            address_city,\n            address_state,\n            address_postcode,\n            document_type: '',\n        };\n\n        if (api_initial_load_error) return <LoadErrorMessage error_message={api_initial_load_error} />;\n        if (is_loading) return <Loading is_fullscreen={false} className='account__initial-loader' />;\n\n        if (form_initial_values.address_state) {\n            const current_value = getLocation(states_list, form_initial_values.address_state, 'text');\n            form_initial_values.address_state =\n                states_list.length && current_value ? current_value : form_initial_values.address_state;\n        } else {\n            form_initial_values.address_state = '';\n        }\n        const setOffset = (status: { msg: string }) => {\n            const mobile_scroll_offset = status?.msg ? '200px' : '166px';\n            return !isDesktop && !is_for_cfd_modal ? mobile_scroll_offset : '94px';\n        };\n\n        return (\n            <Formik\n                initialValues={form_initial_values}\n                // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                // @ts-ignore\n                onSubmit={onSubmitValues}\n                validate={validateFields}\n                enableReinitialize\n                validateOnMount\n            >\n                {() => (\n                    <React.Fragment>\n                        <LeaveConfirm onDirty={!isDesktop ? showForm : undefined} />\n                        {form_state.should_show_form &&\n                            (isMobile ? (\n                                <POAMobileLayout\n                                    setOffset={setOffset}\n                                    is_for_cfd_modal={is_for_cfd_modal}\n                                    is_resubmit={is_resubmit}\n                                    setDocumentFiles={setDocumentFiles}\n                                    document_files={document_files}\n                                    form_state={form_state}\n                                />\n                            ) : (\n                                <POADesktopLayout\n                                    className={className}\n                                    setOffset={setOffset}\n                                    is_for_cfd_modal={is_for_cfd_modal}\n                                    is_resubmit={is_resubmit}\n                                    setDocumentFiles={setDocumentFiles}\n                                    document_files={document_files}\n                                    form_state={form_state}\n                                />\n                            ))}\n                    </React.Fragment>\n                )}\n            </Formik>\n        );\n    }\n);\n\nexport default ProofOfAddressForm;\n","import { RouteButton } from './route-button';\n\nexport default RouteButton;\n","import clsx from 'clsx';\nimport { ButtonLink, Text } from '@deriv/components';\n\ntype TRouteButtonProps = { route: string; button_label: string; className?: string };\n\n/**\n * Renders a button that redirects to the trading platform\n * @name RouteButton\n * @param route - Route to redirect to\n * @param button_label - Text to be displayed on the button\n * @param className - Styles to be applied to the button\n * @returns React Element\n */\nexport const RouteButton = ({ button_label, className, route }: TRouteButtonProps) => (\n    <ButtonLink className={clsx('account-management__button', className)} to={route}>\n        <Text className='dc-btn__text' as='p' weight='bold' data-testid='route_btn_text'>\n            {button_label}\n        </Text>\n    </ButtonLink>\n);\n","import { Submitted as PoaSubmitted } from './submitted';\n\nexport default PoaSubmitted;\n","import React from 'react';\nimport { Icon, Text } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { isNavigationFromP2P, isNavigationFromDerivGO, routes } from '@deriv/shared';\nimport IconMessageContent from '../../../icon-message-content';\nimport RouteButton from '../../../route-button';\nimport { TPoaStatusProps } from '../../../../Types';\n\nexport const Submitted = ({ needs_poi, redirect_button }: TPoaStatusProps) => {\n    const message = localize('Review in progress');\n    const is_redirected_from_platform = isNavigationFromP2P() || isNavigationFromDerivGO();\n    if (needs_poi) {\n        return (\n            <div className='account-management__container'>\n                <IconMessageContent message={message} icon={<Icon icon='IcPoaVerified' size={128} />}>\n                    <div className='account-management__text-container'>\n                        <Text align='center' size='xs' as='p'>\n                            {localize(\n                                'Your proof of address is under review. We’ll get back to you in 1–3 working days.'\n                            )}\n                        </Text>\n                        <Text align='center' size='xs' as='p'>\n                            {localize('To start trading, you also need to verify your identity.')}\n                        </Text>\n                    </div>\n                    <RouteButton button_label={localize('Next')} route={routes.proof_of_identity} />\n                </IconMessageContent>\n            </div>\n        );\n    }\n    return (\n        <div className='account-management__container'>\n            <IconMessageContent\n                message={message}\n                text={localize('Your proof of address is under review. We’ll get back to you in 1–3 working days.')}\n                icon={<Icon icon='IcPoaVerified' size={128} />}\n            >\n                {redirect_button ||\n                    (!is_redirected_from_platform && (\n                        <RouteButton button_label={localize(\"Return to Trader's Hub\")} route={routes.traders_hub} />\n                    ))}\n            </IconMessageContent>\n        </div>\n    );\n};\n","import { Unverified as PoaUnverified } from './unverified';\n\nexport default PoaUnverified;\n","import React, { ReactNode } from 'react';\nimport { Button, Icon, Text } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport IconMessageContent from '../../../icon-message-content';\n\ntype TUnverified = {\n    title?: ReactNode;\n    description?: ReactNode;\n    onClick: () => void;\n    button_text?: ReactNode;\n};\n\nexport const Unverified = ({ title, description, button_text, onClick }: TUnverified) => {\n    return (\n        <IconMessageContent\n            message={title ?? localize('We could not verify your proof of address')}\n            text={description ?? localize('Please check your email for details.')}\n            icon={<Icon icon='IcPoaError' size={128} />}\n        >\n            <Button onClick={onClick} has_effect primary>\n                <Text className='dc-btn__text' size='xs' weight='bold' as='p'>\n                    {button_text ?? localize('Resubmit')}\n                </Text>\n            </Button>\n        </IconMessageContent>\n    );\n};\n","import React from 'react';\nimport clsx from 'clsx';\nimport { ButtonLink, Text } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport { routes } from '@deriv/shared/src/utils/routes/routes';\n\ntype TContinueTradingButtonProps = { className?: string };\n\n/**\n * Renders a button that redirects to the trading platform\n * @name ContinueTradingButton\n * @param className - Styles to be applied to the button\n * @returns React Element\n */\nexport const ContinueTradingButton = ({ className }: TContinueTradingButtonProps) => (\n    <ButtonLink className={clsx('account-management__button', className)} to={routes.trade}>\n        <Text className='dc-btn__text' as='p' weight='bold' data-testid='continue_btn_text'>\n            <Localize i18n_default_text='Continue trading' />\n        </Text>\n    </ButtonLink>\n);\n","import { ButtonLink, Text } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport React from 'react';\n\nexport const PoiButton = () => (\n    <ButtonLink className='account-management__button' to='/account/proof-of-identity'>\n        <Text className='dc-btn__text' weight='bold' as='p'>\n            {localize('Proof of identity')}\n        </Text>\n    </ButtonLink>\n);\n","import { Icon } from '@deriv/components';\nimport { isNavigationFromP2P, isNavigationFromDerivGO } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport { ContinueTradingButton } from '../../continue-trading-button/continue-trading-button';\nimport IconMessageContent from '../../../icon-message-content';\nimport { PoiButton } from '../../../poi/poi-button/poi-button';\nimport { TPoaStatusProps } from '../../../../Types';\n\nexport const Verified = ({ needs_poi, redirect_button }: TPoaStatusProps) => {\n    const message = localize('Your proof of address is verified');\n    const is_redirected_from_platform = isNavigationFromP2P() || isNavigationFromDerivGO();\n    if (needs_poi) {\n        return (\n            <div className='account-management__container'>\n                <IconMessageContent\n                    message={message}\n                    text={localize('To continue trading, you must also submit a proof of identity.')}\n                    icon={<Icon icon='IcPoaVerified' size={128} />}\n                >\n                    <PoiButton />\n                </IconMessageContent>\n            </div>\n        );\n    }\n    return (\n        <div className='account-management__container'>\n            <IconMessageContent message={message} icon={<Icon icon='IcPoaVerified' size={128} />}>\n                {redirect_button || (!is_redirected_from_platform && <ContinueTradingButton />)}\n            </IconMessageContent>\n        </div>\n    );\n};\n\nexport default Verified;\n","import { Verified as PoaVerified } from './verified';\n\nexport default PoaVerified;\n","export const populateVerificationStatus = account_status => {\n    if (!account_status || !account_status.authentication) return {};\n\n    const { attempts, document, identity, income, needs_verification } = account_status.authentication;\n\n    const identity_status = identity.status;\n    const document_status = document.status;\n    const income_status = income.status;\n\n    const allow_document_upload = account_status.status.some(status => status === 'allow_document_upload');\n    const allow_poi_resubmission = account_status.status.some(status => status === 'allow_poi_resubmission');\n    const allow_poa_resubmission = account_status.status.some(status => status === 'allow_poa_resubmission');\n    const allow_poinc_resubmission = account_status.status.some(status => status === 'allow_poinc_resubmission');\n    const is_age_verified = account_status.status.some(status => status === 'age_verification');\n    const is_fully_authenticated = account_status.status.some(status => status === 'authenticated');\n    const is_idv_disallowed = account_status.status.some(status => status === 'idv_disallowed');\n    const poa_address_mismatch = account_status.status.some(status => status === 'poa_address_mismatch');\n    const poi_expiring_soon = account_status.status.some(status => status === 'poi_expiring_soon');\n    const poa_authenticated_with_idv = account_status.status.some(status => status === 'poa_authenticated_with_idv');\n    const poa_authenticated_with_idv_photo = account_status.status.some(\n        status => status === 'poa_authenticated_with_idv_photo'\n    );\n    const poa_expiring_soon = account_status.status.some(status => status === 'poa_expiring_soon');\n    const poi_acknowledged = ['pending', 'verified'].includes(identity_status);\n    const has_poa = !(document && document.status === 'none');\n    const has_poi = !(identity && identity.status === 'none');\n    const has_poinc = !(income && income.status === 'none');\n    const has_submitted_poa = document_status === 'pending' && !allow_poa_resubmission;\n    const needs_poa =\n        !(has_submitted_poa || document_status === 'verified') ||\n        (needs_verification.length && needs_verification.includes('document'));\n    const needs_poi =\n        !poi_acknowledged || (Boolean(needs_verification.length) && needs_verification.includes('identity'));\n    const needs_poinc = needs_verification.length && needs_verification.includes('income');\n\n    const { idv, onfido, manual } = identity.services;\n    const identity_last_attempt = attempts.latest;\n    const has_attempted_idv = Boolean(attempts.history.length && attempts.history.find(h => h.service === 'idv'));\n\n    return {\n        allow_document_upload,\n        allow_poa_resubmission,\n        allow_poi_resubmission,\n        allow_poinc_resubmission,\n        has_attempted_idv,\n        has_poa,\n        has_poi,\n        has_poinc,\n        has_submitted_poa,\n        identity_last_attempt,\n        identity_status,\n        document_status,\n        income_status,\n        idv,\n        is_age_verified,\n        is_fully_authenticated,\n        is_idv_disallowed,\n        manual,\n        needs_poa,\n        needs_poi,\n        needs_poinc,\n        needs_verification,\n        onfido,\n        poa_address_mismatch,\n        poa_authenticated_with_idv,\n        poa_authenticated_with_idv_photo,\n        poi_expiring_soon,\n        poa_expiring_soon,\n    };\n};\n","import React from 'react';\nimport { AccountStatusResponse, GetAccountStatus } from '@deriv/api-types';\nimport { Button, Loading } from '@deriv/components';\nimport { WS, getPlatformRedirect, platforms, routes, AUTH_STATUS_CODES } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { Localize } from '@deriv/translations';\nimport Expired from '../../../Components/poa/status/expired';\nimport NotRequired from '../../../Components/poa/status/not-required';\nimport ProofOfAddressForm from './proof-of-address-form';\nimport Submitted from '../../../Components/poa/status/submitted';\nimport Unverified from '../../../Components/poa/status/unverified';\nimport Verified from '../../../Components/poa/status/verified';\nimport { populateVerificationStatus } from '../Helpers/verification.js';\n\ntype TProofOfAddressContainer = {\n    onSubmit?: () => void;\n};\n\ntype TAuthenticationStatus = Record<\n    | 'allow_document_upload'\n    | 'allow_poi_resubmission'\n    | 'allow_poa_resubmission'\n    | 'is_age_verified'\n    | 'has_poi'\n    | 'has_submitted_poa'\n    | 'needs_poa'\n    | 'needs_poi'\n    | 'poa_address_mismatch'\n    | 'resubmit_poa'\n    | 'poa_expiring_soon'\n    | 'poa_authenticated_with_idv'\n    | 'poa_authenticated_with_idv_photo'\n    | 'has_submitted_duplicate_poa',\n    boolean\n> & { document_status?: DeepRequired<GetAccountStatus>['authentication']['document']['status'] };\n\nconst ProofOfAddressContainer = observer(({ onSubmit }: TProofOfAddressContainer) => {\n    const [is_loading, setIsLoading] = React.useState(true);\n    const [authentication_status, setAuthenticationStatus] = React.useState<TAuthenticationStatus>({\n        allow_document_upload: false,\n        allow_poi_resubmission: false,\n        allow_poa_resubmission: false,\n        needs_poi: false,\n        needs_poa: false,\n        has_poi: false,\n        resubmit_poa: false,\n        has_submitted_poa: false,\n        document_status: undefined,\n        is_age_verified: false,\n        poa_address_mismatch: false,\n        poa_expiring_soon: false,\n        poa_authenticated_with_idv: false,\n        poa_authenticated_with_idv_photo: false,\n        has_submitted_duplicate_poa: false,\n    });\n\n    const { client, notifications, common, ui } = useStore();\n    const { app_routing_history } = common;\n    const { has_restricted_mt5_account, is_switching } = client;\n    const { is_verification_modal_visible } = ui;\n    const { refreshNotifications } = notifications;\n    const mt5_poa_status = localStorage.getItem('mt5_poa_status');\n\n    React.useEffect(() => {\n        if (!is_switching) {\n            WS.authorized.getAccountStatus().then((response: AccountStatusResponse) => {\n                const { get_account_status } = response;\n                if (get_account_status) {\n                    const {\n                        allow_document_upload,\n                        allow_poa_resubmission,\n                        document_status,\n                        has_submitted_poa,\n                        is_age_verified,\n                        needs_poa,\n                        needs_poi,\n                        poa_address_mismatch,\n                        poa_authenticated_with_idv,\n                        poa_authenticated_with_idv_photo,\n                        poa_expiring_soon,\n                    } = populateVerificationStatus(get_account_status);\n\n                    setAuthenticationStatus(authentication_status => ({\n                        ...authentication_status,\n                        allow_document_upload,\n                        allow_poa_resubmission,\n                        document_status,\n                        has_submitted_poa: has_submitted_poa as boolean,\n                        is_age_verified,\n                        needs_poa,\n                        needs_poi,\n                        poa_address_mismatch,\n                        poa_authenticated_with_idv,\n                        poa_authenticated_with_idv_photo,\n                        poa_expiring_soon,\n                    }));\n                    setIsLoading(false);\n                    refreshNotifications();\n                }\n            });\n        }\n    }, [is_switching, refreshNotifications]);\n    React.useEffect(() => {\n        return () => {\n            localStorage.removeItem('mt5_poa_status');\n        };\n    }, []);\n\n    const handleResubmit = () => {\n        setAuthenticationStatus(authentication_status => ({\n            ...authentication_status,\n            ...{ resubmit_poa: true },\n        }));\n    };\n\n    const handleDuplicatePOASubmission = () => {\n        setAuthenticationStatus(authentication_status => ({\n            ...authentication_status,\n            ...{ resubmit_poa: true, has_submitted_duplicate_poa: false, has_submitted_poa: false },\n        }));\n    };\n\n    const onSubmitDocument = (needs_poi: boolean, has_submitted_duplicate_poa?: boolean) => {\n        setAuthenticationStatus(authentication_status => ({\n            ...authentication_status,\n            ...{\n                has_submitted_poa: true,\n                needs_poi,\n                poa_expiring_soon: false,\n                has_submitted_duplicate_poa: has_submitted_duplicate_poa ?? false,\n            },\n        }));\n        if (is_verification_modal_visible) {\n            onSubmit?.();\n        }\n    };\n\n    const {\n        allow_document_upload,\n        allow_poa_resubmission,\n        document_status,\n        needs_poi,\n        resubmit_poa,\n        has_submitted_poa,\n        poa_address_mismatch,\n        poa_expiring_soon,\n        poa_authenticated_with_idv,\n        poa_authenticated_with_idv_photo,\n        has_submitted_duplicate_poa,\n    } = authentication_status;\n\n    const from_platform = getPlatformRedirect(app_routing_history);\n\n    const should_show_redirect_btn = Object.keys(platforms).includes(from_platform?.ref ?? '');\n\n    const should_allow_resubmit =\n        resubmit_poa ||\n        allow_poa_resubmission ||\n        (has_restricted_mt5_account &&\n            document_status &&\n            ['expired', 'rejected', 'suspected'].includes(document_status)) ||\n        poa_address_mismatch ||\n        poa_expiring_soon ||\n        ((poa_authenticated_with_idv || poa_authenticated_with_idv_photo) &&\n            from_platform?.route === routes.cashier_p2p);\n\n    const redirect_button = should_show_redirect_btn && (\n        <Button\n            primary\n            className='proof-of-identity__redirect'\n            onClick={() => {\n                const url = platforms[from_platform.ref as keyof typeof platforms]?.url;\n                if (url) {\n                    window.location.href = url;\n                    window.sessionStorage.removeItem('config.platform');\n                }\n            }}\n        >\n            <Localize i18n_default_text='Back to {{platform_name}}' values={{ platform_name: from_platform.name }} />\n        </Button>\n    );\n\n    if (is_loading) return <Loading is_fullscreen={false} className='account__initial-loader' />;\n    if (!allow_document_upload) return <NotRequired />;\n    if (has_submitted_duplicate_poa)\n        return (\n            <Unverified\n                title={<Localize i18n_default_text='Proof of address documents upload failed' />}\n                description={\n                    <Localize i18n_default_text='It seems you’ve submitted this document before. Upload a new document.' />\n                }\n                button_text={<Localize i18n_default_text='Try again' />}\n                onClick={handleDuplicatePOASubmission}\n            />\n        );\n    if (has_submitted_poa && !poa_address_mismatch)\n        return <Submitted needs_poi={needs_poi} redirect_button={redirect_button} />;\n    if (should_allow_resubmit) {\n        return <ProofOfAddressForm is_resubmit={!poa_expiring_soon} onSubmit={onSubmitDocument} />;\n    }\n    const getDocumentStatus = (\n        document_status: DeepRequired<GetAccountStatus>['authentication']['document']['status'] | string\n    ) => {\n        switch (document_status) {\n            case AUTH_STATUS_CODES.NONE:\n                return <ProofOfAddressForm onSubmit={onSubmitDocument} />;\n            case AUTH_STATUS_CODES.PENDING:\n                return <Submitted needs_poi={needs_poi} redirect_button={redirect_button} />;\n            case AUTH_STATUS_CODES.VERIFIED:\n                return <Verified needs_poi={needs_poi} redirect_button={redirect_button} />;\n            case AUTH_STATUS_CODES.EXPIRED:\n                return <Expired onClick={handleResubmit} />;\n            case AUTH_STATUS_CODES.REJECTED:\n            case AUTH_STATUS_CODES.SUSPECTED:\n                return <Unverified onClick={handleResubmit} />;\n            default:\n                return null;\n        }\n    };\n    if (mt5_poa_status) return getDocumentStatus(mt5_poa_status);\n    else if (document_status) return getDocumentStatus(document_status);\n    return null;\n});\n\nexport default ProofOfAddressContainer;\n","export const identity_status_codes = {\n    none: 'none',\n    pending: 'pending',\n    rejected: 'rejected',\n    verified: 'verified',\n    expired: 'expired',\n    suspected: 'suspected',\n} as const;\n\nexport const submission_status_code = {\n    selecting: 'selecting',\n    submitting: 'submitting',\n    complete: 'complete',\n} as const;\n\nexport const service_code = {\n    idv: 'idv',\n    onfido: 'onfido',\n    manual: 'manual',\n} as const;\n","import IconWithMessage from './icon-with-message';\nimport './icon-with-message.scss';\n\nexport default IconWithMessage;\n","import React from 'react';\nimport { Icon, Text, Button } from '@deriv/components';\nimport { useDevice } from '@deriv-com/ui';\nimport { observer, useStore } from '@deriv/stores';\nimport { localize } from '@deriv/translations';\n\ntype TIconWithMessage = {\n    icon: string;\n    has_button?: boolean;\n    message: string;\n};\n\nconst IconWithMessage = observer(({ has_button, icon, message }: TIconWithMessage) => {\n    const { client, ui } = useStore();\n    const { isDesktop } = useDevice();\n    const { has_any_real_account: has_real_account } = client;\n    const { toggleAccountsDialog, toggleShouldShowRealAccountsList } = ui;\n\n    return (\n        <div className='da-icon-with-message'>\n            <Icon icon={icon} size={128} />\n            <Text\n                className='da-icon-with-message__text'\n                as='p'\n                color='general'\n                size={isDesktop ? 's' : 'xs'}\n                line_height='m'\n                weight='bold'\n            >\n                {message}\n            </Text>\n            {has_button && (\n                <Button\n                    primary\n                    onClick={() => {\n                        toggleShouldShowRealAccountsList(true);\n                        toggleAccountsDialog();\n                    }}\n                    className='account__demo-message-button'\n                    data-testid='icon-with-message-button'\n                >\n                    {has_real_account ? localize('Switch to real account') : localize('Add a real account')}\n                </Button>\n            )}\n        </div>\n    );\n});\n\nexport default IconWithMessage;\n","import DemoMessage from './demo-message';\n\nexport default DemoMessage;\n","import { useTranslations } from '@deriv-com/translations';\nimport IconWithMessage from '../icon-with-message';\n\ntype TDemoMessage = {\n    has_button?: boolean;\n};\n\nconst DemoMessage = ({ has_button }: TDemoMessage) => {\n    const { localize } = useTranslations();\n    return (\n        <IconWithMessage\n            icon='IcPoaLock'\n            message={localize('This feature is not available for demo accounts.')}\n            has_button={has_button}\n        />\n    );\n};\n\nexport default DemoMessage;\n","import ErrorComponent from './error-component';\n\nexport default ErrorComponent;\n","import { PageError } from '@deriv/components';\nimport { Localize } from '@deriv-com/translations';\nimport { routes } from '@deriv/shared';\n\ntype TErrorComponent = {\n    header: JSX.Element | string;\n    message: JSX.Element | string;\n    redirect_label: string;\n    redirectOnClick: (() => void) | null;\n    should_show_refresh: boolean;\n};\n\nconst ErrorComponent = ({\n    header,\n    message,\n    redirect_label,\n    redirectOnClick,\n    should_show_refresh = true,\n}: Partial<TErrorComponent>) => {\n    const refresh_message: JSX.Element | string = should_show_refresh ? (\n        <Localize i18n_default_text='Please refresh this page to continue.' />\n    ) : (\n        ''\n    );\n\n    return (\n        <PageError\n            header={header || <Localize i18n_default_text='Oops, something went wrong.' />}\n            messages={\n                message\n                    ? [message, refresh_message]\n                    : [\n                          <Localize\n                              i18n_default_text='Sorry, an error occurred while processing your request.'\n                              key={0}\n                          />,\n                          refresh_message,\n                      ]\n            }\n            redirect_urls={[routes.trade]}\n            redirect_labels={[redirect_label ?? <Localize i18n_default_text='Refresh' />]}\n            buttonOnClick={redirectOnClick ?? (() => location.reload())}\n        />\n    );\n};\n\nexport default ErrorComponent;\n","import Expired from './expired';\n\nexport default Expired;\n","import React from 'react';\nimport { Button, Icon } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport IconMessageContent from '../../../icon-message-content';\n\ntype TExpired = {\n    handleRequireSubmission: () => void;\n    is_from_external?: boolean;\n    redirect_button?: React.ReactElement;\n};\n\nconst Expired = ({ handleRequireSubmission, is_from_external, redirect_button }: TExpired) => {\n    return (\n        <IconMessageContent\n            message={localize('New proof of identity document needed')}\n            icon={<Icon icon='IcPoiUpload' size={128} />}\n        >\n            <Button\n                type='button'\n                className='account-management__continue'\n                onClick={handleRequireSubmission}\n                large\n                text={localize('Upload Document')}\n                primary\n            />\n            {!is_from_external && redirect_button}\n        </IconMessageContent>\n    );\n};\n\nexport default Expired;\n","import React from 'react';\nimport { Button, Text } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { DerivLightExclamationPoiIcon } from '@deriv/quill-icons';\nimport { POIContext } from '@deriv/shared';\nimport { submission_status_code } from '../../../../Sections/Verification/ProofOfIdentity/proof-of-identity-utils';\n\ntype TIdvLimited = {\n    handleRequireSubmission: () => void;\n};\n\nconst IdvLimited = ({ handleRequireSubmission }: TIdvLimited) => {\n    const { setSubmissionStatus } = React.useContext(POIContext);\n\n    return (\n        <div className='proof-of-identity__container'>\n            <DerivLightExclamationPoiIcon className='icon' />\n            <Text className='proof-of-identity__text btm-spacer' align='center' weight='bold'>\n                {localize('ID verification failed')}\n            </Text>\n            <Text className='proof-of-identity__text btm-spacer' align='center' size='xs'>\n                {localize('We were unable to verify your ID with the details you provided. ')}\n                {localize('Please upload your identity document.')}\n            </Text>\n            <Button\n                type='button'\n                className='account-management__continue'\n                onClick={() => {\n                    handleRequireSubmission();\n                    setSubmissionStatus(submission_status_code.selecting);\n                }}\n                large\n                text={localize('Upload identity document')}\n                primary\n            />\n        </div>\n    );\n};\n\nexport default IdvLimited;\n","import IdvLimited from './idv-limited';\n\nexport default IdvLimited;\n","import React from 'react';\nimport { ButtonLink, Text } from '@deriv/components';\nimport { routes } from '@deriv/shared';\nimport { Localize } from '@deriv/translations';\nimport clsx from 'clsx';\n\ntype TPoaButton = {\n    custom_text?: React.ReactNode;\n    class_name?: string;\n};\n\nconst DEFAULT_BTN_TEXT = <Localize i18n_default_text='Submit proof of address' />;\n\nconst PoaButton = ({ custom_text = DEFAULT_BTN_TEXT, class_name }: TPoaButton) => (\n    <ButtonLink className={clsx('account-management__button', class_name)} to={routes.proof_of_address}>\n        <Text className='dc-btn__text' as='p' weight='bold' data-testid='poa_button_text'>\n            {custom_text}\n        </Text>\n    </ButtonLink>\n);\n\nexport default PoaButton;\n","import PoaButton from './poa-button';\n\nexport default PoaButton;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { Text } from '@deriv/components';\nimport { TIDVErrorStatus, IDV_ERROR_STATUS } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { Localize } from '@deriv/translations';\nimport { DerivLightWaitingPoiIcon } from '@deriv/quill-icons';\nimport PoaButton from '../../../poa/poa-button';\n\ntype TIdvSubmitComplete = {\n    is_from_external: boolean;\n    mismatch_status: TIDVErrorStatus;\n    needs_poa: boolean;\n    redirect_button: React.ReactNode;\n};\n\nconst IdvSubmitComplete = observer(\n    ({ is_from_external, mismatch_status, needs_poa, redirect_button }: Partial<TIdvSubmitComplete>) => {\n        const { client } = useStore();\n        const { is_already_attempted } = client;\n\n        const is_mismatch_error =\n            mismatch_status === IDV_ERROR_STATUS.NameDobMismatch.code ||\n            mismatch_status === IDV_ERROR_STATUS.DobMismatch.code ||\n            mismatch_status === IDV_ERROR_STATUS.NameMismatch.code;\n\n        const is_expired_or_failed_error =\n            mismatch_status === IDV_ERROR_STATUS.Expired.code || mismatch_status === IDV_ERROR_STATUS.Failed.code;\n\n        const getHeaderText = () => {\n            if (is_already_attempted) {\n                if (is_mismatch_error) return <Localize i18n_default_text='Your profile is updated' />;\n                if (is_expired_or_failed_error)\n                    return <Localize i18n_default_text='Your document has been submitted' />;\n            }\n            return <Localize i18n_default_text='Review in progress' />;\n        };\n\n        const getDescriptionText = () => {\n            if (is_already_attempted && (is_mismatch_error || is_expired_or_failed_error))\n                return (\n                    <Localize i18n_default_text=\"We'll review your proof of identity again and will give you an update as soon as possible.\" />\n                );\n            return (\n                <Localize i18n_default_text='Your proof of identity is under review. We’ll get back to you within 5 minutes.' />\n            );\n        };\n\n        const poa_button = !is_from_external && <PoaButton custom_text={<Localize i18n_default_text='Next' />} />;\n\n        return (\n            <div className={clsx('proof-of-identity__container', 'proof-of-identity__container--status')}>\n                <DerivLightWaitingPoiIcon className='icon' />\n                <Text className='proof-of-identity__text btm-spacer' align='center' weight='bold'>\n                    {getHeaderText()}\n                </Text>\n                <Text className='proof-of-identity__text text' size='xs' align='center'>\n                    {getDescriptionText()}\n                </Text>\n                {needs_poa ? (\n                    <React.Fragment>\n                        <Text className='text' size='xs' align='center'>\n                            <Localize i18n_default_text='To start trading, you also need to verify your address.' />\n                        </Text>\n                        {poa_button}\n                    </React.Fragment>\n                ) : (\n                    <div className='proof-of-identity__redirection'>{redirect_button}</div>\n                )}\n            </div>\n        );\n    }\n);\n\nexport default React.memo(IdvSubmitComplete);\n","import IdvSubmitComplete from './idv-submit-complete';\n\nexport default IdvSubmitComplete;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { Text } from '@deriv/components';\nimport { useDevice } from '@deriv-com/ui';\nimport { Localize } from '@deriv/translations';\nimport { ContinueTradingButton } from '../../../poa/continue-trading-button/continue-trading-button';\nimport { DerivLightApprovedPoiIcon } from '@deriv/quill-icons';\nimport PoaButton from '../../../poa/poa-button/poa-button';\n\ntype TIdvVerified = {\n    needs_poa: boolean;\n    is_from_external: boolean;\n    redirect_button: React.ReactNode;\n};\n\nconst IdvVerified = ({ needs_poa, is_from_external, redirect_button }: Partial<TIdvVerified>) => {\n    const header_Text = needs_poa ? (\n        <Localize i18n_default_text='Your ID is verified. You will also need to submit proof of your address.' />\n    ) : (\n        <Localize i18n_default_text='ID verification passed' />\n    );\n    const { isDesktop } = useDevice();\n    return (\n        <div\n            className={clsx('proof-of-identity__container', 'proof-of-identity__container--status')}\n            data-testid='poi_idv_verified_container'\n        >\n            <DerivLightApprovedPoiIcon className='icon' />\n            <Text className='proof-of-identity__text btm-spacer' align='center' weight='bold'>\n                {header_Text}\n            </Text>\n            {needs_poa ? (\n                <React.Fragment>\n                    {isDesktop && (\n                        <Text className='text' size='xs' align='center'>\n                            <Localize i18n_default_text=\"Next, we'll need your proof of address.\" />\n                        </Text>\n                    )}\n                    {!is_from_external && (\n                        <PoaButton custom_text={<Localize i18n_default_text='Submit proof of address' />} />\n                    )}\n                </React.Fragment>\n            ) : (\n                redirect_button || <ContinueTradingButton className='continue-trade' />\n            )}\n        </div>\n    );\n};\n\nexport default IdvVerified;\n","import IdvVerified from './idv-verified';\n\nexport default IdvVerified;\n","import React from 'react';\nimport { formatIDVError } from '@deriv/shared';\nimport IdvLimited from '../../../Components/poi/idv-status/idv-limited';\nimport IdvSubmitComplete from '../../../Components/poi/idv-status/idv-submit-complete';\nimport IdvVerified from '../../../Components/poi/idv-status/idv-verified';\nimport { identity_status_codes } from './proof-of-identity-utils';\n\nconst Idv = ({ handleRequireSubmission, idv, is_from_external, needs_poa, redirect_button }) => {\n    const { status, submissions_left, last_rejected } = idv;\n    switch (status) {\n        case identity_status_codes.pending:\n            return (\n                <IdvSubmitComplete\n                    is_from_external={is_from_external}\n                    mismatch_status={formatIDVError(last_rejected, status)}\n                    needs_poa={needs_poa}\n                    redirect_button={redirect_button}\n                />\n            );\n        case identity_status_codes.rejected:\n        case identity_status_codes.suspected:\n        case identity_status_codes.expired:\n            if (Number(submissions_left) < 1) return <IdvLimited handleRequireSubmission={handleRequireSubmission} />;\n            return null;\n        case identity_status_codes.verified:\n            return (\n                <IdvVerified\n                    is_from_external={is_from_external}\n                    needs_poa={needs_poa}\n                    redirect_button={redirect_button}\n                />\n            );\n        default:\n            return null;\n    }\n};\n\nexport default Idv;\n","import React from 'react';\nimport { Icon } from '@deriv/components';\nimport { localize, Localize } from '@deriv/translations';\nimport IconMessageContent from '../../../icon-message-content';\nimport { Chat } from '@deriv/utils';\n\nexport const POILimited = () => (\n    <IconMessageContent\n        message={localize(\"You've reached the limit for uploading your documents.\")}\n        text={\n            <Localize\n                i18n_default_text='Please contact us via <0>live chat</0>.'\n                components={[<span key={0} className='link link--orange' onClick={Chat.open} />]}\n            />\n        }\n        icon={<Icon icon='IcPoiFailed' size={128} />}\n    />\n);\n","import { POILimited } from './limited';\n\nexport default POILimited;\n","import { OnfidoNotRequired } from './not-required';\n\nexport default OnfidoNotRequired;\n","import React from 'react';\nimport { Icon } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport IconMessageContent from '../../../icon-message-content';\n\nexport const OnfidoNotRequired = () => (\n    <IconMessageContent\n        message={localize('Proof of identity verification not required')}\n        text={localize(\n            'Your account does not need identity verification at this time. We will inform you if identity verification is required in the future.'\n        )}\n        icon={<Icon icon='IcPoiVerified' size={128} />}\n    />\n);\n","import React from 'react';\nimport { Icon, Text } from '@deriv/components';\nimport { routes } from '@deriv/shared';\nimport { useTranslations } from '@deriv-com/translations';\nimport RouteButton from '../../../route-button';\nimport PoaButton from '../../../poa/poa-button';\nimport IconMessageContent from '../../../icon-message-content/icon-message-content';\nimport { TPOIStatus } from 'Types';\n\nexport const UploadComplete = ({\n    needs_poa,\n    redirect_button,\n    is_from_external,\n    is_manual_upload = false,\n}: TPOIStatus) => {\n    const { localize } = useTranslations();\n    const message = localize('Review in progress');\n    const description = is_manual_upload\n        ? localize('Your proof of identity is under review. We’ll get back to you within 1–3 working days.')\n        : localize('Your proof of identity is under review. We’ll get back to you within 5 minutes.');\n\n    if (!needs_poa) {\n        return (\n            <IconMessageContent message={message} text={description} icon={<Icon icon='IcPoiVerified' size={128} />}>\n                {!is_from_external && (\n                    <RouteButton button_label={localize(\"Return to Trader's Hub\")} route={routes.traders_hub} />\n                )}\n            </IconMessageContent>\n        );\n    }\n    return (\n        <IconMessageContent message={message} icon={<Icon icon='IcPoiVerified' size={128} />}>\n            <React.Fragment>\n                <div className='account-management__text-container'>\n                    <Text align='center' size='xs' as='p'>\n                        {description}\n                    </Text>\n                    <Text align='center' size='xs' as='p'>\n                        {localize('To start trading, you also need to verify your address.')}\n                    </Text>\n                </div>\n                <PoaButton custom_text={localize('Next')} />\n            </React.Fragment>\n            {!is_from_external && redirect_button}\n        </IconMessageContent>\n    );\n};\n\nexport default UploadComplete;\n","import { UploadComplete } from './upload-complete';\n\nexport default UploadComplete;\n","import { ContinueTradingButton } from './continue-trading-button';\n\nexport default ContinueTradingButton;\n","import React from 'react';\nimport { Icon } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { TPOIStatus } from 'Types';\nimport IconMessageContent from '../../../icon-message-content';\nimport PoaButton from '../../../poa/poa-button';\nimport { service_code } from '../../../../Sections/Verification/ProofOfIdentity/proof-of-identity-utils';\nimport ContinueTradingButton from '../../../poa/continue-trading-button';\n\nexport const Verified = ({ needs_poa, redirect_button, is_from_external, service }: TPOIStatus) => {\n    const message =\n        service === service_code.idv\n            ? localize('ID verification passed')\n            : localize('Your proof of identity is verified');\n\n    if (!needs_poa) {\n        return (\n            <IconMessageContent\n                message={message}\n                icon={<Icon icon='IcPoaVerified' size={128} data_testid='dt_IcPoaVerified' />}\n                className='account-management-dashboard'\n            >\n                {!is_from_external && (redirect_button || <ContinueTradingButton />)}\n            </IconMessageContent>\n        );\n    }\n    return (\n        <IconMessageContent\n            message={message}\n            icon={<Icon icon='IcPoaVerified' size={128} />}\n            className='account-management-dashboard'\n            text={localize('To continue trading, you must also submit a proof of address.')}\n        >\n            {!is_from_external && (\n                <React.Fragment>\n                    <PoaButton />\n                </React.Fragment>\n            )}\n        </IconMessageContent>\n    );\n};\n\nexport default Verified;\n","import { Verified } from './verified';\n\nexport default Verified;\n","import React from 'react';\nimport { Text } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport { useDevice } from '@deriv-com/ui';\n\ntype TListItem = {\n    text: React.ReactNode;\n    index?: number;\n};\n\nconst ListItem = ({ text, index }: TListItem) => {\n    const { isDesktop } = useDevice();\n\n    const text_size = isDesktop ? 'xs' : 'xxs';\n    return (\n        <div className='account-management__list-text-container'>\n            {index && (\n                <Text size={text_size} className='account-management__list-text'>\n                    <Localize i18n_default_text='{{index}}.' values={{ index }} />{' '}\n                </Text>\n            )}\n            <Text size={text_size} className='account-management__list-text'>\n                {text}\n            </Text>\n        </div>\n    );\n};\n\nexport default ListItem;\n","import IconMessageList from './icon-message-list';\n\nexport default IconMessageList;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { Div100vhContainer, Text, Button, ThemedScrollbars, Icon } from '@deriv/components';\nimport { getOnfidoError } from '@deriv/shared';\nimport { Localize } from '@deriv/translations';\nimport ListItem from './list-item';\nimport { useDevice } from '@deriv-com/ui';\n\ntype TIconMessageList = {\n    className?: string;\n    icon: React.ReactElement;\n    message: string;\n    message_list: Array<string>;\n    onContinue: () => void;\n};\n\nconst IconMessageList = ({ className, icon, message, message_list = [], onContinue }: TIconMessageList) => {\n    const { isDesktop, isMobile } = useDevice();\n\n    return (\n        <ThemedScrollbars is_bypassed={isMobile}>\n            <Div100vhContainer\n                className='account-management__message-wrapper'\n                is_disabled={isDesktop}\n                height_offset='110px'\n            >\n                <div\n                    className={clsx('account-management__message-content', {\n                        [`${className}__message-content`]: className,\n                    })}\n                    data-testid='dt_icon_message_list'\n                >\n                    {icon && (\n                        <div\n                            className={clsx('account-management__message-icon', {\n                                [`${className}__message-icon`]: className,\n                            })}\n                        >\n                            {icon}\n                        </div>\n                    )}\n                    <Text\n                        as='div'\n                        weight='bold'\n                        className={clsx('account-management__message', {\n                            [`${className}__message`]: className,\n                        })}\n                        size={isDesktop ? 's' : 'xs'}\n                    >\n                        {message}\n                    </Text>\n\n                    {message_list && (\n                        <div className='account-management__list-container'>\n                            <div className='account-management__list-message'>\n                                <div className='account-management__list-icon'>\n                                    <Icon icon='IcAlertDanger' color='red' />\n                                </div>\n                                <section>\n                                    {message_list.length < 2 ? (\n                                        <ListItem text={getOnfidoError(message_list[0])} />\n                                    ) : (\n                                        message_list.map((text, idx) => (\n                                            <ListItem\n                                                key={text}\n                                                text={getOnfidoError(message_list[idx])}\n                                                index={idx + 1}\n                                            />\n                                        ))\n                                    )}\n                                </section>\n                            </div>\n                        </div>\n                    )}\n                    {onContinue && (\n                        <Button\n                            type='button'\n                            className='account-management__continue'\n                            onClick={onContinue}\n                            large\n                            primary\n                        >\n                            <Localize i18n_default_text='Verify again' />\n                        </Button>\n                    )}\n                </div>\n            </Div100vhContainer>\n        </ThemedScrollbars>\n    );\n};\n\nexport default IconMessageList;\n","import { RejectedReasons } from './rejected-reasons';\n\nexport default RejectedReasons;\n","import React from 'react';\nimport { Icon } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport IconMessageList from '../../../icon-message-list';\n\ntype TIconMessageList = {\n    handleRequireSubmission: () => void;\n    rejected_reasons: string[];\n};\n\nexport const RejectedReasons = ({ handleRequireSubmission, rejected_reasons }: TIconMessageList) => (\n    <IconMessageList\n        message={localize('Your proof of identity submission failed because:')}\n        icon={<Icon icon='IcPoiFailed' size={128} />}\n        message_list={rejected_reasons}\n        onContinue={handleRequireSubmission}\n    />\n);\n","import POIManualUploadFailed from './poi-manual-upload-failed';\n\nexport default POIManualUploadFailed;\n","import React, { ReactNode } from 'react';\nimport { Icon } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport IconMessageContent from '../icon-message-content';\n\ntype TPOIManualUploadFailed = {\n    error: string;\n    message?: ReactNode;\n};\nconst POIManualUploadFailed = ({ children, message, error }: React.PropsWithChildren<TPOIManualUploadFailed>) => (\n    <IconMessageContent\n        message={message ?? <Localize i18n_default_text={'Proof of identity documents upload failed'} />}\n        text={error}\n        icon={<Icon icon='IcPoiFailed' size={128} />}\n        className='account-management-dashboard'\n    >\n        {children}\n    </IconMessageContent>\n);\n\nexport default POIManualUploadFailed;\n","import DocumentUploader from '@binary-com/binary-document-uploader';\nimport { localize } from '@deriv/translations';\nimport { compressImageFiles, readFiles, TSettings } from '@deriv/shared';\nimport { TFile } from 'Types';\n\ntype TProcessedFile = TFile & TSettings & { message: string };\n\nconst fileReadErrorMessage = (filename: string) => {\n    return localize('Unable to read file {{name}}', { name: filename });\n};\n\nconst uploadFile = (file: File, getSocket: () => WebSocket, settings: TSettings) => {\n    return new Promise((resolve, reject) => {\n        if (!file) {\n            reject();\n        }\n\n        // File uploader instance connected to binary_socket\n        const uploader = new DocumentUploader({ connection: getSocket() });\n\n        let is_file_error = false;\n\n        compressImageFiles([file])\n            .then((files_to_process: Blob[]) => {\n                readFiles(files_to_process, fileReadErrorMessage, settings)\n                    .then(processed_files => {\n                        processed_files.forEach(item => {\n                            if (item.message) {\n                                is_file_error = true;\n                                reject(item);\n                            }\n                        });\n                        const total_to_upload = processed_files.length;\n                        if (is_file_error || !total_to_upload) {\n                            return; // don't start submitting files until all front-end validation checks pass\n                        }\n\n                        // send files\n                        uploader.upload(processed_files[0]).then(resolve).catch(reject);\n                    })\n                    /* eslint-disable no-console */\n                    .catch(error => console.error('error: ', error));\n            })\n            /* eslint-disable no-console */\n            .catch(error => console.error('error: ', error));\n    });\n};\n\nexport default uploadFile;\n","import React from 'react';\nimport { ButtonLink, Icon, Text } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport IconMessageContent from '../../icon-message-content';\n\ntype TGoToPersonalDetailsButton = {\n    has_invalid_postal_code?: boolean;\n    anchor?: string;\n    from?: string;\n    text?: string;\n};\n\nconst GoToPersonalDetailsButton = ({ anchor, from, text }: TGoToPersonalDetailsButton) => {\n    const from_string = from ? `?from=${from}` : '';\n    const anchor_string = anchor ? `#${anchor}` : '';\n    return (\n        <ButtonLink to={`/account/personal-details${from_string}${anchor_string}`}>\n            <Text className='dc-btn__text' weight='bold' as='p'>\n                {text ?? localize('Go to personal details')}\n            </Text>\n        </ButtonLink>\n    );\n};\n\nexport const MissingPersonalDetails = ({ has_invalid_postal_code, from }: TGoToPersonalDetailsButton) => {\n    if (has_invalid_postal_code)\n        return (\n            <IconMessageContent\n                message={localize('Your postal code is invalid')}\n                text={localize('Please check and update your postal code before submitting proof of identity.')}\n                icon={<Icon icon='IcAccountMissingDetails' size={128} />}\n            >\n                <GoToPersonalDetailsButton\n                    anchor='address_postcode'\n                    from={from}\n                    text={localize('Update postal code')}\n                />\n            </IconMessageContent>\n        );\n    return (\n        <IconMessageContent\n            message={localize('Your personal details are missing')}\n            text={localize('Please complete your personal details before you verify your identity.')}\n            icon={<Icon icon='IcAccountMissingDetails' size={128} />}\n        >\n            <GoToPersonalDetailsButton from={from} />\n        </IconMessageContent>\n    );\n};\n","import { MissingPersonalDetails } from './missing-personal-details';\n\nexport default MissingPersonalDetails;\n","import React from 'react';\nimport { GetAccountStatus, ResidenceList } from '@deriv/api-types';\nimport { IDV_ERROR_STATUS, getIDVError } from '@deriv/shared';\nimport { Localize } from '@deriv/translations';\nimport { DerivLightNameDobPoiIcon, DerivLightDobPoiIcon, DerivLightNamePoiIcon } from '@deriv/quill-icons';\nimport { getIDVDocumentType } from '../Helpers/utils';\nimport { Chat } from '@deriv/utils';\n\nconst handleOnClick = () => Chat.open();\n\nexport const GENERIC_ERROR_MESSAGE = (\n    <Localize i18n_default_text='Sorry, an internal error occurred. Hit the above checkbox to try again.' />\n);\n\nexport const DUPLICATE_ACCOUNT_ERROR_MESSAGE = (\n    <Localize\n        i18n_default_text='An account with these details already exists. Please make sure the details you entered are correct as only one real account is allowed per client. If this is a mistake, contact us via <0>live chat</0>.'\n        components={[<span key={0} className='link link--orange' onClick={handleOnClick} onKeyDown={handleOnClick} />]}\n    />\n);\n\nexport const CLAIMED_DOCUMENT_ERROR_MESSAGE = (\n    <Localize\n        i18n_default_text=\"This document number was already submitted for a different account. It seems you have an account with us that doesn't need further verification. Please contact us via <0>live chat</0> if you need help.\"\n        components={[<span key={0} className='link link--orange' onClick={handleOnClick} onKeyDown={handleOnClick} />]}\n    />\n);\n\nexport const generateIDVError = (\n    is_document_upload_required: boolean,\n    latest_status: DeepRequired<GetAccountStatus>['authentication']['attempts']['latest'],\n    chosen_country: ResidenceList[0],\n    mismatch_status: keyof typeof IDV_ERROR_STATUS\n) => {\n    const document_name = is_document_upload_required\n        ? 'identity document'\n        : getIDVDocumentType(latest_status, chosen_country);\n\n    switch (mismatch_status) {\n        case IDV_ERROR_STATUS.NameMismatch.code:\n            return {\n                required_fields: ['first_name', 'last_name'],\n                side_note_image: <DerivLightNamePoiIcon height='195px' width='285px' />,\n                inline_note_text: (\n                    <Localize\n                        i18n_default_text='To avoid delays, enter your <0>name</0> exactly as it appears on your {{document_name}}.'\n                        components={[<strong key={0} />]}\n                        values={{ document_name }}\n                    />\n                ),\n                failure_message: IDV_ERROR_STATUS.NameMismatch.message,\n            };\n        case IDV_ERROR_STATUS.DobMismatch.code:\n            return {\n                required_fields: ['date_of_birth'],\n                side_note_image: <DerivLightDobPoiIcon height='195px' width='285px' />,\n                inline_note_text: (\n                    <Localize\n                        i18n_default_text='To avoid delays, enter your <0>date of birth</0> exactly as it appears on your {{document_name}}.'\n                        components={[<strong key={0} />]}\n                        values={{ document_name }}\n                    />\n                ),\n                failure_message: IDV_ERROR_STATUS.DobMismatch.message,\n            };\n        default:\n            return {\n                required_fields: ['first_name', 'last_name', 'date_of_birth'],\n                side_note_image: <DerivLightNameDobPoiIcon height='195px' width='285px' />,\n                inline_note_text: (\n                    <Localize\n                        i18n_default_text='To avoid delays, enter your <0>name</0> and <0>date of birth</0> exactly as they appear on your {{document_name}}.'\n                        components={[<strong key={0} />]}\n                        values={{ document_name }}\n                    />\n                ),\n                failure_message: getIDVError(mismatch_status),\n            };\n    }\n};\n","import React from 'react';\nimport clsx from 'clsx';\nimport { Form, Formik, FormikHelpers } from 'formik';\nimport { GetSettings } from '@deriv/api-types';\nimport { Checkbox, HintBox, Loading, Text } from '@deriv/components';\nimport { Localize, localize } from '@deriv/translations';\nimport {\n    filterObjProperties,\n    isEmptyObject,\n    isMobile,\n    removeEmptyPropertiesFromObject,\n    toMoment,\n    WS,\n} from '@deriv/shared';\nimport { DerivLightNameDobPoiIcon } from '@deriv/quill-icons';\nimport FormBody from '../../form-body';\nimport LoadErrorMessage from '../../load-error-message';\nimport PersonalDetailsForm from '../../forms/personal-details-form.jsx';\nimport { GENERIC_ERROR_MESSAGE, DUPLICATE_ACCOUNT_ERROR_MESSAGE } from '../../../Configs/poi-error-config';\nimport { API_ERROR_CODES } from '../../../Constants/api-error-codes';\nimport { makeSettingsRequest, validate, validateName } from '../../../Helpers/utils';\nimport { TInputFieldValues } from '../../../Types';\nimport { useDevice } from '@deriv-com/ui';\n\ntype TRestState = {\n    api_error: string;\n    show_form: boolean;\n    errors?: boolean;\n    form_initial_values: TInputFieldValues;\n    changeable_fields: string[];\n};\n\ntype TPoiConfirmWithExampleFormContainer = {\n    account_settings: GetSettings;\n    getChangeableFields: () => string[];\n    onFormConfirm?: () => void;\n};\n\nconst PoiConfirmWithExampleFormContainer = ({\n    account_settings,\n    getChangeableFields,\n    onFormConfirm,\n}: TPoiConfirmWithExampleFormContainer) => {\n    const { isDesktop } = useDevice();\n    const [is_loading, setIsLoading] = React.useState(true);\n    const [checked, setChecked] = React.useState(false);\n    const [rest_state, setRestState] = React.useState<TRestState>({\n        show_form: true,\n        form_initial_values: { first_name: '', last_name: '', date_of_birth: '' },\n        changeable_fields: [],\n        api_error: '',\n    });\n\n    const side_note_image = <DerivLightNameDobPoiIcon height='195px' width='285px' />;\n\n    React.useEffect(() => {\n        const initializeFormValues = async () => {\n            try {\n                await WS?.wait('get_settings');\n                const visible_settings = ['first_name', 'last_name', 'date_of_birth'];\n                const form_initial_values = filterObjProperties(account_settings, visible_settings);\n                if (form_initial_values.date_of_birth) {\n                    form_initial_values.date_of_birth = toMoment(form_initial_values.date_of_birth).format(\n                        'YYYY-MM-DD'\n                    );\n                }\n                setRestState({\n                    ...rest_state,\n                    changeable_fields: getChangeableFields(),\n                    form_initial_values,\n                });\n                setIsLoading(false);\n            } catch (e) {\n                // eslint-disable-next-line no-console\n                console.error(e);\n            }\n        };\n\n        initializeFormValues();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [account_settings]);\n\n    const onSubmit = async (\n        values: TInputFieldValues,\n        { setStatus, setSubmitting }: FormikHelpers<TInputFieldValues>\n    ) => {\n        if (checked) return;\n        setStatus({ error_msg: '' });\n        const request = makeSettingsRequest(\n            values,\n            rest_state?.changeable_fields ? [...rest_state.changeable_fields] : []\n        );\n        const data = await WS.setSettings(request);\n\n        if (data?.error) {\n            const response_error =\n                data.error?.code === API_ERROR_CODES.DUPLICATE_ACCOUNT\n                    ? DUPLICATE_ACCOUNT_ERROR_MESSAGE\n                    : GENERIC_ERROR_MESSAGE;\n            setStatus({ error_msg: response_error });\n            setSubmitting(false);\n        } else {\n            const response = await WS.authorized.storage.getSettings();\n            if (response?.error) {\n                setRestState({ ...rest_state, api_error: response.error.message });\n                return;\n            }\n            const { first_name, last_name, date_of_birth } = response?.get_settings ?? {\n                ...rest_state.form_initial_values,\n            };\n            setRestState({ ...rest_state, form_initial_values: { first_name, last_name, date_of_birth } });\n            setChecked(true);\n            setIsLoading(false);\n\n            if (onFormConfirm) {\n                setTimeout(() => {\n                    onFormConfirm();\n                }, 500);\n            }\n        }\n    };\n\n    const validateFields = (values: TInputFieldValues) => {\n        const errors: TInputFieldValues = {};\n        const validateValues = validate(errors, values);\n\n        const required_fields = ['first_name', 'last_name', 'date_of_birth'];\n\n        validateValues(val => val, required_fields, localize('This field is required'));\n\n        if (values.first_name) {\n            errors.first_name = validateName(values.first_name);\n        }\n        if (values.last_name) {\n            errors.last_name = validateName(values.last_name);\n        }\n\n        setRestState({ ...rest_state, errors: !isEmptyObject(removeEmptyPropertiesFromObject(errors)) });\n        return removeEmptyPropertiesFromObject(errors);\n    };\n\n    const {\n        form_initial_values: { ...form_initial_values },\n        api_error,\n    } = rest_state;\n\n    if (api_error) return <LoadErrorMessage error_message={api_error} />;\n\n    if (is_loading) {\n        return <Loading is_fullscreen={false} className='account__initial-loader' />;\n    }\n\n    return (\n        <Formik initialValues={form_initial_values} enableReinitialize onSubmit={onSubmit} validate={validateFields}>\n            {({ errors, handleSubmit, isSubmitting, status }) => (\n                <Form className='account-form__poi-confirm-example' onSubmit={handleSubmit}>\n                    <FormBody>\n                        <PersonalDetailsForm\n                            editable_fields={rest_state.changeable_fields}\n                            is_rendered_for_onfido\n                            side_note={side_note_image}\n                            inline_note_text={\n                                <Localize\n                                    i18n_default_text='To avoid delays, enter your <0>name</0> and <0>date of birth</0> exactly as they appear on your identity document.'\n                                    components={[<strong key={0} />]}\n                                />\n                            }\n                        />\n                        <button\n                            type='submit'\n                            className={clsx('account-form__poi-confirm-example--button', {\n                                'account-form__poi-confirm-example--button__disabled':\n                                    checked || !isEmptyObject(errors),\n                            })}\n                        >\n                            <Checkbox\n                                value={checked}\n                                label={\n                                    <Text size={isDesktop ? 'xs' : 'xxs'}>\n                                        {localize(\n                                            'I confirm that the name and date of birth above match my chosen identity document (see below)'\n                                        )}\n                                    </Text>\n                                }\n                                disabled={isSubmitting}\n                            />\n                        </button>\n                        {status?.error_msg && (\n                            <div className='account-form__poi-confirm-example--status-message'>\n                                <HintBox\n                                    icon='IcAlertDanger'\n                                    message={\n                                        <Text as='p' size='xxxs'>\n                                            {status?.error_msg}\n                                        </Text>\n                                    }\n                                    is_danger\n                                    className='hint-box-layout'\n                                />\n                            </div>\n                        )}\n                    </FormBody>\n                </Form>\n            )}\n        </Formik>\n    );\n};\n\nexport default PoiConfirmWithExampleFormContainer;\n","import PoiConfirmWithExampleFormContainer from './poi-confirm-with-example-form-container';\n\nexport default PoiConfirmWithExampleFormContainer;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { CSSTransition } from 'react-transition-group';\nimport { HintBox, Text } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\n\ntype TOnfidoSdkView = {\n    is_onfido_disabled: boolean;\n    is_onfido_container_hidden?: boolean;\n    onfido_element_id?: string;\n    is_confirmed: boolean;\n    data_testid?: string;\n    is_onfido_initialized?: boolean;\n};\n\nconst OnfidoSdkView = ({\n    is_onfido_disabled,\n    is_onfido_container_hidden,\n    onfido_element_id = 'onfido',\n    is_confirmed,\n    data_testid,\n    is_onfido_initialized,\n}: TOnfidoSdkView) => {\n    const [is_status_message_visible, setIsStatusMessageVisible] = React.useState(false);\n    const transition_in_timeout_ref = React.useRef<ReturnType<typeof setTimeout>>();\n    const transition_out_timeout_ref = React.useRef<ReturnType<typeof setTimeout>>();\n\n    React.useEffect(() => {\n        const onConfirm = () => {\n            transition_in_timeout_ref.current = setTimeout(() => {\n                setIsStatusMessageVisible(true);\n            }, 800);\n            transition_out_timeout_ref.current = setTimeout(() => {\n                setIsStatusMessageVisible(false);\n                // the requirement is to hide the message after 5 sec, 4650 here + 350 in CSSTransition to make it smoother\n            }, 4650);\n        };\n\n        if (is_confirmed) {\n            onConfirm();\n        }\n    }, [is_confirmed]);\n\n    React.useEffect(() => {\n        return () => {\n            clearTimeout(transition_in_timeout_ref.current);\n            clearTimeout(transition_out_timeout_ref.current);\n        };\n    }, []);\n\n    return (\n        <div className='onfido-container-view_wrapper'>\n            <div className={clsx({ 'onfido-container__status-message_container': !is_onfido_disabled })}>\n                <CSSTransition\n                    appear={is_status_message_visible}\n                    in={is_status_message_visible}\n                    timeout={{\n                        exit: 350,\n                    }}\n                    classNames={{\n                        exit: 'onfido-container__status-message--exit',\n                    }}\n                    unmountOnExit\n                >\n                    <HintBox\n                        className='onfido-container__status-message'\n                        icon='IcAlertAnnounce'\n                        message={\n                            <Text as='p' size='xxxs'>\n                                <Localize i18n_default_text='Your personal details have been saved successfully.' />\n                            </Text>\n                        }\n                        is_info\n                    />\n                </CSSTransition>\n            </div>\n            <section>\n                {is_onfido_disabled && is_onfido_initialized && (\n                    <div className='onfido-container__info-message'>\n                        <HintBox\n                            icon='IcInfoBlue'\n                            message={\n                                <Text as='p' size='xxxs'>\n                                    <Localize i18n_default_text='Hit the checkbox above to choose your document.' />\n                                </Text>\n                            }\n                            is_info\n                        />\n                    </div>\n                )}\n                <div\n                    data-testid={data_testid}\n                    id={onfido_element_id}\n                    className={clsx({\n                        'onfido-container__disabled': is_onfido_disabled,\n                        'onfido-container__hidden': is_onfido_container_hidden,\n                    })}\n                />\n            </section>\n        </div>\n    );\n};\n\nexport default OnfidoSdkView;\n","import React, { useCallback } from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { useSettings } from '@deriv/api';\nimport { ResidenceList } from '@deriv/api-types';\nimport { Loading, ThemedScrollbars } from '@deriv/components';\nimport { useNotificationEvent, useServiceToken } from '@deriv/hooks';\nimport { observer, useStore } from '@deriv/stores';\nimport ErrorMessage from '../../../Components/error-component';\nimport MissingPersonalDetails from '../../../Components/poi/missing-personal-details';\nimport PoiConfirmWithExampleFormContainer from '../../../Components/poi/poi-confirm-with-example-form-container';\nimport OnfidoSdkView from './onfido-sdk-view';\nimport type { SdkError, SdkHandle, SdkResponse, SupportedLanguages } from '../../../Types';\nimport { convertAlpha2toAlpha3, convertAlpha3toAlpha2, getOnfidoSupportedLocaleCode } from '../../../Helpers/utils';\nimport { getOnfidoPhrases } from '../../../Constants/onfido';\nimport { useDevice } from '@deriv-com/ui';\n\ntype TAPIError = {\n    code?: string;\n    message?: string;\n    type?: string;\n};\n\ntype TOnfidoSdkViewContainer = {\n    country_code: string;\n    documents_supported:\n        | string[]\n        | DeepRequired<ResidenceList>[0]['identity']['services']['onfido']['documents_supported'];\n    getChangeableFields: () => string[];\n    handleViewComplete: () => void;\n    height?: number | string;\n    is_default_enabled?: boolean;\n};\n\nconst OnfidoSdkViewContainer = observer(\n    ({\n        country_code,\n        documents_supported,\n        getChangeableFields,\n        handleViewComplete,\n        height,\n        is_default_enabled,\n    }: TOnfidoSdkViewContainer) => {\n        const [api_error, setAPIError] = React.useState<string>();\n        const [missing_personal_details, setMissingPersonalDetails] = React.useState('');\n        const [is_onfido_disabled, setIsOnfidoDisabled] = React.useState(true);\n        const [is_confirmed, setIsConfirmed] = React.useState(false);\n        const [is_onfido_initialized, setIsOnfidoInitialized] = React.useState(false);\n        // used to check that we only initialize and load the onfido script once\n        const [is_onfido_loaded, setIsOnfidoLoaded] = React.useState(false);\n        const { data: account_settings } = useSettings();\n\n        const { send, isSuccess: isNotified } = useNotificationEvent();\n        const { common } = useStore();\n        const { current_language } = common;\n        const { isMobile } = useDevice();\n\n        // IDV country code - Alpha ISO2. Onfido country code - Alpha ISO3\n        const onfido_country_code = convertAlpha2toAlpha3(country_code);\n\n        // Service Token country code - Alpha ISO2\n        const token_country_code = convertAlpha3toAlpha2(country_code);\n\n        const { service_token, isSuccess, isError, error, isLoading } = useServiceToken({\n            service: 'onfido',\n            country: token_country_code,\n        });\n\n        const onfido_init = React.useRef<SdkHandle>();\n\n        // Onfido `document_supported` checks are made for an array of string.\n        // Ensure that `document_supported` passed respects this no the matter source.\n        const onfido_documents = Array.isArray(documents_supported)\n            ? documents_supported\n            : Object.keys(documents_supported).map(d => documents_supported[d].display_name);\n\n        let component_to_load: React.ReactNode;\n\n        const onComplete = React.useCallback(\n            (data: Omit<SdkResponse, 'data'> & { data?: { id?: string } }) => {\n                onfido_init?.current?.tearDown();\n                const document_ids = Object.keys(data).map(key => data[key as keyof SdkResponse]?.id);\n                if (document_ids?.length) {\n                    send({\n                        category: 'authentication',\n                        event: 'poi_documents_uploaded',\n                        args: {\n                            documents: document_ids as Array<string>,\n                        },\n                    });\n                }\n            },\n            [send]\n        );\n\n        const initOnfido = React.useCallback(\n            async (service_token: string) => {\n                if (!service_token) return;\n                try {\n                    onfido_init.current = await window.Onfido.init({\n                        containerId: 'onfido',\n                        language: {\n                            locale: getOnfidoSupportedLocaleCode(current_language) as SupportedLanguages,\n                            phrases: getOnfidoPhrases(),\n                            mobilePhrases: getOnfidoPhrases(),\n                        },\n                        token: service_token,\n                        useModal: false,\n                        useMemoryHistory: true,\n                        onComplete,\n                        steps: [\n                            {\n                                type: 'document',\n                                options: {\n                                    documentTypes: {\n                                        passport: onfido_documents.some(doc => /Passport/g.test(doc)),\n                                        driving_licence: onfido_documents.some(doc => /Driving Licence/g.test(doc))\n                                            ? {\n                                                  country: onfido_country_code,\n                                              }\n                                            : false,\n                                        national_identity_card: onfido_documents.some(doc =>\n                                            /National Identity Card/g.test(doc)\n                                        )\n                                            ? {\n                                                  country: onfido_country_code,\n                                              }\n                                            : false,\n                                    },\n                                    hideCountrySelection: true,\n                                },\n                            },\n                            'face',\n                        ],\n                    });\n                    setIsOnfidoInitialized(true);\n                } catch (err) {\n                    setAPIError((err as SdkError)?.message ?? err);\n                    setIsOnfidoDisabled(true);\n                    onfido_init.current = undefined;\n                } finally {\n                    setIsOnfidoLoaded(true);\n                }\n            },\n            [onComplete, onfido_documents, onfido_country_code, current_language]\n        );\n\n        const loadOnfidoSdkScript = React.useCallback(\n            (token: string) => {\n                document.getElementById('onfido_sdk')?.remove();\n                document.getElementById('onfido_style')?.remove();\n\n                // check if the onfido sdk script has been loaded, and if its still loading the onfido script, don't re-attempt to load the script again\n                const script_node = document.createElement('script');\n                const link_node = document.createElement('link');\n\n                // [TODO] - Need to lock version of onfido sdk - Current version in CDN is 13.8.4\n                script_node.id = 'onfido_sdk';\n                script_node.src = 'https://assets.onfido.com/web-sdk-releases/13.8.4/onfido.min.js';\n                link_node.href = 'https://assets.onfido.com/web-sdk-releases/13.8.4/style.css';\n                link_node.rel = 'stylesheet';\n                link_node.id = 'onfido_style';\n\n                document.body.appendChild(script_node);\n                document.body.appendChild(link_node);\n\n                script_node.addEventListener('load', () => {\n                    initOnfido(token);\n                });\n            },\n            [initOnfido]\n        );\n\n        const handleError = (error: TAPIError) => {\n            switch (error.code) {\n                case 'MissingPersonalDetails':\n                    setMissingPersonalDetails('all');\n                    break;\n                case 'InvalidPostalCode':\n                    setMissingPersonalDetails('postal_code');\n                    break;\n                default:\n                    setAPIError(error.message);\n                    break;\n            }\n        };\n\n        const onConfirm = useCallback(() => {\n            setIsConfirmed(true);\n            setIsOnfidoDisabled(false);\n        }, []);\n\n        React.useEffect(() => {\n            if (isSuccess && service_token?.onfido?.token && !is_onfido_loaded) {\n                loadOnfidoSdkScript(service_token?.onfido?.token);\n            } else if (isError) {\n                handleError(error as TAPIError);\n            }\n        }, [error, isError, isSuccess, is_onfido_loaded, loadOnfidoSdkScript, service_token?.onfido?.token]);\n\n        React.useEffect(() => {\n            /**\n             * Enables onfido sdk\n             * Pass is_default_enabled to enable onfido immediately if personal detail component is not required\n             * so no user prompt will be there so submit the details in i.e. in case of flow for nigerian clients ATM\n             */\n            if (is_default_enabled) {\n                setIsOnfidoDisabled(false);\n            }\n        }, [is_default_enabled]);\n\n        React.useEffect(() => {\n            /**\n             * Handles cleanup operations when document submission is completed\n             */\n            if (isNotified) {\n                handleViewComplete();\n            }\n        }, [handleViewComplete, isNotified]);\n\n        if (isLoading || !is_onfido_loaded) {\n            component_to_load = <Loading is_fullscreen={false} />;\n        } else if (missing_personal_details) {\n            component_to_load = (\n                <MissingPersonalDetails\n                    has_invalid_postal_code={missing_personal_details === 'postal_code'}\n                    from='proof_of_identity'\n                />\n            );\n        } else if (api_error) {\n            // Error message will only display if retry count exceeds 3\n            component_to_load = <ErrorMessage message={api_error} />;\n        }\n\n        return (\n            <ThemedScrollbars is_bypassed={isMobile} height={height}>\n                <div className='onfido-container'>\n                    {component_to_load || (\n                        <CSSTransition\n                            appear={is_onfido_disabled}\n                            in={is_onfido_disabled}\n                            timeout={{\n                                exit: 350,\n                            }}\n                            classNames={{\n                                exit: 'account-form__poi-confirm-example_wrapper--exit',\n                            }}\n                            unmountOnExit\n                        >\n                            <div className='account-form__poi-confirm-example_wrapper account-form__poi-confirm-example_container'>\n                                <PoiConfirmWithExampleFormContainer\n                                    account_settings={account_settings}\n                                    getChangeableFields={getChangeableFields}\n                                    onFormConfirm={onConfirm}\n                                />\n                            </div>\n                        </CSSTransition>\n                    )}\n                    <OnfidoSdkView\n                        is_onfido_disabled={is_onfido_disabled}\n                        is_confirmed={is_confirmed}\n                        is_onfido_container_hidden={!!component_to_load}\n                        is_onfido_initialized={is_onfido_initialized}\n                    />\n                </div>\n            </ThemedScrollbars>\n        );\n    }\n);\n\nOnfidoSdkViewContainer.displayName = 'OnfidoSdkViewContainer';\n\nexport default OnfidoSdkViewContainer;\n","import { localize } from '@deriv/translations';\nimport { FormikValues } from 'formik';\n\nexport const ROOT_CLASS = 'manual-poi-details';\n\nexport const DOCUMENT_TYPES = {\n    NATIONAL_IDENTITY_CARD: 'national_identity_card',\n    NIMC_SLIP: 'nimc_slip',\n    PASSPORT: 'passport',\n    DRIVING_LICENCE: 'driving_licence',\n    BIRTH_CERTIFICATE: 'birth_certificate',\n    SELFIE_WITH_ID: 'selfie_with_id',\n    OTHER: 'other',\n};\n\nconst PAGE_TYPE = {\n    FRONT: 'front',\n    BACK: 'back',\n    PHOTO: 'photo',\n};\n\nexport const SELFIE_DOCUMENT = {\n    document_type: DOCUMENT_TYPES.SELFIE_WITH_ID,\n    pageType: PAGE_TYPE.PHOTO,\n    name: 'selfie_with_id',\n    icon: 'IcSelfie',\n    info: localize('Upload your selfie.'),\n};\n\nexport const date_field = {\n    name: 'expiry_date',\n    label: localize('Expiry date'),\n    type: 'date',\n    required: true,\n};\n\nexport const getDocumentIndex = ({ country_code }: FormikValues) => [\n    {\n        onfido_name: 'Passport',\n        card: {\n            title: localize('Passport'),\n            description: localize('Upload the page that contains your photo.'),\n            icon: 'IcPoiPassport',\n        },\n        details: {\n            fields: [\n                {\n                    name: 'document_id',\n                    label: localize('Passport number'),\n                    type: 'text',\n                    required: true,\n                },\n                { ...date_field },\n            ],\n            documents_title: localize('Next, upload the page of your passport that contains your photo.'),\n            documents: [\n                {\n                    document_type: DOCUMENT_TYPES.PASSPORT,\n                    pageType: PAGE_TYPE.FRONT,\n                    name: 'passport',\n                    icon: 'IcPassport',\n                    info: localize('Upload the page of your passport that contains your photo.'),\n                },\n            ],\n        },\n    },\n    {\n        onfido_name: 'Driving Licence',\n        card: {\n            title: localize('Driving licence'),\n            description: localize('Upload the front and back of your driving licence.'),\n            icon: 'IcPoiDrivingLicence',\n        },\n        details: {\n            fields_title: localize('First, enter your driving licence number and the expiry date.'),\n            fields: [\n                {\n                    name: 'document_id',\n                    label: localize('Driving licence number'),\n                    type: 'text',\n                    required: true,\n                },\n                { ...date_field },\n            ],\n            documents_title: localize('Next, upload the front and back of your driving licence.'),\n            documents: [\n                {\n                    document_type: DOCUMENT_TYPES.DRIVING_LICENCE,\n                    pageType: PAGE_TYPE.FRONT,\n                    name: 'driving_licence_front',\n                    icon: 'IcDrivingLicenceFront',\n                    info: localize('Upload the front of your driving licence.'),\n                },\n                {\n                    document_type: DOCUMENT_TYPES.DRIVING_LICENCE,\n                    pageType: PAGE_TYPE.BACK,\n                    name: 'driving_licence_back',\n                    icon: 'IcIdCardBack',\n                    info: localize('Upload the back of your driving licence.'),\n                },\n            ],\n        },\n    },\n    {\n        onfido_name: 'National Identity Card',\n        card: {\n            title: localize('Identity card'),\n            description: localize('Upload the front and back of your identity card.'),\n            icon: 'IcPoiIdentityCard',\n        },\n        details: {\n            fields_title: localize('First, enter your identity card number and the expiry date.'),\n            fields: [\n                {\n                    name: 'document_id',\n                    label: localize('Identity card number'),\n                    type: 'text',\n                    required: true,\n                },\n                { ...date_field },\n            ],\n            documents_title: localize('Next, upload the front and back of your identity card.'),\n            documents: [\n                {\n                    document_type: DOCUMENT_TYPES.NATIONAL_IDENTITY_CARD,\n                    pageType: PAGE_TYPE.FRONT,\n                    name: 'identity_card_front',\n                    icon: 'IcIdCardFront',\n                    info: localize('Upload the front of your identity card.'),\n                },\n                {\n                    document_type: DOCUMENT_TYPES.NATIONAL_IDENTITY_CARD,\n                    pageType: PAGE_TYPE.BACK,\n                    name: 'identity_card_back',\n                    icon: 'IcIdCardBack',\n                    info: localize('Upload the back of your identity card.'),\n                },\n            ],\n        },\n    },\n    ...(country_code === 'ng'\n        ? [\n              {\n                  card: {\n                      title: localize('NIMC slip and proof of age'),\n                      description: localize('Upload both of these documents to prove your identity.'),\n                      icon: 'IcPoiNimcSlip',\n                  },\n                  details: {\n                      fields: [\n                          {\n                              name: 'document_id',\n                              label: localize('NIMC slip number'),\n                              type: 'text',\n                              required: true,\n                          },\n                      ],\n                      documents_title: localize('Next, upload both of the following documents.'),\n                      documents: [\n                          {\n                              document_type: DOCUMENT_TYPES.NIMC_SLIP,\n                              lifetime_valid: true,\n                              pageType: PAGE_TYPE.FRONT,\n                              name: 'nimc_slip',\n                              icon: 'IcPoiNimcSlipHorizontal',\n                              info: localize('Upload your NIMC slip.'),\n                          },\n                          {\n                              document_type: DOCUMENT_TYPES.BIRTH_CERTIFICATE,\n                              pageType: PAGE_TYPE.PHOTO,\n                              name: 'birth_certificate_front',\n                              icon: 'IcDop',\n                              info: localize(\n                                  'Upload your proof of age: birth certificate or age declaration document.'\n                              ),\n                          },\n                      ],\n                  },\n              },\n          ]\n        : []),\n];\n","import React from 'react';\nimport { Field, FormikValues } from 'formik';\nimport { DatePicker, Input } from '@deriv/components';\nimport { toMoment } from '@deriv/shared';\nimport { ROOT_CLASS } from '../constants';\n\nconst InputField = ({ data }: FormikValues) => {\n    const min_date = toMoment().add(6, 'months').format('YYYY-MM-DD');\n    switch (data.type) {\n        case 'text':\n            return (\n                <Field name={data.name}>\n                    {({ field, form: { errors, touched } }: FormikValues) => (\n                        <Input\n                            {...field}\n                            className={`${ROOT_CLASS}__field`}\n                            type='text'\n                            label={`${data.label}${data.required ? '*' : ''}`}\n                            error={touched[field.name] && errors[field.name]}\n                        />\n                    )}\n                </Field>\n            );\n        case 'date':\n            return (\n                <Field name={data.name}>\n                    {({ field, form: { errors, touched } }: FormikValues) => (\n                        <DatePicker\n                            {...field}\n                            className={`${ROOT_CLASS}__field`}\n                            date_format='YYYY-MM-DD'\n                            display_format='DD-MM-YYYY'\n                            start_date={min_date}\n                            min_date={min_date}\n                            name={data.name}\n                            label={`${data.label}${data.required ? '*' : ''}`}\n                            error={touched[field.name] && errors[field.name]}\n                            readOnly\n                        />\n                    )}\n                </Field>\n            );\n        default:\n            return null;\n    }\n};\n\nexport default InputField;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { Field, FieldProps, FormikProps, FormikValues } from 'formik';\nimport { localize } from '@deriv/translations';\nimport { supported_filetypes, max_document_size } from '@deriv/shared';\nimport { Button, Icon, Text, FileDropzone } from '@deriv/components';\nimport { ROOT_CLASS } from '../constants';\nimport { useDevice } from '@deriv-com/ui';\n\nconst DROPZONE_ERRORS = {\n    'file-too-large': localize('File size should be 8MB or less'),\n    'file-invalid-type': localize('File uploaded is not supported'),\n    'too-many-files': localize('Please select one file only'),\n    GENERAL: localize('Sorry, an error occured. Please select another file.'),\n};\ntype TDROPZONE_ERRORS = Readonly<typeof DROPZONE_ERRORS>;\n\ntype TUploader = {\n    data: FormikValues;\n    value: FormikValues;\n    is_full?: boolean;\n    has_frame?: boolean;\n    onChange?: (e: unknown) => void;\n    setFieldValue: FormikProps<FormikValues>['setFieldValue'];\n    handleChange: (file: object | null, setFieldValue: FormikProps<FormikValues>['setFieldValue']) => void;\n};\n\ntype TMessage = {\n    data?: FormikValues;\n    open?: () => void;\n};\n\ntype THandleRejectFiles = Array<{\n    file: File;\n    errors: [\n        {\n            message: string;\n            code: string;\n        }\n    ];\n}>;\n\nconst Message = ({ data, open }: TMessage) => {\n    const { isDesktop } = useDevice();\n    return (\n        <div className={`${ROOT_CLASS}__uploader-details`}>\n            <Icon className={`${ROOT_CLASS}__uploader-icon`} icon={data?.icon} size={236} />\n            <Text as='p' size='xs' color='general' align='center'>\n                {data?.info}\n            </Text>\n            <Button\n                medium\n                secondary\n                text={isDesktop ? localize('Drop file or click here to upload') : localize('Tap here to upload')}\n                onClick={open}\n            />\n        </div>\n    );\n};\n\nconst Preview = ({ data, setFieldValue, value, has_frame, handleChange }: Omit<TUploader, 'is_full' | 'onChange'>) => {\n    const [background_url, setBackgroundUrl] = React.useState('');\n\n    React.useEffect(() => {\n        setBackgroundUrl(value?.file ? URL.createObjectURL(value?.file) : '');\n    }, [value]);\n\n    return (\n        <div className={`${ROOT_CLASS}__uploader-details ${ROOT_CLASS}__uploader-details--preview`}>\n            <div\n                className={clsx(`${ROOT_CLASS}__uploader-image`, {\n                    [`${ROOT_CLASS}__uploader-image--has-frame`]: has_frame,\n                })}\n                style={{ backgroundImage: `url(${background_url})` }}\n            >\n                {has_frame && <Icon icon='IcPoiFrame' className={`${ROOT_CLASS}__uploader-frame`} />}\n                {(!background_url || value?.file.type.indexOf('pdf') !== -1) && (\n                    <React.Fragment>\n                        <Icon icon='IcCloudUpload' size={50} />\n                        <Text as='p' size='xs' color='general' align='center'>\n                            {value?.file.name}\n                        </Text>\n                    </React.Fragment>\n                )}\n                <Icon\n                    icon='IcCloseCircle'\n                    className={`${ROOT_CLASS}__uploader-remove`}\n                    onClick={() => {\n                        handleChange?.(null, setFieldValue);\n                    }}\n                    size={16}\n                />\n            </div>\n            <Text as='p' size='xs' color='general' align='center'>\n                {data?.info}\n            </Text>\n        </div>\n    );\n};\n\nconst Uploader = ({ data, value, is_full, onChange, has_frame }: Omit<TUploader, 'setFieldValue' | 'handleChange'>) => {\n    const { isDesktop } = useDevice();\n    const [image, setImage] = React.useState<FormikValues>();\n\n    React.useEffect(() => {\n        setImage(value);\n    }, [value]);\n\n    const handleChange = (file: object | null, setFieldValue: FormikProps<FormikValues>['setFieldValue']) => {\n        onChange?.(file);\n        setFieldValue?.(data?.name, file);\n    };\n\n    const handleAccept = (files: object[], setFieldValue: FormikProps<FormikValues>['setFieldValue']) => {\n        const file = { file: files[0], errors: [], ...data };\n        handleChange(file, setFieldValue);\n    };\n\n    const handleReject = (files: THandleRejectFiles, setFieldValue: FormikProps<FormikValues>['setFieldValue']) => {\n        const errors = files[0].errors?.map((error: { code: string }) =>\n            DROPZONE_ERRORS[error.code as keyof TDROPZONE_ERRORS]\n                ? DROPZONE_ERRORS[error.code as keyof TDROPZONE_ERRORS]\n                : DROPZONE_ERRORS.GENERAL\n        );\n        const file = { ...files[0], errors, ...data };\n        handleChange(file, setFieldValue);\n    };\n\n    const ValidationErrorMessage: React.ComponentProps<typeof FileDropzone>['validation_error_message'] = open => (\n        <div className={`${ROOT_CLASS}__uploader-details`}>\n            {image?.errors?.map((error: string, index: number) => (\n                <Text key={index} as='p' size='xs' color='secondary' align='center'>\n                    {error}\n                </Text>\n            ))}\n            <Button\n                medium\n                secondary\n                text={isDesktop ? localize('Drop file or click here to upload') : localize('Tap here to upload')}\n                onClick={open}\n            />\n        </div>\n    );\n\n    return (\n        <Field name={data?.name}>\n            {({ form: { setFieldValue } }: FieldProps) => (\n                <div\n                    className={clsx(`${ROOT_CLASS}__uploader`, {\n                        [`${ROOT_CLASS}__uploader--full`]: is_full,\n                    })}\n                >\n                    <FileDropzone\n                        accept={supported_filetypes}\n                        error_message={localize('Please upload supported file type.')}\n                        filename_limit={32}\n                        hover_message={localize('Drop files here..')}\n                        max_size={max_document_size}\n                        message={(open?: () => void) => <Message open={open} data={data} />}\n                        preview_single={\n                            image && (\n                                <Preview\n                                    data={data}\n                                    value={image}\n                                    has_frame={has_frame}\n                                    setFieldValue={setFieldValue}\n                                    handleChange={handleChange}\n                                />\n                            )\n                        }\n                        multiple={false}\n                        onDropAccepted={(files: object[]) => handleAccept(files, setFieldValue)}\n                        onDropRejected={(files: THandleRejectFiles) => handleReject(files, setFieldValue)}\n                        validation_error_message={value?.errors?.length ? ValidationErrorMessage : undefined}\n                        noClick\n                        value={(image ? [image] : []) as unknown as React.ComponentProps<typeof FileDropzone>['value']}\n                    />\n                </div>\n            )}\n        </Field>\n    );\n};\n\nexport default Uploader;\n","import { localize } from '@deriv/translations';\nimport { FormikErrors, FormikValues } from 'formik';\n\nexport const setInitialValues = (fields: FormikValues) => {\n    const values: FormikValues = {};\n    fields.forEach((field: FormikValues) => {\n        values[field.name] = '';\n    });\n    return values;\n};\n\nexport const checkIsEmpty = (value: unknown) => {\n    return typeof value === 'string' ? !value.trim() : !value;\n};\n\ntype TFields = {\n    name: string;\n    label: string;\n    type: string;\n    required: boolean;\n}[];\n\ntype TDocument = {\n    document_type: string;\n    pageType: string;\n    name: string;\n    icon: string;\n    info: string;\n}[];\n\nexport const validateFields = (values: FormikValues, fields: TFields = [], documents: TDocument = []) => {\n    const errors: FormikErrors<FormikValues> = {};\n\n    fields.forEach((field: { name: string; label: string; type: string; required: boolean }) => {\n        const { name, label, type } = field;\n        const value = values[name];\n\n        if (field.required && checkIsEmpty(value)) {\n            errors[name] = localize('{{label}} is required.', {\n                label,\n            });\n        } else if (type === 'text' && value.length > 30) {\n            errors[name] = localize('{{label}} must be less than 30 characters.', {\n                label,\n            });\n        } else if (type === 'text' && !/^[\\w\\s-]{0,30}$/g.test(value)) {\n            errors[name] = localize('Only letters, numbers, space, underscore, and hyphen are allowed for {{label}}.', {\n                label,\n            });\n        }\n    });\n\n    documents.forEach((document: { name: string }) => {\n        const { name } = document;\n        const value = values[name];\n\n        if (checkIsEmpty(value)) {\n            errors[name] = localize('{{name}} is required.', {\n                name,\n            });\n        } else if (value.errors?.length) {\n            errors[name] = value.errors[0];\n        }\n    });\n\n    return errors;\n};\n","import React from 'react';\nimport clsx from 'clsx';\nimport { Formik, Form, FormikValues } from 'formik';\nimport { Localize, localize } from '@deriv/translations';\nimport { useDevice } from '@deriv-com/ui';\nimport { Button, Icon, Text } from '@deriv/components';\nimport InputField from './input-field';\nimport Uploader from './uploader';\nimport { setInitialValues, validateFields } from './utils';\nimport { ROOT_CLASS, date_field, getDocumentIndex } from '../constants';\nimport FormFooter from '../../../../form-footer';\nimport FormBody from '../../../../form-body';\n\nconst icons = [\n    {\n        icon: 'IcPoiClearPhoto',\n        text: localize('A clear colour photo or scanned image'),\n    },\n    {\n        icon: 'IcPoiFileFormat',\n        text: localize('JPEG, JPG, PNG, PDF, or GIF'),\n    },\n    {\n        icon: 'IcPoiFileSize',\n        text: localize('Less than 8MB'),\n    },\n    {\n        icon: 'IcPoiDocExpiry',\n        text: localize('Must be valid for at least 6 months'),\n    },\n];\n\ntype TDocumentsUpload = {\n    initial_values?: FormikValues;\n    is_from_external?: boolean;\n    goToCards: () => void;\n    onSubmit: () => void;\n    data: ReturnType<typeof getDocumentIndex>[number]['details'];\n};\n\ntype TIconsItem = {\n    data: FormikValues;\n};\n\nconst IconsItem = ({ data }: TIconsItem) => (\n    <div className={`${ROOT_CLASS}__icons-item`}>\n        <Icon icon={data.icon} size={24} />\n        <Text as='p' size='xxxs' align='center'>\n            {data.text}\n        </Text>\n    </div>\n);\n\nconst DocumentsUpload = ({ initial_values, is_from_external, data, goToCards, onSubmit }: TDocumentsUpload) => {\n    const { isDesktop } = useDevice();\n    const { fields, documents_title, documents } = data;\n    const is_expiry_date_required = fields.some(field => field.name === date_field.name);\n\n    const fields_title = is_expiry_date_required ? (\n        <Localize\n            i18n_default_text='First, enter your {{label}} and the expiry date.'\n            values={{\n                label: fields?.[0].label,\n            }}\n        />\n    ) : (\n        <Localize\n            i18n_default_text='First, enter your {{label}}.'\n            values={{\n                label: fields?.[0].label,\n            }}\n        />\n    );\n\n    return (\n        <div\n            className={clsx(ROOT_CLASS, {\n                [`${ROOT_CLASS}--mobile`]: !isDesktop,\n            })}\n        >\n            <Formik\n                initialValues={initial_values || setInitialValues([...(fields || []), ...(documents || [])])}\n                validate={values => validateFields(values, fields, documents)}\n                onSubmit={onSubmit}\n            >\n                {({ values, isValid, touched }: FormikValues) => {\n                    const is_form_touched = Object.keys(touched).length > 0;\n                    const is_form_empty = Object.values(values).some(\n                        (field, key) => (field === null || field === '') && fields?.[key]?.required\n                    );\n\n                    return (\n                        <Form className={`${ROOT_CLASS}__form`}>\n                            <FormBody className='form-body' scroll_offset={isDesktop ? '80px' : '180px'}>\n                                <div className={`${ROOT_CLASS}__fields-content`}>\n                                    <Text as='h3' size='s' color='prominent'>\n                                        {fields_title}\n                                    </Text>\n                                    <div className={`${ROOT_CLASS}__fields-wrap`}>\n                                        {fields?.map((field: FormikValues) => (\n                                            <InputField key={field.name} data={field} />\n                                        ))}\n                                    </div>\n                                    <div className={`${ROOT_CLASS}__divider`} />\n                                    <Text as='h3' size='s' color='prominent'>\n                                        {documents_title}\n                                    </Text>\n                                    <div className={`${ROOT_CLASS}__uploaders-wrap`}>\n                                        {documents?.map((item: FormikValues) => (\n                                            <Uploader\n                                                key={item.name}\n                                                data={item}\n                                                value={values[item.name]}\n                                                is_full={documents.length === 1 || is_from_external}\n                                            />\n                                        ))}\n                                    </div>\n                                    <div className={`${ROOT_CLASS}__icons`}>\n                                        {icons.map(item =>\n                                            item.icon === 'IcPoiDocExpiry' && !is_expiry_date_required ? null : (\n                                                <IconsItem key={item.icon} data={item} />\n                                            )\n                                        )}\n                                    </div>\n                                </div>\n                            </FormBody>\n                            <FormFooter>\n                                <div className={`${ROOT_CLASS}__btns`}>\n                                    <Button onClick={goToCards} secondary large text={localize('Back')} />\n                                    <Button\n                                        type='submit'\n                                        primary\n                                        large\n                                        is_disabled={!isValid || (!is_form_touched && is_form_empty)}\n                                        text={localize('Next')}\n                                    />\n                                </div>\n                            </FormFooter>\n                        </Form>\n                    );\n                }}\n            </Formik>\n        </div>\n    );\n};\n\nexport default DocumentsUpload;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { Form, Formik, FormikProps, FormikValues } from 'formik';\nimport { Localize, localize } from '@deriv/translations';\nimport { useDevice } from '@deriv-com/ui';\nimport { Button, Text } from '@deriv/components';\nimport Uploader from './uploader';\nimport { setInitialValues, validateFields } from './utils';\nimport { ROOT_CLASS, SELFIE_DOCUMENT } from '../constants';\nimport FormBody from '../../../../form-body';\nimport FormFooter from '../../../../form-footer';\n\ntype TSelfieUpload = {\n    initial_values?: FormikValues;\n    goBack: () => void;\n    onConfirm: () => void;\n    onFileDrop: () => void;\n};\n\nconst SelfieUpload = ({ initial_values, goBack, onConfirm, onFileDrop }: TSelfieUpload) => {\n    const { isDesktop } = useDevice();\n    return (\n        <div\n            className={clsx(ROOT_CLASS, {\n                [`${ROOT_CLASS}--mobile`]: !isDesktop,\n            })}\n        >\n            <Formik\n                initialValues={initial_values || setInitialValues([SELFIE_DOCUMENT])}\n                validate={values => validateFields(values, undefined, [SELFIE_DOCUMENT])}\n                onSubmit={onConfirm}\n            >\n                {({ values, isValid, isSubmitting, touched }: Partial<FormikProps<FormikValues>>) => {\n                    let is_form_touched, is_form_empty;\n                    if (touched) {\n                        is_form_touched = Object.keys(touched).length > 0;\n                    }\n                    if (values) {\n                        is_form_empty = Object.values(values).some(field => field === null || field === '');\n                    }\n\n                    return (\n                        <Form className={`${ROOT_CLASS}__form`}>\n                            <FormBody className='form-body' scroll_offset={isDesktop ? '8rem' : '18rem'}>\n                                <div className={`${ROOT_CLASS}__fields-content`}>\n                                    <Text as='h3' size='s' weight='bold' color='prominent'>\n                                        <Localize i18n_default_text='Upload your selfie' />\n                                    </Text>\n                                    <div className={`${ROOT_CLASS}__uploaders-wrap`}>\n                                        <Uploader\n                                            data={SELFIE_DOCUMENT}\n                                            value={values ? values[SELFIE_DOCUMENT.name] : ''}\n                                            is_full\n                                            onChange={onFileDrop}\n                                            has_frame\n                                        />\n                                    </div>\n                                    <div className={`${ROOT_CLASS}__notice`}>\n                                        <Text as='p' size='xs' color='general'>\n                                            <Localize i18n_default_text='Before uploading, please ensure that you’re facing forward in the selfie, your face is within the frame, and your eyes are clearly visible even if you’re wearing glasses.' />\n                                        </Text>\n                                    </div>\n                                </div>\n                            </FormBody>\n                            <FormFooter>\n                                <div className={`${ROOT_CLASS}__btns`}>\n                                    <Button onClick={goBack} secondary large text={localize('Back')} />\n                                    <Button\n                                        type='submit'\n                                        primary\n                                        large\n                                        is_disabled={!isValid || isSubmitting || (!is_form_touched && is_form_empty)}\n                                        text={localize('Confirm and upload')}\n                                    />\n                                </div>\n                            </FormFooter>\n                        </Form>\n                    );\n                }}\n            </Formik>\n        </div>\n    );\n};\n\nexport default SelfieUpload;\n","import React from 'react';\nimport DocumentsUpload from './documents-upload';\nimport SelfieUpload from './selfie-upload';\nimport { SELFIE_DOCUMENT, getDocumentIndex } from '../constants';\nimport './card-details.scss';\nimport { FormikValues } from 'formik';\n\ntype TCardDetails = {\n    data: ReturnType<typeof getDocumentIndex>[number]['details'];\n    onComplete: (e: object) => void;\n    goToCards: () => void;\n    is_from_external?: boolean;\n};\n\nconst CardDetails = ({ data, goToCards, onComplete, is_from_external }: TCardDetails) => {\n    const [documents, setDocuments] = React.useState<FormikValues>();\n    const [selfie, setSelfie] = React.useState<FormikValues>();\n    const [is_selfie_upload, setIsSelfieUpload] = React.useState(false);\n\n    const onSubmitDocuments = (values?: FormikValues) => {\n        setDocuments(values);\n        setIsSelfieUpload(true);\n    };\n\n    const onConfirmDocuments = (values?: FormikValues) => {\n        onComplete({ ...documents, ...values });\n    };\n\n    return (\n        <React.Fragment>\n            {!is_selfie_upload ? (\n                <DocumentsUpload\n                    initial_values={documents}\n                    is_from_external={is_from_external}\n                    data={data}\n                    goToCards={goToCards}\n                    onSubmit={onSubmitDocuments}\n                />\n            ) : (\n                <SelfieUpload\n                    initial_values={selfie}\n                    goBack={() => setIsSelfieUpload(false)}\n                    onConfirm={onConfirmDocuments}\n                    onFileDrop={(value?: string) => setSelfie({ [SELFIE_DOCUMENT.name]: value })}\n                />\n            )}\n        </React.Fragment>\n    );\n};\n\nexport default CardDetails;\n","import CardDetails from './card-details';\n\nexport default CardDetails;\n","/* eslint-disable @typescript-eslint/ban-ts-comment */\n//@ts-nocheck [TODO] - Need to fix typescript errors in OnfidoUpload component\nimport React from 'react';\nimport { Loading, Icon, Text, Button } from '@deriv/components';\nimport { localize, Localize } from '@deriv/translations';\nimport { WS } from '@deriv/shared';\nimport { UploadComplete } from '../upload-complete/upload-complete';\nimport POIManualUploadFailed from '../../../poi-manual-upload-failed';\nimport { API_ERROR_CODES } from '../../../../Constants/api-error-codes';\nimport uploadFile from '../../../file-uploader-container/upload-file';\nimport OnfidoUpload from '../../../../Sections/Verification/ProofOfIdentity/onfido-sdk-view-container';\n\nimport CardDetails from './card-details';\nimport { SELFIE_DOCUMENT, getDocumentIndex } from './constants';\nimport { FormikValues } from 'formik';\n\nconst STATUS = {\n    IS_UPLOADING: 'IS_UPLOADING',\n    IS_COMPLETED: 'IS_COMPLETED',\n    IS_FAILED: 'IS_FAILED',\n};\n\ntype TDetailComponent = {\n    document: ReturnType<typeof getDocumentIndex>[number];\n    onClickBack: () => void;\n    root_class: string;\n    country_code_key?: string;\n    height?: string | number;\n    handleComplete?: () => void;\n    is_onfido_supported?: boolean;\n    is_from_external?: boolean;\n    is_for_mt5?: boolean;\n    handlePOIforMT5Complete?: () => void;\n    needs_poa?: boolean;\n};\n\nconst DetailComponent = ({\n    document,\n    onClickBack,\n    root_class,\n    country_code_key,\n    height,\n    handleComplete,\n    is_onfido_supported,\n    is_from_external,\n    is_for_mt5,\n    handlePOIforMT5Complete,\n    needs_poa,\n    ...props\n}: TDetailComponent) => {\n    const [status, setStatus] = React.useState('');\n    const [response_error, setError] = React.useState('');\n\n    let is_any_failed = false;\n\n    const uploadFiles = (data: FormikValues) =>\n        new Promise((resolve, reject) => {\n            const docs = document.details.documents.map((item: FormikValues) => item.name);\n            const files = Object.values(data).filter(item => [...docs, SELFIE_DOCUMENT.name].includes(item.name));\n            const files_length = files.length;\n            let file_to_upload_index = 0;\n            const results: object[] = [];\n            const uploadNext = () => {\n                const item = files[file_to_upload_index];\n                const { file, document_type, pageType, lifetime_valid } = item;\n                const expiration_date =\n                    typeof data.expiry_date?.format === 'function' ? data.expiry_date.format('YYYY-MM-DD') : undefined;\n                uploadFile(file, WS.getSocket, {\n                    document_type,\n                    page_type: pageType,\n                    expiration_date,\n                    document_id: data.document_id || '',\n                    lifetime_valid: +(lifetime_valid && !expiration_date),\n                    document_issuing_country: country_code_key,\n                })\n                    .then(response => {\n                        file_to_upload_index += 1;\n                        if (response?.warning === API_ERROR_CODES.DUPLICATE_DOCUMENT) {\n                            setStatus(STATUS.IS_DUPLICATE_UPLOAD);\n                        } else if (response?.warning || response.error) {\n                            is_any_failed = true;\n                            setStatus(STATUS.IS_FAILED);\n                            setError(\n                                response.message || (response.error ? response.error.message : localize('Failed'))\n                            );\n                            if (file_to_upload_index < files_length) {\n                                uploadNext();\n                            }\n                        } else if (file_to_upload_index < files_length) {\n                            results.push(response);\n                            uploadNext();\n                        } else {\n                            resolve(results);\n                        }\n                    })\n                    .catch(error => {\n                        reject(error);\n                    });\n            };\n\n            uploadNext();\n        });\n\n    const onComplete = (values: FormikValues) => {\n        setStatus(STATUS.IS_UPLOADING);\n        uploadFiles(values)\n            .then(() => {\n                if (!is_any_failed) {\n                    if (is_for_mt5) {\n                        handlePOIforMT5Complete?.();\n                    } else {\n                        setStatus(STATUS.IS_COMPLETED);\n                    }\n                }\n            })\n            .catch(error => {\n                setStatus(STATUS.IS_FAILED);\n                setError(error.message);\n            });\n    };\n\n    switch (status) {\n        case STATUS.IS_UPLOADING:\n            return <Loading is_fullscreen={false} is_slow_loading status={[localize('Uploading documents')]} />;\n        case STATUS.IS_COMPLETED:\n            return <UploadComplete is_from_external needs_poa={needs_poa} is_manual_upload />;\n        case STATUS.IS_FAILED:\n            return <POIManualUploadFailed error={response_error} />;\n        case STATUS.IS_DUPLICATE_UPLOAD:\n            return (\n                <POIManualUploadFailed\n                    error={\n                        <Localize i18n_default_text='It seems you’ve submitted this document before. Upload a new document.' />\n                    }\n                >\n                    <Button onClick={onClickBack} large primary className='upload_error_btn'>\n                        <Localize i18n_default_text='Try Again' />\n                    </Button>\n                </POIManualUploadFailed>\n            );\n\n        default:\n            return (\n                <React.Fragment>\n                    {is_onfido_supported ? (\n                        <React.Fragment>\n                            <div className={`${root_class}__detail-header`} onClick={onClickBack}>\n                                <Icon icon='IcArrowLeftBold' />\n                                <Text\n                                    as='p'\n                                    size='xs'\n                                    weight='bold'\n                                    color='prominent'\n                                    className={`${root_class}__back-title`}\n                                >\n                                    {localize('Back')}\n                                </Text>\n                            </div>\n                            <OnfidoUpload\n                                country_code={country_code_key}\n                                documents_supported={[document.onfido_name]}\n                                height={height ?? null}\n                                handleComplete={is_for_mt5 ? handlePOIforMT5Complete : handleComplete}\n                                is_default_enabled\n                                handleViewComplete={is_for_mt5 ? handlePOIforMT5Complete : handleComplete}\n                                {...props}\n                            />\n                        </React.Fragment>\n                    ) : (\n                        <CardDetails\n                            data={document.details}\n                            onComplete={onComplete}\n                            goToCards={onClickBack}\n                            is_from_external={is_from_external}\n                        />\n                    )}\n                </React.Fragment>\n            );\n    }\n};\n\nexport default DetailComponent;\n","import React from 'react';\nimport { Icon, Text } from '@deriv/components';\nimport { useDevice } from '@deriv-com/ui';\n\ntype TCardWithArrow = {\n    onClick: () => void;\n    title: string;\n    description: string;\n    icon: string;\n};\n\nconst CardWithArrow = ({ onClick, title, description, icon }: TCardWithArrow) => {\n    const { isDesktop } = useDevice();\n    return (\n        <div className='manual-poi__card' onClick={onClick}>\n            <Icon className='manual-poi__card-icon' icon={icon} size={64} />\n            <div className='manual-poi__card-content'>\n                <Text as='p' size='xs' weight='bold' color='prominent'>\n                    {title}\n                </Text>\n                <Text as='p' size={isDesktop ? 'xxs' : 'xxxs'}>\n                    {description}\n                </Text>\n            </div>\n\n            <Icon icon='IcChevronRight' size={isDesktop ? 31 : 23} />\n        </div>\n    );\n};\n\nexport { CardWithArrow };\n","import React from 'react';\nimport { Card } from '@deriv/components';\nimport { CardWithArrow } from './card-with-arrow';\nimport { getDocumentIndex } from './constants';\n\ntype TDocument = {\n    toggleDetail: (index: number) => void;\n    documents: ReturnType<typeof getDocumentIndex>;\n};\n\nexport const Documents = ({ toggleDetail, documents }: TDocument) => (\n    <React.Fragment>\n        {documents.map((item, index: number) => (\n            <Card\n                key={item.card?.icon}\n                renderContent={() => <CardWithArrow onClick={() => toggleDetail(index)} {...item.card} />}\n            />\n        ))}\n    </React.Fragment>\n);\n","import React from 'react';\nimport { Button, Text } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport { identity_status_codes } from '../../../../Sections/Verification/ProofOfIdentity/proof-of-identity-utils';\nimport DetailComponent from './detail-component';\nimport { Documents } from './documents';\nimport { getDocumentIndex, DOCUMENT_TYPES } from './constants';\nimport UploadComplete from '../upload-complete';\nimport { FormikValues } from 'formik';\nimport Verified from '../verified';\nimport Limited from '../limited';\nimport Expired from '../expired';\nimport FormFooter from '../../../form-footer';\n\nconst checkNimcStep = (documents: FormikValues) => {\n    let has_nimc = false;\n    documents.forEach((document: FormikValues) => {\n        if (document.document_type === DOCUMENT_TYPES.NIMC_SLIP) {\n            has_nimc = true;\n        }\n    });\n    return has_nimc;\n};\n\ntype TUnsupported = {\n    country_code: string;\n    handlePOIforMT5Complete: () => void;\n    manual: {\n        status: string;\n    };\n    redirect_button: React.ReactElement;\n    needs_poa: boolean;\n    handleBack: () => void;\n    handleRequireSubmission: () => void;\n    handleViewComplete: () => void;\n    allow_poi_resubmission: boolean;\n    onfido: {\n        submissions_left: number;\n    };\n    is_for_mt5?: boolean;\n    is_resubmission?: boolean;\n};\n\nconst Unsupported = ({\n    country_code,\n    handlePOIforMT5Complete,\n    manual,\n    redirect_button,\n    needs_poa,\n    handleBack,\n    handleRequireSubmission,\n    allow_poi_resubmission,\n    handleViewComplete,\n    onfido,\n    is_for_mt5,\n    is_resubmission,\n    ...props\n}: TUnsupported) => {\n    const [detail, setDetail] = React.useState<number | null>(null);\n    const toggleDetail = (index: number) => setDetail(index);\n\n    const documents = getDocumentIndex({\n        country_code,\n    });\n\n    if (manual) {\n        if (manual.status === identity_status_codes.pending)\n            return <UploadComplete is_manual_upload needs_poa={needs_poa} redirect_button={redirect_button} />;\n        else if (\n            [identity_status_codes.rejected, identity_status_codes.suspected].some(status => status === manual.status)\n        ) {\n            if (!allow_poi_resubmission) return <Limited />;\n        } else if (manual.status === identity_status_codes.verified) {\n            return <Verified needs_poa={needs_poa} redirect_button={redirect_button} />;\n        } else if (manual.status === identity_status_codes.expired) {\n            return <Expired redirect_button={redirect_button} handleRequireSubmission={handleRequireSubmission} />;\n        }\n    }\n\n    if (detail !== null) {\n        const is_onfido_supported =\n            country_code === 'ng' &&\n            !checkNimcStep(documents[detail ?? 0].details.documents) &&\n            onfido &&\n            onfido.submissions_left > 0;\n        return (\n            <DetailComponent\n                is_onfido_supported={is_onfido_supported}\n                country_code_key={country_code}\n                document={documents[detail]}\n                root_class='manual-poi'\n                onClickBack={() => setDetail(null)}\n                handlePOIforMT5Complete={handlePOIforMT5Complete}\n                handleComplete={handleViewComplete}\n                is_for_mt5={is_for_mt5}\n                needs_poa={needs_poa}\n                {...props}\n            />\n        );\n    }\n\n    return (\n        <div className='manual-poi'>\n            <Text as='h2' color='prominent' size='xs' className='manual-poi__title'>\n                <Localize i18n_default_text='Please upload one of the following documents:' />\n            </Text>\n            <Documents documents={documents} toggleDetail={toggleDetail} />\n            {!is_for_mt5 && !is_resubmission && (\n                <FormFooter className='proof-of-identity__footer'>\n                    <Button className='back-btn' onClick={handleBack} type='button' has_effect large secondary>\n                        <Localize i18n_default_text='Back' />\n                    </Button>\n                </FormFooter>\n            )}\n        </div>\n    );\n};\nexport default Unsupported;\n","import Unsupported from './unsupported';\nimport './unsupported.scss';\n\nexport default Unsupported;\n","import React from 'react';\nimport { formatOnfidoError } from '@deriv/shared';\nimport UploadComplete from '../../../Components/poi/status/upload-complete';\nimport Verified from '../../../Components/poi/status/verified';\nimport RejectedReasons from '../../../Components/poi/status/rejected-reasons';\nimport Unsupported from '../../../Components/poi/status/unsupported';\nimport { identity_status_codes, service_code } from './proof-of-identity-utils';\n\nconst Onfido = ({\n    handleRequireSubmission,\n    is_from_external,\n    needs_poa,\n    onfido,\n    redirect_button,\n    manual,\n    country_code,\n    handleViewComplete,\n}) => {\n    const { status, submissions_left, last_rejected: rejected_reasons } = onfido;\n\n    switch (status) {\n        case identity_status_codes.pending:\n            return (\n                <UploadComplete\n                    is_from_external={is_from_external}\n                    needs_poa={needs_poa}\n                    redirect_button={redirect_button}\n                />\n            );\n        case identity_status_codes.rejected:\n        case identity_status_codes.suspected:\n        case identity_status_codes.expired: {\n            const submission_errors = formatOnfidoError(status, rejected_reasons);\n            if (Number(submissions_left) < 1) {\n                return (\n                    <Unsupported\n                        manual={manual}\n                        is_from_external={is_from_external}\n                        country_code={country_code}\n                        handleViewComplete={handleViewComplete}\n                        onfido={onfido}\n                    />\n                );\n            }\n            return (\n                <RejectedReasons\n                    rejected_reasons={submission_errors}\n                    handleRequireSubmission={handleRequireSubmission}\n                />\n            );\n        }\n        case identity_status_codes.verified:\n            return (\n                <Verified\n                    is_from_external={is_from_external}\n                    needs_poa={needs_poa}\n                    redirect_button={redirect_button}\n                    service={service_code.onfido}\n                />\n            );\n        default:\n            return null;\n    }\n};\n\nexport default Onfido;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { Formik, Field, FormikErrors, FormikValues, FormikHelpers } from 'formik';\nimport { Autocomplete, Button, HintBox, Text, SelectNative } from '@deriv/components';\nimport { IDV_ERROR_STATUS, TIDVErrorStatus, POIContext } from '@deriv/shared';\nimport { Localize, localize } from '@deriv/translations';\nimport FormFooter from '../../form-footer';\nimport { useDevice } from '@deriv-com/ui';\nimport { useResidenceList } from '@deriv/api';\n\ntype TCountrySelector = {\n    handleSelectionNext?: () => void;\n    is_from_external: boolean;\n    mismatch_status?: TIDVErrorStatus;\n};\n\nconst CountrySelector = ({ handleSelectionNext, is_from_external, mismatch_status }: TCountrySelector) => {\n    const { setSelectedCountry } = React.useContext(POIContext);\n    const { data: country_list, isLoading } = useResidenceList();\n\n    const initial_form_values: FormikValues = {\n        country_input: '',\n    };\n\n    const validateFields = (values: FormikValues) => {\n        const errors: FormikErrors<FormikValues> = {};\n        const { country_input } = values;\n\n        if (!country_input) {\n            errors.country_input = localize('Please select the country of document issuance.');\n        } else if (!country_list.find((c: FormikValues) => c.text === country_input)) {\n            errors.country_input = localize('Please select a valid country of document issuance.');\n        }\n\n        return errors;\n    };\n    const { isDesktop } = useDevice();\n\n    const updateSelectedCountry = (country_name: string) => {\n        const matching_country = country_list?.find((c: FormikValues) => c.text === country_name);\n        if (matching_country) {\n            setSelectedCountry?.(matching_country);\n        }\n    };\n\n    const submitHandler = (values: FormikValues, { setSubmitting }: FormikHelpers<FormikValues>) => {\n        updateSelectedCountry(values.country_input);\n        setSubmitting(false);\n        handleSelectionNext?.();\n    };\n\n    const failed_message: React.ReactNode = mismatch_status ? IDV_ERROR_STATUS[mismatch_status]?.message ?? null : null;\n\n    return (\n        <Formik initialValues={initial_form_values} validate={validateFields} onSubmit={submitHandler}>\n            {({\n                dirty,\n                errors,\n                handleBlur,\n                handleChange,\n                handleSubmit,\n                isSubmitting,\n                isValid,\n                setFieldValue,\n                touched,\n                values,\n            }) => (\n                <React.Fragment>\n                    <div\n                        className={clsx('proof-of-identity__container proof-of-identity__country-container', {\n                            'min-height': !is_from_external,\n                        })}\n                    >\n                        {failed_message ? (\n                            <React.Fragment>\n                                <Text align='center' weight='bold' size={isDesktop ? 's' : 'xs'}>\n                                    <Localize i18n_default_text='Your identity verification failed because:' />\n                                </Text>\n                                <HintBox\n                                    className={clsx('proof-of-identity__failed-message', 'hint-box-layout')}\n                                    icon='IcAlertDanger'\n                                    message={\n                                        <Text as='p' size={isDesktop ? 'xs' : 'xxs'}>\n                                            {failed_message}\n                                        </Text>\n                                    }\n                                    is_danger\n                                />\n                            </React.Fragment>\n                        ) : (\n                            <Text className='proof-of-identity__header' align='center' weight='bold'>\n                                <Localize i18n_default_text='Proof of identity' />\n                            </Text>\n                        )}\n\n                        <Text className='proof-of-identity__country-text ' size='xs'>\n                            <Localize i18n_default_text='In which country was your document issued?' />\n                        </Text>\n                        <fieldset className='proof-of-identity__fieldset'>\n                            <Field name='country_input'>\n                                {({ field }: FormikValues) => (\n                                    <React.Fragment>\n                                        {isDesktop ? (\n                                            <Autocomplete\n                                                className={clsx({ 'external-dropdown': is_from_external })}\n                                                {...field}\n                                                data_testid='dt_external_dropdown'\n                                                name='country_input'\n                                                data-lpignore='true'\n                                                error={touched.country_input && errors.country_input}\n                                                autoComplete='off'\n                                                type='text'\n                                                label={localize('Country')}\n                                                list_items={country_list}\n                                                value={values.country_input}\n                                                onBlur={(e: FormikValues) => {\n                                                    handleBlur(e);\n                                                    const current_input = e.target.value;\n                                                    if (\n                                                        !country_list.find(\n                                                            (c: FormikValues) => c.text === current_input\n                                                        )\n                                                    ) {\n                                                        setFieldValue('country_input', '', true);\n                                                        updateSelectedCountry('');\n                                                    }\n                                                }}\n                                                onChange={handleChange}\n                                                onItemSelection={({ text }: FormikValues) => {\n                                                    const select_value =\n                                                        text === 'No results found' || !text ? '' : text;\n                                                    setFieldValue('country_input', select_value, true);\n                                                    updateSelectedCountry(text);\n                                                }}\n                                                required\n                                            />\n                                        ) : (\n                                            <div className='proof-of-identity__dropdown-container'>\n                                                <SelectNative\n                                                    {...field}\n                                                    name='country_input'\n                                                    error={touched.country_input && errors.country_input}\n                                                    label={localize('Country')}\n                                                    placeholder={localize('Please select')}\n                                                    list_items={country_list}\n                                                    value={values.country_input}\n                                                    onChange={(e: React.ChangeEvent<HTMLSelectElement>) => {\n                                                        handleChange(e);\n                                                        updateSelectedCountry(e.target.value);\n                                                    }}\n                                                    use_text={true}\n                                                    required\n                                                />\n                                            </div>\n                                        )}\n                                    </React.Fragment>\n                                )}\n                            </Field>\n                        </fieldset>\n                    </div>\n                    <FormFooter className={clsx('proof-of-identity__footer', { 'external-footer': is_from_external })}>\n                        <Button\n                            className='proof-of-identity__submit-button'\n                            type='submit'\n                            onClick={() => handleSubmit()}\n                            has_effect\n                            is_disabled={!dirty || isSubmitting || !isValid || isLoading}\n                            is_loading={false}\n                            text={localize('Next')}\n                            large\n                            primary\n                        />\n                    </FormFooter>\n                </React.Fragment>\n            )}\n        </Formik>\n    );\n};\n\nexport default CountrySelector;\n","import PoiCountrySelector from './poi-country-selector';\n\nexport default PoiCountrySelector;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { Form, Formik, FormikErrors, FormikHelpers } from 'formik';\nimport { Button, HintBox, Text } from '@deriv/components';\nimport { Localize, localize } from '@deriv/translations';\nimport {\n    filterObjProperties,\n    formatIDVFormValues,\n    getIDVNotApplicableOption,\n    removeEmptyPropertiesFromObject,\n    toMoment,\n    WS,\n} from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { useDevice } from '@deriv-com/ui';\nimport {\n    isAdditionalDocumentValid,\n    isDocumentNumberValid,\n    isDocumentTypeValid,\n    makeSettingsRequest,\n    shouldHideHelperImage,\n    validate,\n    validateName,\n} from '../../../Helpers/utils';\nimport { DerivLightNameDobPoiIcon } from '@deriv/quill-icons';\nimport IDVForm from '../../forms/idv-form';\nimport PersonalDetailsForm from '../../forms/personal-details-form';\nimport FormBody from '../../form-body';\nimport FormFooter from '../../form-footer';\nimport FormSubHeader from '../../form-sub-header';\nimport { ResidenceList } from '@deriv/api-types';\nimport {\n    CLAIMED_DOCUMENT_ERROR_MESSAGE,\n    DUPLICATE_ACCOUNT_ERROR_MESSAGE,\n    GENERIC_ERROR_MESSAGE,\n} from '../../../Configs/poi-error-config';\nimport { TIDVFormValues, TConfirmPersonalDetailsForm } from 'Types';\nimport { API_ERROR_CODES } from '../../../Constants/api-error-codes';\n\ntype TIDVDocumentSubmitProps = {\n    handleBack: React.MouseEventHandler;\n    handleViewComplete: () => void;\n    selected_country: ResidenceList[0];\n    getChangeableFields: () => Array<string>;\n    handleSelectionNext?: (should_show_manual: boolean) => void;\n};\n\nexport type TIdvDocumentSubmitForm = TIDVFormValues & TConfirmPersonalDetailsForm;\n\nconst IdvDocumentSubmit = observer(\n    ({ handleBack, handleViewComplete, handleSelectionNext, selected_country }: TIDVDocumentSubmitProps) => {\n        const { client } = useStore();\n        const { account_settings, getChangeableFields } = client;\n        const { isDesktop } = useDevice();\n\n        const IDV_NOT_APPLICABLE_OPTION = React.useMemo(() => getIDVNotApplicableOption(), []);\n        const shouldSkipIdv = (document_id?: string) => document_id === IDV_NOT_APPLICABLE_OPTION.id;\n        const visible_settings = ['first_name', 'last_name', 'date_of_birth'];\n        const side_note_image = <DerivLightNameDobPoiIcon height='195px' width='285px' />;\n\n        const form_initial_values = filterObjProperties(account_settings, visible_settings) as {\n            [Property in keyof TConfirmPersonalDetailsForm]: string;\n        };\n\n        if (form_initial_values.date_of_birth) {\n            form_initial_values.date_of_birth = toMoment(form_initial_values.date_of_birth).format('YYYY-MM-DD');\n        }\n\n        const changeable_fields = getChangeableFields();\n\n        const initial_values: TIdvDocumentSubmitForm = {\n            document_type: {\n                id: '',\n                text: '',\n                value: '',\n                example_format: '',\n            },\n            document_number: '',\n            ...form_initial_values,\n            confirmation_checkbox: false,\n        };\n\n        const validateFields = (values: TIdvDocumentSubmitForm) => {\n            const errors: FormikErrors<Record<keyof TIdvDocumentSubmitForm, string>> = {};\n            const { document_type, document_number, document_additional } = values;\n\n            if (shouldSkipIdv(document_type.id)) {\n                return errors;\n            }\n\n            const needs_additional_document = !!document_type.additional;\n\n            errors.document_type = isDocumentTypeValid(document_type);\n            if (!shouldHideHelperImage(document_type?.id)) {\n                if (needs_additional_document) {\n                    errors.document_additional = isAdditionalDocumentValid(document_type, document_additional);\n                }\n                errors.document_number = isDocumentNumberValid(document_number, document_type);\n            }\n            const required_fields = ['first_name', 'last_name', 'date_of_birth'];\n            const validateValues = validate(errors, values);\n            validateValues(val => val, required_fields, localize('This field is required'));\n\n            if (values.first_name) {\n                errors.first_name = validateName(values.first_name);\n            }\n            if (values.last_name) {\n                errors.last_name = validateName(values.last_name);\n            }\n\n            if (!values.confirmation_checkbox) {\n                errors.confirmation_checkbox = 'error';\n            }\n\n            return removeEmptyPropertiesFromObject(errors);\n        };\n\n        const submitHandler = async (\n            values: TIdvDocumentSubmitForm,\n            { setSubmitting, setStatus }: FormikHelpers<TIdvDocumentSubmitForm>\n        ) => {\n            if (shouldSkipIdv(values?.document_type?.id)) {\n                handleSelectionNext?.(true);\n                return;\n            }\n\n            setSubmitting(true);\n\n            const request = makeSettingsRequest(values, changeable_fields);\n\n            const data = await WS.setSettings(request);\n\n            if (data?.error) {\n                const response_error =\n                    data.error?.code === API_ERROR_CODES.DUPLICATE_ACCOUNT\n                        ? DUPLICATE_ACCOUNT_ERROR_MESSAGE\n                        : GENERIC_ERROR_MESSAGE;\n                setStatus({ error_message: response_error });\n                setSubmitting(false);\n                return;\n            }\n            const get_settings = await WS.authorized.storage.getSettings();\n            if (get_settings?.error) {\n                setStatus({ error_message: get_settings?.error?.message ?? GENERIC_ERROR_MESSAGE });\n                setSubmitting(false);\n                return;\n            }\n\n            const submit_data = {\n                identity_verification_document_add: 1,\n                ...formatIDVFormValues(values, selected_country.value as string),\n            };\n\n            const idv_update_response = await WS.send(submit_data);\n\n            if (idv_update_response?.error) {\n                const response_error =\n                    idv_update_response.error?.code === API_ERROR_CODES.CLAIMED_DOCUMENT\n                        ? CLAIMED_DOCUMENT_ERROR_MESSAGE\n                        : idv_update_response.error?.message ?? GENERIC_ERROR_MESSAGE;\n                setStatus({ error_message: response_error });\n                setSubmitting(false);\n                return;\n            }\n            setSubmitting(false);\n            handleViewComplete();\n        };\n\n        return (\n            <Formik\n                initialValues={{ ...initial_values }}\n                validate={validateFields}\n                onSubmit={submitHandler}\n                enableReinitialize\n            >\n                {({ dirty, isSubmitting, isValid, values, status }) => {\n                    const should_skip_idv = shouldSkipIdv(values?.document_type?.id);\n                    const is_button_disabled = should_skip_idv ? false : !dirty || isSubmitting || !isValid;\n                    const getButtonText = () =>\n                        should_skip_idv ? (\n                            <Localize i18n_default_text='Next' />\n                        ) : (\n                            <Localize i18n_default_text='Verify' />\n                        );\n                    return (\n                        <Form\n                            className={clsx('proof-of-identity__container proof-of-identity__container--reset', {\n                                'min-height': shouldSkipIdv(values?.document_type?.id),\n                            })}\n                        >\n                            {status?.error_message && (\n                                <div className='account-form__poi-confirm-example--generic-error-msg'>\n                                    <HintBox\n                                        icon='IcAlertDanger'\n                                        message={\n                                            <Text as='p' size='xxxs'>\n                                                {status.error_message}\n                                            </Text>\n                                        }\n                                        is_danger\n                                        className='hint-box-layout'\n                                    />\n                                </div>\n                            )}\n                            <FormBody className='form-body' scroll_offset={isDesktop ? '80px' : '180px'}>\n                                <FormSubHeader title={localize('Identity verification')} />\n                                <IDVForm selected_country={selected_country} class_name='idv-layout' />\n                                {!shouldSkipIdv(values?.document_type?.id) && (\n                                    <React.Fragment>\n                                        <FormSubHeader title={localize('Details')} />\n                                        <PersonalDetailsForm\n                                            class_name='account-form__poi-confirm-example_container'\n                                            is_rendered_for_idv\n                                            editable_fields={values.confirmation_checkbox ? [] : changeable_fields}\n                                            side_note={side_note_image}\n                                            inline_note_text={\n                                                <Localize\n                                                    i18n_default_text='To avoid delays, enter your <0>name</0> and <0>date of birth</0> exactly as they appear on your identity document.'\n                                                    components={[<strong key={0} />]}\n                                                />\n                                            }\n                                        />\n                                    </React.Fragment>\n                                )}\n                            </FormBody>\n                            <FormFooter className='proof-of-identity__footer '>\n                                {isDesktop && (\n                                    <Button\n                                        className='back-btn'\n                                        onClick={handleBack}\n                                        type='button'\n                                        has_effect\n                                        large\n                                        secondary\n                                    >\n                                        <Localize i18n_default_text='Back' />\n                                    </Button>\n                                )}\n                                <Button\n                                    className='proof-of-identity__submit-button'\n                                    type='submit'\n                                    has_effect\n                                    is_disabled={is_button_disabled}\n                                    large\n                                    primary\n                                >\n                                    {getButtonText()}\n                                </Button>\n                            </FormFooter>\n                        </Form>\n                    );\n                }}\n            </Formik>\n        );\n    }\n);\n\nexport default IdvDocumentSubmit;\n","import IdvDocumentSubmit from './idv-document-submit';\n\nexport default IdvDocumentSubmit;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { Form, Formik, FormikHelpers, FormikValues } from 'formik';\nimport { GetAccountStatus, GetSettings, ResidenceList } from '@deriv/api-types';\nimport { Button, HintBox, Loading, Text } from '@deriv/components';\nimport {\n    filterObjProperties,\n    getIDVNotApplicableOption,\n    IDV_ERROR_STATUS,\n    isEmptyObject,\n    removeEmptyPropertiesFromObject,\n    TIDVErrorStatus,\n    toMoment,\n    WS,\n} from '@deriv/shared';\nimport { useStore } from '@deriv/stores';\nimport { Localize, localize } from '@deriv/translations';\nimport { DerivLightNameDobPoiIcon } from '@deriv/quill-icons';\nimport FormBody from '../../../form-body';\nimport IDVForm from '../../../forms/idv-form';\nimport FormFooter from '../../../form-footer';\nimport FormSubHeader from '../../../form-sub-header';\nimport PersonalDetailsForm from '../../../forms/personal-details-form.jsx';\nimport {\n    isAdditionalDocumentValid,\n    isDocumentNumberValid,\n    isDocumentTypeValid,\n    makeSettingsRequest,\n    shouldHideHelperImage,\n    validate,\n    validateName,\n} from '../../../../Helpers/utils';\nimport {\n    GENERIC_ERROR_MESSAGE,\n    DUPLICATE_ACCOUNT_ERROR_MESSAGE,\n    CLAIMED_DOCUMENT_ERROR_MESSAGE,\n    generateIDVError,\n} from '../../../../Configs/poi-error-config';\nimport { API_ERROR_CODES } from '../../../../Constants/api-error-codes';\nimport { TIDVFormValues, TConfirmPersonalDetailsForm } from '../../../../Types';\nimport LoadErrorMessage from '../../../load-error-message';\nimport { TIdvDocumentSubmitForm } from '../../idv-document-submit/idv-document-submit';\nimport { useDevice } from '@deriv-com/ui';\n\ntype TRestState = {\n    api_error: string;\n    errors?: boolean;\n    form_initial_values: TIdvFailedForm;\n    changeable_fields: string[];\n};\n\ntype TIdvFailed = {\n    account_settings: GetSettings;\n    getChangeableFields: () => string[];\n    handleSubmit: () => void;\n    is_from_external: boolean;\n    mismatch_status: TIDVErrorStatus;\n    residence_list: ResidenceList;\n    latest_status: DeepRequired<GetAccountStatus>['authentication']['attempts']['latest'];\n    selected_country?: ResidenceList[0];\n    handleSelectionNext?: (should_show_manual: boolean) => void;\n};\n\ntype TIDVFailureConfig = {\n    required_fields: string[];\n    side_note_image: JSX.Element;\n    failure_message: React.ReactNode;\n    inline_note_text: React.ReactNode;\n};\n\ntype TIdvFailedForm = Partial<TIDVFormValues> & Partial<TConfirmPersonalDetailsForm>;\n\nconst IdvFailed = ({\n    getChangeableFields,\n    is_from_external,\n    residence_list,\n    account_settings,\n    handleSubmit,\n    mismatch_status = IDV_ERROR_STATUS.Failed.code,\n    latest_status,\n    selected_country,\n    handleSelectionNext,\n}: TIdvFailed) => {\n    const { client } = useStore();\n    const { setIsAlreadyAttempted } = client;\n    const { isMobile, isDesktop } = useDevice();\n\n    const [idv_failure, setIdvFailure] = React.useState<TIDVFailureConfig>({\n        required_fields: [],\n        side_note_image: <DerivLightNameDobPoiIcon height='195px' width='285px' />,\n        failure_message: null,\n        inline_note_text: null,\n    });\n    const [is_loading, setIsLoading] = React.useState(true);\n    const [rest_state, setRestState] = React.useState<TRestState>({\n        api_error: '',\n        errors: false,\n        form_initial_values: {},\n        changeable_fields: [],\n    });\n\n    // Document upload not required for the below error codes\n    const is_document_upload_required = React.useMemo(\n        () =>\n            ![\n                IDV_ERROR_STATUS.DobMismatch.code,\n                IDV_ERROR_STATUS.NameMismatch.code,\n                IDV_ERROR_STATUS.NameDobMismatch.code,\n            ].includes(mismatch_status),\n        [mismatch_status]\n    );\n\n    /**\n     * If user needs to resubmit IDV document, the country should be the new selected country\n     * If user needs to update Personal info, the country should be the country of the latest status\n     */\n    const chosen_country = React.useMemo(\n        () =>\n            is_document_upload_required && !is_from_external\n                ? selected_country ?? {}\n                : residence_list.find(residence_data => residence_data.value === latest_status?.country_code) ?? {},\n        [selected_country, is_document_upload_required, latest_status?.country_code, residence_list, is_from_external]\n    );\n\n    const IDV_NOT_APPLICABLE_OPTION = React.useMemo(() => getIDVNotApplicableOption(), []);\n    const shouldSkipIdv = (document_id?: string) => document_id === IDV_NOT_APPLICABLE_OPTION.id;\n\n    React.useEffect(() => {\n        const initializeFormValues = async (required_fields: string[]) => {\n            await WS?.wait('get_settings');\n            const form_data = filterObjProperties(account_settings, required_fields);\n            if (form_data.date_of_birth) {\n                form_data.date_of_birth = toMoment(form_data.date_of_birth).format('YYYY-MM-DD');\n            }\n            // Remove the checkbox value as it is used only for moving cursor to the error field\n            form_data.confirmation_checkbox = false;\n            let initial_form_values = form_data;\n            if (is_document_upload_required) {\n                initial_form_values = {\n                    document_type: {\n                        id: '',\n                        text: '',\n                        value: '',\n                        example_format: '',\n                        sample_image: '',\n                    },\n                    document_number: '',\n                    ...initial_form_values,\n                };\n            }\n            setRestState({\n                form_initial_values: { ...initial_form_values },\n                changeable_fields: [...getChangeableFields()],\n                api_error: '',\n            });\n            setIsLoading(false);\n        };\n\n        setIsAlreadyAttempted(true);\n\n        const error_config = generateIDVError(\n            is_document_upload_required,\n            latest_status,\n            chosen_country,\n            mismatch_status\n        );\n        setIdvFailure(error_config);\n        initializeFormValues(error_config?.required_fields ?? []).catch(e => {\n            setRestState({\n                form_initial_values: {},\n                changeable_fields: [],\n                api_error: e?.error?.message,\n            });\n        });\n    }, [\n        mismatch_status,\n        account_settings,\n        is_document_upload_required,\n        getChangeableFields,\n        generateIDVError,\n        setIsAlreadyAttempted,\n    ]);\n\n    const onSubmit = async (values: TIdvFailedForm, { setStatus, setSubmitting }: FormikHelpers<TIdvFailedForm>) => {\n        if (shouldSkipIdv(values?.document_type?.id)) {\n            handleSelectionNext?.(true);\n            return;\n        }\n\n        delete values.confirmation_checkbox;\n        setSubmitting(true);\n        setStatus({ error_msg: null });\n        const { document_number, document_type } = values;\n        const request = makeSettingsRequest(\n            values,\n            rest_state?.changeable_fields ? [...rest_state.changeable_fields] : []\n        );\n        const data = await WS.setSettings(request);\n\n        if (data.error) {\n            const response_error =\n                data.error?.code === API_ERROR_CODES.DUPLICATE_ACCOUNT\n                    ? DUPLICATE_ACCOUNT_ERROR_MESSAGE\n                    : GENERIC_ERROR_MESSAGE;\n            setStatus({ error_msg: response_error });\n            setSubmitting(false);\n        } else {\n            const response = await WS.authorized.storage.getSettings();\n            if (response.error) {\n                setRestState(prev_state => ({ ...prev_state, api_error: response.error.message }));\n                setSubmitting(false);\n                return;\n            }\n            const submit_data = {\n                identity_verification_document_add: 1,\n                document_number,\n                document_type: document_type?.id,\n                issuing_country: chosen_country.value,\n            };\n\n            if (!submit_data.document_type || shouldSkipIdv(submit_data.document_type)) {\n                setSubmitting(false);\n                handleSubmit();\n                return;\n            }\n            const idv_update_response = await WS.send(submit_data);\n            if (idv_update_response?.error) {\n                const response_error =\n                    idv_update_response.error?.code === API_ERROR_CODES.CLAIMED_DOCUMENT\n                        ? CLAIMED_DOCUMENT_ERROR_MESSAGE\n                        : idv_update_response?.error?.message ?? GENERIC_ERROR_MESSAGE;\n                setStatus({ error_msg: response_error });\n                setSubmitting(false);\n                return;\n            }\n            setSubmitting(false);\n            handleSubmit();\n        }\n    };\n\n    const validateFields = (values: TIdvFailedForm) => {\n        const errors: Record<string, unknown> = {};\n        if (is_document_upload_required) {\n            const { document_type, document_number, document_additional } = values;\n\n            if (shouldSkipIdv(document_type?.id)) {\n                return errors;\n            }\n\n            const needs_additional_document = !!document_type?.additional;\n            errors.document_type = isDocumentTypeValid(document_type as FormikValues);\n            if (!shouldHideHelperImage(document_type?.id as string)) {\n                if (needs_additional_document) {\n                    errors.document_additional = isAdditionalDocumentValid(document_type, document_additional);\n                }\n                errors.document_number = isDocumentNumberValid(document_number ?? '', document_type as FormikValues);\n            }\n        }\n\n        const validateValues = validate(errors as Record<string, string>, values);\n\n        validateValues(val => val, idv_failure?.required_fields ?? [], localize('This field is required'));\n\n        if (values.first_name) {\n            errors.first_name = validateName(values.first_name);\n        }\n        if (values.last_name) {\n            errors.last_name = validateName(values.last_name);\n        }\n\n        if (!values.confirmation_checkbox) {\n            errors.confirmation_checkbox = 'error';\n        }\n\n        setRestState(prev_state => ({\n            ...prev_state,\n            errors: !isEmptyObject(removeEmptyPropertiesFromObject(errors)),\n        }));\n\n        return removeEmptyPropertiesFromObject(errors);\n    };\n\n    if (rest_state?.api_error) return <LoadErrorMessage error_message={rest_state.api_error} />;\n\n    if (is_loading && Object.keys(rest_state?.form_initial_values ?? {}).length === 0) {\n        return <Loading is_fullscreen={false} className='account__initial-loader' />;\n    }\n\n    const setScrollOffset = () => {\n        if (!isDesktop) {\n            if (is_from_external) {\n                return '140px';\n            }\n            return '180px';\n        }\n        return '80px';\n    };\n\n    const buttonText = (is_idv_skipping: boolean) => {\n        if (is_idv_skipping) return localize('Next');\n        if (is_document_upload_required) return localize('Verify');\n        return localize('Update profile');\n    };\n\n    return (\n        <Formik\n            initialValues={rest_state?.form_initial_values ?? {}}\n            onSubmit={onSubmit}\n            validate={validateFields}\n            className='proof-of-identity__container'\n        >\n            {({ isSubmitting, isValid, dirty, status, values }) => (\n                <Form\n                    className={clsx('proof-of-identity__mismatch-container', {\n                        'upload-layout': is_document_upload_required,\n                        'min-height': shouldSkipIdv(values?.document_type?.id),\n                    })}\n                >\n                    <FormBody className='form-body' scroll_offset={setScrollOffset()}>\n                        <Text size={isMobile ? 'xs' : 's'} weight='bold' align='center'>\n                            <Localize i18n_default_text='Your identity verification failed because:' />\n                        </Text>\n                        {(status?.error_msg || idv_failure?.failure_message) && (\n                            <HintBox\n                                className={clsx('proof-of-identity__failed-message', 'hint-box-layout')}\n                                icon='IcAlertDanger'\n                                message={\n                                    <Text as='p' size={isMobile ? 'xxs' : 'xs'} data-testid={mismatch_status}>\n                                        {status?.error_msg ?? idv_failure?.failure_message}\n                                    </Text>\n                                }\n                                is_danger\n                            />\n                        )}\n                        {is_document_upload_required && (\n                            <div>\n                                <Text size='xs' align={isMobile ? 'left' : 'center'}>\n                                    <Localize i18n_default_text='Let’s try again. Choose another document and enter the corresponding details.' />\n                                </Text>\n                                <FormSubHeader title={localize('Identity verification')} />\n                                <IDVForm selected_country={chosen_country} class_name='idv-layout idv-resubmit' />\n                                {!shouldSkipIdv(values?.document_type?.id) && (\n                                    <FormSubHeader title={localize('Details')} />\n                                )}\n                            </div>\n                        )}\n                        {!shouldSkipIdv(values?.document_type?.id) && (\n                            <PersonalDetailsForm\n                                class_name='account-form__poi-confirm-example_container'\n                                editable_fields={values.confirmation_checkbox ? [] : rest_state?.changeable_fields}\n                                is_rendered_for_idv\n                                side_note={idv_failure?.side_note_image}\n                                inline_note_text={idv_failure?.inline_note_text}\n                                mismatch_status={mismatch_status}\n                            />\n                        )}\n                    </FormBody>\n                    <FormFooter className='proof-of-identity__footer'>\n                        <Button\n                            className='proof-of-identity__submit-button'\n                            type='submit'\n                            has_effect\n                            is_disabled={!dirty || isSubmitting || !isValid}\n                            text={buttonText(shouldSkipIdv(values?.document_type?.id))}\n                            large\n                            primary\n                        />\n                    </FormFooter>\n                </Form>\n            )}\n        </Formik>\n    );\n};\n\nexport default IdvFailed;\n","import IdvRejected from './idv-failed';\n\nexport default IdvRejected;\n","import React from 'react';\nimport { formatIDVError, WS, IDV_ERROR_STATUS, POIContext, isIDVReportNotAvailable } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport CountrySelector from '../../../Components/poi/poi-country-selector';\nimport IdvDocumentSubmit from '../../../Components/poi/idv-document-submit';\nimport IdvFailed from '../../../Components/poi/idv-status/idv-failed';\nimport IdvSubmitComplete from '../../../Components/poi/idv-status/idv-submit-complete';\nimport Unsupported from '../../../Components/poi/status/unsupported';\nimport UploadComplete from '../../../Components/poi/status/upload-complete';\nimport OnfidoSdkViewContainer from './onfido-sdk-view-container';\nimport { identity_status_codes, submission_status_code, service_code } from './proof-of-identity-utils';\n\nconst POISubmission = observer(\n    ({\n        allow_poi_resubmission,\n        has_require_submission,\n        height,\n        identity_last_attempt,\n        idv,\n        is_from_external,\n        is_idv_disallowed,\n        needs_poa,\n        onfido,\n        onStateChange,\n        redirect_button,\n        residence_list,\n        should_show_mismatch_form,\n    }) => {\n        const {\n            submission_service,\n            setSubmissionService,\n            submission_status,\n            setSubmissionStatus,\n            selected_country,\n            setSelectedCountry,\n        } = React.useContext(POIContext);\n\n        const { client, notifications } = useStore();\n\n        const { account_settings, getChangeableFields, account_status } = client;\n        const { refreshNotifications } = notifications;\n        const is_high_risk = account_status.risk_classification === 'high';\n\n        const handleSelectionNext = (should_show_manual = false) => {\n            if (Object.keys(selected_country).length) {\n                const { submissions_left: idv_submissions_left } = idv;\n                const { submissions_left: onfido_submissions_left } = onfido;\n                const is_idv_supported = selected_country.identity.services.idv.is_country_supported;\n                const is_onfido_supported =\n                    selected_country.identity.services.onfido.is_country_supported && selected_country.value !== 'ng';\n\n                if (!should_show_manual && is_idv_supported && Number(idv_submissions_left) > 0 && !is_idv_disallowed) {\n                    setSubmissionService(service_code.idv);\n                } else if (!should_show_manual && Number(onfido_submissions_left) > 0 && is_onfido_supported) {\n                    setSubmissionService(service_code.onfido);\n                } else {\n                    setSubmissionService(service_code.manual);\n                }\n                setSubmissionStatus(submission_status_code.submitting);\n            }\n        };\n\n        const handleViewComplete = () => {\n            if (onStateChange && typeof onStateChange === 'function') {\n                onStateChange(identity_status_codes.pending);\n            }\n            setSubmissionStatus(submission_status_code.complete);\n\n            WS.authorized.getAccountStatus().then(() => {\n                refreshNotifications();\n            });\n        };\n\n        const handleBack = () => setSubmissionStatus(submission_status_code.selecting);\n\n        const getCountryFromResidence = React.useCallback(\n            country_code => residence_list.find(residence => residence.value === country_code),\n            [residence_list]\n        );\n\n        const needs_resubmission = has_require_submission || allow_poi_resubmission;\n        const is_report_not_available = isIDVReportNotAvailable(idv);\n        const mismatch_status = formatIDVError(idv.last_rejected, idv.status, is_high_risk, is_report_not_available);\n\n        const setIdentityService = React.useCallback(\n            identity_last_attempt => {\n                const { service, country_code } = identity_last_attempt;\n                setSelectedCountry(getCountryFromResidence(country_code));\n                switch (service) {\n                    case service_code.idv:\n                    case service_code.onfido: {\n                        if (Number(idv.submissions_left) > 0 || Number(onfido.submissions_left) > 0) {\n                            setSubmissionStatus(submission_status_code.selecting);\n                        } else {\n                            setSubmissionService(service_code.manual);\n                            setSubmissionStatus(submission_status_code.submitting);\n                        }\n                        break;\n                    }\n                    case service_code.manual: {\n                        setSubmissionService(service_code.manual);\n                        setSubmissionStatus(submission_status_code.submitting);\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            },\n            [\n                getCountryFromResidence,\n                idv.submissions_left,\n                onfido.submissions_left,\n                setSelectedCountry,\n                setSubmissionService,\n                setSubmissionStatus,\n                is_idv_disallowed,\n            ]\n        );\n\n        React.useEffect(() => {\n            if (submission_status != submission_status_code.selecting) {\n                return;\n            }\n            if (needs_resubmission && identity_last_attempt) {\n                setIdentityService(identity_last_attempt);\n            } else if (\n                mismatch_status &&\n                [\n                    IDV_ERROR_STATUS.DobMismatch.code,\n                    IDV_ERROR_STATUS.NameMismatch.code,\n                    IDV_ERROR_STATUS.NameDobMismatch.code,\n                ].includes(mismatch_status) &&\n                idv.submissions_left > 0\n            ) {\n                setSubmissionService(service_code.idv);\n                setSubmissionStatus(submission_status_code.submitting);\n            } else {\n                setSubmissionStatus(submission_status_code.selecting);\n            }\n        }, [\n            allow_poi_resubmission,\n            identity_last_attempt,\n            needs_resubmission,\n            setIdentityService,\n            submission_status,\n            idv,\n            mismatch_status,\n            setSubmissionService,\n            setSubmissionStatus,\n        ]);\n\n        switch (submission_status) {\n            case submission_status_code.selecting: {\n                return (\n                    <CountrySelector\n                        handleSelectionNext={handleSelectionNext}\n                        is_from_external={is_from_external}\n                        mismatch_status={mismatch_status}\n                    />\n                );\n            }\n\n            case submission_status_code.submitting: {\n                switch (submission_service) {\n                    case service_code.idv:\n                        return should_show_mismatch_form ? (\n                            <IdvFailed\n                                account_settings={account_settings}\n                                getChangeableFields={getChangeableFields}\n                                mismatch_status={mismatch_status}\n                                residence_list={residence_list}\n                                handleSubmit={handleViewComplete}\n                                latest_status={identity_last_attempt}\n                                selected_country={selected_country}\n                                handleSelectionNext={handleSelectionNext}\n                                report_available={!!idv?.report_available}\n                            />\n                        ) : (\n                            <IdvDocumentSubmit\n                                handleSelectionNext={handleSelectionNext}\n                                handleViewComplete={handleViewComplete}\n                                handleBack={handleBack}\n                                selected_country={selected_country}\n                            />\n                        );\n                    case service_code.onfido: {\n                        const country_code = selected_country.value;\n                        const doc_obj = selected_country.identity.services.onfido.documents_supported;\n                        const documents_supported = Object.keys(doc_obj).map(d => doc_obj[d].display_name);\n                        return (\n                            <OnfidoSdkViewContainer\n                                country_code={country_code}\n                                documents_supported={documents_supported}\n                                getChangeableFields={getChangeableFields}\n                                handleViewComplete={handleViewComplete}\n                                height={height}\n                            />\n                        );\n                    }\n                    case service_code.manual:\n                        return (\n                            <Unsupported\n                                country_code={selected_country.value}\n                                is_from_external={is_from_external}\n                                allow_poi_resubmission={allow_poi_resubmission}\n                                handleViewComplete={handleViewComplete}\n                                onfido={onfido}\n                                handleBack={handleBack}\n                                is_resubmission={needs_resubmission}\n                            />\n                        );\n                    default:\n                        return null;\n                }\n            }\n            case submission_status_code.complete: {\n                switch (submission_service) {\n                    case service_code.idv:\n                        return (\n                            <IdvSubmitComplete\n                                is_from_external={is_from_external}\n                                mismatch_status={mismatch_status}\n                                needs_poa={needs_poa}\n                                redirect_button={redirect_button}\n                            />\n                        );\n                    // This will be replaced in the next Manual Upload Project\n                    case service_code.manual:\n                        return (\n                            <UploadComplete\n                                is_from_external={is_from_external}\n                                needs_poa={needs_poa}\n                                redirect_button={redirect_button}\n                                is_manual_upload\n                            />\n                        );\n                    case service_code.onfido:\n                        return (\n                            <UploadComplete\n                                is_from_external={is_from_external}\n                                needs_poa={needs_poa}\n                                redirect_button={redirect_button}\n                            />\n                        );\n                    default:\n                        return null;\n                }\n            }\n            default:\n                return null;\n        }\n    }\n);\n\nexport default POISubmission;\n","import React from 'react';\nimport { useHistory } from 'react-router';\nimport { Button, Loading } from '@deriv/components';\nimport { isEmptyObject, WS, getPlatformRedirect, platforms } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { identity_status_codes, service_code } from './proof-of-identity-utils';\nimport DemoMessage from '../../../Components/demo-message';\nimport ErrorMessage from '../../../Components/error-component';\nimport Expired from '../../../Components/poi/status/expired';\nimport IdvContainer from './idv.jsx';\nimport Limited from '../../../Components/poi/status/limited';\nimport { Localize } from '@deriv/translations';\nimport NotRequired from '../../../Components/poi/status/not-required';\nimport Onfido from './onfido.jsx';\nimport POISubmission from './proof-of-identity-submission.jsx';\nimport Unsupported from '../../../Components/poi/status/unsupported';\nimport UploadComplete from '../../../Components/poi/status/upload-complete';\nimport Verified from '../../../Components/poi/status/verified';\nimport { populateVerificationStatus } from '../Helpers/verification';\n\nconst ProofOfIdentityContainer = observer(\n    ({ height, is_from_external, onStateChange, getChangeableFields, updateAccountStatus }) => {\n        const history = useHistory();\n        const [api_error, setAPIError] = React.useState();\n        const [has_require_submission, setHasRequireSubmission] = React.useState(false);\n        const [residence_list, setResidenceList] = React.useState([]);\n        const [is_status_loading, setStatusLoading] = React.useState(true);\n\n        const { client, common, notifications } = useStore();\n\n        const {\n            account_settings,\n            account_status,\n            fetchResidenceList,\n            is_switching,\n            is_high_risk,\n            is_withdrawal_lock,\n            should_allow_authentication,\n            is_virtual,\n        } = client;\n        const { app_routing_history, routeBackInApp, is_language_changing } = common;\n        const { refreshNotifications } = notifications;\n\n        const from_platform = getPlatformRedirect(app_routing_history);\n\n        const should_show_redirect_btn = Object.keys(platforms).includes(from_platform?.ref);\n\n        const routeBackTo = redirect_route => routeBackInApp(history, [redirect_route]);\n        const handleRequireSubmission = () => setHasRequireSubmission(true);\n        const country_code = account_settings?.citizen || account_settings?.country_code;\n\n        const handleManualSubmit = () => {\n            WS.authorized.getAccountStatus().then(() => {\n                refreshNotifications();\n            });\n        };\n\n        const loadResidenceList = React.useCallback(() => {\n            fetchResidenceList().then(response_residence_list => {\n                if (response_residence_list.error) {\n                    setAPIError(response_residence_list.error);\n                } else {\n                    setResidenceList(response_residence_list.residence_list);\n                }\n            });\n        }, [fetchResidenceList]);\n\n        React.useEffect(() => {\n            if (is_language_changing) {\n                loadResidenceList();\n            }\n        }, [is_language_changing, loadResidenceList]);\n\n        React.useEffect(() => {\n            // only re-mount logic when switching is done\n            if (!is_switching) {\n                setAPIError(null);\n                WS.authorized.getAccountStatus().then(response_account_status => {\n                    if (response_account_status.error) {\n                        setAPIError(response_account_status.error);\n                        setStatusLoading(false);\n                        return;\n                    }\n                    loadResidenceList();\n                    setStatusLoading(false);\n                });\n            }\n        }, [loadResidenceList, is_switching]);\n\n        if (api_error) {\n            return <ErrorMessage error_message={api_error?.message || api_error} />;\n        } else if (is_status_loading || is_switching || isEmptyObject(account_status) || residence_list.length === 0) {\n            /**\n             * Display loader while waiting for the account status and residence list to be populated\n             */\n            return <Loading is_fullscreen={false} />;\n        } else if (is_virtual) {\n            return <DemoMessage />;\n        }\n\n        const verification_status = populateVerificationStatus(account_status);\n        const {\n            identity,\n            idv,\n            allow_poi_resubmission,\n            identity_last_attempt,\n            identity_status,\n            is_age_verified,\n            is_idv_disallowed,\n            manual,\n            needs_poa,\n            onfido,\n            poi_expiring_soon,\n        } = verification_status;\n        const should_ignore_idv = is_high_risk && is_withdrawal_lock;\n\n        if (!should_allow_authentication && !is_age_verified && !poi_expiring_soon) {\n            return <NotRequired />;\n        }\n        const onClickRedirectButton = () => {\n            const platform = platforms[from_platform.ref];\n            const { is_hard_redirect = false, url = '' } = platform ?? {};\n            if (is_hard_redirect) {\n                window.location.href = url;\n                window.sessionStorage.removeItem('config.platform');\n            } else {\n                routeBackTo(from_platform.route);\n            }\n        };\n\n        const redirect_button = should_show_redirect_btn && (\n            <Button primary className='proof-of-identity__redirect' onClick={onClickRedirectButton}>\n                <Localize\n                    i18n_default_text='Back to {{platform_name}}'\n                    values={{ platform_name: from_platform.name }}\n                />\n            </Button>\n        );\n        const should_show_mismatch_form =\n            identity_status != identity_status_codes.verified &&\n            idv.submissions_left > 0 &&\n            [identity_status_codes.rejected, identity_status_codes.suspected, identity_status_codes.expired].includes(\n                idv.status\n            );\n\n        if (\n            identity_status === identity_status_codes.none ||\n            has_require_submission ||\n            allow_poi_resubmission ||\n            should_show_mismatch_form ||\n            poi_expiring_soon\n        ) {\n            return (\n                <POISubmission\n                    account_settings={account_settings}\n                    allow_poi_resubmission={allow_poi_resubmission}\n                    has_require_submission={has_require_submission}\n                    height={height ?? null}\n                    getChangeableFields={getChangeableFields}\n                    identity_last_attempt={identity_last_attempt}\n                    idv={idv}\n                    is_from_external={!!is_from_external}\n                    is_idv_disallowed={is_idv_disallowed || should_ignore_idv}\n                    manual={manual}\n                    needs_poa={needs_poa}\n                    onfido={onfido}\n                    onStateChange={onStateChange}\n                    redirect_button={redirect_button}\n                    refreshNotifications={refreshNotifications}\n                    residence_list={residence_list}\n                    updateAccountStatus={updateAccountStatus}\n                    should_show_mismatch_form={should_show_mismatch_form}\n                />\n            );\n        } else if (\n            !identity_last_attempt ||\n            // Prioritise verified status from back office. How we know this is if there is mismatch between current statuses (Should be refactored)\n\n            (identity_status === identity_status_codes.verified &&\n                identity_status !== identity?.services[identity_last_attempt?.service].status)\n        ) {\n            switch (identity_status) {\n                case identity_status_codes.pending:\n                    return (\n                        <UploadComplete\n                            is_from_external={!!is_from_external}\n                            needs_poa={needs_poa}\n                            redirect_button={redirect_button}\n                            is_manual_upload={manual?.status === 'pending'}\n                        />\n                    );\n                case identity_status_codes.verified:\n                    return (\n                        <Verified\n                            is_from_external={!!is_from_external}\n                            needs_poa={needs_poa}\n                            redirect_button={redirect_button}\n                            service={identity_last_attempt?.service}\n                        />\n                    );\n                case identity_status_codes.expired:\n                    return (\n                        <Expired\n                            is_from_external={!!is_from_external}\n                            redirect_button={redirect_button}\n                            handleRequireSubmission={handleRequireSubmission}\n                        />\n                    );\n                case identity_status_codes.rejected:\n                case identity_status_codes.suspected:\n                    return <Limited handleRequireSubmission={handleRequireSubmission} />;\n                default:\n                    break;\n            }\n        }\n\n        switch (identity_last_attempt.service) {\n            case service_code.idv:\n                return (\n                    <IdvContainer\n                        account_settings={account_settings}\n                        handleRequireSubmission={handleRequireSubmission}\n                        getChangeableFields={getChangeableFields}\n                        idv={idv}\n                        is_from_external={!!is_from_external}\n                        needs_poa={needs_poa}\n                        redirect_button={redirect_button}\n                        residence_list={residence_list}\n                    />\n                );\n            case service_code.onfido:\n                return (\n                    <Onfido\n                        handleRequireSubmission={handleRequireSubmission}\n                        is_from_external={!!is_from_external}\n                        needs_poa={needs_poa}\n                        onfido={onfido}\n                        manual={manual}\n                        redirect_button={redirect_button}\n                        country_code={country_code}\n                        handleViewComplete={handleManualSubmit}\n                    />\n                );\n            case service_code.manual:\n                return (\n                    <Unsupported\n                        manual={manual}\n                        country_code={country_code}\n                        is_from_external={is_from_external}\n                        needs_poa={needs_poa}\n                        redirect_button={redirect_button}\n                        handleRequireSubmission={handleRequireSubmission}\n                        handleViewComplete={handleManualSubmit}\n                        onfido={onfido}\n                    />\n                );\n            default:\n                return null;\n        }\n    }\n);\n\nexport default ProofOfIdentityContainer;\n","import React from 'react';\nimport { Div100vhContainer } from '@deriv/components';\nimport { isDesktop } from '@deriv/shared';\nimport ProofOfAddressContainer from '@deriv/account/src/Sections/Verification/ProofOfAddress/proof-of-address-container';\nimport ProofOfIdentityContainer from '@deriv/account/src/Sections/Verification/ProofOfIdentity/proof-of-identity-container';\nimport { observer, useStore } from '@deriv/stores';\n\ntype TVerificationModalContent = {\n    onFinish: () => void;\n};\n\ntype TItemsState = {\n    body: typeof ProofOfIdentityContainer | typeof ProofOfAddressContainer;\n};\n\nconst VerificationModalContent = observer((props: TVerificationModalContent) => {\n    const [step, setStep] = React.useState(0);\n    const [form_error, setFormError] = React.useState('');\n    const state_index = step;\n    let is_mounted = React.useRef(true).current;\n\n    const { client, notifications } = useStore();\n\n    const { authentication_status, fetchStatesList } = client;\n    const { refreshNotifications } = notifications;\n\n    const poi_config: TItemsState = {\n        body: ProofOfIdentityContainer,\n    };\n\n    const poa_config: TItemsState = {\n        body: ProofOfAddressContainer,\n    };\n\n    const should_show_poi = !['pending', 'verified'].includes(authentication_status.identity_status);\n    const should_show_poa = !['pending', 'verified'].includes(authentication_status.document_status);\n\n    const verification_configs = [...(should_show_poi ? [poi_config] : []), ...(should_show_poa ? [poa_config] : [])];\n\n    const [items, setItems] = React.useState<TItemsState[]>(verification_configs);\n\n    const clearError = () => {\n        setFormError('');\n    };\n\n    React.useEffect(() => {\n        refreshNotifications();\n    }, [items, refreshNotifications]);\n\n    React.useEffect(() => {\n        fetchStatesList();\n    }, [fetchStatesList]);\n\n    const unmount = () => {\n        is_mounted = false;\n        props.onFinish();\n    };\n\n    const saveFormData = () => {\n        if (!is_mounted) return; // avoiding state update on unmounted component\n        const cloned_items: TItemsState[] = [...items];\n        setItems(cloned_items);\n    };\n\n    const nextStep = () => {\n        clearError();\n        if (step + 1 < items.length) {\n            saveFormData();\n            setStep(step + 1);\n        } else unmount();\n    };\n\n    const prevStep = () => {\n        if (step - 1 >= 0) {\n            setStep(step - 1);\n            setFormError('');\n        } else unmount();\n    };\n\n    const getCurrent = (key?: keyof TItemsState) => {\n        return key ? items[state_index][key] : items[state_index];\n    };\n\n    const onStateChange = () => {\n        saveFormData();\n        nextStep();\n    };\n\n    const BodyComponent = getCurrent('body');\n\n    return (\n        <Div100vhContainer\n            className='proof-of-identity'\n            id='verification_modal_content'\n            is_disabled={isDesktop()}\n            height_offset='40px'\n        >\n            <div className='proof-of-identity__main-container' data-testid='dt_verification_modal_body'>\n                <BodyComponent\n                    index={state_index}\n                    onSubmit={nextStep}\n                    onStateChange={onStateChange}\n                    height='auto'\n                    onCancel={prevStep}\n                    onSave={saveFormData}\n                    form_error={form_error}\n                />\n            </div>\n        </Div100vhContainer>\n    );\n});\n\nexport default VerificationModalContent;\n","import verificationModal from './verification-modal';\n\nexport default verificationModal;\n","import React from 'react';\nimport { DesktopWrapper, MobileDialog, MobileWrapper, Modal, UILoader } from '@deriv/components';\nimport { observer, useStore } from '@deriv/stores';\nimport VerificationModalContent from './verification-modal-content';\n\nimport './verification-modal.scss';\nimport { localize } from '@deriv/translations';\n\nconst VerificationModal = observer(() => {\n    const { ui, client } = useStore();\n    const { authentication_status } = client;\n    const { is_verification_modal_visible, setIsVerificationModalVisible, setIsVerificationSubmitted } = ui;\n\n    const should_show_poi = !['pending', 'verified'].includes(authentication_status.identity_status);\n    const should_show_poa = !['pending', 'verified'].includes(authentication_status.document_status);\n\n    let modal_title;\n\n    if (should_show_poi && should_show_poa) {\n        modal_title = localize('Submit your proof of identity and address');\n    } else if (should_show_poi && !should_show_poa) {\n        modal_title = localize('Submit your proof of identity');\n    } else {\n        modal_title = localize('Submit your proof of address');\n    }\n\n    return (\n        <React.Suspense fallback={<UILoader />}>\n            <DesktopWrapper>\n                <Modal\n                    className='verification-modal'\n                    is_open={is_verification_modal_visible}\n                    title={modal_title}\n                    toggleModal={() => setIsVerificationModalVisible(false)}\n                    height='70rem'\n                    width='99.6rem'\n                    exit_classname='verification-modal--custom-exit'\n                >\n                    <VerificationModalContent\n                        onFinish={() => {\n                            setIsVerificationModalVisible(false);\n                            setIsVerificationSubmitted(true);\n                        }}\n                    />\n                </Modal>\n            </DesktopWrapper>\n            <MobileWrapper>\n                <MobileDialog\n                    portal_element_id='deriv_app'\n                    title={modal_title}\n                    wrapper_classname='verification-modal'\n                    visible={is_verification_modal_visible}\n                    onClose={() => setIsVerificationModalVisible(false)}\n                >\n                    <VerificationModalContent\n                        onFinish={() => {\n                            setIsVerificationModalVisible(false);\n                            setIsVerificationSubmitted(true);\n                        }}\n                    />\n                </MobileDialog>\n            </MobileWrapper>\n        </React.Suspense>\n    );\n});\n\nexport default VerificationModal;\n","import DocumentUploader from '@binary-com/binary-document-uploader';\nimport { useMutation } from '@deriv/api';\nimport { WS, compressImageFiles, readFiles } from '@deriv/shared';\nimport { useCallback, useMemo, useState } from 'react';\n\ntype TSettingsPayload = Partial<Parameters<ReturnType<typeof useMutation<'document_upload'>>['mutate']>[0]['payload']>;\n\ntype TFile =\n    | Partial<\n          TSettingsPayload & {\n              filename: File['name'];\n              buffer: FileReader['result'];\n              documentFormat: string;\n              file_size: File['size'];\n          }\n      >\n    | {\n          message: string;\n      };\n\ntype TUploaderResponse = {\n    [key: string]: unknown;\n    message?: string;\n    warning?: string;\n};\nconst fileReadErrorMessage = (filename: string) => {\n    return `Unable to read file ${filename}`;\n};\n\n/**\n * Custom hook to handle file uploading with the binary-document-uploader package\n */\nconst useFileUploader = () => {\n    const [error, setError] = useState<unknown>(null);\n    const uploader_instance = useMemo(() => new DocumentUploader({ connection: WS.getSocket() }), []);\n\n    const upload = useCallback(\n        async (files: File[], settings?: TSettingsPayload, onError?: () => void) => {\n            if (!files?.length) return Promise.reject(new Error('No files selected'));\n\n            return new Promise<{\n                message?: string;\n                warning?: string;\n                [key: string]: unknown;\n            }>((resolve, reject) => {\n                let is_any_file_error = false;\n                let file_error: string | null = null;\n\n                (async () => {\n                    try {\n                        const compressed_files: Blob[] = await compressImageFiles(files);\n                        const processed_files: TFile[] = await readFiles(\n                            compressed_files,\n                            fileReadErrorMessage,\n                            settings ?? {}\n                        );\n                        processed_files.forEach(file => {\n                            if (file && 'message' in file) {\n                                is_any_file_error = true;\n                                file_error = file.message;\n                                reject(file.message);\n                            }\n                        });\n                        if (is_any_file_error || !processed_files.length) {\n                            onError?.();\n                            return reject(new Error(file_error ?? 'Something went wrong!')); // don't start submitting files until all front-end validation checks pass\n                        }\n\n                        // send files\n                        const response: TUploaderResponse = await uploader_instance.upload(processed_files[0]);\n                        resolve(response);\n                    } catch (error: unknown) {\n                        setError(error);\n                        reject(error);\n                    }\n                })();\n            });\n        },\n        [uploader_instance]\n    );\n\n    return {\n        /**\n         * Error message from the file uploader\n         */\n        error,\n        /**\n         * Uploads a file to the server with the binary-document-uploader package after compressing and reading the file with meta data\n         */\n        upload,\n        /**\n         * Instance of the binary-document-uploader\n         */\n        uploader_instance,\n    };\n};\n\nexport default useFileUploader;\n","import React from 'react';\nimport { useMutation } from '@deriv/api';\nimport { TSocketRequestPayload } from '@deriv/api/types';\n\ntype TNotificationEventPayload = TSocketRequestPayload<'notification_event'>['payload'];\n\n/**\n * Hook to send notification event to the server\n * @name useNotificationEvent\n * @returns response, mutation function and other properties from useRequest hook\n */\nconst useNotificationEvent = () => {\n    const { data, mutate, ...rest } = useMutation('notification_event');\n\n    /**\n     * Function to send notification event to the server\n     * @param payload - notification event payload\n     */\n    const send = React.useCallback((payload: TNotificationEventPayload) => mutate({ payload }), [mutate]);\n\n    return {\n        notification_event: data?.notification_event,\n        send,\n        ...rest,\n    };\n};\n\nexport default useNotificationEvent;\n","import { useQuery } from '@deriv/api';\nimport { TSocketRequestQueryOptions } from '@deriv/api/types';\n\n/** A custom hook that gets the residence list. */\nconst useResidenceList = (options?: TSocketRequestQueryOptions<'residence_list'>) => {\n    const { data, ...residence_list_rest } = useQuery('residence_list', {\n        options: {\n            staleTime: Infinity,\n            ...options,\n        },\n    });\n\n    return {\n        /** The residence list */\n        data: data?.residence_list ?? [],\n        ...residence_list_rest,\n    };\n};\n\nexport default useResidenceList;\n","import { useQuery } from '@deriv/api';\nimport { TSocketRequestPayload } from '@deriv/api/types';\n\ntype TServiceTokenPayload = TSocketRequestPayload<'service_token'>['payload'];\n\n/**\n * Hook to get the service token for using 3rd party SDK\n * @name useServiceToken\n * @param payload to be sent while making the API call\n * @returns response and its status\n */\nconst useServiceToken = (payload: TServiceTokenPayload) => {\n    const { data, ...rest } = useQuery('service_token', {\n        payload,\n        options: { retry: 3, enabled: Boolean(payload) },\n    });\n\n    return {\n        service_token: data?.service_token,\n        ...rest,\n    };\n};\n\nexport default useServiceToken;\n"],"names":["_ref","children","has_side_note","side_note","side_note_position","type","isDesktop","useDevice","_jsxs","className","clsx","_jsx","Text","color","size","React","as","weight","Localize","i18n_default_text","description","subtitle","title","title_text_size","title_as_class","replace","toLowerCase","Fragment","name","warn","rest","_objectWithoutProperties","_excluded","Field","_ref2","field","form","errors","touched","setFieldTouched","Input","_objectSpread","autoComplete","error","undefined","onChange","e","portal_id","setFieldValue","meta","DateOfBirthPicker","_ref3","target","value","toMoment","format","getEmploymentStatusList","text","localize","required","is_disabled","fieldFocused","useTranslations","handleBlur","handleChange","Dropdown","placeholder","is_align_text_left","list","_e$target","disabled","SelectNative","label","list_items","setIsTaxResidencePopoverOpen","setIsTinPopoverOpen","is_tax_residence_popover_open","data","residence_list","useResidenceList","Autocomplete","onItemSelection","item","use_text","data_testid","onClick","stopPropagation","Popover","alignment","icon","message","zIndex","disable_message_icon","is_open","is_tin_popover_open","FormInputField","tagName","components","rel","href","_selected_country$ide","_selected_country$ide2","_values$document_type3","_values$document_type5","class_name","selected_country","hide_hint","is_for_real_account_signup_modal","is_for_mt5","document_list","setDocumentList","selected_doc","setSelectedDoc","documents_supported","document_data","identity","services","idv","values","useFormikContext","default_document","id","example_format","IDV_NOT_APPLICABLE_OPTION","getIDVNotApplicableOption","document_types","Object","keys","length","new_document_list","map","key","_selected_country$val","display_name","new_display_name","additional_document_example_format","getDocumentData","_document_data$key$ad","_document_data$key$ad2","additional","resetDocumentItemSelected","getDocument","_document_list$find","find","d","onKeyUp","document_name","_values$document_type","_values$document_type2","_current_input","document_type","current_input","includes","formatInput","bindDocumentData","onBlur","selected_document","_values$document_type4","bottom_label","getExampleFormat","document_number","error_message","generatePlaceholderText","onPaste","preventEmptyClipboardPaste","_ref4","_values$document_type6","_values$document_type7","_values$document_type8","additional_document_placeholder","document_additional","account_opening_reason_list","is_modal","list_portal_id","props","inline_note_text","is_virtual","is_eu_user","is_svg","is_rendered_for_idv","editable_fields","has_real_account","is_fully_authenticated","closeRealAccountSignup","salutation_list","is_rendered_for_onfido","is_qualified_for_poa","states_list","no_confirmation_needed","mismatch_status","is_svg_only","getNameAndDobLabels","is_asterisk_needed","first_name_label","last_name_label","dob_label","is_rendered_for_idv_or_onfido","getFieldHint","field_name","poa_clarification_message","is_confirmation_checkbox_disabled","verifyFields","some","InlineMessage","InlineNoteWithIcon","font_size","FormBodySection","align","Link","to","routes","personal_details","FormSubHeader","event","_event$target","_event$target2","RadioGroup","selected","salutation","onToggle","persist","Item","isFieldImmutable","has_error","hint","first_name","last_name","DateOfBirthField","date_of_birth","maxLength","address_line_1","address_line_2","address_city","address_state","address_postcode","PlaceOfBirthField","citizen","should_hide_disabled_options","PhoneField","phone","AccountOpeningReasonField","account_opening_reason","Checkbox","confirmation_checkbox","label_font_size","_ref5","validPhone","_ref6","_ref7","_ref8","full_width","is_disabled_for_mobile","Div100vhContainer","height_offset","Icon","line_height","getOnfidoPhrases","country_select","alert_dropdown","country_not_found","alert","another_doc","button_primary","search","accessibility","input_placeholder","cross_device_checklist","info","list_item_doc_multiple","list_item_doc_one","list_item_selfie","cross_device_error_desktop","cross_device_error_restart","cross_device_intro","list_accessibility","list_item_finish","list_item_open_link","list_item_send_phone","cross_device_return","body","doc_confirmation","blur_detail","blur_title","crop_detail","crop_title","glare_detail","glare_title","no_doc_detail","no_doc_title","body_id","body_image_medium","body_image_poor","body_license","body_passport","body_permit","body_tax_letter","button_close","button_primary_redo","button_primary_upload","button_primary_upload_anyway","button_secondary_redo","button_zoom","image_accessibility","doc_select","button_id","button_id_detail","button_license","button_license_detail","button_passport","button_passport_detail","button_permit","button_permit_detail","extra_no_mobile","subtitle_poa","title_poa","doc_submit","button_link_upload","title_id_back","title_id_front","title_license_back","title_license_front","title_passport","title_permit_back","title_permit_front","error_unsupported_browser","subtitle_android","subtitle_ios","title_android","title_ios","generic","close_sdk_screen","dismiss_alert","back","close","interrupted_flow_error","instruction","invalid_size","invalid_type","lazy_loading","multiple_faces","no_face","request_error","sms_failed","sms_overuse","unsupported_file","lazy_load_placeholder","loading","get_link","alert_wrong_number","button_copied","button_copy","button_submit","info_qr_how","info_qr_how_list_item_camera","info_qr_how_list_item_download","link_divider","link_qr","link_sms","link_url","loader_sending","number_field_input_placeholder","number_field_label","subtitle_qr","subtitle_sms","subtitle_url","url_field_label","linked_computer","list_item_desktop_open","list_item_sent_by_you","mobilePhrases","photo_upload","body_id_back","body_id_front","body_license_back","body_license_front","body_selfie","selfie_capture","camera_inactive","detail","camera_not_working","upload_guide","outro","permission_recovery","list_header_cam","list_item_action_cam","list_item_how_to_cam","subtitle_cam","title_cam","permission","body_cam","button_primary_cam","body_bank_statement","body_benefits_letter","body_bill","body_government_letter","button_take_photo","button_upload","title_selfie","detail_no_fallback","timeout","button_accessibility","frame_accessibility","selfie_confirmation","selfie_intro","list_item_face_forward","list_item_no_glasses","sms_sent","info_link_expire","info_link_window","link","subtitle_minutes","switch_phone","info_link_refresh","image_detail_blur_alt","image_detail_blur_label","image_detail_cutoff_alt","image_detail_cutoff_label","image_detail_glare_alt","image_detail_glare_label","image_detail_good_alt","image_detail_good_label","LANGUAGE_CODES","ID","EN","getIDVDocuments","country_code","ke","alien_card","national_id","passport","za","national_id_no_photo","ng","bvn","cac","drivers_license","nin","nin_slip","tin","voter_id","gh","ssnit","br","cpf","ug","zw","cl","ar","dni","mx","curp","nik","in","aadhaar","epic","pan","pe","vn","regex","regex_string","flags","shouldShowIdentityInformation","_account_status$authe","_account_status$statu","_country$identity","account_status","real_account_signup_target","country","maltainvest","authentication","should_skip_idv","status","AUTH_STATUS_CODES","VERIFIED","Boolean","is_country_supported","DEFAULT_CONFIG","IDV_DOCUMENT_DATA","_IDV_DOCUMENT_DATA$do","_e$clipboardData","clipboardData","window","getData","preventDefault","getRegex","target_regex","output_regex","r","RegExp","arguments","makeSettingsRequest","changeable_fields","request","filterObjProperties","trim","validateName","validLength","min","max","validName","isDocumentTypeValid","isAdditionalDocumentValid","additional_document_value","documentAdditionalError","document_additional_config","_document_additional_","_document_additional_2","test","_document_type$additi","isDocumentNumberValid","is_document_number_invalid","format_regex","shouldHideHelperImage","document_id","isServerError","convertAlpha2toAlpha3","countries","toUpperCase","convertAlpha3toAlpha2","getOnfidoSupportedLocaleCode","language_code","code","split","getIDVDocumentType","idv_latest_attempt","residence","_residence$identity","validate","fn","arr","err_msg","forEach","IDV_ERROR_STATUS","DobMismatch","NameMismatch","_useQuery","useQuery","residence_list_rest","modified_residence_list","useMemo","IconMessageContent","Button","has_effect","primary","NotRequired","LeaveConfirmMessage","leave","isMobile","secondary","large","TransitionBlockerWithRouter","withRouter","dirty","onDirty","history","useHistory","location","useLocation","showModal","setShowModal","nextLocation","setNextLocation","pathname","unblock","block","push","_Fragment","Modal","small","toggleModal","Body","FormikConsumer","formik","submitCount","API_ERROR_CODES","freeze","DUPLICATE_ACCOUNT","CLAIMED_DOCUMENT","DUPLICATE_DOCUMENT","UploadMessage","onFileDrop","onError","document_files","setDocumentFiles","file_error","setFileError","FileDropzone","accept","supported_filetypes","filename_limit","hover_message","max_size","max_document_size","multiple","onDropAccepted","files","onDropRejected","is_file_too_large","file","supported_files","filter","each_file","getSupportedFiles","validation_error_message","removeFile","useKycAuthStatus","payload","client","useStore","is_authorize","options","enabled","kyc_auth_status_rest","kyc_auth_status","getFileUploaderDescriptions","page","is_eu","proof_of_income_descriptions","descriptions","proof_of_address_descriptions","expiry_in_months","getSupportedProofOfAddressDocuments","examples","files_description","country_of_residence","isLoading","address","supported_documents","doc_list","doc","Loading","is_fullscreen","FileUploader","ScrollbarsContainer","scroll_offset","isFullHeight","height_unit","ThemedScrollbars","is_bypassed","height","CommonMistakeExamplePartials","image","LegacyLossIcon","iconSize","role","CommonMistakeExamples","example_images","DerivLightIcDocumentNameMismatchIcon","ref","DerivLightIcDocumentAddressMismatchIcon","DerivLightIcOldIssuedDocumentMoreThan6Icon","DerivLightIcOldIssuedDocumentMoreThan12Icon","DerivLightIcBlurryDocumentIcon","DerivLightIcCroppedDocumentIcon","DerivLightIcEnvelopeIcon","getExampleImagesConfig","config","observer","setOffset","is_for_cfd_modal","is_resubmit","form_state","handleSubmit","isSubmitting","isValid","file_selection_error","setFileSelectionError","account_settings","getChangeableFields","poa_uploader_files_descriptions","Form","noValidate","onSubmit","FormBody","msg","PersonalDetailsForm","FileUploaderContainer","FilesDescription","Footer","has_separator","FormSubmitButton","is_loading","FormFooter","is_btn_loading","is_submit_success","ProgressBar","is_active","step","setStep","isNextBtnDisabled","LabelPairedArrowLeftMdBoldIcon","prev_step","onSubmitForCFDModal","notifications","fetchResidenceList","fetchStatesList","addNotificationMessageByKey","addNotificationByKey","removeNotificationMessage","removeNotificationByKey","setIsLoading","form_values","setFormValues","api_initial_load_error","setAPIInitialLoadError","setFormState","should_allow_submit","should_show_form","should_scroll_to_top","setShouldScrollToTop","upload","useFileUploader","then","async","Promise","all","WS","wait","_account_settings$add","_account_settings$add2","_account_settings$add3","_account_settings$add4","_account_settings$add5","_el$parentElement","el","document","querySelector","target_element","parentElement","scrollIntoView","behavior","showForm","form_initial_values","LoadErrorMessage","current_value","getLocation","mobile_scroll_offset","Formik","initialValues","setStatus","setSubmitting","settings_values","setSettings","get_settings_response","authorized","storage","getSettings","get_settings","selected_doc_type","api_response","warning","get_account_status_response","getAccountStatus","get_account_status","needs_verification","needs_poi","validateValues","val","address_line_1_validation_result","validAddress","is_required","is_ok","address_line_2_validation_result","validation_letter_symbol_message","validLetterSymbol","validPostCode","max_number","interpolation","escapeValue","enableReinitialize","validateOnMount","LeaveConfirm","POAMobileLayout","POADesktopLayout","button_label","route","ButtonLink","redirect_button","is_redirected_from_platform","isNavigationFromP2P","isNavigationFromDerivGO","RouteButton","proof_of_identity","traders_hub","button_text","ContinueTradingButton","trade","PoiButton","Verified","populateVerificationStatus","attempts","income","identity_status","document_status","income_status","allow_document_upload","allow_poi_resubmission","allow_poa_resubmission","allow_poinc_resubmission","is_age_verified","is_idv_disallowed","poa_address_mismatch","poi_expiring_soon","poa_authenticated_with_idv","poa_authenticated_with_idv_photo","poa_expiring_soon","poi_acknowledged","has_poa","has_poi","has_poinc","has_submitted_poa","needs_poa","needs_poinc","onfido","manual","identity_last_attempt","latest","has_attempted_idv","h","service","_from_platform$ref","authentication_status","setAuthenticationStatus","resubmit_poa","has_submitted_duplicate_poa","common","ui","app_routing_history","has_restricted_mt5_account","is_switching","is_verification_modal_visible","refreshNotifications","mt5_poa_status","localStorage","getItem","response","removeItem","handleResubmit","onSubmitDocument","from_platform","getPlatformRedirect","should_show_redirect_btn","platforms","should_allow_resubmit","cashier_p2p","_platforms","url","sessionStorage","platform_name","Unverified","handleDuplicatePOASubmission","Submitted","ProofOfAddressForm","getDocumentStatus","NONE","PENDING","EXPIRED","Expired","REJECTED","SUSPECTED","identity_status_codes","none","pending","rejected","verified","expired","suspected","submission_status_code","service_code","has_button","has_any_real_account","toggleAccountsDialog","toggleShouldShowRealAccountsList","IconWithMessage","header","redirect_label","redirectOnClick","should_show_refresh","refresh_message","PageError","messages","redirect_urls","redirect_labels","buttonOnClick","reload","handleRequireSubmission","is_from_external","setSubmissionStatus","POIContext","DerivLightExclamationPoiIcon","DEFAULT_BTN_TEXT","custom_text","proof_of_address","IdvSubmitComplete","is_already_attempted","is_mismatch_error","NameDobMismatch","is_expired_or_failed_error","Failed","poa_button","PoaButton","DerivLightWaitingPoiIcon","getHeaderText","header_Text","DerivLightApprovedPoiIcon","submissions_left","last_rejected","formatIDVError","Number","IdvLimited","IdvVerified","POILimited","Chat","open","OnfidoNotRequired","UploadComplete","is_manual_upload","index","text_size","message_list","onContinue","ListItem","getOnfidoError","idx","rejected_reasons","IconMessageList","fileReadErrorMessage","filename","uploadFile","getSocket","settings","resolve","reject","uploader","DocumentUploader","connection","is_file_error","compressImageFiles","files_to_process","readFiles","processed_files","total_to_upload","catch","console","GoToPersonalDetailsButton","anchor","from","from_string","anchor_string","has_invalid_postal_code","handleOnClick","GENERIC_ERROR_MESSAGE","DUPLICATE_ACCOUNT_ERROR_MESSAGE","onKeyDown","CLAIMED_DOCUMENT_ERROR_MESSAGE","generateIDVError","is_document_upload_required","latest_status","chosen_country","required_fields","side_note_image","DerivLightNamePoiIcon","width","failure_message","DerivLightDobPoiIcon","DerivLightNameDobPoiIcon","getIDVError","onFormConfirm","checked","setChecked","rest_state","setRestState","show_form","api_error","visible_settings","initializeFormValues","_extends","_objectDestructuringEmpty","error_msg","_data$error","_response$get_setting","setTimeout","isEmptyObject","removeEmptyPropertiesFromObject","HintBox","is_danger","is_onfido_disabled","is_onfido_container_hidden","onfido_element_id","is_confirmed","is_onfido_initialized","is_status_message_visible","setIsStatusMessageVisible","transition_in_timeout_ref","transition_out_timeout_ref","current","clearTimeout","CSSTransition","appear","exit","classNames","unmountOnExit","is_info","OnfidoSdkViewContainer","_service_token$onfido3","handleViewComplete","is_default_enabled","setAPIError","missing_personal_details","setMissingPersonalDetails","setIsOnfidoDisabled","setIsConfirmed","setIsOnfidoInitialized","is_onfido_loaded","setIsOnfidoLoaded","useSettings","send","isSuccess","isNotified","useNotificationEvent","current_language","onfido_country_code","token_country_code","service_token","isError","useServiceToken","onfido_init","onfido_documents","Array","isArray","component_to_load","onComplete","_onfido_init$current","tearDown","document_ids","_data","category","args","documents","initOnfido","Onfido","init","containerId","language","locale","phrases","token","useModal","useMemoryHistory","steps","documentTypes","driving_licence","national_identity_card","hideCountrySelection","err","_message","loadOnfidoSdkScript","_document$getElementB","_document$getElementB2","getElementById","remove","script_node","createElement","link_node","src","appendChild","addEventListener","onConfirm","useCallback","_service_token$onfido","_service_token$onfido2","handleError","MissingPersonalDetails","ErrorMessage","PoiConfirmWithExampleFormContainer","OnfidoSdkView","displayName","ROOT_CLASS","DOCUMENT_TYPES","PAGE_TYPE","SELFIE_DOCUMENT","pageType","date_field","min_date","add","DatePicker","date_format","display_format","start_date","readOnly","DROPZONE_ERRORS","GENERAL","Message","medium","Preview","has_frame","background_url","setBackgroundUrl","URL","createObjectURL","style","backgroundImage","indexOf","is_full","setImage","ValidationErrorMessage","_image$errors","_value$errors","preview_single","handleAccept","handleReject","_files$0$errors","noClick","setInitialValues","fields","checkIsEmpty","validateFields","icons","IconsItem","initial_values","goToCards","documents_title","is_expiry_date_required","fields_title","is_form_touched","is_form_empty","_fields$key","InputField","Uploader","goBack","setDocuments","selfie","setSelfie","is_selfie_upload","setIsSelfieUpload","SelfieUpload","DocumentsUpload","STATUS","IS_UPLOADING","IS_COMPLETED","IS_FAILED","onClickBack","root_class","country_code_key","handleComplete","is_onfido_supported","handlePOIforMT5Complete","response_error","setError","is_any_failed","docs","details","files_length","file_to_upload_index","results","uploadNext","_data$expiry_date","lifetime_valid","expiration_date","expiry_date","page_type","document_issuing_country","IS_DUPLICATE_UPLOAD","is_slow_loading","POIManualUploadFailed","OnfidoUpload","onfido_name","CardDetails","CardWithArrow","Documents","toggleDetail","_item$card","Card","renderContent","card","handleBack","is_resubmission","setDetail","getDocumentIndex","Limited","has_nimc","checkNimcStep","DetailComponent","submission_errors","formatOnfidoError","Unsupported","RejectedReasons","_IDV_ERROR_STATUS$mis","_IDV_ERROR_STATUS$mis2","handleSelectionNext","setSelectedCountry","country_list","updateSelectedCountry","country_name","matching_country","c","failed_message","country_input","submitHandler","shouldSkipIdv","needs_additional_document","_get_settings$error$m","_get_settings$error","submit_data","identity_verification_document_add","formatIDVFormValues","idv_update_response","_idv_update_response$","_idv_update_response$2","_idv_update_response$3","is_button_disabled","IDVForm","_rest_state$form_init","_rest_state$form_init2","setIsAlreadyAttempted","idv_failure","setIdvFailure","_residence_list$find","residence_data","_error_config$require","error_config","form_data","initial_form_values","sample_image","_e$error","prev_state","issuing_country","_idv_failure$required","_status$error_msg","is_idv_skipping","POISubmission","has_require_submission","onStateChange","should_show_mismatch_form","submission_service","setSubmissionService","submission_status","is_high_risk","risk_classification","should_show_manual","idv_submissions_left","onfido_submissions_left","is_idv_supported","getCountryFromResidence","needs_resubmission","is_report_not_available","isIDVReportNotAvailable","setIdentityService","CountrySelector","IdvFailed","report_available","IdvDocumentSubmit","doc_obj","ProofOfIdentityContainer","updateAccountStatus","setHasRequireSubmission","setResidenceList","is_status_loading","setStatusLoading","is_withdrawal_lock","should_allow_authentication","routeBackInApp","is_language_changing","handleManualSubmit","loadResidenceList","response_residence_list","response_account_status","DemoMessage","verification_status","should_ignore_idv","onClickRedirectButton","platform","is_hard_redirect","redirect_route","IdvContainer","form_error","setFormError","state_index","is_mounted","poi_config","poa_config","ProofOfAddressContainer","verification_configs","items","setItems","unmount","onFinish","saveFormData","cloned_items","nextStep","BodyComponent","onCancel","prevStep","onSave","setIsVerificationModalVisible","setIsVerificationSubmitted","should_show_poi","should_show_poa","modal_title","fallback","UILoader","DesktopWrapper","exit_classname","VerificationModalContent","MobileWrapper","MobileDialog","portal_element_id","wrapper_classname","visible","onClose","useState","uploader_instance","is_any_file_error","compressed_files","_file_error","Error","_useMutation","useMutation","mutate","notification_event","_data$residence_list","staleTime","Infinity","retry"],"sourceRoot":""}